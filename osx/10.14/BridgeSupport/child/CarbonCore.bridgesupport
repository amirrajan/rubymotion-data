<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='AFPAlternateAddress' type64='{AFPAlternateAddress=&quot;fVersion&quot;C&quot;fAddressCount&quot;C&quot;fAddressList&quot;[1C]}'>
<field declared_type64='UInt8' name='fVersion' type64='C'/>
<field declared_type64='UInt8' name='fAddressCount' type64='C'/>
<field declared_type64='UInt8*' name='fAddressList' type64='[1C]'/>
</struct>
<struct name='AFPTagData' type64='{AFPTagData=&quot;fLength&quot;C&quot;fType&quot;C&quot;fData&quot;[1C]}'>
<field declared_type64='UInt8' name='fLength' type64='C'/>
<field declared_type64='UInt8' name='fType' type64='C'/>
<field declared_type64='UInt8*' name='fData' type64='[1C]'/>
</struct>
<struct name='AFPVolMountInfo' type64='{AFPVolMountInfo=&quot;length&quot;s&quot;media&quot;I&quot;flags&quot;s&quot;nbpInterval&quot;c&quot;nbpCount&quot;c&quot;uamType&quot;s&quot;zoneNameOffset&quot;s&quot;serverNameOffset&quot;s&quot;volNameOffset&quot;s&quot;userNameOffset&quot;s&quot;userPasswordOffset&quot;s&quot;volPasswordOffset&quot;s&quot;AFPData&quot;[144c]}'>
<field declared_type64='SInt16' name='length' type64='s'/>
<field declared_type64='VolumeType' name='media' type64='I'/>
<field declared_type64='SInt16' name='flags' type64='s'/>
<field declared_type64='SInt8' name='nbpInterval' type64='c'/>
<field declared_type64='SInt8' name='nbpCount' type64='c'/>
<field declared_type64='SInt16' name='uamType' type64='s'/>
<field declared_type64='SInt16' name='zoneNameOffset' type64='s'/>
<field declared_type64='SInt16' name='serverNameOffset' type64='s'/>
<field declared_type64='SInt16' name='volNameOffset' type64='s'/>
<field declared_type64='SInt16' name='userNameOffset' type64='s'/>
<field declared_type64='SInt16' name='userPasswordOffset' type64='s'/>
<field declared_type64='SInt16' name='volPasswordOffset' type64='s'/>
<field declared_type64='char*' name='AFPData' type64='[144c]'/>
</struct>
<struct name='AFPXVolMountInfo' type64='{AFPXVolMountInfo=&quot;length&quot;s&quot;media&quot;I&quot;flags&quot;s&quot;nbpInterval&quot;c&quot;nbpCount&quot;c&quot;uamType&quot;s&quot;zoneNameOffset&quot;s&quot;serverNameOffset&quot;s&quot;volNameOffset&quot;s&quot;userNameOffset&quot;s&quot;userPasswordOffset&quot;s&quot;volPasswordOffset&quot;s&quot;extendedFlags&quot;s&quot;uamNameOffset&quot;s&quot;alternateAddressOffset&quot;s&quot;AFPData&quot;[176c]}'>
<field declared_type64='SInt16' name='length' type64='s'/>
<field declared_type64='VolumeType' name='media' type64='I'/>
<field declared_type64='SInt16' name='flags' type64='s'/>
<field declared_type64='SInt8' name='nbpInterval' type64='c'/>
<field declared_type64='SInt8' name='nbpCount' type64='c'/>
<field declared_type64='SInt16' name='uamType' type64='s'/>
<field declared_type64='SInt16' name='zoneNameOffset' type64='s'/>
<field declared_type64='SInt16' name='serverNameOffset' type64='s'/>
<field declared_type64='SInt16' name='volNameOffset' type64='s'/>
<field declared_type64='SInt16' name='userNameOffset' type64='s'/>
<field declared_type64='SInt16' name='userPasswordOffset' type64='s'/>
<field declared_type64='SInt16' name='volPasswordOffset' type64='s'/>
<field declared_type64='SInt16' name='extendedFlags' type64='s'/>
<field declared_type64='SInt16' name='uamNameOffset' type64='s'/>
<field declared_type64='SInt16' name='alternateAddressOffset' type64='s'/>
<field declared_type64='char*' name='AFPData' type64='[176c]'/>
</struct>
<struct name='AIFFLoop' type64='{AIFFLoop=&quot;playMode&quot;s&quot;beginLoop&quot;s&quot;endLoop&quot;s}'>
<field declared_type64='SInt16' name='playMode' type64='s'/>
<field declared_type64='MarkerIdType' name='beginLoop' type64='s'/>
<field declared_type64='MarkerIdType' name='endLoop' type64='s'/>
</struct>
<struct name='AVLTreeStruct' type64='{AVLTreeStruct=&quot;signature&quot;I&quot;privateStuff&quot;[8Q]}'>
<field declared_type64='OSType' name='signature' type64='I'/>
<field declared_type64='unsigned long*' name='privateStuff' type64='[8Q]'/>
</struct>
<struct name='AliasRecord' type64='{AliasRecord=&quot;hidden&quot;[6C]}'>
<field declared_type64='UInt8*' name='hidden' type64='[6C]'/>
</struct>
<struct name='ApplicationSpecificChunk' type64='{ApplicationSpecificChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;applicationSignature&quot;I&quot;data&quot;[1C]}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='OSType' name='applicationSignature' type64='I'/>
<field declared_type64='UInt8*' name='data' type64='[1C]'/>
</struct>
<struct name='AudioRecordingChunk' type64='{AudioRecordingChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;AESChannelStatus&quot;[24C]}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='UInt8*' name='AESChannelStatus' type64='[24C]'/>
</struct>
<struct name='BigEndianFixed' type64='{BigEndianFixed=&quot;bigEndianValue&quot;i}'>
<field declared_type64='Fixed' name='bigEndianValue' type64='i'/>
</struct>
<struct name='BigEndianLong' type64='{BigEndianLong=&quot;bigEndianValue&quot;q}'>
<field declared_type64='long' name='bigEndianValue' type64='q'/>
</struct>
<struct name='BigEndianOSType' type64='{BigEndianOSType=&quot;bigEndianValue&quot;I}'>
<field declared_type64='OSType' name='bigEndianValue' type64='I'/>
</struct>
<struct name='BigEndianShort' type64='{BigEndianShort=&quot;bigEndianValue&quot;s}'>
<field declared_type64='short' name='bigEndianValue' type64='s'/>
</struct>
<struct name='BigEndianUInt32' type64='{BigEndianUInt32=&quot;bigEndianValue&quot;I}'>
<field declared_type64='UInt32' name='bigEndianValue' type64='I'/>
</struct>
<struct name='BigEndianUnsignedFixed' type64='{BigEndianUnsignedFixed=&quot;bigEndianValue&quot;I}'>
<field declared_type64='UnsignedFixed' name='bigEndianValue' type64='I'/>
</struct>
<struct name='BigEndianUnsignedLong' type64='{BigEndianUnsignedLong=&quot;bigEndianValue&quot;Q}'>
<field declared_type64='unsigned long' name='bigEndianValue' type64='Q'/>
</struct>
<struct name='BigEndianUnsignedShort' type64='{BigEndianUnsignedShort=&quot;bigEndianValue&quot;S}'>
<field declared_type64='unsigned short' name='bigEndianValue' type64='S'/>
</struct>
<struct name='CatPositionRec' type64='{CatPositionRec=&quot;initialize&quot;i&quot;priv&quot;[6s]}'>
<field declared_type64='SInt32' name='initialize' type64='i'/>
<field declared_type64='SInt16*' name='priv' type64='[6s]'/>
</struct>
<struct name='ChunkHeader' type64='{ChunkHeader=&quot;ckID&quot;I&quot;ckSize&quot;i}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
</struct>
<struct name='Comment' type64='{Comment=&quot;timeStamp&quot;I&quot;marker&quot;s&quot;count&quot;S&quot;text&quot;[1c]}'>
<field declared_type64='UInt32' name='timeStamp' type64='I'/>
<field declared_type64='MarkerIdType' name='marker' type64='s'/>
<field declared_type64='UInt16' name='count' type64='S'/>
<field declared_type64='char*' name='text' type64='[1c]'/>
</struct>
<struct name='CommentsChunk' type64='{CommentsChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;numComments&quot;S&quot;comments&quot;[1{Comment=&quot;timeStamp&quot;I&quot;marker&quot;s&quot;count&quot;S&quot;text&quot;[1c]}]}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='UInt16' name='numComments' type64='S'/>
<field declared_type64='Comment*' name='comments' type64='[1{Comment=&quot;timeStamp&quot;I&quot;marker&quot;s&quot;count&quot;S&quot;text&quot;[1c]}]'/>
</struct>
<struct name='CommonChunk' type64='{CommonChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;numChannels&quot;s&quot;numSampleFrames&quot;I&quot;sampleSize&quot;s&quot;sampleRate&quot;{Float80=&quot;exp&quot;s&quot;man&quot;[4S]}}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='SInt16' name='numChannels' type64='s'/>
<field declared_type64='UInt32' name='numSampleFrames' type64='I'/>
<field declared_type64='SInt16' name='sampleSize' type64='s'/>
<field declared_type64='extended80' name='sampleRate' type64='{Float80=&quot;exp&quot;s&quot;man&quot;[4S]}'/>
</struct>
<struct name='ComponentAliasResource' type64='{ComponentAliasResource=&quot;cr&quot;{ComponentResource=&quot;cd&quot;{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentName&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentInfo&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentIcon&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}}&quot;aliasCD&quot;{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}}'>
<field declared_type64='ComponentResource' name='cr' type64='{ComponentResource=&quot;cd&quot;{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentName&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentInfo&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentIcon&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}}'/>
<field declared_type64='ComponentDescription' name='aliasCD' type64='{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}'/>
</struct>
<struct name='ComponentDescription' type64='{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}'>
<field declared_type64='OSType' name='componentType' type64='I'/>
<field declared_type64='OSType' name='componentSubType' type64='I'/>
<field declared_type64='OSType' name='componentManufacturer' type64='I'/>
<field declared_type64='UInt32' name='componentFlags' type64='I'/>
<field declared_type64='UInt32' name='componentFlagsMask' type64='I'/>
</struct>
<struct name='ComponentInstanceRecord' type64='{ComponentInstanceRecord=&quot;data&quot;[1q]}'>
<field declared_type64='long*' name='data' type64='[1q]'/>
</struct>
<struct name='ComponentMPWorkFunctionHeaderRecord' type64='{ComponentMPWorkFunctionHeaderRecord=&quot;headerSize&quot;I&quot;recordSize&quot;I&quot;workFlags&quot;I&quot;processorCount&quot;S&quot;unused&quot;C&quot;isRunning&quot;C}'>
<field declared_type64='UInt32' name='headerSize' type64='I'/>
<field declared_type64='UInt32' name='recordSize' type64='I'/>
<field declared_type64='UInt32' name='workFlags' type64='I'/>
<field declared_type64='UInt16' name='processorCount' type64='S'/>
<field declared_type64='UInt8' name='unused' type64='C'/>
<field declared_type64='UInt8' name='isRunning' type64='C'/>
</struct>
<struct name='ComponentParameters' type64='{ComponentParameters=&quot;flags&quot;C&quot;paramSize&quot;C&quot;what&quot;s&quot;padding&quot;I&quot;params&quot;[1q]}'>
<field declared_type64='UInt8' name='flags' type64='C'/>
<field declared_type64='UInt8' name='paramSize' type64='C'/>
<field declared_type64='SInt16' name='what' type64='s'/>
<field declared_type64='UInt32' name='padding' type64='I'/>
<field declared_type64='long*' name='params' type64='[1q]'/>
</struct>
<struct name='ComponentPlatformInfo' type64='{ComponentPlatformInfo=&quot;componentFlags&quot;i&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;platformType&quot;s}'>
<field declared_type64='SInt32' name='componentFlags' type64='i'/>
<field declared_type64='ResourceSpec' name='component' type64='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type64='SInt16' name='platformType' type64='s'/>
</struct>
<struct name='ComponentPlatformInfoArray' type64='{ComponentPlatformInfoArray=&quot;count&quot;i&quot;platformArray&quot;[1{ComponentPlatformInfo=&quot;componentFlags&quot;i&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;platformType&quot;s}]}'>
<field declared_type64='SInt32' name='count' type64='i'/>
<field declared_type64='ComponentPlatformInfo*' name='platformArray' type64='[1{ComponentPlatformInfo=&quot;componentFlags&quot;i&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;platformType&quot;s}]'/>
</struct>
<struct name='ComponentRecord' type64='{ComponentRecord=&quot;data&quot;[1q]}'>
<field declared_type64='long*' name='data' type64='[1q]'/>
</struct>
<struct name='ComponentResource' type64='{ComponentResource=&quot;cd&quot;{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentName&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentInfo&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentIcon&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}}'>
<field declared_type64='ComponentDescription' name='cd' type64='{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}'/>
<field declared_type64='ResourceSpec' name='component' type64='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type64='ResourceSpec' name='componentName' type64='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type64='ResourceSpec' name='componentInfo' type64='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type64='ResourceSpec' name='componentIcon' type64='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
</struct>
<struct name='ComponentResourceExtension' type64='{ComponentResourceExtension=&quot;componentVersion&quot;i&quot;componentRegisterFlags&quot;i&quot;componentIconFamily&quot;s}'>
<field declared_type64='SInt32' name='componentVersion' type64='i'/>
<field declared_type64='SInt32' name='componentRegisterFlags' type64='i'/>
<field declared_type64='SInt16' name='componentIconFamily' type64='s'/>
</struct>
<struct name='ContainerChunk' type64='{ContainerChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;formType&quot;I}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='UInt32' name='formType' type64='I'/>
</struct>
<struct name='CustomBadgeResource' type64='{CustomBadgeResource=&quot;version&quot;s&quot;customBadgeResourceID&quot;s&quot;customBadgeType&quot;I&quot;customBadgeCreator&quot;I&quot;windowBadgeType&quot;I&quot;windowBadgeCreator&quot;I&quot;overrideType&quot;I&quot;overrideCreator&quot;I}'>
<field declared_type64='SInt16' name='version' type64='s'/>
<field declared_type64='SInt16' name='customBadgeResourceID' type64='s'/>
<field declared_type64='OSType' name='customBadgeType' type64='I'/>
<field declared_type64='OSType' name='customBadgeCreator' type64='I'/>
<field declared_type64='OSType' name='windowBadgeType' type64='I'/>
<field declared_type64='OSType' name='windowBadgeCreator' type64='I'/>
<field declared_type64='OSType' name='overrideType' type64='I'/>
<field declared_type64='OSType' name='overrideCreator' type64='I'/>
</struct>
<struct name='DInfo' type64='{DInfo=&quot;frRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;frFlags&quot;S&quot;frLocation&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;frView&quot;s}'>
<field declared_type64='Rect' name='frRect' type64='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
<field declared_type64='UInt16' name='frFlags' type64='S'/>
<field declared_type64='Point' name='frLocation' type64='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type64='SInt16' name='frView' type64='s'/>
</struct>
<struct name='DXInfo' type64='{DXInfo=&quot;frScroll&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;frOpenChain&quot;i&quot;frScript&quot;c&quot;frXFlags&quot;c&quot;frComment&quot;s&quot;frPutAway&quot;i}'>
<field declared_type64='Point' name='frScroll' type64='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type64='SInt32' name='frOpenChain' type64='i'/>
<field declared_type64='SInt8' name='frScript' type64='c'/>
<field declared_type64='SInt8' name='frXFlags' type64='c'/>
<field declared_type64='SInt16' name='frComment' type64='s'/>
<field declared_type64='SInt32' name='frPutAway' type64='i'/>
</struct>
<struct name='DateCacheRecord' type64='{DateCacheRecord=&quot;hidden&quot;[256s]}'>
<field declared_type64='short*' name='hidden' type64='[256s]'/>
</struct>
<struct name='DateTimeRec' type64='{DateTimeRec=&quot;year&quot;s&quot;month&quot;s&quot;day&quot;s&quot;hour&quot;s&quot;minute&quot;s&quot;second&quot;s&quot;dayOfWeek&quot;s}'>
<field declared_type64='short' name='year' type64='s'/>
<field declared_type64='short' name='month' type64='s'/>
<field declared_type64='short' name='day' type64='s'/>
<field declared_type64='short' name='hour' type64='s'/>
<field declared_type64='short' name='minute' type64='s'/>
<field declared_type64='short' name='second' type64='s'/>
<field declared_type64='short' name='dayOfWeek' type64='s'/>
</struct>
<struct name='DeferredTask' type64='{DeferredTask=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;dtFlags&quot;s&quot;dtAddr&quot;^?&quot;dtParam&quot;q&quot;dtReserved&quot;q}'>
<field declared_type64='volatile QElemPtr' name='qLink' type64='^{QElem=^{QElem}s[1s]}'/>
<field declared_type64='short' name='qType' type64='s'/>
<field declared_type64='volatile short' name='dtFlags' type64='s'/>
<field declared_type64='DeferredTaskUPP' function_pointer='true' name='dtAddr' type64='^?'>
<arg declared_type64='long' type64='q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='long' name='dtParam' type64='q'/>
<field declared_type64='long' name='dtReserved' type64='q'/>
</struct>
<struct name='ExceptionInformation' type64='{ExceptionInformation=&quot;theKind&quot;Q&quot;machineState&quot;^{MachineInformationIntel64}&quot;registerImage&quot;^{RegisterInformationIntel64}&quot;FPUImage&quot;^{FPUInformationIntel64}&quot;info&quot;(ExceptionInfo=&quot;memoryInfo&quot;^{MemoryExceptionInformation})&quot;vectorImage&quot;^{VectorInformationIntel64}}'>
<field declared_type64='ExceptionKind' name='theKind' type64='Q'/>
<field declared_type64='MachineInformation*' name='machineState' type64='^{MachineInformationIntel64=QQQQQQQQ}'/>
<field declared_type64='RegisterInformation*' name='registerImage' type64='^{RegisterInformationIntel64=QQQQQQQQQQQQQQQQ}'/>
<field declared_type64='FPUInformation*' name='FPUImage' type64='^{FPUInformationIntel64=[8[10C]]SSSSIII}'/>
<field declared_type64='ExceptionInfo' name='info' type64='(ExceptionInfo=&quot;memoryInfo&quot;^{MemoryExceptionInformation})'/>
<field declared_type64='VectorInformation*' name='vectorImage' type64='^{VectorInformationIntel64=[16(Vector128Intel=[16C])]}'/>
</struct>
<struct name='ExceptionInformationPowerPC' type64='{ExceptionInformationPowerPC=&quot;theKind&quot;Q&quot;machineState&quot;^{MachineInformationPowerPC}&quot;registerImage&quot;^{RegisterInformationPowerPC}&quot;FPUImage&quot;^{FPUInformationPowerPC}&quot;info&quot;(ExceptionInfo=&quot;memoryInfo&quot;^{MemoryExceptionInformation})&quot;vectorImage&quot;^{VectorInformationPowerPC}}'>
<field declared_type64='ExceptionKind' name='theKind' type64='Q'/>
<field declared_type64='MachineInformationPowerPC*' name='machineState' type64='^{MachineInformationPowerPC={UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}QQQQQQ{UnsignedWide=II}{UnsignedWide=II}}'/>
<field declared_type64='RegisterInformationPowerPC*' name='registerImage' type64='^{RegisterInformationPowerPC={UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}}'/>
<field declared_type64='FPUInformationPowerPC*' name='FPUImage' type64='^{FPUInformationPowerPC=[32{UnsignedWide=II}]QQ}'/>
<field declared_type64='ExceptionInfo' name='info' type64='(ExceptionInfo=&quot;memoryInfo&quot;^{MemoryExceptionInformation})'/>
<field declared_type64='VectorInformationPowerPC*' name='vectorImage' type64='^{VectorInformationPowerPC=[32(Vector128=[4Q][8S][16C])](Vector128=[4Q][8S][16C])I}'/>
</struct>
<struct name='ExtCommonChunk' type64='{ExtCommonChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;numChannels&quot;s&quot;numSampleFrames&quot;I&quot;sampleSize&quot;s&quot;sampleRate&quot;{Float80=&quot;exp&quot;s&quot;man&quot;[4S]}&quot;compressionType&quot;I&quot;compressionName&quot;[1c]}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='SInt16' name='numChannels' type64='s'/>
<field declared_type64='UInt32' name='numSampleFrames' type64='I'/>
<field declared_type64='SInt16' name='sampleSize' type64='s'/>
<field declared_type64='extended80' name='sampleRate' type64='{Float80=&quot;exp&quot;s&quot;man&quot;[4S]}'/>
<field declared_type64='UInt32' name='compressionType' type64='I'/>
<field declared_type64='char*' name='compressionName' type64='[1c]'/>
</struct>
<struct name='ExtComponentResource' type64='{ExtComponentResource=&quot;cd&quot;{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentName&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentInfo&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentIcon&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentVersion&quot;i&quot;componentRegisterFlags&quot;i&quot;componentIconFamily&quot;s&quot;count&quot;i&quot;platformArray&quot;[1{ComponentPlatformInfo=&quot;componentFlags&quot;i&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;platformType&quot;s}]}'>
<field declared_type64='ComponentDescription' name='cd' type64='{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}'/>
<field declared_type64='ResourceSpec' name='component' type64='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type64='ResourceSpec' name='componentName' type64='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type64='ResourceSpec' name='componentInfo' type64='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type64='ResourceSpec' name='componentIcon' type64='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type64='SInt32' name='componentVersion' type64='i'/>
<field declared_type64='SInt32' name='componentRegisterFlags' type64='i'/>
<field declared_type64='SInt16' name='componentIconFamily' type64='s'/>
<field declared_type64='SInt32' name='count' type64='i'/>
<field declared_type64='ComponentPlatformInfo*' name='platformArray' type64='[1{ComponentPlatformInfo=&quot;componentFlags&quot;i&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;platformType&quot;s}]'/>
</struct>
<struct name='ExtendedFileInfo' type64='{ExtendedFileInfo=&quot;reserved1&quot;[4s]&quot;extendedFinderFlags&quot;S&quot;reserved2&quot;s&quot;putAwayFolderID&quot;i}'>
<field declared_type64='SInt16*' name='reserved1' type64='[4s]'/>
<field declared_type64='UInt16' name='extendedFinderFlags' type64='S'/>
<field declared_type64='SInt16' name='reserved2' type64='s'/>
<field declared_type64='SInt32' name='putAwayFolderID' type64='i'/>
</struct>
<struct name='ExtendedFolderInfo' type64='{ExtendedFolderInfo=&quot;scrollPosition&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;reserved1&quot;i&quot;extendedFinderFlags&quot;S&quot;reserved2&quot;s&quot;putAwayFolderID&quot;i}'>
<field declared_type64='Point' name='scrollPosition' type64='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type64='SInt32' name='reserved1' type64='i'/>
<field declared_type64='UInt16' name='extendedFinderFlags' type64='S'/>
<field declared_type64='SInt16' name='reserved2' type64='s'/>
<field declared_type64='SInt32' name='putAwayFolderID' type64='i'/>
</struct>
<struct name='FInfo' type64='{FInfo=&quot;fdType&quot;I&quot;fdCreator&quot;I&quot;fdFlags&quot;S&quot;fdLocation&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;fdFldr&quot;s}'>
<field declared_type64='OSType' name='fdType' type64='I'/>
<field declared_type64='OSType' name='fdCreator' type64='I'/>
<field declared_type64='UInt16' name='fdFlags' type64='S'/>
<field declared_type64='Point' name='fdLocation' type64='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type64='SInt16' name='fdFldr' type64='s'/>
</struct>
<struct name='FPUInformation' type64='{FPUInformationIntel64=&quot;Registers&quot;[8[10C]]&quot;Control&quot;S&quot;Status&quot;S&quot;Tag&quot;S&quot;Opcode&quot;S&quot;IP&quot;I&quot;DP&quot;I&quot;DS&quot;I}'>
<field declared_type64='FPRegIntel*' name='Registers' type64='[8[10C]]'/>
<field declared_type64='unsigned short' name='Control' type64='S'/>
<field declared_type64='unsigned short' name='Status' type64='S'/>
<field declared_type64='unsigned short' name='Tag' type64='S'/>
<field declared_type64='unsigned short' name='Opcode' type64='S'/>
<field declared_type64='unsigned int' name='IP' type64='I'/>
<field declared_type64='unsigned int' name='DP' type64='I'/>
<field declared_type64='unsigned int' name='DS' type64='I'/>
</struct>
<struct name='FPUInformationIntel64' type64='{FPUInformationIntel64=&quot;Registers&quot;[8[10C]]&quot;Control&quot;S&quot;Status&quot;S&quot;Tag&quot;S&quot;Opcode&quot;S&quot;IP&quot;I&quot;DP&quot;I&quot;DS&quot;I}'>
<field declared_type64='FPRegIntel*' name='Registers' type64='[8[10C]]'/>
<field declared_type64='unsigned short' name='Control' type64='S'/>
<field declared_type64='unsigned short' name='Status' type64='S'/>
<field declared_type64='unsigned short' name='Tag' type64='S'/>
<field declared_type64='unsigned short' name='Opcode' type64='S'/>
<field declared_type64='unsigned int' name='IP' type64='I'/>
<field declared_type64='unsigned int' name='DP' type64='I'/>
<field declared_type64='unsigned int' name='DS' type64='I'/>
</struct>
<struct name='FPUInformationPowerPC' type64='{FPUInformationPowerPC=&quot;Registers&quot;[32{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}]&quot;FPSCR&quot;Q&quot;Reserved&quot;Q}'>
<field declared_type64='UnsignedWide*' name='Registers' type64='[32{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}]'/>
<field declared_type64='unsigned long' name='FPSCR' type64='Q'/>
<field declared_type64='unsigned long' name='Reserved' type64='Q'/>
</struct>
<struct name='FSAliasInfo' type64='{FSAliasInfo=&quot;volumeCreateDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;targetCreateDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;fileType&quot;I&quot;fileCreator&quot;I&quot;parentDirID&quot;I&quot;nodeID&quot;I&quot;filesystemID&quot;S&quot;signature&quot;S&quot;volumeIsBootVolume&quot;B&quot;volumeIsAutomounted&quot;B&quot;volumeIsEjectable&quot;B&quot;volumeHasPersistentFileIDs&quot;B&quot;isDirectory&quot;B}'>
<field declared_type64='UTCDateTime' name='volumeCreateDate' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type64='UTCDateTime' name='targetCreateDate' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type64='OSType' name='fileType' type64='I'/>
<field declared_type64='OSType' name='fileCreator' type64='I'/>
<field declared_type64='UInt32' name='parentDirID' type64='I'/>
<field declared_type64='UInt32' name='nodeID' type64='I'/>
<field declared_type64='UInt16' name='filesystemID' type64='S'/>
<field declared_type64='UInt16' name='signature' type64='S'/>
<field declared_type64='Boolean' name='volumeIsBootVolume' type64='B'/>
<field declared_type64='Boolean' name='volumeIsAutomounted' type64='B'/>
<field declared_type64='Boolean' name='volumeIsEjectable' type64='B'/>
<field declared_type64='Boolean' name='volumeHasPersistentFileIDs' type64='B'/>
<field declared_type64='Boolean' name='isDirectory' type64='B'/>
</struct>
<struct name='FSCatalogBulkParam' type64='{FSCatalogBulkParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;containerChanged&quot;B&quot;reserved&quot;C&quot;iteratorFlags&quot;I&quot;iterator&quot;^{OpaqueFSIterator}&quot;container&quot;^{FSRef}&quot;maximumItems&quot;Q&quot;actualItems&quot;Q&quot;whichInfo&quot;I&quot;catalogInfo&quot;^{FSCatalogInfo}&quot;refs&quot;^{FSRef}&quot;specs&quot;^{FSSpec}&quot;names&quot;^{HFSUniStr255}&quot;searchParams&quot;^{FSSearchParams}}'>
<field declared_type64='QElemPtr' name='qLink' type64='^{QElem=^{QElem}s[1s]}'/>
<field declared_type64='SInt16' name='qType' type64='s'/>
<field declared_type64='SInt16' name='ioTrap' type64='s'/>
<field declared_type64='Ptr' name='ioCmdAddr' type64='*'/>
<field declared_type64='IOCompletionUPP' function_pointer='true' name='ioCompletion' type64='^?'>
<arg declared_type64='ParmBlkPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='volatile OSErr' name='ioResult' type64='s'/>
<field declared_type64='Boolean' name='containerChanged' type64='B'/>
<field declared_type64='UInt8' name='reserved' type64='C'/>
<field declared_type64='FSIteratorFlags' name='iteratorFlags' type64='I'/>
<field declared_type64='FSIterator' name='iterator' type64='^{OpaqueFSIterator=}'/>
<field const='true' declared_type64='FSRef*' name='container' type64='^{FSRef=[80C]}'/>
<field declared_type64='ItemCount' name='maximumItems' type64='Q'/>
<field declared_type64='ItemCount' name='actualItems' type64='Q'/>
<field declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<field declared_type64='FSCatalogInfo*' name='catalogInfo' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<field declared_type64='FSRef*' name='refs' type64='^{FSRef=[80C]}'/>
<field declared_type64='FSSpecPtr' name='specs' type64='^{FSSpec=[70C]}'/>
<field declared_type64='HFSUniStr255*' name='names' type64='^{HFSUniStr255=S[255S]}'/>
<field const='true' declared_type64='FSSearchParams*' name='searchParams' type64='^{FSSearchParams=iIQ^S^{FSCatalogInfo}^{FSCatalogInfo}}'/>
</struct>
<struct name='FSCatalogInfo' type64='{FSCatalogInfo=&quot;nodeFlags&quot;S&quot;volume&quot;s&quot;parentDirID&quot;I&quot;nodeID&quot;I&quot;sharingFlags&quot;C&quot;userPrivileges&quot;C&quot;reserved1&quot;C&quot;reserved2&quot;C&quot;createDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;contentModDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;attributeModDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;accessDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;backupDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;permissions&quot;{FSPermissionInfo=&quot;userID&quot;I&quot;groupID&quot;I&quot;reserved1&quot;C&quot;userAccess&quot;C&quot;mode&quot;S&quot;fileSec&quot;^{__FSFileSecurity}}&quot;finderInfo&quot;[16C]&quot;extFinderInfo&quot;[16C]&quot;dataLogicalSize&quot;Q&quot;dataPhysicalSize&quot;Q&quot;rsrcLogicalSize&quot;Q&quot;rsrcPhysicalSize&quot;Q&quot;valence&quot;I&quot;textEncodingHint&quot;I}'>
<field declared_type64='UInt16' name='nodeFlags' type64='S'/>
<field declared_type64='FSVolumeRefNum' name='volume' type64='s'/>
<field declared_type64='UInt32' name='parentDirID' type64='I'/>
<field declared_type64='UInt32' name='nodeID' type64='I'/>
<field declared_type64='UInt8' name='sharingFlags' type64='C'/>
<field declared_type64='UInt8' name='userPrivileges' type64='C'/>
<field declared_type64='UInt8' name='reserved1' type64='C'/>
<field declared_type64='UInt8' name='reserved2' type64='C'/>
<field declared_type64='UTCDateTime' name='createDate' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type64='UTCDateTime' name='contentModDate' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type64='UTCDateTime' name='attributeModDate' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type64='UTCDateTime' name='accessDate' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type64='UTCDateTime' name='backupDate' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type64='FSPermissionInfo' name='permissions' type64='{FSPermissionInfo=&quot;userID&quot;I&quot;groupID&quot;I&quot;reserved1&quot;C&quot;userAccess&quot;C&quot;mode&quot;S&quot;fileSec&quot;^{__FSFileSecurity}}'/>
<field declared_type64='UInt8*' name='finderInfo' type64='[16C]'/>
<field declared_type64='UInt8*' name='extFinderInfo' type64='[16C]'/>
<field declared_type64='UInt64' name='dataLogicalSize' type64='Q'/>
<field declared_type64='UInt64' name='dataPhysicalSize' type64='Q'/>
<field declared_type64='UInt64' name='rsrcLogicalSize' type64='Q'/>
<field declared_type64='UInt64' name='rsrcPhysicalSize' type64='Q'/>
<field declared_type64='UInt32' name='valence' type64='I'/>
<field declared_type64='TextEncoding' name='textEncodingHint' type64='I'/>
</struct>
<struct name='FSFileOperationClientContext' type64='{FSFileOperationClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type64='CFIndex' name='version' type64='q'/>
<field declared_type64='void*' name='info' type64='^v'/>
<field declared_type64='CFAllocatorRetainCallBack' function_pointer='true' name='retain' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval const='true' declared_type64='void*' type64='^v'/>
</field>
<field declared_type64='CFAllocatorReleaseCallBack' function_pointer='true' name='release' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='CFAllocatorCopyDescriptionCallBack' function_pointer='true' name='copyDescription' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</field>
</struct>
<struct name='FSForkCBInfoParam' type64='{FSForkCBInfoParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;desiredRefNum&quot;i&quot;volumeRefNum&quot;s&quot;iterator&quot;i&quot;actualRefNum&quot;s&quot;ref&quot;^{FSRef}&quot;forkInfo&quot;^{FSForkInfo}&quot;forkName&quot;^{HFSUniStr255}}'>
<field declared_type64='QElemPtr' name='qLink' type64='^{QElem=^{QElem}s[1s]}'/>
<field declared_type64='SInt16' name='qType' type64='s'/>
<field declared_type64='SInt16' name='ioTrap' type64='s'/>
<field declared_type64='Ptr' name='ioCmdAddr' type64='*'/>
<field declared_type64='IOCompletionUPP' function_pointer='true' name='ioCompletion' type64='^?'>
<arg declared_type64='ParmBlkPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='volatile OSErr' name='ioResult' type64='s'/>
<field declared_type64='FSIORefNum' name='desiredRefNum' type64='i'/>
<field declared_type64='FSVolumeRefNum' name='volumeRefNum' type64='s'/>
<field declared_type64='FSIORefNum' name='iterator' type64='i'/>
<field declared_type64='FSVolumeRefNum' name='actualRefNum' type64='s'/>
<field declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<field declared_type64='FSForkInfo*' name='forkInfo' type64='^{FSForkInfo=CcsIIIQQQQ}'/>
<field declared_type64='HFSUniStr255*' name='forkName' type64='^{HFSUniStr255=S[255S]}'/>
</struct>
<struct name='FSForkIOParam' type64='{FSForkIOParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;reserved1&quot;^v&quot;reserved2&quot;s&quot;forkRefNum&quot;i&quot;reserved3&quot;C&quot;permissions&quot;c&quot;ref&quot;^{FSRef}&quot;buffer&quot;*&quot;requestCount&quot;I&quot;actualCount&quot;I&quot;positionMode&quot;S&quot;positionOffset&quot;q&quot;allocationFlags&quot;S&quot;allocationAmount&quot;Q&quot;forkNameLength&quot;Q&quot;forkName&quot;^S&quot;forkIterator&quot;{CatPositionRec=&quot;initialize&quot;i&quot;priv&quot;[6s]}&quot;outForkName&quot;^{HFSUniStr255}}'>
<field declared_type64='QElemPtr' name='qLink' type64='^{QElem=^{QElem}s[1s]}'/>
<field declared_type64='SInt16' name='qType' type64='s'/>
<field declared_type64='SInt16' name='ioTrap' type64='s'/>
<field declared_type64='Ptr' name='ioCmdAddr' type64='*'/>
<field declared_type64='IOCompletionUPP' function_pointer='true' name='ioCompletion' type64='^?'>
<arg declared_type64='ParmBlkPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='volatile OSErr' name='ioResult' type64='s'/>
<field declared_type64='void*' name='reserved1' type64='^v'/>
<field declared_type64='SInt16' name='reserved2' type64='s'/>
<field declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<field declared_type64='UInt8' name='reserved3' type64='C'/>
<field declared_type64='SInt8' name='permissions' type64='c'/>
<field const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<field declared_type64='Ptr' name='buffer' type64='*'/>
<field declared_type64='UInt32' name='requestCount' type64='I'/>
<field declared_type64='UInt32' name='actualCount' type64='I'/>
<field declared_type64='UInt16' name='positionMode' type64='S'/>
<field declared_type64='SInt64' name='positionOffset' type64='q'/>
<field declared_type64='FSAllocationFlags' name='allocationFlags' type64='S'/>
<field declared_type64='UInt64' name='allocationAmount' type64='Q'/>
<field declared_type64='UniCharCount' name='forkNameLength' type64='Q'/>
<field const='true' declared_type64='UniChar*' name='forkName' type64='^S'/>
<field declared_type64='CatPositionRec' name='forkIterator' type64='{CatPositionRec=&quot;initialize&quot;i&quot;priv&quot;[6s]}'/>
<field declared_type64='HFSUniStr255*' name='outForkName' type64='^{HFSUniStr255=S[255S]}'/>
</struct>
<struct name='FSForkInfo' type64='{FSForkInfo=&quot;flags&quot;C&quot;permissions&quot;c&quot;volume&quot;s&quot;reserved2&quot;I&quot;nodeID&quot;I&quot;forkID&quot;I&quot;currentPosition&quot;Q&quot;logicalEOF&quot;Q&quot;physicalEOF&quot;Q&quot;process&quot;Q}'>
<field declared_type64='FSForkInfoFlags' name='flags' type64='C'/>
<field declared_type64='SInt8' name='permissions' type64='c'/>
<field declared_type64='FSVolumeRefNum' name='volume' type64='s'/>
<field declared_type64='UInt32' name='reserved2' type64='I'/>
<field declared_type64='UInt32' name='nodeID' type64='I'/>
<field declared_type64='UInt32' name='forkID' type64='I'/>
<field declared_type64='UInt64' name='currentPosition' type64='Q'/>
<field declared_type64='UInt64' name='logicalEOF' type64='Q'/>
<field declared_type64='UInt64' name='physicalEOF' type64='Q'/>
<field declared_type64='UInt64' name='process' type64='Q'/>
</struct>
<struct name='FSPermissionInfo' type64='{FSPermissionInfo=&quot;userID&quot;I&quot;groupID&quot;I&quot;reserved1&quot;C&quot;userAccess&quot;C&quot;mode&quot;S&quot;fileSec&quot;^{__FSFileSecurity}}'>
<field declared_type64='UInt32' name='userID' type64='I'/>
<field declared_type64='UInt32' name='groupID' type64='I'/>
<field declared_type64='UInt8' name='reserved1' type64='C'/>
<field declared_type64='UInt8' name='userAccess' type64='C'/>
<field declared_type64='UInt16' name='mode' type64='S'/>
<field declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
</struct>
<struct name='FSRangeLockParam' type64='{FSRangeLockParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;forkRefNum&quot;i&quot;requestCount&quot;Q&quot;positionMode&quot;S&quot;positionOffset&quot;q&quot;rangeStart&quot;Q}'>
<field declared_type64='QElemPtr' name='qLink' type64='^{QElem=^{QElem}s[1s]}'/>
<field declared_type64='SInt16' name='qType' type64='s'/>
<field declared_type64='SInt16' name='ioTrap' type64='s'/>
<field declared_type64='Ptr' name='ioCmdAddr' type64='*'/>
<field declared_type64='IOCompletionUPP' function_pointer='true' name='ioCompletion' type64='^?'>
<arg declared_type64='ParmBlkPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='volatile OSErr' name='ioResult' type64='s'/>
<field declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<field declared_type64='UInt64' name='requestCount' type64='Q'/>
<field declared_type64='UInt16' name='positionMode' type64='S'/>
<field declared_type64='SInt64' name='positionOffset' type64='q'/>
<field declared_type64='UInt64' name='rangeStart' type64='Q'/>
</struct>
<struct name='FSRef' type64='{FSRef=&quot;hidden&quot;[80C]}'>
<field declared_type64='UInt8*' name='hidden' type64='[80C]'/>
</struct>
<struct name='FSRefForkIOParam' type64='{FSRefForkIOParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;parentRef&quot;^{FSRef}&quot;nameLength&quot;Q&quot;name&quot;^S&quot;whichInfo&quot;I&quot;catInfo&quot;^{FSCatalogInfo}&quot;forkNameLength&quot;Q&quot;forkName&quot;^S&quot;permissions&quot;c&quot;reserved1&quot;C&quot;forkRefNum&quot;i&quot;newRef&quot;^{FSRef}}'>
<field declared_type64='QElemPtr' name='qLink' type64='^{QElem=^{QElem}s[1s]}'/>
<field declared_type64='SInt16' name='qType' type64='s'/>
<field declared_type64='SInt16' name='ioTrap' type64='s'/>
<field declared_type64='Ptr' name='ioCmdAddr' type64='*'/>
<field declared_type64='IOCompletionUPP' function_pointer='true' name='ioCompletion' type64='^?'>
<arg declared_type64='ParmBlkPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='volatile OSErr' name='ioResult' type64='s'/>
<field const='true' declared_type64='FSRef*' name='parentRef' type64='^{FSRef=[80C]}'/>
<field declared_type64='UniCharCount' name='nameLength' type64='Q'/>
<field const='true' declared_type64='UniChar*' name='name' type64='^S'/>
<field declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<field const='true' declared_type64='FSCatalogInfo*' name='catInfo' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<field declared_type64='UniCharCount' name='forkNameLength' type64='Q'/>
<field const='true' declared_type64='UniChar*' name='forkName' type64='^S'/>
<field declared_type64='SInt8' name='permissions' type64='c'/>
<field declared_type64='UInt8' name='reserved1' type64='C'/>
<field declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<field declared_type64='FSRef*' name='newRef' type64='^{FSRef=[80C]}'/>
</struct>
<struct name='FSRefParam' type64='{FSRefParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;ioNamePtr&quot;*&quot;ioVRefNum&quot;s&quot;reserved1&quot;s&quot;reserved2&quot;C&quot;reserved3&quot;C&quot;ref&quot;^{FSRef}&quot;whichInfo&quot;I&quot;catInfo&quot;^{FSCatalogInfo}&quot;nameLength&quot;Q&quot;name&quot;^S&quot;ioDirID&quot;I&quot;spec&quot;^{FSSpec}&quot;parentRef&quot;^{FSRef}&quot;newRef&quot;^{FSRef}&quot;textEncodingHint&quot;I&quot;outName&quot;^{HFSUniStr255}}'>
<field declared_type64='QElemPtr' name='qLink' type64='^{QElem=^{QElem}s[1s]}'/>
<field declared_type64='SInt16' name='qType' type64='s'/>
<field declared_type64='SInt16' name='ioTrap' type64='s'/>
<field declared_type64='Ptr' name='ioCmdAddr' type64='*'/>
<field declared_type64='IOCompletionUPP' function_pointer='true' name='ioCompletion' type64='^?'>
<arg declared_type64='ParmBlkPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='volatile OSErr' name='ioResult' type64='s'/>
<field declared_type64='ConstStringPtr' name='ioNamePtr' type64='*'/>
<field declared_type64='FSVolumeRefNum' name='ioVRefNum' type64='s'/>
<field declared_type64='SInt16' name='reserved1' type64='s'/>
<field declared_type64='UInt8' name='reserved2' type64='C'/>
<field declared_type64='UInt8' name='reserved3' type64='C'/>
<field const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<field declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<field declared_type64='FSCatalogInfo*' name='catInfo' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<field declared_type64='UniCharCount' name='nameLength' type64='Q'/>
<field const='true' declared_type64='UniChar*' name='name' type64='^S'/>
<field declared_type64='UInt32' name='ioDirID' type64='I'/>
<field declared_type64='FSSpecPtr' name='spec' type64='^{FSSpec=[70C]}'/>
<field declared_type64='FSRef*' name='parentRef' type64='^{FSRef=[80C]}'/>
<field declared_type64='FSRef*' name='newRef' type64='^{FSRef=[80C]}'/>
<field declared_type64='TextEncoding' name='textEncodingHint' type64='I'/>
<field declared_type64='HFSUniStr255*' name='outName' type64='^{HFSUniStr255=S[255S]}'/>
</struct>
<struct name='FSSearchParams' type64='{FSSearchParams=&quot;searchTime&quot;i&quot;searchBits&quot;I&quot;searchNameLength&quot;Q&quot;searchName&quot;^S&quot;searchInfo1&quot;^{FSCatalogInfo}&quot;searchInfo2&quot;^{FSCatalogInfo}}'>
<field declared_type64='Duration' name='searchTime' type64='i'/>
<field declared_type64='OptionBits' name='searchBits' type64='I'/>
<field declared_type64='UniCharCount' name='searchNameLength' type64='Q'/>
<field const='true' declared_type64='UniChar*' name='searchName' type64='^S'/>
<field declared_type64='FSCatalogInfo*' name='searchInfo1' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<field declared_type64='FSCatalogInfo*' name='searchInfo2' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
</struct>
<struct name='FSSpec' type64='{FSSpec=&quot;hidden&quot;[70C]}'>
<field declared_type64='UInt8*' name='hidden' type64='[70C]'/>
</struct>
<struct name='FSVolumeInfo' type64='{FSVolumeInfo=&quot;createDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;modifyDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;backupDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;checkedDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;fileCount&quot;I&quot;folderCount&quot;I&quot;totalBytes&quot;Q&quot;freeBytes&quot;Q&quot;blockSize&quot;I&quot;totalBlocks&quot;I&quot;freeBlocks&quot;I&quot;nextAllocation&quot;I&quot;rsrcClumpSize&quot;I&quot;dataClumpSize&quot;I&quot;nextCatalogID&quot;I&quot;finderInfo&quot;[32C]&quot;flags&quot;S&quot;filesystemID&quot;S&quot;signature&quot;S&quot;driveNumber&quot;S&quot;driverRefNum&quot;i}'>
<field declared_type64='UTCDateTime' name='createDate' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type64='UTCDateTime' name='modifyDate' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type64='UTCDateTime' name='backupDate' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type64='UTCDateTime' name='checkedDate' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type64='UInt32' name='fileCount' type64='I'/>
<field declared_type64='UInt32' name='folderCount' type64='I'/>
<field declared_type64='UInt64' name='totalBytes' type64='Q'/>
<field declared_type64='UInt64' name='freeBytes' type64='Q'/>
<field declared_type64='UInt32' name='blockSize' type64='I'/>
<field declared_type64='UInt32' name='totalBlocks' type64='I'/>
<field declared_type64='UInt32' name='freeBlocks' type64='I'/>
<field declared_type64='UInt32' name='nextAllocation' type64='I'/>
<field declared_type64='UInt32' name='rsrcClumpSize' type64='I'/>
<field declared_type64='UInt32' name='dataClumpSize' type64='I'/>
<field declared_type64='UInt32' name='nextCatalogID' type64='I'/>
<field declared_type64='UInt8*' name='finderInfo' type64='[32C]'/>
<field declared_type64='UInt16' name='flags' type64='S'/>
<field declared_type64='UInt16' name='filesystemID' type64='S'/>
<field declared_type64='UInt16' name='signature' type64='S'/>
<field declared_type64='UInt16' name='driveNumber' type64='S'/>
<field declared_type64='FSIORefNum' name='driverRefNum' type64='i'/>
</struct>
<struct name='FSVolumeInfoParam' type64='{FSVolumeInfoParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;ioNamePtr&quot;*&quot;ioVRefNum&quot;s&quot;volumeIndex&quot;I&quot;whichInfo&quot;I&quot;volumeInfo&quot;^{FSVolumeInfo}&quot;volumeName&quot;^{HFSUniStr255}&quot;ref&quot;^{FSRef}}'>
<field declared_type64='QElemPtr' name='qLink' type64='^{QElem=^{QElem}s[1s]}'/>
<field declared_type64='SInt16' name='qType' type64='s'/>
<field declared_type64='SInt16' name='ioTrap' type64='s'/>
<field declared_type64='Ptr' name='ioCmdAddr' type64='*'/>
<field declared_type64='IOCompletionUPP' function_pointer='true' name='ioCompletion' type64='^?'>
<arg declared_type64='ParmBlkPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='volatile OSErr' name='ioResult' type64='s'/>
<field declared_type64='StringPtr' name='ioNamePtr' type64='*'/>
<field declared_type64='FSVolumeRefNum' name='ioVRefNum' type64='s'/>
<field declared_type64='UInt32' name='volumeIndex' type64='I'/>
<field declared_type64='FSVolumeInfoBitmap' name='whichInfo' type64='I'/>
<field declared_type64='FSVolumeInfo*' name='volumeInfo' type64='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSi}'/>
<field declared_type64='HFSUniStr255*' name='volumeName' type64='^{HFSUniStr255=S[255S]}'/>
<field declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
</struct>
<struct name='FVector' type64='{FVector=&quot;start&quot;s&quot;length&quot;s}'>
<field declared_type64='short' name='start' type64='s'/>
<field declared_type64='short' name='length' type64='s'/>
</struct>
<struct name='FXInfo' type64='{FXInfo=&quot;fdIconID&quot;s&quot;fdReserved&quot;[3s]&quot;fdScript&quot;c&quot;fdXFlags&quot;c&quot;fdComment&quot;s&quot;fdPutAway&quot;i}'>
<field declared_type64='SInt16' name='fdIconID' type64='s'/>
<field declared_type64='SInt16*' name='fdReserved' type64='[3s]'/>
<field declared_type64='SInt8' name='fdScript' type64='c'/>
<field declared_type64='SInt8' name='fdXFlags' type64='c'/>
<field declared_type64='SInt16' name='fdComment' type64='s'/>
<field declared_type64='SInt32' name='fdPutAway' type64='i'/>
</struct>
<struct name='FileInfo' type64='{FileInfo=&quot;fileType&quot;I&quot;fileCreator&quot;I&quot;finderFlags&quot;S&quot;location&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;reservedField&quot;S}'>
<field declared_type64='OSType' name='fileType' type64='I'/>
<field declared_type64='OSType' name='fileCreator' type64='I'/>
<field declared_type64='UInt16' name='finderFlags' type64='S'/>
<field declared_type64='Point' name='location' type64='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type64='UInt16' name='reservedField' type64='S'/>
</struct>
<struct name='FolderDesc' type64='{FolderDesc=&quot;descSize&quot;q&quot;foldType&quot;I&quot;flags&quot;I&quot;foldClass&quot;I&quot;foldLocation&quot;I&quot;badgeSignature&quot;I&quot;badgeType&quot;I&quot;reserved&quot;I&quot;name&quot;[64C]}'>
<field declared_type64='Size' name='descSize' type64='q'/>
<field declared_type64='FolderType' name='foldType' type64='I'/>
<field declared_type64='FolderDescFlags' name='flags' type64='I'/>
<field declared_type64='FolderClass' name='foldClass' type64='I'/>
<field declared_type64='FolderType' name='foldLocation' type64='I'/>
<field declared_type64='OSType' name='badgeSignature' type64='I'/>
<field declared_type64='OSType' name='badgeType' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='StrFileName' name='name' type64='[64C]'/>
</struct>
<struct name='FolderInfo' type64='{FolderInfo=&quot;windowBounds&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;finderFlags&quot;S&quot;location&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;reservedField&quot;S}'>
<field declared_type64='Rect' name='windowBounds' type64='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
<field declared_type64='UInt16' name='finderFlags' type64='S'/>
<field declared_type64='Point' name='location' type64='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type64='UInt16' name='reservedField' type64='S'/>
</struct>
<struct name='FolderRouting' type64='{FolderRouting=&quot;descSize&quot;q&quot;fileType&quot;I&quot;routeFromFolder&quot;I&quot;routeToFolder&quot;I&quot;flags&quot;I}'>
<field declared_type64='Size' name='descSize' type64='q'/>
<field declared_type64='OSType' name='fileType' type64='I'/>
<field declared_type64='FolderType' name='routeFromFolder' type64='I'/>
<field declared_type64='FolderType' name='routeToFolder' type64='I'/>
<field declared_type64='RoutingFlags' name='flags' type64='I'/>
</struct>
<struct name='FormatVersionChunk' type64='{FormatVersionChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;timestamp&quot;I}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='UInt32' name='timestamp' type64='I'/>
</struct>
<struct name='GetVolParmsInfoBuffer' type64='{GetVolParmsInfoBuffer=&quot;vMVersion&quot;s&quot;vMAttrib&quot;i&quot;vMLocalHand&quot;^*&quot;vMServerAdr&quot;i&quot;vMVolumeGrade&quot;i&quot;vMForeignPrivID&quot;s&quot;vMExtendedAttributes&quot;i&quot;vMDeviceID&quot;^v&quot;vMMaxNameLength&quot;Q}'>
<field declared_type64='SInt16' name='vMVersion' type64='s'/>
<field declared_type64='SInt32' name='vMAttrib' type64='i'/>
<field declared_type64='Handle' name='vMLocalHand' type64='^*'/>
<field declared_type64='SInt32' name='vMServerAdr' type64='i'/>
<field declared_type64='SInt32' name='vMVolumeGrade' type64='i'/>
<field declared_type64='SInt16' name='vMForeignPrivID' type64='s'/>
<field declared_type64='SInt32' name='vMExtendedAttributes' type64='i'/>
<field declared_type64='void*' name='vMDeviceID' type64='^v'/>
<field declared_type64='UniCharCount' name='vMMaxNameLength' type64='Q'/>
</struct>
<struct name='InstrumentChunk' type64='{InstrumentChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;baseFrequency&quot;C&quot;detune&quot;C&quot;lowFrequency&quot;C&quot;highFrequency&quot;C&quot;lowVelocity&quot;C&quot;highVelocity&quot;C&quot;gain&quot;s&quot;sustainLoop&quot;{AIFFLoop=&quot;playMode&quot;s&quot;beginLoop&quot;s&quot;endLoop&quot;s}&quot;releaseLoop&quot;{AIFFLoop=&quot;playMode&quot;s&quot;beginLoop&quot;s&quot;endLoop&quot;s}}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='UInt8' name='baseFrequency' type64='C'/>
<field declared_type64='UInt8' name='detune' type64='C'/>
<field declared_type64='UInt8' name='lowFrequency' type64='C'/>
<field declared_type64='UInt8' name='highFrequency' type64='C'/>
<field declared_type64='UInt8' name='lowVelocity' type64='C'/>
<field declared_type64='UInt8' name='highVelocity' type64='C'/>
<field declared_type64='SInt16' name='gain' type64='s'/>
<field declared_type64='AIFFLoop' name='sustainLoop' type64='{AIFFLoop=&quot;playMode&quot;s&quot;beginLoop&quot;s&quot;endLoop&quot;s}'/>
<field declared_type64='AIFFLoop' name='releaseLoop' type64='{AIFFLoop=&quot;playMode&quot;s&quot;beginLoop&quot;s&quot;endLoop&quot;s}'/>
</struct>
<struct name='Intl0Rec' type64='{Intl0Rec=&quot;decimalPt&quot;c&quot;thousSep&quot;c&quot;listSep&quot;c&quot;currSym1&quot;c&quot;currSym2&quot;c&quot;currSym3&quot;c&quot;currFmt&quot;C&quot;dateOrder&quot;C&quot;shrtDateFmt&quot;C&quot;dateSep&quot;c&quot;timeCycle&quot;C&quot;timeFmt&quot;C&quot;mornStr&quot;[4c]&quot;eveStr&quot;[4c]&quot;timeSep&quot;c&quot;time1Suff&quot;c&quot;time2Suff&quot;c&quot;time3Suff&quot;c&quot;time4Suff&quot;c&quot;time5Suff&quot;c&quot;time6Suff&quot;c&quot;time7Suff&quot;c&quot;time8Suff&quot;c&quot;metricSys&quot;C&quot;intl0Vers&quot;s}'>
<field declared_type64='char' name='decimalPt' type64='c'/>
<field declared_type64='char' name='thousSep' type64='c'/>
<field declared_type64='char' name='listSep' type64='c'/>
<field declared_type64='char' name='currSym1' type64='c'/>
<field declared_type64='char' name='currSym2' type64='c'/>
<field declared_type64='char' name='currSym3' type64='c'/>
<field declared_type64='UInt8' name='currFmt' type64='C'/>
<field declared_type64='UInt8' name='dateOrder' type64='C'/>
<field declared_type64='UInt8' name='shrtDateFmt' type64='C'/>
<field declared_type64='char' name='dateSep' type64='c'/>
<field declared_type64='UInt8' name='timeCycle' type64='C'/>
<field declared_type64='UInt8' name='timeFmt' type64='C'/>
<field declared_type64='char*' name='mornStr' type64='[4c]'/>
<field declared_type64='char*' name='eveStr' type64='[4c]'/>
<field declared_type64='char' name='timeSep' type64='c'/>
<field declared_type64='char' name='time1Suff' type64='c'/>
<field declared_type64='char' name='time2Suff' type64='c'/>
<field declared_type64='char' name='time3Suff' type64='c'/>
<field declared_type64='char' name='time4Suff' type64='c'/>
<field declared_type64='char' name='time5Suff' type64='c'/>
<field declared_type64='char' name='time6Suff' type64='c'/>
<field declared_type64='char' name='time7Suff' type64='c'/>
<field declared_type64='char' name='time8Suff' type64='c'/>
<field declared_type64='UInt8' name='metricSys' type64='C'/>
<field declared_type64='short' name='intl0Vers' type64='s'/>
</struct>
<struct name='Intl1Rec' type64='{Intl1Rec=&quot;days&quot;[7[16C]]&quot;months&quot;[12[16C]]&quot;suppressDay&quot;C&quot;lngDateFmt&quot;C&quot;dayLeading0&quot;C&quot;abbrLen&quot;C&quot;st0&quot;[4c]&quot;st1&quot;[4c]&quot;st2&quot;[4c]&quot;st3&quot;[4c]&quot;st4&quot;[4c]&quot;intl1Vers&quot;s&quot;localRtn&quot;[1s]}'>
<field declared_type64='Str15*' name='days' type64='[7[16C]]'/>
<field declared_type64='Str15*' name='months' type64='[12[16C]]'/>
<field declared_type64='UInt8' name='suppressDay' type64='C'/>
<field declared_type64='UInt8' name='lngDateFmt' type64='C'/>
<field declared_type64='UInt8' name='dayLeading0' type64='C'/>
<field declared_type64='UInt8' name='abbrLen' type64='C'/>
<field declared_type64='char*' name='st0' type64='[4c]'/>
<field declared_type64='char*' name='st1' type64='[4c]'/>
<field declared_type64='char*' name='st2' type64='[4c]'/>
<field declared_type64='char*' name='st3' type64='[4c]'/>
<field declared_type64='char*' name='st4' type64='[4c]'/>
<field declared_type64='short' name='intl1Vers' type64='s'/>
<field declared_type64='short*' name='localRtn' type64='[1s]'/>
</struct>
<struct name='Itl1ExtRec' type64='{Itl1ExtRec=&quot;base&quot;{Intl1Rec=&quot;days&quot;[7[16C]]&quot;months&quot;[12[16C]]&quot;suppressDay&quot;C&quot;lngDateFmt&quot;C&quot;dayLeading0&quot;C&quot;abbrLen&quot;C&quot;st0&quot;[4c]&quot;st1&quot;[4c]&quot;st2&quot;[4c]&quot;st3&quot;[4c]&quot;st4&quot;[4c]&quot;intl1Vers&quot;s&quot;localRtn&quot;[1s]}&quot;version&quot;s&quot;format&quot;s&quot;calendarCode&quot;s&quot;extraDaysTableOffset&quot;i&quot;extraDaysTableLength&quot;i&quot;extraMonthsTableOffset&quot;i&quot;extraMonthsTableLength&quot;i&quot;abbrevDaysTableOffset&quot;i&quot;abbrevDaysTableLength&quot;i&quot;abbrevMonthsTableOffset&quot;i&quot;abbrevMonthsTableLength&quot;i&quot;extraSepsTableOffset&quot;i&quot;extraSepsTableLength&quot;i&quot;tables&quot;[1s]}'>
<field declared_type64='Intl1Rec' name='base' type64='{Intl1Rec=&quot;days&quot;[7[16C]]&quot;months&quot;[12[16C]]&quot;suppressDay&quot;C&quot;lngDateFmt&quot;C&quot;dayLeading0&quot;C&quot;abbrLen&quot;C&quot;st0&quot;[4c]&quot;st1&quot;[4c]&quot;st2&quot;[4c]&quot;st3&quot;[4c]&quot;st4&quot;[4c]&quot;intl1Vers&quot;s&quot;localRtn&quot;[1s]}'/>
<field declared_type64='short' name='version' type64='s'/>
<field declared_type64='short' name='format' type64='s'/>
<field declared_type64='short' name='calendarCode' type64='s'/>
<field declared_type64='SInt32' name='extraDaysTableOffset' type64='i'/>
<field declared_type64='SInt32' name='extraDaysTableLength' type64='i'/>
<field declared_type64='SInt32' name='extraMonthsTableOffset' type64='i'/>
<field declared_type64='SInt32' name='extraMonthsTableLength' type64='i'/>
<field declared_type64='SInt32' name='abbrevDaysTableOffset' type64='i'/>
<field declared_type64='SInt32' name='abbrevDaysTableLength' type64='i'/>
<field declared_type64='SInt32' name='abbrevMonthsTableOffset' type64='i'/>
<field declared_type64='SInt32' name='abbrevMonthsTableLength' type64='i'/>
<field declared_type64='SInt32' name='extraSepsTableOffset' type64='i'/>
<field declared_type64='SInt32' name='extraSepsTableLength' type64='i'/>
<field declared_type64='short*' name='tables' type64='[1s]'/>
</struct>
<struct name='Itl4Rec' type64='{Itl4Rec=&quot;flags&quot;s&quot;resourceType&quot;i&quot;resourceNum&quot;s&quot;version&quot;s&quot;resHeader1&quot;i&quot;resHeader2&quot;i&quot;numTables&quot;s&quot;mapOffset&quot;i&quot;strOffset&quot;i&quot;fetchOffset&quot;i&quot;unTokenOffset&quot;i&quot;defPartsOffset&quot;i&quot;resOffset6&quot;i&quot;resOffset7&quot;i&quot;resOffset8&quot;i}'>
<field declared_type64='short' name='flags' type64='s'/>
<field declared_type64='SInt32' name='resourceType' type64='i'/>
<field declared_type64='short' name='resourceNum' type64='s'/>
<field declared_type64='short' name='version' type64='s'/>
<field declared_type64='SInt32' name='resHeader1' type64='i'/>
<field declared_type64='SInt32' name='resHeader2' type64='i'/>
<field declared_type64='short' name='numTables' type64='s'/>
<field declared_type64='SInt32' name='mapOffset' type64='i'/>
<field declared_type64='SInt32' name='strOffset' type64='i'/>
<field declared_type64='SInt32' name='fetchOffset' type64='i'/>
<field declared_type64='SInt32' name='unTokenOffset' type64='i'/>
<field declared_type64='SInt32' name='defPartsOffset' type64='i'/>
<field declared_type64='SInt32' name='resOffset6' type64='i'/>
<field declared_type64='SInt32' name='resOffset7' type64='i'/>
<field declared_type64='SInt32' name='resOffset8' type64='i'/>
</struct>
<struct name='Itl5Record' type64='{Itl5Record=&quot;versionNumber&quot;i&quot;numberOfTables&quot;S&quot;reserved&quot;[3S]&quot;tableDirectory&quot;[1{TableDirectoryRecord=&quot;tableSignature&quot;I&quot;reserved&quot;I&quot;tableStartOffset&quot;I&quot;tableSize&quot;I}]}'>
<field declared_type64='Fixed' name='versionNumber' type64='i'/>
<field declared_type64='unsigned short' name='numberOfTables' type64='S'/>
<field declared_type64='unsigned short*' name='reserved' type64='[3S]'/>
<field declared_type64='TableDirectoryRecord*' name='tableDirectory' type64='[1{TableDirectoryRecord=&quot;tableSignature&quot;I&quot;reserved&quot;I&quot;tableStartOffset&quot;I&quot;tableSize&quot;I}]'/>
</struct>
<struct name='ItlbExtRecord' type64='{ItlbExtRecord=&quot;base&quot;{ItlbRecord=&quot;itlbNumber&quot;s&quot;itlbDate&quot;s&quot;itlbSort&quot;s&quot;itlbFlags&quot;s&quot;itlbToken&quot;s&quot;itlbEncoding&quot;s&quot;itlbLang&quot;s&quot;itlbNumRep&quot;c&quot;itlbDateRep&quot;c&quot;itlbKeys&quot;s&quot;itlbIcon&quot;s}&quot;itlbLocalSize&quot;i&quot;itlbMonoFond&quot;s&quot;itlbMonoSize&quot;s&quot;itlbPrefFond&quot;s&quot;itlbPrefSize&quot;s&quot;itlbSmallFond&quot;s&quot;itlbSmallSize&quot;s&quot;itlbSysFond&quot;s&quot;itlbSysSize&quot;s&quot;itlbAppFond&quot;s&quot;itlbAppSize&quot;s&quot;itlbHelpFond&quot;s&quot;itlbHelpSize&quot;s&quot;itlbValidStyles&quot;C&quot;itlbAliasStyle&quot;C}'>
<field declared_type64='ItlbRecord' name='base' type64='{ItlbRecord=&quot;itlbNumber&quot;s&quot;itlbDate&quot;s&quot;itlbSort&quot;s&quot;itlbFlags&quot;s&quot;itlbToken&quot;s&quot;itlbEncoding&quot;s&quot;itlbLang&quot;s&quot;itlbNumRep&quot;c&quot;itlbDateRep&quot;c&quot;itlbKeys&quot;s&quot;itlbIcon&quot;s}'/>
<field declared_type64='SInt32' name='itlbLocalSize' type64='i'/>
<field declared_type64='short' name='itlbMonoFond' type64='s'/>
<field declared_type64='short' name='itlbMonoSize' type64='s'/>
<field declared_type64='short' name='itlbPrefFond' type64='s'/>
<field declared_type64='short' name='itlbPrefSize' type64='s'/>
<field declared_type64='short' name='itlbSmallFond' type64='s'/>
<field declared_type64='short' name='itlbSmallSize' type64='s'/>
<field declared_type64='short' name='itlbSysFond' type64='s'/>
<field declared_type64='short' name='itlbSysSize' type64='s'/>
<field declared_type64='short' name='itlbAppFond' type64='s'/>
<field declared_type64='short' name='itlbAppSize' type64='s'/>
<field declared_type64='short' name='itlbHelpFond' type64='s'/>
<field declared_type64='short' name='itlbHelpSize' type64='s'/>
<field declared_type64='Style' name='itlbValidStyles' type64='C'/>
<field declared_type64='Style' name='itlbAliasStyle' type64='C'/>
</struct>
<struct name='ItlbRecord' type64='{ItlbRecord=&quot;itlbNumber&quot;s&quot;itlbDate&quot;s&quot;itlbSort&quot;s&quot;itlbFlags&quot;s&quot;itlbToken&quot;s&quot;itlbEncoding&quot;s&quot;itlbLang&quot;s&quot;itlbNumRep&quot;c&quot;itlbDateRep&quot;c&quot;itlbKeys&quot;s&quot;itlbIcon&quot;s}'>
<field declared_type64='short' name='itlbNumber' type64='s'/>
<field declared_type64='short' name='itlbDate' type64='s'/>
<field declared_type64='short' name='itlbSort' type64='s'/>
<field declared_type64='short' name='itlbFlags' type64='s'/>
<field declared_type64='short' name='itlbToken' type64='s'/>
<field declared_type64='short' name='itlbEncoding' type64='s'/>
<field declared_type64='short' name='itlbLang' type64='s'/>
<field declared_type64='SInt8' name='itlbNumRep' type64='c'/>
<field declared_type64='SInt8' name='itlbDateRep' type64='c'/>
<field declared_type64='short' name='itlbKeys' type64='s'/>
<field declared_type64='short' name='itlbIcon' type64='s'/>
</struct>
<struct name='ItlcRecord' type64='{ItlcRecord=&quot;itlcSystem&quot;s&quot;itlcReserved&quot;s&quot;itlcFontForce&quot;c&quot;itlcIntlForce&quot;c&quot;itlcOldKybd&quot;c&quot;itlcFlags&quot;c&quot;itlcIconOffset&quot;s&quot;itlcIconSide&quot;c&quot;itlcIconRsvd&quot;c&quot;itlcRegionCode&quot;s&quot;itlcSysFlags&quot;s&quot;itlcReserved4&quot;[32c]}'>
<field declared_type64='short' name='itlcSystem' type64='s'/>
<field declared_type64='short' name='itlcReserved' type64='s'/>
<field declared_type64='SInt8' name='itlcFontForce' type64='c'/>
<field declared_type64='SInt8' name='itlcIntlForce' type64='c'/>
<field declared_type64='SInt8' name='itlcOldKybd' type64='c'/>
<field declared_type64='SInt8' name='itlcFlags' type64='c'/>
<field declared_type64='short' name='itlcIconOffset' type64='s'/>
<field declared_type64='SInt8' name='itlcIconSide' type64='c'/>
<field declared_type64='SInt8' name='itlcIconRsvd' type64='c'/>
<field declared_type64='short' name='itlcRegionCode' type64='s'/>
<field declared_type64='short' name='itlcSysFlags' type64='s'/>
<field declared_type64='SInt8*' name='itlcReserved4' type64='[32c]'/>
</struct>
<struct name='LocalDateTime' type64='{LocalDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'>
<field declared_type64='UInt16' name='highSeconds' type64='S'/>
<field declared_type64='UInt32' name='lowSeconds' type64='I'/>
<field declared_type64='UInt16' name='fraction' type64='S'/>
</struct>
<struct name='LocaleAndVariant' type64='{LocaleAndVariant=&quot;locale&quot;^{OpaqueLocaleRef}&quot;opVariant&quot;I}'>
<field declared_type64='LocaleRef' name='locale' type64='^{OpaqueLocaleRef=}'/>
<field declared_type64='LocaleOperationVariant' name='opVariant' type64='I'/>
</struct>
<struct name='MIDIDataChunk' type64='{MIDIDataChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;MIDIdata&quot;[1C]}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='UInt8*' name='MIDIdata' type64='[1C]'/>
</struct>
<struct name='MPAddressSpaceInfo' type64='{MPAddressSpaceInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;groupID&quot;^{OpaqueMPCoherenceID}&quot;nTasks&quot;Q&quot;vsid&quot;[16I]}'>
<field declared_type64='PBVersion' name='version' type64='I'/>
<field declared_type64='MPProcessID' name='processID' type64='^{OpaqueMPProcessID=}'/>
<field declared_type64='MPCoherenceID' name='groupID' type64='^{OpaqueMPCoherenceID=}'/>
<field declared_type64='ItemCount' name='nTasks' type64='Q'/>
<field declared_type64='UInt32*' name='vsid' type64='[16I]'/>
</struct>
<struct name='MPCriticalRegionInfo' type64='{MPCriticalRegionInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;regionName&quot;I&quot;nWaiting&quot;Q&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;owningTask&quot;^{OpaqueMPTaskID}&quot;count&quot;Q}'>
<field declared_type64='PBVersion' name='version' type64='I'/>
<field declared_type64='MPProcessID' name='processID' type64='^{OpaqueMPProcessID=}'/>
<field declared_type64='OSType' name='regionName' type64='I'/>
<field declared_type64='ItemCount' name='nWaiting' type64='Q'/>
<field declared_type64='MPTaskID' name='waitingTaskID' type64='^{OpaqueMPTaskID=}'/>
<field declared_type64='MPTaskID' name='owningTask' type64='^{OpaqueMPTaskID=}'/>
<field declared_type64='ItemCount' name='count' type64='Q'/>
</struct>
<struct name='MPEventInfo' type64='{MPEventInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;eventName&quot;I&quot;nWaiting&quot;Q&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;events&quot;I}'>
<field declared_type64='PBVersion' name='version' type64='I'/>
<field declared_type64='MPProcessID' name='processID' type64='^{OpaqueMPProcessID=}'/>
<field declared_type64='OSType' name='eventName' type64='I'/>
<field declared_type64='ItemCount' name='nWaiting' type64='Q'/>
<field declared_type64='MPTaskID' name='waitingTaskID' type64='^{OpaqueMPTaskID=}'/>
<field declared_type64='MPEventFlags' name='events' type64='I'/>
</struct>
<struct name='MPNotificationInfo' type64='{MPNotificationInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;notificationName&quot;I&quot;queueID&quot;^{OpaqueMPQueueID}&quot;p1&quot;^v&quot;p2&quot;^v&quot;p3&quot;^v&quot;eventID&quot;^{OpaqueMPEventID}&quot;events&quot;I&quot;semaphoreID&quot;^{OpaqueMPSemaphoreID}}'>
<field declared_type64='PBVersion' name='version' type64='I'/>
<field declared_type64='MPProcessID' name='processID' type64='^{OpaqueMPProcessID=}'/>
<field declared_type64='OSType' name='notificationName' type64='I'/>
<field declared_type64='MPQueueID' name='queueID' type64='^{OpaqueMPQueueID=}'/>
<field declared_type64='void*' name='p1' type64='^v'/>
<field declared_type64='void*' name='p2' type64='^v'/>
<field declared_type64='void*' name='p3' type64='^v'/>
<field declared_type64='MPEventID' name='eventID' type64='^{OpaqueMPEventID=}'/>
<field declared_type64='MPEventFlags' name='events' type64='I'/>
<field declared_type64='MPSemaphoreID' name='semaphoreID' type64='^{OpaqueMPSemaphoreID=}'/>
</struct>
<struct name='MPQueueInfo' type64='{MPQueueInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;queueName&quot;I&quot;nWaiting&quot;Q&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;nMessages&quot;Q&quot;nReserved&quot;Q&quot;p1&quot;^v&quot;p2&quot;^v&quot;p3&quot;^v}'>
<field declared_type64='PBVersion' name='version' type64='I'/>
<field declared_type64='MPProcessID' name='processID' type64='^{OpaqueMPProcessID=}'/>
<field declared_type64='OSType' name='queueName' type64='I'/>
<field declared_type64='ItemCount' name='nWaiting' type64='Q'/>
<field declared_type64='MPTaskID' name='waitingTaskID' type64='^{OpaqueMPTaskID=}'/>
<field declared_type64='ItemCount' name='nMessages' type64='Q'/>
<field declared_type64='ItemCount' name='nReserved' type64='Q'/>
<field declared_type64='void*' name='p1' type64='^v'/>
<field declared_type64='void*' name='p2' type64='^v'/>
<field declared_type64='void*' name='p3' type64='^v'/>
</struct>
<struct name='MPSemaphoreInfo' type64='{MPSemaphoreInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;semaphoreName&quot;I&quot;nWaiting&quot;Q&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;maximum&quot;Q&quot;count&quot;Q}'>
<field declared_type64='PBVersion' name='version' type64='I'/>
<field declared_type64='MPProcessID' name='processID' type64='^{OpaqueMPProcessID=}'/>
<field declared_type64='OSType' name='semaphoreName' type64='I'/>
<field declared_type64='ItemCount' name='nWaiting' type64='Q'/>
<field declared_type64='MPTaskID' name='waitingTaskID' type64='^{OpaqueMPTaskID=}'/>
<field declared_type64='ItemCount' name='maximum' type64='Q'/>
<field declared_type64='ItemCount' name='count' type64='Q'/>
</struct>
<struct name='MPTaskInfo' type64='{MPTaskInfo=&quot;version&quot;I&quot;name&quot;I&quot;queueName&quot;I&quot;runState&quot;S&quot;lastCPU&quot;S&quot;weight&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;cpuTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;schedTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;creationTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;codePageFaults&quot;Q&quot;dataPageFaults&quot;Q&quot;preemptions&quot;Q&quot;cpuID&quot;^{OpaqueMPCpuID}&quot;blockedObject&quot;^{OpaqueMPOpaqueID}&quot;spaceID&quot;^{OpaqueMPAddressSpaceID}&quot;stackBase&quot;^v&quot;stackLimit&quot;^v&quot;stackCurr&quot;^v}'>
<field declared_type64='PBVersion' name='version' type64='I'/>
<field declared_type64='OSType' name='name' type64='I'/>
<field declared_type64='OSType' name='queueName' type64='I'/>
<field declared_type64='UInt16' name='runState' type64='S'/>
<field declared_type64='UInt16' name='lastCPU' type64='S'/>
<field declared_type64='UInt32' name='weight' type64='I'/>
<field declared_type64='MPProcessID' name='processID' type64='^{OpaqueMPProcessID=}'/>
<field declared_type64='AbsoluteTime' name='cpuTime' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='AbsoluteTime' name='schedTime' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='AbsoluteTime' name='creationTime' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='ItemCount' name='codePageFaults' type64='Q'/>
<field declared_type64='ItemCount' name='dataPageFaults' type64='Q'/>
<field declared_type64='ItemCount' name='preemptions' type64='Q'/>
<field declared_type64='MPCpuID' name='cpuID' type64='^{OpaqueMPCpuID=}'/>
<field declared_type64='MPOpaqueID' name='blockedObject' type64='^{OpaqueMPOpaqueID=}'/>
<field declared_type64='MPAddressSpaceID' name='spaceID' type64='^{OpaqueMPAddressSpaceID=}'/>
<field declared_type64='LogicalAddress' name='stackBase' type64='^v'/>
<field declared_type64='LogicalAddress' name='stackLimit' type64='^v'/>
<field declared_type64='LogicalAddress' name='stackCurr' type64='^v'/>
</struct>
<struct name='MPTaskInfoVersion2' type64='{MPTaskInfoVersion2=&quot;version&quot;I&quot;name&quot;I&quot;queueName&quot;I&quot;runState&quot;S&quot;lastCPU&quot;S&quot;weight&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;cpuTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;schedTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;creationTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;codePageFaults&quot;Q&quot;dataPageFaults&quot;Q&quot;preemptions&quot;Q&quot;cpuID&quot;^{OpaqueMPCpuID}}'>
<field declared_type64='PBVersion' name='version' type64='I'/>
<field declared_type64='OSType' name='name' type64='I'/>
<field declared_type64='OSType' name='queueName' type64='I'/>
<field declared_type64='UInt16' name='runState' type64='S'/>
<field declared_type64='UInt16' name='lastCPU' type64='S'/>
<field declared_type64='UInt32' name='weight' type64='I'/>
<field declared_type64='MPProcessID' name='processID' type64='^{OpaqueMPProcessID=}'/>
<field declared_type64='AbsoluteTime' name='cpuTime' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='AbsoluteTime' name='schedTime' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='AbsoluteTime' name='creationTime' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='ItemCount' name='codePageFaults' type64='Q'/>
<field declared_type64='ItemCount' name='dataPageFaults' type64='Q'/>
<field declared_type64='ItemCount' name='preemptions' type64='Q'/>
<field declared_type64='MPCpuID' name='cpuID' type64='^{OpaqueMPCpuID=}'/>
</struct>
<struct name='MachineInformation' type64='{MachineInformationIntel64=&quot;CS&quot;Q&quot;FS&quot;Q&quot;GS&quot;Q&quot;RFLAGS&quot;Q&quot;RIP&quot;Q&quot;ExceptTrap&quot;Q&quot;ExceptErr&quot;Q&quot;ExceptAddr&quot;Q}'>
<field declared_type64='unsigned long' name='CS' type64='Q'/>
<field declared_type64='unsigned long' name='FS' type64='Q'/>
<field declared_type64='unsigned long' name='GS' type64='Q'/>
<field declared_type64='unsigned long' name='RFLAGS' type64='Q'/>
<field declared_type64='unsigned long' name='RIP' type64='Q'/>
<field declared_type64='unsigned long' name='ExceptTrap' type64='Q'/>
<field declared_type64='unsigned long' name='ExceptErr' type64='Q'/>
<field declared_type64='unsigned long' name='ExceptAddr' type64='Q'/>
</struct>
<struct name='MachineInformationIntel64' type64='{MachineInformationIntel64=&quot;CS&quot;Q&quot;FS&quot;Q&quot;GS&quot;Q&quot;RFLAGS&quot;Q&quot;RIP&quot;Q&quot;ExceptTrap&quot;Q&quot;ExceptErr&quot;Q&quot;ExceptAddr&quot;Q}'>
<field declared_type64='unsigned long' name='CS' type64='Q'/>
<field declared_type64='unsigned long' name='FS' type64='Q'/>
<field declared_type64='unsigned long' name='GS' type64='Q'/>
<field declared_type64='unsigned long' name='RFLAGS' type64='Q'/>
<field declared_type64='unsigned long' name='RIP' type64='Q'/>
<field declared_type64='unsigned long' name='ExceptTrap' type64='Q'/>
<field declared_type64='unsigned long' name='ExceptErr' type64='Q'/>
<field declared_type64='unsigned long' name='ExceptAddr' type64='Q'/>
</struct>
<struct name='MachineInformationPowerPC' type64='{MachineInformationPowerPC=&quot;CTR&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;LR&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;PC&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;CRRegister&quot;Q&quot;XER&quot;Q&quot;MSR&quot;Q&quot;MQ&quot;Q&quot;ExceptKind&quot;Q&quot;DSISR&quot;Q&quot;DAR&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;Reserved&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}}'>
<field declared_type64='UnsignedWide' name='CTR' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='LR' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='PC' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='unsigned long' name='CRRegister' type64='Q'/>
<field declared_type64='unsigned long' name='XER' type64='Q'/>
<field declared_type64='unsigned long' name='MSR' type64='Q'/>
<field declared_type64='unsigned long' name='MQ' type64='Q'/>
<field declared_type64='unsigned long' name='ExceptKind' type64='Q'/>
<field declared_type64='unsigned long' name='DSISR' type64='Q'/>
<field declared_type64='UnsignedWide' name='DAR' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='Reserved' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
</struct>
<struct name='MachineLocation' type64='{MachineLocation=&quot;latitude&quot;i&quot;longitude&quot;i&quot;u&quot;(?=&quot;gmtDelta&quot;q&quot;dls&quot;{?=&quot;pad&quot;[3c]&quot;Delta&quot;c})}'>
<field declared_type64='Fract' name='latitude' type64='i'/>
<field declared_type64='Fract' name='longitude' type64='i'/>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h:113:5)' name='u' type64='(?=&quot;gmtDelta&quot;q&quot;dls&quot;{?=&quot;pad&quot;[3c]&quot;Delta&quot;c})'/>
</struct>
<struct name='Marker' type64='{Marker=&quot;id&quot;s&quot;position&quot;I&quot;markerName&quot;[256C]}'>
<field declared_type64='MarkerIdType' name='id' type64='s'/>
<field declared_type64='UInt32' name='position' type64='I'/>
<field declared_type64='Str255' name='markerName' type64='[256C]'/>
</struct>
<struct name='MarkerChunk' type64='{MarkerChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;numMarkers&quot;S&quot;Markers&quot;[1{Marker=&quot;id&quot;s&quot;position&quot;I&quot;markerName&quot;[256C]}]}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='UInt16' name='numMarkers' type64='S'/>
<field declared_type64='Marker*' name='Markers' type64='[1{Marker=&quot;id&quot;s&quot;position&quot;I&quot;markerName&quot;[256C]}]'/>
</struct>
<struct name='MemoryExceptionInformation' type64='{MemoryExceptionInformation=&quot;theArea&quot;^{OpaqueAreaID}&quot;theAddress&quot;^v&quot;theError&quot;i&quot;theReference&quot;Q}'>
<field declared_type64='AreaID' name='theArea' type64='^{OpaqueAreaID=}'/>
<field declared_type64='LogicalAddress' name='theAddress' type64='^v'/>
<field declared_type64='OSStatus' name='theError' type64='i'/>
<field declared_type64='MemoryReferenceKind' name='theReference' type64='Q'/>
</struct>
<struct name='MixedModeStateRecord' type64='{MixedModeStateRecord=&quot;state1&quot;I&quot;state2&quot;I&quot;state3&quot;I&quot;state4&quot;I}'>
<field declared_type64='UInt32' name='state1' type64='I'/>
<field declared_type64='UInt32' name='state2' type64='I'/>
<field declared_type64='UInt32' name='state3' type64='I'/>
<field declared_type64='UInt32' name='state4' type64='I'/>
</struct>
<struct name='NItl4Rec' type64='{NItl4Rec=&quot;flags&quot;s&quot;resourceType&quot;i&quot;resourceNum&quot;s&quot;version&quot;s&quot;format&quot;s&quot;resHeader&quot;s&quot;resHeader2&quot;i&quot;numTables&quot;s&quot;mapOffset&quot;i&quot;strOffset&quot;i&quot;fetchOffset&quot;i&quot;unTokenOffset&quot;i&quot;defPartsOffset&quot;i&quot;whtSpListOffset&quot;i&quot;resOffset7&quot;i&quot;resOffset8&quot;i&quot;resLength1&quot;s&quot;resLength2&quot;s&quot;resLength3&quot;s&quot;unTokenLength&quot;s&quot;defPartsLength&quot;s&quot;whtSpListLength&quot;s&quot;resLength7&quot;s&quot;resLength8&quot;s}'>
<field declared_type64='short' name='flags' type64='s'/>
<field declared_type64='SInt32' name='resourceType' type64='i'/>
<field declared_type64='short' name='resourceNum' type64='s'/>
<field declared_type64='short' name='version' type64='s'/>
<field declared_type64='short' name='format' type64='s'/>
<field declared_type64='short' name='resHeader' type64='s'/>
<field declared_type64='SInt32' name='resHeader2' type64='i'/>
<field declared_type64='short' name='numTables' type64='s'/>
<field declared_type64='SInt32' name='mapOffset' type64='i'/>
<field declared_type64='SInt32' name='strOffset' type64='i'/>
<field declared_type64='SInt32' name='fetchOffset' type64='i'/>
<field declared_type64='SInt32' name='unTokenOffset' type64='i'/>
<field declared_type64='SInt32' name='defPartsOffset' type64='i'/>
<field declared_type64='SInt32' name='whtSpListOffset' type64='i'/>
<field declared_type64='SInt32' name='resOffset7' type64='i'/>
<field declared_type64='SInt32' name='resOffset8' type64='i'/>
<field declared_type64='short' name='resLength1' type64='s'/>
<field declared_type64='short' name='resLength2' type64='s'/>
<field declared_type64='short' name='resLength3' type64='s'/>
<field declared_type64='short' name='unTokenLength' type64='s'/>
<field declared_type64='short' name='defPartsLength' type64='s'/>
<field declared_type64='short' name='whtSpListLength' type64='s'/>
<field declared_type64='short' name='resLength7' type64='s'/>
<field declared_type64='short' name='resLength8' type64='s'/>
</struct>
<struct name='Nanoseconds' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'>
<field declared_type64='UInt32' name='lo' type64='I'/>
<field declared_type64='UInt32' name='hi' type64='I'/>
</struct>
<struct name='NumFormatString' type64='{NumFormatString=&quot;fLength&quot;C&quot;fVersion&quot;C&quot;data&quot;[254c]}'>
<field declared_type64='UInt8' name='fLength' type64='C'/>
<field declared_type64='UInt8' name='fVersion' type64='C'/>
<field declared_type64='char*' name='data' type64='[254c]'/>
</struct>
<struct name='NumFormatStringRec' type64='{NumFormatString=&quot;fLength&quot;C&quot;fVersion&quot;C&quot;data&quot;[254c]}'>
<field declared_type64='UInt8' name='fLength' type64='C'/>
<field declared_type64='UInt8' name='fVersion' type64='C'/>
<field declared_type64='char*' name='data' type64='[254c]'/>
</struct>
<struct name='NumberParts' type64='{NumberParts=&quot;version&quot;s&quot;data&quot;[31(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]&quot;pePlus&quot;{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}&quot;peMinus&quot;{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}&quot;peMinusPlus&quot;{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}&quot;altNumTable&quot;{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}&quot;reserved&quot;[20c]}'>
<field declared_type64='short' name='version' type64='s'/>
<field declared_type64='WideChar*' name='data' type64='[31(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]'/>
<field declared_type64='WideCharArr' name='pePlus' type64='{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}'/>
<field declared_type64='WideCharArr' name='peMinus' type64='{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}'/>
<field declared_type64='WideCharArr' name='peMinusPlus' type64='{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}'/>
<field declared_type64='WideCharArr' name='altNumTable' type64='{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}'/>
<field declared_type64='char*' name='reserved' type64='[20c]'/>
</struct>
<struct name='OffPair' type64='{OffPair=&quot;offFirst&quot;s&quot;offSecond&quot;s}'>
<field declared_type64='short' name='offFirst' type64='s'/>
<field declared_type64='short' name='offSecond' type64='s'/>
</struct>
<struct name='PEFContainerHeader' type64='{PEFContainerHeader=&quot;tag1&quot;I&quot;tag2&quot;I&quot;architecture&quot;I&quot;formatVersion&quot;I&quot;dateTimeStamp&quot;I&quot;oldDefVersion&quot;I&quot;oldImpVersion&quot;I&quot;currentVersion&quot;I&quot;sectionCount&quot;S&quot;instSectionCount&quot;S&quot;reservedA&quot;I}'>
<field declared_type64='OSType' name='tag1' type64='I'/>
<field declared_type64='OSType' name='tag2' type64='I'/>
<field declared_type64='OSType' name='architecture' type64='I'/>
<field declared_type64='UInt32' name='formatVersion' type64='I'/>
<field declared_type64='UInt32' name='dateTimeStamp' type64='I'/>
<field declared_type64='UInt32' name='oldDefVersion' type64='I'/>
<field declared_type64='UInt32' name='oldImpVersion' type64='I'/>
<field declared_type64='UInt32' name='currentVersion' type64='I'/>
<field declared_type64='UInt16' name='sectionCount' type64='S'/>
<field declared_type64='UInt16' name='instSectionCount' type64='S'/>
<field declared_type64='UInt32' name='reservedA' type64='I'/>
</struct>
<struct name='PEFExportedSymbol' type64='{PEFExportedSymbol=&quot;classAndName&quot;I&quot;symbolValue&quot;I&quot;sectionIndex&quot;s}'>
<field declared_type64='UInt32' name='classAndName' type64='I'/>
<field declared_type64='UInt32' name='symbolValue' type64='I'/>
<field declared_type64='SInt16' name='sectionIndex' type64='s'/>
</struct>
<struct name='PEFExportedSymbolHashSlot' type64='{PEFExportedSymbolHashSlot=&quot;countAndStart&quot;I}'>
<field declared_type64='UInt32' name='countAndStart' type64='I'/>
</struct>
<struct name='PEFExportedSymbolKey' type64='{PEFExportedSymbolKey=&quot;u&quot;(?=&quot;fullHashWord&quot;I&quot;splitHashWord&quot;{PEFSplitHashWord=&quot;nameLength&quot;S&quot;hashValue&quot;S})}'>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h:496:3)' name='u' type64='(?=&quot;fullHashWord&quot;I&quot;splitHashWord&quot;{PEFSplitHashWord=&quot;nameLength&quot;S&quot;hashValue&quot;S})'/>
</struct>
<struct name='PEFImportedLibrary' type64='{PEFImportedLibrary=&quot;nameOffset&quot;I&quot;oldImpVersion&quot;I&quot;currentVersion&quot;I&quot;importedSymbolCount&quot;I&quot;firstImportedSymbol&quot;I&quot;options&quot;C&quot;reservedA&quot;C&quot;reservedB&quot;S}'>
<field declared_type64='UInt32' name='nameOffset' type64='I'/>
<field declared_type64='UInt32' name='oldImpVersion' type64='I'/>
<field declared_type64='UInt32' name='currentVersion' type64='I'/>
<field declared_type64='UInt32' name='importedSymbolCount' type64='I'/>
<field declared_type64='UInt32' name='firstImportedSymbol' type64='I'/>
<field declared_type64='UInt8' name='options' type64='C'/>
<field declared_type64='UInt8' name='reservedA' type64='C'/>
<field declared_type64='UInt16' name='reservedB' type64='S'/>
</struct>
<struct name='PEFImportedSymbol' type64='{PEFImportedSymbol=&quot;classAndName&quot;I}'>
<field declared_type64='UInt32' name='classAndName' type64='I'/>
</struct>
<struct name='PEFLoaderInfoHeader' type64='{PEFLoaderInfoHeader=&quot;mainSection&quot;i&quot;mainOffset&quot;I&quot;initSection&quot;i&quot;initOffset&quot;I&quot;termSection&quot;i&quot;termOffset&quot;I&quot;importedLibraryCount&quot;I&quot;totalImportedSymbolCount&quot;I&quot;relocSectionCount&quot;I&quot;relocInstrOffset&quot;I&quot;loaderStringsOffset&quot;I&quot;exportHashOffset&quot;I&quot;exportHashTablePower&quot;I&quot;exportedSymbolCount&quot;I}'>
<field declared_type64='SInt32' name='mainSection' type64='i'/>
<field declared_type64='UInt32' name='mainOffset' type64='I'/>
<field declared_type64='SInt32' name='initSection' type64='i'/>
<field declared_type64='UInt32' name='initOffset' type64='I'/>
<field declared_type64='SInt32' name='termSection' type64='i'/>
<field declared_type64='UInt32' name='termOffset' type64='I'/>
<field declared_type64='UInt32' name='importedLibraryCount' type64='I'/>
<field declared_type64='UInt32' name='totalImportedSymbolCount' type64='I'/>
<field declared_type64='UInt32' name='relocSectionCount' type64='I'/>
<field declared_type64='UInt32' name='relocInstrOffset' type64='I'/>
<field declared_type64='UInt32' name='loaderStringsOffset' type64='I'/>
<field declared_type64='UInt32' name='exportHashOffset' type64='I'/>
<field declared_type64='UInt32' name='exportHashTablePower' type64='I'/>
<field declared_type64='UInt32' name='exportedSymbolCount' type64='I'/>
</struct>
<struct name='PEFLoaderRelocationHeader' type64='{PEFLoaderRelocationHeader=&quot;sectionIndex&quot;S&quot;reservedA&quot;S&quot;relocCount&quot;I&quot;firstRelocOffset&quot;I}'>
<field declared_type64='UInt16' name='sectionIndex' type64='S'/>
<field declared_type64='UInt16' name='reservedA' type64='S'/>
<field declared_type64='UInt32' name='relocCount' type64='I'/>
<field declared_type64='UInt32' name='firstRelocOffset' type64='I'/>
</struct>
<struct name='PEFSectionHeader' type64='{PEFSectionHeader=&quot;nameOffset&quot;i&quot;defaultAddress&quot;I&quot;totalLength&quot;I&quot;unpackedLength&quot;I&quot;containerLength&quot;I&quot;containerOffset&quot;I&quot;sectionKind&quot;C&quot;shareKind&quot;C&quot;alignment&quot;C&quot;reservedA&quot;C}'>
<field declared_type64='SInt32' name='nameOffset' type64='i'/>
<field declared_type64='UInt32' name='defaultAddress' type64='I'/>
<field declared_type64='UInt32' name='totalLength' type64='I'/>
<field declared_type64='UInt32' name='unpackedLength' type64='I'/>
<field declared_type64='UInt32' name='containerLength' type64='I'/>
<field declared_type64='UInt32' name='containerOffset' type64='I'/>
<field declared_type64='UInt8' name='sectionKind' type64='C'/>
<field declared_type64='UInt8' name='shareKind' type64='C'/>
<field declared_type64='UInt8' name='alignment' type64='C'/>
<field declared_type64='UInt8' name='reservedA' type64='C'/>
</struct>
<struct name='PEFSplitHashWord' type64='{PEFSplitHashWord=&quot;nameLength&quot;S&quot;hashValue&quot;S}'>
<field declared_type64='UInt16' name='nameLength' type64='S'/>
<field declared_type64='UInt16' name='hashValue' type64='S'/>
</struct>
<struct name='QElem' type64='{QElem=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;qData&quot;[1s]}'>
<field declared_type64='struct QElem*' name='qLink' type64='^{QElem=^{QElem}s[1s]}'/>
<field declared_type64='short' name='qType' type64='s'/>
<field declared_type64='short*' name='qData' type64='[1s]'/>
</struct>
<struct name='QHdr' type64='{QHdr=&quot;qFlags&quot;s&quot;qHead&quot;^{QElem}&quot;qTail&quot;^{QElem}}'>
<field declared_type64='volatile short' name='qFlags' type64='s'/>
<field declared_type64='volatile QElemPtr' name='qHead' type64='^{QElem=^{QElem}s[1s]}'/>
<field declared_type64='volatile QElemPtr' name='qTail' type64='^{QElem=^{QElem}s[1s]}'/>
</struct>
<struct name='RegisterInformation' type64='{RegisterInformationIntel64=&quot;RAX&quot;Q&quot;RBX&quot;Q&quot;RCX&quot;Q&quot;RDX&quot;Q&quot;RDI&quot;Q&quot;RSI&quot;Q&quot;RBP&quot;Q&quot;RSP&quot;Q&quot;R8&quot;Q&quot;R9&quot;Q&quot;R10&quot;Q&quot;R11&quot;Q&quot;R12&quot;Q&quot;R13&quot;Q&quot;R14&quot;Q&quot;R15&quot;Q}'>
<field declared_type64='unsigned long' name='RAX' type64='Q'/>
<field declared_type64='unsigned long' name='RBX' type64='Q'/>
<field declared_type64='unsigned long' name='RCX' type64='Q'/>
<field declared_type64='unsigned long' name='RDX' type64='Q'/>
<field declared_type64='unsigned long' name='RDI' type64='Q'/>
<field declared_type64='unsigned long' name='RSI' type64='Q'/>
<field declared_type64='unsigned long' name='RBP' type64='Q'/>
<field declared_type64='unsigned long' name='RSP' type64='Q'/>
<field declared_type64='unsigned long' name='R8' type64='Q'/>
<field declared_type64='unsigned long' name='R9' type64='Q'/>
<field declared_type64='unsigned long' name='R10' type64='Q'/>
<field declared_type64='unsigned long' name='R11' type64='Q'/>
<field declared_type64='unsigned long' name='R12' type64='Q'/>
<field declared_type64='unsigned long' name='R13' type64='Q'/>
<field declared_type64='unsigned long' name='R14' type64='Q'/>
<field declared_type64='unsigned long' name='R15' type64='Q'/>
</struct>
<struct name='RegisterInformationIntel64' type64='{RegisterInformationIntel64=&quot;RAX&quot;Q&quot;RBX&quot;Q&quot;RCX&quot;Q&quot;RDX&quot;Q&quot;RDI&quot;Q&quot;RSI&quot;Q&quot;RBP&quot;Q&quot;RSP&quot;Q&quot;R8&quot;Q&quot;R9&quot;Q&quot;R10&quot;Q&quot;R11&quot;Q&quot;R12&quot;Q&quot;R13&quot;Q&quot;R14&quot;Q&quot;R15&quot;Q}'>
<field declared_type64='unsigned long' name='RAX' type64='Q'/>
<field declared_type64='unsigned long' name='RBX' type64='Q'/>
<field declared_type64='unsigned long' name='RCX' type64='Q'/>
<field declared_type64='unsigned long' name='RDX' type64='Q'/>
<field declared_type64='unsigned long' name='RDI' type64='Q'/>
<field declared_type64='unsigned long' name='RSI' type64='Q'/>
<field declared_type64='unsigned long' name='RBP' type64='Q'/>
<field declared_type64='unsigned long' name='RSP' type64='Q'/>
<field declared_type64='unsigned long' name='R8' type64='Q'/>
<field declared_type64='unsigned long' name='R9' type64='Q'/>
<field declared_type64='unsigned long' name='R10' type64='Q'/>
<field declared_type64='unsigned long' name='R11' type64='Q'/>
<field declared_type64='unsigned long' name='R12' type64='Q'/>
<field declared_type64='unsigned long' name='R13' type64='Q'/>
<field declared_type64='unsigned long' name='R14' type64='Q'/>
<field declared_type64='unsigned long' name='R15' type64='Q'/>
</struct>
<struct name='RegisterInformationPowerPC' type64='{RegisterInformationPowerPC=&quot;R0&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R1&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R2&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R3&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R4&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R5&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R6&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R7&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R8&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R9&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R10&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R11&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R12&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R13&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R14&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R15&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R16&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R17&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R18&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R19&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R20&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R21&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R22&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R23&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R24&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R25&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R26&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R27&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R28&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R29&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R30&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R31&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}}'>
<field declared_type64='UnsignedWide' name='R0' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R1' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R2' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R3' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R4' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R5' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R6' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R7' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R8' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R9' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R10' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R11' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R12' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R13' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R14' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R15' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R16' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R17' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R18' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R19' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R20' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R21' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R22' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R23' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R24' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R25' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R26' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R27' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R28' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R29' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R30' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type64='UnsignedWide' name='R31' type64='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
</struct>
<struct name='RegisteredComponentInstanceRecord' type64='{RegisteredComponentInstanceRecord=&quot;data&quot;[1q]}'>
<field declared_type64='long*' name='data' type64='[1q]'/>
</struct>
<struct name='RegisteredComponentRecord' type64='{RegisteredComponentRecord=&quot;data&quot;[1q]}'>
<field declared_type64='long*' name='data' type64='[1q]'/>
</struct>
<struct name='ResourceSpec' type64='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'>
<field declared_type64='OSType' name='resType' type64='I'/>
<field declared_type64='SInt16' name='resID' type64='s'/>
</struct>
<struct name='RoutineDescriptor' type64='{RoutineDescriptor=&quot;goMixedModeTrap&quot;S&quot;version&quot;c&quot;routineDescriptorFlags&quot;C&quot;reserved1&quot;I&quot;reserved2&quot;C&quot;selectorInfo&quot;C&quot;routineCount&quot;S&quot;routineRecords&quot;[1{RoutineRecord=&quot;procInfo&quot;Q&quot;reserved1&quot;c&quot;ISA&quot;c&quot;routineFlags&quot;S&quot;procDescriptor&quot;^?&quot;reserved2&quot;I&quot;selector&quot;I}]}'>
<field declared_type64='UInt16' name='goMixedModeTrap' type64='S'/>
<field declared_type64='SInt8' name='version' type64='c'/>
<field declared_type64='RDFlagsType' name='routineDescriptorFlags' type64='C'/>
<field declared_type64='UInt32' name='reserved1' type64='I'/>
<field declared_type64='UInt8' name='reserved2' type64='C'/>
<field declared_type64='UInt8' name='selectorInfo' type64='C'/>
<field declared_type64='UInt16' name='routineCount' type64='S'/>
<field declared_type64='RoutineRecord*' name='routineRecords' type64='[1{RoutineRecord=&quot;procInfo&quot;Q&quot;reserved1&quot;c&quot;ISA&quot;c&quot;routineFlags&quot;S&quot;procDescriptor&quot;^?&quot;reserved2&quot;I&quot;selector&quot;I}]'/>
</struct>
<struct name='RoutineRecord' type64='{RoutineRecord=&quot;procInfo&quot;Q&quot;reserved1&quot;c&quot;ISA&quot;c&quot;routineFlags&quot;S&quot;procDescriptor&quot;^?&quot;reserved2&quot;I&quot;selector&quot;I}'>
<field declared_type64='ProcInfoType' name='procInfo' type64='Q'/>
<field declared_type64='SInt8' name='reserved1' type64='c'/>
<field declared_type64='ISAType' name='ISA' type64='c'/>
<field declared_type64='RoutineFlagsType' name='routineFlags' type64='S'/>
<field declared_type64='ProcPtr' function_pointer='true' name='procDescriptor' type64='^?'>
<retval declared_type64='long' type64='q'/>
</field>
<field declared_type64='UInt32' name='reserved2' type64='I'/>
<field declared_type64='UInt32' name='selector' type64='I'/>
</struct>
<struct name='RoutingResourceEntry' type64='{RoutingResourceEntry=&quot;creator&quot;I&quot;fileType&quot;I&quot;targetFolder&quot;I&quot;destinationFolder&quot;I&quot;reservedField&quot;I}'>
<field declared_type64='OSType' name='creator' type64='I'/>
<field declared_type64='OSType' name='fileType' type64='I'/>
<field declared_type64='OSType' name='targetFolder' type64='I'/>
<field declared_type64='OSType' name='destinationFolder' type64='I'/>
<field declared_type64='OSType' name='reservedField' type64='I'/>
</struct>
<struct name='RuleBasedTrslRecord' type64='{RuleBasedTrslRecord=&quot;sourceType&quot;s&quot;targetType&quot;s&quot;formatNumber&quot;s&quot;propertyFlag&quot;s&quot;numberOfRules&quot;s}'>
<field declared_type64='short' name='sourceType' type64='s'/>
<field declared_type64='short' name='targetType' type64='s'/>
<field declared_type64='short' name='formatNumber' type64='s'/>
<field declared_type64='short' name='propertyFlag' type64='s'/>
<field declared_type64='short' name='numberOfRules' type64='s'/>
</struct>
<struct name='SchedulerInfoRec' type64='{SchedulerInfoRec=&quot;InfoRecSize&quot;I&quot;CurrentThreadID&quot;Q&quot;SuggestedThreadID&quot;Q&quot;InterruptedCoopThreadID&quot;Q}'>
<field declared_type64='UInt32' name='InfoRecSize' type64='I'/>
<field declared_type64='ThreadID' name='CurrentThreadID' type64='Q'/>
<field declared_type64='ThreadID' name='SuggestedThreadID' type64='Q'/>
<field declared_type64='ThreadID' name='InterruptedCoopThreadID' type64='Q'/>
</struct>
<struct name='ScriptCodeRun' type64='{ScriptCodeRun=&quot;offset&quot;Q&quot;script&quot;s}'>
<field declared_type64='ByteOffset' name='offset' type64='Q'/>
<field declared_type64='ScriptCode' name='script' type64='s'/>
</struct>
<struct name='SoundDataChunk' type64='{SoundDataChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;offset&quot;I&quot;blockSize&quot;I}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='UInt32' name='offset' type64='I'/>
<field declared_type64='UInt32' name='blockSize' type64='I'/>
</struct>
<struct name='TECBufferContextRec' type64='{TECBufferContextRec=&quot;textInputBuffer&quot;*&quot;textInputBufferEnd&quot;*&quot;textOutputBuffer&quot;*&quot;textOutputBufferEnd&quot;*&quot;encodingInputBuffer&quot;^{TextEncodingRun}&quot;encodingInputBufferEnd&quot;^{TextEncodingRun}&quot;encodingOutputBuffer&quot;^{TextEncodingRun}&quot;encodingOutputBufferEnd&quot;^{TextEncodingRun}}'>
<field declared_type64='ConstTextPtr' name='textInputBuffer' type64='*'/>
<field declared_type64='ConstTextPtr' name='textInputBufferEnd' type64='*'/>
<field declared_type64='TextPtr' name='textOutputBuffer' type64='*'/>
<field declared_type64='TextPtr' name='textOutputBufferEnd' type64='*'/>
<field declared_type64='ConstTextEncodingRunPtr' name='encodingInputBuffer' type64='^{TextEncodingRun=QI}'/>
<field declared_type64='ConstTextEncodingRunPtr' name='encodingInputBufferEnd' type64='^{TextEncodingRun=QI}'/>
<field declared_type64='TextEncodingRunPtr' name='encodingOutputBuffer' type64='^{TextEncodingRun=QI}'/>
<field declared_type64='TextEncodingRunPtr' name='encodingOutputBufferEnd' type64='^{TextEncodingRun=QI}'/>
</struct>
<struct name='TECConversionInfo' type64='{TECConversionInfo=&quot;sourceEncoding&quot;I&quot;destinationEncoding&quot;I&quot;reserved1&quot;S&quot;reserved2&quot;S}'>
<field declared_type64='TextEncoding' name='sourceEncoding' type64='I'/>
<field declared_type64='TextEncoding' name='destinationEncoding' type64='I'/>
<field declared_type64='UInt16' name='reserved1' type64='S'/>
<field declared_type64='UInt16' name='reserved2' type64='S'/>
</struct>
<struct name='TECConverterContextRec' type64='{TECConverterContextRec=&quot;pluginRec&quot;*&quot;sourceEncoding&quot;I&quot;destEncoding&quot;I&quot;reserved1&quot;I&quot;reserved2&quot;I&quot;bufferContext&quot;{TECBufferContextRec=&quot;textInputBuffer&quot;*&quot;textInputBufferEnd&quot;*&quot;textOutputBuffer&quot;*&quot;textOutputBufferEnd&quot;*&quot;encodingInputBuffer&quot;^{TextEncodingRun}&quot;encodingInputBufferEnd&quot;^{TextEncodingRun}&quot;encodingOutputBuffer&quot;^{TextEncodingRun}&quot;encodingOutputBufferEnd&quot;^{TextEncodingRun}}&quot;contextRefCon&quot;^v&quot;conversionProc&quot;^?&quot;flushProc&quot;^?&quot;clearContextInfoProc&quot;^?&quot;options1&quot;I&quot;options2&quot;I&quot;pluginState&quot;{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}}'>
<field declared_type64='Ptr' name='pluginRec' type64='*'/>
<field declared_type64='TextEncoding' name='sourceEncoding' type64='I'/>
<field declared_type64='TextEncoding' name='destEncoding' type64='I'/>
<field declared_type64='UInt32' name='reserved1' type64='I'/>
<field declared_type64='UInt32' name='reserved2' type64='I'/>
<field declared_type64='TECBufferContextRec' name='bufferContext' type64='{TECBufferContextRec=&quot;textInputBuffer&quot;*&quot;textInputBufferEnd&quot;*&quot;textOutputBuffer&quot;*&quot;textOutputBufferEnd&quot;*&quot;encodingInputBuffer&quot;^{TextEncodingRun}&quot;encodingInputBufferEnd&quot;^{TextEncodingRun}&quot;encodingOutputBuffer&quot;^{TextEncodingRun}&quot;encodingOutputBufferEnd&quot;^{TextEncodingRun}}'/>
<field declared_type64='URefCon' name='contextRefCon' type64='^v'/>
<field declared_type64='ProcPtr' function_pointer='true' name='conversionProc' type64='^?'>
<retval declared_type64='long' type64='q'/>
</field>
<field declared_type64='ProcPtr' function_pointer='true' name='flushProc' type64='^?'>
<retval declared_type64='long' type64='q'/>
</field>
<field declared_type64='ProcPtr' function_pointer='true' name='clearContextInfoProc' type64='^?'>
<retval declared_type64='long' type64='q'/>
</field>
<field declared_type64='UInt32' name='options1' type64='I'/>
<field declared_type64='UInt32' name='options2' type64='I'/>
<field declared_type64='TECPluginStateRec' name='pluginState' type64='{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}'/>
</struct>
<struct name='TECEncodingPairRec' type64='{TECEncodingPairRec=&quot;source&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;dest&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}'>
<field declared_type64='TextEncodingRec' name='source' type64='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
<field declared_type64='TextEncodingRec' name='dest' type64='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
</struct>
<struct name='TECEncodingPairs' type64='{TECEncodingPairs=&quot;encodingPair&quot;{TECEncodingPairRec=&quot;source&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;dest&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}&quot;flags&quot;I&quot;speed&quot;I}'>
<field declared_type64='TECEncodingPairRec' name='encodingPair' type64='{TECEncodingPairRec=&quot;source&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;dest&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}'/>
<field declared_type64='UInt32' name='flags' type64='I'/>
<field declared_type64='UInt32' name='speed' type64='I'/>
</struct>
<struct name='TECEncodingPairsRec' type64='{TECEncodingPairsRec=&quot;count&quot;I&quot;encodingPairs&quot;{TECEncodingPairs=&quot;encodingPair&quot;{TECEncodingPairRec=&quot;source&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;dest&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}&quot;flags&quot;I&quot;speed&quot;I}}'>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='TECEncodingPairs' name='encodingPairs' type64='{TECEncodingPairs=&quot;encodingPair&quot;{TECEncodingPairRec=&quot;source&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;dest&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}&quot;flags&quot;I&quot;speed&quot;I}'/>
</struct>
<struct name='TECEncodingsListRec' type64='{TECEncodingsListRec=&quot;count&quot;I&quot;encodings&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}'>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='TextEncodingRec' name='encodings' type64='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
</struct>
<struct name='TECInfo' type64='{TECInfo=&quot;format&quot;S&quot;tecVersion&quot;S&quot;tecTextConverterFeatures&quot;I&quot;tecUnicodeConverterFeatures&quot;I&quot;tecTextCommonFeatures&quot;I&quot;tecTextEncodingsFolderName&quot;[32C]&quot;tecExtensionFileName&quot;[32C]&quot;tecLowestTEFileVersion&quot;S&quot;tecHighestTEFileVersion&quot;S}'>
<field declared_type64='UInt16' name='format' type64='S'/>
<field declared_type64='UInt16' name='tecVersion' type64='S'/>
<field declared_type64='UInt32' name='tecTextConverterFeatures' type64='I'/>
<field declared_type64='UInt32' name='tecUnicodeConverterFeatures' type64='I'/>
<field declared_type64='UInt32' name='tecTextCommonFeatures' type64='I'/>
<field declared_type64='Str31' name='tecTextEncodingsFolderName' type64='[32C]'/>
<field declared_type64='Str31' name='tecExtensionFileName' type64='[32C]'/>
<field declared_type64='UInt16' name='tecLowestTEFileVersion' type64='S'/>
<field declared_type64='UInt16' name='tecHighestTEFileVersion' type64='S'/>
</struct>
<struct name='TECInternetNameRec' type64='{TECInternetNameRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;encodingNameLength&quot;C&quot;encodingName&quot;[1C]}'>
<field declared_type64='UInt32' name='offset' type64='I'/>
<field declared_type64='TextEncodingRec' name='searchEncoding' type64='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
<field declared_type64='UInt8' name='encodingNameLength' type64='C'/>
<field declared_type64='UInt8*' name='encodingName' type64='[1C]'/>
</struct>
<struct name='TECInternetNamesRec' type64='{TECInternetNamesRec=&quot;count&quot;I&quot;InternetNames&quot;{TECInternetNameRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;encodingNameLength&quot;C&quot;encodingName&quot;[1C]}}'>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='TECInternetNameRec' name='InternetNames' type64='{TECInternetNameRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;encodingNameLength&quot;C&quot;encodingName&quot;[1C]}'/>
</struct>
<struct name='TECLocaleListToEncodingListRec' type64='{TECLocaleListToEncodingListRec=&quot;offset&quot;I&quot;count&quot;I&quot;locales&quot;s}'>
<field declared_type64='UInt32' name='offset' type64='I'/>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='RegionCode' name='locales' type64='s'/>
</struct>
<struct name='TECLocaleToEncodingsListRec' type64='{TECLocaleToEncodingsListRec=&quot;count&quot;I&quot;localeListToEncodingList&quot;{TECLocaleListToEncodingListRec=&quot;offset&quot;I&quot;count&quot;I&quot;locales&quot;s}}'>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='TECLocaleListToEncodingListRec' name='localeListToEncodingList' type64='{TECLocaleListToEncodingListRec=&quot;offset&quot;I&quot;count&quot;I&quot;locales&quot;s}'/>
</struct>
<struct name='TECPluginDispatchTable' type64='{TECPluginDispatchTable=&quot;version&quot;I&quot;compatibleVersion&quot;I&quot;PluginID&quot;I&quot;PluginNewEncodingConverter&quot;^?&quot;PluginClearContextInfo&quot;^?&quot;PluginConvertTextEncoding&quot;^?&quot;PluginFlushConversion&quot;^?&quot;PluginDisposeEncodingConverter&quot;^?&quot;PluginNewEncodingSniffer&quot;^?&quot;PluginClearSnifferContextInfo&quot;^?&quot;PluginSniffTextEncoding&quot;^?&quot;PluginDisposeEncodingSniffer&quot;^?&quot;PluginGetCountAvailableTextEncodings&quot;^?&quot;PluginGetCountAvailableTextEncodingPairs&quot;^?&quot;PluginGetCountDestinationTextEncodings&quot;^?&quot;PluginGetCountSubTextEncodings&quot;^?&quot;PluginGetCountAvailableSniffers&quot;^?&quot;PluginGetCountWebTextEncodings&quot;^?&quot;PluginGetCountMailTextEncodings&quot;^?&quot;PluginGetTextEncodingInternetName&quot;^?&quot;PluginGetTextEncodingFromInternetName&quot;^?}'>
<field declared_type64='TECPluginVersion' name='version' type64='I'/>
<field declared_type64='TECPluginVersion' name='compatibleVersion' type64='I'/>
<field declared_type64='TECPluginSignature' name='PluginID' type64='I'/>
<field declared_type64='TECPluginNewEncodingConverterPtr' function_pointer='true' name='PluginNewEncodingConverter' type64='^?'>
<arg declared_type64='TECObjectRef*' type64='^^{OpaqueTECObjectRef}'/>
<arg declared_type64='TECConverterContextRec*' type64='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}^v^?^?^?II{TECPluginStateRec=CCCCIIII}}'/>
<arg declared_type64='TextEncoding' type64='I'/>
<arg declared_type64='TextEncoding' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginClearContextInfoPtr' function_pointer='true' name='PluginClearContextInfo' type64='^?'>
<arg declared_type64='TECObjectRef' type64='^{OpaqueTECObjectRef=}'/>
<arg declared_type64='TECConverterContextRec*' type64='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}^v^?^?^?II{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginConvertTextEncodingPtr' function_pointer='true' name='PluginConvertTextEncoding' type64='^?'>
<arg declared_type64='TECObjectRef' type64='^{OpaqueTECObjectRef=}'/>
<arg declared_type64='TECConverterContextRec*' type64='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}^v^?^?^?II{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginFlushConversionPtr' function_pointer='true' name='PluginFlushConversion' type64='^?'>
<arg declared_type64='TECObjectRef' type64='^{OpaqueTECObjectRef=}'/>
<arg declared_type64='TECConverterContextRec*' type64='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}^v^?^?^?II{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginDisposeEncodingConverterPtr' function_pointer='true' name='PluginDisposeEncodingConverter' type64='^?'>
<arg declared_type64='TECObjectRef' type64='^{OpaqueTECObjectRef=}'/>
<arg declared_type64='TECConverterContextRec*' type64='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}^v^?^?^?II{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginNewEncodingSnifferPtr' function_pointer='true' name='PluginNewEncodingSniffer' type64='^?'>
<arg declared_type64='TECSnifferObjectRef*' type64='^^{OpaqueTECSnifferObjectRef}'/>
<arg declared_type64='TECSnifferContextRec*' type64='^{TECSnifferContextRec=*IQQ**QQ^v^?^?{TECPluginStateRec=CCCCIIII}}'/>
<arg declared_type64='TextEncoding' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginClearSnifferContextInfoPtr' function_pointer='true' name='PluginClearSnifferContextInfo' type64='^?'>
<arg declared_type64='TECSnifferObjectRef' type64='^{OpaqueTECSnifferObjectRef=}'/>
<arg declared_type64='TECSnifferContextRec*' type64='^{TECSnifferContextRec=*IQQ**QQ^v^?^?{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginSniffTextEncodingPtr' function_pointer='true' name='PluginSniffTextEncoding' type64='^?'>
<arg declared_type64='TECSnifferObjectRef' type64='^{OpaqueTECSnifferObjectRef=}'/>
<arg declared_type64='TECSnifferContextRec*' type64='^{TECSnifferContextRec=*IQQ**QQ^v^?^?{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginDisposeEncodingSnifferPtr' function_pointer='true' name='PluginDisposeEncodingSniffer' type64='^?'>
<arg declared_type64='TECSnifferObjectRef' type64='^{OpaqueTECSnifferObjectRef=}'/>
<arg declared_type64='TECSnifferContextRec*' type64='^{TECSnifferContextRec=*IQQ**QQ^v^?^?{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginGetCountAvailableTextEncodingsPtr' function_pointer='true' name='PluginGetCountAvailableTextEncodings' type64='^?'>
<arg declared_type64='TextEncoding*' type64='^I'/>
<arg declared_type64='ItemCount' type64='Q'/>
<arg declared_type64='ItemCount*' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginGetCountAvailableTextEncodingPairsPtr' function_pointer='true' name='PluginGetCountAvailableTextEncodingPairs' type64='^?'>
<arg declared_type64='TECConversionInfo*' type64='^{TECConversionInfo=IISS}'/>
<arg declared_type64='ItemCount' type64='Q'/>
<arg declared_type64='ItemCount*' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginGetCountDestinationTextEncodingsPtr' function_pointer='true' name='PluginGetCountDestinationTextEncodings' type64='^?'>
<arg declared_type64='TextEncoding' type64='I'/>
<arg declared_type64='TextEncoding*' type64='^I'/>
<arg declared_type64='ItemCount' type64='Q'/>
<arg declared_type64='ItemCount*' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginGetCountSubTextEncodingsPtr' function_pointer='true' name='PluginGetCountSubTextEncodings' type64='^?'>
<arg declared_type64='TextEncoding' type64='I'/>
<arg declared_type64='TextEncoding*' type64='^I'/>
<arg declared_type64='ItemCount' type64='Q'/>
<arg declared_type64='ItemCount*' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginGetCountAvailableSniffersPtr' function_pointer='true' name='PluginGetCountAvailableSniffers' type64='^?'>
<arg declared_type64='TextEncoding*' type64='^I'/>
<arg declared_type64='ItemCount' type64='Q'/>
<arg declared_type64='ItemCount*' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginGetCountWebEncodingsPtr' function_pointer='true' name='PluginGetCountWebTextEncodings' type64='^?'>
<arg declared_type64='TextEncoding*' type64='^I'/>
<arg declared_type64='ItemCount' type64='Q'/>
<arg declared_type64='ItemCount*' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginGetCountMailEncodingsPtr' function_pointer='true' name='PluginGetCountMailTextEncodings' type64='^?'>
<arg declared_type64='TextEncoding*' type64='^I'/>
<arg declared_type64='ItemCount' type64='Q'/>
<arg declared_type64='ItemCount*' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginGetTextEncodingInternetNamePtr' function_pointer='true' name='PluginGetTextEncodingInternetName' type64='^?'>
<arg declared_type64='TextEncoding' type64='I'/>
<arg declared_type64='unsigned char*' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='TECPluginGetTextEncodingFromInternetNamePtr' function_pointer='true' name='PluginGetTextEncodingFromInternetName' type64='^?'>
<arg declared_type64='TextEncoding*' type64='^I'/>
<arg declared_type64='ConstStr255Param' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
</struct>
<struct name='TECPluginStateRec' type64='{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}'>
<field declared_type64='UInt8' name='state1' type64='C'/>
<field declared_type64='UInt8' name='state2' type64='C'/>
<field declared_type64='UInt8' name='state3' type64='C'/>
<field declared_type64='UInt8' name='state4' type64='C'/>
<field declared_type64='UInt32' name='longState1' type64='I'/>
<field declared_type64='UInt32' name='longState2' type64='I'/>
<field declared_type64='UInt32' name='longState3' type64='I'/>
<field declared_type64='UInt32' name='longState4' type64='I'/>
</struct>
<struct name='TECSnifferContextRec' type64='{TECSnifferContextRec=&quot;pluginRec&quot;*&quot;encoding&quot;I&quot;maxErrors&quot;Q&quot;maxFeatures&quot;Q&quot;textInputBuffer&quot;*&quot;textInputBufferEnd&quot;*&quot;numFeatures&quot;Q&quot;numErrors&quot;Q&quot;contextRefCon&quot;^v&quot;sniffProc&quot;^?&quot;clearContextInfoProc&quot;^?&quot;pluginState&quot;{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}}'>
<field declared_type64='Ptr' name='pluginRec' type64='*'/>
<field declared_type64='TextEncoding' name='encoding' type64='I'/>
<field declared_type64='ItemCount' name='maxErrors' type64='Q'/>
<field declared_type64='ItemCount' name='maxFeatures' type64='Q'/>
<field declared_type64='ConstTextPtr' name='textInputBuffer' type64='*'/>
<field declared_type64='ConstTextPtr' name='textInputBufferEnd' type64='*'/>
<field declared_type64='ItemCount' name='numFeatures' type64='Q'/>
<field declared_type64='ItemCount' name='numErrors' type64='Q'/>
<field declared_type64='URefCon' name='contextRefCon' type64='^v'/>
<field declared_type64='ProcPtr' function_pointer='true' name='sniffProc' type64='^?'>
<retval declared_type64='long' type64='q'/>
</field>
<field declared_type64='ProcPtr' function_pointer='true' name='clearContextInfoProc' type64='^?'>
<retval declared_type64='long' type64='q'/>
</field>
<field declared_type64='TECPluginStateRec' name='pluginState' type64='{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}'/>
</struct>
<struct name='TECSubTextEncodingRec' type64='{TECSubTextEncodingRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;count&quot;I&quot;subEncodings&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}'>
<field declared_type64='UInt32' name='offset' type64='I'/>
<field declared_type64='TextEncodingRec' name='searchEncoding' type64='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='TextEncodingRec' name='subEncodings' type64='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
</struct>
<struct name='TECSubTextEncodingsRec' type64='{TECSubTextEncodingsRec=&quot;count&quot;I&quot;subTextEncodingRec&quot;{TECSubTextEncodingRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;count&quot;I&quot;subEncodings&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}}'>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='TECSubTextEncodingRec' name='subTextEncodingRec' type64='{TECSubTextEncodingRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;count&quot;I&quot;subEncodings&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}'/>
</struct>
<struct name='TMTask' type64='{TMTask=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;tmAddr&quot;^?&quot;tmCount&quot;q&quot;tmWakeUp&quot;q&quot;tmReserved&quot;q}'>
<field declared_type64='QElemPtr' name='qLink' type64='^{QElem=^{QElem}s[1s]}'/>
<field declared_type64='short' name='qType' type64='s'/>
<field declared_type64='TimerUPP' function_pointer='true' name='tmAddr' type64='^?'>
<arg declared_type64='TMTaskPtr' type64='^{TMTask=^{QElem}s^?qqq}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='long' name='tmCount' type64='q'/>
<field declared_type64='long' name='tmWakeUp' type64='q'/>
<field declared_type64='long' name='tmReserved' type64='q'/>
</struct>
<struct name='TableDirectoryRecord' type64='{TableDirectoryRecord=&quot;tableSignature&quot;I&quot;reserved&quot;I&quot;tableStartOffset&quot;I&quot;tableSize&quot;I}'>
<field declared_type64='OSType' name='tableSignature' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='tableStartOffset' type64='I'/>
<field declared_type64='UInt32' name='tableSize' type64='I'/>
</struct>
<struct name='TextChunk' type64='{TextChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;text&quot;[1c]}'>
<field declared_type64='UInt32' name='ckID' type64='I'/>
<field declared_type64='SInt32' name='ckSize' type64='i'/>
<field declared_type64='char*' name='text' type64='[1c]'/>
</struct>
<struct name='TextEncodingRec' type64='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'>
<field declared_type64='UInt32' name='base' type64='I'/>
<field declared_type64='UInt32' name='variant' type64='I'/>
<field declared_type64='UInt32' name='format' type64='I'/>
</struct>
<struct name='TextEncodingRun' type64='{TextEncodingRun=&quot;offset&quot;Q&quot;textEncoding&quot;I}'>
<field declared_type64='ByteOffset' name='offset' type64='Q'/>
<field declared_type64='TextEncoding' name='textEncoding' type64='I'/>
</struct>
<struct name='TogglePB' type64='{TogglePB=&quot;togFlags&quot;q&quot;amChars&quot;I&quot;pmChars&quot;I&quot;reserved&quot;[4q]}'>
<field declared_type64='long' name='togFlags' type64='q'/>
<field declared_type64='ResType' name='amChars' type64='I'/>
<field declared_type64='ResType' name='pmChars' type64='I'/>
<field declared_type64='long*' name='reserved' type64='[4q]'/>
</struct>
<struct name='TokenBlock' type64='{TokenBlock=&quot;source&quot;*&quot;sourceLength&quot;q&quot;tokenList&quot;*&quot;tokenLength&quot;q&quot;tokenCount&quot;q&quot;stringList&quot;*&quot;stringLength&quot;q&quot;stringCount&quot;q&quot;doString&quot;B&quot;doAppend&quot;B&quot;doAlphanumeric&quot;B&quot;doNest&quot;B&quot;leftDelims&quot;[2s]&quot;rightDelims&quot;[2s]&quot;leftComment&quot;[4s]&quot;rightComment&quot;[4s]&quot;escapeCode&quot;s&quot;decimalCode&quot;s&quot;itlResource&quot;^*&quot;reserved&quot;[8q]}'>
<field declared_type64='Ptr' name='source' type64='*'/>
<field declared_type64='long' name='sourceLength' type64='q'/>
<field declared_type64='Ptr' name='tokenList' type64='*'/>
<field declared_type64='long' name='tokenLength' type64='q'/>
<field declared_type64='long' name='tokenCount' type64='q'/>
<field declared_type64='Ptr' name='stringList' type64='*'/>
<field declared_type64='long' name='stringLength' type64='q'/>
<field declared_type64='long' name='stringCount' type64='q'/>
<field declared_type64='Boolean' name='doString' type64='B'/>
<field declared_type64='Boolean' name='doAppend' type64='B'/>
<field declared_type64='Boolean' name='doAlphanumeric' type64='B'/>
<field declared_type64='Boolean' name='doNest' type64='B'/>
<field declared_type64='ScriptTokenType*' name='leftDelims' type64='[2s]'/>
<field declared_type64='ScriptTokenType*' name='rightDelims' type64='[2s]'/>
<field declared_type64='ScriptTokenType*' name='leftComment' type64='[4s]'/>
<field declared_type64='ScriptTokenType*' name='rightComment' type64='[4s]'/>
<field declared_type64='ScriptTokenType' name='escapeCode' type64='s'/>
<field declared_type64='ScriptTokenType' name='decimalCode' type64='s'/>
<field declared_type64='Handle' name='itlResource' type64='^*'/>
<field declared_type64='long*' name='reserved' type64='[8q]'/>
</struct>
<struct name='TokenRec' type64='{TokenRec=&quot;theToken&quot;s&quot;position&quot;*&quot;length&quot;q&quot;stringPosition&quot;*}'>
<field declared_type64='ScriptTokenType' name='theToken' type64='s'/>
<field declared_type64='Ptr' name='position' type64='*'/>
<field declared_type64='long' name='length' type64='q'/>
<field declared_type64='StringPtr' name='stringPosition' type64='*'/>
</struct>
<struct name='UCKeyLayoutFeatureInfo' type64='{UCKeyLayoutFeatureInfo=&quot;keyLayoutFeatureInfoFormat&quot;S&quot;reserved&quot;S&quot;maxOutputStringLength&quot;I}'>
<field declared_type64='UInt16' name='keyLayoutFeatureInfoFormat' type64='S'/>
<field declared_type64='UInt16' name='reserved' type64='S'/>
<field declared_type64='UInt32' name='maxOutputStringLength' type64='I'/>
</struct>
<struct name='UCKeyModifiersToTableNum' type64='{UCKeyModifiersToTableNum=&quot;keyModifiersToTableNumFormat&quot;S&quot;defaultTableNum&quot;S&quot;modifiersCount&quot;I&quot;tableNum&quot;[1C]}'>
<field declared_type64='UInt16' name='keyModifiersToTableNumFormat' type64='S'/>
<field declared_type64='UInt16' name='defaultTableNum' type64='S'/>
<field declared_type64='UInt32' name='modifiersCount' type64='I'/>
<field declared_type64='UInt8*' name='tableNum' type64='[1C]'/>
</struct>
<struct name='UCKeySequenceDataIndex' type64='{UCKeySequenceDataIndex=&quot;keySequenceDataIndexFormat&quot;S&quot;charSequenceCount&quot;S&quot;charSequenceOffsets&quot;[1S]}'>
<field declared_type64='UInt16' name='keySequenceDataIndexFormat' type64='S'/>
<field declared_type64='UInt16' name='charSequenceCount' type64='S'/>
<field declared_type64='UInt16*' name='charSequenceOffsets' type64='[1S]'/>
</struct>
<struct name='UCKeyStateEntryRange' type64='{UCKeyStateEntryRange=&quot;curStateStart&quot;S&quot;curStateRange&quot;C&quot;deltaMultiplier&quot;C&quot;charData&quot;S&quot;nextState&quot;S}'>
<field declared_type64='UInt16' name='curStateStart' type64='S'/>
<field declared_type64='UInt8' name='curStateRange' type64='C'/>
<field declared_type64='UInt8' name='deltaMultiplier' type64='C'/>
<field declared_type64='UCKeyCharSeq' name='charData' type64='S'/>
<field declared_type64='UInt16' name='nextState' type64='S'/>
</struct>
<struct name='UCKeyStateEntryTerminal' type64='{UCKeyStateEntryTerminal=&quot;curState&quot;S&quot;charData&quot;S}'>
<field declared_type64='UInt16' name='curState' type64='S'/>
<field declared_type64='UCKeyCharSeq' name='charData' type64='S'/>
</struct>
<struct name='UCKeyStateRecord' type64='{UCKeyStateRecord=&quot;stateZeroCharData&quot;S&quot;stateZeroNextState&quot;S&quot;stateEntryCount&quot;S&quot;stateEntryFormat&quot;S&quot;stateEntryData&quot;[1I]}'>
<field declared_type64='UCKeyCharSeq' name='stateZeroCharData' type64='S'/>
<field declared_type64='UInt16' name='stateZeroNextState' type64='S'/>
<field declared_type64='UInt16' name='stateEntryCount' type64='S'/>
<field declared_type64='UInt16' name='stateEntryFormat' type64='S'/>
<field declared_type64='UInt32*' name='stateEntryData' type64='[1I]'/>
</struct>
<struct name='UCKeyStateRecordsIndex' type64='{UCKeyStateRecordsIndex=&quot;keyStateRecordsIndexFormat&quot;S&quot;keyStateRecordCount&quot;S&quot;keyStateRecordOffsets&quot;[1I]}'>
<field declared_type64='UInt16' name='keyStateRecordsIndexFormat' type64='S'/>
<field declared_type64='UInt16' name='keyStateRecordCount' type64='S'/>
<field declared_type64='UInt32*' name='keyStateRecordOffsets' type64='[1I]'/>
</struct>
<struct name='UCKeyStateTerminators' type64='{UCKeyStateTerminators=&quot;keyStateTerminatorsFormat&quot;S&quot;keyStateTerminatorCount&quot;S&quot;keyStateTerminators&quot;[1S]}'>
<field declared_type64='UInt16' name='keyStateTerminatorsFormat' type64='S'/>
<field declared_type64='UInt16' name='keyStateTerminatorCount' type64='S'/>
<field declared_type64='UCKeyCharSeq*' name='keyStateTerminators' type64='[1S]'/>
</struct>
<struct name='UCKeyToCharTableIndex' type64='{UCKeyToCharTableIndex=&quot;keyToCharTableIndexFormat&quot;S&quot;keyToCharTableSize&quot;S&quot;keyToCharTableCount&quot;I&quot;keyToCharTableOffsets&quot;[1I]}'>
<field declared_type64='UInt16' name='keyToCharTableIndexFormat' type64='S'/>
<field declared_type64='UInt16' name='keyToCharTableSize' type64='S'/>
<field declared_type64='UInt32' name='keyToCharTableCount' type64='I'/>
<field declared_type64='UInt32*' name='keyToCharTableOffsets' type64='[1I]'/>
</struct>
<struct name='UCKeyboardLayout' type64='{UCKeyboardLayout=&quot;keyLayoutHeaderFormat&quot;S&quot;keyLayoutDataVersion&quot;S&quot;keyLayoutFeatureInfoOffset&quot;I&quot;keyboardTypeCount&quot;I&quot;keyboardTypeList&quot;[1{UCKeyboardTypeHeader=&quot;keyboardTypeFirst&quot;I&quot;keyboardTypeLast&quot;I&quot;keyModifiersToTableNumOffset&quot;I&quot;keyToCharTableIndexOffset&quot;I&quot;keyStateRecordsIndexOffset&quot;I&quot;keyStateTerminatorsOffset&quot;I&quot;keySequenceDataIndexOffset&quot;I}]}'>
<field declared_type64='UInt16' name='keyLayoutHeaderFormat' type64='S'/>
<field declared_type64='UInt16' name='keyLayoutDataVersion' type64='S'/>
<field declared_type64='UInt32' name='keyLayoutFeatureInfoOffset' type64='I'/>
<field declared_type64='UInt32' name='keyboardTypeCount' type64='I'/>
<field declared_type64='UCKeyboardTypeHeader*' name='keyboardTypeList' type64='[1{UCKeyboardTypeHeader=&quot;keyboardTypeFirst&quot;I&quot;keyboardTypeLast&quot;I&quot;keyModifiersToTableNumOffset&quot;I&quot;keyToCharTableIndexOffset&quot;I&quot;keyStateRecordsIndexOffset&quot;I&quot;keyStateTerminatorsOffset&quot;I&quot;keySequenceDataIndexOffset&quot;I}]'/>
</struct>
<struct name='UCKeyboardTypeHeader' type64='{UCKeyboardTypeHeader=&quot;keyboardTypeFirst&quot;I&quot;keyboardTypeLast&quot;I&quot;keyModifiersToTableNumOffset&quot;I&quot;keyToCharTableIndexOffset&quot;I&quot;keyStateRecordsIndexOffset&quot;I&quot;keyStateTerminatorsOffset&quot;I&quot;keySequenceDataIndexOffset&quot;I}'>
<field declared_type64='UInt32' name='keyboardTypeFirst' type64='I'/>
<field declared_type64='UInt32' name='keyboardTypeLast' type64='I'/>
<field declared_type64='UInt32' name='keyModifiersToTableNumOffset' type64='I'/>
<field declared_type64='UInt32' name='keyToCharTableIndexOffset' type64='I'/>
<field declared_type64='UInt32' name='keyStateRecordsIndexOffset' type64='I'/>
<field declared_type64='UInt32' name='keyStateTerminatorsOffset' type64='I'/>
<field declared_type64='UInt32' name='keySequenceDataIndexOffset' type64='I'/>
</struct>
<struct name='UTCDateTime' type64='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'>
<field declared_type64='UInt16' name='highSeconds' type64='S'/>
<field declared_type64='UInt32' name='lowSeconds' type64='I'/>
<field declared_type64='UInt16' name='fraction' type64='S'/>
</struct>
<struct name='UnicodeMapping' type64='{UnicodeMapping=&quot;unicodeEncoding&quot;I&quot;otherEncoding&quot;I&quot;mappingVersion&quot;i}'>
<field declared_type64='TextEncoding' name='unicodeEncoding' type64='I'/>
<field declared_type64='TextEncoding' name='otherEncoding' type64='I'/>
<field declared_type64='UnicodeMapVersion' name='mappingVersion' type64='i'/>
</struct>
<struct name='UntokenTable' type64='{UntokenTable=&quot;len&quot;s&quot;lastToken&quot;s&quot;index&quot;[256s]}'>
<field declared_type64='short' name='len' type64='s'/>
<field declared_type64='short' name='lastToken' type64='s'/>
<field declared_type64='short*' name='index' type64='[256s]'/>
</struct>
<struct name='VectorInformation' type64='{VectorInformationIntel64=&quot;Registers&quot;[16(Vector128Intel=&quot;s&quot;&quot;si&quot;&quot;sd&quot;&quot;c&quot;[16C])]}'>
<field declared_type64='Vector128Intel*' name='Registers' type64='[16(Vector128Intel=&quot;s&quot;&quot;si&quot;&quot;sd&quot;&quot;c&quot;[16C])]'/>
</struct>
<struct name='VectorInformationIntel64' type64='{VectorInformationIntel64=&quot;Registers&quot;[16(Vector128Intel=&quot;s&quot;&quot;si&quot;&quot;sd&quot;&quot;c&quot;[16C])]}'>
<field declared_type64='Vector128Intel*' name='Registers' type64='[16(Vector128Intel=&quot;s&quot;&quot;si&quot;&quot;sd&quot;&quot;c&quot;[16C])]'/>
</struct>
<struct name='VectorInformationPowerPC' type64='{VectorInformationPowerPC=&quot;Registers&quot;[32(Vector128=&quot;l&quot;[4Q]&quot;s&quot;[8S]&quot;c&quot;[16C])]&quot;VSCR&quot;(Vector128=&quot;l&quot;[4Q]&quot;s&quot;[8S]&quot;c&quot;[16C])&quot;VRsave&quot;I}'>
<field declared_type64='Vector128*' name='Registers' type64='[32(Vector128=&quot;l&quot;[4Q]&quot;s&quot;[8S]&quot;c&quot;[16C])]'/>
<field declared_type64='Vector128' name='VSCR' type64='(Vector128=&quot;l&quot;[4Q]&quot;s&quot;[8S]&quot;c&quot;[16C])'/>
<field declared_type64='UInt32' name='VRsave' type64='I'/>
</struct>
<struct name='VolMountInfoHeader' type64='{VolMountInfoHeader=&quot;length&quot;s&quot;media&quot;I}'>
<field declared_type64='SInt16' name='length' type64='s'/>
<field declared_type64='VolumeType' name='media' type64='I'/>
</struct>
<struct name='VolumeMountInfoHeader' type64='{VolumeMountInfoHeader=&quot;length&quot;s&quot;media&quot;I&quot;flags&quot;s}'>
<field declared_type64='SInt16' name='length' type64='s'/>
<field declared_type64='VolumeType' name='media' type64='I'/>
<field declared_type64='SInt16' name='flags' type64='s'/>
</struct>
<struct name='WideCharArr' type64='{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}'>
<field declared_type64='short' name='size' type64='s'/>
<field declared_type64='WideChar*' name='data' type64='[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]'/>
</struct>
<struct name='XLibContainerHeader' type64='{XLibContainerHeader=&quot;tag1&quot;I&quot;tag2&quot;I&quot;currentFormat&quot;I&quot;containerStringsOffset&quot;I&quot;exportHashOffset&quot;I&quot;exportKeyOffset&quot;I&quot;exportSymbolOffset&quot;I&quot;exportNamesOffset&quot;I&quot;exportHashTablePower&quot;I&quot;exportedSymbolCount&quot;I&quot;fragNameOffset&quot;I&quot;fragNameLength&quot;I&quot;dylibPathOffset&quot;I&quot;dylibPathLength&quot;I&quot;cpuFamily&quot;I&quot;cpuModel&quot;I&quot;dateTimeStamp&quot;I&quot;currentVersion&quot;I&quot;oldDefVersion&quot;I&quot;oldImpVersion&quot;I}'>
<field declared_type64='OSType' name='tag1' type64='I'/>
<field declared_type64='OSType' name='tag2' type64='I'/>
<field declared_type64='UInt32' name='currentFormat' type64='I'/>
<field declared_type64='UInt32' name='containerStringsOffset' type64='I'/>
<field declared_type64='UInt32' name='exportHashOffset' type64='I'/>
<field declared_type64='UInt32' name='exportKeyOffset' type64='I'/>
<field declared_type64='UInt32' name='exportSymbolOffset' type64='I'/>
<field declared_type64='UInt32' name='exportNamesOffset' type64='I'/>
<field declared_type64='UInt32' name='exportHashTablePower' type64='I'/>
<field declared_type64='UInt32' name='exportedSymbolCount' type64='I'/>
<field declared_type64='UInt32' name='fragNameOffset' type64='I'/>
<field declared_type64='UInt32' name='fragNameLength' type64='I'/>
<field declared_type64='UInt32' name='dylibPathOffset' type64='I'/>
<field declared_type64='UInt32' name='dylibPathLength' type64='I'/>
<field declared_type64='OSType' name='cpuFamily' type64='I'/>
<field declared_type64='OSType' name='cpuModel' type64='I'/>
<field declared_type64='UInt32' name='dateTimeStamp' type64='I'/>
<field declared_type64='UInt32' name='currentVersion' type64='I'/>
<field declared_type64='UInt32' name='oldDefVersion' type64='I'/>
<field declared_type64='UInt32' name='oldImpVersion' type64='I'/>
</struct>
<struct name='XLibExportedSymbol' type64='{XLibExportedSymbol=&quot;classAndName&quot;I&quot;bpOffset&quot;I}'>
<field declared_type64='UInt32' name='classAndName' type64='I'/>
<field declared_type64='UInt32' name='bpOffset' type64='I'/>
</struct>
<struct name='XLibExportedSymbolHashSlot' type64='{PEFExportedSymbolHashSlot=&quot;countAndStart&quot;I}'>
<field declared_type64='UInt32' name='countAndStart' type64='I'/>
</struct>
<struct name='XLibExportedSymbolKey' type64='{PEFExportedSymbolKey=&quot;u&quot;(?=&quot;fullHashWord&quot;I&quot;splitHashWord&quot;{PEFSplitHashWord=&quot;nameLength&quot;S&quot;hashValue&quot;S})}'>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h:496:3)' name='u' type64='(?=&quot;fullHashWord&quot;I&quot;splitHashWord&quot;{PEFSplitHashWord=&quot;nameLength&quot;S&quot;hashValue&quot;S})'/>
</struct>
<struct name='decform' type64='{decform=&quot;style&quot;c&quot;unused&quot;c&quot;digits&quot;s}'>
<field declared_type64='char' name='style' type64='c'/>
<field declared_type64='char' name='unused' type64='c'/>
<field declared_type64='short' name='digits' type64='s'/>
</struct>
<struct name='decimal' type64='{decimal=&quot;sgn&quot;c&quot;unused&quot;c&quot;exp&quot;s&quot;sig&quot;{?=&quot;length&quot;C&quot;text&quot;[36C]&quot;unused&quot;C}}'>
<field declared_type64='char' name='sgn' type64='c'/>
<field declared_type64='char' name='unused' type64='c'/>
<field declared_type64='short' name='exp' type64='s'/>
<field declared_type64='struct (anonymous struct at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h:1320:5)' name='sig' type64='{_structanonymousstructatApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX1014sdkSystemLibraryFrameworksCoreServicesframeworkFrameworksCarbonCoreframeworkHeadersfph13205=&quot;length&quot;C&quot;text&quot;[36C]&quot;unused&quot;C}'/>
</struct>
<cftype name='AreaID' type64='^{OpaqueAreaID=}'/>
<cftype name='CollatorRef' type64='^{OpaqueCollatorRef=}'/>
<cftype name='Collection' type64='^{OpaqueCollection=}'/>
<cftype name='FNSubscriptionRef' type64='^{OpaqueFNSubscriptionRef=}'/>
<cftype name='FSFileOperationRef' type64='^{__FSFileOperation=}'/>
<cftype name='FSFileSecurityRef' type64='^{__FSFileSecurity=}'/>
<cftype name='FSIterator' type64='^{OpaqueFSIterator=}'/>
<cftype name='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<cftype name='LocaleRef' type64='^{OpaqueLocaleRef=}'/>
<cftype name='MPAddressSpaceID' type64='^{OpaqueMPAddressSpaceID=}'/>
<cftype name='MPAreaID' type64='^{OpaqueMPAreaID=}'/>
<cftype name='MPCoherenceID' type64='^{OpaqueMPCoherenceID=}'/>
<cftype name='MPConsoleID' type64='^{OpaqueMPConsoleID=}'/>
<cftype name='MPCpuID' type64='^{OpaqueMPCpuID=}'/>
<cftype name='MPCriticalRegionID' type64='^{OpaqueMPCriticalRegionID=}'/>
<cftype name='MPEventID' type64='^{OpaqueMPEventID=}'/>
<cftype name='MPNotificationID' type64='^{OpaqueMPNotificationID=}'/>
<cftype name='MPOpaqueID' type64='^{OpaqueMPOpaqueID=}'/>
<cftype name='MPProcessID' type64='^{OpaqueMPProcessID=}'/>
<cftype name='MPQueueID' type64='^{OpaqueMPQueueID=}'/>
<cftype name='MPSemaphoreID' type64='^{OpaqueMPSemaphoreID=}'/>
<cftype name='MPTaskID' type64='^{OpaqueMPTaskID=}'/>
<cftype name='MPTimerID' type64='^{OpaqueMPTimerID=}'/>
<cftype name='TECObjectRef' type64='^{OpaqueTECObjectRef=}'/>
<cftype name='TECSnifferObjectRef' type64='^{OpaqueTECSnifferObjectRef=}'/>
<cftype name='TextBreakLocatorRef' type64='^{OpaqueTextBreakLocatorRef=}'/>
<cftype name='TextToUnicodeInfo' type64='^{OpaqueTextToUnicodeInfo=}'/>
<cftype name='UCTypeSelectRef' type64='^{OpaqueUCTypeSelectRef=}'/>
<cftype name='UnicodeToTextInfo' type64='^{OpaqueUnicodeToTextInfo=}'/>
<cftype name='UnicodeToTextRunInfo' type64='^{OpaqueUnicodeToTextRunInfo=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFSOperationBytesCompleteKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFSOperationBytesRemainingKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFSOperationObjectsCompleteKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFSOperationObjectsRemainingKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFSOperationThroughputKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFSOperationTotalBytesKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFSOperationTotalObjectsKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFSOperationTotalUserVisibleObjectsKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFSOperationUserVisibleObjectsCompleteKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFSOperationUserVisibleObjectsRemainingKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='double_t' name='pi' type64='d'/>
<string_constant name='ACE2to1Name' value='pACE 2-to-1'/>
<string_constant name='ACE8to3Name' value='pACE 8-to-3'/>
<string_constant name='DEBUG_ASSERT_COMPONENT_NAME_STRING' value='Third Party Client'/>
<string_constant name='MACE3to1Name' value='pMACE 3-to-1'/>
<string_constant name='MACE6to1Name' value='pMACE 6-to-1'/>
<string_constant name='MPCopyrightNotice' value='Copyright © 1995-2000 Apple Computer, Inc.
'/>
<string_constant name='MPLibraryCName' value='MPLibrary'/>
<string_constant name='MPLibraryName' value='MPLibrary'/>
<string_constant name='MPLibraryPName' value='pMPLibrary'/>
<string_constant name='MP_API_Version' value='2.3'/>
<string_constant name='NoneName' value='pnot compressed'/>
<string_constant name='kComponentSignatureString' value='Third Party Client'/>
<string_constant name='kTECMacOSXDispatchTableNameString' value='ConverterPluginGetPluginDispatchTable'/>
<enum name='AAPNotCreatedErr' value64='-2120'/>
<enum name='AAPNotFoundErr' value64='-2121'/>
<enum name='ACE2Type' value64='1094927666'/>
<enum name='ACE8Type' value64='1094927672'/>
<enum name='AIFCID' value64='1095321155'/>
<enum name='AIFCVersion1' value64='2726318400'/>
<enum name='AIFFID' value64='1095321158'/>
<enum name='ASDBadForkErr' value64='-2123'/>
<enum name='ASDBadHeaderErr' value64='-2122'/>
<enum name='ASDEntryNotFoundErr' value64='-2124'/>
<enum name='AnnotationID' value64='1095650895'/>
<enum name='AppleShareMediaType' value64='1634103405'/>
<enum name='ApplicationSpecificID' value64='1095782476'/>
<enum name='AudioRecordingID' value64='1095062340'/>
<enum name='AuthorID' value64='1096111176'/>
<enum name='CDEFNFnd' value64='88'/>
<enum name='COMPONENT_SIGNATURE' value64='1059733290'/>
<enum name='CantDecompress' value64='-186'/>
<enum name='CommentID' value64='1129270612'/>
<enum name='CommonID' value64='1129270605'/>
<enum name='CopyrightID' value64='677587232'/>
<enum name='DEBUGFULL' value64='4'/>
<enum name='DEBUGLEVEL' value64='0'/>
<enum name='DEBUG_ASSERT_PRODUCTION_CODE' value64='1'/>
<enum name='DEBUG_LEVEL_BREAK_ONLY' value64='1'/>
<enum name='DEBUG_LEVEL_EXTERNAL' value64='3'/>
<enum name='DEBUG_LEVEL_INTERNAL' value64='4'/>
<enum name='DEBUG_LEVEL_PRODUCTION' value64='0'/>
<enum name='DEBUG_NO_OPTIONS' value64='0'/>
<enum name='DECSTROUTLEN' value64='80'/>
<enum name='EQUALTO' value64='2'/>
<enum name='FIXEDDECIMAL' value64='1'/>
<enum name='FLOATDECIMAL' value64='0'/>
<enum name='FORMID' value64='1179603533'/>
<enum name='FormatVersionID' value64='1180058962'/>
<enum name='ForwardBackwardLooping' value64='2'/>
<enum name='ForwardLooping' value64='1'/>
<enum name='GREATERTHAN' value64='0'/>
<enum name='IncludePEF2Declarations' value64='0'/>
<enum name='InstrumentID' value64='1229869908'/>
<enum name='LESSTHAN' value64='1'/>
<enum name='MACE3Type' value64='1296122675'/>
<enum name='MACE6Type' value64='1296122678'/>
<enum name='MIDIDataID' value64='1296647241'/>
<enum name='MPLibrary_DevelopmentRevision' value64='1'/>
<enum name='MPLibrary_MajorVersion' value64='2'/>
<enum name='MPLibrary_MinorVersion' value64='3'/>
<enum name='MPLibrary_Release' value64='1'/>
<enum name='MarkerID' value64='1296126539'/>
<enum name='NameID' value64='1312902469'/>
<enum name='NoLooping' value64='0'/>
<enum name='NoneType' value64='1313820229'/>
<enum name='OSAControlFlowError' value64='-2755'/>
<enum name='OSADuplicateHandler' value64='-2752'/>
<enum name='OSADuplicateParameter' value64='-2750'/>
<enum name='OSADuplicateProperty' value64='-2751'/>
<enum name='OSAIllegalAccess' value64='-1723'/>
<enum name='OSAIllegalAssign' value64='-10003'/>
<enum name='OSAIllegalIndex' value64='-1719'/>
<enum name='OSAIllegalRange' value64='-1720'/>
<enum name='OSAInconsistentDeclarations' value64='-2754'/>
<enum name='OSAMessageNotUnderstood' value64='-1708'/>
<enum name='OSAMissingParameter' value64='-1701'/>
<enum name='OSAParameterMismatch' value64='-1721'/>
<enum name='OSASyntaxError' value64='-2740'/>
<enum name='OSASyntaxTypeError' value64='-2741'/>
<enum name='OSATokenTooLong' value64='-2742'/>
<enum name='OSAUndefinedHandler' value64='-1717'/>
<enum name='OSAUndefinedVariable' value64='-2753'/>
<enum name='PEFMaskedBasicOpcodes' value64='255'/>
<enum name='SIGDIGLEN' value64='36'/>
<enum name='SlpTypeErr' value64='-5'/>
<enum name='SoundDataID' value64='1397968452'/>
<enum name='UNORDERED' value64='3'/>
<enum name='WDEFNFnd' value64='87'/>
<enum name='abbrevDate' value64='2'/>
<enum name='abortErr' value64='-27'/>
<enum name='acuteUprA' value64='231'/>
<enum name='acuteUprI' value64='234'/>
<enum name='acuteUprO' value64='238'/>
<enum name='acuteUprU' value64='242'/>
<enum name='addRefFailed' value64='-195'/>
<enum name='addResFailed' value64='-194'/>
<enum name='afpAccessDenied' value64='-5000'/>
<enum name='afpAlreadyLoggedInErr' value64='-5047'/>
<enum name='afpAlreadyMounted' value64='-5062'/>
<enum name='afpAuthContinue' value64='-5001'/>
<enum name='afpBadDirIDType' value64='-5060'/>
<enum name='afpBadIDErr' value64='-5039'/>
<enum name='afpBadUAM' value64='-5002'/>
<enum name='afpBadVersNum' value64='-5003'/>
<enum name='afpBitmapErr' value64='-5004'/>
<enum name='afpCallNotAllowed' value64='-5048'/>
<enum name='afpCallNotSupported' value64='-5024'/>
<enum name='afpCantMountMoreSrvre' value64='-5061'/>
<enum name='afpCantMove' value64='-5005'/>
<enum name='afpCantRename' value64='-5028'/>
<enum name='afpCatalogChanged' value64='-5037'/>
<enum name='afpContainsSharedErr' value64='-5033'/>
<enum name='afpDenyConflict' value64='-5006'/>
<enum name='afpDiffVolErr' value64='-5036'/>
<enum name='afpDirNotEmpty' value64='-5007'/>
<enum name='afpDirNotFound' value64='-5029'/>
<enum name='afpDiskFull' value64='-5008'/>
<enum name='afpEofError' value64='-5009'/>
<enum name='afpFileBusy' value64='-5010'/>
<enum name='afpFlatVol' value64='-5011'/>
<enum name='afpIDExists' value64='-5035'/>
<enum name='afpIDNotFound' value64='-5034'/>
<enum name='afpIconTypeError' value64='-5030'/>
<enum name='afpInsideSharedErr' value64='-5043'/>
<enum name='afpInsideTrashErr' value64='-5044'/>
<enum name='afpItemNotFound' value64='-5012'/>
<enum name='afpLockErr' value64='-5013'/>
<enum name='afpMiscErr' value64='-5014'/>
<enum name='afpNoMoreLocks' value64='-5015'/>
<enum name='afpNoServer' value64='-5016'/>
<enum name='afpObjectExists' value64='-5017'/>
<enum name='afpObjectLocked' value64='-5032'/>
<enum name='afpObjectNotFound' value64='-5018'/>
<enum name='afpObjectTypeErr' value64='-5025'/>
<enum name='afpParmErr' value64='-5019'/>
<enum name='afpPwdExpiredErr' value64='-5042'/>
<enum name='afpPwdNeedsChangeErr' value64='-5045'/>
<enum name='afpPwdPolicyErr' value64='-5046'/>
<enum name='afpPwdSameErr' value64='-5040'/>
<enum name='afpPwdTooShortErr' value64='-5041'/>
<enum name='afpRangeNotLocked' value64='-5020'/>
<enum name='afpRangeOverlap' value64='-5021'/>
<enum name='afpSameNodeErr' value64='-5063'/>
<enum name='afpSameObjectErr' value64='-5038'/>
<enum name='afpServerGoingDown' value64='-5027'/>
<enum name='afpSessClosed' value64='-5022'/>
<enum name='afpTooManyFilesOpen' value64='-5026'/>
<enum name='afpUserNotAuth' value64='-5023'/>
<enum name='afpVolLocked' value64='-5031'/>
<enum name='appIsDaemon' value64='-606'/>
<enum name='appMemFullErr' value64='-605'/>
<enum name='appModeErr' value64='-602'/>
<enum name='appVersionTooOld' value64='-876'/>
<enum name='appleLogo' value64='240'/>
<enum name='asiAliasName' value64='0'/>
<enum name='asiParentName' value64='1'/>
<enum name='asiServerName' value64='-2'/>
<enum name='asiVolumeName' value64='-1'/>
<enum name='asiZoneName' value64='-3'/>
<enum name='aspBadVersNum' value64='-1066'/>
<enum name='aspBufTooSmall' value64='-1067'/>
<enum name='aspNoAck' value64='-1075'/>
<enum name='aspNoMoreSess' value64='-1068'/>
<enum name='aspNoServers' value64='-1069'/>
<enum name='aspParamErr' value64='-1070'/>
<enum name='aspServerBusy' value64='-1071'/>
<enum name='aspSessClosed' value64='-1072'/>
<enum name='aspSizeErr' value64='-1073'/>
<enum name='aspTooMany' value64='-1074'/>
<enum name='atomIndexInvalidErr' value64='-2104'/>
<enum name='atomsNotOfSameTypeErr' value64='-2103'/>
<enum name='atpBadRsp' value64='-3107'/>
<enum name='atpLenErr' value64='-3106'/>
<enum name='authFailErr' value64='-927'/>
<enum name='auxiliaryExportDataUnavailable' value64='-2058'/>
<enum name='bAccessCntl' value64='18'/>
<enum name='bAllowCDiDataHandler' value64='17'/>
<enum name='bAncestorModDateChanges' value64='11'/>
<enum name='bDoNotDisplay' value64='24'/>
<enum name='bHasBTreeMgr' value64='5'/>
<enum name='bHasBlankAccessPrivileges' value64='4'/>
<enum name='bHasCatSearch' value64='7'/>
<enum name='bHasCopyFile' value64='14'/>
<enum name='bHasDesktopMgr' value64='12'/>
<enum name='bHasDirectIO' value64='1'/>
<enum name='bHasExtFSVol' value64='16'/>
<enum name='bHasFileIDs' value64='6'/>
<enum name='bHasFolderLock' value64='10'/>
<enum name='bHasMoveRename' value64='13'/>
<enum name='bHasOpenDeny' value64='15'/>
<enum name='bHasPersonalAccessPrivileges' value64='9'/>
<enum name='bHasShortName' value64='11'/>
<enum name='bHasUserGroupList' value64='8'/>
<enum name='bIsAutoMounted' value64='14'/>
<enum name='bIsCasePreserving' value64='23'/>
<enum name='bIsCaseSensitive' value64='22'/>
<enum name='bIsEjectable' value64='0'/>
<enum name='bIsOnExternalBus' value64='27'/>
<enum name='bIsOnInternalBus' value64='21'/>
<enum name='bIsRemovable' value64='25'/>
<enum name='bL2PCanMapFileBlocks' value64='9'/>
<enum name='bLimitFCBs' value64='31'/>
<enum name='bLocalWList' value64='30'/>
<enum name='bNoBootBlks' value64='19'/>
<enum name='bNoDeskItems' value64='20'/>
<enum name='bNoLclSync' value64='27'/>
<enum name='bNoMiniFndr' value64='29'/>
<enum name='bNoRootTimes' value64='26'/>
<enum name='bNoSwitchTo' value64='25'/>
<enum name='bNoSysDir' value64='17'/>
<enum name='bNoVNEdit' value64='28'/>
<enum name='bNoVolumeSizes' value64='20'/>
<enum name='bParentModDateChanges' value64='10'/>
<enum name='bSupports2TBFiles' value64='4'/>
<enum name='bSupportsAsyncRequests' value64='3'/>
<enum name='bSupportsExclusiveLocks' value64='18'/>
<enum name='bSupportsExtendedFileSecurity' value64='28'/>
<enum name='bSupportsFSCatalogSearch' value64='2'/>
<enum name='bSupportsFSExchangeObjects' value64='3'/>
<enum name='bSupportsHFSPlusAPIs' value64='1'/>
<enum name='bSupportsJournaling' value64='19'/>
<enum name='bSupportsLongNames' value64='5'/>
<enum name='bSupportsMultiScriptNames' value64='6'/>
<enum name='bSupportsNamedForks' value64='7'/>
<enum name='bSupportsSubtreeIterators' value64='8'/>
<enum name='bSupportsSymbolicLinks' value64='13'/>
<enum name='bSupportsTrashVolumeCache' value64='2'/>
<enum name='bTrshOffLine' value64='26'/>
<enum name='badATPSkt' value64='-1099'/>
<enum name='badBtSlpErr' value64='-70'/>
<enum name='badBuffNum' value64='-1100'/>
<enum name='badCallOrderErr' value64='-2209'/>
<enum name='badChannel' value64='-205'/>
<enum name='badCksmErr' value64='-69'/>
<enum name='badCodecCharacterizationErr' value64='-8993'/>
<enum name='badComponentInstance' value64='-2147450879'/>
<enum name='badComponentSelector' value64='-2147450878'/>
<enum name='badComponentType' value64='-2005'/>
<enum name='badControllerHeight' value64='-9994'/>
<enum name='badDBtSlp' value64='-73'/>
<enum name='badDCksum' value64='-72'/>
<enum name='badDataRefIndex' value64='-2050'/>
<enum name='badDelim' value64='3'/>
<enum name='badDepthErr' value64='-2207'/>
<enum name='badDictFormat' value64='-246'/>
<enum name='badDragFlavorErr' value64='-1852'/>
<enum name='badDragItemErr' value64='-1851'/>
<enum name='badDragRefErr' value64='-1850'/>
<enum name='badEditIndex' value64='-2033'/>
<enum name='badEditList' value64='-2017'/>
<enum name='badEditionFileErr' value64='-453'/>
<enum name='badEnding' value64='4'/>
<enum name='badExtResource' value64='-185'/>
<enum name='badFCBErr' value64='-1327'/>
<enum name='badFidErr' value64='-1307'/>
<enum name='badFileFormat' value64='-208'/>
<enum name='badFolderDescErr' value64='-4270'/>
<enum name='badFormat' value64='-206'/>
<enum name='badImageDescription' value64='-2001'/>
<enum name='badImageErr' value64='-1861'/>
<enum name='badImageRgnErr' value64='-1860'/>
<enum name='badInputText' value64='-247'/>
<enum name='badLocNameErr' value64='-931'/>
<enum name='badMDBErr' value64='-60'/>
<enum name='badMovErr' value64='-122'/>
<enum name='badPortNameErr' value64='-919'/>
<enum name='badProfileError' value64='-4008'/>
<enum name='badPublicMovieAtom' value64='-2002'/>
<enum name='badReqErr' value64='-909'/>
<enum name='badRoutingSizeErr' value64='-4276'/>
<enum name='badSGChannel' value64='-9406'/>
<enum name='badScrapRefErr' value64='-4990'/>
<enum name='badSectionErr' value64='-451'/>
<enum name='badServiceMethodErr' value64='-930'/>
<enum name='badSubPartErr' value64='-454'/>
<enum name='badTrackIndex' value64='-2028'/>
<enum name='badTranslationSpecErr' value64='-3031'/>
<enum name='badUnitErr' value64='-21'/>
<enum name='baseDblQuote' value64='227'/>
<enum name='baseSingQuote' value64='226'/>
<enum name='bdNamErr' value64='-37'/>
<enum name='breakRecd' value64='-90'/>
<enum name='breveMark' value64='249'/>
<enum name='btDupRecErr' value64='-414'/>
<enum name='btKeyAttrErr' value64='-417'/>
<enum name='btKeyLenErr' value64='-416'/>
<enum name='btNoSpace' value64='-413'/>
<enum name='btRecNotFnd' value64='-415'/>
<enum name='buf2SmallErr' value64='-3101'/>
<enum name='bufTooSmall' value64='-243'/>
<enum name='bufferIsSmall' value64='-607'/>
<enum name='buffersTooSmall' value64='-210'/>
<enum name='cDepthErr' value64='-157'/>
<enum name='cDevErr' value64='-155'/>
<enum name='cMatchErr' value64='-150'/>
<enum name='cNoMemErr' value64='-152'/>
<enum name='cProtectErr' value64='-154'/>
<enum name='cRangeErr' value64='-153'/>
<enum name='cResErr' value64='-156'/>
<enum name='cTempMemErr' value64='-151'/>
<enum name='calArabicCivil' value64='1'/>
<enum name='calArabicLunar' value64='2'/>
<enum name='calCoptic' value64='5'/>
<enum name='calGregorian' value64='0'/>
<enum name='calJapanese' value64='3'/>
<enum name='calJewish' value64='4'/>
<enum name='calPersian' value64='6'/>
<enum name='callNotSupportedByNodeErr' value64='-30542'/>
<enum name='cannotBeLeafAtomErr' value64='-2109'/>
<enum name='cannotDeferErr' value64='-625'/>
<enum name='cannotFindAtomErr' value64='-2101'/>
<enum name='cannotMakeContiguousErr' value64='-622'/>
<enum name='cannotMoveAttachedController' value64='-9999'/>
<enum name='cannotSetWidthOfAttachedController' value64='-9997'/>
<enum name='cantCreatePickerWindow' value64='-4004'/>
<enum name='cantCreateSingleForkFile' value64='-2022'/>
<enum name='cantDoThatInCurrentMode' value64='-9402'/>
<enum name='cantEnableTrack' value64='-2035'/>
<enum name='cantFindHandler' value64='-2003'/>
<enum name='cantGetFlavorErr' value64='-1854'/>
<enum name='cantLoadPackage' value64='-4005'/>
<enum name='cantLoadPickMethodErr' value64='-11003'/>
<enum name='cantLoadPicker' value64='-4003'/>
<enum name='cantOpenHandler' value64='-2004'/>
<enum name='cantPutPublicMovieAtom' value64='-2016'/>
<enum name='cantReadUtilities' value64='33280'/>
<enum name='cantReceiveFromSynthesizerOSErr' value64='-2073'/>
<enum name='cantSendToSynthesizerOSErr' value64='-2072'/>
<enum name='cantStepErr' value64='-75'/>
<enum name='catChangedErr' value64='-1304'/>
<enum name='cbNotFound' value64='-1102'/>
<enum name='cedilla' value64='252'/>
<enum name='centeredDot' value64='225'/>
<enum name='century' value64='128'/>
<enum name='cfragAbortClosureErr' value64='-2830'/>
<enum name='cfragArchitectureErr' value64='-2823'/>
<enum name='cfragCFMInternalErr' value64='-2819'/>
<enum name='cfragCFMStartupErr' value64='-2818'/>
<enum name='cfragCFragRsrcErr' value64='-2857'/>
<enum name='cfragClosureIDErr' value64='-2829'/>
<enum name='cfragConnectionIDErr' value64='-2801'/>
<enum name='cfragContainerIDErr' value64='-2828'/>
<enum name='cfragContextIDErr' value64='-2800'/>
<enum name='cfragDupRegistrationErr' value64='-2805'/>
<enum name='cfragExecFileRefErr' value64='-2854'/>
<enum name='cfragFileSizeErr' value64='-2825'/>
<enum name='cfragFirstErrCode' value64='-2800'/>
<enum name='cfragFirstReservedCode' value64='-2897'/>
<enum name='cfragFragmentCorruptErr' value64='-2820'/>
<enum name='cfragFragmentFormatErr' value64='-2806'/>
<enum name='cfragFragmentUsageErr' value64='-2824'/>
<enum name='cfragImportTooNewErr' value64='-2814'/>
<enum name='cfragImportTooOldErr' value64='-2813'/>
<enum name='cfragInitAtBootErr' value64='-2816'/>
<enum name='cfragInitFunctionErr' value64='-2821'/>
<enum name='cfragInitLoopErr' value64='-2815'/>
<enum name='cfragInitOrderErr' value64='-2812'/>
<enum name='cfragLastErrCode' value64='-2899'/>
<enum name='cfragLibConnErr' value64='-2817'/>
<enum name='cfragMapFileErr' value64='-2851'/>
<enum name='cfragNoApplicationErr' value64='-2822'/>
<enum name='cfragNoClientMemErr' value64='-2810'/>
<enum name='cfragNoIDsErr' value64='-2811'/>
<enum name='cfragNoLibraryErr' value64='-2804'/>
<enum name='cfragNoPositionErr' value64='-2808'/>
<enum name='cfragNoPrivateMemErr' value64='-2809'/>
<enum name='cfragNoRegistrationErr' value64='-2827'/>
<enum name='cfragNoSectionErr' value64='-2803'/>
<enum name='cfragNoSymbolErr' value64='-2802'/>
<enum name='cfragNotClosureErr' value64='-2826'/>
<enum name='cfragOutputLengthErr' value64='-2831'/>
<enum name='cfragReservedCode_1' value64='-2899'/>
<enum name='cfragReservedCode_2' value64='-2898'/>
<enum name='cfragReservedCode_3' value64='-2897'/>
<enum name='cfragRsrcForkErr' value64='-2856'/>
<enum name='cfragStdFolderErr' value64='-2855'/>
<enum name='cfragUnresolvedErr' value64='-2807'/>
<enum name='channelBusy' value64='-209'/>
<enum name='channelNotBusy' value64='-211'/>
<enum name='circumflex' value64='246'/>
<enum name='circumflexUprA' value64='229'/>
<enum name='circumflexUprE' value64='230'/>
<enum name='circumflexUprI' value64='235'/>
<enum name='circumflexUprO' value64='239'/>
<enum name='circumflexUprU' value64='243'/>
<enum name='ckSumErr' value64='-3103'/>
<enum name='clkRdErr' value64='-85'/>
<enum name='clkWrErr' value64='-86'/>
<enum name='closErr' value64='-24'/>
<enum name='cmCantConcatenateError' value64='-178'/>
<enum name='cmCantCopyModifiedV1Profile' value64='-4215'/>
<enum name='cmCantDeleteElement' value64='-4202'/>
<enum name='cmCantDeleteProfile' value64='-180'/>
<enum name='cmCantGamutCheckError' value64='-4217'/>
<enum name='cmCantXYZ' value64='-179'/>
<enum name='cmElementTagNotFound' value64='-4200'/>
<enum name='cmErrIncompatibleProfile' value64='-4208'/>
<enum name='cmFatalProfileErr' value64='-4203'/>
<enum name='cmIndexRangeErr' value64='-4201'/>
<enum name='cmInvalidColorSpace' value64='-4209'/>
<enum name='cmInvalidDstMap' value64='-4211'/>
<enum name='cmInvalidProfile' value64='-4204'/>
<enum name='cmInvalidProfileComment' value64='-4213'/>
<enum name='cmInvalidProfileLocation' value64='-4205'/>
<enum name='cmInvalidSearch' value64='-4206'/>
<enum name='cmInvalidSrcMap' value64='-4210'/>
<enum name='cmMethodError' value64='-171'/>
<enum name='cmMethodNotFound' value64='-175'/>
<enum name='cmNamedColorNotFound' value64='-4216'/>
<enum name='cmNoCurrentProfile' value64='-182'/>
<enum name='cmNoGDevicesError' value64='-4212'/>
<enum name='cmProfileError' value64='-170'/>
<enum name='cmProfileNotFound' value64='-176'/>
<enum name='cmProfilesIdentical' value64='-177'/>
<enum name='cmRangeOverFlow' value64='-4214'/>
<enum name='cmSearchError' value64='-4207'/>
<enum name='cmUnsupportedDataType' value64='-181'/>
<enum name='cmpAliasNoFlags' value64='0'/>
<enum name='cmpAliasOnlyThisFile' value64='1'/>
<enum name='cmpIsMissing' value64='536870912'/>
<enum name='cmpThreadSafe' value64='268435456'/>
<enum name='cmpWantsRegisterMessage' value64='2147483648'/>
<enum name='codecAbortErr' value64='-8967'/>
<enum name='codecBadDataErr' value64='-8969'/>
<enum name='codecCantQueueErr' value64='-8975'/>
<enum name='codecCantWhenErr' value64='-8974'/>
<enum name='codecConditionErr' value64='-8972'/>
<enum name='codecDataVersErr' value64='-8970'/>
<enum name='codecDisabledErr' value64='-8978'/>
<enum name='codecDroppedFrameErr' value64='-8989'/>
<enum name='codecErr' value64='-8960'/>
<enum name='codecExtensionNotFoundErr' value64='-8971'/>
<enum name='codecImageBufErr' value64='-8965'/>
<enum name='codecNeedAccessKeyErr' value64='-8987'/>
<enum name='codecNeedToFlushChainErr' value64='-8979'/>
<enum name='codecNoMemoryPleaseWaitErr' value64='-8977'/>
<enum name='codecNothingToBlitErr' value64='-8976'/>
<enum name='codecOffscreenFailedErr' value64='-8988'/>
<enum name='codecOffscreenFailedPleaseRetryErr' value64='-8992'/>
<enum name='codecOpenErr' value64='-8973'/>
<enum name='codecParameterDialogConfirm' value64='-8986'/>
<enum name='codecScreenBufErr' value64='-8964'/>
<enum name='codecSizeErr' value64='-8963'/>
<enum name='codecSpoolErr' value64='-8966'/>
<enum name='codecUnimpErr' value64='-8962'/>
<enum name='codecWouldOffscreenErr' value64='-8968'/>
<enum name='collectionIndexRangeErr' value64='-5752'/>
<enum name='collectionItemLockedErr' value64='-5750'/>
<enum name='collectionItemNotFoundErr' value64='-5751'/>
<enum name='collectionVersionErr' value64='-5753'/>
<enum name='colorSyncNotInstalled' value64='-4007'/>
<enum name='colorsRequestedErr' value64='-11004'/>
<enum name='componentAutoVersionIncludeFlags' value64='4'/>
<enum name='componentDllEntryNotFoundErr' value64='-2092'/>
<enum name='componentDllLoadErr' value64='-2091'/>
<enum name='componentDoAutoVersion' value64='1'/>
<enum name='componentDontRegister' value64='-3003'/>
<enum name='componentHasMultiplePlatforms' value64='8'/>
<enum name='componentLoadResident' value64='16'/>
<enum name='componentNotCaptured' value64='-3002'/>
<enum name='componentNotThreadSafeErr' value64='-2098'/>
<enum name='componentWantsUnregister' value64='2'/>
<enum name='connectionInvalid' value64='-609'/>
<enum name='constraintReachedErr' value64='-30541'/>
<enum name='containerAlreadyOpenWrn' value64='-462'/>
<enum name='containerNotFoundWrn' value64='-461'/>
<enum name='controlErr' value64='-17'/>
<enum name='controlHandleInvalidErr' value64='-30599'/>
<enum name='controlInvalidDataVersionErr' value64='-30597'/>
<enum name='controlPropertyInvalid' value64='-5603'/>
<enum name='controlPropertyNotFoundErr' value64='-5604'/>
<enum name='controllerBoundsNotExact' value64='-9996'/>
<enum name='controllerHasFixedHeight' value64='-9998'/>
<enum name='corErr' value64='-3'/>
<enum name='coreFoundationUnknownErr' value64='-4960'/>
<enum name='couldNotParseSourceFileErr' value64='-3026'/>
<enum name='couldNotResolveDataRef' value64='-2000'/>
<enum name='couldNotUseAnExistingSample' value64='-2052'/>
<enum name='couldntGetRequiredComponent' value64='-9405'/>
<enum name='crash' value64='5'/>
<enum name='curNumberPartsVersion' value64='1'/>
<enum name='currLeadingZ' value64='128'/>
<enum name='currNegSym' value64='32'/>
<enum name='currSymLead' value64='16'/>
<enum name='currTrailingZ' value64='64'/>
<enum name='currentCurLang' value64='-4'/>
<enum name='currentDefLang' value64='-5'/>
<enum name='dInstErr' value64='-26'/>
<enum name='dRemovErr' value64='-25'/>
<enum name='dataAlreadyClosed' value64='-2045'/>
<enum name='dataAlreadyOpenForWrite' value64='-2044'/>
<enum name='dataNoDataRef' value64='-2047'/>
<enum name='dataNotOpenForRead' value64='-2042'/>
<enum name='dataNotOpenForWrite' value64='-2043'/>
<enum name='dataVerErr' value64='-68'/>
<enum name='dateStdMask' value64='127'/>
<enum name='dateTimeInvalid' value64='34816'/>
<enum name='dateTimeNotFound' value64='33792'/>
<enum name='dayField' value64='3'/>
<enum name='dayLdingZ' value64='32'/>
<enum name='dayMask' value64='8'/>
<enum name='dayOfWeekField' value64='7'/>
<enum name='dayOfWeekMask' value64='128'/>
<enum name='dayOfYearField' value64='8'/>
<enum name='dayOfYearMask' value64='256'/>
<enum name='dblDagger' value64='224'/>
<enum name='dceExtErr' value64='-30'/>
<enum name='dcmBadDataSizeErr' value64='-7117'/>
<enum name='dcmBadDictionaryErr' value64='-7102'/>
<enum name='dcmBadFeatureErr' value64='-7124'/>
<enum name='dcmBadFieldInfoErr' value64='-7111'/>
<enum name='dcmBadFieldTypeErr' value64='-7112'/>
<enum name='dcmBadFindMethodErr' value64='-7118'/>
<enum name='dcmBadKeyErr' value64='-7115'/>
<enum name='dcmBadPropertyErr' value64='-7119'/>
<enum name='dcmBlockFullErr' value64='-7107'/>
<enum name='dcmBufferOverflowErr' value64='-7127'/>
<enum name='dcmDictionaryBusyErr' value64='-7105'/>
<enum name='dcmDictionaryNotOpenErr' value64='-7104'/>
<enum name='dcmDupRecordErr' value64='-7109'/>
<enum name='dcmIterationCompleteErr' value64='-7126'/>
<enum name='dcmNecessaryFieldErr' value64='-7110'/>
<enum name='dcmNoAccessMethodErr' value64='-7122'/>
<enum name='dcmNoFieldErr' value64='-7113'/>
<enum name='dcmNoRecordErr' value64='-7108'/>
<enum name='dcmNotDictionaryErr' value64='-7101'/>
<enum name='dcmParamErr' value64='-7100'/>
<enum name='dcmPermissionErr' value64='-7103'/>
<enum name='dcmProtectedErr' value64='-7121'/>
<enum name='dcmTooManyKeyErr' value64='-7116'/>
<enum name='ddpLenErr' value64='-92'/>
<enum name='ddpSktErr' value64='-91'/>
<enum name='debuggingDuplicateOptionErr' value64='-13882'/>
<enum name='debuggingDuplicateSignatureErr' value64='-13881'/>
<enum name='debuggingExecutionContextErr' value64='-13880'/>
<enum name='debuggingInvalidNameErr' value64='-13885'/>
<enum name='debuggingInvalidOptionErr' value64='-13884'/>
<enum name='debuggingInvalidSignatureErr' value64='-13883'/>
<enum name='debuggingNoCallbackErr' value64='-13886'/>
<enum name='debuggingNoMatchErr' value64='-13887'/>
<enum name='defaultComponentAnyFlags' value64='1'/>
<enum name='defaultComponentAnyFlagsAnyManufacturer' value64='3'/>
<enum name='defaultComponentAnyFlagsAnyManufacturerAnySubType' value64='7'/>
<enum name='defaultComponentAnyManufacturer' value64='2'/>
<enum name='defaultComponentAnySubType' value64='4'/>
<enum name='defaultComponentIdentical' value64='0'/>
<enum name='defaultPhysicalEntryCount' value64='8'/>
<enum name='delimPad' value64='-2'/>
<enum name='desktopDamagedErr' value64='-1305'/>
<enum name='destPortErr' value64='-906'/>
<enum name='deviceCantMeetRequest' value64='-9408'/>
<enum name='diaeresisUprE' value64='232'/>
<enum name='diaeresisUprI' value64='236'/>
<enum name='diaeresisUprY' value64='217'/>
<enum name='dialogNoTimeoutErr' value64='-5640'/>
<enum name='diffVolErr' value64='-1303'/>
<enum name='digiUnimpErr' value64='-2201'/>
<enum name='dirFulErr' value64='-33'/>
<enum name='dirNFErr' value64='-120'/>
<enum name='directXObjectAlreadyExists' value64='-8990'/>
<enum name='dmy' value64='1'/>
<enum name='dotlessLwrI' value64='245'/>
<enum name='doubleAcute' value64='253'/>
<enum name='dragNotAcceptedErr' value64='-1857'/>
<enum name='driverHardwareGoneErr' value64='-503'/>
<enum name='drvQType' value64='3'/>
<enum name='ds32BitMode' value64='103'/>
<enum name='dsAddressErr' value64='2'/>
<enum name='dsBadLaunch' value64='26'/>
<enum name='dsBadLibrary' value64='1010'/>
<enum name='dsBadPatch' value64='99'/>
<enum name='dsBadPatchHeader' value64='83'/>
<enum name='dsBadSANEOpcode' value64='81'/>
<enum name='dsBadSlotInt' value64='51'/>
<enum name='dsBadStartupDisk' value64='42'/>
<enum name='dsBufPtrTooLow' value64='106'/>
<enum name='dsBusError' value64='1'/>
<enum name='dsCDEFNotFound' value64='88'/>
<enum name='dsCantHoldSystemHeap' value64='114'/>
<enum name='dsChkErr' value64='5'/>
<enum name='dsCoreErr' value64='12'/>
<enum name='dsDirtyDisk' value64='20004'/>
<enum name='dsDisassemblerInstalled' value64='-11'/>
<enum name='dsExtensionsDisabled' value64='-13'/>
<enum name='dsFPErr' value64='16'/>
<enum name='dsFSErr' value64='27'/>
<enum name='dsFinderErr' value64='41'/>
<enum name='dsForcedQuit' value64='20002'/>
<enum name='dsGibblyMovedToDisabledFolder' value64='117'/>
<enum name='dsGreeting' value64='40'/>
<enum name='dsHD20Installed' value64='-12'/>
<enum name='dsHMenuFindErr' value64='86'/>
<enum name='dsIOCoreErr' value64='14'/>
<enum name='dsIllInstErr' value64='3'/>
<enum name='dsIrqErr' value64='13'/>
<enum name='dsLineAErr' value64='9'/>
<enum name='dsLineFErr' value64='10'/>
<enum name='dsLoadErr' value64='15'/>
<enum name='dsLostConnectionToNetworkDisk' value64='121'/>
<enum name='dsMBATAPISysError' value64='29203'/>
<enum name='dsMBATASysError' value64='29202'/>
<enum name='dsMBExternFlpySysError' value64='29204'/>
<enum name='dsMBFlpySysError' value64='29201'/>
<enum name='dsMBSysError' value64='29200'/>
<enum name='dsMBarNFnd' value64='85'/>
<enum name='dsMDEFNotFound' value64='89'/>
<enum name='dsMacOSROMVersionTooOld' value64='120'/>
<enum name='dsMacsBugInstalled' value64='-10'/>
<enum name='dsMemFullErr' value64='25'/>
<enum name='dsMiscErr' value64='11'/>
<enum name='dsMixedModeFailure' value64='1011'/>
<enum name='dsMustUseFCBAccessors' value64='119'/>
<enum name='dsNeedToWriteBootBlocks' value64='104'/>
<enum name='dsNoExtsDisassembler' value64='-2'/>
<enum name='dsNoExtsMacsBug' value64='-1'/>
<enum name='dsNoFPU' value64='90'/>
<enum name='dsNoPackErr' value64='17'/>
<enum name='dsNoPatch' value64='98'/>
<enum name='dsNoPk1' value64='18'/>
<enum name='dsNoPk2' value64='19'/>
<enum name='dsNoPk3' value64='20'/>
<enum name='dsNoPk4' value64='21'/>
<enum name='dsNoPk5' value64='22'/>
<enum name='dsNoPk6' value64='23'/>
<enum name='dsNoPk7' value64='24'/>
<enum name='dsNotEnoughRAMToBoot' value64='105'/>
<enum name='dsNotThe1' value64='31'/>
<enum name='dsOldSystem' value64='102'/>
<enum name='dsOvflowErr' value64='6'/>
<enum name='dsPCCardATASysError' value64='29205'/>
<enum name='dsParityErr' value64='101'/>
<enum name='dsPrivErr' value64='7'/>
<enum name='dsRAMDiskTooBig' value64='122'/>
<enum name='dsReinsert' value64='30'/>
<enum name='dsRemoveDisk' value64='20003'/>
<enum name='dsSCSIWarn' value64='20010'/>
<enum name='dsShutDownOrRestart' value64='20000'/>
<enum name='dsShutDownOrResume' value64='20109'/>
<enum name='dsStknHeap' value64='28'/>
<enum name='dsSwitchOffOrRestart' value64='20001'/>
<enum name='dsSysErr' value64='32767'/>
<enum name='dsSystemFileErr' value64='43'/>
<enum name='dsSystemRequiresPowerPC' value64='116'/>
<enum name='dsTraceErr' value64='8'/>
<enum name='dsUnBootableSystem' value64='118'/>
<enum name='dsVMBadBackingStore' value64='113'/>
<enum name='dsVMDeferredFuncTableFull' value64='112'/>
<enum name='dsWDEFNotFound' value64='87'/>
<enum name='dsWriteToSupervisorStackGuardPage' value64='128'/>
<enum name='dsZeroDivErr' value64='4'/>
<enum name='dskFulErr' value64='-34'/>
<enum name='dtQType' value64='7'/>
<enum name='dummyType' value64='0'/>
<enum name='dupFNErr' value64='-48'/>
<enum name='duplicateAtomTypeAndIDErr' value64='-2105'/>
<enum name='duplicateFlavorErr' value64='-1853'/>
<enum name='duplicateFolderDescErr' value64='-4271'/>
<enum name='duplicateHandlerErr' value64='-1855'/>
<enum name='duplicateRoutingErr' value64='-4274'/>
<enum name='duplicateScrapFlavorErr' value64='-4989'/>
<enum name='durationDay' value64='86400000'/>
<enum name='durationForever' value64='2147483647'/>
<enum name='durationHour' value64='3600000'/>
<enum name='durationMicrosecond' value64='-1'/>
<enum name='durationMillisecond' value64='1'/>
<enum name='durationMinute' value64='60000'/>
<enum name='durationNoWait' value64='0'/>
<enum name='durationSecond' value64='1000'/>
<enum name='dym' value64='4'/>
<enum name='eLenErr' value64='-92'/>
<enum name='eMultiErr' value64='-91'/>
<enum name='editingNotAllowed' value64='-9995'/>
<enum name='editionMgrInitErr' value64='-450'/>
<enum name='emptyPathErr' value64='-2111'/>
<enum name='endOfDataReached' value64='-2046'/>
<enum name='envBadVers' value64='-5501'/>
<enum name='envNotPresent' value64='-5500'/>
<enum name='envVersTooBig' value64='-5502'/>
<enum name='eofErr' value64='-39'/>
<enum name='eraField' value64='0'/>
<enum name='eraMask' value64='1'/>
<enum name='errAEAccessorNotFound' value64='-1723'/>
<enum name='errAEBadKeyForm' value64='-10002'/>
<enum name='errAEBadListItem' value64='-1705'/>
<enum name='errAEBadTestKey' value64='-1726'/>
<enum name='errAEBufferTooSmall' value64='-1741'/>
<enum name='errAEBuildSyntaxError' value64='-1740'/>
<enum name='errAECantHandleClass' value64='-10010'/>
<enum name='errAECantPutThatThere' value64='-10024'/>
<enum name='errAECantSupplyType' value64='-10009'/>
<enum name='errAECantUndo' value64='-10015'/>
<enum name='errAECoercionFail' value64='-1700'/>
<enum name='errAECorruptData' value64='-1702'/>
<enum name='errAEDescIsNull' value64='-1739'/>
<enum name='errAEDescNotFound' value64='-1701'/>
<enum name='errAEDuplicateHandler' value64='-1736'/>
<enum name='errAEEmptyListContainer' value64='-1730'/>
<enum name='errAEEventFailed' value64='-10000'/>
<enum name='errAEEventFiltered' value64='-1735'/>
<enum name='errAEEventNotHandled' value64='-1708'/>
<enum name='errAEHandlerNotFound' value64='-1717'/>
<enum name='errAEIllegalIndex' value64='-1719'/>
<enum name='errAEImpossibleRange' value64='-1720'/>
<enum name='errAEInTransaction' value64='-10011'/>
<enum name='errAEIndexTooLarge' value64='-10007'/>
<enum name='errAELocalOnly' value64='-10016'/>
<enum name='errAENegativeCount' value64='-1729'/>
<enum name='errAENewerVersion' value64='-1706'/>
<enum name='errAENoSuchLogical' value64='-1725'/>
<enum name='errAENoSuchObject' value64='-1728'/>
<enum name='errAENoSuchTransaction' value64='-10012'/>
<enum name='errAENoUserInteraction' value64='-1713'/>
<enum name='errAENoUserSelection' value64='-10013'/>
<enum name='errAENotAEDesc' value64='-1704'/>
<enum name='errAENotASingleObject' value64='-10014'/>
<enum name='errAENotASpecialFunction' value64='-1714'/>
<enum name='errAENotAnElement' value64='-10008'/>
<enum name='errAENotAnEnumMember' value64='-10023'/>
<enum name='errAENotAnObjSpec' value64='-1727'/>
<enum name='errAENotAppleEvent' value64='-1707'/>
<enum name='errAENotModifiable' value64='-10003'/>
<enum name='errAEParamMissed' value64='-1715'/>
<enum name='errAEPrivilegeError' value64='-10004'/>
<enum name='errAEPropertiesClash' value64='-10025'/>
<enum name='errAEReadDenied' value64='-10005'/>
<enum name='errAEReceiveEscapeCurrent' value64='-1734'/>
<enum name='errAEReceiveTerminate' value64='-1733'/>
<enum name='errAERecordingIsAlreadyOn' value64='-1732'/>
<enum name='errAEReplyNotArrived' value64='-1718'/>
<enum name='errAEReplyNotValid' value64='-1709'/>
<enum name='errAEStreamAlreadyConverted' value64='-1738'/>
<enum name='errAEStreamBadNesting' value64='-1737'/>
<enum name='errAETimeout' value64='-1712'/>
<enum name='errAETypeError' value64='-10001'/>
<enum name='errAEUnknownAddressType' value64='-1716'/>
<enum name='errAEUnknownObjectType' value64='-1731'/>
<enum name='errAEUnknownSendMode' value64='-1710'/>
<enum name='errAEWaitCanceled' value64='-1711'/>
<enum name='errAEWriteDenied' value64='-10006'/>
<enum name='errAEWrongDataType' value64='-1703'/>
<enum name='errAEWrongNumberArgs' value64='-1721'/>
<enum name='errASCantCompareMoreThan32k' value64='-2721'/>
<enum name='errASCantConsiderAndIgnore' value64='-2720'/>
<enum name='errASIllegalFormalParameter' value64='-2761'/>
<enum name='errASInconsistentNames' value64='-2780'/>
<enum name='errASNoResultReturned' value64='-2763'/>
<enum name='errASParameterNotForEvent' value64='-2762'/>
<enum name='errASTerminologyNestingTooDeep' value64='-2760'/>
<enum name='errAborted' value64='-1279'/>
<enum name='errAlreadyInImagingMode' value64='-5243'/>
<enum name='errAttention' value64='-1276'/>
<enum name='errCanNotInsertWhileWalkProcInProgress' value64='-963'/>
<enum name='errCannotUndo' value64='-5253'/>
<enum name='errCantEmbedIntoSelf' value64='-30594'/>
<enum name='errCantEmbedRoot' value64='-30595'/>
<enum name='errControlDoesntSupportFocus' value64='-30582'/>
<enum name='errControlHiddenOrDisabled' value64='-30592'/>
<enum name='errControlIsNotEmbedder' value64='-30590'/>
<enum name='errControlsAlreadyExist' value64='-30589'/>
<enum name='errCoreEndianDataDoesNotMatchFormat' value64='-4942'/>
<enum name='errCoreEndianDataTooLongForFormat' value64='-4941'/>
<enum name='errCoreEndianDataTooShortForFormat' value64='-4940'/>
<enum name='errCorruptWindowDescription' value64='-5606'/>
<enum name='errCouldntSetFocus' value64='-30585'/>
<enum name='errCppGeneral' value64='-32000'/>
<enum name='errCppLastSystemDefinedError' value64='-32020'/>
<enum name='errCppLastUserDefinedError' value64='-32049'/>
<enum name='errCppbad_alloc' value64='-32001'/>
<enum name='errCppbad_cast' value64='-32002'/>
<enum name='errCppbad_exception' value64='-32003'/>
<enum name='errCppbad_typeid' value64='-32004'/>
<enum name='errCppdomain_error' value64='-32006'/>
<enum name='errCppinvalid_argument' value64='-32007'/>
<enum name='errCppios_base_failure' value64='-32014'/>
<enum name='errCpplength_error' value64='-32008'/>
<enum name='errCpplogic_error' value64='-32005'/>
<enum name='errCppout_of_range' value64='-32009'/>
<enum name='errCppoverflow_error' value64='-32011'/>
<enum name='errCpprange_error' value64='-32012'/>
<enum name='errCppruntime_error' value64='-32010'/>
<enum name='errCppunderflow_error' value64='-32013'/>
<enum name='errDSPQueueSize' value64='-1274'/>
<enum name='errDataNotSupported' value64='-30581'/>
<enum name='errDataSizeMismatch' value64='-30591'/>
<enum name='errEmptyScrap' value64='-5249'/>
<enum name='errEndOfBody' value64='-1813'/>
<enum name='errEndOfDocument' value64='-1812'/>
<enum name='errEngineNotFound' value64='-5244'/>
<enum name='errFSAttributeNotFound' value64='-1427'/>
<enum name='errFSBadAllocFlags' value64='-1413'/>
<enum name='errFSBadBuffer' value64='-1403'/>
<enum name='errFSBadFSRef' value64='-1401'/>
<enum name='errFSBadForkName' value64='-1402'/>
<enum name='errFSBadForkRef' value64='-1404'/>
<enum name='errFSBadInfoBitmap' value64='-1405'/>
<enum name='errFSBadItemCount' value64='-1418'/>
<enum name='errFSBadIteratorFlags' value64='-1422'/>
<enum name='errFSBadPosMode' value64='-1412'/>
<enum name='errFSBadSearchParams' value64='-1419'/>
<enum name='errFSForkExists' value64='-1421'/>
<enum name='errFSForkNotFound' value64='-1409'/>
<enum name='errFSIteratorNotFound' value64='-1423'/>
<enum name='errFSIteratorNotSupported' value64='-1424'/>
<enum name='errFSMissingCatInfo' value64='-1406'/>
<enum name='errFSMissingName' value64='-1411'/>
<enum name='errFSNameTooLong' value64='-1410'/>
<enum name='errFSNoMoreItems' value64='-1417'/>
<enum name='errFSNotAFolder' value64='-1407'/>
<enum name='errFSNotEnoughSpaceForOperation' value64='-1429'/>
<enum name='errFSOperationNotSupported' value64='-1426'/>
<enum name='errFSPropertyNotValid' value64='-1428'/>
<enum name='errFSQuotaExceeded' value64='-1425'/>
<enum name='errFSRefsDifferent' value64='-1420'/>
<enum name='errFSUnknownCall' value64='-1400'/>
<enum name='errFloatingWindowsNotInitialized' value64='-5609'/>
<enum name='errFwdReset' value64='-1275'/>
<enum name='errIAAllocationErr' value64='-5381'/>
<enum name='errIABufferTooSmall' value64='-5384'/>
<enum name='errIACanceled' value64='-5385'/>
<enum name='errIAEndOfTextRun' value64='-5388'/>
<enum name='errIAInvalidDocument' value64='-5386'/>
<enum name='errIANoErr' value64='0'/>
<enum name='errIANoMoreItems' value64='-5383'/>
<enum name='errIAParamErr' value64='-5382'/>
<enum name='errIATextExtractionErr' value64='-5387'/>
<enum name='errIAUnknownErr' value64='-5380'/>
<enum name='errInvalidPartCode' value64='-30588'/>
<enum name='errInvalidRange' value64='-5246'/>
<enum name='errInvalidWindowProperty' value64='-5603'/>
<enum name='errInvalidWindowPtr' value64='-5600'/>
<enum name='errInvalidWindowRef' value64='-5600'/>
<enum name='errItemAlreadyInTree' value64='-960'/>
<enum name='errItemNotControl' value64='-30596'/>
<enum name='errItemNotFoundInTree' value64='-962'/>
<enum name='errIteratorReachedEnd' value64='-5245'/>
<enum name='errKCAuthFailed' value64='-25293'/>
<enum name='errKCBufferTooSmall' value64='-25301'/>
<enum name='errKCCreateChainFailed' value64='-25318'/>
<enum name='errKCDataNotAvailable' value64='-25316'/>
<enum name='errKCDataNotModifiable' value64='-25317'/>
<enum name='errKCDataTooLarge' value64='-25302'/>
<enum name='errKCDuplicateCallback' value64='-25297'/>
<enum name='errKCDuplicateItem' value64='-25299'/>
<enum name='errKCDuplicateKeychain' value64='-25296'/>
<enum name='errKCInteractionNotAllowed' value64='-25308'/>
<enum name='errKCInteractionRequired' value64='-25315'/>
<enum name='errKCInvalidCallback' value64='-25298'/>
<enum name='errKCInvalidItemRef' value64='-25304'/>
<enum name='errKCInvalidKeychain' value64='-25295'/>
<enum name='errKCInvalidSearchRef' value64='-25305'/>
<enum name='errKCItemNotFound' value64='-25300'/>
<enum name='errKCKeySizeNotAllowed' value64='-25311'/>
<enum name='errKCNoCertificateModule' value64='-25313'/>
<enum name='errKCNoDefaultKeychain' value64='-25307'/>
<enum name='errKCNoPolicyModule' value64='-25314'/>
<enum name='errKCNoStorageModule' value64='-25312'/>
<enum name='errKCNoSuchAttr' value64='-25303'/>
<enum name='errKCNoSuchClass' value64='-25306'/>
<enum name='errKCNoSuchKeychain' value64='-25294'/>
<enum name='errKCNotAvailable' value64='-25291'/>
<enum name='errKCReadOnly' value64='-25292'/>
<enum name='errKCReadOnlyAttr' value64='-25309'/>
<enum name='errKCWrongKCVersion' value64='-25310'/>
<enum name='errMarginWilllNotFit' value64='-5241'/>
<enum name='errMessageNotSupported' value64='-30580'/>
<enum name='errNoHiliteText' value64='-5248'/>
<enum name='errNoRootControl' value64='-30586'/>
<enum name='errNonContiuousAttribute' value64='-5252'/>
<enum name='errNotInImagingMode' value64='-5242'/>
<enum name='errNotValidTree' value64='-961'/>
<enum name='errOSAAppNotHighLevelEventAware' value64='-2704'/>
<enum name='errOSABadSelector' value64='-1754'/>
<enum name='errOSABadStorageType' value64='-1752'/>
<enum name='errOSACantAccess' value64='-1728'/>
<enum name='errOSACantAssign' value64='-10006'/>
<enum name='errOSACantCoerce' value64='-1700'/>
<enum name='errOSACantCreate' value64='-2710'/>
<enum name='errOSACantGetTerminology' value64='-2709'/>
<enum name='errOSACantLaunch' value64='-2703'/>
<enum name='errOSACantOpenComponent' value64='-1762'/>
<enum name='errOSACantStorePointers' value64='-1763'/>
<enum name='errOSAComponentMismatch' value64='-1761'/>
<enum name='errOSACorruptData' value64='-1702'/>
<enum name='errOSACorruptTerminology' value64='-2705'/>
<enum name='errOSADataBlockTooLarge' value64='-2708'/>
<enum name='errOSADataFormatObsolete' value64='-1758'/>
<enum name='errOSADataFormatTooNew' value64='-1759'/>
<enum name='errOSADivideByZero' value64='-2701'/>
<enum name='errOSAGeneralError' value64='-2700'/>
<enum name='errOSAInternalTableOverflow' value64='-2707'/>
<enum name='errOSAInvalidID' value64='-1751'/>
<enum name='errOSANoSuchDialect' value64='-1757'/>
<enum name='errOSANumericOverflow' value64='-2702'/>
<enum name='errOSARecordingIsAlreadyOn' value64='-1732'/>
<enum name='errOSAScriptError' value64='-1753'/>
<enum name='errOSASourceNotAvailable' value64='-1756'/>
<enum name='errOSAStackOverflow' value64='-2706'/>
<enum name='errOSASystemError' value64='-1750'/>
<enum name='errOSATypeError' value64='-1703'/>
<enum name='errOffsetInvalid' value64='-1800'/>
<enum name='errOffsetIsOutsideOfView' value64='-1801'/>
<enum name='errOffsetNotOnElementBounday' value64='-5247'/>
<enum name='errOpenDenied' value64='-1273'/>
<enum name='errOpening' value64='-1277'/>
<enum name='errReadOnlyText' value64='-5250'/>
<enum name='errRefNum' value64='-1280'/>
<enum name='errRootAlreadyExists' value64='-30587'/>
<enum name='errState' value64='-1278'/>
<enum name='errTaskNotFound' value64='-10780'/>
<enum name='errTopOfBody' value64='-1811'/>
<enum name='errTopOfDocument' value64='-1810'/>
<enum name='errTreeIsLocked' value64='-964'/>
<enum name='errUnknownAttributeTag' value64='-5240'/>
<enum name='errUnknownControl' value64='-30584'/>
<enum name='errUnknownElement' value64='-5251'/>
<enum name='errUnrecognizedWindowClass' value64='-5605'/>
<enum name='errUnsupportedWindowAttributesForClass' value64='-5601'/>
<enum name='errUserWantsToDragWindow' value64='-5607'/>
<enum name='errWindowDoesNotFitOnscreen' value64='-5611'/>
<enum name='errWindowDoesNotHaveProxy' value64='-5602'/>
<enum name='errWindowDoesntSupportFocus' value64='-30583'/>
<enum name='errWindowNotFound' value64='-5610'/>
<enum name='errWindowPropertyNotFound' value64='-5604'/>
<enum name='errWindowRegionCodeInvalid' value64='-30593'/>
<enum name='errWindowsAlreadyInitialized' value64='-5608'/>
<enum name='evType' value64='4'/>
<enum name='evtNotEnb' value64='1'/>
<enum name='exUserBreak' value64='-492'/>
<enum name='excessCollsns' value64='-95'/>
<enum name='extFSErr' value64='-58'/>
<enum name='extractErr' value64='-3104'/>
<enum name='extraneousStrings' value64='16'/>
<enum name='fBadPartsTable' value64='10'/>
<enum name='fBestGuess' value64='1'/>
<enum name='fBsyErr' value64='-47'/>
<enum name='fDesktop' value64='-2'/>
<enum name='fDisk' value64='0'/>
<enum name='fEmptyFormatString' value64='13'/>
<enum name='fExtraDecimal' value64='5'/>
<enum name='fExtraExp' value64='7'/>
<enum name='fExtraPercent' value64='11'/>
<enum name='fExtraSeparator' value64='12'/>
<enum name='fFormStrIsNAN' value64='9'/>
<enum name='fFormatOK' value64='0'/>
<enum name='fFormatOverflow' value64='8'/>
<enum name='fHasBundle' value64='8192'/>
<enum name='fInvisible' value64='16384'/>
<enum name='fLckdErr' value64='-45'/>
<enum name='fMissingDelimiter' value64='4'/>
<enum name='fMissingLiteral' value64='6'/>
<enum name='fNegative' value64='1'/>
<enum name='fOnDesk' value64='1'/>
<enum name='fOutOfSynch' value64='2'/>
<enum name='fPositive' value64='0'/>
<enum name='fSpuriousChars' value64='3'/>
<enum name='fTrash' value64='-3'/>
<enum name='fVNumber' value64='0'/>
<enum name='fZero' value64='2'/>
<enum name='false32b' value64='0'/>
<enum name='fatalDateTime' value64='32768'/>
<enum name='featureUnsupported' value64='-2053'/>
<enum name='fetchReference' value64='2'/>
<enum name='fiLigature' value64='222'/>
<enum name='fidExists' value64='-1301'/>
<enum name='fidNotFound' value64='-1300'/>
<enum name='fieldOrderNotIntl' value64='8'/>
<enum name='fileBoundsErr' value64='-1309'/>
<enum name='fileOffsetTooBigErr' value64='-2125'/>
<enum name='firstDskErr' value64='-84'/>
<enum name='firstPickerError' value64='-4000'/>
<enum name='fixed1' value64='65536'/>
<enum name='flLigature' value64='223'/>
<enum name='fmt1Err' value64='-82'/>
<enum name='fmt2Err' value64='-83'/>
<enum name='fnOpnErr' value64='-38'/>
<enum name='fnfErr' value64='-43'/>
<enum name='fontDecError' value64='-64'/>
<enum name='fontNotDeclared' value64='-65'/>
<enum name='fontNotOutlineErr' value64='-32615'/>
<enum name='fontSubErr' value64='-66'/>
<enum name='forceReadBit' value64='6'/>
<enum name='forceReadMask' value64='64'/>
<enum name='fract1' value64='1073741824'/>
<enum name='fraction' value64='218'/>
<enum name='fsAtMark' value64='0'/>
<enum name='fsCurPerm' value64='0'/>
<enum name='fsDSIntErr' value64='-127'/>
<enum name='fsDataTooBigErr' value64='-1310'/>
<enum name='fsFromLEOF' value64='2'/>
<enum name='fsFromMark' value64='3'/>
<enum name='fsFromStart' value64='1'/>
<enum name='fsQType' value64='5'/>
<enum name='fsRdAccessPerm' value64='1'/>
<enum name='fsRdDenyPerm' value64='16'/>
<enum name='fsRdPerm' value64='1'/>
<enum name='fsRdWrPerm' value64='3'/>
<enum name='fsRdWrShPerm' value64='4'/>
<enum name='fsRnErr' value64='-59'/>
<enum name='fsRtDirID' value64='2'/>
<enum name='fsRtParID' value64='1'/>
<enum name='fsSBAccessDate' value64='131072'/>
<enum name='fsSBAccessDateBit' value64='17'/>
<enum name='fsSBAttributeModDate' value64='65536'/>
<enum name='fsSBAttributeModDateBit' value64='16'/>
<enum name='fsSBDrBkDat' value64='2048'/>
<enum name='fsSBDrBkDatBit' value64='11'/>
<enum name='fsSBDrCrDat' value64='512'/>
<enum name='fsSBDrCrDatBit' value64='9'/>
<enum name='fsSBDrFndrInfo' value64='4096'/>
<enum name='fsSBDrFndrInfoBit' value64='12'/>
<enum name='fsSBDrMdDat' value64='1024'/>
<enum name='fsSBDrMdDatBit' value64='10'/>
<enum name='fsSBDrNmFls' value64='16'/>
<enum name='fsSBDrNmFlsBit' value64='4'/>
<enum name='fsSBDrParID' value64='8192'/>
<enum name='fsSBDrParIDBit' value64='13'/>
<enum name='fsSBDrUsrWds' value64='8'/>
<enum name='fsSBDrUsrWdsBit' value64='3'/>
<enum name='fsSBFlAttrib' value64='4'/>
<enum name='fsSBFlAttribBit' value64='2'/>
<enum name='fsSBFlBkDat' value64='2048'/>
<enum name='fsSBFlBkDatBit' value64='11'/>
<enum name='fsSBFlCrDat' value64='512'/>
<enum name='fsSBFlCrDatBit' value64='9'/>
<enum name='fsSBFlFndrInfo' value64='8'/>
<enum name='fsSBFlFndrInfoBit' value64='3'/>
<enum name='fsSBFlLgLen' value64='32'/>
<enum name='fsSBFlLgLenBit' value64='5'/>
<enum name='fsSBFlMdDat' value64='1024'/>
<enum name='fsSBFlMdDatBit' value64='10'/>
<enum name='fsSBFlParID' value64='8192'/>
<enum name='fsSBFlParIDBit' value64='13'/>
<enum name='fsSBFlPyLen' value64='64'/>
<enum name='fsSBFlPyLenBit' value64='6'/>
<enum name='fsSBFlRLgLen' value64='128'/>
<enum name='fsSBFlRLgLenBit' value64='7'/>
<enum name='fsSBFlRPyLen' value64='256'/>
<enum name='fsSBFlRPyLenBit' value64='8'/>
<enum name='fsSBFlXFndrInfo' value64='4096'/>
<enum name='fsSBFlXFndrInfoBit' value64='12'/>
<enum name='fsSBFullName' value64='2'/>
<enum name='fsSBFullNameBit' value64='1'/>
<enum name='fsSBGroupID' value64='4194304'/>
<enum name='fsSBGroupIDBit' value64='22'/>
<enum name='fsSBNegate' value64='16384'/>
<enum name='fsSBNegateBit' value64='14'/>
<enum name='fsSBNodeID' value64='32768'/>
<enum name='fsSBNodeIDBit' value64='15'/>
<enum name='fsSBPartialName' value64='1'/>
<enum name='fsSBPartialNameBit' value64='0'/>
<enum name='fsSBPermissions' value64='262144'/>
<enum name='fsSBPermissionsBit' value64='18'/>
<enum name='fsSBSkipHiddenItems' value64='1048576'/>
<enum name='fsSBSkipHiddenItemsBit' value64='20'/>
<enum name='fsSBSkipPackageContents' value64='524288'/>
<enum name='fsSBSkipPackageContentsBit' value64='19'/>
<enum name='fsSBUserID' value64='2097152'/>
<enum name='fsSBUserIDBit' value64='21'/>
<enum name='fsUnixPriv' value64='1'/>
<enum name='fsWrAccessPerm' value64='2'/>
<enum name='fsWrDenyPerm' value64='32'/>
<enum name='fsWrPerm' value64='2'/>
<enum name='fsmBadFFSNameErr' value64='-433'/>
<enum name='fsmBadFSDLenErr' value64='-434'/>
<enum name='fsmBadFSDVersionErr' value64='-436'/>
<enum name='fsmBusyFFSErr' value64='-432'/>
<enum name='fsmDuplicateFSIDErr' value64='-435'/>
<enum name='fsmFFSNotFoundErr' value64='-431'/>
<enum name='fsmNoAlternateStackErr' value64='-437'/>
<enum name='fsmUnknownFSMMessageErr' value64='-438'/>
<enum name='gWorldsNotSameDepthAndSizeErr' value64='-2066'/>
<enum name='gcrOnMFMErr' value64='-400'/>
<enum name='genCdevRangeBit' value64='27'/>
<enum name='gestalt16BitAudioSupport' value64='12'/>
<enum name='gestalt16BitSoundIO' value64='7'/>
<enum name='gestalt20thAnniversary' value64='512'/>
<enum name='gestalt32BitAddressing' value64='0'/>
<enum name='gestalt32BitCapable' value64='2'/>
<enum name='gestalt32BitQD' value64='512'/>
<enum name='gestalt32BitQD11' value64='513'/>
<enum name='gestalt32BitQD12' value64='544'/>
<enum name='gestalt32BitQD13' value64='560'/>
<enum name='gestalt32BitSysZone' value64='1'/>
<enum name='gestalt68000' value64='1'/>
<enum name='gestalt68010' value64='2'/>
<enum name='gestalt68020' value64='3'/>
<enum name='gestalt68030' value64='4'/>
<enum name='gestalt68030MMU' value64='3'/>
<enum name='gestalt68040' value64='5'/>
<enum name='gestalt68040FPU' value64='3'/>
<enum name='gestalt68040MMU' value64='4'/>
<enum name='gestalt68851' value64='2'/>
<enum name='gestalt68881' value64='1'/>
<enum name='gestalt68882' value64='2'/>
<enum name='gestalt68k' value64='1'/>
<enum name='gestalt8BitQD' value64='256'/>
<enum name='gestaltADBISOKbdII' value64='11'/>
<enum name='gestaltADBKbdII' value64='10'/>
<enum name='gestaltAFPClient' value64='1634103411'/>
<enum name='gestaltAFPClient3_5' value64='1'/>
<enum name='gestaltAFPClient3_6' value64='2'/>
<enum name='gestaltAFPClient3_6_1' value64='3'/>
<enum name='gestaltAFPClient3_6_2' value64='4'/>
<enum name='gestaltAFPClient3_6_3' value64='5'/>
<enum name='gestaltAFPClient3_7' value64='6'/>
<enum name='gestaltAFPClient3_7_2' value64='7'/>
<enum name='gestaltAFPClient3_8' value64='8'/>
<enum name='gestaltAFPClient3_8_1' value64='9'/>
<enum name='gestaltAFPClient3_8_3' value64='10'/>
<enum name='gestaltAFPClient3_8_4' value64='11'/>
<enum name='gestaltAFPClientAttributeMask' value64='-65536'/>
<enum name='gestaltAFPClientCfgRsrc' value64='16'/>
<enum name='gestaltAFPClientMultiReq' value64='31'/>
<enum name='gestaltAFPClientSupportsIP' value64='29'/>
<enum name='gestaltAFPClientVMUI' value64='30'/>
<enum name='gestaltAFPClientVersionMask' value64='65535'/>
<enum name='gestaltALMAttr' value64='1953655152'/>
<enum name='gestaltALMHasCFMSupport' value64='2'/>
<enum name='gestaltALMHasRescanNotifiers' value64='3'/>
<enum name='gestaltALMHasSFGroup' value64='1'/>
<enum name='gestaltALMHasSFLocation' value64='1'/>
<enum name='gestaltALMPresent' value64='0'/>
<enum name='gestaltALMVers' value64='2002873451'/>
<enum name='gestaltAMU' value64='1'/>
<enum name='gestaltATAAttr' value64='1635016992'/>
<enum name='gestaltATAPresent' value64='0'/>
<enum name='gestaltATSUAscentDescentControlsFeature' value64='16'/>
<enum name='gestaltATSUBatchBreakLinesFeature' value64='16'/>
<enum name='gestaltATSUBiDiCursorPositionFeature' value64='32'/>
<enum name='gestaltATSUByCharacterClusterFeature' value64='16'/>
<enum name='gestaltATSUDecimalTabFeature' value64='32'/>
<enum name='gestaltATSUDirectAccess' value64='16'/>
<enum name='gestaltATSUDropShadowStyleFeature' value64='32'/>
<enum name='gestaltATSUFallbacksFeature' value64='1'/>
<enum name='gestaltATSUFallbacksObjFeatures' value64='8'/>
<enum name='gestaltATSUFeatures' value64='1969845094'/>
<enum name='gestaltATSUGlyphBoundsFeature' value64='1'/>
<enum name='gestaltATSUHighlightColorControlFeature' value64='32'/>
<enum name='gestaltATSUHighlightInactiveTextFeature' value64='16'/>
<enum name='gestaltATSUIgnoreLeadingFeature' value64='8'/>
<enum name='gestaltATSULayoutCacheClearFeature' value64='1'/>
<enum name='gestaltATSULayoutCreateAndCopyFeature' value64='1'/>
<enum name='gestaltATSULineControlFeature' value64='1'/>
<enum name='gestaltATSULowLevelOrigFeatures' value64='4'/>
<enum name='gestaltATSUMemoryFeature' value64='1'/>
<enum name='gestaltATSUNearestCharLineBreakFeature' value64='32'/>
<enum name='gestaltATSUPositionToCursorFeature' value64='16'/>
<enum name='gestaltATSUStrikeThroughStyleFeature' value64='32'/>
<enum name='gestaltATSUTabSupportFeature' value64='16'/>
<enum name='gestaltATSUTextLocatorUsageFeature' value64='2'/>
<enum name='gestaltATSUTrackingFeature' value64='1'/>
<enum name='gestaltATSUUnderlineOptionsStyleFeature' value64='32'/>
<enum name='gestaltATSUUpdate1' value64='131072'/>
<enum name='gestaltATSUUpdate2' value64='196608'/>
<enum name='gestaltATSUUpdate3' value64='262144'/>
<enum name='gestaltATSUUpdate4' value64='327680'/>
<enum name='gestaltATSUUpdate5' value64='393216'/>
<enum name='gestaltATSUUpdate6' value64='458752'/>
<enum name='gestaltATSUUpdate7' value64='524288'/>
<enum name='gestaltATSUVersion' value64='1969845110'/>
<enum name='gestaltATalkVersion' value64='1635019638'/>
<enum name='gestaltAUXVersion' value64='1630500216'/>
<enum name='gestaltAVLTreeAttr' value64='1953654117'/>
<enum name='gestaltAVLTreePresentBit' value64='0'/>
<enum name='gestaltAVLTreeSupportsHandleBasedTreeBit' value64='1'/>
<enum name='gestaltAVLTreeSupportsTreeLockingBit' value64='2'/>
<enum name='gestaltAWS6150_60' value64='75'/>
<enum name='gestaltAWS6150_66' value64='100'/>
<enum name='gestaltAWS8150_110' value64='40'/>
<enum name='gestaltAWS8150_80' value64='65'/>
<enum name='gestaltAWS8550' value64='68'/>
<enum name='gestaltAWS9150_120' value64='57'/>
<enum name='gestaltAWS9150_80' value64='39'/>
<enum name='gestaltAddressingModeAttr' value64='1633969266'/>
<enum name='gestaltAdminFeaturesFlagsAttr' value64='1718773092'/>
<enum name='gestaltAliasMgrAttr' value64='1634494835'/>
<enum name='gestaltAliasMgrFollowsAliasesWhenResolving' value64='4'/>
<enum name='gestaltAliasMgrPrefersPath' value64='7'/>
<enum name='gestaltAliasMgrPresent' value64='0'/>
<enum name='gestaltAliasMgrRequiresAccessors' value64='8'/>
<enum name='gestaltAliasMgrResolveAliasFileWithMountOptions' value64='3'/>
<enum name='gestaltAliasMgrSupportsAOCEKeychain' value64='2'/>
<enum name='gestaltAliasMgrSupportsExtendedCalls' value64='5'/>
<enum name='gestaltAliasMgrSupportsFSCalls' value64='6'/>
<enum name='gestaltAliasMgrSupportsRemoteAppletalk' value64='1'/>
<enum name='gestaltAllegroQD' value64='592'/>
<enum name='gestaltAllegroQDText' value64='256'/>
<enum name='gestaltAltivecRegistersSwappedCorrectlyBit' value64='20'/>
<enum name='gestaltAntiAliasedTextAvailable' value64='2'/>
<enum name='gestaltAppearanceAttr' value64='1634758770'/>
<enum name='gestaltAppearanceCompatMode' value64='1'/>
<enum name='gestaltAppearanceExists' value64='0'/>
<enum name='gestaltAppearanceVersion' value64='1634760306'/>
<enum name='gestaltAppleAdjustADBKbd' value64='15'/>
<enum name='gestaltAppleAdjustISOKbd' value64='16'/>
<enum name='gestaltAppleAdjustKeypad' value64='14'/>
<enum name='gestaltAppleEventsAttr' value64='1702260340'/>
<enum name='gestaltAppleEventsPresent' value64='0'/>
<enum name='gestaltAppleGuideIsDebug' value64='30'/>
<enum name='gestaltAppleGuidePresent' value64='31'/>
<enum name='gestaltAppleScriptAttr' value64='1634952050'/>
<enum name='gestaltAppleScriptPowerPCSupport' value64='1'/>
<enum name='gestaltAppleScriptPresent' value64='0'/>
<enum name='gestaltAppleScriptVersion' value64='1634952054'/>
<enum name='gestaltAppleTalkVersion' value64='1635019883'/>
<enum name='gestaltArbitorAttr' value64='1634886176'/>
<enum name='gestaltAsyncSCSI' value64='0'/>
<enum name='gestaltAsyncSCSIINROM' value64='1'/>
<enum name='gestaltBuiltInSoundInput' value64='4'/>
<enum name='gestaltBusClkSpeed' value64='1650682987'/>
<enum name='gestaltBusClkSpeedMHz' value64='1650682989'/>
<enum name='gestaltCFM99Present' value64='2'/>
<enum name='gestaltCFM99PresentMask' value64='4'/>
<enum name='gestaltCFMAttr' value64='1667658343'/>
<enum name='gestaltCFMPresent' value64='0'/>
<enum name='gestaltCFMPresentMask' value64='1'/>
<enum name='gestaltCPU486' value64='1765029942'/>
<enum name='gestaltCPU601' value64='257'/>
<enum name='gestaltCPU603' value64='259'/>
<enum name='gestaltCPU603e' value64='262'/>
<enum name='gestaltCPU603ev' value64='263'/>
<enum name='gestaltCPU604' value64='260'/>
<enum name='gestaltCPU604e' value64='265'/>
<enum name='gestaltCPU604ev' value64='266'/>
<enum name='gestaltCPU68000' value64='0'/>
<enum name='gestaltCPU68010' value64='1'/>
<enum name='gestaltCPU68020' value64='2'/>
<enum name='gestaltCPU68030' value64='3'/>
<enum name='gestaltCPU68040' value64='4'/>
<enum name='gestaltCPU750' value64='264'/>
<enum name='gestaltCPU750FX' value64='288'/>
<enum name='gestaltCPU970' value64='313'/>
<enum name='gestaltCPU970FX' value64='316'/>
<enum name='gestaltCPU970MP' value64='324'/>
<enum name='gestaltCPUApollo' value64='273'/>
<enum name='gestaltCPUG4' value64='268'/>
<enum name='gestaltCPUG47447' value64='274'/>
<enum name='gestaltCPUG47450' value64='272'/>
<enum name='gestaltCPUPentium' value64='1765095478'/>
<enum name='gestaltCPUPentium4' value64='1765108086'/>
<enum name='gestaltCPUPentiumII' value64='1765108073'/>
<enum name='gestaltCPUPentiumPro' value64='1765109874'/>
<enum name='gestaltCPUX86' value64='1769502840'/>
<enum name='gestaltCRMAttr' value64='1668443424'/>
<enum name='gestaltCRMPersistentFix' value64='1'/>
<enum name='gestaltCRMPresent' value64='0'/>
<enum name='gestaltCRMToolRsrcCalls' value64='2'/>
<enum name='gestaltCTBVersion' value64='1668571766'/>
<enum name='gestaltCanStartDragInFloatWindow' value64='4'/>
<enum name='gestaltCanUseCGTextRendering' value64='6'/>
<enum name='gestaltCarbonVersion' value64='1667395438'/>
<enum name='gestaltCardServicesPresent' value64='0'/>
<enum name='gestaltClassic' value64='1'/>
<enum name='gestaltClassicII' value64='23'/>
<enum name='gestaltCloseViewAttr' value64='1112753249'/>
<enum name='gestaltCloseViewDisplayMgrFriendly' value64='1'/>
<enum name='gestaltCloseViewEnabled' value64='0'/>
<enum name='gestaltCollectionMgrVersion' value64='1668052078'/>
<enum name='gestaltColorMatchingAttr' value64='1668117601'/>
<enum name='gestaltColorMatchingLibLoaded' value64='1'/>
<enum name='gestaltColorMatchingVersion' value64='1668117603'/>
<enum name='gestaltColorPicker' value64='1668311922'/>
<enum name='gestaltColorPickerVersion' value64='1668311922'/>
<enum name='gestaltColorSync10' value64='256'/>
<enum name='gestaltColorSync104' value64='260'/>
<enum name='gestaltColorSync105' value64='261'/>
<enum name='gestaltColorSync11' value64='272'/>
<enum name='gestaltColorSync20' value64='512'/>
<enum name='gestaltColorSync21' value64='528'/>
<enum name='gestaltColorSync211' value64='529'/>
<enum name='gestaltColorSync212' value64='530'/>
<enum name='gestaltColorSync213' value64='531'/>
<enum name='gestaltColorSync25' value64='592'/>
<enum name='gestaltColorSync26' value64='608'/>
<enum name='gestaltColorSync261' value64='609'/>
<enum name='gestaltColorSync30' value64='768'/>
<enum name='gestaltComponentMgr' value64='1668312692'/>
<enum name='gestaltComponentPlatform' value64='1668247660'/>
<enum name='gestaltCompressionMgr' value64='1768123760'/>
<enum name='gestaltConnMgrAttr' value64='1668247150'/>
<enum name='gestaltConnMgrCMSearchFix' value64='1'/>
<enum name='gestaltConnMgrErrorString' value64='2'/>
<enum name='gestaltConnMgrMultiAsyncIO' value64='3'/>
<enum name='gestaltConnMgrPresent' value64='0'/>
<enum name='gestaltControlMgrAttr' value64='1668183148'/>
<enum name='gestaltControlMgrPresent' value64='1'/>
<enum name='gestaltControlMgrPresentBit' value64='0'/>
<enum name='gestaltControlMgrVersion' value64='1668118130'/>
<enum name='gestaltControlMsgPresentMask' value64='1'/>
<enum name='gestaltControlStripAttr' value64='1935959414'/>
<enum name='gestaltControlStripExists' value64='0'/>
<enum name='gestaltControlStripUserFont' value64='2'/>
<enum name='gestaltControlStripUserHotKey' value64='3'/>
<enum name='gestaltControlStripVersion' value64='1668511346'/>
<enum name='gestaltControlStripVersionFixed' value64='1'/>
<enum name='gestaltCountOfCPUs' value64='1668314483'/>
<enum name='gestaltCreatesAliasFontRsrc' value64='4'/>
<enum name='gestaltCurrentGraphicsVersion' value64='66048'/>
<enum name='gestaltDBAccessMgrAttr' value64='1684169059'/>
<enum name='gestaltDBAccessMgrPresent' value64='0'/>
<enum name='gestaltDITLExtAttr' value64='1684632684'/>
<enum name='gestaltDITLExtPresent' value64='0'/>
<enum name='gestaltDITLExtSupportsIctb' value64='1'/>
<enum name='gestaltDTMgrSupportsFSM' value64='7'/>
<enum name='gestaltDTPFeatures' value64='1685352550'/>
<enum name='gestaltDTPInfo' value64='1685352568'/>
<enum name='gestaltDesktopPicturesAttr' value64='1684762744'/>
<enum name='gestaltDesktopPicturesDisplayed' value64='1'/>
<enum name='gestaltDesktopPicturesInstalled' value64='0'/>
<enum name='gestaltDesktopSpeechRecognition' value64='1'/>
<enum name='gestaltDialogMgrAttr' value64='1684828007'/>
<enum name='gestaltDialogMgrHasAquaAlertBit' value64='2'/>
<enum name='gestaltDialogMgrHasAquaAlertMask' value64='4'/>
<enum name='gestaltDialogMgrPresent' value64='1'/>
<enum name='gestaltDialogMgrPresentBit' value64='0'/>
<enum name='gestaltDialogMgrPresentMask' value64='1'/>
<enum name='gestaltDialogMsgPresentMask' value64='1'/>
<enum name='gestaltDictionaryMgrAttr' value64='1684628340'/>
<enum name='gestaltDictionaryMgrPresent' value64='0'/>
<enum name='gestaltDigitalSignatureVersion' value64='1685285223'/>
<enum name='gestaltDiskCacheSize' value64='1684239226'/>
<enum name='gestaltDisplayMgrAttr' value64='1685089401'/>
<enum name='gestaltDisplayMgrCanConfirm' value64='4'/>
<enum name='gestaltDisplayMgrCanSwitchMirrored' value64='2'/>
<enum name='gestaltDisplayMgrColorSyncAware' value64='5'/>
<enum name='gestaltDisplayMgrGeneratesProfiles' value64='6'/>
<enum name='gestaltDisplayMgrPresent' value64='0'/>
<enum name='gestaltDisplayMgrSetDepthNotifies' value64='3'/>
<enum name='gestaltDisplayMgrSleepNotifies' value64='7'/>
<enum name='gestaltDisplayMgrVers' value64='1685089398'/>
<enum name='gestaltDragMgrAttr' value64='1685217639'/>
<enum name='gestaltDragMgrFloatingWind' value64='1'/>
<enum name='gestaltDragMgrHasImageSupport' value64='3'/>
<enum name='gestaltDragMgrPresent' value64='0'/>
<enum name='gestaltDrawSprocketVersion' value64='1685287030'/>
<enum name='gestaltDupSelectorErr' value64='-5552'/>
<enum name='gestaltEMMU1' value64='5'/>
<enum name='gestaltEasyAccessAttr' value64='1700885369'/>
<enum name='gestaltEasyAccessLocked' value64='3'/>
<enum name='gestaltEasyAccessOff' value64='0'/>
<enum name='gestaltEasyAccessOn' value64='1'/>
<enum name='gestaltEasyAccessSticky' value64='2'/>
<enum name='gestaltEditionMgrAttr' value64='1701082222'/>
<enum name='gestaltEditionMgrPresent' value64='0'/>
<enum name='gestaltEditionMgrTranslationAware' value64='1'/>
<enum name='gestaltExtADBKbd' value64='4'/>
<enum name='gestaltExtISOADBKbd' value64='9'/>
<enum name='gestaltExtToolboxTable' value64='2020897908'/>
<enum name='gestaltExtendedTimeMgr' value64='3'/>
<enum name='gestaltExtendedWindowAttributes' value64='1'/>
<enum name='gestaltExtendedWindowAttributesBit' value64='1'/>
<enum name='gestaltExtendedWindowAttributesMask' value64='2'/>
<enum name='gestaltExtensionTableVersion' value64='1702126188'/>
<enum name='gestaltFBCCurrentVersion' value64='17'/>
<enum name='gestaltFBCIndexingState' value64='1717724009'/>
<enum name='gestaltFBCVersion' value64='1717724022'/>
<enum name='gestaltFBCindexingCritical' value64='1'/>
<enum name='gestaltFBCindexingSafe' value64='0'/>
<enum name='gestaltFPUType' value64='1718646048'/>
<enum name='gestaltFSAllowsConcurrentAsyncIO' value64='17'/>
<enum name='gestaltFSAttr' value64='1718820896'/>
<enum name='gestaltFSIncompatibleDFA82' value64='10'/>
<enum name='gestaltFSMDoesDynamicLoad' value64='3'/>
<enum name='gestaltFSMVersion' value64='1718840608'/>
<enum name='gestaltFSNoMFSVols' value64='8'/>
<enum name='gestaltFSSupports2TBVols' value64='5'/>
<enum name='gestaltFSSupports4GBVols' value64='4'/>
<enum name='gestaltFSSupportsDirectIO' value64='11'/>
<enum name='gestaltFSSupportsExclusiveLocks' value64='15'/>
<enum name='gestaltFSSupportsHFSPlusVols' value64='9'/>
<enum name='gestaltFSSupportsHardLinkDetection' value64='16'/>
<enum name='gestaltFSUsesPOSIXPathsForConversion' value64='14'/>
<enum name='gestaltFXfrMgrAsync' value64='3'/>
<enum name='gestaltFXfrMgrAttr' value64='1719166578'/>
<enum name='gestaltFXfrMgrErrorString' value64='2'/>
<enum name='gestaltFXfrMgrMultiFile' value64='1'/>
<enum name='gestaltFXfrMgrPresent' value64='0'/>
<enum name='gestaltFileAllocationZeroedBlocksBit' value64='4'/>
<enum name='gestaltFileMappingAttr' value64='1718381936'/>
<enum name='gestaltFileMappingMultipleFilesFix' value64='1'/>
<enum name='gestaltFileMappingPresent' value64='0'/>
<enum name='gestaltFindFolderAttr' value64='1718578276'/>
<enum name='gestaltFindFolderPresent' value64='0'/>
<enum name='gestaltFindFolderRedirectionAttr' value64='1718578277'/>
<enum name='gestaltFinderAttr' value64='1718510706'/>
<enum name='gestaltFinderCallsAEProcess' value64='2'/>
<enum name='gestaltFinderDropEvent' value64='0'/>
<enum name='gestaltFinderFloppyRootComments' value64='8'/>
<enum name='gestaltFinderFullDragManagerSupport' value64='7'/>
<enum name='gestaltFinderHasClippings' value64='6'/>
<enum name='gestaltFinderLargeAndNotSavedFlavorsOK' value64='9'/>
<enum name='gestaltFinderMagicPlacement' value64='1'/>
<enum name='gestaltFinderSupports4GBVolumes' value64='4'/>
<enum name='gestaltFinderUnderstandsRedirectedDesktopFolder' value64='11'/>
<enum name='gestaltFinderUsesExtensibleFolderManager' value64='10'/>
<enum name='gestaltFinderUsesSpecialOpenFoldersFile' value64='0'/>
<enum name='gestaltFirstSlotNumber' value64='1936487473'/>
<enum name='gestaltFloppyAttr' value64='1718382713'/>
<enum name='gestaltFloppyIsMFMOnly' value64='0'/>
<enum name='gestaltFloppyIsManualEject' value64='1'/>
<enum name='gestaltFloppyUsesDiskInPlace' value64='2'/>
<enum name='gestaltFolderDescSupport' value64='1'/>
<enum name='gestaltFolderMgrFollowsAliasesWhenResolving' value64='2'/>
<enum name='gestaltFolderMgrSupportsDomains' value64='4'/>
<enum name='gestaltFolderMgrSupportsExtendedCalls' value64='3'/>
<enum name='gestaltFolderMgrSupportsFSCalls' value64='5'/>
<enum name='gestaltFontMgrAttr' value64='1718578804'/>
<enum name='gestaltFrontWindowMayBeHiddenBit' value64='8'/>
<enum name='gestaltFrontWindowMayBeHiddenMask' value64='256'/>
<enum name='gestaltFullExtFSDispatching' value64='0'/>
<enum name='gestaltGXPrintingMgrVersion' value64='1886218098'/>
<enum name='gestaltGXVersion' value64='1902405496'/>
<enum name='gestaltGraphicsAttr' value64='1734768737'/>
<enum name='gestaltGraphicsIsDebugging' value64='1'/>
<enum name='gestaltGraphicsIsLoaded' value64='2'/>
<enum name='gestaltGraphicsIsPowerPC' value64='4'/>
<enum name='gestaltGraphicsVersion' value64='1735550584'/>
<enum name='gestaltHardwareAttr' value64='1751414642'/>
<enum name='gestaltHardwareVendorApple' value64='1097887852'/>
<enum name='gestaltHardwareVendorCode' value64='1752326500'/>
<enum name='gestaltHasASC' value64='3'/>
<enum name='gestaltHasColor' value64='0'/>
<enum name='gestaltHasDeepGWorlds' value64='1'/>
<enum name='gestaltHasDirectPixMaps' value64='2'/>
<enum name='gestaltHasEnhancedLtalk' value64='30'/>
<enum name='gestaltHasExtendedDiskInit' value64='6'/>
<enum name='gestaltHasFMTuner' value64='7'/>
<enum name='gestaltHasFSSpecCalls' value64='1'/>
<enum name='gestaltHasFileSystemManager' value64='2'/>
<enum name='gestaltHasFloatingWindows' value64='2'/>
<enum name='gestaltHasFloatingWindowsBit' value64='2'/>
<enum name='gestaltHasFloatingWindowsMask' value64='4'/>
<enum name='gestaltHasGPIaToDCDa' value64='0'/>
<enum name='gestaltHasGPIaToRTxCa' value64='1'/>
<enum name='gestaltHasGPIbToDCDb' value64='2'/>
<enum name='gestaltHasGrayishTextOr' value64='3'/>
<enum name='gestaltHasHFSPlusAPIs' value64='12'/>
<enum name='gestaltHasHWClosedCaptioning' value64='2'/>
<enum name='gestaltHasIRRemote' value64='3'/>
<enum name='gestaltHasParityCapability' value64='0'/>
<enum name='gestaltHasResourceOverrides' value64='1'/>
<enum name='gestaltHasSCC' value64='4'/>
<enum name='gestaltHasSCSI' value64='7'/>
<enum name='gestaltHasSCSI961' value64='21'/>
<enum name='gestaltHasSCSI962' value64='22'/>
<enum name='gestaltHasSerialFader' value64='6'/>
<enum name='gestaltHasSingleWindowModeBit' value64='8'/>
<enum name='gestaltHasSingleWindowModeMask' value64='256'/>
<enum name='gestaltHasSoftPowerOff' value64='19'/>
<enum name='gestaltHasSoundFader' value64='1'/>
<enum name='gestaltHasSoundInputDevice' value64='5'/>
<enum name='gestaltHasStereoDecoder' value64='5'/>
<enum name='gestaltHasSystemIRFunction' value64='8'/>
<enum name='gestaltHasTVTuner' value64='0'/>
<enum name='gestaltHasUniversalROM' value64='24'/>
<enum name='gestaltHasVIA1' value64='0'/>
<enum name='gestaltHasVIA2' value64='1'/>
<enum name='gestaltHasVidDecoderScaler' value64='4'/>
<enum name='gestaltHasWindowBuffering' value64='3'/>
<enum name='gestaltHasWindowBufferingBit' value64='3'/>
<enum name='gestaltHasWindowBufferingMask' value64='8'/>
<enum name='gestaltHasWindowShadowsBit' value64='6'/>
<enum name='gestaltHasWindowShadowsMask' value64='64'/>
<enum name='gestaltHasZoomedVideo' value64='11'/>
<enum name='gestaltHelpMgrAttr' value64='1751477360'/>
<enum name='gestaltHelpMgrExtensions' value64='1'/>
<enum name='gestaltHelpMgrPresent' value64='0'/>
<enum name='gestaltHidePortA' value64='3'/>
<enum name='gestaltHidePortB' value64='4'/>
<enum name='gestaltHighLevelMatching' value64='0'/>
<enum name='gestaltINeedIRPowerOffConfirm' value64='10'/>
<enum name='gestaltIPCSupport' value64='7'/>
<enum name='gestaltIRDisabled' value64='9'/>
<enum name='gestaltIconUtilitiesAttr' value64='1768124270'/>
<enum name='gestaltIconUtilitiesHas32BitIcons' value64='2'/>
<enum name='gestaltIconUtilitiesHas48PixelIcons' value64='1'/>
<enum name='gestaltIconUtilitiesHas8BitDeepMasks' value64='3'/>
<enum name='gestaltIconUtilitiesHasIconServices' value64='4'/>
<enum name='gestaltIconUtilitiesPresent' value64='0'/>
<enum name='gestaltInitHeapZerosOutHeapsBit' value64='1'/>
<enum name='gestaltIntel' value64='10'/>
<enum name='gestaltInternalDisplay' value64='1768190832'/>
<enum name='gestaltJapanAdjustADBKbd' value64='17'/>
<enum name='gestaltKeyboardType' value64='1801610272'/>
<enum name='gestaltLaunchCanReturn' value64='1'/>
<enum name='gestaltLaunchControl' value64='3'/>
<enum name='gestaltLaunchFullFileSpec' value64='2'/>
<enum name='gestaltLineLevelInput' value64='9'/>
<enum name='gestaltLocationErr' value64='-5553'/>
<enum name='gestaltLogicalPageSize' value64='1885827962'/>
<enum name='gestaltLogicalRAMSize' value64='1819435373'/>
<enum name='gestaltLowMemorySize' value64='1819108717'/>
<enum name='gestaltMBLegacy' value64='0'/>
<enum name='gestaltMBMultipleBays' value64='2'/>
<enum name='gestaltMBSingleBay' value64='1'/>
<enum name='gestaltMMUType' value64='1835889952'/>
<enum name='gestaltMPCallableAPIsAttr' value64='1836086115'/>
<enum name='gestaltMPDeviceManager' value64='1'/>
<enum name='gestaltMPFileManager' value64='0'/>
<enum name='gestaltMPTrapCalls' value64='2'/>
<enum name='gestaltMac512KE' value64='3'/>
<enum name='gestaltMacAndPad' value64='2'/>
<enum name='gestaltMacCentris610' value64='52'/>
<enum name='gestaltMacCentris650' value64='30'/>
<enum name='gestaltMacCentris660AV' value64='60'/>
<enum name='gestaltMacClassic' value64='17'/>
<enum name='gestaltMacColorClassic' value64='49'/>
<enum name='gestaltMacII' value64='6'/>
<enum name='gestaltMacIIci' value64='11'/>
<enum name='gestaltMacIIcx' value64='8'/>
<enum name='gestaltMacIIfx' value64='13'/>
<enum name='gestaltMacIIsi' value64='18'/>
<enum name='gestaltMacIIvi' value64='44'/>
<enum name='gestaltMacIIvm' value64='45'/>
<enum name='gestaltMacIIvx' value64='48'/>
<enum name='gestaltMacIIx' value64='7'/>
<enum name='gestaltMacKbd' value64='1'/>
<enum name='gestaltMacLC' value64='19'/>
<enum name='gestaltMacLC475' value64='89'/>
<enum name='gestaltMacLC520' value64='56'/>
<enum name='gestaltMacLC575' value64='92'/>
<enum name='gestaltMacLC580' value64='99'/>
<enum name='gestaltMacLCII' value64='37'/>
<enum name='gestaltMacLCIII' value64='27'/>
<enum name='gestaltMacOSCompatibility' value64='1206'/>
<enum name='gestaltMacOSCompatibilityBoxAttr' value64='1650618232'/>
<enum name='gestaltMacOSCompatibilityBoxHasSerial' value64='1'/>
<enum name='gestaltMacOSCompatibilityBoxPresent' value64='0'/>
<enum name='gestaltMacOSCompatibilityBoxless' value64='2'/>
<enum name='gestaltMacOSXQD' value64='768'/>
<enum name='gestaltMacOSXQDText' value64='512'/>
<enum name='gestaltMacPlus' value64='4'/>
<enum name='gestaltMacPlusKbd' value64='3'/>
<enum name='gestaltMacQuadra605' value64='94'/>
<enum name='gestaltMacQuadra610' value64='53'/>
<enum name='gestaltMacQuadra630' value64='98'/>
<enum name='gestaltMacQuadra650' value64='36'/>
<enum name='gestaltMacQuadra660AV' value64='60'/>
<enum name='gestaltMacQuadra700' value64='22'/>
<enum name='gestaltMacQuadra800' value64='35'/>
<enum name='gestaltMacQuadra840AV' value64='78'/>
<enum name='gestaltMacQuadra900' value64='20'/>
<enum name='gestaltMacQuadra950' value64='26'/>
<enum name='gestaltMacSE' value64='5'/>
<enum name='gestaltMacSE030' value64='9'/>
<enum name='gestaltMacTV' value64='88'/>
<enum name='gestaltMacXL' value64='2'/>
<enum name='gestaltMachineIcon' value64='1835623278'/>
<enum name='gestaltMachineType' value64='1835098984'/>
<enum name='gestaltMediaBay' value64='1835165032'/>
<enum name='gestaltMemoryMapAttr' value64='1835884912'/>
<enum name='gestaltMemoryMapSparse' value64='0'/>
<enum name='gestaltMenuMgrAquaLayoutBit' value64='1'/>
<enum name='gestaltMenuMgrAquaLayoutMask' value64='2'/>
<enum name='gestaltMenuMgrAttr' value64='1835363957'/>
<enum name='gestaltMenuMgrCGImageMenuTitleBit' value64='6'/>
<enum name='gestaltMenuMgrCGImageMenuTitleMask' value64='64'/>
<enum name='gestaltMenuMgrMoreThanFiveMenusDeepBit' value64='5'/>
<enum name='gestaltMenuMgrMoreThanFiveMenusDeepMask' value64='32'/>
<enum name='gestaltMenuMgrMultipleItemsWithCommandIDBit' value64='2'/>
<enum name='gestaltMenuMgrMultipleItemsWithCommandIDMask' value64='4'/>
<enum name='gestaltMenuMgrPresent' value64='1'/>
<enum name='gestaltMenuMgrPresentBit' value64='0'/>
<enum name='gestaltMenuMgrPresentMask' value64='1'/>
<enum name='gestaltMenuMgrRetainsIconRefBit' value64='3'/>
<enum name='gestaltMenuMgrRetainsIconRefMask' value64='8'/>
<enum name='gestaltMenuMgrSendsMenuBoundsToDefProcBit' value64='4'/>
<enum name='gestaltMenuMgrSendsMenuBoundsToDefProcMask' value64='16'/>
<enum name='gestaltMessageMgrVersion' value64='1835365235'/>
<enum name='gestaltMiscAttr' value64='1835627363'/>
<enum name='gestaltMixedModeAttr' value64='1835628644'/>
<enum name='gestaltMixedModeCFM68K' value64='1'/>
<enum name='gestaltMixedModeCFM68KHasState' value64='3'/>
<enum name='gestaltMixedModeCFM68KHasTrap' value64='2'/>
<enum name='gestaltMixedModePowerPC' value64='0'/>
<enum name='gestaltMixedModeVersion' value64='1835628644'/>
<enum name='gestaltMultiChannels' value64='11'/>
<enum name='gestaltMultipleUsersState' value64='1835426930'/>
<enum name='gestaltMustUseFCBAccessors' value64='13'/>
<enum name='gestaltNameRegistryVersion' value64='1852990823'/>
<enum name='gestaltNativeCPUfamily' value64='1668314470'/>
<enum name='gestaltNativeCPUtype' value64='1668314484'/>
<enum name='gestaltNativeProcessMgrBit' value64='19'/>
<enum name='gestaltNativeTimeMgr' value64='4'/>
<enum name='gestaltNativeType1FontSupport' value64='5'/>
<enum name='gestaltNewHandleReturnsZeroedMemoryBit' value64='2'/>
<enum name='gestaltNewPtrReturnsZeroedMemoryBit' value64='3'/>
<enum name='gestaltNoFPU' value64='0'/>
<enum name='gestaltNoMMU' value64='0'/>
<enum name='gestaltNotificationMgrAttr' value64='1852663666'/>
<enum name='gestaltNotificationPresent' value64='0'/>
<enum name='gestaltNuBusConnectors' value64='1936487523'/>
<enum name='gestaltNuBusPresent' value64='1'/>
<enum name='gestaltNuBusSlotCount' value64='1853186675'/>
<enum name='gestaltOCESFServerAvailable' value64='4'/>
<enum name='gestaltOCETB' value64='258'/>
<enum name='gestaltOCETBAvailable' value64='2'/>
<enum name='gestaltOCETBNativeGlueAvailable' value64='16'/>
<enum name='gestaltOCETBPresent' value64='1'/>
<enum name='gestaltOCEToolboxAttr' value64='1868785013'/>
<enum name='gestaltOCEToolboxVersion' value64='1868785012'/>
<enum name='gestaltOFA2available' value64='3'/>
<enum name='gestaltOSAttr' value64='1869815840'/>
<enum name='gestaltOSLCompliantFinder' value64='3'/>
<enum name='gestaltOSLInSystem' value64='2'/>
<enum name='gestaltOSTable' value64='1869837428'/>
<enum name='gestaltOSXFBCCurrentVersion' value64='256'/>
<enum name='gestaltOpenFirmwareInfo' value64='1869637239'/>
<enum name='gestaltOpenTpt' value64='1869898094'/>
<enum name='gestaltOpenTptARAPPresent' value64='6'/>
<enum name='gestaltOpenTptAppleTalkLoadedBit' value64='3'/>
<enum name='gestaltOpenTptAppleTalkLoadedMask' value64='8'/>
<enum name='gestaltOpenTptAppleTalkPresentBit' value64='2'/>
<enum name='gestaltOpenTptAppleTalkPresentMask' value64='4'/>
<enum name='gestaltOpenTptIPXSPXLoadedBit' value64='7'/>
<enum name='gestaltOpenTptIPXSPXLoadedMask' value64='128'/>
<enum name='gestaltOpenTptIPXSPXPresentBit' value64='6'/>
<enum name='gestaltOpenTptIPXSPXPresentMask' value64='64'/>
<enum name='gestaltOpenTptLoadedBit' value64='1'/>
<enum name='gestaltOpenTptLoadedMask' value64='2'/>
<enum name='gestaltOpenTptNetworkSetup' value64='1869898598'/>
<enum name='gestaltOpenTptNetworkSetupLegacyExport' value64='1'/>
<enum name='gestaltOpenTptNetworkSetupLegacyImport' value64='0'/>
<enum name='gestaltOpenTptNetworkSetupSupportsMultihoming' value64='2'/>
<enum name='gestaltOpenTptNetworkSetupVersion' value64='1869898614'/>
<enum name='gestaltOpenTptPPPPresent' value64='5'/>
<enum name='gestaltOpenTptPresentBit' value64='0'/>
<enum name='gestaltOpenTptPresentMask' value64='1'/>
<enum name='gestaltOpenTptRemoteAccess' value64='1869902433'/>
<enum name='gestaltOpenTptRemoteAccessClientOnly' value64='2'/>
<enum name='gestaltOpenTptRemoteAccessLoaded' value64='1'/>
<enum name='gestaltOpenTptRemoteAccessMPServer' value64='4'/>
<enum name='gestaltOpenTptRemoteAccessPServer' value64='3'/>
<enum name='gestaltOpenTptRemoteAccessPresent' value64='0'/>
<enum name='gestaltOpenTptRemoteAccessVersion' value64='1869902454'/>
<enum name='gestaltOpenTptTCPLoadedBit' value64='5'/>
<enum name='gestaltOpenTptTCPLoadedMask' value64='32'/>
<enum name='gestaltOpenTptTCPPresentBit' value64='4'/>
<enum name='gestaltOpenTptTCPPresentMask' value64='16'/>
<enum name='gestaltOpenTptVersions' value64='1869903474'/>
<enum name='gestaltOriginalATSUVersion' value64='65536'/>
<enum name='gestaltOriginalQD' value64='0'/>
<enum name='gestaltOriginalQDText' value64='0'/>
<enum name='gestaltOutlineFonts' value64='0'/>
<enum name='gestaltPCCard' value64='1885561700'/>
<enum name='gestaltPCCardFamilyPresent' value64='1'/>
<enum name='gestaltPCCardHasPowerControl' value64='2'/>
<enum name='gestaltPCCardSupportsCardBus' value64='3'/>
<enum name='gestaltPCXAttr' value64='1885567079'/>
<enum name='gestaltPCXHas8and16BitFAT' value64='0'/>
<enum name='gestaltPCXHasProDOS' value64='1'/>
<enum name='gestaltPCXNewUI' value64='2'/>
<enum name='gestaltPCXUseICMapping' value64='3'/>
<enum name='gestaltPMgrCPUIdle' value64='1'/>
<enum name='gestaltPMgrDispatchExists' value64='4'/>
<enum name='gestaltPMgrExists' value64='0'/>
<enum name='gestaltPMgrSCC' value64='2'/>
<enum name='gestaltPMgrSound' value64='3'/>
<enum name='gestaltPMgrSupportsAVPowerStateAtSleepWake' value64='5'/>
<enum name='gestaltPPCDragLibPresent' value64='2'/>
<enum name='gestaltPPCQuickTimeLibPresent' value64='0'/>
<enum name='gestaltPPCSupportsIncoming' value64='1'/>
<enum name='gestaltPPCSupportsIncomingAppleTalk' value64='16'/>
<enum name='gestaltPPCSupportsIncomingTCP_IP' value64='32'/>
<enum name='gestaltPPCSupportsOutGoing' value64='2'/>
<enum name='gestaltPPCSupportsOutgoingAppleTalk' value64='256'/>
<enum name='gestaltPPCSupportsOutgoingTCP_IP' value64='512'/>
<enum name='gestaltPPCSupportsRealTime' value64='4096'/>
<enum name='gestaltPPCSupportsTCP_IP' value64='4'/>
<enum name='gestaltPPCToolboxAttr' value64='1886413600'/>
<enum name='gestaltPPCToolboxPresent' value64='0'/>
<enum name='gestaltPS2Keyboard' value64='27'/>
<enum name='gestaltParityAttr' value64='1886549113'/>
<enum name='gestaltParityEnabled' value64='1'/>
<enum name='gestaltPartialRsrcs' value64='0'/>
<enum name='gestaltPerforma250' value64='49'/>
<enum name='gestaltPerforma450' value64='27'/>
<enum name='gestaltPerforma46x' value64='62'/>
<enum name='gestaltPerforma47x' value64='89'/>
<enum name='gestaltPerforma5300' value64='41'/>
<enum name='gestaltPerforma550' value64='80'/>
<enum name='gestaltPerforma580' value64='99'/>
<enum name='gestaltPerforma600' value64='45'/>
<enum name='gestaltPerforma6300' value64='42'/>
<enum name='gestaltPerforma6360' value64='58'/>
<enum name='gestaltPerforma6400' value64='58'/>
<enum name='gestaltPhysicalRAMSize' value64='1918987552'/>
<enum name='gestaltPhysicalRAMSizeInMegabytes' value64='1918987629'/>
<enum name='gestaltPlayAndRecord' value64='6'/>
<enum name='gestaltPopupAttr' value64='1886351393'/>
<enum name='gestaltPopupPresent' value64='0'/>
<enum name='gestaltPortADisabled' value64='5'/>
<enum name='gestaltPortBDisabled' value64='6'/>
<enum name='gestaltPortable' value64='10'/>
<enum name='gestaltPortable2001ANSIKbd' value64='202'/>
<enum name='gestaltPortable2001ISOKbd' value64='203'/>
<enum name='gestaltPortable2001JISKbd' value64='207'/>
<enum name='gestaltPortableSlotPresent' value64='4'/>
<enum name='gestaltPortableUSBANSIKbd' value64='37'/>
<enum name='gestaltPortableUSBISOKbd' value64='38'/>
<enum name='gestaltPortableUSBJISKbd' value64='39'/>
<enum name='gestaltPowerBook100' value64='24'/>
<enum name='gestaltPowerBook140' value64='25'/>
<enum name='gestaltPowerBook1400' value64='310'/>
<enum name='gestaltPowerBook145' value64='54'/>
<enum name='gestaltPowerBook150' value64='115'/>
<enum name='gestaltPowerBook160' value64='34'/>
<enum name='gestaltPowerBook165' value64='84'/>
<enum name='gestaltPowerBook165c' value64='50'/>
<enum name='gestaltPowerBook170' value64='21'/>
<enum name='gestaltPowerBook180' value64='33'/>
<enum name='gestaltPowerBook180c' value64='71'/>
<enum name='gestaltPowerBook190' value64='85'/>
<enum name='gestaltPowerBook2400' value64='307'/>
<enum name='gestaltPowerBook3400' value64='306'/>
<enum name='gestaltPowerBook500PPCUpgrade' value64='126'/>
<enum name='gestaltPowerBook520' value64='72'/>
<enum name='gestaltPowerBook520c' value64='72'/>
<enum name='gestaltPowerBook5300' value64='128'/>
<enum name='gestaltPowerBook540' value64='72'/>
<enum name='gestaltPowerBook540c' value64='72'/>
<enum name='gestaltPowerBookDuo210' value64='29'/>
<enum name='gestaltPowerBookDuo230' value64='32'/>
<enum name='gestaltPowerBookDuo2300' value64='124'/>
<enum name='gestaltPowerBookDuo250' value64='38'/>
<enum name='gestaltPowerBookDuo270c' value64='77'/>
<enum name='gestaltPowerBookDuo280' value64='102'/>
<enum name='gestaltPowerBookDuo280c' value64='103'/>
<enum name='gestaltPowerBookG3' value64='313'/>
<enum name='gestaltPowerBookG3Series' value64='312'/>
<enum name='gestaltPowerBookG3Series2' value64='314'/>
<enum name='gestaltPowerMac4400' value64='515'/>
<enum name='gestaltPowerMac4400_160' value64='514'/>
<enum name='gestaltPowerMac5200' value64='41'/>
<enum name='gestaltPowerMac5260' value64='41'/>
<enum name='gestaltPowerMac5400' value64='74'/>
<enum name='gestaltPowerMac5500' value64='512'/>
<enum name='gestaltPowerMac6100_60' value64='75'/>
<enum name='gestaltPowerMac6100_66' value64='100'/>
<enum name='gestaltPowerMac6200' value64='42'/>
<enum name='gestaltPowerMac6400' value64='58'/>
<enum name='gestaltPowerMac6500' value64='513'/>
<enum name='gestaltPowerMac7100_66' value64='112'/>
<enum name='gestaltPowerMac7100_80' value64='47'/>
<enum name='gestaltPowerMac7200' value64='108'/>
<enum name='gestaltPowerMac7300' value64='109'/>
<enum name='gestaltPowerMac7500' value64='68'/>
<enum name='gestaltPowerMac7600' value64='68'/>
<enum name='gestaltPowerMac8100_100' value64='55'/>
<enum name='gestaltPowerMac8100_110' value64='40'/>
<enum name='gestaltPowerMac8100_120' value64='12'/>
<enum name='gestaltPowerMac8100_80' value64='65'/>
<enum name='gestaltPowerMac8500' value64='69'/>
<enum name='gestaltPowerMac8600' value64='69'/>
<enum name='gestaltPowerMac9500' value64='67'/>
<enum name='gestaltPowerMac9600' value64='67'/>
<enum name='gestaltPowerMacCentris610' value64='119'/>
<enum name='gestaltPowerMacCentris650' value64='120'/>
<enum name='gestaltPowerMacG3' value64='510'/>
<enum name='gestaltPowerMacLC475' value64='104'/>
<enum name='gestaltPowerMacLC575' value64='105'/>
<enum name='gestaltPowerMacLC630' value64='106'/>
<enum name='gestaltPowerMacNewWorld' value64='406'/>
<enum name='gestaltPowerMacPerforma47x' value64='104'/>
<enum name='gestaltPowerMacPerforma57x' value64='105'/>
<enum name='gestaltPowerMacPerforma63x' value64='106'/>
<enum name='gestaltPowerMacQuadra610' value64='121'/>
<enum name='gestaltPowerMacQuadra630' value64='106'/>
<enum name='gestaltPowerMacQuadra650' value64='122'/>
<enum name='gestaltPowerMacQuadra700' value64='116'/>
<enum name='gestaltPowerMacQuadra800' value64='123'/>
<enum name='gestaltPowerMacQuadra900' value64='117'/>
<enum name='gestaltPowerMacQuadra950' value64='118'/>
<enum name='gestaltPowerMgrAttr' value64='1886353266'/>
<enum name='gestaltPowerMgrVers' value64='1886876278'/>
<enum name='gestaltPowerPC' value64='2'/>
<enum name='gestaltPowerPCASArchitecture' value64='8'/>
<enum name='gestaltPowerPCAware' value64='0'/>
<enum name='gestaltPowerPCHas64BitSupport' value64='6'/>
<enum name='gestaltPowerPCHasDCBAInstruction' value64='3'/>
<enum name='gestaltPowerPCHasDCBTStreams' value64='7'/>
<enum name='gestaltPowerPCHasDataStreams' value64='5'/>
<enum name='gestaltPowerPCHasGraphicsInstructions' value64='0'/>
<enum name='gestaltPowerPCHasSTFIWXInstruction' value64='1'/>
<enum name='gestaltPowerPCHasSquareRootInstructions' value64='2'/>
<enum name='gestaltPowerPCHasVectorInstructions' value64='4'/>
<enum name='gestaltPowerPCIgnoresDCBST' value64='9'/>
<enum name='gestaltPowerPCProcessorFeatures' value64='1886413670'/>
<enum name='gestaltProF16ANSIKbd' value64='31'/>
<enum name='gestaltProF16ISOKbd' value64='32'/>
<enum name='gestaltProF16JISKbd' value64='33'/>
<enum name='gestaltProcClkSpeed' value64='1885564011'/>
<enum name='gestaltProcClkSpeedMHz' value64='1835232363'/>
<enum name='gestaltProcessorCacheLineSize' value64='1668508026'/>
<enum name='gestaltProcessorType' value64='1886547811'/>
<enum name='gestaltPrtblADBKbd' value64='6'/>
<enum name='gestaltPrtblISOKbd' value64='7'/>
<enum name='gestaltPwrBk99JISKbd' value64='201'/>
<enum name='gestaltPwrBkEKDomKbd' value64='195'/>
<enum name='gestaltPwrBkEKISOKbd' value64='196'/>
<enum name='gestaltPwrBkEKJISKbd' value64='197'/>
<enum name='gestaltPwrBkExtADBKbd' value64='24'/>
<enum name='gestaltPwrBkExtISOKbd' value64='20'/>
<enum name='gestaltPwrBkExtJISKbd' value64='21'/>
<enum name='gestaltPwrBkSubDomKbd' value64='28'/>
<enum name='gestaltPwrBkSubISOKbd' value64='29'/>
<enum name='gestaltPwrBkSubJISKbd' value64='30'/>
<enum name='gestaltPwrBookADBKbd' value64='12'/>
<enum name='gestaltPwrBookISOADBKbd' value64='13'/>
<enum name='gestaltQD3D' value64='1902392164'/>
<enum name='gestaltQD3DPresent' value64='0'/>
<enum name='gestaltQD3DVersion' value64='1899197984'/>
<enum name='gestaltQD3DViewer' value64='1899198051'/>
<enum name='gestaltQD3DViewerPresent' value64='0'/>
<enum name='gestaltQDHasLongRowBytes' value64='5'/>
<enum name='gestaltQDTextFeatures' value64='1902408806'/>
<enum name='gestaltQDTextVersion' value64='1902408824'/>
<enum name='gestaltQTVRCubicPanosPresent' value64='3'/>
<enum name='gestaltQTVRCylinderPanosPresent' value64='2'/>
<enum name='gestaltQTVRMgrAttr' value64='1903457906'/>
<enum name='gestaltQTVRMgrPresent' value64='0'/>
<enum name='gestaltQTVRMgrVers' value64='1903457910'/>
<enum name='gestaltQTVRObjMoviesPresent' value64='1'/>
<enum name='gestaltQuadra605' value64='94'/>
<enum name='gestaltQuadra610' value64='53'/>
<enum name='gestaltQuadra630' value64='98'/>
<enum name='gestaltQuadra650' value64='36'/>
<enum name='gestaltQuadra660AV' value64='60'/>
<enum name='gestaltQuadra700' value64='22'/>
<enum name='gestaltQuadra800' value64='35'/>
<enum name='gestaltQuadra840AV' value64='78'/>
<enum name='gestaltQuadra900' value64='20'/>
<enum name='gestaltQuadra950' value64='26'/>
<enum name='gestaltQuickTime' value64='1903454573'/>
<enum name='gestaltQuickTimeConferencing' value64='1836346475'/>
<enum name='gestaltQuickTimeConferencingInfo' value64='1903453033'/>
<enum name='gestaltQuickTimeFeatures' value64='1903456883'/>
<enum name='gestaltQuickTimeStreamingFeatures' value64='1903457126'/>
<enum name='gestaltQuickTimeStreamingVersion' value64='1903457140'/>
<enum name='gestaltQuickTimeThreadSafeFeaturesAttr' value64='1903457384'/>
<enum name='gestaltQuickTimeThreadSafeGraphicsExport' value64='5'/>
<enum name='gestaltQuickTimeThreadSafeGraphicsImport' value64='4'/>
<enum name='gestaltQuickTimeThreadSafeICM' value64='0'/>
<enum name='gestaltQuickTimeThreadSafeMovieExport' value64='3'/>
<enum name='gestaltQuickTimeThreadSafeMovieImport' value64='2'/>
<enum name='gestaltQuickTimeThreadSafeMoviePlayback' value64='6'/>
<enum name='gestaltQuickTimeThreadSafeMovieToolbox' value64='1'/>
<enum name='gestaltQuickTimeVersion' value64='1903454573'/>
<enum name='gestaltQuickdrawFeatures' value64='1902408311'/>
<enum name='gestaltQuickdrawVersion' value64='1902387232'/>
<enum name='gestaltRBVAddr' value64='1919055392'/>
<enum name='gestaltRMFakeAppleMenuItemsRolledIn' value64='1'/>
<enum name='gestaltRMForceSysHeapRolledIn' value64='0'/>
<enum name='gestaltRMSupportsFSCalls' value64='4'/>
<enum name='gestaltRMTypeIndexOrderingReverse' value64='8'/>
<enum name='gestaltROMSize' value64='1919905056'/>
<enum name='gestaltROMVersion' value64='1919905142'/>
<enum name='gestaltRealTempMemory' value64='5'/>
<enum name='gestaltRealtimeMgrAttr' value64='1920232818'/>
<enum name='gestaltRealtimeMgrPresent' value64='0'/>
<enum name='gestaltResourceMgrAttr' value64='1920168547'/>
<enum name='gestaltResourceMgrBugFixesAttrs' value64='1919771239'/>
<enum name='gestaltRevisedTimeMgr' value64='2'/>
<enum name='gestaltSCCReadAddr' value64='1935893362'/>
<enum name='gestaltSCCWriteAddr' value64='1935893367'/>
<enum name='gestaltSCSI' value64='1935897449'/>
<enum name='gestaltSCSIPollSIH' value64='3'/>
<enum name='gestaltSCSISlotBoot' value64='2'/>
<enum name='gestaltSDPFindVersion' value64='1684434532'/>
<enum name='gestaltSDPPromptVersion' value64='1886548086'/>
<enum name='gestaltSDPStandardDirectoryVersion' value64='1935963762'/>
<enum name='gestaltSE30SlotPresent' value64='3'/>
<enum name='gestaltSESlotPresent' value64='2'/>
<enum name='gestaltSFServer' value64='256'/>
<enum name='gestaltSMPMailerVersion' value64='1835101298'/>
<enum name='gestaltSMPSPSendLetterVersion' value64='1936749420'/>
<enum name='gestaltSafeOFAttr' value64='1935763045'/>
<enum name='gestaltSanityCheckResourceFiles' value64='2'/>
<enum name='gestaltSbitFontSupport' value64='1'/>
<enum name='gestaltScrapMgrAttr' value64='1935897185'/>
<enum name='gestaltScrapMgrTranslationAware' value64='0'/>
<enum name='gestaltScreenCaptureDir' value64='1885954866'/>
<enum name='gestaltScreenCaptureMain' value64='1885954865'/>
<enum name='gestaltScriptCount' value64='1935897123'/>
<enum name='gestaltScriptMgrVersion' value64='1935897193'/>
<enum name='gestaltScriptingSupport' value64='1'/>
<enum name='gestaltScrollingThrottle' value64='0'/>
<enum name='gestaltSerialArbitrationExists' value64='0'/>
<enum name='gestaltSerialAttr' value64='1936028192'/>
<enum name='gestaltSetDragImageUpdates' value64='5'/>
<enum name='gestaltSheetsAreWindowModalBit' value64='7'/>
<enum name='gestaltSheetsAreWindowModalMask' value64='128'/>
<enum name='gestaltShutdownAttributes' value64='1936225652'/>
<enum name='gestaltShutdownHassdOnBootVolUnmount' value64='0'/>
<enum name='gestaltSlotAttr' value64='1936486260'/>
<enum name='gestaltSlotMgrExists' value64='0'/>
<enum name='gestaltSndPlayDoubleBuffer' value64='10'/>
<enum name='gestaltSoftwareVendorApple' value64='1097887852'/>
<enum name='gestaltSoftwareVendorCode' value64='1936875876'/>
<enum name='gestaltSoftwareVendorLicensee' value64='1281584755'/>
<enum name='gestaltSoundAttr' value64='1936614432'/>
<enum name='gestaltSoundIOMgrPresent' value64='3'/>
<enum name='gestaltSpecificMatchSupport' value64='1'/>
<enum name='gestaltSpeechAttr' value64='1953788771'/>
<enum name='gestaltSpeechHasPPCGlue' value64='1'/>
<enum name='gestaltSpeechMgrPresent' value64='0'/>
<enum name='gestaltSpeechRecognitionAttr' value64='1936880737'/>
<enum name='gestaltSpeechRecognitionVersion' value64='1936880738'/>
<enum name='gestaltSplitOSAttr' value64='1936748403'/>
<enum name='gestaltSplitOSAware' value64='1'/>
<enum name='gestaltSplitOSBootDriveIsNetworkVolume' value64='0'/>
<enum name='gestaltSplitOSEnablerVolumeIsDifferentFromBootVolume' value64='2'/>
<enum name='gestaltSplitOSMachineNameSetToNetworkNameTemp' value64='3'/>
<enum name='gestaltSplitOSMachineNameStartupDiskIsNonPersistent' value64='5'/>
<enum name='gestaltSquareMenuBar' value64='2'/>
<enum name='gestaltStandardFile58' value64='0'/>
<enum name='gestaltStandardFileAttr' value64='1937007718'/>
<enum name='gestaltStandardFileHasColorIcons' value64='2'/>
<enum name='gestaltStandardFileHasDynamicVolumeAllocation' value64='4'/>
<enum name='gestaltStandardFileTranslationAware' value64='1'/>
<enum name='gestaltStandardFileUseGenericIcons' value64='3'/>
<enum name='gestaltStandardTimeMgr' value64='1'/>
<enum name='gestaltStdADBKbd' value64='5'/>
<enum name='gestaltStdISOADBKbd' value64='8'/>
<enum name='gestaltStdNBPAttr' value64='1852601712'/>
<enum name='gestaltStdNBPPresent' value64='0'/>
<enum name='gestaltStdNBPSupportsAutoPosition' value64='1'/>
<enum name='gestaltStereoCapability' value64='0'/>
<enum name='gestaltStereoInput' value64='8'/>
<enum name='gestaltStereoMixing' value64='1'/>
<enum name='gestaltSupportsApplicationURL' value64='4'/>
<enum name='gestaltSupportsFSpResourceFileAlreadyOpenBit' value64='3'/>
<enum name='gestaltSupportsMirroring' value64='4'/>
<enum name='gestaltSysArchitecture' value64='1937339233'/>
<enum name='gestaltSysDebuggerSupport' value64='8'/>
<enum name='gestaltSysZoneGrowable' value64='0'/>
<enum name='gestaltSystemUpdateVersion' value64='1937339253'/>
<enum name='gestaltSystemVersion' value64='1937339254'/>
<enum name='gestaltSystemVersionBugFix' value64='1937339187'/>
<enum name='gestaltSystemVersionMajor' value64='1937339185'/>
<enum name='gestaltSystemVersionMinor' value64='1937339186'/>
<enum name='gestaltTE1' value64='1'/>
<enum name='gestaltTE2' value64='2'/>
<enum name='gestaltTE3' value64='3'/>
<enum name='gestaltTE4' value64='4'/>
<enum name='gestaltTE5' value64='5'/>
<enum name='gestaltTE6' value64='6'/>
<enum name='gestaltTEAttr' value64='1952801140'/>
<enum name='gestaltTEHasGetHiliteRgn' value64='0'/>
<enum name='gestaltTEHasWhiteBackground' value64='3'/>
<enum name='gestaltTESupportsInlineInput' value64='1'/>
<enum name='gestaltTESupportsTextObjects' value64='2'/>
<enum name='gestaltTSMDisplayMgrAwareBit' value64='0'/>
<enum name='gestaltTSMTE' value64='0'/>
<enum name='gestaltTSMTE1' value64='256'/>
<enum name='gestaltTSMTE15' value64='336'/>
<enum name='gestaltTSMTE152' value64='338'/>
<enum name='gestaltTSMTEAttr' value64='1953322053'/>
<enum name='gestaltTSMTEPresent' value64='0'/>
<enum name='gestaltTSMTEVersion' value64='1953322070'/>
<enum name='gestaltTSMdoesTSMTEBit' value64='1'/>
<enum name='gestaltTSMgr15' value64='336'/>
<enum name='gestaltTSMgr20' value64='512'/>
<enum name='gestaltTSMgr22' value64='544'/>
<enum name='gestaltTSMgr23' value64='560'/>
<enum name='gestaltTSMgrAttr' value64='1953721697'/>
<enum name='gestaltTSMgrVersion' value64='1953721718'/>
<enum name='gestaltTVAttr' value64='1953898528'/>
<enum name='gestaltTeleMgrAttr' value64='1952803941'/>
<enum name='gestaltTeleMgrAutoAnswer' value64='3'/>
<enum name='gestaltTeleMgrIndHandset' value64='4'/>
<enum name='gestaltTeleMgrNewTELNewSupport' value64='6'/>
<enum name='gestaltTeleMgrPowerPCSupport' value64='1'/>
<enum name='gestaltTeleMgrPresent' value64='0'/>
<enum name='gestaltTeleMgrSilenceDetect' value64='5'/>
<enum name='gestaltTeleMgrSoundStreams' value64='2'/>
<enum name='gestaltTelephoneSpeechRecognition' value64='2'/>
<enum name='gestaltTempMemSupport' value64='4'/>
<enum name='gestaltTempMemTracked' value64='6'/>
<enum name='gestaltTermMgrAttr' value64='1952805485'/>
<enum name='gestaltTermMgrErrorString' value64='2'/>
<enum name='gestaltTermMgrPresent' value64='0'/>
<enum name='gestaltTextEditVersion' value64='1952784416'/>
<enum name='gestaltThirdPartyANSIKbd' value64='40'/>
<enum name='gestaltThirdPartyISOKbd' value64='41'/>
<enum name='gestaltThirdPartyJISKbd' value64='42'/>
<enum name='gestaltThreadMgrAttr' value64='1952998515'/>
<enum name='gestaltThreadMgrPresent' value64='0'/>
<enum name='gestaltThreadsLibraryPresent' value64='2'/>
<enum name='gestaltTimeMgrVersion' value64='1953326962'/>
<enum name='gestaltToolboxTable' value64='1952609396'/>
<enum name='gestaltTranslationAttr' value64='2020368756'/>
<enum name='gestaltTranslationGetPathAPIAvail' value64='3'/>
<enum name='gestaltTranslationMgrExists' value64='0'/>
<enum name='gestaltTranslationMgrHintOrder' value64='1'/>
<enum name='gestaltTranslationPPCAvail' value64='2'/>
<enum name='gestaltUDFSupport' value64='1802855526'/>
<enum name='gestaltUSBAndyANSIKbd' value64='204'/>
<enum name='gestaltUSBAndyISOKbd' value64='205'/>
<enum name='gestaltUSBAndyJISKbd' value64='206'/>
<enum name='gestaltUSBAttr' value64='1970496032'/>
<enum name='gestaltUSBCosmoANSIKbd' value64='198'/>
<enum name='gestaltUSBCosmoISOKbd' value64='199'/>
<enum name='gestaltUSBCosmoJISKbd' value64='200'/>
<enum name='gestaltUSBHasIsoch' value64='1'/>
<enum name='gestaltUSBPresent' value64='0'/>
<enum name='gestaltUSBPrinterSharingAttr' value64='2053204768'/>
<enum name='gestaltUSBPrinterSharingAttrBooted' value64='1073741824'/>
<enum name='gestaltUSBPrinterSharingAttrMask' value64='-65536'/>
<enum name='gestaltUSBPrinterSharingAttrRunning' value64='-2147483648'/>
<enum name='gestaltUSBPrinterSharingVersion' value64='2053204768'/>
<enum name='gestaltUSBPrinterSharingVersionMask' value64='65535'/>
<enum name='gestaltUSBProF16ANSIKbd' value64='34'/>
<enum name='gestaltUSBProF16ISOKbd' value64='35'/>
<enum name='gestaltUSBProF16JISKbd' value64='36'/>
<enum name='gestaltUSBVersion' value64='1970496118'/>
<enum name='gestaltUndefSelectorErr' value64='-5551'/>
<enum name='gestaltUnknownErr' value64='-5550'/>
<enum name='gestaltUnknownThirdPartyKbd' value64='3'/>
<enum name='gestaltUserVisibleMachineName' value64='1835950445'/>
<enum name='gestaltVIA1Addr' value64='1986617649'/>
<enum name='gestaltVIA2Addr' value64='1986617650'/>
<enum name='gestaltVMAttr' value64='1986863136'/>
<enum name='gestaltVMBackingStoreFileRefNum' value64='1986880115'/>
<enum name='gestaltVMFilemappingOn' value64='3'/>
<enum name='gestaltVMHasLockMemoryForOutput' value64='1'/>
<enum name='gestaltVMHasPagingControl' value64='4'/>
<enum name='gestaltVMInfoNoneType' value64='3'/>
<enum name='gestaltVMInfoSimpleType' value64='2'/>
<enum name='gestaltVMInfoSizeStorageType' value64='0'/>
<enum name='gestaltVMInfoSizeType' value64='1'/>
<enum name='gestaltVMInfoType' value64='1986881902'/>
<enum name='gestaltVMPresent' value64='0'/>
<enum name='gestaltVMZerosPagesBit' value64='0'/>
<enum name='gestaltValueImplementedVers' value64='5'/>
<enum name='gestaltVersion' value64='1986359923'/>
<enum name='gestaltWSIICanPrintWithoutPrGeneralBit' value64='0'/>
<enum name='gestaltWSIISupport' value64='0'/>
<enum name='gestaltWindowLiveResizeBit' value64='4'/>
<enum name='gestaltWindowLiveResizeMask' value64='16'/>
<enum name='gestaltWindowMgrAttr' value64='2003398244'/>
<enum name='gestaltWindowMgrPresent' value64='1'/>
<enum name='gestaltWindowMgrPresentBit' value64='0'/>
<enum name='gestaltWindowMgrPresentMask' value64='1'/>
<enum name='gestaltWindowMinimizeToDockBit' value64='5'/>
<enum name='gestaltWindowMinimizeToDockMask' value64='32'/>
<enum name='gestaltWorldScriptIIAttr' value64='2004050292'/>
<enum name='gestaltWorldScriptIIVersion' value64='1685026146'/>
<enum name='gestaltX86AdditionalFeatures' value64='2016949857'/>
<enum name='gestaltX86Features' value64='2016949862'/>
<enum name='gestaltX86HasAPIC' value64='9'/>
<enum name='gestaltX86HasCID' value64='10'/>
<enum name='gestaltX86HasCLFSH' value64='19'/>
<enum name='gestaltX86HasCMOV' value64='15'/>
<enum name='gestaltX86HasCX16' value64='13'/>
<enum name='gestaltX86HasCX8' value64='8'/>
<enum name='gestaltX86HasDE' value64='2'/>
<enum name='gestaltX86HasDS' value64='21'/>
<enum name='gestaltX86HasDSCPL' value64='4'/>
<enum name='gestaltX86HasEST' value64='7'/>
<enum name='gestaltX86HasFPU' value64='0'/>
<enum name='gestaltX86HasFXSR' value64='24'/>
<enum name='gestaltX86HasHTT' value64='28'/>
<enum name='gestaltX86HasMCA' value64='14'/>
<enum name='gestaltX86HasMCE' value64='7'/>
<enum name='gestaltX86HasMMX' value64='23'/>
<enum name='gestaltX86HasMONITOR' value64='3'/>
<enum name='gestaltX86HasMSR' value64='5'/>
<enum name='gestaltX86HasMTRR' value64='12'/>
<enum name='gestaltX86HasPAE' value64='6'/>
<enum name='gestaltX86HasPAT' value64='16'/>
<enum name='gestaltX86HasPGE' value64='13'/>
<enum name='gestaltX86HasPSE' value64='3'/>
<enum name='gestaltX86HasPSE36' value64='17'/>
<enum name='gestaltX86HasPSN' value64='18'/>
<enum name='gestaltX86HasSEP' value64='11'/>
<enum name='gestaltX86HasSMX' value64='6'/>
<enum name='gestaltX86HasSS' value64='27'/>
<enum name='gestaltX86HasSSE' value64='25'/>
<enum name='gestaltX86HasSSE2' value64='26'/>
<enum name='gestaltX86HasSSE3' value64='0'/>
<enum name='gestaltX86HasSupplementalSSE3' value64='9'/>
<enum name='gestaltX86HasTM' value64='29'/>
<enum name='gestaltX86HasTM2' value64='8'/>
<enum name='gestaltX86HasTSC' value64='4'/>
<enum name='gestaltX86HasVME' value64='1'/>
<enum name='gestaltX86HasVMX' value64='5'/>
<enum name='gestaltX86HasxTPR' value64='14'/>
<enum name='gestaltX86ResACPI' value64='22'/>
<enum name='gestaltX86Serviced20' value64='20'/>
<enum name='gfpErr' value64='-52'/>
<enum name='grabTimeComplete' value64='-9401'/>
<enum name='graveUprE' value64='233'/>
<enum name='graveUprI' value64='237'/>
<enum name='graveUprO' value64='241'/>
<enum name='graveUprU' value64='244'/>
<enum name='guestNotAllowedErr' value64='-932'/>
<enum name='hMenuFindErr' value64='-127'/>
<enum name='hachek' value64='255'/>
<enum name='handlerNotFoundErr' value64='-1856'/>
<enum name='hardwareConfigErr' value64='-604'/>
<enum name='hmBalloonAborted' value64='-853'/>
<enum name='hmCloseViewActive' value64='-863'/>
<enum name='hmHelpDisabled' value64='-850'/>
<enum name='hmHelpManagerNotInited' value64='-855'/>
<enum name='hmNoBalloonUp' value64='-862'/>
<enum name='hmOperationUnsupported' value64='-861'/>
<enum name='hmSameAsLastBalloon' value64='-854'/>
<enum name='hmSkippedBalloon' value64='-857'/>
<enum name='hmUnknownHelpType' value64='-859'/>
<enum name='hmWrongVersion' value64='-858'/>
<enum name='hourField' value64='4'/>
<enum name='hourMask' value64='16'/>
<enum name='hrHTMLRenderingLibNotInstalledErr' value64='-5360'/>
<enum name='hrLeadingZ' value64='128'/>
<enum name='hrMiscellaneousExceptionErr' value64='-5361'/>
<enum name='hrURLNotHandledErr' value64='-5363'/>
<enum name='hrUnableToResizeHandleErr' value64='-5362'/>
<enum name='hwParamErr' value64='-502'/>
<enum name='iIOAbort' value64='-27'/>
<enum name='iIOAbortErr' value64='-27'/>
<enum name='iMemFullErr' value64='-108'/>
<enum name='illegalChannelOSErr' value64='-2076'/>
<enum name='illegalControllerOSErr' value64='-2080'/>
<enum name='illegalInstrumentOSErr' value64='-2079'/>
<enum name='illegalKnobOSErr' value64='-2077'/>
<enum name='illegalKnobValueOSErr' value64='-2078'/>
<enum name='illegalNoteChannelOSErr' value64='-2084'/>
<enum name='illegalPartOSErr' value64='-2075'/>
<enum name='illegalScrapFlavorFlagsErr' value64='-4997'/>
<enum name='illegalScrapFlavorSizeErr' value64='-4999'/>
<enum name='illegalScrapFlavorTypeErr' value64='-4998'/>
<enum name='illegalVoiceAllocationOSErr' value64='-2074'/>
<enum name='incompatibleVoice' value64='-245'/>
<enum name='initIWMErr' value64='-77'/>
<enum name='inputOutOfBounds' value64='-190'/>
<enum name='insufficientStackErr' value64='-149'/>
<enum name='intArabic' value64='1'/>
<enum name='intEuropean' value64='4'/>
<enum name='intJapanese' value64='3'/>
<enum name='intOutputMask' value64='32768'/>
<enum name='intRoman' value64='2'/>
<enum name='intWestern' value64='0'/>
<enum name='internalComponentErr' value64='-2070'/>
<enum name='internalQuickTimeError' value64='-2034'/>
<enum name='internalScrapErr' value64='-4988'/>
<enum name='interruptsMaskedErr' value64='-624'/>
<enum name='intlCurrency' value64='219'/>
<enum name='invalidAtomContainerErr' value64='-2107'/>
<enum name='invalidAtomErr' value64='-2106'/>
<enum name='invalidAtomTypeErr' value64='-2108'/>
<enum name='invalidChunkCache' value64='-2040'/>
<enum name='invalidChunkNum' value64='-2038'/>
<enum name='invalidComponentID' value64='-3000'/>
<enum name='invalidDataRef' value64='-2012'/>
<enum name='invalidDataRefContainer' value64='-2049'/>
<enum name='invalidDuration' value64='-2014'/>
<enum name='invalidEditState' value64='-2023'/>
<enum name='invalidFolderTypeErr' value64='-4273'/>
<enum name='invalidHandler' value64='-2013'/>
<enum name='invalidHotSpotIDErr' value64='-30551'/>
<enum name='invalidIconRefErr' value64='-2580'/>
<enum name='invalidImageIndexErr' value64='-2068'/>
<enum name='invalidIndexErr' value64='-20002'/>
<enum name='invalidMedia' value64='-2008'/>
<enum name='invalidMovie' value64='-2010'/>
<enum name='invalidNodeFormatErr' value64='-30550'/>
<enum name='invalidNodeIDErr' value64='-30544'/>
<enum name='invalidPickerType' value64='-4000'/>
<enum name='invalidRect' value64='-2036'/>
<enum name='invalidSampleDescIndex' value64='-2039'/>
<enum name='invalidSampleDescription' value64='-2041'/>
<enum name='invalidSampleNum' value64='-2037'/>
<enum name='invalidSampleTable' value64='-2011'/>
<enum name='invalidSpriteIDErr' value64='-2069'/>
<enum name='invalidSpriteIndexErr' value64='-2067'/>
<enum name='invalidSpritePropertyErr' value64='-2065'/>
<enum name='invalidSpriteWorldPropertyErr' value64='-2064'/>
<enum name='invalidTime' value64='-2015'/>
<enum name='invalidTrack' value64='-2009'/>
<enum name='invalidTranslationPathErr' value64='-3025'/>
<enum name='invalidViewStateErr' value64='-30545'/>
<enum name='ioDirFlg' value64='4'/>
<enum name='ioDirMask' value64='16'/>
<enum name='ioErr' value64='-36'/>
<enum name='ioQType' value64='2'/>
<enum name='itlcDisableKeyScriptSync' value64='3'/>
<enum name='itlcDisableKeyScriptSyncMask' value64='8'/>
<enum name='itlcDualCaret' value64='6'/>
<enum name='itlcShowIcon' value64='7'/>
<enum name='itlcSysDirection' value64='15'/>
<enum name='iuCurrentCurLang' value64='-4'/>
<enum name='iuCurrentDefLang' value64='-5'/>
<enum name='iuCurrentScript' value64='-2'/>
<enum name='iuNumberPartsTable' value64='2'/>
<enum name='iuScriptCurLang' value64='-6'/>
<enum name='iuScriptDefLang' value64='-7'/>
<enum name='iuSystemCurLang' value64='-2'/>
<enum name='iuSystemDefLang' value64='-3'/>
<enum name='iuSystemScript' value64='-1'/>
<enum name='iuUnTokenTable' value64='3'/>
<enum name='iuWhiteSpaceList' value64='4'/>
<enum name='iuWordSelectTable' value64='0'/>
<enum name='iuWordWrapTable' value64='1'/>
<enum name='k16BitCardErr' value64='-9084'/>
<enum name='k32BitHeap' value64='1'/>
<enum name='k68kInterruptLevelMask' value64='7'/>
<enum name='kAFPExtendedFlagsAlternateAddressMask' value64='1'/>
<enum name='kAFPTagLengthDDP' value64='6'/>
<enum name='kAFPTagLengthIP' value64='6'/>
<enum name='kAFPTagLengthIPPort' value64='8'/>
<enum name='kAFPTagTypeDDP' value64='3'/>
<enum name='kAFPTagTypeDNS' value64='4'/>
<enum name='kAFPTagTypeIP' value64='1'/>
<enum name='kAFPTagTypeIPPort' value64='2'/>
<enum name='kALMDeferSwitchErr' value64='-30043'/>
<enum name='kALMDuplicateModuleErr' value64='-30045'/>
<enum name='kALMGroupNotFoundErr' value64='-30048'/>
<enum name='kALMInstallationErr' value64='-30044'/>
<enum name='kALMInternalErr' value64='-30049'/>
<enum name='kALMLocationNotFoundErr' value64='-30048'/>
<enum name='kALMLocationsFolderType' value64='1717660780'/>
<enum name='kALMModuleCommunicationErr' value64='-30046'/>
<enum name='kALMModulesFolderType' value64='2002873451'/>
<enum name='kALMNoSuchModuleErr' value64='-30047'/>
<enum name='kALMPreferencesFolderType' value64='1953655152'/>
<enum name='kALMRebootFlagsLevelErr' value64='-30042'/>
<enum name='kARMMountVol' value64='1'/>
<enum name='kARMMultVols' value64='8'/>
<enum name='kARMNoUI' value64='2'/>
<enum name='kARMSearch' value64='256'/>
<enum name='kARMSearchMore' value64='512'/>
<enum name='kARMSearchRelFirst' value64='1024'/>
<enum name='kARMTryFileIDFirst' value64='2048'/>
<enum name='kATSUBadStreamErr' value64='-8902'/>
<enum name='kATSUBusyObjectErr' value64='-8809'/>
<enum name='kATSUCoordinateOverflowErr' value64='-8807'/>
<enum name='kATSUFontsMatched' value64='-8793'/>
<enum name='kATSUFontsNotMatched' value64='-8794'/>
<enum name='kATSUInvalidAttributeSizeErr' value64='-8798'/>
<enum name='kATSUInvalidAttributeTagErr' value64='-8799'/>
<enum name='kATSUInvalidAttributeValueErr' value64='-8797'/>
<enum name='kATSUInvalidCacheErr' value64='-8800'/>
<enum name='kATSUInvalidCallInsideCallbackErr' value64='-8904'/>
<enum name='kATSUInvalidFontErr' value64='-8796'/>
<enum name='kATSUInvalidFontFallbacksErr' value64='-8900'/>
<enum name='kATSUInvalidStyleErr' value64='-8791'/>
<enum name='kATSUInvalidTextLayoutErr' value64='-8790'/>
<enum name='kATSUInvalidTextRangeErr' value64='-8792'/>
<enum name='kATSULastErr' value64='-8959'/>
<enum name='kATSULineBreakInWord' value64='-8808'/>
<enum name='kATSULowLevelErr' value64='-8804'/>
<enum name='kATSUNoCorrespondingFontErr' value64='-8795'/>
<enum name='kATSUNoFontCmapAvailableErr' value64='-8805'/>
<enum name='kATSUNoFontNameErr' value64='-8905'/>
<enum name='kATSUNoFontScalerAvailableErr' value64='-8806'/>
<enum name='kATSUNoStyleRunsAssignedErr' value64='-8802'/>
<enum name='kATSUNotSetErr' value64='-8801'/>
<enum name='kATSUOutputBufferTooSmallErr' value64='-8903'/>
<enum name='kATSUQuickDrawTextErr' value64='-8803'/>
<enum name='kATSUUnsupportedStreamFormatErr' value64='-8901'/>
<enum name='kAVLInOrder' value64='1'/>
<enum name='kAVLIsLeaf' value64='3'/>
<enum name='kAVLIsLeftBranch' value64='1'/>
<enum name='kAVLIsRightBranch' value64='2'/>
<enum name='kAVLIsTree' value64='0'/>
<enum name='kAVLNullNode' value64='4'/>
<enum name='kAVLPostOrder' value64='2'/>
<enum name='kAVLPreOrder' value64='0'/>
<enum name='kAccessException' value64='3'/>
<enum name='kAlreadySavedStateErr' value64='-9105'/>
<enum name='kAnyComponentFlagsMask' value64='0'/>
<enum name='kAnyComponentManufacturer' value64='0'/>
<enum name='kAnyComponentSubType' value64='0'/>
<enum name='kAnyComponentType' value64='0'/>
<enum name='kAppPackageAliasType' value64='1717661793'/>
<enum name='kAppearanceFolderType' value64='1634758770'/>
<enum name='kAppleExtrasFolderType' value64='1634040004'/>
<enum name='kAppleManufacturer' value64='1634758764'/>
<enum name='kAppleMenuFolderAliasType' value64='1717657965'/>
<enum name='kAppleMenuFolderType' value64='1634561653'/>
<enum name='kAppleShareAuthenticationFolderType' value64='1635087464'/>
<enum name='kAppleShareSupportFolderType' value64='1936220530'/>
<enum name='kAppleshareAutomountServerAliasesFolderType' value64='1936881348'/>
<enum name='kApplicationAliasType' value64='1633972848'/>
<enum name='kApplicationCPAliasType' value64='1633903728'/>
<enum name='kApplicationDAAliasType' value64='1633969264'/>
<enum name='kApplicationSupportFolderType' value64='1634956656'/>
<enum name='kApplicationThreadID' value64='2'/>
<enum name='kApplicationsFolderType' value64='1634758771'/>
<enum name='kAssistantsFolderType' value64='1634956484'/>
<enum name='kAsyncEjectComplete' value64='6'/>
<enum name='kAsyncEjectInProgress' value64='5'/>
<enum name='kAsyncMountComplete' value64='2'/>
<enum name='kAsyncMountInProgress' value64='1'/>
<enum name='kAsyncUnmountComplete' value64='4'/>
<enum name='kAsyncUnmountInProgress' value64='3'/>
<enum name='kAttemptDupCardEntryErr' value64='-9106'/>
<enum name='kAudioAlertSoundsFolderType' value64='1634497140'/>
<enum name='kAudioComponentsFolderType' value64='1633906032'/>
<enum name='kAudioDigidesignFolderType' value64='1633970535'/>
<enum name='kAudioPlugInsFolderType' value64='1634757735'/>
<enum name='kAudioPresetsFolderType' value64='1634759540'/>
<enum name='kAudioSoundBanksFolderType' value64='1650552427'/>
<enum name='kAudioSoundsFolderType' value64='1634954852'/>
<enum name='kAudioSupportFolderType' value64='1633970543'/>
<enum name='kAudioVSTFolderType' value64='1635152756'/>
<enum name='kAutomatorWorkflowsFolderType' value64='1718382455'/>
<enum name='kAutosaveInformationFolderType' value64='1634951542'/>
<enum name='kBLibTag2' value64='1112303970'/>
<enum name='kBadAdapterErr' value64='-9050'/>
<enum name='kBadArgLengthErr' value64='-9063'/>
<enum name='kBadArgsErr' value64='-9064'/>
<enum name='kBadAttributeErr' value64='-9051'/>
<enum name='kBadBaseErr' value64='-9052'/>
<enum name='kBadCISErr' value64='-9066'/>
<enum name='kBadCustomIFIDErr' value64='-9093'/>
<enum name='kBadDeviceErr' value64='-9083'/>
<enum name='kBadEDCErr' value64='-9053'/>
<enum name='kBadHandleErr' value64='-9065'/>
<enum name='kBadIRQErr' value64='-9054'/>
<enum name='kBadLinkErr' value64='-9082'/>
<enum name='kBadOffsetErr' value64='-9055'/>
<enum name='kBadPageErr' value64='-9056'/>
<enum name='kBadSizeErr' value64='-9057'/>
<enum name='kBadSocketErr' value64='-9058'/>
<enum name='kBadSpeedErr' value64='-9067'/>
<enum name='kBadTupleDataErr' value64='-9092'/>
<enum name='kBadTypeErr' value64='-9059'/>
<enum name='kBadVccErr' value64='-9060'/>
<enum name='kBadVppErr' value64='-9061'/>
<enum name='kBadWindowErr' value64='-9062'/>
<enum name='kBig5_BasicVariant' value64='0'/>
<enum name='kBig5_DOSVariant' value64='3'/>
<enum name='kBig5_ETenVariant' value64='2'/>
<enum name='kBig5_StandardVariant' value64='1'/>
<enum name='kBlessedBusErrorBait' value64='1760651505'/>
<enum name='kBlessedFolder' value64='1651274598'/>
<enum name='kBootTimeStartupItemsFolderType' value64='1701671034'/>
<enum name='kBridgeSoftwareRunningCantSleep' value64='-13038'/>
<enum name='kBusyErr' value64='-9074'/>
<enum name='kCCRegisterCBit' value64='16'/>
<enum name='kCCRegisterNBit' value64='19'/>
<enum name='kCCRegisterVBit' value64='17'/>
<enum name='kCCRegisterXBit' value64='20'/>
<enum name='kCCRegisterZBit' value64='18'/>
<enum name='kCFM68kRTA' value64='16'/>
<enum name='kCSAcceptAllComponentsMode' value64='0'/>
<enum name='kCSAcceptThreadSafeComponentsOnlyMode' value64='1'/>
<enum name='kCSDiskSpaceRecoveryOptionNoUI' value64='1'/>
<enum name='kCStackBased' value64='1'/>
<enum name='kCachedDataFolderType' value64='1667326824'/>
<enum name='kCallingConventionMask' value64='15'/>
<enum name='kCallingConventionPhase' value64='0'/>
<enum name='kCallingConventionWidth' value64='4'/>
<enum name='kCantConfigureCardErr' value64='-9087'/>
<enum name='kCantReportProcessorTemperatureErr' value64='-13013'/>
<enum name='kCarbonLibraryFolderType' value64='1667330658'/>
<enum name='kCardBusCardErr' value64='-9085'/>
<enum name='kCardPowerOffErr' value64='-9107'/>
<enum name='kChewableItemsFolderType' value64='1718382196'/>
<enum name='kClassicDesktopFolderType' value64='1935962987'/>
<enum name='kClassicDomain' value64='-32762'/>
<enum name='kClassicPreferencesFolderType' value64='1668313702'/>
<enum name='kClientRequestDenied' value64='-9102'/>
<enum name='kClippingCreator' value64='1685217639'/>
<enum name='kClippingPictureType' value64='1668051056'/>
<enum name='kClippingSoundType' value64='1668051059'/>
<enum name='kClippingTextType' value64='1668051060'/>
<enum name='kClippingUnknownType' value64='1668051061'/>
<enum name='kCollateAttributesNotFoundErr' value64='-29500'/>
<enum name='kCollateBufferTooSmall' value64='-29506'/>
<enum name='kCollateInvalidChar' value64='-29505'/>
<enum name='kCollateInvalidCollationRef' value64='-29507'/>
<enum name='kCollateInvalidOptions' value64='-29501'/>
<enum name='kCollateMissingUnicodeTableErr' value64='-29502'/>
<enum name='kCollatePatternNotFoundErr' value64='-29504'/>
<enum name='kCollateUnicodeConvertFailedErr' value64='-29503'/>
<enum name='kCollectionAllAttributes' value64='-1'/>
<enum name='kCollectionDefaultAttributes' value64='1073741824'/>
<enum name='kCollectionDontWantAttributes' value64='0'/>
<enum name='kCollectionDontWantData' value64='0'/>
<enum name='kCollectionDontWantId' value64='0'/>
<enum name='kCollectionDontWantIndex' value64='0'/>
<enum name='kCollectionDontWantSize' value64='0'/>
<enum name='kCollectionDontWantTag' value64='0'/>
<enum name='kCollectionLockBit' value64='31'/>
<enum name='kCollectionLockMask' value64='2147483648'/>
<enum name='kCollectionNoAttributes' value64='0'/>
<enum name='kCollectionPersistenceBit' value64='30'/>
<enum name='kCollectionPersistenceMask' value64='1073741824'/>
<enum name='kCollectionReserved0Bit' value64='16'/>
<enum name='kCollectionReserved0Mask' value64='65536'/>
<enum name='kCollectionReserved10Bit' value64='26'/>
<enum name='kCollectionReserved10Mask' value64='67108864'/>
<enum name='kCollectionReserved11Bit' value64='27'/>
<enum name='kCollectionReserved11Mask' value64='134217728'/>
<enum name='kCollectionReserved12Bit' value64='28'/>
<enum name='kCollectionReserved12Mask' value64='268435456'/>
<enum name='kCollectionReserved13Bit' value64='29'/>
<enum name='kCollectionReserved13Mask' value64='536870912'/>
<enum name='kCollectionReserved1Bit' value64='17'/>
<enum name='kCollectionReserved1Mask' value64='131072'/>
<enum name='kCollectionReserved2Bit' value64='18'/>
<enum name='kCollectionReserved2Mask' value64='262144'/>
<enum name='kCollectionReserved3Bit' value64='19'/>
<enum name='kCollectionReserved3Mask' value64='524288'/>
<enum name='kCollectionReserved4Bit' value64='20'/>
<enum name='kCollectionReserved4Mask' value64='1048576'/>
<enum name='kCollectionReserved5Bit' value64='21'/>
<enum name='kCollectionReserved5Mask' value64='2097152'/>
<enum name='kCollectionReserved6Bit' value64='22'/>
<enum name='kCollectionReserved6Mask' value64='4194304'/>
<enum name='kCollectionReserved7Bit' value64='23'/>
<enum name='kCollectionReserved7Mask' value64='8388608'/>
<enum name='kCollectionReserved8Bit' value64='24'/>
<enum name='kCollectionReserved8Mask' value64='16777216'/>
<enum name='kCollectionReserved9Bit' value64='25'/>
<enum name='kCollectionReserved9Mask' value64='33554432'/>
<enum name='kCollectionUser0Bit' value64='0'/>
<enum name='kCollectionUser0Mask' value64='1'/>
<enum name='kCollectionUser10Bit' value64='10'/>
<enum name='kCollectionUser10Mask' value64='1024'/>
<enum name='kCollectionUser11Bit' value64='11'/>
<enum name='kCollectionUser11Mask' value64='2048'/>
<enum name='kCollectionUser12Bit' value64='12'/>
<enum name='kCollectionUser12Mask' value64='4096'/>
<enum name='kCollectionUser13Bit' value64='13'/>
<enum name='kCollectionUser13Mask' value64='8192'/>
<enum name='kCollectionUser14Bit' value64='14'/>
<enum name='kCollectionUser14Mask' value64='16384'/>
<enum name='kCollectionUser15Bit' value64='15'/>
<enum name='kCollectionUser15Mask' value64='32768'/>
<enum name='kCollectionUser1Bit' value64='1'/>
<enum name='kCollectionUser1Mask' value64='2'/>
<enum name='kCollectionUser2Bit' value64='2'/>
<enum name='kCollectionUser2Mask' value64='4'/>
<enum name='kCollectionUser3Bit' value64='3'/>
<enum name='kCollectionUser3Mask' value64='8'/>
<enum name='kCollectionUser4Bit' value64='4'/>
<enum name='kCollectionUser4Mask' value64='16'/>
<enum name='kCollectionUser5Bit' value64='5'/>
<enum name='kCollectionUser5Mask' value64='32'/>
<enum name='kCollectionUser6Bit' value64='6'/>
<enum name='kCollectionUser6Mask' value64='64'/>
<enum name='kCollectionUser7Bit' value64='7'/>
<enum name='kCollectionUser7Mask' value64='128'/>
<enum name='kCollectionUser8Bit' value64='8'/>
<enum name='kCollectionUser8Mask' value64='256'/>
<enum name='kCollectionUser9Bit' value64='9'/>
<enum name='kCollectionUser9Mask' value64='512'/>
<enum name='kCollectionUserAttributes' value64='65535'/>
<enum name='kColor' value64='14'/>
<enum name='kColorPickersFolderType' value64='1668311922'/>
<enum name='kColorSyncCMMFolderType' value64='1667460461'/>
<enum name='kColorSyncFolderType' value64='1937337955'/>
<enum name='kColorSyncProfilesFolderType' value64='1886547814'/>
<enum name='kColorSyncScriptingFolderType' value64='1668506482'/>
<enum name='kComponentAliasResourceType' value64='1952999265'/>
<enum name='kComponentCanDoSelect' value64='-3'/>
<enum name='kComponentCloseSelect' value64='-2'/>
<enum name='kComponentDebugOption' value64='0'/>
<enum name='kComponentExecuteWiredActionSelect' value64='-9'/>
<enum name='kComponentGetMPWorkFunctionSelect' value64='-8'/>
<enum name='kComponentGetPublicResourceSelect' value64='-10'/>
<enum name='kComponentOpenSelect' value64='-1'/>
<enum name='kComponentRegisterSelect' value64='-5'/>
<enum name='kComponentResourceType' value64='1953001063'/>
<enum name='kComponentTargetSelect' value64='-6'/>
<enum name='kComponentUnregisterSelect' value64='-7'/>
<enum name='kComponentVersionSelect' value64='-4'/>
<enum name='kComponentsFolderType' value64='1668116580'/>
<enum name='kCompositionsFolderType' value64='1668116595'/>
<enum name='kConfigurationLockedErr' value64='-9076'/>
<enum name='kContainerAliasType' value64='1685221232'/>
<enum name='kContainerCDROMAliasType' value64='1667523698'/>
<enum name='kContainerFloppyAliasType' value64='1718382713'/>
<enum name='kContainerFolderAliasType' value64='1717858928'/>
<enum name='kContainerHardDiskAliasType' value64='1751413611'/>
<enum name='kContainerServerAliasType' value64='1936881266'/>
<enum name='kContainerTrashAliasType' value64='1953657704'/>
<enum name='kContextualMenuItemsFolderType' value64='1668116085'/>
<enum name='kControlPanelDisabledFolderType' value64='1668575812'/>
<enum name='kControlPanelFolderAliasType' value64='1717658484'/>
<enum name='kControlPanelFolderType' value64='1668575852'/>
<enum name='kControlStripModulesFolderType' value64='1935959414'/>
<enum name='kCooperativeThread' value64='1'/>
<enum name='kCoreEndianAppleEventManagerDomain' value64='1634039412'/>
<enum name='kCoreEndianResourceManagerDomain' value64='1920168547'/>
<enum name='kCoreServicesFolderType' value64='1668510326'/>
<enum name='kCreateFolder' value64='1'/>
<enum name='kCreateFolderAtBoot' value64='2'/>
<enum name='kCreateFolderAtBootBit' value64='1'/>
<enum name='kCreateIfNeeded' value64='4'/>
<enum name='kCurrentMixedModeStateRecord' value64='1'/>
<enum name='kCurrentThreadID' value64='1'/>
<enum name='kCurrentUserFolderLocation' value64='1668641638'/>
<enum name='kCurrentUserFolderType' value64='1668641650'/>
<enum name='kCurrentUserRemoteFolderLocation' value64='1920299878'/>
<enum name='kCurrentUserRemoteFolderType' value64='1920299890'/>
<enum name='kCustomBadgeResourceID' value64='-16455'/>
<enum name='kCustomBadgeResourceType' value64='1650549863'/>
<enum name='kCustomBadgeResourceVersion' value64='0'/>
<enum name='kCustomIconResource' value64='-16455'/>
<enum name='kD0DispatchedCStackBased' value64='9'/>
<enum name='kD0DispatchedPascalStackBased' value64='8'/>
<enum name='kD1DispatchedPascalStackBased' value64='12'/>
<enum name='kDMCantBlock' value64='-6224'/>
<enum name='kDMDisplayAlreadyInstalledErr' value64='-6230'/>
<enum name='kDMDisplayNotFoundErr' value64='-6229'/>
<enum name='kDMDriverNotDisplayMgrAwareErr' value64='-6228'/>
<enum name='kDMFoundErr' value64='-6232'/>
<enum name='kDMGenErr' value64='-6220'/>
<enum name='kDMMainDisplayCannotMoveErr' value64='-6231'/>
<enum name='kDMMirroringBlocked' value64='-6223'/>
<enum name='kDMMirroringNotOn' value64='-6225'/>
<enum name='kDMMirroringOnAlready' value64='-6221'/>
<enum name='kDMNoDeviceTableclothErr' value64='-6231'/>
<enum name='kDMNotFoundErr' value64='-6229'/>
<enum name='kDMSWNotInitializedErr' value64='-6227'/>
<enum name='kDMWrongNumberOfDisplays' value64='-6222'/>
<enum name='kDOSJapanesePalmVariant' value64='1'/>
<enum name='kDOSJapaneseStandardVariant' value64='0'/>
<enum name='kDSpConfirmSwitchWarning' value64='-30448'/>
<enum name='kDSpContextAlreadyReservedErr' value64='-30444'/>
<enum name='kDSpContextNotFoundErr' value64='-30446'/>
<enum name='kDSpContextNotReservedErr' value64='-30445'/>
<enum name='kDSpFrameRateNotReadyErr' value64='-30447'/>
<enum name='kDSpInternalErr' value64='-30449'/>
<enum name='kDSpInvalidAttributesErr' value64='-30443'/>
<enum name='kDSpInvalidContextErr' value64='-30442'/>
<enum name='kDSpNotInitializedErr' value64='-30440'/>
<enum name='kDSpStereoContextErr' value64='-30450'/>
<enum name='kDSpSystemSWTooOldErr' value64='-30441'/>
<enum name='kDTPAbortJobErr' value64='128'/>
<enum name='kDTPHoldJobErr' value64='-4200'/>
<enum name='kDTPStopQueueErr' value64='-4201'/>
<enum name='kDTPThirdPartySupported' value64='4'/>
<enum name='kDTPTryAgainErr' value64='-4202'/>
<enum name='kDataAlignmentException' value64='17'/>
<enum name='kDataBreakpointException' value64='11'/>
<enum name='kDesktopFolderType' value64='1684370283'/>
<enum name='kDesktopPicturesFolderType' value64='1685352644'/>
<enum name='kDesktopPrinterAliasType' value64='1685352545'/>
<enum name='kDeveloperApplicationsFolderType' value64='1684107376'/>
<enum name='kDeveloperDocsFolderType' value64='1684303715'/>
<enum name='kDeveloperFolderType' value64='1684371046'/>
<enum name='kDeveloperHelpFolderType' value64='1684371048'/>
<enum name='kDictionariesFolderType' value64='1684628340'/>
<enum name='kDirectoryServicesFolderType' value64='1685287542'/>
<enum name='kDirectoryServicesPlugInsFolderType' value64='1685089383'/>
<enum name='kDispatchedParameterPhase' value64='8'/>
<enum name='kDispatchedSelectorSizePhase' value64='6'/>
<enum name='kDispatchedSelectorSizeWidth' value64='2'/>
<enum name='kDisplayExtensionsFolderType' value64='1685287020'/>
<enum name='kDocumentationFolderType' value64='1768842863'/>
<enum name='kDocumentsFolderType' value64='1685021555'/>
<enum name='kDomainLibraryFolderType' value64='1684826466'/>
<enum name='kDomainTopLevelFolderType' value64='1685352304'/>
<enum name='kDontCreateFolder' value64='0'/>
<enum name='kDontPassSelector' value64='8'/>
<enum name='kDownloadsFolderType' value64='1685026670'/>
<enum name='kDropBoxFolderType' value64='1685221232'/>
<enum name='kDropFolderAliasType' value64='1717658738'/>
<enum name='kDurationForever' value64='2147483647'/>
<enum name='kDurationImmediate' value64='0'/>
<enum name='kDurationMicrosecond' value64='-1'/>
<enum name='kDurationMillisecond' value64='1'/>
<enum name='kEACCESErr' value64='-3212'/>
<enum name='kEADDRINUSEErr' value64='-3247'/>
<enum name='kEADDRNOTAVAILErr' value64='-3248'/>
<enum name='kEAGAINErr' value64='-3210'/>
<enum name='kEALREADYErr' value64='-3236'/>
<enum name='kEBADFErr' value64='-3208'/>
<enum name='kEBADMSGErr' value64='-3272'/>
<enum name='kEBUSYErr' value64='-3215'/>
<enum name='kECANCELErr' value64='-3273'/>
<enum name='kECONNABORTEDErr' value64='-3252'/>
<enum name='kECONNREFUSEDErr' value64='-3260'/>
<enum name='kECONNRESETErr' value64='-3253'/>
<enum name='kEDEADLKErr' value64='-3234'/>
<enum name='kEDESTADDRREQErr' value64='-3238'/>
<enum name='kEEXISTErr' value64='-3216'/>
<enum name='kEFAULTErr' value64='-3213'/>
<enum name='kEHOSTDOWNErr' value64='-3263'/>
<enum name='kEHOSTUNREACHErr' value64='-3264'/>
<enum name='kEINPROGRESSErr' value64='-3276'/>
<enum name='kEINTRErr' value64='-3203'/>
<enum name='kEINVALErr' value64='-3221'/>
<enum name='kEIOErr' value64='-3204'/>
<enum name='kEISCONNErr' value64='-3255'/>
<enum name='kEMSGSIZEErr' value64='-3239'/>
<enum name='kENETDOWNErr' value64='-3249'/>
<enum name='kENETRESETErr' value64='-3251'/>
<enum name='kENETUNREACHErr' value64='-3250'/>
<enum name='kENOBUFSErr' value64='-3254'/>
<enum name='kENODATAErr' value64='-3275'/>
<enum name='kENODEVErr' value64='-3218'/>
<enum name='kENOENTErr' value64='-3201'/>
<enum name='kENOMEMErr' value64='-3211'/>
<enum name='kENOMSGErr' value64='-3278'/>
<enum name='kENOPROTOOPTErr' value64='-3241'/>
<enum name='kENORSRCErr' value64='-3202'/>
<enum name='kENOSRErr' value64='-3271'/>
<enum name='kENOSTRErr' value64='-3274'/>
<enum name='kENOTCONNErr' value64='-3256'/>
<enum name='kENOTSOCKErr' value64='-3237'/>
<enum name='kENOTTYErr' value64='-3224'/>
<enum name='kENXIOErr' value64='-3205'/>
<enum name='kEOPNOTSUPPErr' value64='-3244'/>
<enum name='kEPERMErr' value64='-3200'/>
<enum name='kEPIPEErr' value64='-3231'/>
<enum name='kEPROTOErr' value64='-3269'/>
<enum name='kEPROTONOSUPPORTErr' value64='-3242'/>
<enum name='kEPROTOTYPEErr' value64='-3240'/>
<enum name='kERANGEErr' value64='-3233'/>
<enum name='kESHUTDOWNErr' value64='-3257'/>
<enum name='kESOCKTNOSUPPORTErr' value64='-3243'/>
<enum name='kESRCHErr' value64='-3277'/>
<enum name='kETIMEDOUTErr' value64='-3259'/>
<enum name='kETIMEErr' value64='-3270'/>
<enum name='kETOOMANYREFSErr' value64='-3258'/>
<enum name='kEUC_CN_BasicVariant' value64='0'/>
<enum name='kEUC_CN_DOSVariant' value64='1'/>
<enum name='kEUC_KR_BasicVariant' value64='0'/>
<enum name='kEUC_KR_DOSVariant' value64='1'/>
<enum name='kEWOULDBLOCKErr' value64='-3234'/>
<enum name='kEditorsFolderType' value64='1868850532'/>
<enum name='kEncryptPassword' value64='3'/>
<enum name='kExactMatchThread' value64='16'/>
<enum name='kExcludedMemoryException' value64='5'/>
<enum name='kExportedFolderAliasType' value64='1717658996'/>
<enum name='kExtendedFlagHasCustomBadge' value64='256'/>
<enum name='kExtendedFlagHasRoutingInfo' value64='4'/>
<enum name='kExtendedFlagObjectIsBusy' value64='128'/>
<enum name='kExtendedFlagsAreInvalid' value64='32768'/>
<enum name='kExtensionDisabledFolderType' value64='1702392900'/>
<enum name='kExtensionFolderAliasType' value64='1717659000'/>
<enum name='kExtensionFolderType' value64='1702392942'/>
<enum name='kFBCaccessCanceled' value64='-30521'/>
<enum name='kFBCaccessorStoreFailed' value64='-30515'/>
<enum name='kFBCaddDocFailed' value64='-30516'/>
<enum name='kFBCallocFailed' value64='-30502'/>
<enum name='kFBCanalysisNotAvailable' value64='-30527'/>
<enum name='kFBCbadIndexFile' value64='-30505'/>
<enum name='kFBCbadIndexFileVersion' value64='-30528'/>
<enum name='kFBCbadParam' value64='-30503'/>
<enum name='kFBCbadSearchSession' value64='-30531'/>
<enum name='kFBCcommitFailed' value64='-30509'/>
<enum name='kFBCcompactionFailed' value64='-30506'/>
<enum name='kFBCdeletionFailed' value64='-30510'/>
<enum name='kFBCfileNotIndexed' value64='-30504'/>
<enum name='kFBCflushFailed' value64='-30517'/>
<enum name='kFBCillegalSessionChange' value64='-30526'/>
<enum name='kFBCindexCreationFailed' value64='-30514'/>
<enum name='kFBCindexDiskIOFailed' value64='-30530'/>
<enum name='kFBCindexFileDestroyed' value64='-30522'/>
<enum name='kFBCindexNotAvailable' value64='-30523'/>
<enum name='kFBCindexNotFound' value64='-30518'/>
<enum name='kFBCindexingCanceled' value64='-30520'/>
<enum name='kFBCindexingFailed' value64='-30508'/>
<enum name='kFBCmergingFailed' value64='-30513'/>
<enum name='kFBCmoveFailed' value64='-30511'/>
<enum name='kFBCnoIndexesFound' value64='-30501'/>
<enum name='kFBCnoSearchSession' value64='-30519'/>
<enum name='kFBCnoSuchHit' value64='-30532'/>
<enum name='kFBCsearchFailed' value64='-30524'/>
<enum name='kFBCsomeFilesNotIndexed' value64='-30525'/>
<enum name='kFBCsummarizationCanceled' value64='-30529'/>
<enum name='kFBCtokenizationFailed' value64='-30512'/>
<enum name='kFBCvTwinExceptionErr' value64='-30500'/>
<enum name='kFBCvalidationFailed' value64='-30507'/>
<enum name='kFMFontContainerAccessErr' value64='-985'/>
<enum name='kFMFontTableAccessErr' value64='-984'/>
<enum name='kFMInvalidFontErr' value64='-982'/>
<enum name='kFMInvalidFontFamilyErr' value64='-981'/>
<enum name='kFMIterationCompleted' value64='-980'/>
<enum name='kFMIterationScopeModifiedErr' value64='-983'/>
<enum name='kFNDirectoryModifiedMessage' value64='1'/>
<enum name='kFNNoImplicitAllSubscription' value64='1'/>
<enum name='kFNNotifyInBackground' value64='2'/>
<enum name='kFNSBadFlattenedSizeErr' value64='-29587'/>
<enum name='kFNSBadProfileVersionErr' value64='-29583'/>
<enum name='kFNSBadReferenceVersionErr' value64='-29581'/>
<enum name='kFNSDuplicateReferenceErr' value64='-29584'/>
<enum name='kFNSInsufficientDataErr' value64='-29586'/>
<enum name='kFNSInvalidProfileErr' value64='-29582'/>
<enum name='kFNSInvalidReferenceErr' value64='-29580'/>
<enum name='kFNSMismatchErr' value64='-29585'/>
<enum name='kFNSNameNotFoundErr' value64='-29589'/>
<enum name='kFPUNotNeeded' value64='8'/>
<enum name='kFSAliasInfoFSInfo' value64='32'/>
<enum name='kFSAliasInfoFinderInfo' value64='4'/>
<enum name='kFSAliasInfoIDs' value64='16'/>
<enum name='kFSAliasInfoIsDirectory' value64='8'/>
<enum name='kFSAliasInfoNone' value64='0'/>
<enum name='kFSAliasInfoTargetCreateDate' value64='2'/>
<enum name='kFSAliasInfoVolumeCreateDate' value64='1'/>
<enum name='kFSAliasInfoVolumeFlags' value64='64'/>
<enum name='kFSAllocAllOrNothingMask' value64='1'/>
<enum name='kFSAllocContiguousMask' value64='2'/>
<enum name='kFSAllocDefaultFlags' value64='0'/>
<enum name='kFSAllocNoRoundUpMask' value64='4'/>
<enum name='kFSAllocReservedMask' value64='65528'/>
<enum name='kFSAllowConcurrentAsyncIOBit' value64='3'/>
<enum name='kFSAllowConcurrentAsyncIOMask' value64='8'/>
<enum name='kFSCatInfoAccessDate' value64='256'/>
<enum name='kFSCatInfoAllDates' value64='992'/>
<enum name='kFSCatInfoAttrMod' value64='128'/>
<enum name='kFSCatInfoBackupDate' value64='512'/>
<enum name='kFSCatInfoContentMod' value64='64'/>
<enum name='kFSCatInfoCreateDate' value64='32'/>
<enum name='kFSCatInfoDataSizes' value64='16384'/>
<enum name='kFSCatInfoFSFileSecurityRef' value64='4194304'/>
<enum name='kFSCatInfoFinderInfo' value64='2048'/>
<enum name='kFSCatInfoFinderXInfo' value64='4096'/>
<enum name='kFSCatInfoGettableInfo' value64='262143'/>
<enum name='kFSCatInfoNodeFlags' value64='2'/>
<enum name='kFSCatInfoNodeID' value64='16'/>
<enum name='kFSCatInfoNone' value64='0'/>
<enum name='kFSCatInfoParentDirID' value64='8'/>
<enum name='kFSCatInfoPermissions' value64='1024'/>
<enum name='kFSCatInfoReserved' value64='-262144'/>
<enum name='kFSCatInfoRsrcSizes' value64='32768'/>
<enum name='kFSCatInfoSetOwnership' value64='1048576'/>
<enum name='kFSCatInfoSettableInfo' value64='8163'/>
<enum name='kFSCatInfoSharingFlags' value64='65536'/>
<enum name='kFSCatInfoTextEncoding' value64='1'/>
<enum name='kFSCatInfoUserAccess' value64='524288'/>
<enum name='kFSCatInfoUserPrivs' value64='131072'/>
<enum name='kFSCatInfoValence' value64='8192'/>
<enum name='kFSCatInfoVolume' value64='4'/>
<enum name='kFSEjectVolumeForceEject' value64='1'/>
<enum name='kFSFileOperationDefaultOptions' value64='0'/>
<enum name='kFSFileOperationDoNotMoveAcrossVolumes' value64='4'/>
<enum name='kFSFileOperationOverwrite' value64='1'/>
<enum name='kFSFileOperationSkipPreflight' value64='8'/>
<enum name='kFSFileOperationSkipSourcePermissionErrors' value64='2'/>
<enum name='kFSForceReadBit' value64='6'/>
<enum name='kFSForceReadMask' value64='64'/>
<enum name='kFSInvalidVolumeRefNum' value64='0'/>
<enum name='kFSIterateDelete' value64='2'/>
<enum name='kFSIterateFlat' value64='0'/>
<enum name='kFSIterateReserved' value64='-4'/>
<enum name='kFSIterateSubtree' value64='1'/>
<enum name='kFSMountServerMarkDoNotDisplay' value64='1'/>
<enum name='kFSMountServerMountOnMountDir' value64='4'/>
<enum name='kFSMountServerMountWithoutNotification' value64='2'/>
<enum name='kFSMountServerSuppressConnectionUI' value64='64'/>
<enum name='kFSNewLineBit' value64='7'/>
<enum name='kFSNewLineCharMask' value64='65280'/>
<enum name='kFSNewLineMask' value64='128'/>
<enum name='kFSNoCacheBit' value64='5'/>
<enum name='kFSNoCacheMask' value64='32'/>
<enum name='kFSNodeCopyProtectBit' value64='6'/>
<enum name='kFSNodeCopyProtectMask' value64='64'/>
<enum name='kFSNodeDataOpenBit' value64='3'/>
<enum name='kFSNodeDataOpenMask' value64='8'/>
<enum name='kFSNodeForkOpenBit' value64='7'/>
<enum name='kFSNodeForkOpenMask' value64='128'/>
<enum name='kFSNodeHardLinkBit' value64='8'/>
<enum name='kFSNodeHardLinkMask' value64='256'/>
<enum name='kFSNodeInSharedBit' value64='2'/>
<enum name='kFSNodeInSharedMask' value64='4'/>
<enum name='kFSNodeIsDirectoryBit' value64='4'/>
<enum name='kFSNodeIsDirectoryMask' value64='16'/>
<enum name='kFSNodeIsMountedBit' value64='3'/>
<enum name='kFSNodeIsMountedMask' value64='8'/>
<enum name='kFSNodeIsSharePointBit' value64='5'/>
<enum name='kFSNodeIsSharePointMask' value64='32'/>
<enum name='kFSNodeLockedBit' value64='0'/>
<enum name='kFSNodeLockedMask' value64='1'/>
<enum name='kFSNodeResOpenBit' value64='2'/>
<enum name='kFSNodeResOpenMask' value64='4'/>
<enum name='kFSOperationStageComplete' value64='3'/>
<enum name='kFSOperationStagePreflighting' value64='1'/>
<enum name='kFSOperationStageRunning' value64='2'/>
<enum name='kFSOperationStageUndefined' value64='0'/>
<enum name='kFSPathMakeRefDefaultOptions' value64='0'/>
<enum name='kFSPathMakeRefDoNotFollowLeafSymlink' value64='1'/>
<enum name='kFSPleaseCacheBit' value64='4'/>
<enum name='kFSPleaseCacheMask' value64='16'/>
<enum name='kFSRdVerifyBit' value64='6'/>
<enum name='kFSRdVerifyMask' value64='64'/>
<enum name='kFSReplaceObjectDefaultOptions' value64='0'/>
<enum name='kFSReplaceObjectDoNotCheckObjectWriteAccess' value64='16'/>
<enum name='kFSReplaceObjectPreservePermissionInfo' value64='8'/>
<enum name='kFSReplaceObjectReplaceMetadata' value64='1'/>
<enum name='kFSReplaceObjectReplacePermissionInfo' value64='4'/>
<enum name='kFSReplaceObjectSaveOriginalAsABackup' value64='2'/>
<enum name='kFSUnmountVolumeForceUnmount' value64='1'/>
<enum name='kFSVolFlagDefaultVolumeBit' value64='5'/>
<enum name='kFSVolFlagDefaultVolumeMask' value64='32'/>
<enum name='kFSVolFlagFilesOpenBit' value64='6'/>
<enum name='kFSVolFlagFilesOpenMask' value64='64'/>
<enum name='kFSVolFlagHardwareLockedBit' value64='7'/>
<enum name='kFSVolFlagHardwareLockedMask' value64='128'/>
<enum name='kFSVolFlagJournalingActiveBit' value64='14'/>
<enum name='kFSVolFlagJournalingActiveMask' value64='16384'/>
<enum name='kFSVolFlagSoftwareLockedBit' value64='15'/>
<enum name='kFSVolFlagSoftwareLockedMask' value64='32768'/>
<enum name='kFSVolInfoBackupDate' value64='4'/>
<enum name='kFSVolInfoBlocks' value64='128'/>
<enum name='kFSVolInfoCheckedDate' value64='8'/>
<enum name='kFSVolInfoCreateDate' value64='1'/>
<enum name='kFSVolInfoDataClump' value64='1024'/>
<enum name='kFSVolInfoDirCount' value64='32'/>
<enum name='kFSVolInfoDriveInfo' value64='32768'/>
<enum name='kFSVolInfoFSInfo' value64='16384'/>
<enum name='kFSVolInfoFileCount' value64='16'/>
<enum name='kFSVolInfoFinderInfo' value64='4096'/>
<enum name='kFSVolInfoFlags' value64='8192'/>
<enum name='kFSVolInfoGettableInfo' value64='65535'/>
<enum name='kFSVolInfoModDate' value64='2'/>
<enum name='kFSVolInfoNextAlloc' value64='256'/>
<enum name='kFSVolInfoNextID' value64='2048'/>
<enum name='kFSVolInfoNone' value64='0'/>
<enum name='kFSVolInfoRsrcClump' value64='512'/>
<enum name='kFSVolInfoSettableInfo' value64='12292'/>
<enum name='kFSVolInfoSizes' value64='64'/>
<enum name='kFavoritesFolderType' value64='1717663347'/>
<enum name='kFetchReference' value64='2'/>
<enum name='kFileSystemSupportFolderType' value64='1718843763'/>
<enum name='kFindByContentFolderType' value64='1717724006'/>
<enum name='kFindByContentIndexesFolderType' value64='1717724024'/>
<enum name='kFindByContentPluginsFolderType' value64='1717724016'/>
<enum name='kFindSupportFolderType' value64='1718510707'/>
<enum name='kFirstMagicBusyFiletype' value64='1652193568'/>
<enum name='kFloatingPointException' value64='13'/>
<enum name='kFolderActionsFolderType' value64='1717662566'/>
<enum name='kFolderCreatedAdminPrivs' value64='16'/>
<enum name='kFolderCreatedAdminPrivsBit' value64='4'/>
<enum name='kFolderCreatedInvisible' value64='4'/>
<enum name='kFolderCreatedInvisibleBit' value64='2'/>
<enum name='kFolderCreatedNameLocked' value64='8'/>
<enum name='kFolderCreatedNameLockedBit' value64='3'/>
<enum name='kFolderInLocalOrRemoteUserFolder' value64='160'/>
<enum name='kFolderInRemoteUserFolderIfAvailable' value64='128'/>
<enum name='kFolderInRemoteUserFolderIfAvailableBit' value64='7'/>
<enum name='kFolderInUserFolder' value64='32'/>
<enum name='kFolderInUserFolderBit' value64='5'/>
<enum name='kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledBit' value64='10'/>
<enum name='kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledMask' value64='1024'/>
<enum name='kFolderManagerLastDomain' value64='-32760'/>
<enum name='kFolderManagerNewlyCreatedFolderIsLocalizedBit' value64='12'/>
<enum name='kFolderManagerNewlyCreatedFolderShouldHaveDotLocalizedCreatedWithinMask' value64='4096'/>
<enum name='kFolderManagerNotCreatedOnRemoteVolumesBit' value64='11'/>
<enum name='kFolderManagerNotCreatedOnRemoteVolumesMask' value64='2048'/>
<enum name='kFolderMustStayOnSameVolume' value64='512'/>
<enum name='kFolderMustStayOnSameVolumeBit' value64='9'/>
<enum name='kFolderNeverMatchedInIdentifyFolder' value64='256'/>
<enum name='kFolderNeverMatchedInIdentifyFolderBit' value64='8'/>
<enum name='kFolderTrackedByAlias' value64='64'/>
<enum name='kFolderTrackedByAliasBit' value64='6'/>
<enum name='kFontCollectionsFolderType' value64='1718510444'/>
<enum name='kFontsFolderType' value64='1718578804'/>
<enum name='kForkInfoFlagsFileLockedBit' value64='5'/>
<enum name='kForkInfoFlagsFileLockedMask' value64='32'/>
<enum name='kForkInfoFlagsLargeFileBit' value64='3'/>
<enum name='kForkInfoFlagsLargeFileMask' value64='8'/>
<enum name='kForkInfoFlagsModifiedBit' value64='7'/>
<enum name='kForkInfoFlagsModifiedMask' value64='128'/>
<enum name='kForkInfoFlagsOwnClumpBit' value64='6'/>
<enum name='kForkInfoFlagsOwnClumpMask' value64='64'/>
<enum name='kForkInfoFlagsResourceBit' value64='1'/>
<enum name='kForkInfoFlagsResourceMask' value64='2'/>
<enum name='kForkInfoFlagsSharedWriteBit' value64='4'/>
<enum name='kForkInfoFlagsSharedWriteMask' value64='16'/>
<enum name='kForkInfoFlagsWriteBit' value64='0'/>
<enum name='kForkInfoFlagsWriteLockedBit' value64='2'/>
<enum name='kForkInfoFlagsWriteLockedMask' value64='4'/>
<enum name='kForkInfoFlagsWriteMask' value64='1'/>
<enum name='kFourByteCode' value64='3'/>
<enum name='kFragmentIsPrepared' value64='0'/>
<enum name='kFragmentNeedsPreparing' value64='2'/>
<enum name='kFrameworksFolderType' value64='1718772077'/>
<enum name='kGenEditorsFolderType' value64='3294979177'/>
<enum name='kGeneralFailureErr' value64='-9070'/>
<enum name='kGetDebugOption' value64='1'/>
<enum name='kGroupID2Name' value64='2'/>
<enum name='kGroupName2ID' value64='4'/>
<enum name='kHIDBadLogPhysValuesErr' value64='-13942'/>
<enum name='kHIDBadLogicalMaximumErr' value64='-13933'/>
<enum name='kHIDBadLogicalMinimumErr' value64='-13934'/>
<enum name='kHIDBadParameterErr' value64='-13938'/>
<enum name='kHIDBaseError' value64='-13950'/>
<enum name='kHIDBufferTooSmallErr' value64='-13948'/>
<enum name='kHIDDeviceNotReady' value64='-13910'/>
<enum name='kHIDEndOfDescriptorErr' value64='-13936'/>
<enum name='kHIDIncompatibleReportErr' value64='-13943'/>
<enum name='kHIDInvalidPreparsedDataErr' value64='-13944'/>
<enum name='kHIDInvalidRangePageErr' value64='-13923'/>
<enum name='kHIDInvalidReportLengthErr' value64='-13940'/>
<enum name='kHIDInvalidReportTypeErr' value64='-13941'/>
<enum name='kHIDInvertedLogicalRangeErr' value64='-13932'/>
<enum name='kHIDInvertedPhysicalRangeErr' value64='-13931'/>
<enum name='kHIDInvertedUsageRangeErr' value64='-13929'/>
<enum name='kHIDNotEnoughMemoryErr' value64='-13937'/>
<enum name='kHIDNotValueArrayErr' value64='-13945'/>
<enum name='kHIDNullPointerErr' value64='-13939'/>
<enum name='kHIDNullStateErr' value64='-13949'/>
<enum name='kHIDReportCountZeroErr' value64='-13925'/>
<enum name='kHIDReportIDZeroErr' value64='-13924'/>
<enum name='kHIDReportSizeZeroErr' value64='-13926'/>
<enum name='kHIDSuccess' value64='0'/>
<enum name='kHIDUnmatchedDesignatorRangeErr' value64='-13927'/>
<enum name='kHIDUnmatchedStringRangeErr' value64='-13928'/>
<enum name='kHIDUnmatchedUsageRangeErr' value64='-13930'/>
<enum name='kHIDUsageNotFoundErr' value64='-13946'/>
<enum name='kHIDUsagePageZeroErr' value64='-13935'/>
<enum name='kHIDValueOutOfRangeErr' value64='-13947'/>
<enum name='kHIDVersionIncompatibleErr' value64='-13909'/>
<enum name='kHandleIsResourceBit' value64='5'/>
<enum name='kHandleIsResourceMask' value64='32'/>
<enum name='kHandleLockedBit' value64='7'/>
<enum name='kHandleLockedMask' value64='128'/>
<enum name='kHandlePurgeableBit' value64='6'/>
<enum name='kHandlePurgeableMask' value64='64'/>
<enum name='kHasBeenInited' value64='256'/>
<enum name='kHasBundle' value64='8192'/>
<enum name='kHasCustomIcon' value64='1024'/>
<enum name='kHasNoINITs' value64='128'/>
<enum name='kHebrewFigureSpaceVariant' value64='1'/>
<enum name='kHebrewStandardVariant' value64='0'/>
<enum name='kHelpFolderType' value64='3295177840'/>
<enum name='kISOLatin1MusicCDVariant' value64='1'/>
<enum name='kISOLatin1StandardVariant' value64='0'/>
<enum name='kISOLatinArabicExplicitOrderVariant' value64='2'/>
<enum name='kISOLatinArabicImplicitOrderVariant' value64='0'/>
<enum name='kISOLatinArabicVisualOrderVariant' value64='1'/>
<enum name='kISOLatinHebrewExplicitOrderVariant' value64='2'/>
<enum name='kISOLatinHebrewImplicitOrderVariant' value64='0'/>
<enum name='kISOLatinHebrewVisualOrderVariant' value64='1'/>
<enum name='kISSDownloadsFolderType' value64='1769173860'/>
<enum name='kISpBufferToSmallErr' value64='-30422'/>
<enum name='kISpDeviceActiveErr' value64='-30428'/>
<enum name='kISpDeviceInactiveErr' value64='-30426'/>
<enum name='kISpElementInListErr' value64='-30423'/>
<enum name='kISpElementNotInListErr' value64='-30424'/>
<enum name='kISpInternalErr' value64='-30420'/>
<enum name='kISpListBusyErr' value64='-30429'/>
<enum name='kISpSystemActiveErr' value64='-30427'/>
<enum name='kISpSystemInactiveErr' value64='-30425'/>
<enum name='kISpSystemListErr' value64='-30421'/>
<enum name='kIllegalClockValueErr' value64='-8852'/>
<enum name='kIllegalInstructionException' value64='1'/>
<enum name='kInDeferredTaskMask' value64='32'/>
<enum name='kInNestedInterruptMask' value64='128'/>
<enum name='kInSecondaryIntHandlerMask' value64='64'/>
<enum name='kInUseErr' value64='-9077'/>
<enum name='kInVBLTaskMask' value64='16'/>
<enum name='kIndexFilesFolderType' value64='1768842360'/>
<enum name='kInputManagersFolderType' value64='1768845428'/>
<enum name='kInputMethodsFolderType' value64='1768845414'/>
<enum name='kInstallerLogsFolderType' value64='1768712038'/>
<enum name='kInstallerReceiptsFolderType' value64='1919119476'/>
<enum name='kInstructionBreakpointException' value64='10'/>
<enum name='kIntegerException' value64='12'/>
<enum name='kInternetFolderType' value64='1768846532'/>
<enum name='kInternetLocationAFP' value64='1768710502'/>
<enum name='kInternetLocationAppleTalk' value64='1768710516'/>
<enum name='kInternetLocationCreator' value64='1685217639'/>
<enum name='kInternetLocationFTP' value64='1768711796'/>
<enum name='kInternetLocationFile' value64='1768711785'/>
<enum name='kInternetLocationGeneric' value64='1768712037'/>
<enum name='kInternetLocationHTTP' value64='1768712308'/>
<enum name='kInternetLocationMail' value64='1768713569'/>
<enum name='kInternetLocationNNTP' value64='1768713847'/>
<enum name='kInternetLocationNSL' value64='1768713843'/>
<enum name='kInternetPlugInFolderType' value64='3295569268'/>
<enum name='kInternetSearchSitesFolderType' value64='1769173862'/>
<enum name='kInternetSitesFolderType' value64='1936290917'/>
<enum name='kInvalidCSClientErr' value64='-9091'/>
<enum name='kInvalidDeviceNumber' value64='-9089'/>
<enum name='kInvalidRegEntryErr' value64='-9081'/>
<enum name='kIsAlias' value64='32768'/>
<enum name='kIsInvisible' value64='16384'/>
<enum name='kIsOnDesk' value64='1'/>
<enum name='kIsShared' value64='64'/>
<enum name='kIsStationery' value64='2048'/>
<enum name='kJapaneseBasicVariant' value64='2'/>
<enum name='kJapanesePostScriptPrintVariant' value64='4'/>
<enum name='kJapanesePostScriptScrnVariant' value64='3'/>
<enum name='kJapaneseStandardVariant' value64='0'/>
<enum name='kJapaneseStdNoVerticalsVariant' value64='1'/>
<enum name='kJapaneseVertAtKuPlusTenVariant' value64='5'/>
<enum name='kKernelExtensionsFolderType' value64='1801812084'/>
<enum name='kKeyboardLayoutsFolderType' value64='1802264953'/>
<enum name='kKeychainFolderType' value64='1801676910'/>
<enum name='kLarge4BitIconSize' value64='512'/>
<enum name='kLarge8BitIconSize' value64='1024'/>
<enum name='kLargeIconSize' value64='256'/>
<enum name='kLastDomainConstant' value64='-32760'/>
<enum name='kLastMagicBusyFiletype' value64='1652193599'/>
<enum name='kLauncherItemsFolderType' value64='1818326382'/>
<enum name='kLeftToRight' value64='0'/>
<enum name='kLibraryAssistantsFolderType' value64='1634956396'/>
<enum name='kLocalDomain' value64='-32765'/>
<enum name='kLocaleAllPartsMask' value64='63'/>
<enum name='kLocaleAndVariantNameMask' value64='3'/>
<enum name='kLocaleLanguageMask' value64='1'/>
<enum name='kLocaleLanguageVariantMask' value64='2'/>
<enum name='kLocaleNameMask' value64='1'/>
<enum name='kLocaleOperationVariantNameMask' value64='2'/>
<enum name='kLocaleRegionMask' value64='16'/>
<enum name='kLocaleRegionVariantMask' value64='32'/>
<enum name='kLocaleScriptMask' value64='4'/>
<enum name='kLocaleScriptVariantMask' value64='8'/>
<enum name='kLocalesBufferTooSmallErr' value64='-30001'/>
<enum name='kLocalesDefaultDisplayStatus' value64='-30029'/>
<enum name='kLocalesFolderType' value64='3295440739'/>
<enum name='kLocalesTableFormatErr' value64='-30002'/>
<enum name='kLogsFolderType' value64='1819240307'/>
<enum name='kM68kISA' value64='0'/>
<enum name='kMIDIDriversFolderType' value64='1835623529'/>
<enum name='kMPAddressSpaceInfoVersion' value64='524289'/>
<enum name='kMPAllocate1024ByteAligned' value64='10'/>
<enum name='kMPAllocate16ByteAligned' value64='4'/>
<enum name='kMPAllocate32ByteAligned' value64='5'/>
<enum name='kMPAllocate4096ByteAligned' value64='12'/>
<enum name='kMPAllocate8ByteAligned' value64='3'/>
<enum name='kMPAllocateAltiVecAligned' value64='4'/>
<enum name='kMPAllocateClearMask' value64='1'/>
<enum name='kMPAllocateDefaultAligned' value64='0'/>
<enum name='kMPAllocateGloballyMask' value64='2'/>
<enum name='kMPAllocateInterlockAligned' value64='255'/>
<enum name='kMPAllocateMaxAlignment' value64='16'/>
<enum name='kMPAllocateNoCreateMask' value64='32'/>
<enum name='kMPAllocateNoGrowthMask' value64='16'/>
<enum name='kMPAllocateResidentMask' value64='4'/>
<enum name='kMPAllocateVMPageAligned' value64='254'/>
<enum name='kMPAllocateVMXAligned' value64='4'/>
<enum name='kMPAnyRemoteContext' value64='0'/>
<enum name='kMPAsyncInterruptRemoteContext' value64='3'/>
<enum name='kMPBlueBlockingErr' value64='-29293'/>
<enum name='kMPCreateTaskNotDebuggableMask' value64='4'/>
<enum name='kMPCreateTaskSuspendedMask' value64='1'/>
<enum name='kMPCreateTaskTakesAllExceptionsMask' value64='2'/>
<enum name='kMPCreateTaskValidOptionsMask' value64='7'/>
<enum name='kMPCriticalRegionInfoVersion' value64='393217'/>
<enum name='kMPDeletedErr' value64='-29295'/>
<enum name='kMPEventInfoVersion' value64='589825'/>
<enum name='kMPHighLevelDebugger' value64='536870912'/>
<enum name='kMPInsufficientResourcesErr' value64='-29298'/>
<enum name='kMPInterruptRemoteContext' value64='2'/>
<enum name='kMPInvalidIDErr' value64='-29299'/>
<enum name='kMPIterationEndErr' value64='-29275'/>
<enum name='kMPLowLevelDebugger' value64='0'/>
<enum name='kMPMaxAllocSize' value64='1073741824'/>
<enum name='kMPMidLevelDebugger' value64='268435456'/>
<enum name='kMPNanokernelNeedsMemoryErr' value64='-29294'/>
<enum name='kMPNoID' value64='0'/>
<enum name='kMPNotificationInfoVersion' value64='786433'/>
<enum name='kMPOwningProcessRemoteContext' value64='1'/>
<enum name='kMPPreserveTimerIDMask' value64='1'/>
<enum name='kMPPrivilegedErr' value64='-29276'/>
<enum name='kMPProcessCreatedErr' value64='-29288'/>
<enum name='kMPProcessTerminatedErr' value64='-29289'/>
<enum name='kMPQueueInfoVersion' value64='262145'/>
<enum name='kMPSemaphoreInfoVersion' value64='327681'/>
<enum name='kMPTaskAbortedErr' value64='-29297'/>
<enum name='kMPTaskBlocked' value64='0'/>
<enum name='kMPTaskBlockedErr' value64='-29291'/>
<enum name='kMPTaskCreatedErr' value64='-29290'/>
<enum name='kMPTaskInfoVersion' value64='3'/>
<enum name='kMPTaskPropagate' value64='0'/>
<enum name='kMPTaskPropagateMask' value64='1'/>
<enum name='kMPTaskReady' value64='1'/>
<enum name='kMPTaskResumeBranch' value64='2'/>
<enum name='kMPTaskResumeBranchMask' value64='4'/>
<enum name='kMPTaskResumeMask' value64='0'/>
<enum name='kMPTaskResumeStep' value64='1'/>
<enum name='kMPTaskResumeStepMask' value64='2'/>
<enum name='kMPTaskRunning' value64='2'/>
<enum name='kMPTaskState32BitMemoryException' value64='4'/>
<enum name='kMPTaskStateFPU' value64='1'/>
<enum name='kMPTaskStateMachine' value64='3'/>
<enum name='kMPTaskStateRegisters' value64='0'/>
<enum name='kMPTaskStateTaskInfo' value64='5'/>
<enum name='kMPTaskStateVectors' value64='2'/>
<enum name='kMPTaskStoppedErr' value64='-29292'/>
<enum name='kMPTimeIsDeltaMask' value64='2'/>
<enum name='kMPTimeIsDurationMask' value64='4'/>
<enum name='kMPTimeoutErr' value64='-29296'/>
<enum name='kMPUnresolvedCFragSymbolAddress' value64='0'/>
<enum name='kMacArabicAlBayanVariant' value64='3'/>
<enum name='kMacArabicStandardVariant' value64='0'/>
<enum name='kMacArabicThuluthVariant' value64='2'/>
<enum name='kMacArabicTrueTypeVariant' value64='1'/>
<enum name='kMacCroatianCurrencySignVariant' value64='1'/>
<enum name='kMacCroatianDefaultVariant' value64='0'/>
<enum name='kMacCroatianEuroSignVariant' value64='2'/>
<enum name='kMacCyrillicCurrSignStdVariant' value64='1'/>
<enum name='kMacCyrillicCurrSignUkrVariant' value64='2'/>
<enum name='kMacCyrillicDefaultVariant' value64='0'/>
<enum name='kMacCyrillicEuroSignVariant' value64='3'/>
<enum name='kMacFarsiStandardVariant' value64='0'/>
<enum name='kMacFarsiTrueTypeVariant' value64='1'/>
<enum name='kMacGreekDefaultVariant' value64='0'/>
<enum name='kMacGreekEuroSignVariant' value64='2'/>
<enum name='kMacGreekNoEuroSignVariant' value64='1'/>
<enum name='kMacHebrewFigureSpaceVariant' value64='1'/>
<enum name='kMacHebrewStandardVariant' value64='0'/>
<enum name='kMacIcelandicStandardVariant' value64='0'/>
<enum name='kMacIcelandicStdCurrSignVariant' value64='2'/>
<enum name='kMacIcelandicStdDefaultVariant' value64='0'/>
<enum name='kMacIcelandicStdEuroSignVariant' value64='4'/>
<enum name='kMacIcelandicTTCurrSignVariant' value64='3'/>
<enum name='kMacIcelandicTTDefaultVariant' value64='1'/>
<enum name='kMacIcelandicTTEuroSignVariant' value64='5'/>
<enum name='kMacIcelandicTrueTypeVariant' value64='1'/>
<enum name='kMacJapaneseBasicVariant' value64='2'/>
<enum name='kMacJapanesePostScriptPrintVariant' value64='4'/>
<enum name='kMacJapanesePostScriptScrnVariant' value64='3'/>
<enum name='kMacJapaneseStandardVariant' value64='0'/>
<enum name='kMacJapaneseStdNoVerticalsVariant' value64='1'/>
<enum name='kMacJapaneseVertAtKuPlusTenVariant' value64='5'/>
<enum name='kMacMemoryMaximumMemoryManagerBlockSize' value64='2147483632'/>
<enum name='kMacOSReadMesFolderType' value64='1836020420'/>
<enum name='kMacRomanCurrencySignVariant' value64='1'/>
<enum name='kMacRomanDefaultVariant' value64='0'/>
<enum name='kMacRomanEuroSignVariant' value64='2'/>
<enum name='kMacRomanLatin1CroatianVariant' value64='8'/>
<enum name='kMacRomanLatin1DefaultVariant' value64='0'/>
<enum name='kMacRomanLatin1IcelandicVariant' value64='11'/>
<enum name='kMacRomanLatin1RomanianVariant' value64='14'/>
<enum name='kMacRomanLatin1StandardVariant' value64='2'/>
<enum name='kMacRomanLatin1TurkishVariant' value64='6'/>
<enum name='kMacRomanStandardVariant' value64='0'/>
<enum name='kMacRomanianCurrencySignVariant' value64='1'/>
<enum name='kMacRomanianDefaultVariant' value64='0'/>
<enum name='kMacRomanianEuroSignVariant' value64='2'/>
<enum name='kMacVT100CurrencySignVariant' value64='1'/>
<enum name='kMacVT100DefaultVariant' value64='0'/>
<enum name='kMacVT100EuroSignVariant' value64='2'/>
<enum name='kMachineNameStrID' value64='-16395'/>
<enum name='kMagicBusyCreationDate' value64='1329266096'/>
<enum name='kMagicTemporaryItemsFolderType' value64='1836346736'/>
<enum name='kManagedItemsFolderType' value64='1835101799'/>
<enum name='kMaximumBlocksIn4GB' value64='8388607'/>
<enum name='kModemOutOfMemory' value64='-14000'/>
<enum name='kModemPreferencesMissing' value64='-14001'/>
<enum name='kModemScriptMissing' value64='-14002'/>
<enum name='kModemScriptsFolderType' value64='3295506276'/>
<enum name='kMountedFolderAliasType' value64='1717661038'/>
<enum name='kMovieDocumentsFolderType' value64='1835298659'/>
<enum name='kMultiprocessingFolderType' value64='1836087398'/>
<enum name='kMusicDocumentsFolderType' value64='3043258211'/>
<enum name='kNSL68kContextNotSupported' value64='-4170'/>
<enum name='kNSLBadClientInfoPtr' value64='-4185'/>
<enum name='kNSLBadDataTypeErr' value64='-4193'/>
<enum name='kNSLBadNetConnection' value64='-4192'/>
<enum name='kNSLBadProtocolTypeErr' value64='-4183'/>
<enum name='kNSLBadReferenceErr' value64='-4195'/>
<enum name='kNSLBadServiceTypeErr' value64='-4194'/>
<enum name='kNSLBadURLSyntax' value64='-4172'/>
<enum name='kNSLBufferTooSmallForData' value64='-4187'/>
<enum name='kNSLCannotContinueLookup' value64='-4186'/>
<enum name='kNSLErrNullPtrError' value64='-4176'/>
<enum name='kNSLInitializationFailed' value64='-4200'/>
<enum name='kNSLInsufficientOTVer' value64='-4197'/>
<enum name='kNSLInsufficientSysVer' value64='-4198'/>
<enum name='kNSLInvalidPluginSpec' value64='-4190'/>
<enum name='kNSLNoCarbonLib' value64='-4173'/>
<enum name='kNSLNoContextAvailable' value64='-4188'/>
<enum name='kNSLNoElementsInList' value64='-4196'/>
<enum name='kNSLNoPluginsForSearch' value64='-4179'/>
<enum name='kNSLNoPluginsFound' value64='-4181'/>
<enum name='kNSLNoSupportForService' value64='-4191'/>
<enum name='kNSLNotImplementedYet' value64='-4175'/>
<enum name='kNSLNotInitialized' value64='-4199'/>
<enum name='kNSLNullListPtr' value64='-4184'/>
<enum name='kNSLNullNeighborhoodPtr' value64='-4178'/>
<enum name='kNSLPluginLoadFailed' value64='-4182'/>
<enum name='kNSLRequestBufferAlreadyInList' value64='-4189'/>
<enum name='kNSLSchedulerError' value64='-4171'/>
<enum name='kNSLSearchAlreadyInProgress' value64='-4180'/>
<enum name='kNSLSomePluginsFailedToLoad' value64='-4177'/>
<enum name='kNSLUILibraryNotAvailable' value64='-4174'/>
<enum name='kNSpAddPlayerFailedErr' value64='-30389'/>
<enum name='kNSpAddressInUseErr' value64='-30380'/>
<enum name='kNSpAlreadyAdvertisingErr' value64='-30374'/>
<enum name='kNSpAlreadyInitializedErr' value64='-30361'/>
<enum name='kNSpCantBlockErr' value64='-30398'/>
<enum name='kNSpConnectFailedErr' value64='-30395'/>
<enum name='kNSpCreateGroupFailedErr' value64='-30388'/>
<enum name='kNSpFeatureNotImplementedErr' value64='-30381'/>
<enum name='kNSpFreeQExhaustedErr' value64='-30378'/>
<enum name='kNSpGameTerminatedErr' value64='-30394'/>
<enum name='kNSpHostFailedErr' value64='-30365'/>
<enum name='kNSpInitializationFailedErr' value64='-30360'/>
<enum name='kNSpInvalidAddressErr' value64='-30377'/>
<enum name='kNSpInvalidDefinitionErr' value64='-30390'/>
<enum name='kNSpInvalidGameRefErr' value64='-30367'/>
<enum name='kNSpInvalidGroupIDErr' value64='-30384'/>
<enum name='kNSpInvalidParameterErr' value64='-30369'/>
<enum name='kNSpInvalidPlayerIDErr' value64='-30383'/>
<enum name='kNSpInvalidProtocolListErr' value64='-30392'/>
<enum name='kNSpInvalidProtocolRefErr' value64='-30391'/>
<enum name='kNSpJoinFailedErr' value64='-30399'/>
<enum name='kNSpMemAllocationErr' value64='-30373'/>
<enum name='kNSpMessageTooBigErr' value64='-30397'/>
<enum name='kNSpNameRequiredErr' value64='-30382'/>
<enum name='kNSpNoGroupsErr' value64='-30386'/>
<enum name='kNSpNoHostVolunteersErr' value64='-30387'/>
<enum name='kNSpNoPlayersErr' value64='-30385'/>
<enum name='kNSpNotAdvertisingErr' value64='-30376'/>
<enum name='kNSpOTNotPresentErr' value64='-30370'/>
<enum name='kNSpOTVersionTooOldErr' value64='-30371'/>
<enum name='kNSpPipeFullErr' value64='-30364'/>
<enum name='kNSpProtocolNotAvailableErr' value64='-30366'/>
<enum name='kNSpRemovePlayerFailedErr' value64='-30379'/>
<enum name='kNSpSendFailedErr' value64='-30396'/>
<enum name='kNSpTimeoutErr' value64='-30393'/>
<enum name='kNSpTopologyNotSupportedErr' value64='-30362'/>
<enum name='kNameLocked' value64='4096'/>
<enum name='kNavCustomControlMessageFailedErr' value64='-5697'/>
<enum name='kNavInvalidCustomControlMessageErr' value64='-5698'/>
<enum name='kNavInvalidSystemConfigErr' value64='-5696'/>
<enum name='kNavMissingKindStringErr' value64='-5699'/>
<enum name='kNavWrongDialogClassErr' value64='-5695'/>
<enum name='kNavWrongDialogStateErr' value64='-5694'/>
<enum name='kNetworkDomain' value64='-32764'/>
<enum name='kNewDebugHeap' value64='4'/>
<enum name='kNewStyleHeap' value64='2'/>
<enum name='kNewSuspend' value64='1'/>
<enum name='kNoByteCode' value64='0'/>
<enum name='kNoCardBusCISErr' value64='-9109'/>
<enum name='kNoCardEnablersFoundErr' value64='-9099'/>
<enum name='kNoCardErr' value64='-9071'/>
<enum name='kNoCardSevicesSocketsErr' value64='-9080'/>
<enum name='kNoClientTableErr' value64='-9097'/>
<enum name='kNoCompatibleNameErr' value64='-9101'/>
<enum name='kNoEnablerForCardErr' value64='-9100'/>
<enum name='kNoIOWindowRequestedErr' value64='-9094'/>
<enum name='kNoMoreInterruptSlotsErr' value64='-9096'/>
<enum name='kNoMoreItemsErr' value64='-9078'/>
<enum name='kNoMoreTimerClientsErr' value64='-9095'/>
<enum name='kNoSuchPowerSource' value64='-13020'/>
<enum name='kNoThreadID' value64='0'/>
<enum name='kNoUserAuthentication' value64='1'/>
<enum name='kNotPaged' value64='2'/>
<enum name='kNotReadyErr' value64='-9103'/>
<enum name='kNotZVCapableErr' value64='-9108'/>
<enum name='kOTAccessErr' value64='-3152'/>
<enum name='kOTAddressBusyErr' value64='-3172'/>
<enum name='kOTBadAddressErr' value64='-3150'/>
<enum name='kOTBadConfigurationErr' value64='-3282'/>
<enum name='kOTBadDataErr' value64='-3159'/>
<enum name='kOTBadFlagErr' value64='-3165'/>
<enum name='kOTBadNameErr' value64='-3170'/>
<enum name='kOTBadOptionErr' value64='-3151'/>
<enum name='kOTBadQLenErr' value64='-3171'/>
<enum name='kOTBadReferenceErr' value64='-3153'/>
<enum name='kOTBadSequenceErr' value64='-3156'/>
<enum name='kOTBadSyncErr' value64='-3179'/>
<enum name='kOTBufferOverflowErr' value64='-3160'/>
<enum name='kOTCanceledErr' value64='-3180'/>
<enum name='kOTClientNotInittedErr' value64='-3279'/>
<enum name='kOTConfigurationChangedErr' value64='-3283'/>
<enum name='kOTDuplicateFoundErr' value64='-3216'/>
<enum name='kOTFlowErr' value64='-3161'/>
<enum name='kOTIndOutErr' value64='-3173'/>
<enum name='kOTLookErr' value64='-3158'/>
<enum name='kOTNoAddressErr' value64='-3154'/>
<enum name='kOTNoDataErr' value64='-3162'/>
<enum name='kOTNoDisconnectErr' value64='-3163'/>
<enum name='kOTNoError' value64='0'/>
<enum name='kOTNoReleaseErr' value64='-3166'/>
<enum name='kOTNoStructureTypeErr' value64='-3169'/>
<enum name='kOTNoUDErrErr' value64='-3164'/>
<enum name='kOTNotFoundErr' value64='-3201'/>
<enum name='kOTNotSupportedErr' value64='-3167'/>
<enum name='kOTOutOfMemoryErr' value64='-3211'/>
<enum name='kOTOutStateErr' value64='-3155'/>
<enum name='kOTPortHasDiedErr' value64='-3280'/>
<enum name='kOTPortLostConnection' value64='-3285'/>
<enum name='kOTPortWasEjectedErr' value64='-3281'/>
<enum name='kOTProtocolErr' value64='-3178'/>
<enum name='kOTProviderMismatchErr' value64='-3174'/>
<enum name='kOTQFullErr' value64='-3177'/>
<enum name='kOTResAddressErr' value64='-3176'/>
<enum name='kOTResQLenErr' value64='-3175'/>
<enum name='kOTStateChangeErr' value64='-3168'/>
<enum name='kOTSysErrorErr' value64='-3157'/>
<enum name='kOTUserRequestedErr' value64='-3284'/>
<enum name='kOld68kRTA' value64='0'/>
<enum name='kOnAppropriateDisk' value64='-32767'/>
<enum name='kOnSystemDisk' value64='-32768'/>
<enum name='kOneByteCode' value64='1'/>
<enum name='kOpaqueAddressSpaceID' value64='8'/>
<enum name='kOpaqueAnyID' value64='0'/>
<enum name='kOpaqueAreaID' value64='11'/>
<enum name='kOpaqueCoherenceID' value64='10'/>
<enum name='kOpaqueConsoleID' value64='13'/>
<enum name='kOpaqueCpuID' value64='7'/>
<enum name='kOpaqueCriticalRegionID' value64='6'/>
<enum name='kOpaqueEventID' value64='9'/>
<enum name='kOpaqueNotificationID' value64='12'/>
<enum name='kOpaqueProcessID' value64='1'/>
<enum name='kOpaqueQueueID' value64='4'/>
<enum name='kOpaqueSemaphoreID' value64='5'/>
<enum name='kOpaqueTaskID' value64='2'/>
<enum name='kOpaqueTimerID' value64='3'/>
<enum name='kOpenDocEditorsFolderType' value64='3295634534'/>
<enum name='kOpenDocFolderType' value64='1868853092'/>
<enum name='kOpenDocLibrariesFolderType' value64='1868852322'/>
<enum name='kOpenDocShellPlugInsFolderType' value64='1868854128'/>
<enum name='kOutOfResourceErr' value64='-9079'/>
<enum name='kOwnerID2Name' value64='1'/>
<enum name='kOwnerName2ID' value64='3'/>
<enum name='kPEFAbsoluteExport' value64='-2'/>
<enum name='kPEFCodeSection' value64='0'/>
<enum name='kPEFCodeSymbol' value64='0'/>
<enum name='kPEFConstantSection' value64='3'/>
<enum name='kPEFDataSymbol' value64='1'/>
<enum name='kPEFDebugSection' value64='5'/>
<enum name='kPEFExceptionSection' value64='7'/>
<enum name='kPEFExecDataSection' value64='6'/>
<enum name='kPEFExpSymClassShift' value64='24'/>
<enum name='kPEFExpSymMaxNameOffset' value64='16777215'/>
<enum name='kPEFExpSymNameOffsetMask' value64='16777215'/>
<enum name='kPEFFirstSectionHeaderOffset' value64='40'/>
<enum name='kPEFGlobalShare' value64='4'/>
<enum name='kPEFGlueSymbol' value64='4'/>
<enum name='kPEFHashLengthShift' value64='16'/>
<enum name='kPEFHashMaxLength' value64='65535'/>
<enum name='kPEFHashSlotFirstKeyMask' value64='262143'/>
<enum name='kPEFHashSlotMaxKeyIndex' value64='262143'/>
<enum name='kPEFHashSlotMaxSymbolCount' value64='16383'/>
<enum name='kPEFHashSlotSymCountShift' value64='18'/>
<enum name='kPEFHashValueMask' value64='65535'/>
<enum name='kPEFImpSymClassShift' value64='24'/>
<enum name='kPEFImpSymMaxNameOffset' value64='16777215'/>
<enum name='kPEFImpSymNameOffsetMask' value64='16777215'/>
<enum name='kPEFInitLibBeforeMask' value64='128'/>
<enum name='kPEFLoaderSection' value64='4'/>
<enum name='kPEFPackedDataSection' value64='2'/>
<enum name='kPEFPkDataBlock' value64='1'/>
<enum name='kPEFPkDataCount5Mask' value64='31'/>
<enum name='kPEFPkDataMaxCount5' value64='31'/>
<enum name='kPEFPkDataOpcodeShift' value64='5'/>
<enum name='kPEFPkDataRepeat' value64='2'/>
<enum name='kPEFPkDataRepeatBlock' value64='3'/>
<enum name='kPEFPkDataRepeatZero' value64='4'/>
<enum name='kPEFPkDataVCountEndMask' value64='128'/>
<enum name='kPEFPkDataVCountMask' value64='127'/>
<enum name='kPEFPkDataVCountShift' value64='7'/>
<enum name='kPEFPkDataZero' value64='0'/>
<enum name='kPEFProcessShare' value64='1'/>
<enum name='kPEFProtectedShare' value64='5'/>
<enum name='kPEFReexportedImport' value64='-3'/>
<enum name='kPEFRelocBasicOpcodeRange' value64='128'/>
<enum name='kPEFRelocBySectC' value64='32'/>
<enum name='kPEFRelocBySectD' value64='33'/>
<enum name='kPEFRelocBySectDWithSkip' value64='0'/>
<enum name='kPEFRelocImportRun' value64='37'/>
<enum name='kPEFRelocIncrPosition' value64='64'/>
<enum name='kPEFRelocIncrPositionMaxOffset' value64='4096'/>
<enum name='kPEFRelocLgByImport' value64='82'/>
<enum name='kPEFRelocLgByImportMaxIndex' value64='67108863'/>
<enum name='kPEFRelocLgBySectionSubopcode' value64='0'/>
<enum name='kPEFRelocLgRepeat' value64='88'/>
<enum name='kPEFRelocLgRepeatMaxChunkCount' value64='16'/>
<enum name='kPEFRelocLgRepeatMaxRepeatCount' value64='4194303'/>
<enum name='kPEFRelocLgSetOrBySection' value64='90'/>
<enum name='kPEFRelocLgSetOrBySectionMaxIndex' value64='4194303'/>
<enum name='kPEFRelocLgSetSectCSubopcode' value64='1'/>
<enum name='kPEFRelocLgSetSectDSubopcode' value64='2'/>
<enum name='kPEFRelocRunMaxRunLength' value64='512'/>
<enum name='kPEFRelocSetPosMaxOffset' value64='67108863'/>
<enum name='kPEFRelocSetPosition' value64='80'/>
<enum name='kPEFRelocSmByImport' value64='48'/>
<enum name='kPEFRelocSmBySection' value64='51'/>
<enum name='kPEFRelocSmIndexMaxIndex' value64='511'/>
<enum name='kPEFRelocSmRepeat' value64='72'/>
<enum name='kPEFRelocSmRepeatMaxChunkCount' value64='16'/>
<enum name='kPEFRelocSmRepeatMaxRepeatCount' value64='256'/>
<enum name='kPEFRelocSmSetSectC' value64='49'/>
<enum name='kPEFRelocSmSetSectD' value64='50'/>
<enum name='kPEFRelocTVector12' value64='34'/>
<enum name='kPEFRelocTVector8' value64='35'/>
<enum name='kPEFRelocUndefinedOpcode' value64='255'/>
<enum name='kPEFRelocVTable8' value64='36'/>
<enum name='kPEFRelocWithSkipMaxRelocCount' value64='63'/>
<enum name='kPEFRelocWithSkipMaxSkipCount' value64='255'/>
<enum name='kPEFTOCSymbol' value64='3'/>
<enum name='kPEFTVectorSymbol' value64='2'/>
<enum name='kPEFTag1' value64='1248819489'/>
<enum name='kPEFTag2' value64='1885693542'/>
<enum name='kPEFTracebackSection' value64='8'/>
<enum name='kPEFUndefinedSymbol' value64='15'/>
<enum name='kPEFUnpackedDataSection' value64='1'/>
<enum name='kPEFVersion' value64='1'/>
<enum name='kPEFWeakImportLibMask' value64='64'/>
<enum name='kPEFWeakImportSymMask' value64='128'/>
<enum name='kPOSIXErrorBase' value64='100000'/>
<enum name='kPOSIXErrorE2BIG' value64='100007'/>
<enum name='kPOSIXErrorEACCES' value64='100013'/>
<enum name='kPOSIXErrorEADDRINUSE' value64='100048'/>
<enum name='kPOSIXErrorEADDRNOTAVAIL' value64='100049'/>
<enum name='kPOSIXErrorEAFNOSUPPORT' value64='100047'/>
<enum name='kPOSIXErrorEAGAIN' value64='100035'/>
<enum name='kPOSIXErrorEALREADY' value64='100037'/>
<enum name='kPOSIXErrorEAUTH' value64='100080'/>
<enum name='kPOSIXErrorEBADARCH' value64='100086'/>
<enum name='kPOSIXErrorEBADEXEC' value64='100085'/>
<enum name='kPOSIXErrorEBADF' value64='100009'/>
<enum name='kPOSIXErrorEBADMACHO' value64='100088'/>
<enum name='kPOSIXErrorEBADMSG' value64='100094'/>
<enum name='kPOSIXErrorEBADRPC' value64='100072'/>
<enum name='kPOSIXErrorEBUSY' value64='100016'/>
<enum name='kPOSIXErrorECANCELED' value64='100089'/>
<enum name='kPOSIXErrorECHILD' value64='100010'/>
<enum name='kPOSIXErrorECONNABORTED' value64='100053'/>
<enum name='kPOSIXErrorECONNREFUSED' value64='100061'/>
<enum name='kPOSIXErrorECONNRESET' value64='100054'/>
<enum name='kPOSIXErrorEDEADLK' value64='100011'/>
<enum name='kPOSIXErrorEDESTADDRREQ' value64='100039'/>
<enum name='kPOSIXErrorEDEVERR' value64='100083'/>
<enum name='kPOSIXErrorEDOM' value64='100033'/>
<enum name='kPOSIXErrorEDQUOT' value64='100069'/>
<enum name='kPOSIXErrorEEXIST' value64='100017'/>
<enum name='kPOSIXErrorEFAULT' value64='100014'/>
<enum name='kPOSIXErrorEFBIG' value64='100027'/>
<enum name='kPOSIXErrorEFTYPE' value64='100079'/>
<enum name='kPOSIXErrorEHOSTDOWN' value64='100064'/>
<enum name='kPOSIXErrorEHOSTUNREACH' value64='100065'/>
<enum name='kPOSIXErrorEIDRM' value64='100090'/>
<enum name='kPOSIXErrorEILSEQ' value64='100092'/>
<enum name='kPOSIXErrorEINPROGRESS' value64='100036'/>
<enum name='kPOSIXErrorEINTR' value64='100004'/>
<enum name='kPOSIXErrorEINVAL' value64='100022'/>
<enum name='kPOSIXErrorEIO' value64='100005'/>
<enum name='kPOSIXErrorEISCONN' value64='100056'/>
<enum name='kPOSIXErrorEISDIR' value64='100021'/>
<enum name='kPOSIXErrorELOOP' value64='100062'/>
<enum name='kPOSIXErrorEMFILE' value64='100024'/>
<enum name='kPOSIXErrorEMLINK' value64='100031'/>
<enum name='kPOSIXErrorEMSGSIZE' value64='100040'/>
<enum name='kPOSIXErrorEMULTIHOP' value64='100095'/>
<enum name='kPOSIXErrorENAMETOOLONG' value64='100063'/>
<enum name='kPOSIXErrorENEEDAUTH' value64='100081'/>
<enum name='kPOSIXErrorENETDOWN' value64='100050'/>
<enum name='kPOSIXErrorENETRESET' value64='100052'/>
<enum name='kPOSIXErrorENETUNREACH' value64='100051'/>
<enum name='kPOSIXErrorENFILE' value64='100023'/>
<enum name='kPOSIXErrorENOATTR' value64='100093'/>
<enum name='kPOSIXErrorENOBUFS' value64='100055'/>
<enum name='kPOSIXErrorENODATA' value64='100096'/>
<enum name='kPOSIXErrorENODEV' value64='100019'/>
<enum name='kPOSIXErrorENOENT' value64='100002'/>
<enum name='kPOSIXErrorENOEXEC' value64='100008'/>
<enum name='kPOSIXErrorENOLCK' value64='100077'/>
<enum name='kPOSIXErrorENOLINK' value64='100097'/>
<enum name='kPOSIXErrorENOMEM' value64='100012'/>
<enum name='kPOSIXErrorENOMSG' value64='100091'/>
<enum name='kPOSIXErrorENOPROTOOPT' value64='100042'/>
<enum name='kPOSIXErrorENOSPC' value64='100028'/>
<enum name='kPOSIXErrorENOSR' value64='100098'/>
<enum name='kPOSIXErrorENOSTR' value64='100099'/>
<enum name='kPOSIXErrorENOSYS' value64='100078'/>
<enum name='kPOSIXErrorENOTBLK' value64='100015'/>
<enum name='kPOSIXErrorENOTCONN' value64='100057'/>
<enum name='kPOSIXErrorENOTDIR' value64='100020'/>
<enum name='kPOSIXErrorENOTEMPTY' value64='100066'/>
<enum name='kPOSIXErrorENOTSOCK' value64='100038'/>
<enum name='kPOSIXErrorENOTSUP' value64='100045'/>
<enum name='kPOSIXErrorENOTTY' value64='100025'/>
<enum name='kPOSIXErrorENXIO' value64='100006'/>
<enum name='kPOSIXErrorEOPNOTSUPP' value64='100102'/>
<enum name='kPOSIXErrorEOVERFLOW' value64='100084'/>
<enum name='kPOSIXErrorEPERM' value64='100001'/>
<enum name='kPOSIXErrorEPFNOSUPPORT' value64='100046'/>
<enum name='kPOSIXErrorEPIPE' value64='100032'/>
<enum name='kPOSIXErrorEPROCLIM' value64='100067'/>
<enum name='kPOSIXErrorEPROCUNAVAIL' value64='100076'/>
<enum name='kPOSIXErrorEPROGMISMATCH' value64='100075'/>
<enum name='kPOSIXErrorEPROGUNAVAIL' value64='100074'/>
<enum name='kPOSIXErrorEPROTO' value64='100100'/>
<enum name='kPOSIXErrorEPROTONOSUPPORT' value64='100043'/>
<enum name='kPOSIXErrorEPROTOTYPE' value64='100041'/>
<enum name='kPOSIXErrorEPWROFF' value64='100082'/>
<enum name='kPOSIXErrorERANGE' value64='100034'/>
<enum name='kPOSIXErrorEREMOTE' value64='100071'/>
<enum name='kPOSIXErrorEROFS' value64='100030'/>
<enum name='kPOSIXErrorERPCMISMATCH' value64='100073'/>
<enum name='kPOSIXErrorESHLIBVERS' value64='100087'/>
<enum name='kPOSIXErrorESHUTDOWN' value64='100058'/>
<enum name='kPOSIXErrorESOCKTNOSUPPORT' value64='100044'/>
<enum name='kPOSIXErrorESPIPE' value64='100029'/>
<enum name='kPOSIXErrorESRCH' value64='100003'/>
<enum name='kPOSIXErrorESTALE' value64='100070'/>
<enum name='kPOSIXErrorETIME' value64='100101'/>
<enum name='kPOSIXErrorETIMEDOUT' value64='100060'/>
<enum name='kPOSIXErrorETOOMANYREFS' value64='100059'/>
<enum name='kPOSIXErrorETXTBSY' value64='100026'/>
<enum name='kPOSIXErrorEUSERS' value64='100068'/>
<enum name='kPOSIXErrorEXDEV' value64='100018'/>
<enum name='kPackageAliasType' value64='1718643553'/>
<enum name='kPageInMemory' value64='0'/>
<enum name='kPageOnDisk' value64='1'/>
<enum name='kPascalStackBased' value64='0'/>
<enum name='kPassCallToChainErr' value64='-9086'/>
<enum name='kPassSelector' value64='0'/>
<enum name='kPassword' value64='2'/>
<enum name='kPictureDocumentsFolderType' value64='1885630307'/>
<enum name='kPostCardEventErr' value64='-9088'/>
<enum name='kPowerHandlerExistsForDeviceErr' value64='-13006'/>
<enum name='kPowerHandlerNotFoundForDeviceErr' value64='-13007'/>
<enum name='kPowerHandlerNotFoundForProcErr' value64='-13008'/>
<enum name='kPowerMgtMessageNotHandled' value64='-13009'/>
<enum name='kPowerMgtRequestDenied' value64='-13010'/>
<enum name='kPowerPCISA' value64='1'/>
<enum name='kPowerPCRTA' value64='0'/>
<enum name='kPreMacOS91AppleExtrasFolderType' value64='2355460292'/>
<enum name='kPreMacOS91ApplicationsFolderType' value64='2356179059'/>
<enum name='kPreMacOS91AssistantsFolderType' value64='2356376772'/>
<enum name='kPreMacOS91AutomountedServersFolderType' value64='2809296580'/>
<enum name='kPreMacOS91InstallerLogsFolderType' value64='2490132326'/>
<enum name='kPreMacOS91InternetFolderType' value64='2490266820'/>
<enum name='kPreMacOS91MacOSReadMesFolderType' value64='3043979972'/>
<enum name='kPreMacOS91StationeryFolderType' value64='3211031412'/>
<enum name='kPreMacOS91UtilitiesFolderType' value64='2675206596'/>
<enum name='kPreemptiveThread' value64='2'/>
<enum name='kPreferencePanesFolderType' value64='1886413166'/>
<enum name='kPreferencesFolderAliasType' value64='1717661798'/>
<enum name='kPreferencesFolderType' value64='1886545254'/>
<enum name='kPrintMonitorDocsFolderAliasType' value64='1717661806'/>
<enum name='kPrintMonitorDocsFolderType' value64='1886547572'/>
<enum name='kPrinterDescriptionFolderType' value64='1886413926'/>
<enum name='kPrinterDriverFolderType' value64='3295703652'/>
<enum name='kPrintersFolderType' value64='1768779890'/>
<enum name='kPrintingPlugInsFolderType' value64='1886415975'/>
<enum name='kPrivateFrameworksFolderType' value64='1885762157'/>
<enum name='kPrivilegeViolationException' value64='8'/>
<enum name='kProcDescriptorIsAbsolute' value64='0'/>
<enum name='kProcDescriptorIsIndex' value64='32'/>
<enum name='kProcDescriptorIsProcPtr' value64='0'/>
<enum name='kProcDescriptorIsRelative' value64='1'/>
<enum name='kProcessorTempRoutineRequiresMPLib2' value64='-13014'/>
<enum name='kPublicFolderType' value64='1886741090'/>
<enum name='kQDCorruptPICTDataErr' value64='-3954'/>
<enum name='kQDCursorAlreadyRegistered' value64='-3952'/>
<enum name='kQDCursorNotRegistered' value64='-3953'/>
<enum name='kQDNoColorHWCursorSupport' value64='-3951'/>
<enum name='kQDNoPalette' value64='-3950'/>
<enum name='kQTSSUnknownErr' value64='-6150'/>
<enum name='kQuickLookFolderType' value64='1902928747'/>
<enum name='kQuickTimeComponentsFolderType' value64='2003004784'/>
<enum name='kQuickTimeExtensionsFolderType' value64='1903453560'/>
<enum name='kRAATalkInactive' value64='-7134'/>
<enum name='kRACallBackFailed' value64='-7138'/>
<enum name='kRAConfigurationDBInitErr' value64='-7127'/>
<enum name='kRAConnectionCanceled' value64='-7109'/>
<enum name='kRADuplicateIPAddr' value64='-7137'/>
<enum name='kRAExtAuthenticationFailed' value64='-7135'/>
<enum name='kRAIncompatiblePrefs' value64='-7107'/>
<enum name='kRAInitOpenTransportFailed' value64='-7122'/>
<enum name='kRAInstallationDamaged' value64='-7113'/>
<enum name='kRAInternalError' value64='-7112'/>
<enum name='kRAInvalidParameter' value64='-7100'/>
<enum name='kRAInvalidPassword' value64='-7111'/>
<enum name='kRAInvalidPort' value64='-7101'/>
<enum name='kRAInvalidPortState' value64='-7116'/>
<enum name='kRAInvalidSerialProtocol' value64='-7117'/>
<enum name='kRAMissingResources' value64='-7106'/>
<enum name='kRANCPRejectedbyPeer' value64='-7136'/>
<enum name='kRANotConnected' value64='-7108'/>
<enum name='kRANotEnabled' value64='-7139'/>
<enum name='kRANotPrimaryInterface' value64='-7126'/>
<enum name='kRANotSupported' value64='-7105'/>
<enum name='kRAOutOfMemory' value64='-7104'/>
<enum name='kRAPPPAuthenticationFailed' value64='-7129'/>
<enum name='kRAPPPNegotiationFailed' value64='-7130'/>
<enum name='kRAPPPPeerDisconnected' value64='-7132'/>
<enum name='kRAPPPProtocolRejected' value64='-7128'/>
<enum name='kRAPPPUserDisconnected' value64='-7131'/>
<enum name='kRAPeerNotResponding' value64='-7133'/>
<enum name='kRAPortBusy' value64='-7114'/>
<enum name='kRAPortSetupFailed' value64='-7103'/>
<enum name='kRARemoteAccessNotReady' value64='-7123'/>
<enum name='kRAStartupFailed' value64='-7102'/>
<enum name='kRATCPIPInactive' value64='-7124'/>
<enum name='kRATCPIPNotConfigured' value64='-7125'/>
<enum name='kRAUnknownPortState' value64='-7115'/>
<enum name='kRAUnknownUser' value64='-7110'/>
<enum name='kRAUserInteractionRequired' value64='-7121'/>
<enum name='kRAUserLoginDisabled' value64='-7118'/>
<enum name='kRAUserPwdChangeRequired' value64='-7119'/>
<enum name='kRAUserPwdEntryRequired' value64='-7120'/>
<enum name='kReadFailureErr' value64='-9068'/>
<enum name='kReadOnlyMemoryException' value64='6'/>
<enum name='kReadReference' value64='1'/>
<enum name='kReadyThreadState' value64='0'/>
<enum name='kRecentApplicationsFolderType' value64='1918988400'/>
<enum name='kRecentDocumentsFolderType' value64='1919184739'/>
<enum name='kRecentServersFolderType' value64='1920169586'/>
<enum name='kRedirectedRelativeFolder' value64='1920099692'/>
<enum name='kRegisterA0' value64='4'/>
<enum name='kRegisterA1' value64='5'/>
<enum name='kRegisterA2' value64='6'/>
<enum name='kRegisterA3' value64='7'/>
<enum name='kRegisterA4' value64='12'/>
<enum name='kRegisterA5' value64='13'/>
<enum name='kRegisterA6' value64='14'/>
<enum name='kRegisterBased' value64='2'/>
<enum name='kRegisterD0' value64='0'/>
<enum name='kRegisterD1' value64='1'/>
<enum name='kRegisterD2' value64='2'/>
<enum name='kRegisterD3' value64='3'/>
<enum name='kRegisterD4' value64='8'/>
<enum name='kRegisterD5' value64='9'/>
<enum name='kRegisterD6' value64='10'/>
<enum name='kRegisterD7' value64='11'/>
<enum name='kRegisterParameterMask' value64='2147481600'/>
<enum name='kRegisterParameterPhase' value64='11'/>
<enum name='kRegisterParameterSizePhase' value64='0'/>
<enum name='kRegisterParameterSizeWidth' value64='2'/>
<enum name='kRegisterParameterWhichPhase' value64='2'/>
<enum name='kRegisterParameterWhichWidth' value64='3'/>
<enum name='kRegisterParameterWidth' value64='5'/>
<enum name='kRegisterResultLocationPhase' value64='6'/>
<enum name='kRegisterResultLocationWidth' value64='5'/>
<enum name='kRelativeFolder' value64='1919249510'/>
<enum name='kResFileNotOpened' value64='-1'/>
<enum name='kResolveAliasFileNoUI' value64='1'/>
<enum name='kResolveAliasTryFileIDFirst' value64='2'/>
<enum name='kResultSizeMask' value64='48'/>
<enum name='kResultSizePhase' value64='4'/>
<enum name='kResultSizeWidth' value64='2'/>
<enum name='kReturnNextGroup' value64='2'/>
<enum name='kReturnNextUG' value64='3'/>
<enum name='kReturnNextUser' value64='1'/>
<enum name='kRightToLeft' value64='1'/>
<enum name='kRootFolder' value64='1919906918'/>
<enum name='kRoutineDescriptorVersion' value64='7'/>
<enum name='kRoutineIsDispatchedDefaultRoutine' value64='16'/>
<enum name='kRoutineIsNotDispatchedDefaultRoutine' value64='0'/>
<enum name='kRoutingResourceID' value64='0'/>
<enum name='kRoutingResourceType' value64='1919907188'/>
<enum name='kRsrcChainAboveAllMaps' value64='4'/>
<enum name='kRsrcChainAboveApplicationMap' value64='2'/>
<enum name='kRsrcChainBelowApplicationMap' value64='1'/>
<enum name='kRsrcChainBelowSystemMap' value64='0'/>
<enum name='kRunningThreadState' value64='2'/>
<enum name='kSSpCantInstallErr' value64='-30342'/>
<enum name='kSSpInternalErr' value64='-30340'/>
<enum name='kSSpParallelUpVectorErr' value64='-30343'/>
<enum name='kSSpScaleToZeroErr' value64='-30344'/>
<enum name='kSSpVersionErr' value64='-30341'/>
<enum name='kScreenSaversFolderType' value64='1935897198'/>
<enum name='kScriptingAdditionsFolderType' value64='3295896434'/>
<enum name='kScriptsFolderType' value64='1935897284'/>
<enum name='kSelectorsAreIndexable' value64='1'/>
<enum name='kSelectorsAreNotIndexable' value64='0'/>
<enum name='kServicesFolderType' value64='1937138547'/>
<enum name='kSetDebugOption' value64='2'/>
<enum name='kSharedFolderAliasType' value64='1717662568'/>
<enum name='kSharedLibrariesFolderType' value64='3295439202'/>
<enum name='kSharedUserDataFolderType' value64='1935958388'/>
<enum name='kShiftJIS_BasicVariant' value64='0'/>
<enum name='kShiftJIS_DOSVariant' value64='1'/>
<enum name='kShiftJIS_MusicCDVariant' value64='2'/>
<enum name='kShutdownFolderType' value64='1936221286'/>
<enum name='kShutdownItemsDisabledFolderType' value64='1936221252'/>
<enum name='kSmall4BitIconSize' value64='128'/>
<enum name='kSmall8BitIconSize' value64='256'/>
<enum name='kSmallIconSize' value64='64'/>
<enum name='kSoundSetsFolderType' value64='1936614515'/>
<enum name='kSpeakableItemsFolderType' value64='1936747369'/>
<enum name='kSpecialCase' value64='15'/>
<enum name='kSpecialCaseCaretHook' value64='0'/>
<enum name='kSpecialCaseDrawHook' value64='4'/>
<enum name='kSpecialCaseEOLHook' value64='1'/>
<enum name='kSpecialCaseGNEFilterProc' value64='11'/>
<enum name='kSpecialCaseHighHook' value64='0'/>
<enum name='kSpecialCaseHitTestHook' value64='5'/>
<enum name='kSpecialCaseMBarHook' value64='12'/>
<enum name='kSpecialCaseNWidthHook' value64='3'/>
<enum name='kSpecialCaseProtocolHandler' value64='7'/>
<enum name='kSpecialCaseSelectorMask' value64='1008'/>
<enum name='kSpecialCaseSelectorPhase' value64='4'/>
<enum name='kSpecialCaseSelectorWidth' value64='6'/>
<enum name='kSpecialCaseSocketListener' value64='8'/>
<enum name='kSpecialCaseTEDoText' value64='10'/>
<enum name='kSpecialCaseTEFindWord' value64='6'/>
<enum name='kSpecialCaseTERecalc' value64='9'/>
<enum name='kSpecialCaseTextWidthHook' value64='2'/>
<enum name='kSpecialCaseWidthHook' value64='2'/>
<enum name='kSpecialFolder' value64='1936745318'/>
<enum name='kSpeechFolderType' value64='1936745320'/>
<enum name='kSpotlightImportersFolderType' value64='1936289136'/>
<enum name='kSpotlightMetadataCacheFolderType' value64='1935893352'/>
<enum name='kSpotlightSavedSearchesFolderType' value64='1936748404'/>
<enum name='kStackDispatchedPascalStackBased' value64='14'/>
<enum name='kStackOverflowException' value64='14'/>
<enum name='kStackParameterMask' value64='-64'/>
<enum name='kStackParameterPhase' value64='6'/>
<enum name='kStackParameterWidth' value64='2'/>
<enum name='kStartupFolderAliasType' value64='1717662580'/>
<enum name='kStartupFolderType' value64='1937011316'/>
<enum name='kStartupItemsDisabledFolderType' value64='1937011268'/>
<enum name='kStationeryFolderType' value64='1868854132'/>
<enum name='kStoppedThreadState' value64='1'/>
<enum name='kSysSWTooOld' value64='-6226'/>
<enum name='kSystemControlPanelFolderType' value64='1935897708'/>
<enum name='kSystemDesktopFolderType' value64='1935962987'/>
<enum name='kSystemDomain' value64='-32766'/>
<enum name='kSystemExtensionDisabledFolderType' value64='1835098948'/>
<enum name='kSystemFolderAliasType' value64='1717662585'/>
<enum name='kSystemFolderType' value64='1835098995'/>
<enum name='kSystemPreferencesFolderType' value64='1936749158'/>
<enum name='kSystemResFile' value64='0'/>
<enum name='kSystemSoundsFolderType' value64='1936944740'/>
<enum name='kSystemTrashFolderType' value64='1937011315'/>
<enum name='kTECAddFallbackInterruptBit' value64='7'/>
<enum name='kTECAddFallbackInterruptMask' value64='128'/>
<enum name='kTECAddForceASCIIChangesBit' value64='4'/>
<enum name='kTECAddForceASCIIChangesMask' value64='16'/>
<enum name='kTECAddTextRunHeuristicsBit' value64='6'/>
<enum name='kTECAddTextRunHeuristicsMask' value64='64'/>
<enum name='kTECArrayFullErr' value64='-8751'/>
<enum name='kTECAvailableEncodingsResType' value64='1668703598'/>
<enum name='kTECAvailableSniffersResType' value64='1668707174'/>
<enum name='kTECBadTextRunErr' value64='-8752'/>
<enum name='kTECBufferBelowMinimumSizeErr' value64='-8750'/>
<enum name='kTECChinesePluginSignature' value64='1887070319'/>
<enum name='kTECConversionInfoResType' value64='1668704614'/>
<enum name='kTECCorruptConverterErr' value64='-8748'/>
<enum name='kTECDirectionErr' value64='-8756'/>
<enum name='kTECDisableFallbacksBit' value64='16'/>
<enum name='kTECDisableFallbacksMask' value64='65536'/>
<enum name='kTECDisableLooseMappingsBit' value64='17'/>
<enum name='kTECDisableLooseMappingsMask' value64='131072'/>
<enum name='kTECFallbackTextLengthFixBit' value64='1'/>
<enum name='kTECFallbackTextLengthFixMask' value64='2'/>
<enum name='kTECGlobalsUnavailableErr' value64='-8770'/>
<enum name='kTECIncompleteElementErr' value64='-8755'/>
<enum name='kTECInfoCurrentFormat' value64='2'/>
<enum name='kTECInternetNameDefaultUsageMask' value64='0'/>
<enum name='kTECInternetNameStrictUsageMask' value64='1'/>
<enum name='kTECInternetNameTolerantUsageMask' value64='2'/>
<enum name='kTECInternetNamesResType' value64='1668705645'/>
<enum name='kTECItemUnavailableErr' value64='-8771'/>
<enum name='kTECJapanesePluginSignature' value64='1886023790'/>
<enum name='kTECKeepInfoFixBit' value64='0'/>
<enum name='kTECKeepInfoFixMask' value64='1'/>
<enum name='kTECKoreanPluginSignature' value64='1886089074'/>
<enum name='kTECMailEncodingsResType' value64='1668705644'/>
<enum name='kTECMissingTableErr' value64='-8745'/>
<enum name='kTECNeedFlushStatus' value64='-8784'/>
<enum name='kTECNoConversionPathErr' value64='-8749'/>
<enum name='kTECOutputBufferFullStatus' value64='-8785'/>
<enum name='kTECPartialCharErr' value64='-8753'/>
<enum name='kTECPluginCreator' value64='1701733238'/>
<enum name='kTECPluginDispatchTableCurrentVersion' value64='65538'/>
<enum name='kTECPluginDispatchTableVersion1' value64='65536'/>
<enum name='kTECPluginDispatchTableVersion1_1' value64='65537'/>
<enum name='kTECPluginDispatchTableVersion1_2' value64='65538'/>
<enum name='kTECPluginManyToOne' value64='1836347247'/>
<enum name='kTECPluginOneToMany' value64='1869901677'/>
<enum name='kTECPluginOneToOne' value64='1869901679'/>
<enum name='kTECPluginSniffObj' value64='1936615782'/>
<enum name='kTECPluginType' value64='1701015655'/>
<enum name='kTECPreferredEncodingFixBit' value64='5'/>
<enum name='kTECPreferredEncodingFixMask' value64='32'/>
<enum name='kTECResourceID' value64='128'/>
<enum name='kTECSignature' value64='1701733238'/>
<enum name='kTECSubTextEncodingsResType' value64='1668707170'/>
<enum name='kTECTableChecksumErr' value64='-8746'/>
<enum name='kTECTableFormatErr' value64='-8747'/>
<enum name='kTECTextRunBitClearFixBit' value64='2'/>
<enum name='kTECTextRunBitClearFixMask' value64='4'/>
<enum name='kTECTextToUnicodeScanFixBit' value64='3'/>
<enum name='kTECTextToUnicodeScanFixMask' value64='8'/>
<enum name='kTECUnicodePluginSignature' value64='1886744169'/>
<enum name='kTECUnmappableElementErr' value64='-8754'/>
<enum name='kTECUsedFallbacksStatus' value64='-8783'/>
<enum name='kTECWebEncodingsResType' value64='1668708194'/>
<enum name='kTEC_MIBEnumDontCare' value64='-1'/>
<enum name='kTMTaskActive' value64='32768'/>
<enum name='kTXNATSUIIsNotInstalledErr' value64='-22016'/>
<enum name='kTXNAlreadyInitializedErr' value64='-22012'/>
<enum name='kTXNAttributeTagInvalidForRunErr' value64='-22009'/>
<enum name='kTXNBadDefaultFileTypeWarning' value64='-22005'/>
<enum name='kTXNCannotAddFrameErr' value64='-22001'/>
<enum name='kTXNCannotSetAutoIndentErr' value64='-22006'/>
<enum name='kTXNCannotTurnTSMOffWhenUsingUnicodeErr' value64='-22013'/>
<enum name='kTXNCopyNotAllowedInEchoModeErr' value64='-22014'/>
<enum name='kTXNDataTypeNotAllowedErr' value64='-22015'/>
<enum name='kTXNEndIterationErr' value64='-22000'/>
<enum name='kTXNIllegalToCrossDataBoundariesErr' value64='-22003'/>
<enum name='kTXNInvalidFrameIDErr' value64='-22002'/>
<enum name='kTXNInvalidRunIndex' value64='-22011'/>
<enum name='kTXNNoMatchErr' value64='-22008'/>
<enum name='kTXNOutsideOfFrameErr' value64='-22018'/>
<enum name='kTXNOutsideOfLineErr' value64='-22017'/>
<enum name='kTXNRunIndexOutofBoundsErr' value64='-22007'/>
<enum name='kTXNSomeOrAllTagsInvalidForRunErr' value64='-22010'/>
<enum name='kTXNUserCanceledOperationErr' value64='-22004'/>
<enum name='kTaskCreationException' value64='16'/>
<enum name='kTaskTerminationException' value64='15'/>
<enum name='kTemporaryFolderType' value64='1952804208'/>
<enum name='kTemporaryItemsInCacheDataFolderType' value64='1987341680'/>
<enum name='kTemporaryItemsInUserDomainFolderType' value64='1952804209'/>
<enum name='kTextCenter' value64='1'/>
<enum name='kTextEncodingANSEL' value64='1537'/>
<enum name='kTextEncodingBaseName' value64='1'/>
<enum name='kTextEncodingBig5' value64='2563'/>
<enum name='kTextEncodingBig5_E' value64='2569'/>
<enum name='kTextEncodingBig5_HKSCS_1999' value64='2566'/>
<enum name='kTextEncodingCNS_11643_92_P1' value64='1617'/>
<enum name='kTextEncodingCNS_11643_92_P2' value64='1618'/>
<enum name='kTextEncodingCNS_11643_92_P3' value64='1619'/>
<enum name='kTextEncodingDOSArabic' value64='1049'/>
<enum name='kTextEncodingDOSBalticRim' value64='1030'/>
<enum name='kTextEncodingDOSCanadianFrench' value64='1048'/>
<enum name='kTextEncodingDOSChineseSimplif' value64='1057'/>
<enum name='kTextEncodingDOSChineseTrad' value64='1059'/>
<enum name='kTextEncodingDOSCyrillic' value64='1043'/>
<enum name='kTextEncodingDOSGreek' value64='1029'/>
<enum name='kTextEncodingDOSGreek1' value64='1041'/>
<enum name='kTextEncodingDOSGreek2' value64='1052'/>
<enum name='kTextEncodingDOSHebrew' value64='1047'/>
<enum name='kTextEncodingDOSIcelandic' value64='1046'/>
<enum name='kTextEncodingDOSJapanese' value64='1056'/>
<enum name='kTextEncodingDOSKorean' value64='1058'/>
<enum name='kTextEncodingDOSLatin1' value64='1040'/>
<enum name='kTextEncodingDOSLatin2' value64='1042'/>
<enum name='kTextEncodingDOSLatinUS' value64='1024'/>
<enum name='kTextEncodingDOSNordic' value64='1050'/>
<enum name='kTextEncodingDOSPortuguese' value64='1045'/>
<enum name='kTextEncodingDOSRussian' value64='1051'/>
<enum name='kTextEncodingDOSThai' value64='1053'/>
<enum name='kTextEncodingDOSTurkish' value64='1044'/>
<enum name='kTextEncodingDefaultFormat' value64='0'/>
<enum name='kTextEncodingDefaultVariant' value64='0'/>
<enum name='kTextEncodingEBCDIC_CP037' value64='3074'/>
<enum name='kTextEncodingEBCDIC_LatinCore' value64='3073'/>
<enum name='kTextEncodingEBCDIC_US' value64='3073'/>
<enum name='kTextEncodingEUC_CN' value64='2352'/>
<enum name='kTextEncodingEUC_JP' value64='2336'/>
<enum name='kTextEncodingEUC_KR' value64='2368'/>
<enum name='kTextEncodingEUC_TW' value64='2353'/>
<enum name='kTextEncodingFormatName' value64='3'/>
<enum name='kTextEncodingFullName' value64='0'/>
<enum name='kTextEncodingGBK_95' value64='1585'/>
<enum name='kTextEncodingGB_18030_2000' value64='1586'/>
<enum name='kTextEncodingGB_18030_2005' value64='1586'/>
<enum name='kTextEncodingGB_2312_80' value64='1584'/>
<enum name='kTextEncodingHZ_GB_2312' value64='2565'/>
<enum name='kTextEncodingISO10646_1993' value64='257'/>
<enum name='kTextEncodingISOLatin1' value64='513'/>
<enum name='kTextEncodingISOLatin10' value64='528'/>
<enum name='kTextEncodingISOLatin2' value64='514'/>
<enum name='kTextEncodingISOLatin3' value64='515'/>
<enum name='kTextEncodingISOLatin4' value64='516'/>
<enum name='kTextEncodingISOLatin5' value64='521'/>
<enum name='kTextEncodingISOLatin6' value64='522'/>
<enum name='kTextEncodingISOLatin7' value64='525'/>
<enum name='kTextEncodingISOLatin8' value64='526'/>
<enum name='kTextEncodingISOLatin9' value64='527'/>
<enum name='kTextEncodingISOLatinArabic' value64='518'/>
<enum name='kTextEncodingISOLatinCyrillic' value64='517'/>
<enum name='kTextEncodingISOLatinGreek' value64='519'/>
<enum name='kTextEncodingISOLatinHebrew' value64='520'/>
<enum name='kTextEncodingISO_2022_CN' value64='2096'/>
<enum name='kTextEncodingISO_2022_CN_EXT' value64='2097'/>
<enum name='kTextEncodingISO_2022_JP' value64='2080'/>
<enum name='kTextEncodingISO_2022_JP_1' value64='2082'/>
<enum name='kTextEncodingISO_2022_JP_2' value64='2081'/>
<enum name='kTextEncodingISO_2022_JP_3' value64='2083'/>
<enum name='kTextEncodingISO_2022_KR' value64='2112'/>
<enum name='kTextEncodingJIS_C6226_78' value64='1572'/>
<enum name='kTextEncodingJIS_X0201_76' value64='1568'/>
<enum name='kTextEncodingJIS_X0208_83' value64='1569'/>
<enum name='kTextEncodingJIS_X0208_90' value64='1570'/>
<enum name='kTextEncodingJIS_X0212_90' value64='1571'/>
<enum name='kTextEncodingJIS_X0213_MenKuTen' value64='1577'/>
<enum name='kTextEncodingKOI8_R' value64='2562'/>
<enum name='kTextEncodingKOI8_U' value64='2568'/>
<enum name='kTextEncodingKSC_5601_87' value64='1600'/>
<enum name='kTextEncodingKSC_5601_92_Johab' value64='1601'/>
<enum name='kTextEncodingMacArabic' value64='4'/>
<enum name='kTextEncodingMacArmenian' value64='24'/>
<enum name='kTextEncodingMacBengali' value64='13'/>
<enum name='kTextEncodingMacBurmese' value64='19'/>
<enum name='kTextEncodingMacCeltic' value64='39'/>
<enum name='kTextEncodingMacCentralEurRoman' value64='29'/>
<enum name='kTextEncodingMacChineseSimp' value64='25'/>
<enum name='kTextEncodingMacChineseTrad' value64='2'/>
<enum name='kTextEncodingMacCroatian' value64='36'/>
<enum name='kTextEncodingMacCyrillic' value64='7'/>
<enum name='kTextEncodingMacDevanagari' value64='9'/>
<enum name='kTextEncodingMacDingbats' value64='34'/>
<enum name='kTextEncodingMacEastEurRoman' value64='29'/>
<enum name='kTextEncodingMacEthiopic' value64='28'/>
<enum name='kTextEncodingMacExtArabic' value64='31'/>
<enum name='kTextEncodingMacFarsi' value64='140'/>
<enum name='kTextEncodingMacGaelic' value64='40'/>
<enum name='kTextEncodingMacGeez' value64='28'/>
<enum name='kTextEncodingMacGeorgian' value64='23'/>
<enum name='kTextEncodingMacGreek' value64='6'/>
<enum name='kTextEncodingMacGujarati' value64='11'/>
<enum name='kTextEncodingMacGurmukhi' value64='10'/>
<enum name='kTextEncodingMacHFS' value64='255'/>
<enum name='kTextEncodingMacHebrew' value64='5'/>
<enum name='kTextEncodingMacIcelandic' value64='37'/>
<enum name='kTextEncodingMacInuit' value64='236'/>
<enum name='kTextEncodingMacJapanese' value64='1'/>
<enum name='kTextEncodingMacKannada' value64='16'/>
<enum name='kTextEncodingMacKeyboardGlyphs' value64='41'/>
<enum name='kTextEncodingMacKhmer' value64='20'/>
<enum name='kTextEncodingMacKorean' value64='3'/>
<enum name='kTextEncodingMacLaotian' value64='22'/>
<enum name='kTextEncodingMacMalayalam' value64='17'/>
<enum name='kTextEncodingMacMongolian' value64='27'/>
<enum name='kTextEncodingMacOriya' value64='12'/>
<enum name='kTextEncodingMacRSymbol' value64='8'/>
<enum name='kTextEncodingMacRoman' value64='0'/>
<enum name='kTextEncodingMacRomanLatin1' value64='2564'/>
<enum name='kTextEncodingMacRomanian' value64='38'/>
<enum name='kTextEncodingMacSimpChinese' value64='25'/>
<enum name='kTextEncodingMacSinhalese' value64='18'/>
<enum name='kTextEncodingMacSymbol' value64='33'/>
<enum name='kTextEncodingMacTamil' value64='14'/>
<enum name='kTextEncodingMacTelugu' value64='15'/>
<enum name='kTextEncodingMacThai' value64='21'/>
<enum name='kTextEncodingMacTibetan' value64='26'/>
<enum name='kTextEncodingMacTradChinese' value64='2'/>
<enum name='kTextEncodingMacTurkish' value64='35'/>
<enum name='kTextEncodingMacUkrainian' value64='152'/>
<enum name='kTextEncodingMacUnicode' value64='126'/>
<enum name='kTextEncodingMacUninterp' value64='32'/>
<enum name='kTextEncodingMacVT100' value64='252'/>
<enum name='kTextEncodingMacVietnamese' value64='30'/>
<enum name='kTextEncodingMultiRun' value64='4095'/>
<enum name='kTextEncodingNextStepJapanese' value64='2818'/>
<enum name='kTextEncodingNextStepLatin' value64='2817'/>
<enum name='kTextEncodingShiftJIS' value64='2561'/>
<enum name='kTextEncodingShiftJIS_X0213' value64='1576'/>
<enum name='kTextEncodingShiftJIS_X0213_00' value64='1576'/>
<enum name='kTextEncodingUS_ASCII' value64='1536'/>
<enum name='kTextEncodingUnicodeDefault' value64='256'/>
<enum name='kTextEncodingUnicodeV10_0' value64='276'/>
<enum name='kTextEncodingUnicodeV11_0' value64='277'/>
<enum name='kTextEncodingUnicodeV1_1' value64='257'/>
<enum name='kTextEncodingUnicodeV2_0' value64='259'/>
<enum name='kTextEncodingUnicodeV2_1' value64='259'/>
<enum name='kTextEncodingUnicodeV3_0' value64='260'/>
<enum name='kTextEncodingUnicodeV3_1' value64='261'/>
<enum name='kTextEncodingUnicodeV3_2' value64='262'/>
<enum name='kTextEncodingUnicodeV4_0' value64='264'/>
<enum name='kTextEncodingUnicodeV5_0' value64='266'/>
<enum name='kTextEncodingUnicodeV5_1' value64='267'/>
<enum name='kTextEncodingUnicodeV6_0' value64='269'/>
<enum name='kTextEncodingUnicodeV6_1' value64='270'/>
<enum name='kTextEncodingUnicodeV6_3' value64='272'/>
<enum name='kTextEncodingUnicodeV7_0' value64='273'/>
<enum name='kTextEncodingUnicodeV8_0' value64='274'/>
<enum name='kTextEncodingUnicodeV9_0' value64='275'/>
<enum name='kTextEncodingUnknown' value64='65535'/>
<enum name='kTextEncodingVISCII' value64='2567'/>
<enum name='kTextEncodingVariantName' value64='2'/>
<enum name='kTextEncodingWindowsANSI' value64='1280'/>
<enum name='kTextEncodingWindowsArabic' value64='1286'/>
<enum name='kTextEncodingWindowsBalticRim' value64='1287'/>
<enum name='kTextEncodingWindowsCyrillic' value64='1282'/>
<enum name='kTextEncodingWindowsGreek' value64='1283'/>
<enum name='kTextEncodingWindowsHebrew' value64='1285'/>
<enum name='kTextEncodingWindowsKoreanJohab' value64='1296'/>
<enum name='kTextEncodingWindowsLatin1' value64='1280'/>
<enum name='kTextEncodingWindowsLatin2' value64='1281'/>
<enum name='kTextEncodingWindowsLatin5' value64='1284'/>
<enum name='kTextEncodingWindowsVietnamese' value64='1288'/>
<enum name='kTextEncodingsFolderType' value64='3295962488'/>
<enum name='kTextFlushDefault' value64='0'/>
<enum name='kTextFlushLeft' value64='-2'/>
<enum name='kTextFlushRight' value64='-1'/>
<enum name='kTextLanguageDontCare' value64='-128'/>
<enum name='kTextMalformedInputErr' value64='-8739'/>
<enum name='kTextRegionDontCare' value64='-128'/>
<enum name='kTextScriptDontCare' value64='-128'/>
<enum name='kTextUndefinedElementErr' value64='-8740'/>
<enum name='kTextUnsupportedEncodingErr' value64='-8738'/>
<enum name='kThemesFolderType' value64='1953000805'/>
<enum name='kThinkCStackBased' value64='5'/>
<enum name='kTooManyIOWindowsErr' value64='-9104'/>
<enum name='kTraceException' value64='9'/>
<enum name='kTrapException' value64='2'/>
<enum name='kTrashFolderType' value64='1953657704'/>
<enum name='kTwoByteCode' value64='2'/>
<enum name='kTwoWayEncryptPassword' value64='6'/>
<enum name='kUCBidiCatArabicNumber' value64='6'/>
<enum name='kUCBidiCatBlockSeparator' value64='8'/>
<enum name='kUCBidiCatBoundaryNeutral' value64='19'/>
<enum name='kUCBidiCatCommonNumberSeparator' value64='7'/>
<enum name='kUCBidiCatEuroNumber' value64='3'/>
<enum name='kUCBidiCatEuroNumberSeparator' value64='4'/>
<enum name='kUCBidiCatEuroNumberTerminator' value64='5'/>
<enum name='kUCBidiCatFirstStrongIsolate' value64='22'/>
<enum name='kUCBidiCatLeftRight' value64='1'/>
<enum name='kUCBidiCatLeftRightEmbedding' value64='13'/>
<enum name='kUCBidiCatLeftRightIsolate' value64='20'/>
<enum name='kUCBidiCatLeftRightOverride' value64='15'/>
<enum name='kUCBidiCatNonSpacingMark' value64='18'/>
<enum name='kUCBidiCatNotApplicable' value64='0'/>
<enum name='kUCBidiCatOtherNeutral' value64='11'/>
<enum name='kUCBidiCatPopDirectionalFormat' value64='17'/>
<enum name='kUCBidiCatPopDirectionalIsolate' value64='23'/>
<enum name='kUCBidiCatRightLeft' value64='2'/>
<enum name='kUCBidiCatRightLeftArabic' value64='12'/>
<enum name='kUCBidiCatRightLeftEmbedding' value64='14'/>
<enum name='kUCBidiCatRightLeftIsolate' value64='21'/>
<enum name='kUCBidiCatRightLeftOverride' value64='16'/>
<enum name='kUCBidiCatSegmentSeparator' value64='9'/>
<enum name='kUCBidiCatWhitespace' value64='10'/>
<enum name='kUCCharPropTypeBidiCategory' value64='3'/>
<enum name='kUCCharPropTypeCombiningClass' value64='2'/>
<enum name='kUCCharPropTypeDecimalDigitValue' value64='4'/>
<enum name='kUCCharPropTypeGenlCategory' value64='1'/>
<enum name='kUCCollateCaseInsensitiveMask' value64='8'/>
<enum name='kUCCollateComposeInsensitiveMask' value64='2'/>
<enum name='kUCCollateDiacritInsensitiveMask' value64='16'/>
<enum name='kUCCollateDigitsAsNumberMask' value64='131072'/>
<enum name='kUCCollateDigitsOverrideMask' value64='65536'/>
<enum name='kUCCollatePunctuationSignificantMask' value64='32768'/>
<enum name='kUCCollateStandardOptions' value64='6'/>
<enum name='kUCCollateTypeHFSExtended' value64='1'/>
<enum name='kUCCollateTypeMask' value64='4278190080'/>
<enum name='kUCCollateTypeShiftBits' value64='24'/>
<enum name='kUCCollateTypeSourceMask' value64='255'/>
<enum name='kUCCollateWidthInsensitiveMask' value64='4'/>
<enum name='kUCGenlCatLetterLowercase' value64='15'/>
<enum name='kUCGenlCatLetterModifier' value64='17'/>
<enum name='kUCGenlCatLetterOther' value64='18'/>
<enum name='kUCGenlCatLetterTitlecase' value64='16'/>
<enum name='kUCGenlCatLetterUppercase' value64='14'/>
<enum name='kUCGenlCatMarkEnclosing' value64='7'/>
<enum name='kUCGenlCatMarkNonSpacing' value64='5'/>
<enum name='kUCGenlCatMarkSpacingCombining' value64='6'/>
<enum name='kUCGenlCatNumberDecimalDigit' value64='8'/>
<enum name='kUCGenlCatNumberLetter' value64='9'/>
<enum name='kUCGenlCatNumberOther' value64='10'/>
<enum name='kUCGenlCatOtherControl' value64='1'/>
<enum name='kUCGenlCatOtherFormat' value64='2'/>
<enum name='kUCGenlCatOtherNotAssigned' value64='0'/>
<enum name='kUCGenlCatOtherPrivateUse' value64='4'/>
<enum name='kUCGenlCatOtherSurrogate' value64='3'/>
<enum name='kUCGenlCatPunctClose' value64='23'/>
<enum name='kUCGenlCatPunctConnector' value64='20'/>
<enum name='kUCGenlCatPunctDash' value64='21'/>
<enum name='kUCGenlCatPunctFinalQuote' value64='25'/>
<enum name='kUCGenlCatPunctInitialQuote' value64='24'/>
<enum name='kUCGenlCatPunctOpen' value64='22'/>
<enum name='kUCGenlCatPunctOther' value64='26'/>
<enum name='kUCGenlCatSeparatorLine' value64='12'/>
<enum name='kUCGenlCatSeparatorParagraph' value64='13'/>
<enum name='kUCGenlCatSeparatorSpace' value64='11'/>
<enum name='kUCGenlCatSymbolCurrency' value64='29'/>
<enum name='kUCGenlCatSymbolMath' value64='28'/>
<enum name='kUCGenlCatSymbolModifier' value64='30'/>
<enum name='kUCGenlCatSymbolOther' value64='31'/>
<enum name='kUCHighSurrogateRangeEnd' value64='56319'/>
<enum name='kUCHighSurrogateRangeStart' value64='55296'/>
<enum name='kUCKeyActionAutoKey' value64='2'/>
<enum name='kUCKeyActionDisplay' value64='3'/>
<enum name='kUCKeyActionDown' value64='0'/>
<enum name='kUCKeyActionUp' value64='1'/>
<enum name='kUCKeyLayoutFeatureInfoFormat' value64='8193'/>
<enum name='kUCKeyLayoutHeaderFormat' value64='4098'/>
<enum name='kUCKeyModifiersToTableNumFormat' value64='12289'/>
<enum name='kUCKeyOutputGetIndexMask' value64='16383'/>
<enum name='kUCKeyOutputSequenceIndexMask' value64='32768'/>
<enum name='kUCKeyOutputStateIndexMask' value64='16384'/>
<enum name='kUCKeyOutputTestForIndexMask' value64='49152'/>
<enum name='kUCKeySequenceDataIndexFormat' value64='28673'/>
<enum name='kUCKeyStateEntryRangeFormat' value64='2'/>
<enum name='kUCKeyStateEntryTerminalFormat' value64='1'/>
<enum name='kUCKeyStateRecordsIndexFormat' value64='20481'/>
<enum name='kUCKeyStateTerminatorsFormat' value64='24577'/>
<enum name='kUCKeyToCharTableIndexFormat' value64='16385'/>
<enum name='kUCKeyTranslateNoDeadKeysBit' value64='0'/>
<enum name='kUCKeyTranslateNoDeadKeysMask' value64='1'/>
<enum name='kUCLowSurrogateRangeEnd' value64='57343'/>
<enum name='kUCLowSurrogateRangeStart' value64='56320'/>
<enum name='kUCOutputBufferTooSmall' value64='-25340'/>
<enum name='kUCTSDirectionNext' value64='0'/>
<enum name='kUCTSDirectionPrevious' value64='1'/>
<enum name='kUCTSNoKeysAddedToObjectErr' value64='-25342'/>
<enum name='kUCTSOptionsDataIsOrderedMask' value64='2'/>
<enum name='kUCTSOptionsNoneMask' value64='0'/>
<enum name='kUCTSOptionsReleaseStringMask' value64='1'/>
<enum name='kUCTSSearchListErr' value64='-25343'/>
<enum name='kUCTextBreakCharMask' value64='1'/>
<enum name='kUCTextBreakClusterMask' value64='4'/>
<enum name='kUCTextBreakGoBackwardsMask' value64='2'/>
<enum name='kUCTextBreakIterateMask' value64='4'/>
<enum name='kUCTextBreakLeadingEdgeMask' value64='1'/>
<enum name='kUCTextBreakLineMask' value64='64'/>
<enum name='kUCTextBreakLocatorMissingType' value64='-25341'/>
<enum name='kUCTextBreakParagraphMask' value64='256'/>
<enum name='kUCTextBreakWordMask' value64='16'/>
<enum name='kUCTokenNotFound' value64='-25346'/>
<enum name='kUCTokenizerIterationFinished' value64='-25344'/>
<enum name='kUCTokenizerUnknownLang' value64='-25345'/>
<enum name='kUCTypeSelectMaxListSize' value64='4294967295'/>
<enum name='kURL68kNotSupportedError' value64='-30788'/>
<enum name='kURLAccessNotAvailableError' value64='-30787'/>
<enum name='kURLAuthenticationError' value64='-30776'/>
<enum name='kURLDestinationExistsError' value64='-30772'/>
<enum name='kURLExtensionFailureError' value64='-30785'/>
<enum name='kURLFileEmptyError' value64='-30783'/>
<enum name='kURLInvalidCallError' value64='-30781'/>
<enum name='kURLInvalidConfigurationError' value64='-30786'/>
<enum name='kURLInvalidURLError' value64='-30773'/>
<enum name='kURLInvalidURLReferenceError' value64='-30770'/>
<enum name='kURLProgressAlreadyDisplayedError' value64='-30771'/>
<enum name='kURLPropertyBufferTooSmallError' value64='-30779'/>
<enum name='kURLPropertyNotYetKnownError' value64='-30777'/>
<enum name='kURLServerBusyError' value64='-30775'/>
<enum name='kURLUnknownPropertyError' value64='-30778'/>
<enum name='kURLUnsettablePropertyError' value64='-30780'/>
<enum name='kURLUnsupportedSchemeError' value64='-30774'/>
<enum name='kUSBAbortedError' value64='-6982'/>
<enum name='kUSBAlreadyOpenErr' value64='-6991'/>
<enum name='kUSBBadDispatchTable' value64='-6950'/>
<enum name='kUSBBitstufErr' value64='-6914'/>
<enum name='kUSBBufOvrRunErr' value64='-6904'/>
<enum name='kUSBBufUnderRunErr' value64='-6903'/>
<enum name='kUSBCRCErr' value64='-6915'/>
<enum name='kUSBCompletionError' value64='-6984'/>
<enum name='kUSBDataToggleErr' value64='-6913'/>
<enum name='kUSBDeviceBusy' value64='-6977'/>
<enum name='kUSBDeviceDisconnected' value64='-6972'/>
<enum name='kUSBDeviceErr' value64='-6989'/>
<enum name='kUSBDeviceNotSuspended' value64='-6973'/>
<enum name='kUSBDevicePowerProblem' value64='-6976'/>
<enum name='kUSBDeviceSuspended' value64='-6974'/>
<enum name='kUSBEndpointStallErr' value64='-6912'/>
<enum name='kUSBFlagsError' value64='-6983'/>
<enum name='kUSBIncorrectTypeErr' value64='-6995'/>
<enum name='kUSBInternalErr' value64='-6999'/>
<enum name='kUSBInternalReserved1' value64='-6960'/>
<enum name='kUSBInternalReserved10' value64='-6951'/>
<enum name='kUSBInternalReserved2' value64='-6959'/>
<enum name='kUSBInternalReserved3' value64='-6958'/>
<enum name='kUSBInternalReserved4' value64='-6957'/>
<enum name='kUSBInternalReserved5' value64='-6956'/>
<enum name='kUSBInternalReserved6' value64='-6955'/>
<enum name='kUSBInternalReserved7' value64='-6954'/>
<enum name='kUSBInternalReserved8' value64='-6953'/>
<enum name='kUSBInternalReserved9' value64='-6952'/>
<enum name='kUSBInvalidBuffer' value64='-6975'/>
<enum name='kUSBLinkErr' value64='-6916'/>
<enum name='kUSBNoBandwidthError' value64='-6981'/>
<enum name='kUSBNoDelay' value64='0'/>
<enum name='kUSBNoDeviceErr' value64='-6990'/>
<enum name='kUSBNoErr' value64='0'/>
<enum name='kUSBNoTran' value64='0'/>
<enum name='kUSBNotFound' value64='-6987'/>
<enum name='kUSBNotHandled' value64='-6987'/>
<enum name='kUSBNotRespondingErr' value64='-6911'/>
<enum name='kUSBNotSent1Err' value64='-6902'/>
<enum name='kUSBNotSent2Err' value64='-6901'/>
<enum name='kUSBOutOfMemoryErr' value64='-6988'/>
<enum name='kUSBOverRunErr' value64='-6908'/>
<enum name='kUSBPBLengthError' value64='-6985'/>
<enum name='kUSBPBVersionError' value64='-6986'/>
<enum name='kUSBPIDCheckErr' value64='-6910'/>
<enum name='kUSBPending' value64='1'/>
<enum name='kUSBPipeIdleError' value64='-6980'/>
<enum name='kUSBPipeStalledError' value64='-6979'/>
<enum name='kUSBPortDisabled' value64='-6969'/>
<enum name='kUSBQueueAborted' value64='-6970'/>
<enum name='kUSBQueueFull' value64='-6948'/>
<enum name='kUSBRes1Err' value64='-6906'/>
<enum name='kUSBRes2Err' value64='-6905'/>
<enum name='kUSBRqErr' value64='-6994'/>
<enum name='kUSBTimedOut' value64='-6971'/>
<enum name='kUSBTooManyPipesErr' value64='-6996'/>
<enum name='kUSBTooManyTransactionsErr' value64='-6992'/>
<enum name='kUSBUnderRunErr' value64='-6907'/>
<enum name='kUSBUnknownDeviceErr' value64='-6998'/>
<enum name='kUSBUnknownInterfaceErr' value64='-6978'/>
<enum name='kUSBUnknownNotification' value64='-6949'/>
<enum name='kUSBUnknownPipeErr' value64='-6997'/>
<enum name='kUSBUnknownRequestErr' value64='-6993'/>
<enum name='kUSBWrongPIDErr' value64='-6909'/>
<enum name='kUTCDefaultOptions' value64='0'/>
<enum name='kUTCOverflowErr' value64='-8851'/>
<enum name='kUTCUnderflowErr' value64='-8850'/>
<enum name='kUnicode16BitFormat' value64='0'/>
<enum name='kUnicode32BitFormat' value64='3'/>
<enum name='kUnicodeByteOrderMark' value64='65279'/>
<enum name='kUnicodeCanonicalCompVariant' value64='3'/>
<enum name='kUnicodeCanonicalDecompVariant' value64='2'/>
<enum name='kUnicodeCollationClass' value64='1969450860'/>
<enum name='kUnicodeDefaultDirection' value64='0'/>
<enum name='kUnicodeDefaultDirectionMask' value64='0'/>
<enum name='kUnicodeDirectionalityBits' value64='2'/>
<enum name='kUnicodeDirectionalityMask' value64='12'/>
<enum name='kUnicodeFallbackCustomFirst' value64='3'/>
<enum name='kUnicodeFallbackCustomOnly' value64='1'/>
<enum name='kUnicodeFallbackDefaultFirst' value64='2'/>
<enum name='kUnicodeFallbackDefaultOnly' value64='0'/>
<enum name='kUnicodeFallbackInterruptSafeMask' value64='4'/>
<enum name='kUnicodeFallbackSequencingBits' value64='0'/>
<enum name='kUnicodeFallbackSequencingMask' value64='3'/>
<enum name='kUnicodeForceASCIIRangeBit' value64='9'/>
<enum name='kUnicodeForceASCIIRangeMask' value64='512'/>
<enum name='kUnicodeHFSPlusCompVariant' value64='9'/>
<enum name='kUnicodeHFSPlusDecompVariant' value64='8'/>
<enum name='kUnicodeKeepInfoBit' value64='1'/>
<enum name='kUnicodeKeepInfoMask' value64='2'/>
<enum name='kUnicodeKeepSameEncodingBit' value64='8'/>
<enum name='kUnicodeKeepSameEncodingMask' value64='256'/>
<enum name='kUnicodeLeftToRight' value64='1'/>
<enum name='kUnicodeLeftToRightMask' value64='4'/>
<enum name='kUnicodeLooseMappingsBit' value64='5'/>
<enum name='kUnicodeLooseMappingsMask' value64='32'/>
<enum name='kUnicodeMapLineFeedToReturnBit' value64='12'/>
<enum name='kUnicodeMapLineFeedToReturnMask' value64='4096'/>
<enum name='kUnicodeMatchOtherBaseBit' value64='3'/>
<enum name='kUnicodeMatchOtherBaseMask' value64='8'/>
<enum name='kUnicodeMatchOtherFormatBit' value64='5'/>
<enum name='kUnicodeMatchOtherFormatMask' value64='32'/>
<enum name='kUnicodeMatchOtherVariantBit' value64='4'/>
<enum name='kUnicodeMatchOtherVariantMask' value64='16'/>
<enum name='kUnicodeMatchUnicodeBaseBit' value64='0'/>
<enum name='kUnicodeMatchUnicodeBaseMask' value64='1'/>
<enum name='kUnicodeMatchUnicodeFormatBit' value64='2'/>
<enum name='kUnicodeMatchUnicodeFormatMask' value64='4'/>
<enum name='kUnicodeMatchUnicodeVariantBit' value64='1'/>
<enum name='kUnicodeMatchUnicodeVariantMask' value64='2'/>
<enum name='kUnicodeMaxDecomposedVariant' value64='2'/>
<enum name='kUnicodeNoCompatibilityVariant' value64='1'/>
<enum name='kUnicodeNoComposedVariant' value64='3'/>
<enum name='kUnicodeNoCorporateVariant' value64='4'/>
<enum name='kUnicodeNoHalfwidthCharsBit' value64='10'/>
<enum name='kUnicodeNoHalfwidthCharsMask' value64='1024'/>
<enum name='kUnicodeNoSubset' value64='0'/>
<enum name='kUnicodeNormalizationFormC' value64='3'/>
<enum name='kUnicodeNormalizationFormD' value64='5'/>
<enum name='kUnicodeNotAChar' value64='65535'/>
<enum name='kUnicodeObjectReplacement' value64='65532'/>
<enum name='kUnicodeReplacementChar' value64='65533'/>
<enum name='kUnicodeRightToLeft' value64='2'/>
<enum name='kUnicodeRightToLeftMask' value64='8'/>
<enum name='kUnicodeSCSUFormat' value64='8'/>
<enum name='kUnicodeStringUnterminatedBit' value64='6'/>
<enum name='kUnicodeStringUnterminatedMask' value64='64'/>
<enum name='kUnicodeSwappedByteOrderMark' value64='65534'/>
<enum name='kUnicodeTextBreakClass' value64='1969386091'/>
<enum name='kUnicodeTextRunBit' value64='7'/>
<enum name='kUnicodeTextRunHeuristicsBit' value64='11'/>
<enum name='kUnicodeTextRunHeuristicsMask' value64='2048'/>
<enum name='kUnicodeTextRunMask' value64='128'/>
<enum name='kUnicodeUTF16BEFormat' value64='4'/>
<enum name='kUnicodeUTF16Format' value64='0'/>
<enum name='kUnicodeUTF16LEFormat' value64='5'/>
<enum name='kUnicodeUTF32BEFormat' value64='6'/>
<enum name='kUnicodeUTF32Format' value64='3'/>
<enum name='kUnicodeUTF32LEFormat' value64='7'/>
<enum name='kUnicodeUTF7Format' value64='1'/>
<enum name='kUnicodeUTF8Format' value64='2'/>
<enum name='kUnicodeUseExternalEncodingFormBit' value64='13'/>
<enum name='kUnicodeUseExternalEncodingFormMask' value64='8192'/>
<enum name='kUnicodeUseFallbacksBit' value64='0'/>
<enum name='kUnicodeUseFallbacksMask' value64='1'/>
<enum name='kUnicodeUseHFSPlusMapping' value64='4'/>
<enum name='kUnicodeUseLatestMapping' value64='-1'/>
<enum name='kUnicodeVerticalFormBit' value64='4'/>
<enum name='kUnicodeVerticalFormMask' value64='16'/>
<enum name='kUnknownException' value64='0'/>
<enum name='kUnmappedMemoryException' value64='4'/>
<enum name='kUnresolvablePageFaultException' value64='7'/>
<enum name='kUnsupportedCardErr' value64='-9098'/>
<enum name='kUnsupportedFunctionErr' value64='-9072'/>
<enum name='kUnsupportedModeErr' value64='-9073'/>
<enum name='kUnsupportedVsErr' value64='-9090'/>
<enum name='kUseCurrentISA' value64='0'/>
<enum name='kUseNativeISA' value64='4'/>
<enum name='kUsePremadeThread' value64='2'/>
<enum name='kUseWidePositioning' value64='256'/>
<enum name='kUserDomain' value64='-32763'/>
<enum name='kUserSpecificTmpFolderType' value64='1970564464'/>
<enum name='kUsersFolderType' value64='1970500211'/>
<enum name='kUtilitiesFolderType' value64='1970563524'/>
<enum name='kVCBFlagsHFSPlusAPIsBit' value64='4'/>
<enum name='kVCBFlagsHFSPlusAPIsMask' value64='16'/>
<enum name='kVCBFlagsHardwareGoneBit' value64='5'/>
<enum name='kVCBFlagsHardwareGoneMask' value64='32'/>
<enum name='kVCBFlagsIdleFlushBit' value64='3'/>
<enum name='kVCBFlagsIdleFlushMask' value64='8'/>
<enum name='kVCBFlagsVolumeDirtyBit' value64='15'/>
<enum name='kVCBFlagsVolumeDirtyMask' value64='32768'/>
<enum name='kVLibTag2' value64='1447848290'/>
<enum name='kVoicesFolderType' value64='1719037795'/>
<enum name='kVolumeRootFolderType' value64='1919905652'/>
<enum name='kVolumeSettingsFolderType' value64='1987274340'/>
<enum name='kWhereToEmptyTrashFolderType' value64='1701671028'/>
<enum name='kWidePosOffsetBit' value64='8'/>
<enum name='kWidgetsFolderType' value64='2003068788'/>
<enum name='kWindowsLatin1PalmVariant' value64='1'/>
<enum name='kWindowsLatin1StandardVariant' value64='0'/>
<enum name='kWriteFailureErr' value64='-9069'/>
<enum name='kWriteProtectedErr' value64='-9075'/>
<enum name='kWriteReference' value64='0'/>
<enum name='kX86ISA' value64='2'/>
<enum name='kX86RTA' value64='32'/>
<enum name='kXLibTag1' value64='-263364253'/>
<enum name='kXLibVersion' value64='1'/>
<enum name='kadministratorUser' value64='1'/>
<enum name='kernelAlreadyFreeErr' value64='-2421'/>
<enum name='kernelAsyncReceiveLimitErr' value64='-2414'/>
<enum name='kernelAsyncSendLimitErr' value64='-2413'/>
<enum name='kernelAttributeErr' value64='-2412'/>
<enum name='kernelCanceledErr' value64='-2402'/>
<enum name='kernelDeletePermissionErr' value64='-2410'/>
<enum name='kernelExceptionErr' value64='-2418'/>
<enum name='kernelExecutePermissionErr' value64='-2409'/>
<enum name='kernelExecutionLevelErr' value64='-2411'/>
<enum name='kernelIDErr' value64='-2419'/>
<enum name='kernelInUseErr' value64='-2416'/>
<enum name='kernelIncompleteErr' value64='-2401'/>
<enum name='kernelObjectExistsErr' value64='-2406'/>
<enum name='kernelOptionsErr' value64='-2403'/>
<enum name='kernelPrivilegeErr' value64='-2404'/>
<enum name='kernelReadPermissionErr' value64='-2408'/>
<enum name='kernelReturnValueErr' value64='-2422'/>
<enum name='kernelTerminatedErr' value64='-2417'/>
<enum name='kernelTimeoutErr' value64='-2415'/>
<enum name='kernelUnrecoverableErr' value64='-2499'/>
<enum name='kernelUnsupportedErr' value64='-2405'/>
<enum name='kernelWritePermissionErr' value64='-2407'/>
<enum name='kfullPrivileges' value64='458759'/>
<enum name='kiMovieFolderType' value64='1768779638'/>
<enum name='kiMoviePlugInsFolderType' value64='1768779881'/>
<enum name='kiMovieSoundEffectsFolderType' value64='1768780645'/>
<enum name='kioACAccessBlankAccessBit' value64='28'/>
<enum name='kioACAccessBlankAccessMask' value64='268435456'/>
<enum name='kioACAccessEveryoneReadBit' value64='17'/>
<enum name='kioACAccessEveryoneReadMask' value64='131072'/>
<enum name='kioACAccessEveryoneSearchBit' value64='16'/>
<enum name='kioACAccessEveryoneSearchMask' value64='65536'/>
<enum name='kioACAccessEveryoneWriteBit' value64='18'/>
<enum name='kioACAccessEveryoneWriteMask' value64='262144'/>
<enum name='kioACAccessGroupReadBit' value64='9'/>
<enum name='kioACAccessGroupReadMask' value64='512'/>
<enum name='kioACAccessGroupSearchBit' value64='8'/>
<enum name='kioACAccessGroupSearchMask' value64='256'/>
<enum name='kioACAccessGroupWriteBit' value64='10'/>
<enum name='kioACAccessGroupWriteMask' value64='1024'/>
<enum name='kioACAccessOwnerBit' value64='31'/>
<enum name='kioACAccessOwnerMask' value64='-2147483648'/>
<enum name='kioACAccessOwnerReadBit' value64='1'/>
<enum name='kioACAccessOwnerReadMask' value64='2'/>
<enum name='kioACAccessOwnerSearchBit' value64='0'/>
<enum name='kioACAccessOwnerSearchMask' value64='1'/>
<enum name='kioACAccessOwnerWriteBit' value64='2'/>
<enum name='kioACAccessOwnerWriteMask' value64='4'/>
<enum name='kioACAccessUserReadBit' value64='25'/>
<enum name='kioACAccessUserReadMask' value64='33554432'/>
<enum name='kioACAccessUserSearchBit' value64='24'/>
<enum name='kioACAccessUserSearchMask' value64='16777216'/>
<enum name='kioACAccessUserWriteBit' value64='26'/>
<enum name='kioACAccessUserWriteMask' value64='67108864'/>
<enum name='kioACUserNoMakeChangesBit' value64='2'/>
<enum name='kioACUserNoMakeChangesMask' value64='4'/>
<enum name='kioACUserNoSeeFilesBit' value64='1'/>
<enum name='kioACUserNoSeeFilesMask' value64='2'/>
<enum name='kioACUserNoSeeFolderBit' value64='0'/>
<enum name='kioACUserNoSeeFolderMask' value64='1'/>
<enum name='kioACUserNotOwnerBit' value64='7'/>
<enum name='kioACUserNotOwnerMask' value64='128'/>
<enum name='kioFCBFileLockedBit' value64='13'/>
<enum name='kioFCBFileLockedMask' value64='8192'/>
<enum name='kioFCBLargeFileBit' value64='11'/>
<enum name='kioFCBLargeFileMask' value64='2048'/>
<enum name='kioFCBModifiedBit' value64='15'/>
<enum name='kioFCBModifiedMask' value64='32768'/>
<enum name='kioFCBOwnClumpBit' value64='14'/>
<enum name='kioFCBOwnClumpMask' value64='16384'/>
<enum name='kioFCBResourceBit' value64='9'/>
<enum name='kioFCBResourceMask' value64='512'/>
<enum name='kioFCBSharedWriteBit' value64='12'/>
<enum name='kioFCBSharedWriteMask' value64='4096'/>
<enum name='kioFCBWriteBit' value64='8'/>
<enum name='kioFCBWriteLockedBit' value64='10'/>
<enum name='kioFCBWriteLockedMask' value64='1024'/>
<enum name='kioFCBWriteMask' value64='256'/>
<enum name='kioFlAttribCopyProtBit' value64='6'/>
<enum name='kioFlAttribCopyProtMask' value64='64'/>
<enum name='kioFlAttribDataOpenBit' value64='3'/>
<enum name='kioFlAttribDataOpenMask' value64='8'/>
<enum name='kioFlAttribDirBit' value64='4'/>
<enum name='kioFlAttribDirMask' value64='16'/>
<enum name='kioFlAttribFileOpenBit' value64='7'/>
<enum name='kioFlAttribFileOpenMask' value64='128'/>
<enum name='kioFlAttribInSharedBit' value64='2'/>
<enum name='kioFlAttribInSharedMask' value64='4'/>
<enum name='kioFlAttribLockedBit' value64='0'/>
<enum name='kioFlAttribLockedMask' value64='1'/>
<enum name='kioFlAttribMountedBit' value64='3'/>
<enum name='kioFlAttribMountedMask' value64='8'/>
<enum name='kioFlAttribResOpenBit' value64='2'/>
<enum name='kioFlAttribResOpenMask' value64='4'/>
<enum name='kioFlAttribSharePointBit' value64='5'/>
<enum name='kioFlAttribSharePointMask' value64='32'/>
<enum name='kioVAtrbDefaultVolumeBit' value64='5'/>
<enum name='kioVAtrbDefaultVolumeMask' value64='32'/>
<enum name='kioVAtrbFilesOpenBit' value64='6'/>
<enum name='kioVAtrbFilesOpenMask' value64='64'/>
<enum name='kioVAtrbHardwareLockedBit' value64='7'/>
<enum name='kioVAtrbHardwareLockedMask' value64='128'/>
<enum name='kioVAtrbSoftwareLockedBit' value64='15'/>
<enum name='kioVAtrbSoftwareLockedMask' value64='32768'/>
<enum name='knoGroup' value64='0'/>
<enum name='knoUser' value64='0'/>
<enum name='kownerPrivileges' value64='7'/>
<enum name='laDictionaryNotOpenedErr' value64='-6992'/>
<enum name='laDictionaryTooManyErr' value64='-6994'/>
<enum name='laDictionaryUnknownErr' value64='-6993'/>
<enum name='laEngineNotFoundErr' value64='-7000'/>
<enum name='laEnvironmentBusyErr' value64='-6985'/>
<enum name='laEnvironmentExistErr' value64='-6987'/>
<enum name='laEnvironmentNotFoundErr' value64='-6986'/>
<enum name='laFailAnalysisErr' value64='-6990'/>
<enum name='laInvalidPathErr' value64='-6988'/>
<enum name='laNoMoreMorphemeErr' value64='-6989'/>
<enum name='laPropertyErr' value64='-6999'/>
<enum name='laPropertyIsReadOnlyErr' value64='-6997'/>
<enum name='laPropertyNotFoundErr' value64='-6998'/>
<enum name='laPropertyUnknownErr' value64='-6996'/>
<enum name='laPropertyValueErr' value64='-6995'/>
<enum name='laTextOverFlowErr' value64='-6991'/>
<enum name='laTooSmallBufferErr' value64='-6984'/>
<enum name='langAfricaans' value64='141'/>
<enum name='langAfrikaans' value64='141'/>
<enum name='langAlbanian' value64='36'/>
<enum name='langAmharic' value64='85'/>
<enum name='langArabic' value64='12'/>
<enum name='langArmenian' value64='51'/>
<enum name='langAssamese' value64='68'/>
<enum name='langAymara' value64='134'/>
<enum name='langAzerbaijanAr' value64='50'/>
<enum name='langAzerbaijanRoman' value64='150'/>
<enum name='langAzerbaijani' value64='49'/>
<enum name='langBasque' value64='129'/>
<enum name='langBelorussian' value64='46'/>
<enum name='langBengali' value64='67'/>
<enum name='langBreton' value64='142'/>
<enum name='langBulgarian' value64='44'/>
<enum name='langBurmese' value64='77'/>
<enum name='langByelorussian' value64='46'/>
<enum name='langCatalan' value64='130'/>
<enum name='langChewa' value64='92'/>
<enum name='langChinese' value64='19'/>
<enum name='langCroatian' value64='18'/>
<enum name='langCzech' value64='38'/>
<enum name='langDanish' value64='7'/>
<enum name='langDutch' value64='4'/>
<enum name='langDzongkha' value64='137'/>
<enum name='langEnglish' value64='0'/>
<enum name='langEsperanto' value64='94'/>
<enum name='langEstonian' value64='27'/>
<enum name='langFaeroese' value64='30'/>
<enum name='langFaroese' value64='30'/>
<enum name='langFarsi' value64='31'/>
<enum name='langFinnish' value64='13'/>
<enum name='langFlemish' value64='34'/>
<enum name='langFrench' value64='1'/>
<enum name='langGalician' value64='140'/>
<enum name='langGalla' value64='87'/>
<enum name='langGeorgian' value64='52'/>
<enum name='langGerman' value64='2'/>
<enum name='langGreek' value64='14'/>
<enum name='langGreekAncient' value64='148'/>
<enum name='langGreekPoly' value64='148'/>
<enum name='langGreenlandic' value64='149'/>
<enum name='langGuarani' value64='133'/>
<enum name='langGujarati' value64='69'/>
<enum name='langHebrew' value64='10'/>
<enum name='langHindi' value64='21'/>
<enum name='langHungarian' value64='26'/>
<enum name='langIcelandic' value64='15'/>
<enum name='langIndonesian' value64='81'/>
<enum name='langInuktitut' value64='143'/>
<enum name='langIrish' value64='35'/>
<enum name='langIrishGaelic' value64='35'/>
<enum name='langIrishGaelicScript' value64='146'/>
<enum name='langItalian' value64='3'/>
<enum name='langJapanese' value64='11'/>
<enum name='langJavaneseRom' value64='138'/>
<enum name='langKannada' value64='73'/>
<enum name='langKashmiri' value64='61'/>
<enum name='langKazakh' value64='48'/>
<enum name='langKhmer' value64='78'/>
<enum name='langKinyarwanda' value64='90'/>
<enum name='langKirghiz' value64='54'/>
<enum name='langKorean' value64='23'/>
<enum name='langKurdish' value64='60'/>
<enum name='langLao' value64='79'/>
<enum name='langLappish' value64='29'/>
<enum name='langLapponian' value64='29'/>
<enum name='langLatin' value64='131'/>
<enum name='langLatvian' value64='28'/>
<enum name='langLettish' value64='28'/>
<enum name='langLithuanian' value64='24'/>
<enum name='langMacedonian' value64='43'/>
<enum name='langMalagasy' value64='93'/>
<enum name='langMalayArabic' value64='84'/>
<enum name='langMalayRoman' value64='83'/>
<enum name='langMalayalam' value64='72'/>
<enum name='langMalta' value64='16'/>
<enum name='langMaltese' value64='16'/>
<enum name='langManxGaelic' value64='145'/>
<enum name='langMarathi' value64='66'/>
<enum name='langMoldavian' value64='53'/>
<enum name='langMongolian' value64='57'/>
<enum name='langMongolianCyr' value64='58'/>
<enum name='langNepali' value64='64'/>
<enum name='langNorwegian' value64='9'/>
<enum name='langNyanja' value64='92'/>
<enum name='langNynorsk' value64='151'/>
<enum name='langOriya' value64='71'/>
<enum name='langOromo' value64='87'/>
<enum name='langPashto' value64='59'/>
<enum name='langPersian' value64='31'/>
<enum name='langPolish' value64='25'/>
<enum name='langPortugese' value64='8'/>
<enum name='langPortuguese' value64='8'/>
<enum name='langPunjabi' value64='70'/>
<enum name='langQuechua' value64='132'/>
<enum name='langRomanian' value64='37'/>
<enum name='langRuanda' value64='90'/>
<enum name='langRundi' value64='91'/>
<enum name='langRussian' value64='32'/>
<enum name='langSaamisk' value64='29'/>
<enum name='langSami' value64='29'/>
<enum name='langSanskrit' value64='65'/>
<enum name='langScottishGaelic' value64='144'/>
<enum name='langSerbian' value64='42'/>
<enum name='langSimpChinese' value64='33'/>
<enum name='langSindhi' value64='62'/>
<enum name='langSinhalese' value64='76'/>
<enum name='langSlovak' value64='39'/>
<enum name='langSlovenian' value64='40'/>
<enum name='langSomali' value64='88'/>
<enum name='langSpanish' value64='6'/>
<enum name='langSundaneseRom' value64='139'/>
<enum name='langSwahili' value64='89'/>
<enum name='langSwedish' value64='5'/>
<enum name='langTagalog' value64='82'/>
<enum name='langTajiki' value64='55'/>
<enum name='langTamil' value64='74'/>
<enum name='langTatar' value64='135'/>
<enum name='langTelugu' value64='75'/>
<enum name='langThai' value64='22'/>
<enum name='langTibetan' value64='63'/>
<enum name='langTigrinya' value64='86'/>
<enum name='langTongan' value64='147'/>
<enum name='langTradChinese' value64='19'/>
<enum name='langTurkish' value64='17'/>
<enum name='langTurkmen' value64='56'/>
<enum name='langUighur' value64='136'/>
<enum name='langUkrainian' value64='45'/>
<enum name='langUnspecified' value64='32767'/>
<enum name='langUrdu' value64='20'/>
<enum name='langUzbek' value64='47'/>
<enum name='langVietnamese' value64='80'/>
<enum name='langWelsh' value64='128'/>
<enum name='langYiddish' value64='41'/>
<enum name='langYugoslavian' value64='18'/>
<enum name='lapProtErr' value64='-94'/>
<enum name='lastDskErr' value64='-64'/>
<enum name='leftOverChars' value64='2'/>
<enum name='leftSingGuillemet' value64='220'/>
<enum name='limitReachedErr' value64='-30549'/>
<enum name='localOnlyErr' value64='-905'/>
<enum name='lockPortBitsBadPortErr' value64='-8984'/>
<enum name='lockPortBitsBadSurfaceErr' value64='-8980'/>
<enum name='lockPortBitsSurfaceLostErr' value64='-8985'/>
<enum name='lockPortBitsWindowClippedErr' value64='-8983'/>
<enum name='lockPortBitsWindowMovedErr' value64='-8981'/>
<enum name='lockPortBitsWindowResizedErr' value64='-8982'/>
<enum name='lockPortBitsWrongGDeviceErr' value64='-8991'/>
<enum name='longDate' value64='1'/>
<enum name='longDateFound' value64='1'/>
<enum name='longDay' value64='0'/>
<enum name='longMonth' value64='2'/>
<enum name='longWeek' value64='1'/>
<enum name='longYear' value64='3'/>
<enum name='mBarNFnd' value64='-126'/>
<enum name='mFulErr' value64='-41'/>
<enum name='macron' value64='248'/>
<enum name='mapChanged' value64='32'/>
<enum name='mapChangedBit' value64='5'/>
<enum name='mapCompact' value64='64'/>
<enum name='mapCompactBit' value64='6'/>
<enum name='mapReadErr' value64='-199'/>
<enum name='mapReadOnly' value64='128'/>
<enum name='mapReadOnlyBit' value64='7'/>
<enum name='matrixErr' value64='-2203'/>
<enum name='maxCountry' value64='108'/>
<enum name='maxDateField' value64='10'/>
<enum name='maxSizeToGrowTooSmall' value64='-2027'/>
<enum name='mdy' value64='0'/>
<enum name='mediaTypesDontMatch' value64='-2018'/>
<enum name='memAZErr' value64='-113'/>
<enum name='memAdrErr' value64='-110'/>
<enum name='memBCErr' value64='-115'/>
<enum name='memFragErr' value64='-601'/>
<enum name='memFullErr' value64='-108'/>
<enum name='memLockedErr' value64='-117'/>
<enum name='memPCErr' value64='-114'/>
<enum name='memPurErr' value64='-112'/>
<enum name='memROZErr' value64='-99'/>
<enum name='memROZError' value64='-99'/>
<enum name='memROZWarn' value64='-99'/>
<enum name='memSCErr' value64='-116'/>
<enum name='memWZErr' value64='-111'/>
<enum name='menuInvalidErr' value64='-5623'/>
<enum name='menuItemNotFoundErr' value64='-5622'/>
<enum name='menuNotFoundErr' value64='-5620'/>
<enum name='menuPrgErr' value64='84'/>
<enum name='menuPropertyInvalid' value64='-5603'/>
<enum name='menuPropertyInvalidErr' value64='-5603'/>
<enum name='menuPropertyNotFoundErr' value64='-5604'/>
<enum name='menuUsesSystemDefErr' value64='-5621'/>
<enum name='midiDupIDErr' value64='-260'/>
<enum name='midiInvalidCmdErr' value64='-261'/>
<enum name='midiManagerAbsentOSErr' value64='-2081'/>
<enum name='midiNameLenErr' value64='-259'/>
<enum name='midiNoClientErr' value64='-250'/>
<enum name='midiNoConErr' value64='-257'/>
<enum name='midiNoPortErr' value64='-251'/>
<enum name='midiTooManyConsErr' value64='-253'/>
<enum name='midiTooManyPortsErr' value64='-252'/>
<enum name='midiVConnectErr' value64='-254'/>
<enum name='midiVConnectMade' value64='-255'/>
<enum name='midiVConnectRmvd' value64='-256'/>
<enum name='midiWriteErr' value64='-258'/>
<enum name='minCountry' value64='0'/>
<enum name='minLeadingZ' value64='64'/>
<enum name='minuteField' value64='5'/>
<enum name='minuteMask' value64='32'/>
<enum name='missingRequiredParameterErr' value64='-2063'/>
<enum name='mmInternalError' value64='-2526'/>
<enum name='mntLdingZ' value64='64'/>
<enum name='monthField' value64='2'/>
<enum name='monthMask' value64='4'/>
<enum name='movieTextNotFoundErr' value64='-2062'/>
<enum name='movieToolboxUninitialized' value64='-2020'/>
<enum name='mpWorkFlagCopyWorkBlock' value64='4'/>
<enum name='mpWorkFlagDoCompletion' value64='2'/>
<enum name='mpWorkFlagDoWork' value64='1'/>
<enum name='mpWorkFlagDontBlock' value64='8'/>
<enum name='mpWorkFlagGetIsRunning' value64='64'/>
<enum name='mpWorkFlagGetProcessorCount' value64='16'/>
<enum name='multiplePublisherWrn' value64='-460'/>
<enum name='myd' value64='3'/>
<enum name='nameTypeErr' value64='-902'/>
<enum name='nbpBuffOvr' value64='-1024'/>
<enum name='nbpConfDiff' value64='-1026'/>
<enum name='nbpDuplicate' value64='-1027'/>
<enum name='nbpNISErr' value64='-1029'/>
<enum name='nbpNoConfirm' value64='-1025'/>
<enum name='nbpNotFound' value64='-1028'/>
<enum name='needClearScrapErr' value64='-100'/>
<enum name='negZcbFreeErr' value64='33'/>
<enum name='negativeInfinity' value64='-2147483648'/>
<enum name='networkErr' value64='-925'/>
<enum name='newLineBit' value64='7'/>
<enum name='newLineCharMask' value64='65280'/>
<enum name='newLineMask' value64='128'/>
<enum name='nilHandleErr' value64='-109'/>
<enum name='nilScrapFlavorDataErr' value64='-4994'/>
<enum name='nmTypErr' value64='-299'/>
<enum name='nmType' value64='8'/>
<enum name='noAdrMkErr' value64='-67'/>
<enum name='noBridgeErr' value64='-93'/>
<enum name='noCacheBit' value64='5'/>
<enum name='noCacheMask' value64='32'/>
<enum name='noCodecErr' value64='-8961'/>
<enum name='noDMAErr' value64='-2208'/>
<enum name='noDataArea' value64='-1104'/>
<enum name='noDataHandler' value64='-2007'/>
<enum name='noDefaultDataRef' value64='-2051'/>
<enum name='noDefaultUserErr' value64='-922'/>
<enum name='noDeviceForChannel' value64='-9400'/>
<enum name='noDriveErr' value64='-64'/>
<enum name='noDtaMkErr' value64='-71'/>
<enum name='noExportProcAvailableErr' value64='-2089'/>
<enum name='noGlobalsErr' value64='-904'/>
<enum name='noHardware' value64='-200'/>
<enum name='noHardwareErr' value64='-200'/>
<enum name='noHelpForItem' value64='-4009'/>
<enum name='noIconDataAvailableErr' value64='-2582'/>
<enum name='noInformErr' value64='-926'/>
<enum name='noMMUErr' value64='-626'/>
<enum name='noMPPErr' value64='-3102'/>
<enum name='noMacDskErr' value64='-57'/>
<enum name='noMachineNameErr' value64='-913'/>
<enum name='noMaskFoundErr' value64='-1000'/>
<enum name='noMediaHandler' value64='-2006'/>
<enum name='noMemForPictPlaybackErr' value64='-145'/>
<enum name='noMemoryNodeFailedInitialize' value64='-30552'/>
<enum name='noMoreFolderDescErr' value64='-4272'/>
<enum name='noMoreKeyColorsErr' value64='-2205'/>
<enum name='noMoreRealTime' value64='-212'/>
<enum name='noMovieFound' value64='-2048'/>
<enum name='noNybErr' value64='-66'/>
<enum name='noOutstandingHLE' value64='-608'/>
<enum name='noPathMappingErr' value64='-2112'/>
<enum name='noPortErr' value64='-903'/>
<enum name='noPrefAppErr' value64='-3032'/>
<enum name='noRecordOfApp' value64='-2020'/>
<enum name='noRelErr' value64='-1101'/>
<enum name='noResponseErr' value64='-915'/>
<enum name='noScrapErr' value64='-100'/>
<enum name='noScrapPromiseKeeperErr' value64='-4993'/>
<enum name='noSendResp' value64='-1103'/>
<enum name='noSessionErr' value64='-908'/>
<enum name='noSoundTrackInMovieErr' value64='-2055'/>
<enum name='noSourceTreeFoundErr' value64='-2060'/>
<enum name='noSuchIconErr' value64='-2581'/>
<enum name='noSuitableDisplaysErr' value64='-1859'/>
<enum name='noSynthFound' value64='-240'/>
<enum name='noThumbnailFoundErr' value64='-8994'/>
<enum name='noToolboxNameErr' value64='-914'/>
<enum name='noTranslationPathErr' value64='-3030'/>
<enum name='noTypeErr' value64='-102'/>
<enum name='noUserInteractionAllowed' value64='-610'/>
<enum name='noUserNameErr' value64='-911'/>
<enum name='noUserRecErr' value64='-928'/>
<enum name='noUserRefErr' value64='-924'/>
<enum name='noVideoTrackInMovieErr' value64='-2054'/>
<enum name='nonDragOriginatorErr' value64='-1862'/>
<enum name='nonMatchingEditState' value64='-2024'/>
<enum name='notAFileErr' value64='-1302'/>
<enum name='notAQTVRMovieErr' value64='-30540'/>
<enum name='notARemountErr' value64='-1308'/>
<enum name='notAllowedToSaveMovieErr' value64='-2126'/>
<enum name='notAppropriateForClassic' value64='-877'/>
<enum name='notBTree' value64='-410'/>
<enum name='notEnoughBufferSpace' value64='-207'/>
<enum name='notEnoughDataErr' value64='-2149'/>
<enum name='notEnoughDiskSpaceToGrab' value64='-9404'/>
<enum name='notEnoughHardware' value64='-201'/>
<enum name='notEnoughHardwareErr' value64='-201'/>
<enum name='notEnoughMemoryErr' value64='-620'/>
<enum name='notEnoughMemoryToGrab' value64='-9403'/>
<enum name='notExactMatrixErr' value64='-2204'/>
<enum name='notExactSizeErr' value64='-2206'/>
<enum name='notHeldErr' value64='-621'/>
<enum name='notImplementedMusicOSErr' value64='-2071'/>
<enum name='notInitErr' value64='-900'/>
<enum name='notLeafAtomErr' value64='-2102'/>
<enum name='notLockedErr' value64='-623'/>
<enum name='notLoggedInErr' value64='-923'/>
<enum name='notOpenErr' value64='-28'/>
<enum name='notRegisteredSectionErr' value64='-452'/>
<enum name='notThePublisherWrn' value64='-463'/>
<enum name='noteChannelNotAllocatedOSErr' value64='-2085'/>
<enum name='nrCallNotSupported' value64='-2557'/>
<enum name='nrDataTruncatedErr' value64='-2543'/>
<enum name='nrExitedIteratorScope' value64='-2555'/>
<enum name='nrInvalidEntryIterationOp' value64='-2552'/>
<enum name='nrInvalidNodeErr' value64='-2538'/>
<enum name='nrIterationDone' value64='-2554'/>
<enum name='nrLockedErr' value64='-2536'/>
<enum name='nrNameErr' value64='-2541'/>
<enum name='nrNotCreatedErr' value64='-2540'/>
<enum name='nrNotEnoughMemoryErr' value64='-2537'/>
<enum name='nrNotFoundErr' value64='-2539'/>
<enum name='nrNotModifiedErr' value64='-2547'/>
<enum name='nrNotSlotDeviceErr' value64='-2542'/>
<enum name='nrOverrunErr' value64='-2548'/>
<enum name='nrPathBufferTooSmall' value64='-2551'/>
<enum name='nrPathNotFound' value64='-2550'/>
<enum name='nrPowerErr' value64='-2544'/>
<enum name='nrPowerSwitchAbortErr' value64='-2545'/>
<enum name='nrPropertyAlreadyExists' value64='-2553'/>
<enum name='nrResultCodeBase' value64='-2549'/>
<enum name='nrTransactionAborted' value64='-2556'/>
<enum name='nrTypeMismatchErr' value64='-2546'/>
<enum name='nsDrvErr' value64='-56'/>
<enum name='nsStackErr' value64='-149'/>
<enum name='nsvErr' value64='-35'/>
<enum name='numberFormattingBadCurrencyPositionErr' value64='-5211'/>
<enum name='numberFormattingBadFormatErr' value64='-5207'/>
<enum name='numberFormattingBadNumberFormattingObjectErr' value64='-5202'/>
<enum name='numberFormattingBadOptionsErr' value64='-5208'/>
<enum name='numberFormattingBadTokenErr' value64='-5209'/>
<enum name='numberFormattingDelimiterMissingErr' value64='-5205'/>
<enum name='numberFormattingEmptyFormatErr' value64='-5206'/>
<enum name='numberFormattingLiteralMissingErr' value64='-5204'/>
<enum name='numberFormattingNotADigitErr' value64='-5212'/>
<enum name='numberFormattingNotANumberErr' value64='-5200'/>
<enum name='numberFormattingOverflowInDestinationErr' value64='-5201'/>
<enum name='numberFormattingSpuriousCharErr' value64='-5203'/>
<enum name='numberFormattingUnOrderedCurrencyRangeErr' value64='-5210'/>
<enum name='numberFormattingUnOrdredCurrencyRangeErr' value64='-5210'/>
<enum name='numberFortmattingNotADigitErr' value64='-5212'/>
<enum name='offLinErr' value64='-65'/>
<enum name='ogonek' value64='254'/>
<enum name='opWrErr' value64='-49'/>
<enum name='openErr' value64='-23'/>
<enum name='overDot' value64='250'/>
<enum name='paramErr' value64='-50'/>
<enum name='pathNotVerifiedErr' value64='-2113'/>
<enum name='pathTooLongErr' value64='-2110'/>
<enum name='perThousand' value64='228'/>
<enum name='permErr' value64='-54'/>
<enum name='pickerCantLive' value64='-4006'/>
<enum name='pickerResourceError' value64='-4002'/>
<enum name='pictInfoIDErr' value64='-11001'/>
<enum name='pictInfoVerbErr' value64='-11002'/>
<enum name='pictInfoVersionErr' value64='-11000'/>
<enum name='pictureDataErr' value64='-11005'/>
<enum name='pixMapTooDeepErr' value64='-148'/>
<enum name='platform68k' value64='1'/>
<enum name='platformAIXppc' value64='1300'/>
<enum name='platformIA32NativeEntryPoint' value64='6'/>
<enum name='platformIRIXmips' value64='1000'/>
<enum name='platformInterpreted' value64='3'/>
<enum name='platformLinuxintel' value64='1201'/>
<enum name='platformLinuxppc' value64='1200'/>
<enum name='platformMacOSx86' value64='1500'/>
<enum name='platformNeXT68k' value64='1403'/>
<enum name='platformNeXTIntel' value64='1400'/>
<enum name='platformNeXTppc' value64='1401'/>
<enum name='platformNeXTsparc' value64='1402'/>
<enum name='platformPowerPC' value64='2'/>
<enum name='platformPowerPC64NativeEntryPoint' value64='7'/>
<enum name='platformPowerPCNativeEntryPoint' value64='5'/>
<enum name='platformSunOSintel' value64='1101'/>
<enum name='platformSunOSsparc' value64='1100'/>
<enum name='platformWin32' value64='4'/>
<enum name='platformX86_64NativeEntryPoint' value64='8'/>
<enum name='pleaseCacheBit' value64='4'/>
<enum name='pleaseCacheMask' value64='16'/>
<enum name='pmBusyErr' value64='-13000'/>
<enum name='pmField' value64='10'/>
<enum name='pmMask' value64='1024'/>
<enum name='pmRecvEndErr' value64='-13005'/>
<enum name='pmRecvStartErr' value64='-13004'/>
<enum name='pmReplyTOErr' value64='-13001'/>
<enum name='pmSendEndErr' value64='-13003'/>
<enum name='pmSendStartErr' value64='-13002'/>
<enum name='portClosedErr' value64='-916'/>
<enum name='portInUse' value64='-97'/>
<enum name='portNameExistsErr' value64='-910'/>
<enum name='portNotCf' value64='-98'/>
<enum name='portNotPwr' value64='-96'/>
<enum name='posErr' value64='-40'/>
<enum name='positiveInfinity' value64='2147483647'/>
<enum name='prInitErr' value64='-88'/>
<enum name='prWrErr' value64='-87'/>
<enum name='printerStatusOpCodeNotSupportedErr' value64='-25280'/>
<enum name='procNotFound' value64='-600'/>
<enum name='processStateIncorrectErr' value64='-4991'/>
<enum name='progressProcAborted' value64='-2019'/>
<enum name='propertyNotSupportedByNodeErr' value64='-30547'/>
<enum name='protocolErr' value64='-603'/>
<enum name='qErr' value64='-1'/>
<enum name='qfcbNotCreatedErr' value64='-2119'/>
<enum name='qfcbNotFoundErr' value64='-2118'/>
<enum name='qtActionNotHandledErr' value64='-2157'/>
<enum name='qtNetworkAlreadyAllocatedErr' value64='-2127'/>
<enum name='qtParamErr' value64='-2202'/>
<enum name='qtXMLApplicationErr' value64='-2159'/>
<enum name='qtXMLParseErr' value64='-2158'/>
<enum name='qtmlDllEntryNotFoundErr' value64='-2094'/>
<enum name='qtmlDllLoadErr' value64='-2093'/>
<enum name='qtmlUninitialized' value64='-2095'/>
<enum name='qtsAddressBusyErr' value64='-5421'/>
<enum name='qtsBadDataErr' value64='-5402'/>
<enum name='qtsBadSelectorErr' value64='-5400'/>
<enum name='qtsBadStateErr' value64='-5401'/>
<enum name='qtsConnectionFailedErr' value64='-5420'/>
<enum name='qtsTimeoutErr' value64='-5408'/>
<enum name='qtsTooMuchDataErr' value64='-5406'/>
<enum name='qtsUnknownValueErr' value64='-5407'/>
<enum name='qtsUnsupportedDataTypeErr' value64='-5403'/>
<enum name='qtsUnsupportedFeatureErr' value64='-5405'/>
<enum name='qtsUnsupportedRateErr' value64='-5404'/>
<enum name='qtvrLibraryLoadErr' value64='-30554'/>
<enum name='qtvrUninitialized' value64='-30555'/>
<enum name='queueFull' value64='-203'/>
<enum name='rAliasType' value64='1634494835'/>
<enum name='rcDBAsyncNotSupp' value64='-809'/>
<enum name='rcDBBadAsyncPB' value64='-810'/>
<enum name='rcDBBadDDEV' value64='-808'/>
<enum name='rcDBBadSessID' value64='-806'/>
<enum name='rcDBBadSessNum' value64='-807'/>
<enum name='rcDBBadType' value64='-803'/>
<enum name='rcDBBreak' value64='-804'/>
<enum name='rcDBError' value64='-802'/>
<enum name='rcDBExec' value64='-805'/>
<enum name='rcDBNoHandler' value64='-811'/>
<enum name='rcDBNull' value64='-800'/>
<enum name='rcDBPackNotInited' value64='-813'/>
<enum name='rcDBValue' value64='-801'/>
<enum name='rcDBWrongVersion' value64='-812'/>
<enum name='rcvrErr' value64='-89'/>
<enum name='rdVerify' value64='64'/>
<enum name='rdVerifyBit' value64='6'/>
<enum name='rdVerifyMask' value64='64'/>
<enum name='readErr' value64='-19'/>
<enum name='readQErr' value64='-3105'/>
<enum name='readReference' value64='1'/>
<enum name='recNotFnd' value64='-3108'/>
<enum name='recordDataTooBigErr' value64='-20001'/>
<enum name='registerComponentAfterExisting' value64='4'/>
<enum name='registerComponentAliasesOnly' value64='8'/>
<enum name='registerComponentGlobal' value64='1'/>
<enum name='registerComponentNoDuplicates' value64='2'/>
<enum name='reqAborted' value64='-1105'/>
<enum name='reqFailed' value64='-1096'/>
<enum name='requiredFlagsDontMatch' value64='-4001'/>
<enum name='res1Field' value64='11'/>
<enum name='res2Field' value64='12'/>
<enum name='res3Field' value64='13'/>
<enum name='resAttrErr' value64='-198'/>
<enum name='resChanged' value64='2'/>
<enum name='resChangedBit' value64='1'/>
<enum name='resFNotFound' value64='-193'/>
<enum name='resLocked' value64='16'/>
<enum name='resLockedBit' value64='4'/>
<enum name='resNotFound' value64='-192'/>
<enum name='resPreload' value64='4'/>
<enum name='resPreloadBit' value64='2'/>
<enum name='resProblem' value64='-204'/>
<enum name='resProtected' value64='8'/>
<enum name='resProtectedBit' value64='3'/>
<enum name='resPurgeable' value64='32'/>
<enum name='resPurgeableBit' value64='5'/>
<enum name='resSysHeap' value64='64'/>
<enum name='resSysHeapBit' value64='6'/>
<enum name='resSysRefBit' value64='7'/>
<enum name='resourceInMemory' value64='-188'/>
<enum name='retryComponentRegistrationErr' value64='-3005'/>
<enum name='rfNumErr' value64='-51'/>
<enum name='rgnOverflowErr' value64='-147'/>
<enum name='rgnTooBigErr' value64='-500'/>
<enum name='rgnTooBigError' value64='-147'/>
<enum name='rightSingGuillemet' value64='221'/>
<enum name='ringMark' value64='251'/>
<enum name='rmvRefFailed' value64='-197'/>
<enum name='rmvResFailed' value64='-196'/>
<enum name='romanAppFond' value64='3'/>
<enum name='romanFlags' value64='7'/>
<enum name='romanSysFond' value64='16383'/>
<enum name='routingNotFoundErr' value64='-4275'/>
<enum name='sIQType' value64='6'/>
<enum name='sameFileErr' value64='-1306'/>
<enum name='samplesAlreadyInMediaErr' value64='-2059'/>
<enum name='scTypeNotFoundErr' value64='-8971'/>
<enum name='scrapFlavorFlagsMismatchErr' value64='-4995'/>
<enum name='scrapFlavorNotFoundErr' value64='-102'/>
<enum name='scrapFlavorSizeMismatchErr' value64='-4996'/>
<enum name='scrapPromiseNotKeptErr' value64='-4992'/>
<enum name='scriptCurLang' value64='-6'/>
<enum name='scriptDefLang' value64='-7'/>
<enum name='sdmInitErr' value64='11'/>
<enum name='sdmJTInitErr' value64='10'/>
<enum name='sdmPRAMInitErr' value64='13'/>
<enum name='sdmPriInitErr' value64='14'/>
<enum name='sdmSRTInitErr' value64='12'/>
<enum name='seNoDB' value64='-8'/>
<enum name='secLeadingZ' value64='32'/>
<enum name='secondField' value64='6'/>
<enum name='secondMask' value64='64'/>
<enum name='sectNFErr' value64='-81'/>
<enum name='seekErr' value64='-80'/>
<enum name='selectorNotSupportedByNodeErr' value64='-30543'/>
<enum name='sepNotConsistent' value64='64'/>
<enum name='sepNotIntlSep' value64='4'/>
<enum name='seqGrabInfoNotAvailable' value64='-9407'/>
<enum name='sessClosedErr' value64='-917'/>
<enum name='sessTableErr' value64='-907'/>
<enum name='settingNotSupportedByNodeErr' value64='-30548'/>
<enum name='shortDate' value64='0'/>
<enum name='shutDownAlert' value64='42'/>
<enum name='siBadDeviceName' value64='-228'/>
<enum name='siBadRefNum' value64='-229'/>
<enum name='siBadSoundInDevice' value64='-221'/>
<enum name='siDeviceBusyErr' value64='-227'/>
<enum name='siHardDriveTooSlow' value64='-224'/>
<enum name='siInitSDTblErr' value64='1'/>
<enum name='siInitSPTblErr' value64='3'/>
<enum name='siInitVBLQsErr' value64='2'/>
<enum name='siInputDeviceErr' value64='-230'/>
<enum name='siInvalidCompression' value64='-223'/>
<enum name='siInvalidSampleRate' value64='-225'/>
<enum name='siInvalidSampleSize' value64='-226'/>
<enum name='siNoBufferSpecified' value64='-222'/>
<enum name='siNoSoundInHardware' value64='-220'/>
<enum name='siUnknownInfoType' value64='-231'/>
<enum name='siUnknownQuality' value64='-232'/>
<enum name='siVBRCompressionNotSupported' value64='-213'/>
<enum name='sktClosedErr' value64='-3109'/>
<enum name='slotNumErr' value64='-360'/>
<enum name='smAllScripts' value64='-3'/>
<enum name='smAmharic' value64='28'/>
<enum name='smArabic' value64='4'/>
<enum name='smArmenian' value64='24'/>
<enum name='smBLFieldBad' value64='-309'/>
<enum name='smBadBoardId' value64='-319'/>
<enum name='smBadRefId' value64='-330'/>
<enum name='smBadScript' value64='-2'/>
<enum name='smBadVerb' value64='-1'/>
<enum name='smBadsList' value64='-331'/>
<enum name='smBadsPtrErr' value64='-346'/>
<enum name='smBengali' value64='13'/>
<enum name='smBlkMoveErr' value64='-340'/>
<enum name='smBurmese' value64='19'/>
<enum name='smBusErrTO' value64='-320'/>
<enum name='smByteLanesErr' value64='-347'/>
<enum name='smCPUErr' value64='-334'/>
<enum name='smCRCFail' value64='-301'/>
<enum name='smCentralEuroRoman' value64='29'/>
<enum name='smChar1byte' value64='0'/>
<enum name='smChar2byte' value64='32768'/>
<enum name='smCharAscii' value64='1'/>
<enum name='smCharBidirect' value64='8'/>
<enum name='smCharBopomofo' value64='14'/>
<enum name='smCharContextualLR' value64='9'/>
<enum name='smCharEuro' value64='7'/>
<enum name='smCharExtAscii' value64='7'/>
<enum name='smCharFISGana' value64='3'/>
<enum name='smCharFISGreek' value64='5'/>
<enum name='smCharFISIdeo' value64='4'/>
<enum name='smCharFISKana' value64='2'/>
<enum name='smCharFISRussian' value64='6'/>
<enum name='smCharGanaKana' value64='15'/>
<enum name='smCharHangul' value64='12'/>
<enum name='smCharHiragana' value64='3'/>
<enum name='smCharHorizontal' value64='0'/>
<enum name='smCharIdeographic' value64='4'/>
<enum name='smCharJamo' value64='13'/>
<enum name='smCharKatakana' value64='2'/>
<enum name='smCharLeft' value64='0'/>
<enum name='smCharLower' value64='0'/>
<enum name='smCharNonContextualLR' value64='10'/>
<enum name='smCharPunct' value64='0'/>
<enum name='smCharRight' value64='8192'/>
<enum name='smCharTwoByteGreek' value64='5'/>
<enum name='smCharTwoByteRussian' value64='6'/>
<enum name='smCharUpper' value64='16384'/>
<enum name='smCharVertical' value64='4096'/>
<enum name='smChinese' value64='2'/>
<enum name='smCkStatusErr' value64='-341'/>
<enum name='smCodeRevErr' value64='-333'/>
<enum name='smCurrentScript' value64='-2'/>
<enum name='smCyrillic' value64='7'/>
<enum name='smDevanagari' value64='9'/>
<enum name='smDisDrvrNamErr' value64='-343'/>
<enum name='smDisabledSlot' value64='-305'/>
<enum name='smDisposePErr' value64='-312'/>
<enum name='smEastEurRoman' value64='29'/>
<enum name='smEmptySlot' value64='-300'/>
<enum name='smEthiopic' value64='28'/>
<enum name='smExtArabic' value64='31'/>
<enum name='smFHBlkDispErr' value64='-311'/>
<enum name='smFHBlockRdErr' value64='-310'/>
<enum name='smFISClassLvl1' value64='0'/>
<enum name='smFISClassLvl2' value64='256'/>
<enum name='smFISClassUser' value64='512'/>
<enum name='smFirstByte' value64='-1'/>
<enum name='smFondEnd' value64='49152'/>
<enum name='smFondStart' value64='16384'/>
<enum name='smFormatErr' value64='-302'/>
<enum name='smGeez' value64='28'/>
<enum name='smGeorgian' value64='23'/>
<enum name='smGetDrvrNamErr' value64='-342'/>
<enum name='smGetPRErr' value64='-314'/>
<enum name='smGreek' value64='6'/>
<enum name='smGujarati' value64='11'/>
<enum name='smGurmukhi' value64='10'/>
<enum name='smHebrew' value64='5'/>
<enum name='smIdeographicLevel1' value64='0'/>
<enum name='smIdeographicLevel2' value64='256'/>
<enum name='smIdeographicUser' value64='512'/>
<enum name='smInitStatVErr' value64='-316'/>
<enum name='smInitTblVErr' value64='-317'/>
<enum name='smJamoBogJaeum' value64='256'/>
<enum name='smJamoBogMoeum' value64='768'/>
<enum name='smJamoJaeum' value64='0'/>
<enum name='smJamoMoeum' value64='512'/>
<enum name='smJapanese' value64='1'/>
<enum name='smKCHRCache' value64='38'/>
<enum name='smKanaHardOK' value64='512'/>
<enum name='smKanaSmall' value64='256'/>
<enum name='smKanaSoftOK' value64='768'/>
<enum name='smKannada' value64='16'/>
<enum name='smKeyDisableKybdSwitch' value64='-12'/>
<enum name='smKeyDisableKybds' value64='-6'/>
<enum name='smKeyEnableKybds' value64='-7'/>
<enum name='smKeyForceKeyScriptBit' value64='7'/>
<enum name='smKeyForceKeyScriptMask' value64='128'/>
<enum name='smKeyNextInputMethod' value64='-10'/>
<enum name='smKeyNextKybd' value64='-4'/>
<enum name='smKeyNextScript' value64='-1'/>
<enum name='smKeyRoman' value64='-17'/>
<enum name='smKeyScript' value64='22'/>
<enum name='smKeySetDirLeftRight' value64='-15'/>
<enum name='smKeySetDirRightLeft' value64='-16'/>
<enum name='smKeySwapInputMethod' value64='-11'/>
<enum name='smKeySwapKybd' value64='-5'/>
<enum name='smKeySwapScript' value64='-3'/>
<enum name='smKeySysScript' value64='-2'/>
<enum name='smKeyToggleDirection' value64='-9'/>
<enum name='smKeyToggleInline' value64='-8'/>
<enum name='smKhmer' value64='20'/>
<enum name='smKlingon' value64='32'/>
<enum name='smKorean' value64='3'/>
<enum name='smLao' value64='22'/>
<enum name='smLaotian' value64='22'/>
<enum name='smLastByte' value64='1'/>
<enum name='smMalayalam' value64='17'/>
<enum name='smMaskAll' value64='-1'/>
<enum name='smMaskAscii' value64='1'/>
<enum name='smMaskAscii1' value64='4'/>
<enum name='smMaskAscii2' value64='8'/>
<enum name='smMaskBopomofo2' value64='1024'/>
<enum name='smMaskGana2' value64='128'/>
<enum name='smMaskHangul2' value64='256'/>
<enum name='smMaskJamo2' value64='512'/>
<enum name='smMaskKana1' value64='16'/>
<enum name='smMaskKana2' value64='32'/>
<enum name='smMaskNative' value64='2'/>
<enum name='smMiddleByte' value64='2'/>
<enum name='smMongolian' value64='27'/>
<enum name='smNewPErr' value64='-339'/>
<enum name='smNilsBlockErr' value64='-336'/>
<enum name='smNoBoardId' value64='-315'/>
<enum name='smNoBoardSRsrc' value64='-313'/>
<enum name='smNoDir' value64='-304'/>
<enum name='smNoGoodOpens' value64='-349'/>
<enum name='smNoJmpTbl' value64='-318'/>
<enum name='smNoMoresRsrcs' value64='-344'/>
<enum name='smNosInfoArray' value64='-306'/>
<enum name='smNotInstalled' value64='0'/>
<enum name='smNumberPartsTable' value64='2'/>
<enum name='smOffsetErr' value64='-348'/>
<enum name='smOriya' value64='12'/>
<enum name='smPRAMInitErr' value64='-292'/>
<enum name='smPriInitErr' value64='-293'/>
<enum name='smPunctBlank' value64='768'/>
<enum name='smPunctGraphic' value64='1280'/>
<enum name='smPunctNormal' value64='0'/>
<enum name='smPunctNumber' value64='256'/>
<enum name='smPunctRepeat' value64='1024'/>
<enum name='smPunctSymbol' value64='512'/>
<enum name='smRSymbol' value64='8'/>
<enum name='smRecNotFnd' value64='-351'/>
<enum name='smRegionCode' value64='40'/>
<enum name='smReservedErr' value64='-332'/>
<enum name='smReservedSlot' value64='-318'/>
<enum name='smResrvErr' value64='-307'/>
<enum name='smRevisionErr' value64='-303'/>
<enum name='smRoman' value64='0'/>
<enum name='smRussian' value64='7'/>
<enum name='smSDMInitErr' value64='-290'/>
<enum name='smSRTInitErr' value64='-291'/>
<enum name='smSRTOvrFlErr' value64='-350'/>
<enum name='smSelOOBErr' value64='-338'/>
<enum name='smSimpChinese' value64='25'/>
<enum name='smSindhi' value64='31'/>
<enum name='smSingleByte' value64='0'/>
<enum name='smSinhalese' value64='18'/>
<enum name='smSlavic' value64='29'/>
<enum name='smSlotOOBErr' value64='-337'/>
<enum name='smSysScript' value64='18'/>
<enum name='smSystemScript' value64='-1'/>
<enum name='smTamil' value64='14'/>
<enum name='smTelugu' value64='15'/>
<enum name='smThai' value64='21'/>
<enum name='smTibetan' value64='26'/>
<enum name='smTradChinese' value64='2'/>
<enum name='smTransAscii' value64='0'/>
<enum name='smTransAscii1' value64='2'/>
<enum name='smTransAscii2' value64='3'/>
<enum name='smTransBopomofo2' value64='10'/>
<enum name='smTransCase' value64='254'/>
<enum name='smTransGana2' value64='7'/>
<enum name='smTransHangul2' value64='8'/>
<enum name='smTransHangulFormat' value64='2'/>
<enum name='smTransJamo2' value64='9'/>
<enum name='smTransKana1' value64='4'/>
<enum name='smTransKana2' value64='5'/>
<enum name='smTransLower' value64='16384'/>
<enum name='smTransNative' value64='1'/>
<enum name='smTransPreDoubleByting' value64='1'/>
<enum name='smTransPreLowerCasing' value64='2'/>
<enum name='smTransRuleBaseFormat' value64='1'/>
<enum name='smTransSystem' value64='255'/>
<enum name='smTransUpper' value64='32768'/>
<enum name='smUnExBusErr' value64='-308'/>
<enum name='smUnTokenTable' value64='3'/>
<enum name='smUnicodeScript' value64='126'/>
<enum name='smUninterp' value64='32'/>
<enum name='smUprHalfCharSet' value64='128'/>
<enum name='smVietnamese' value64='30'/>
<enum name='smWhiteSpaceList' value64='4'/>
<enum name='smWordSelectTable' value64='0'/>
<enum name='smWordWrapTable' value64='1'/>
<enum name='smallDateBit' value64='31'/>
<enum name='smcClassMask' value64='3840'/>
<enum name='smcDoubleMask' value64='32768'/>
<enum name='smcOrientationMask' value64='4096'/>
<enum name='smcReserved' value64='240'/>
<enum name='smcRightMask' value64='8192'/>
<enum name='smcTypeMask' value64='15'/>
<enum name='smcUpperMask' value64='16384'/>
<enum name='smfDisableKeyScriptSync' value64='27'/>
<enum name='smfDisableKeyScriptSyncMask' value64='134217728'/>
<enum name='smfDualCaret' value64='30'/>
<enum name='smfNameTagEnab' value64='29'/>
<enum name='smfShowIcon' value64='31'/>
<enum name='smfUseAssocFontInfo' value64='28'/>
<enum name='smsGetDrvrErr' value64='-345'/>
<enum name='smsPointerNil' value64='-335'/>
<enum name='smsfAutoInit' value64='6'/>
<enum name='smsfB0Digits' value64='5'/>
<enum name='smsfContext' value64='3'/>
<enum name='smsfForms' value64='13'/>
<enum name='smsfIntellCP' value64='0'/>
<enum name='smsfLigatures' value64='14'/>
<enum name='smsfNatCase' value64='2'/>
<enum name='smsfNoForceFont' value64='4'/>
<enum name='smsfReverse' value64='15'/>
<enum name='smsfSingByte' value64='1'/>
<enum name='smsfSynchUnstyledTE' value64='8'/>
<enum name='smsfUnivExt' value64='7'/>
<enum name='sortsAfter' value64='1'/>
<enum name='sortsBefore' value64='-1'/>
<enum name='sortsEqual' value64='0'/>
<enum name='soundSupportNotAvailableErr' value64='-2056'/>
<enum name='sourceNotFoundErr' value64='-2061'/>
<enum name='spdAdjErr' value64='-79'/>
<enum name='staleEditState' value64='-2025'/>
<enum name='statusErr' value64='-18'/>
<enum name='strUserBreak' value64='-491'/>
<enum name='streamingNodeNotReadyErr' value64='-30553'/>
<enum name='stringOverflow' value64='2'/>
<enum name='supDay' value64='1'/>
<enum name='supMonth' value64='4'/>
<enum name='supWeek' value64='2'/>
<enum name='supYear' value64='8'/>
<enum name='svDisabled' value64='-32640'/>
<enum name='svTempDisable' value64='-32768'/>
<enum name='synthNotReady' value64='-242'/>
<enum name='synthOpenFailed' value64='-241'/>
<enum name='synthesizerNotRespondingOSErr' value64='-2082'/>
<enum name='synthesizerOSErr' value64='-2083'/>
<enum name='systemCurLang' value64='-2'/>
<enum name='systemDefLang' value64='-3'/>
<enum name='teScrapSizeErr' value64='-501'/>
<enum name='telAPattNotSupp' value64='-10016'/>
<enum name='telAlreadyOpen' value64='-10070'/>
<enum name='telAutoAnsNotOn' value64='-10112'/>
<enum name='telBadAPattErr' value64='-10015'/>
<enum name='telBadBearerType' value64='-10058'/>
<enum name='telBadCAErr' value64='-10003'/>
<enum name='telBadCodeResource' value64='-10108'/>
<enum name='telBadDNDType' value64='-10023'/>
<enum name='telBadDNErr' value64='-10002'/>
<enum name='telBadDNType' value64='-10050'/>
<enum name='telBadDisplayMode' value64='-10062'/>
<enum name='telBadFeatureID' value64='-10053'/>
<enum name='telBadFunction' value64='-10091'/>
<enum name='telBadFwdType' value64='-10054'/>
<enum name='telBadHTypeErr' value64='-10010'/>
<enum name='telBadHandErr' value64='-10004'/>
<enum name='telBadIndex' value64='-10017'/>
<enum name='telBadIntExt' value64='-10021'/>
<enum name='telBadIntercomID' value64='-10052'/>
<enum name='telBadLevelErr' value64='-10012'/>
<enum name='telBadPageID' value64='-10051'/>
<enum name='telBadParkID' value64='-10056'/>
<enum name='telBadPickupGroupID' value64='-10055'/>
<enum name='telBadProcErr' value64='-10005'/>
<enum name='telBadProcID' value64='-10110'/>
<enum name='telBadRate' value64='-10059'/>
<enum name='telBadSWErr' value64='-10114'/>
<enum name='telBadSampleRate' value64='-10115'/>
<enum name='telBadSelect' value64='-10057'/>
<enum name='telBadStateErr' value64='-10019'/>
<enum name='telBadTermErr' value64='-10001'/>
<enum name='telBadVTypeErr' value64='-10013'/>
<enum name='telCANotAcceptable' value64='-10080'/>
<enum name='telCANotDeflectable' value64='-10082'/>
<enum name='telCANotRejectable' value64='-10081'/>
<enum name='telCAUnavail' value64='-10006'/>
<enum name='telCBErr' value64='-10046'/>
<enum name='telConfErr' value64='-10042'/>
<enum name='telConfLimitErr' value64='-10040'/>
<enum name='telConfLimitExceeded' value64='-10047'/>
<enum name='telConfNoLimit' value64='-10041'/>
<enum name='telConfRej' value64='-10043'/>
<enum name='telDNDTypeNotSupp' value64='-10024'/>
<enum name='telDNTypeNotSupp' value64='-10060'/>
<enum name='telDetAlreadyOn' value64='-10113'/>
<enum name='telDeviceNotFound' value64='-10109'/>
<enum name='telDisplayModeNotSupp' value64='-10063'/>
<enum name='telFeatActive' value64='-10032'/>
<enum name='telFeatNotAvail' value64='-10031'/>
<enum name='telFeatNotSub' value64='-10030'/>
<enum name='telFeatNotSupp' value64='-10033'/>
<enum name='telFwdTypeNotSupp' value64='-10061'/>
<enum name='telGenericError' value64='-1'/>
<enum name='telHTypeNotSupp' value64='-10011'/>
<enum name='telIndexNotSupp' value64='-10018'/>
<enum name='telInitFailed' value64='-10107'/>
<enum name='telIntExtNotSupp' value64='-10022'/>
<enum name='telNoCallbackRef' value64='-10064'/>
<enum name='telNoCommFolder' value64='-10106'/>
<enum name='telNoErr' value64='0'/>
<enum name='telNoMemErr' value64='-10007'/>
<enum name='telNoOpenErr' value64='-10008'/>
<enum name='telNoSuchTool' value64='-10102'/>
<enum name='telNoTools' value64='8'/>
<enum name='telNotEnoughdspBW' value64='-10116'/>
<enum name='telPBErr' value64='-10090'/>
<enum name='telStateNotSupp' value64='-10020'/>
<enum name='telStillNeeded' value64='-10071'/>
<enum name='telTermNotOpen' value64='-10072'/>
<enum name='telTransferErr' value64='-10044'/>
<enum name='telTransferRej' value64='-10045'/>
<enum name='telUnknownErr' value64='-10103'/>
<enum name='telVTypeNotSupp' value64='-10014'/>
<enum name='telValidateFailed' value64='-10111'/>
<enum name='textParserBadParamErr' value64='-5220'/>
<enum name='textParserBadParserObjectErr' value64='-5223'/>
<enum name='textParserBadTextEncodingErr' value64='-5227'/>
<enum name='textParserBadTextLanguageErr' value64='-5226'/>
<enum name='textParserBadTokenValueErr' value64='-5222'/>
<enum name='textParserNoMoreTextErr' value64='-5225'/>
<enum name='textParserNoMoreTokensErr' value64='-5229'/>
<enum name='textParserNoSuchTokenFoundErr' value64='-5228'/>
<enum name='textParserObjectNotFoundErr' value64='-5221'/>
<enum name='textParserParamErr' value64='-5224'/>
<enum name='themeBadCursorIndexErr' value64='-30565'/>
<enum name='themeBadTextColorErr' value64='-30563'/>
<enum name='themeHasNoAccentsErr' value64='-30564'/>
<enum name='themeInvalidBrushErr' value64='-30560'/>
<enum name='themeMonitorDepthNotSupportedErr' value64='-30567'/>
<enum name='themeNoAppropriateBrushErr' value64='-30568'/>
<enum name='themeProcessNotRegisteredErr' value64='-30562'/>
<enum name='themeProcessRegisteredErr' value64='-30561'/>
<enum name='themeScriptFontNotFoundErr' value64='-30566'/>
<enum name='threadBadAppContextErr' value64='-616'/>
<enum name='threadNotFoundErr' value64='-618'/>
<enum name='threadProtocolErr' value64='-619'/>
<enum name='threadTooManyReqsErr' value64='-617'/>
<enum name='tilde' value64='247'/>
<enum name='timeCycle12' value64='255'/>
<enum name='timeCycle24' value64='0'/>
<enum name='timeCycleZero' value64='1'/>
<enum name='timeNotInMedia' value64='-2032'/>
<enum name='timeNotInTrack' value64='-2031'/>
<enum name='timeNotInViewErr' value64='-30546'/>
<enum name='tk0BadErr' value64='-76'/>
<enum name='tmfoErr' value64='-42'/>
<enum name='tmwdoErr' value64='-121'/>
<enum name='togChar12HourBit' value64='30'/>
<enum name='togCharZCycleBit' value64='29'/>
<enum name='togDelta12HourBit' value64='28'/>
<enum name='toggleBadChar' value64='4'/>
<enum name='toggleBadDelta' value64='3'/>
<enum name='toggleBadField' value64='2'/>
<enum name='toggleBadNum' value64='6'/>
<enum name='toggleErr3' value64='7'/>
<enum name='toggleErr4' value64='8'/>
<enum name='toggleErr5' value64='9'/>
<enum name='toggleOK' value64='1'/>
<enum name='toggleOutOfRange' value64='7'/>
<enum name='toggleUndefined' value64='0'/>
<enum name='toggleUnknown' value64='5'/>
<enum name='tokDecPoint' value64='14'/>
<enum name='tokEMinus' value64='16'/>
<enum name='tokEPlus' value64='15'/>
<enum name='tokEscape' value64='13'/>
<enum name='tokLeadPlacer' value64='3'/>
<enum name='tokLeader' value64='4'/>
<enum name='tokLeftQuote' value64='1'/>
<enum name='tokMaxSymbols' value64='31'/>
<enum name='tokMinusSign' value64='9'/>
<enum name='tokNonLeader' value64='5'/>
<enum name='tokPercent' value64='7'/>
<enum name='tokPlusSign' value64='8'/>
<enum name='tokReserved' value64='11'/>
<enum name='tokRightQuote' value64='2'/>
<enum name='tokSeparator' value64='12'/>
<enum name='tokThousands' value64='10'/>
<enum name='tokZeroLead' value64='6'/>
<enum name='token1Quote' value64='52'/>
<enum name='token2Equal' value64='38'/>
<enum name='token2Quote' value64='51'/>
<enum name='tokenAlpha' value64='4'/>
<enum name='tokenAltNum' value64='11'/>
<enum name='tokenAltReal' value64='13'/>
<enum name='tokenAmpersand' value64='57'/>
<enum name='tokenAsterisk' value64='26'/>
<enum name='tokenAtSign' value64='58'/>
<enum name='tokenBackSlash' value64='30'/>
<enum name='tokenBar' value64='59'/>
<enum name='tokenCapPi' value64='66'/>
<enum name='tokenCarat' value64='55'/>
<enum name='tokenCaret' value64='55'/>
<enum name='tokenCenterDot' value64='78'/>
<enum name='tokenColon' value64='68'/>
<enum name='tokenColonEqual' value64='39'/>
<enum name='tokenComma' value64='45'/>
<enum name='tokenDivide' value64='27'/>
<enum name='tokenDollar' value64='70'/>
<enum name='tokenEllipsis' value64='77'/>
<enum name='tokenEmpty' value64='-1'/>
<enum name='tokenEqual' value64='33'/>
<enum name='tokenErr' value64='33024'/>
<enum name='tokenEscape' value64='10'/>
<enum name='tokenExclam' value64='43'/>
<enum name='tokenExclamEqual' value64='42'/>
<enum name='tokenFraction' value64='72'/>
<enum name='tokenGreat' value64='32'/>
<enum name='tokenGreatEqual1' value64='37'/>
<enum name='tokenGreatEqual2' value64='36'/>
<enum name='tokenHash' value64='69'/>
<enum name='tokenInfinity' value64='67'/>
<enum name='tokenIntegral' value64='64'/>
<enum name='tokenIntl' value64='4'/>
<enum name='tokenIntlCurrency' value64='73'/>
<enum name='tokenLeft1Quote' value64='49'/>
<enum name='tokenLeft2Quote' value64='47'/>
<enum name='tokenLeftBracket' value64='18'/>
<enum name='tokenLeftComment' value64='7'/>
<enum name='tokenLeftCurly' value64='20'/>
<enum name='tokenLeftEnclose' value64='22'/>
<enum name='tokenLeftLit' value64='2'/>
<enum name='tokenLeftParen' value64='16'/>
<enum name='tokenLeftSingGuillemet' value64='74'/>
<enum name='tokenLess' value64='31'/>
<enum name='tokenLessEqual1' value64='35'/>
<enum name='tokenLessEqual2' value64='34'/>
<enum name='tokenLessGreat' value64='41'/>
<enum name='tokenLiteral' value64='9'/>
<enum name='tokenMicro' value64='65'/>
<enum name='tokenMinus' value64='25'/>
<enum name='tokenNewLine' value64='6'/>
<enum name='tokenNil' value64='127'/>
<enum name='tokenNoBreakSpace' value64='71'/>
<enum name='tokenNotEqual' value64='40'/>
<enum name='tokenNumeric' value64='5'/>
<enum name='tokenOK' value64='0'/>
<enum name='tokenOverflow' value64='1'/>
<enum name='tokenPerThousand' value64='76'/>
<enum name='tokenPercent' value64='54'/>
<enum name='tokenPeriod' value64='46'/>
<enum name='tokenPi' value64='61'/>
<enum name='tokenPlus' value64='24'/>
<enum name='tokenPlusMinus' value64='28'/>
<enum name='tokenQuestion' value64='60'/>
<enum name='tokenRealNum' value64='12'/>
<enum name='tokenReserve1' value64='14'/>
<enum name='tokenReserve2' value64='15'/>
<enum name='tokenRight1Quote' value64='50'/>
<enum name='tokenRight2Quote' value64='48'/>
<enum name='tokenRightBracket' value64='19'/>
<enum name='tokenRightComment' value64='8'/>
<enum name='tokenRightCurly' value64='21'/>
<enum name='tokenRightEnclose' value64='23'/>
<enum name='tokenRightLit' value64='3'/>
<enum name='tokenRightParen' value64='17'/>
<enum name='tokenRightSingGuillemet' value64='75'/>
<enum name='tokenRoot' value64='62'/>
<enum name='tokenSemicolon' value64='53'/>
<enum name='tokenSigma' value64='63'/>
<enum name='tokenSlash' value64='29'/>
<enum name='tokenTilda' value64='44'/>
<enum name='tokenTilde' value64='44'/>
<enum name='tokenUnderline' value64='56'/>
<enum name='tokenUnknown' value64='0'/>
<enum name='tokenWhite' value64='1'/>
<enum name='tooManyReqs' value64='-1097'/>
<enum name='tooManySeps' value64='32'/>
<enum name='tooManySkts' value64='-1098'/>
<enum name='trackIDNotFound' value64='-2029'/>
<enum name='trackNotInMovie' value64='-2030'/>
<enum name='true32b' value64='1'/>
<enum name='tsmAlreadyRegisteredErr' value64='-2503'/>
<enum name='tsmCantChangeForcedClassStateErr' value64='-2530'/>
<enum name='tsmCantOpenComponentErr' value64='-2509'/>
<enum name='tsmComponentAlreadyOpenErr' value64='-2515'/>
<enum name='tsmComponentNoErr' value64='0'/>
<enum name='tsmComponentPropertyNotFoundErr' value64='-2532'/>
<enum name='tsmComponentPropertyUnsupportedErr' value64='-2531'/>
<enum name='tsmDefaultIsNotInputMethodErr' value64='-2524'/>
<enum name='tsmDocNotActiveErr' value64='-2507'/>
<enum name='tsmDocPropertyBufferTooSmallErr' value64='-2529'/>
<enum name='tsmDocPropertyNotFoundErr' value64='-2528'/>
<enum name='tsmDocumentOpenErr' value64='-2511'/>
<enum name='tsmInputMethodIsOldErr' value64='-2516'/>
<enum name='tsmInputMethodNotFoundErr' value64='-2501'/>
<enum name='tsmInputModeChangeFailedErr' value64='-2533'/>
<enum name='tsmInvalidContext' value64='-2520'/>
<enum name='tsmInvalidDocIDErr' value64='-2505'/>
<enum name='tsmNeverRegisteredErr' value64='-2504'/>
<enum name='tsmNoHandler' value64='-2521'/>
<enum name='tsmNoMoreTokens' value64='-2522'/>
<enum name='tsmNoOpenTSErr' value64='-2508'/>
<enum name='tsmNoStem' value64='-2523'/>
<enum name='tsmNotAnAppErr' value64='-2502'/>
<enum name='tsmScriptHasNoIMErr' value64='-2517'/>
<enum name='tsmTSHasNoMenuErr' value64='-2513'/>
<enum name='tsmTSMDocBusyErr' value64='-2506'/>
<enum name='tsmTSNotOpenErr' value64='-2514'/>
<enum name='tsmTextServiceNotFoundErr' value64='-2510'/>
<enum name='tsmUnknownErr' value64='-2519'/>
<enum name='tsmUnsupScriptLanguageErr' value64='-2500'/>
<enum name='tsmUnsupportedTypeErr' value64='-2518'/>
<enum name='tsmUseInputWindowErr' value64='-2512'/>
<enum name='tuneParseOSErr' value64='-2087'/>
<enum name='tunePlayerFullOSErr' value64='-2086'/>
<enum name='twoSideErr' value64='-78'/>
<enum name='unicodeBufErr' value64='-8764'/>
<enum name='unicodeCharErr' value64='-8763'/>
<enum name='unicodeChecksumErr' value64='-8769'/>
<enum name='unicodeContextualErr' value64='-8758'/>
<enum name='unicodeDirectionErr' value64='-8759'/>
<enum name='unicodeElementErr' value64='-8762'/>
<enum name='unicodeFallbacksErr' value64='-8766'/>
<enum name='unicodeNoTableErr' value64='-8768'/>
<enum name='unicodeNotFoundErr' value64='-8761'/>
<enum name='unicodePartConvertErr' value64='-8765'/>
<enum name='unicodeTableFormatErr' value64='-8760'/>
<enum name='unicodeTextEncodingDataErr' value64='-8757'/>
<enum name='unicodeVariantErr' value64='-8767'/>
<enum name='unimpErr' value64='-4'/>
<enum name='unitEmptyErr' value64='-22'/>
<enum name='unitTblFullErr' value64='-29'/>
<enum name='unknownFormatErr' value64='-2114'/>
<enum name='unknownInsertModeErr' value64='-20000'/>
<enum name='unresolvedComponentDLLErr' value64='-3004'/>
<enum name='unsupportedAuxiliaryImportData' value64='-2057'/>
<enum name='unsupportedForPlatformErr' value64='-1858'/>
<enum name='unsupportedOSErr' value64='-2096'/>
<enum name='unsupportedProcessorErr' value64='-2097'/>
<enum name='updPixMemErr' value64='-125'/>
<enum name='uppCallComponentCanDoProcInfo' value64='752'/>
<enum name='uppCallComponentCloseProcInfo' value64='1008'/>
<enum name='uppCallComponentGetMPWorkFunctionProcInfo' value64='4080'/>
<enum name='uppCallComponentGetPublicResourceProcInfo' value64='15344'/>
<enum name='uppCallComponentOpenProcInfo' value64='1008'/>
<enum name='uppCallComponentRegisterProcInfo' value64='240'/>
<enum name='uppCallComponentTargetProcInfo' value64='1008'/>
<enum name='uppCallComponentUnregisterProcInfo' value64='240'/>
<enum name='uppCallComponentVersionProcInfo' value64='240'/>
<enum name='uppComponentFunctionImplementedProcInfo' value64='752'/>
<enum name='uppComponentSetTargetProcInfo' value64='1008'/>
<enum name='uppGetComponentVersionProcInfo' value64='240'/>
<enum name='urlDataHFTPBadNameListErr' value64='-2144'/>
<enum name='urlDataHFTPBadPasswordErr' value64='-2136'/>
<enum name='urlDataHFTPBadUserErr' value64='-2135'/>
<enum name='urlDataHFTPDataConnectionErr' value64='-2138'/>
<enum name='urlDataHFTPFilenameErr' value64='-2142'/>
<enum name='urlDataHFTPNeedPasswordErr' value64='-2145'/>
<enum name='urlDataHFTPNoDirectoryErr' value64='-2139'/>
<enum name='urlDataHFTPNoNetDriverErr' value64='-2143'/>
<enum name='urlDataHFTPNoPasswordErr' value64='-2146'/>
<enum name='urlDataHFTPPermissionsErr' value64='-2141'/>
<enum name='urlDataHFTPProtocolErr' value64='-2133'/>
<enum name='urlDataHFTPQuotaErr' value64='-2140'/>
<enum name='urlDataHFTPServerDisconnectedErr' value64='-2147'/>
<enum name='urlDataHFTPServerErr' value64='-2137'/>
<enum name='urlDataHFTPShutdownErr' value64='-2134'/>
<enum name='urlDataHFTPURLErr' value64='-2148'/>
<enum name='urlDataHHTTPNoNetDriverErr' value64='-2130'/>
<enum name='urlDataHHTTPProtocolErr' value64='-2129'/>
<enum name='urlDataHHTTPRedirectErr' value64='-2132'/>
<enum name='urlDataHHTTPURLErr' value64='-2131'/>
<enum name='useATalk' value64='1'/>
<enum name='useAsync' value64='2'/>
<enum name='useExtClk' value64='3'/>
<enum name='useFree' value64='0'/>
<enum name='useMIDI' value64='4'/>
<enum name='userBreak' value64='-490'/>
<enum name='userCanceledErr' value64='-128'/>
<enum name='userDataItemNotFound' value64='-2026'/>
<enum name='userRejectErr' value64='-912'/>
<enum name='vLckdErr' value64='-46'/>
<enum name='vTypErr' value64='-2'/>
<enum name='vType' value64='1'/>
<enum name='validDateFields' value64='-1'/>
<enum name='validInstancesExist' value64='-3001'/>
<enum name='verAfrikaans' value64='102'/>
<enum name='verAlternateGr' value64='64'/>
<enum name='verArabia' value64='16'/>
<enum name='verArabic' value64='16'/>
<enum name='verArmenia' value64='84'/>
<enum name='verArmenian' value64='84'/>
<enum name='verAustralia' value64='15'/>
<enum name='verAustria' value64='92'/>
<enum name='verAustriaGerman' value64='92'/>
<enum name='verBelarus' value64='61'/>
<enum name='verBelgiumLux' value64='6'/>
<enum name='verBelgiumLuxPoint' value64='27'/>
<enum name='verBengali' value64='60'/>
<enum name='verBhutan' value64='83'/>
<enum name='verBrazil' value64='71'/>
<enum name='verBreton' value64='77'/>
<enum name='verBritain' value64='2'/>
<enum name='verBrittany' value64='77'/>
<enum name='verBulgaria' value64='72'/>
<enum name='verByeloRussian' value64='61'/>
<enum name='verCanadaComma' value64='28'/>
<enum name='verCanadaPoint' value64='29'/>
<enum name='verCatalonia' value64='73'/>
<enum name='verChina' value64='52'/>
<enum name='verCroatia' value64='68'/>
<enum name='verCyprus' value64='23'/>
<enum name='verCzech' value64='56'/>
<enum name='verDenmark' value64='9'/>
<enum name='verEastAsiaGeneric' value64='58'/>
<enum name='verEngCanada' value64='82'/>
<enum name='verErr' value64='-84'/>
<enum name='verEsperanto' value64='103'/>
<enum name='verEstonia' value64='44'/>
<enum name='verFaeroeIsl' value64='47'/>
<enum name='verFarEastGeneric' value64='58'/>
<enum name='verFaroeIsl' value64='47'/>
<enum name='verFinland' value64='17'/>
<enum name='verFlemish' value64='6'/>
<enum name='verFlemishPoint' value64='27'/>
<enum name='verFrBelgium' value64='98'/>
<enum name='verFrBelgiumLux' value64='6'/>
<enum name='verFrCanada' value64='11'/>
<enum name='verFrSwiss' value64='18'/>
<enum name='verFrance' value64='1'/>
<enum name='verFrenchUniversal' value64='91'/>
<enum name='verGenericFE' value64='58'/>
<enum name='verGeorgia' value64='85'/>
<enum name='verGeorgian' value64='85'/>
<enum name='verGermanReformed' value64='70'/>
<enum name='verGermany' value64='3'/>
<enum name='verGrSwiss' value64='19'/>
<enum name='verGreece' value64='20'/>
<enum name='verGreeceAlt' value64='64'/>
<enum name='verGreecePoly' value64='40'/>
<enum name='verGreekAncient' value64='40'/>
<enum name='verGreenland' value64='107'/>
<enum name='verGujarati' value64='94'/>
<enum name='verHungary' value64='43'/>
<enum name='verIceland' value64='21'/>
<enum name='verIndia' value64='33'/>
<enum name='verIndiaHindi' value64='33'/>
<enum name='verIndiaUrdu' value64='96'/>
<enum name='verInternational' value64='37'/>
<enum name='verIran' value64='48'/>
<enum name='verIreland' value64='50'/>
<enum name='verIrelandEnglish' value64='108'/>
<enum name='verIrishGaelicScript' value64='81'/>
<enum name='verIsrael' value64='13'/>
<enum name='verItalianSwiss' value64='36'/>
<enum name='verItaly' value64='4'/>
<enum name='verJapan' value64='14'/>
<enum name='verKorea' value64='51'/>
<enum name='verLapland' value64='46'/>
<enum name='verLatvia' value64='45'/>
<enum name='verLithuania' value64='41'/>
<enum name='verMacedonia' value64='67'/>
<enum name='verMacedonian' value64='67'/>
<enum name='verMagyar' value64='59'/>
<enum name='verMalta' value64='22'/>
<enum name='verManxGaelic' value64='76'/>
<enum name='verMarathi' value64='104'/>
<enum name='verMultilingual' value64='74'/>
<enum name='verNepal' value64='106'/>
<enum name='verNetherlands' value64='5'/>
<enum name='verNetherlandsComma' value64='26'/>
<enum name='verNorway' value64='12'/>
<enum name='verNunavut' value64='78'/>
<enum name='verNynorsk' value64='101'/>
<enum name='verPakistan' value64='34'/>
<enum name='verPakistanUrdu' value64='34'/>
<enum name='verPoland' value64='42'/>
<enum name='verPortugal' value64='10'/>
<enum name='verPunjabi' value64='95'/>
<enum name='verRomania' value64='39'/>
<enum name='verRumania' value64='39'/>
<enum name='verRussia' value64='49'/>
<enum name='verSami' value64='46'/>
<enum name='verScottishGaelic' value64='75'/>
<enum name='verScriptGeneric' value64='55'/>
<enum name='verSerbia' value64='65'/>
<enum name='verSerbian' value64='65'/>
<enum name='verSingapore' value64='100'/>
<enum name='verSlovak' value64='57'/>
<enum name='verSlovenia' value64='66'/>
<enum name='verSlovenian' value64='66'/>
<enum name='verSpLatinAmerica' value64='86'/>
<enum name='verSpain' value64='8'/>
<enum name='verSweden' value64='7'/>
<enum name='verTaiwan' value64='53'/>
<enum name='verThailand' value64='54'/>
<enum name='verTibet' value64='105'/>
<enum name='verTibetan' value64='105'/>
<enum name='verTonga' value64='88'/>
<enum name='verTurkey' value64='24'/>
<enum name='verTurkishModified' value64='35'/>
<enum name='verUS' value64='0'/>
<enum name='verUkraine' value64='62'/>
<enum name='verUkrania' value64='62'/>
<enum name='verUnspecified' value64='32767'/>
<enum name='verUzbek' value64='99'/>
<enum name='verVietnam' value64='97'/>
<enum name='verWales' value64='79'/>
<enum name='verWelsh' value64='79'/>
<enum name='verYugoCroatian' value64='25'/>
<enum name='verYugoslavia' value64='25'/>
<enum name='vervariantDenmark' value64='32'/>
<enum name='vervariantNorway' value64='31'/>
<enum name='vervariantPortugal' value64='30'/>
<enum name='videoOutputInUseErr' value64='-2090'/>
<enum name='vmAddressNotInFileViewErr' value64='-647'/>
<enum name='vmBadDriver' value64='-632'/>
<enum name='vmBusyBackingFileErr' value64='-642'/>
<enum name='vmFileViewAccessErr' value64='-645'/>
<enum name='vmInvalidBackingFileIDErr' value64='-640'/>
<enum name='vmInvalidFileViewIDErr' value64='-644'/>
<enum name='vmInvalidOwningProcessErr' value64='-648'/>
<enum name='vmKernelMMUInitErr' value64='-629'/>
<enum name='vmMappingPrivilegesErr' value64='-641'/>
<enum name='vmMemLckdErr' value64='-631'/>
<enum name='vmMorePhysicalThanVirtualErr' value64='-628'/>
<enum name='vmNoMoreBackingFilesErr' value64='-643'/>
<enum name='vmNoMoreFileViewsErr' value64='-646'/>
<enum name='vmNoVectorErr' value64='-633'/>
<enum name='vmOffErr' value64='-630'/>
<enum name='voiceNotFound' value64='-244'/>
<enum name='volGoneErr' value64='-124'/>
<enum name='volMountChangedBit' value64='14'/>
<enum name='volMountChangedMask' value64='16384'/>
<enum name='volMountExtendedFlagsBit' value64='7'/>
<enum name='volMountExtendedFlagsMask' value64='128'/>
<enum name='volMountFSReservedMask' value64='255'/>
<enum name='volMountInteractBit' value64='15'/>
<enum name='volMountInteractMask' value64='32768'/>
<enum name='volMountNoLoginMsgFlagBit' value64='0'/>
<enum name='volMountNoLoginMsgFlagMask' value64='1'/>
<enum name='volMountSysReservedMask' value64='65280'/>
<enum name='volOffLinErr' value64='-53'/>
<enum name='volOnLinErr' value64='-55'/>
<enum name='volVMBusyErr' value64='-1311'/>
<enum name='wPrErr' value64='-44'/>
<enum name='wackBadFileErr' value64='-2115'/>
<enum name='wackBadMetaDataErr' value64='-2117'/>
<enum name='wackForkNotFoundErr' value64='-2116'/>
<enum name='weekOfYearField' value64='9'/>
<enum name='weekOfYearMask' value64='512'/>
<enum name='wfFileNotFound' value64='-2021'/>
<enum name='windowAppModalStateAlreadyExistsErr' value64='-5617'/>
<enum name='windowAttributeImmutableErr' value64='-5612'/>
<enum name='windowAttributesConflictErr' value64='-5613'/>
<enum name='windowGroupInvalidErr' value64='-5616'/>
<enum name='windowManagerInternalErr' value64='-5614'/>
<enum name='windowNoAppModalStateErr' value64='-5618'/>
<enum name='windowWrongStateErr' value64='-5615'/>
<enum name='wrPermErr' value64='-61'/>
<enum name='wrUnderrun' value64='-74'/>
<enum name='wrgVolTypErr' value64='-123'/>
<enum name='writErr' value64='-20'/>
<enum name='writeReference' value64='0'/>
<enum name='writingPastEnd' value64='-189'/>
<enum name='wrongApplicationPlatform' value64='-875'/>
<enum name='ydm' value64='5'/>
<enum name='yearField' value64='1'/>
<enum name='yearMask' value64='2'/>
<enum name='ymd' value64='2'/>
<enum name='zeroCycle' value64='1'/>
<function name='AbsoluteDeltaToDuration'>
<arg declared_type64='AbsoluteTime' name='leftAbsoluteTime' type64='{UnsignedWide=II}'/>
<arg declared_type64='AbsoluteTime' name='rightAbsoluteTime' type64='{UnsignedWide=II}'/>
<retval declared_type64='Duration' type64='i'/>
</function>
<function name='AbsoluteDeltaToNanoseconds'>
<arg declared_type64='AbsoluteTime' name='leftAbsoluteTime' type64='{UnsignedWide=II}'/>
<arg declared_type64='AbsoluteTime' name='rightAbsoluteTime' type64='{UnsignedWide=II}'/>
<retval declared_type64='Nanoseconds' type64='{UnsignedWide=II}'/>
</function>
<function name='AbsoluteToDuration'>
<arg declared_type64='AbsoluteTime' name='absoluteTime' type64='{UnsignedWide=II}'/>
<retval declared_type64='Duration' type64='i'/>
</function>
<function name='AbsoluteToNanoseconds'>
<arg declared_type64='AbsoluteTime' name='absoluteTime' type64='{UnsignedWide=II}'/>
<retval declared_type64='Nanoseconds' type64='{UnsignedWide=II}'/>
</function>
<function name='AddAbsoluteToAbsolute'>
<arg declared_type64='AbsoluteTime' name='absoluteTime1' type64='{UnsignedWide=II}'/>
<arg declared_type64='AbsoluteTime' name='absoluteTime2' type64='{UnsignedWide=II}'/>
<retval declared_type64='AbsoluteTime' type64='{UnsignedWide=II}'/>
</function>
<function name='AddAtomic'>
<arg declared_type64='SInt32' name='amount' type64='i'/>
<arg declared_type64='SInt32*' name='address' type64='^i'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='AddAtomic16'>
<arg declared_type64='SInt32' name='amount' type64='i'/>
<arg declared_type64='SInt16*' name='address' type64='^s'/>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='AddAtomic8'>
<arg declared_type64='SInt32' name='amount' type64='i'/>
<arg declared_type64='SInt8*' name='address' type64='*'/>
<retval declared_type64='SInt8' type64='c'/>
</function>
<function name='AddCollectionItem'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<arg declared_type64='SInt32' name='id' type64='i'/>
<arg declared_type64='SInt32' name='itemSize' type64='i'/>
<arg const='true' declared_type64='void*' name='itemData' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='AddCollectionItemHdl'>
<arg declared_type64='Collection' name='aCollection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<arg declared_type64='SInt32' name='id' type64='i'/>
<arg declared_type64='Handle' name='itemData' type64='^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='AddDurationToAbsolute'>
<arg declared_type64='Duration' name='duration' type64='i'/>
<arg declared_type64='AbsoluteTime' name='absoluteTime' type64='{UnsignedWide=II}'/>
<retval declared_type64='AbsoluteTime' type64='{UnsignedWide=II}'/>
</function>
<function name='AddFolderDescriptor'>
<arg declared_type64='FolderType' name='foldType' type64='I'/>
<arg declared_type64='FolderDescFlags' name='flags' type64='I'/>
<arg declared_type64='FolderClass' name='foldClass' type64='I'/>
<arg declared_type64='FolderLocation' name='foldLocation' type64='I'/>
<arg declared_type64='OSType' name='badgeSignature' type64='I'/>
<arg declared_type64='OSType' name='badgeType' type64='I'/>
<arg declared_type64='ConstStrFileNameParam' name='name' type64='*'/>
<arg declared_type64='Boolean' name='replaceFlag' type64='B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='AddNanosecondsToAbsolute'>
<arg declared_type64='Nanoseconds' name='nanoseconds' type64='{UnsignedWide=II}'/>
<arg declared_type64='AbsoluteTime' name='absoluteTime' type64='{UnsignedWide=II}'/>
<retval declared_type64='AbsoluteTime' type64='{UnsignedWide=II}'/>
</function>
<function name='AddResource'>
<arg declared_type64='Handle' name='theData' type64='^*'/>
<arg declared_type64='ResType' name='theType' type64='I'/>
<arg declared_type64='ResID' name='theID' type64='s'/>
<arg declared_type64='ConstStr255Param' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='BitAnd'>
<arg declared_type64='long' name='value1' type64='q'/>
<arg declared_type64='long' name='value2' type64='q'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='BitAndAtomic'>
<arg declared_type64='UInt32' name='mask' type64='I'/>
<arg declared_type64='UInt32*' name='address' type64='^I'/>
<retval declared_type64='UInt32' type64='I'/>
</function>
<function name='BitAndAtomic16'>
<arg declared_type64='UInt32' name='mask' type64='I'/>
<arg declared_type64='UInt16*' name='address' type64='^S'/>
<retval declared_type64='UInt16' type64='S'/>
</function>
<function name='BitAndAtomic8'>
<arg declared_type64='UInt32' name='mask' type64='I'/>
<arg declared_type64='UInt8*' name='address' type64='*'/>
<retval declared_type64='UInt8' type64='C'/>
</function>
<function name='BitClr'>
<arg declared_type64='void*' name='bytePtr' type64='^v'/>
<arg declared_type64='long' name='bitNum' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='BitNot'>
<arg declared_type64='long' name='value' type64='q'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='BitOr'>
<arg declared_type64='long' name='value1' type64='q'/>
<arg declared_type64='long' name='value2' type64='q'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='BitOrAtomic'>
<arg declared_type64='UInt32' name='mask' type64='I'/>
<arg declared_type64='UInt32*' name='address' type64='^I'/>
<retval declared_type64='UInt32' type64='I'/>
</function>
<function name='BitOrAtomic16'>
<arg declared_type64='UInt32' name='mask' type64='I'/>
<arg declared_type64='UInt16*' name='address' type64='^S'/>
<retval declared_type64='UInt16' type64='S'/>
</function>
<function name='BitOrAtomic8'>
<arg declared_type64='UInt32' name='mask' type64='I'/>
<arg declared_type64='UInt8*' name='address' type64='*'/>
<retval declared_type64='UInt8' type64='C'/>
</function>
<function name='BitSet'>
<arg declared_type64='void*' name='bytePtr' type64='^v'/>
<arg declared_type64='long' name='bitNum' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='BitShift'>
<arg declared_type64='long' name='value' type64='q'/>
<arg declared_type64='short' name='count' type64='s'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='BitTst'>
<arg const='true' declared_type64='void*' name='bytePtr' type64='^v'/>
<arg declared_type64='long' name='bitNum' type64='q'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='BitXor'>
<arg declared_type64='long' name='value1' type64='q'/>
<arg declared_type64='long' name='value2' type64='q'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='BitXorAtomic'>
<arg declared_type64='UInt32' name='mask' type64='I'/>
<arg declared_type64='UInt32*' name='address' type64='^I'/>
<retval declared_type64='UInt32' type64='I'/>
</function>
<function name='BitXorAtomic16'>
<arg declared_type64='UInt32' name='mask' type64='I'/>
<arg declared_type64='UInt16*' name='address' type64='^S'/>
<retval declared_type64='UInt16' type64='S'/>
</function>
<function name='BitXorAtomic8'>
<arg declared_type64='UInt32' name='mask' type64='I'/>
<arg declared_type64='UInt8*' name='address' type64='*'/>
<retval declared_type64='UInt8' type64='C'/>
</function>
<function name='CSBackupIsItemExcluded'>
<arg declared_type64='CFURLRef' name='item' type64='^{__CFURL=}'/>
<arg declared_type64='Boolean*' name='excludeByPath' type64='^B'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CSBackupSetItemExcluded'>
<arg declared_type64='CFURLRef' name='item' type64='^{__CFURL=}'/>
<arg declared_type64='Boolean' name='exclude' type64='B'/>
<arg declared_type64='Boolean' name='excludeByPath' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CSCopyMachineName'>
<retval already_retained='true' declared_type64='CFStringRef' type64='^{__CFString=}'/>
</function>
<function name='CSCopyUserName'>
<arg declared_type64='Boolean' name='useShortName' type64='B'/>
<retval already_retained='true' declared_type64='CFStringRef' type64='^{__CFString=}'/>
</function>
<function name='CSDiskSpaceCancelRecovery'>
<arg declared_type64='CFUUIDRef' name='operationUUID' type64='^{__CFUUID=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSDiskSpaceGetRecoveryEstimate'>
<arg declared_type64='CFURLRef' name='volumeURL' type64='^{__CFURL=}'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='CSDiskSpaceStartRecovery'>
<arg declared_type64='CFURLRef' name='volumeURL' type64='^{__CFURL=}'/>
<arg declared_type64='UInt64' name='bytesNeeded' type64='Q'/>
<arg declared_type64='CSDiskSpaceRecoveryOptions' name='options' type64='i'/>
<arg declared_type64='CFUUIDRef*' name='outOperationUUID' type64='^^{__CFUUID}'/>
<arg declared_type64='dispatch_queue_t' name='callbackQueue' type64='@'/>
<arg declared_type64='CSDiskSpaceRecoveryCallback' function_pointer='true' name='callback' type64='@?'>
<arg declared_type64='Boolean' type64='B'/>
<arg declared_type64='UInt64' type64='Q'/>
<arg declared_type64='CFErrorRef' type64='^{__CFError=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSGetComponentsThreadMode'>
<retval declared_type64='CSComponentsThreadMode' type64='I'/>
</function>
<function name='CSSetComponentsThreadMode'>
<arg declared_type64='CSComponentsThreadMode' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CallComponentCanDo'>
<arg declared_type64='ComponentInstance' name='ci' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type64='SInt16' name='ftnNumber' type64='s'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentClose'>
<arg declared_type64='ComponentInstance' name='ci' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type64='ComponentInstance' name='self' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentDispatch'>
<arg declared_type64='ComponentParameters*' name='cp' type64='^{ComponentParameters=CCsI[1q]}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentFunction'>
<arg declared_type64='ComponentParameters*' name='params' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type64='ComponentFunctionUPP' function_pointer='true' name='func' type64='^?'>
<retval declared_type64='long' type64='q'/>
</arg>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentFunctionWithStorage'>
<arg declared_type64='Handle' name='storage' type64='^*'/>
<arg declared_type64='ComponentParameters*' name='params' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type64='ComponentFunctionUPP' function_pointer='true' name='func' type64='^?'>
<retval declared_type64='long' type64='q'/>
</arg>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentFunctionWithStorageProcInfo'>
<arg declared_type64='Handle' name='storage' type64='^*'/>
<arg declared_type64='ComponentParameters*' name='params' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type64='ProcPtr' function_pointer='true' name='func' type64='^?'>
<retval declared_type64='long' type64='q'/>
</arg>
<arg declared_type64='ProcInfoType' name='funcProcInfo' type64='Q'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentGetMPWorkFunction'>
<arg declared_type64='ComponentInstance' name='ci' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type64='ComponentMPWorkFunctionUPP*' name='workFunction' type64='^^?'/>
<arg declared_type64='void**' name='refCon' type64='^^v'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentGetPublicResource'>
<arg declared_type64='ComponentInstance' name='ci' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type64='OSType' name='resourceType' type64='I'/>
<arg declared_type64='SInt16' name='resourceID' type64='s'/>
<arg declared_type64='Handle*' name='resource' type64='^^*'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentOpen'>
<arg declared_type64='ComponentInstance' name='ci' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type64='ComponentInstance' name='self' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentRegister'>
<arg declared_type64='ComponentInstance' name='ci' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentTarget'>
<arg declared_type64='ComponentInstance' name='ci' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type64='ComponentInstance' name='target' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentUnregister'>
<arg declared_type64='ComponentInstance' name='ci' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CallComponentVersion'>
<arg declared_type64='ComponentInstance' name='ci' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='CaptureComponent'>
<arg declared_type64='Component' name='capturedComponent' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='Component' name='capturingComponent' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type64='Component' type64='^{ComponentRecord=[1q]}'/>
</function>
<function name='ChangeTextToUnicodeInfo'>
<arg declared_type64='TextToUnicodeInfo' name='ioTextToUnicodeInfo' type64='^{OpaqueTextToUnicodeInfo=}'/>
<arg declared_type64='ConstUnicodeMappingPtr' name='iUnicodeMapping' type64='^{UnicodeMapping=IIi}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ChangeUnicodeToTextInfo'>
<arg declared_type64='UnicodeToTextInfo' name='ioUnicodeToTextInfo' type64='^{OpaqueUnicodeToTextInfo=}'/>
<arg declared_type64='ConstUnicodeMappingPtr' name='iUnicodeMapping' type64='^{UnicodeMapping=IIi}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ChangedResource'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CloneCollection'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<retval declared_type64='Collection' type64='^{OpaqueCollection=}'/>
</function>
<function name='CloseComponent'>
<arg declared_type64='ComponentInstance' name='aComponentInstance' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='CloseComponentResFile'>
<arg declared_type64='ResFileRefNum' name='refnum' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='CloseResFile'>
<arg declared_type64='ResFileRefNum' name='refNum' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CollectionTagExists'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CompareAndSwap'>
<arg declared_type64='UInt32' name='oldValue' type64='I'/>
<arg declared_type64='UInt32' name='newValue' type64='I'/>
<arg declared_type64='UInt32*' name='address' type64='^I'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='ConvertFromPStringToUnicode'>
<arg declared_type64='TextToUnicodeInfo' name='iTextToUnicodeInfo' type64='^{OpaqueTextToUnicodeInfo=}'/>
<arg declared_type64='ConstStr255Param' name='iPascalStr' type64='*'/>
<arg declared_type64='ByteCount' name='iOutputBufLen' type64='Q'/>
<arg declared_type64='ByteCount*' name='oUnicodeLen' type64='^Q'/>
<arg declared_type64='UniChar*' name='oUnicodeStr' type64='^S'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ConvertFromTextToUnicode'>
<arg declared_type64='TextToUnicodeInfo' name='iTextToUnicodeInfo' type64='^{OpaqueTextToUnicodeInfo=}'/>
<arg declared_type64='ByteCount' name='iSourceLen' type64='Q'/>
<arg declared_type64='ConstLogicalAddress' name='iSourceStr' type64='^v'/>
<arg declared_type64='OptionBits' name='iControlFlags' type64='I'/>
<arg declared_type64='ItemCount' name='iOffsetCount' type64='Q'/>
<arg const='true' declared_type64='ByteOffset*' name='iOffsetArray' type64='^Q'/>
<arg declared_type64='ItemCount*' name='oOffsetCount' type64='^Q'/>
<arg declared_type64='ByteOffset*' name='oOffsetArray' type64='^Q'/>
<arg declared_type64='ByteCount' name='iOutputBufLen' type64='Q'/>
<arg declared_type64='ByteCount*' name='oSourceRead' type64='^Q'/>
<arg declared_type64='ByteCount*' name='oUnicodeLen' type64='^Q'/>
<arg declared_type64='UniChar*' name='oUnicodeStr' type64='^S'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ConvertFromUnicodeToPString'>
<arg declared_type64='UnicodeToTextInfo' name='iUnicodeToTextInfo' type64='^{OpaqueUnicodeToTextInfo=}'/>
<arg declared_type64='ByteCount' name='iUnicodeLen' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='iUnicodeStr' type64='^S'/>
<arg declared_type64='unsigned char*' name='oPascalStr' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ConvertFromUnicodeToScriptCodeRun'>
<arg declared_type64='UnicodeToTextRunInfo' name='iUnicodeToTextInfo' type64='^{OpaqueUnicodeToTextRunInfo=}'/>
<arg declared_type64='ByteCount' name='iUnicodeLen' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='iUnicodeStr' type64='^S'/>
<arg declared_type64='OptionBits' name='iControlFlags' type64='I'/>
<arg declared_type64='ItemCount' name='iOffsetCount' type64='Q'/>
<arg const='true' declared_type64='ByteOffset*' name='iOffsetArray' type64='^Q'/>
<arg declared_type64='ItemCount*' name='oOffsetCount' type64='^Q'/>
<arg declared_type64='ByteOffset*' name='oOffsetArray' type64='^Q'/>
<arg declared_type64='ByteCount' name='iOutputBufLen' type64='Q'/>
<arg declared_type64='ByteCount*' name='oInputRead' type64='^Q'/>
<arg declared_type64='ByteCount*' name='oOutputLen' type64='^Q'/>
<arg declared_type64='LogicalAddress' name='oOutputStr' type64='^v'/>
<arg declared_type64='ItemCount' name='iScriptRunBufLen' type64='Q'/>
<arg declared_type64='ItemCount*' name='oScriptRunOutLen' type64='^Q'/>
<arg declared_type64='ScriptCodeRun*' name='oScriptCodeRuns' type64='^{ScriptCodeRun=Qs}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ConvertFromUnicodeToText'>
<arg declared_type64='UnicodeToTextInfo' name='iUnicodeToTextInfo' type64='^{OpaqueUnicodeToTextInfo=}'/>
<arg declared_type64='ByteCount' name='iUnicodeLen' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='iUnicodeStr' type64='^S'/>
<arg declared_type64='OptionBits' name='iControlFlags' type64='I'/>
<arg declared_type64='ItemCount' name='iOffsetCount' type64='Q'/>
<arg const='true' declared_type64='ByteOffset*' name='iOffsetArray' type64='^Q'/>
<arg declared_type64='ItemCount*' name='oOffsetCount' type64='^Q'/>
<arg declared_type64='ByteOffset*' name='oOffsetArray' type64='^Q'/>
<arg declared_type64='ByteCount' name='iOutputBufLen' type64='Q'/>
<arg declared_type64='ByteCount*' name='oInputRead' type64='^Q'/>
<arg declared_type64='ByteCount*' name='oOutputLen' type64='^Q'/>
<arg declared_type64='LogicalAddress' name='oOutputStr' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ConvertFromUnicodeToTextRun'>
<arg declared_type64='UnicodeToTextRunInfo' name='iUnicodeToTextInfo' type64='^{OpaqueUnicodeToTextRunInfo=}'/>
<arg declared_type64='ByteCount' name='iUnicodeLen' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='iUnicodeStr' type64='^S'/>
<arg declared_type64='OptionBits' name='iControlFlags' type64='I'/>
<arg declared_type64='ItemCount' name='iOffsetCount' type64='Q'/>
<arg const='true' declared_type64='ByteOffset*' name='iOffsetArray' type64='^Q'/>
<arg declared_type64='ItemCount*' name='oOffsetCount' type64='^Q'/>
<arg declared_type64='ByteOffset*' name='oOffsetArray' type64='^Q'/>
<arg declared_type64='ByteCount' name='iOutputBufLen' type64='Q'/>
<arg declared_type64='ByteCount*' name='oInputRead' type64='^Q'/>
<arg declared_type64='ByteCount*' name='oOutputLen' type64='^Q'/>
<arg declared_type64='LogicalAddress' name='oOutputStr' type64='^v'/>
<arg declared_type64='ItemCount' name='iEncodingRunBufLen' type64='Q'/>
<arg declared_type64='ItemCount*' name='oEncodingRunOutLen' type64='^Q'/>
<arg declared_type64='TextEncodingRun*' name='oEncodingRuns' type64='^{TextEncodingRun=QI}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CopyCollection'>
<arg declared_type64='Collection' name='srcCollection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='Collection' name='dstCollection' type64='^{OpaqueCollection=}'/>
<retval declared_type64='Collection' type64='^{OpaqueCollection=}'/>
</function>
<function name='CoreEndianFlipData'>
<arg declared_type64='OSType' name='dataDomain' type64='I'/>
<arg declared_type64='OSType' name='dataType' type64='I'/>
<arg declared_type64='SInt16' name='id' type64='s'/>
<arg declared_type64='void*' name='data' type64='^v'/>
<arg declared_type64='ByteCount' name='dataLen' type64='Q'/>
<arg declared_type64='Boolean' name='currentlyNative' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CoreEndianGetFlipper'>
<arg declared_type64='OSType' name='dataDomain' type64='I'/>
<arg declared_type64='OSType' name='dataType' type64='I'/>
<arg declared_type64='CoreEndianFlipProc*' name='proc' type64='^^?'/>
<arg declared_type64='void**' name='refcon' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CoreEndianInstallFlipper'>
<arg declared_type64='OSType' name='dataDomain' type64='I'/>
<arg declared_type64='OSType' name='dataType' type64='I'/>
<arg declared_type64='CoreEndianFlipProc' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='SInt16' type64='s'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='Boolean' type64='B'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='void*' name='refcon' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='Count1Resources'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<retval declared_type64='ResourceCount' type64='s'/>
</function>
<function name='Count1Types'>
<retval declared_type64='ResourceCount' type64='s'/>
</function>
<function name='CountCollectionItems'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='CountCollectionOwners'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='CountCollectionTags'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='CountComponentInstances'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='CountComponents'>
<arg declared_type64='ComponentDescription*' name='looking' type64='^{ComponentDescription=IIIII}'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='CountResources'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<retval declared_type64='ResourceCount' type64='s'/>
</function>
<function name='CountTaggedCollectionItems'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='CountTypes'>
<retval declared_type64='ResourceCount' type64='s'/>
</function>
<function name='CountUnicodeMappings'>
<arg declared_type64='OptionBits' name='iFilter' type64='I'/>
<arg declared_type64='ConstUnicodeMappingPtr' name='iFindMapping' type64='^{UnicodeMapping=IIi}'/>
<arg declared_type64='ItemCount*' name='oActualCount' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CreateTextEncoding'>
<arg declared_type64='TextEncodingBase' name='encodingBase' type64='I'/>
<arg declared_type64='TextEncodingVariant' name='encodingVariant' type64='I'/>
<arg declared_type64='TextEncodingFormat' name='encodingFormat' type64='I'/>
<retval declared_type64='TextEncoding' type64='I'/>
</function>
<function name='CreateTextToUnicodeInfo'>
<arg declared_type64='ConstUnicodeMappingPtr' name='iUnicodeMapping' type64='^{UnicodeMapping=IIi}'/>
<arg declared_type64='TextToUnicodeInfo*' name='oTextToUnicodeInfo' type64='^^{OpaqueTextToUnicodeInfo}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CreateTextToUnicodeInfoByEncoding'>
<arg declared_type64='TextEncoding' name='iEncoding' type64='I'/>
<arg declared_type64='TextToUnicodeInfo*' name='oTextToUnicodeInfo' type64='^^{OpaqueTextToUnicodeInfo}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CreateThreadPool'>
<arg declared_type64='ThreadStyle' name='threadStyle' type64='I'/>
<arg declared_type64='SInt16' name='numToCreate' type64='s'/>
<arg declared_type64='Size' name='stackSize' type64='q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='CreateUnicodeToTextInfo'>
<arg declared_type64='ConstUnicodeMappingPtr' name='iUnicodeMapping' type64='^{UnicodeMapping=IIi}'/>
<arg declared_type64='UnicodeToTextInfo*' name='oUnicodeToTextInfo' type64='^^{OpaqueUnicodeToTextInfo}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CreateUnicodeToTextInfoByEncoding'>
<arg declared_type64='TextEncoding' name='iEncoding' type64='I'/>
<arg declared_type64='UnicodeToTextInfo*' name='oUnicodeToTextInfo' type64='^^{OpaqueUnicodeToTextInfo}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CreateUnicodeToTextRunInfo'>
<arg declared_type64='ItemCount' name='iNumberOfMappings' type64='Q'/>
<arg const='true' declared_type64='UnicodeMapping*' name='iUnicodeMappings' type64='^{UnicodeMapping=IIi}'/>
<arg declared_type64='UnicodeToTextRunInfo*' name='oUnicodeToTextInfo' type64='^^{OpaqueUnicodeToTextRunInfo}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CreateUnicodeToTextRunInfoByEncoding'>
<arg declared_type64='ItemCount' name='iNumberOfEncodings' type64='Q'/>
<arg const='true' declared_type64='TextEncoding*' name='iEncodings' type64='^I'/>
<arg declared_type64='UnicodeToTextRunInfo*' name='oUnicodeToTextInfo' type64='^^{OpaqueUnicodeToTextRunInfo}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CreateUnicodeToTextRunInfoByScriptCode'>
<arg declared_type64='ItemCount' name='iNumberOfScriptCodes' type64='Q'/>
<arg const='true' declared_type64='ScriptCode*' name='iScripts' type64='^s'/>
<arg declared_type64='UnicodeToTextRunInfo*' name='oUnicodeToTextInfo' type64='^^{OpaqueUnicodeToTextRunInfo}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CurResFile'>
<retval declared_type64='ResFileRefNum' type64='i'/>
</function>
<function name='DebugAssert'>
<arg declared_type64='OSType' name='componentSignature' type64='I'/>
<arg declared_type64='UInt32' name='options' type64='I'/>
<arg const='true' declared_type64='char*' name='assertionString' type64='*'/>
<arg const='true' declared_type64='char*' name='exceptionLabelString' type64='*'/>
<arg const='true' declared_type64='char*' name='errorString' type64='*'/>
<arg const='true' declared_type64='char*' name='fileName' type64='*'/>
<arg declared_type64='long' name='lineNumber' type64='q'/>
<arg declared_type64='void*' name='value' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DecrementAtomic'>
<arg declared_type64='SInt32*' name='address' type64='^i'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='DecrementAtomic16'>
<arg declared_type64='SInt16*' name='address' type64='^s'/>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='DecrementAtomic8'>
<arg declared_type64='SInt8*' name='address' type64='*'/>
<retval declared_type64='SInt8' type64='c'/>
</function>
<function name='Delay'>
<arg declared_type64='unsigned long' name='numTicks' type64='Q'/>
<arg declared_type64='unsigned long*' name='finalTicks' type64='^Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DelegateComponentCall'>
<arg declared_type64='ComponentParameters*' name='originalParams' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type64='ComponentInstance' name='ci' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='DeleteGestaltValue'>
<arg declared_type64='OSType' name='selector' type64='I'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='Dequeue'>
<arg declared_type64='QElemPtr' name='qElement' type64='^{QElem=^{QElem}s[1s]}'/>
<arg declared_type64='QHdrPtr' name='qHeader' type64='^{QHdr=s^{QElem}^{QElem}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='DetachResource'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DetachResourceFile'>
<arg declared_type64='ResFileRefNum' name='refNum' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='DetermineIfPathIsEnclosedByFolder'>
<arg declared_type64='FSVolumeRefNum' name='domainOrVRefNum' type64='s'/>
<arg declared_type64='OSType' name='folderType' type64='I'/>
<arg const='true' declared_type64='UInt8*' name='utf8Path' type64='*'/>
<arg declared_type64='Boolean' name='pathIsRealPath' type64='B'/>
<arg declared_type64='Boolean*' name='outResult' type64='^B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='DisposeAVLCompareItemsUPP'>
<arg declared_type64='AVLCompareItemsUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='AVLNodeType' type64='S'/>
<retval declared_type64='SInt32' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeAVLDisposeItemUPP'>
<arg declared_type64='AVLDisposeItemUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeAVLItemSizeUPP'>
<arg declared_type64='AVLItemSizeUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='ByteCount' type64='Q'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeAVLWalkUPP'>
<arg declared_type64='AVLWalkUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='AVLVisitStage' type64='S'/>
<arg declared_type64='AVLNodeType' type64='S'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeCollection'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeCollectionExceptionUPP'>
<arg declared_type64='CollectionExceptionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='Collection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='OSErr' type64='s'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeCollectionFlattenUPP'>
<arg declared_type64='CollectionFlattenUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeComponentFunctionUPP'>
<arg declared_type64='ComponentFunctionUPP' function_pointer='true' name='userUPP' type64='^?'>
<retval declared_type64='long' type64='q'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeComponentMPWorkFunctionUPP'>
<arg declared_type64='ComponentMPWorkFunctionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ComponentMPWorkFunctionHeaderRecordPtr' type64='^{ComponentMPWorkFunctionHeaderRecord=IIISCC}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeComponentRoutineUPP'>
<arg declared_type64='ComponentRoutineUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ComponentParameters*' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type64='Handle' type64='^*'/>
<retval declared_type64='ComponentResult' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeDebugAssertOutputHandlerUPP'>
<arg declared_type64='DebugAssertOutputHandlerUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='long' type64='q'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ConstStr255Param' type64='*'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeDebugComponent'>
<arg declared_type64='OSType' name='componentSignature' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='DisposeDebugComponentCallbackUPP'>
<arg declared_type64='DebugComponentCallbackUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='Boolean*' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeDebuggerDisposeThreadUPP'>
<arg declared_type64='DebuggerDisposeThreadUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeDebuggerNewThreadUPP'>
<arg declared_type64='DebuggerNewThreadUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeDebuggerThreadSchedulerUPP'>
<arg declared_type64='DebuggerThreadSchedulerUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SchedulerInfoRecPtr' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type64='ThreadID' type64='Q'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeDeferredTaskUPP'>
<arg declared_type64='DeferredTaskUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='long' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeExceptionHandlerUPP'>
<arg declared_type64='ExceptionHandlerUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ExceptionInformation*' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeFNSubscriptionUPP'>
<arg declared_type64='FNSubscriptionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='FNMessage' type64='I'/>
<arg declared_type64='OptionBits' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='FNSubscriptionRef' type64='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeFSVolumeEjectUPP'>
<arg declared_type64='FSVolumeEjectUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<arg declared_type64='pid_t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeFSVolumeMountUPP'>
<arg declared_type64='FSVolumeMountUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeFSVolumeUnmountUPP'>
<arg declared_type64='FSVolumeUnmountUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<arg declared_type64='pid_t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeFolderManagerNotificationUPP'>
<arg declared_type64='FolderManagerNotificationUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeGetMissingComponentResourceUPP'>
<arg declared_type64='GetMissingComponentResourceUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='Component' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='SInt16' type64='s'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='Handle*' type64='^^*'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeHandle'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeIOCompletionUPP'>
<arg declared_type64='IOCompletionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ParmBlkPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeIndexToUCStringUPP'>
<arg declared_type64='IndexToUCStringUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='CFStringRef*' type64='^^{__CFString}'/>
<arg declared_type64='UCTypeSelectOptions*' type64='^S'/>
<retval declared_type64='Boolean' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposePtr'>
<arg declared_type64='Ptr' name='p' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeResErrUPP'>
<arg declared_type64='ResErrUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='OSErr' type64='s'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeSelectorFunctionUPP'>
<arg declared_type64='SelectorFunctionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='SInt32*' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeTextToUnicodeInfo'>
<arg declared_type64='TextToUnicodeInfo*' name='ioTextToUnicodeInfo' type64='^^{OpaqueTextToUnicodeInfo}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='DisposeThread'>
<arg declared_type64='ThreadID' name='threadToDump' type64='Q'/>
<arg declared_type64='void*' name='threadResult' type64='^v'/>
<arg declared_type64='Boolean' name='recycleThread' type64='B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='DisposeThreadEntryUPP'>
<arg declared_type64='ThreadEntryUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='voidPtr' type64='^v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeThreadSchedulerUPP'>
<arg declared_type64='ThreadSchedulerUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SchedulerInfoRecPtr' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type64='ThreadID' type64='Q'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeThreadSwitchUPP'>
<arg declared_type64='ThreadSwitchUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeThreadTerminationUPP'>
<arg declared_type64='ThreadTerminationUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeTimerUPP'>
<arg declared_type64='TimerUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='TMTaskPtr' type64='^{TMTask=^{QElem}s^?qqq}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeUnicodeToTextFallbackUPP'>
<arg declared_type64='UnicodeToTextFallbackUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='UniChar*' type64='^S'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='TextPtr' type64='*'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='LogicalAddress' type64='^v'/>
<arg declared_type64='ConstUnicodeMappingPtr' type64='^{UnicodeMapping=IIi}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeUnicodeToTextInfo'>
<arg declared_type64='UnicodeToTextInfo*' name='ioUnicodeToTextInfo' type64='^^{OpaqueUnicodeToTextInfo}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='DisposeUnicodeToTextRunInfo'>
<arg declared_type64='UnicodeToTextRunInfo*' name='ioUnicodeToTextRunInfo' type64='^^{OpaqueUnicodeToTextRunInfo}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='DurationToAbsolute'>
<arg declared_type64='Duration' name='duration' type64='i'/>
<retval declared_type64='AbsoluteTime' type64='{UnsignedWide=II}'/>
</function>
<function name='DurationToNanoseconds'>
<arg declared_type64='Duration' name='theDuration' type64='i'/>
<retval declared_type64='Nanoseconds' type64='{UnsignedWide=II}'/>
</function>
<function name='EmptyCollection'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='EmptyHandle'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Enqueue'>
<arg declared_type64='QElemPtr' name='qElement' type64='^{QElem=^{QElem}s[1s]}'/>
<arg declared_type64='QHdrPtr' name='qHeader' type64='^{QHdr=s^{QElem}^{QElem}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='FNGetDirectoryForSubscription'>
<arg declared_type64='FNSubscriptionRef' name='subscription' type64='^{OpaqueFNSubscriptionRef=}'/>
<arg declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FNNotify'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FNMessage' name='message' type64='I'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FNNotifyAll'>
<arg declared_type64='FNMessage' name='message' type64='I'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FNNotifyByPath'>
<arg const='true' declared_type64='UInt8*' name='path' type64='*'/>
<arg declared_type64='FNMessage' name='message' type64='I'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FNSubscribe'>
<arg const='true' declared_type64='FSRef*' name='directoryRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FNSubscriptionUPP' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FNMessage' type64='I'/>
<arg declared_type64='OptionBits' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='FNSubscriptionRef' type64='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void*' name='refcon' type64='^v'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FNSubscriptionRef*' name='subscription' type64='^^{OpaqueFNSubscriptionRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FNSubscribeByPath'>
<arg const='true' declared_type64='UInt8*' name='directoryPath' type64='*'/>
<arg declared_type64='FNSubscriptionUPP' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FNMessage' type64='I'/>
<arg declared_type64='OptionBits' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='FNSubscriptionRef' type64='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void*' name='refcon' type64='^v'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FNSubscriptionRef*' name='subscription' type64='^^{OpaqueFNSubscriptionRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FNUnsubscribe'>
<arg declared_type64='FNSubscriptionRef' name='subscription' type64='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSAllocateFork'>
<arg declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<arg declared_type64='FSAllocationFlags' name='flags' type64='S'/>
<arg declared_type64='UInt16' name='positionMode' type64='S'/>
<arg declared_type64='SInt64' name='positionOffset' type64='q'/>
<arg declared_type64='UInt64' name='requestCount' type64='Q'/>
<arg declared_type64='UInt64*' name='actualCount' type64='^Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSCancelVolumeOperation'>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSCatalogSearch'>
<arg declared_type64='FSIterator' name='iterator' type64='^{OpaqueFSIterator=}'/>
<arg const='true' declared_type64='FSSearchParams*' name='searchCriteria' type64='^{FSSearchParams=iIQ^S^{FSCatalogInfo}^{FSCatalogInfo}}'/>
<arg declared_type64='ItemCount' name='maximumObjects' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualObjects' type64='^Q'/>
<arg declared_type64='Boolean*' name='containerChanged' type64='^B'/>
<arg declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<arg declared_type64='FSCatalogInfo*' name='catalogInfos' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type64='FSRef*' name='refs' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSSpecPtr' name='specs' type64='^{FSSpec=[70C]}'/>
<arg declared_type64='HFSUniStr255*' name='names' type64='^{HFSUniStr255=S[255S]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSCloseFork'>
<arg declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSCloseIterator'>
<arg declared_type64='FSIterator' name='iterator' type64='^{OpaqueFSIterator=}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSCompareFSRefs'>
<arg const='true' declared_type64='FSRef*' name='ref1' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='ref2' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSCopyAliasInfo'>
<arg declared_type64='AliasHandle' name='inAlias' type64='^^{AliasRecord}'/>
<arg declared_type64='HFSUniStr255*' name='targetName' type64='^{HFSUniStr255=S[255S]}'/>
<arg declared_type64='HFSUniStr255*' name='volumeName' type64='^{HFSUniStr255=S[255S]}'/>
<arg declared_type64='CFStringRef*' name='pathString' type64='^^{__CFString}'/>
<arg declared_type64='FSAliasInfoBitmap*' name='whichInfo' type64='^I'/>
<arg declared_type64='FSAliasInfo*' name='info' type64='^{FSAliasInfo={UTCDateTime=SIS}{UTCDateTime=SIS}IIIISSBBBBB}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSCopyDADiskForVolume'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='DADiskRef*' name='disk' type64='^^{__DADisk}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSCopyDiskIDForVolume'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='CFStringRef*' name='diskID' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSCopyObjectAsync'>
<arg declared_type64='FSFileOperationRef' name='fileOp' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='FSRef*' name='source' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='destDir' type64='^{FSRef=[80C]}'/>
<arg declared_type64='CFStringRef' name='destName' type64='^{__CFString=}'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FSFileOperationStatusProcPtr' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FSFileOperationRef' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='FSRef*' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSFileOperationStage' type64='I'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFTimeInterval' name='statusChangeInterval' type64='d'/>
<arg declared_type64='FSFileOperationClientContext*' name='clientContext' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSCopyObjectSync'>
<arg const='true' declared_type64='FSRef*' name='source' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='destDir' type64='^{FSRef=[80C]}'/>
<arg declared_type64='CFStringRef' name='destName' type64='^{__CFString=}'/>
<arg declared_type64='FSRef*' name='target' type64='^{FSRef=[80C]}'/>
<arg declared_type64='OptionBits' name='options' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSCopyURLForVolume'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='CFURLRef*' name='url' type64='^^{__CFURL}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSCreateDirectoryUnicode'>
<arg const='true' declared_type64='FSRef*' name='parentRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='nameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='name' type64='^S'/>
<arg declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<arg const='true' declared_type64='FSCatalogInfo*' name='catalogInfo' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type64='FSRef*' name='newRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSSpecPtr' name='newSpec' type64='^{FSSpec=[70C]}'/>
<arg declared_type64='UInt32*' name='newDirID' type64='^I'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSCreateFileAndOpenForkUnicode'>
<arg const='true' declared_type64='FSRef*' name='parentRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='nameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='name' type64='^S'/>
<arg declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<arg const='true' declared_type64='FSCatalogInfo*' name='catalogInfo' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type64='UniCharCount' name='forkNameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='forkName' type64='^S'/>
<arg declared_type64='SInt8' name='permissions' type64='c'/>
<arg declared_type64='FSIORefNum*' name='forkRefNum' type64='^i'/>
<arg declared_type64='FSRef*' name='newRef' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSCreateFileUnicode'>
<arg const='true' declared_type64='FSRef*' name='parentRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='nameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='name' type64='^S'/>
<arg declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<arg const='true' declared_type64='FSCatalogInfo*' name='catalogInfo' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type64='FSRef*' name='newRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSSpecPtr' name='newSpec' type64='^{FSSpec=[70C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSCreateFork'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='forkNameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='forkName' type64='^S'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSCreateResFile'>
<arg const='true' declared_type64='FSRef*' name='parentRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='nameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='name' type64='^S'/>
<arg declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<arg const='true' declared_type64='FSCatalogInfo*' name='catalogInfo' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type64='FSRef*' name='newRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSSpecPtr' name='newSpec' type64='^{FSSpec=[70C]}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='FSCreateResourceFile'>
<arg const='true' declared_type64='FSRef*' name='parentRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='nameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='name' type64='^S'/>
<arg declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<arg const='true' declared_type64='FSCatalogInfo*' name='catalogInfo' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type64='UniCharCount' name='forkNameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='forkName' type64='^S'/>
<arg declared_type64='FSRef*' name='newRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSSpecPtr' name='newSpec' type64='^{FSSpec=[70C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSCreateResourceFork'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='forkNameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='forkName' type64='^S'/>
<arg declared_type64='UInt32' name='flags' type64='I'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSCreateStringFromHFSUniStr'>
<arg declared_type64='CFAllocatorRef' name='alloc' type64='^{__CFAllocator=}'/>
<arg const='true' declared_type64='HFSUniStr255*' name='uniStr' type64='^{HFSUniStr255=S[255S]}'/>
<retval already_retained='true' declared_type64='CFStringRef' type64='^{__CFString=}'/>
</function>
<function name='FSCreateVolumeOperation'>
<arg declared_type64='FSVolumeOperation*' name='volumeOp' type64='^^{OpaqueFSVolumeOperation}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSDeleteFork'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='forkNameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='forkName' type64='^S'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSDeleteObject'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSDetermineIfRefIsEnclosedByFolder'>
<arg declared_type64='FSVolumeRefNum' name='domainOrVRefNum' type64='s'/>
<arg declared_type64='OSType' name='folderType' type64='I'/>
<arg const='true' declared_type64='FSRef*' name='inRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean*' name='outResult' type64='^B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSDisposeVolumeOperation'>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSEjectVolumeAsync'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' name='clientData' type64='^v'/>
<arg declared_type64='FSVolumeEjectUPP' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<arg declared_type64='pid_t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFRunLoopRef' name='runloop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef' name='runloopMode' type64='^{__CFString=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSEjectVolumeSync'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='pid_t*' name='dissenter' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSExchangeObjects'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='destRef' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSFileOperationCancel'>
<arg declared_type64='FSFileOperationRef' name='fileOp' type64='^{__FSFileOperation=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileOperationCopyStatus'>
<arg declared_type64='FSFileOperationRef' name='fileOp' type64='^{__FSFileOperation=}'/>
<arg declared_type64='FSRef*' name='currentItem' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSFileOperationStage*' name='stage' type64='^I'/>
<arg declared_type64='OSStatus*' name='error' type64='^i'/>
<arg declared_type64='CFDictionaryRef*' name='statusDictionary' type64='^^{__CFDictionary}'/>
<arg declared_type64='void**' name='info' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileOperationCreate'>
<arg declared_type64='CFAllocatorRef' name='alloc' type64='^{__CFAllocator=}'/>
<retval declared_type64='FSFileOperationRef' type64='^{__FSFileOperation=}'/>
</function>
<function name='FSFileOperationGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='FSFileOperationScheduleWithRunLoop'>
<arg declared_type64='FSFileOperationRef' name='fileOp' type64='^{__FSFileOperation=}'/>
<arg declared_type64='CFRunLoopRef' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileOperationUnscheduleFromRunLoop'>
<arg declared_type64='FSFileOperationRef' name='fileOp' type64='^{__FSFileOperation=}'/>
<arg declared_type64='CFRunLoopRef' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecurityCopyAccessControlList'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg declared_type64='acl_t*' name='accessControlList' type64='^^{_acl}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecurityCreate'>
<arg declared_type64='CFAllocatorRef' name='alloc' type64='^{__CFAllocator=}'/>
<retval declared_type64='FSFileSecurityRef' type64='^{__FSFileSecurity=}'/>
</function>
<function name='FSFileSecurityCreateWithFSPermissionInfo'>
<arg declared_type64='CFAllocatorRef' name='alloc' type64='^{__CFAllocator=}'/>
<arg const='true' declared_type64='FSPermissionInfo*' name='permissions' type64='^{FSPermissionInfo=IICCS^{__FSFileSecurity}}'/>
<retval declared_type64='FSFileSecurityRef' type64='^{__FSFileSecurity=}'/>
</function>
<function name='FSFileSecurityGetGroup'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg declared_type64='UInt32*' name='group' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecurityGetGroupUUID'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg declared_type64='CFUUIDBytes*' name='group' type64='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecurityGetMode'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg declared_type64='UInt16*' name='mode' type64='^S'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecurityGetOwner'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg declared_type64='UInt32*' name='owner' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecurityGetOwnerUUID'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg declared_type64='CFUUIDBytes*' name='owner' type64='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecurityGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='FSFileSecurityRefCreateCopy'>
<arg declared_type64='CFAllocatorRef' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<retval declared_type64='FSFileSecurityRef' type64='^{__FSFileSecurity=}'/>
</function>
<function name='FSFileSecuritySetAccessControlList'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg declared_type64='acl_t' name='accessControlList' type64='^{_acl=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecuritySetGroup'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg declared_type64='UInt32' name='group' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecuritySetGroupUUID'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg const='true' declared_type64='CFUUIDBytes*' name='group' type64='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecuritySetMode'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg declared_type64='UInt16' name='mode' type64='S'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecuritySetOwner'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg declared_type64='UInt32' name='owner' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFileSecuritySetOwnerUUID'>
<arg declared_type64='FSFileSecurityRef' name='fileSec' type64='^{__FSFileSecurity=}'/>
<arg const='true' declared_type64='CFUUIDBytes*' name='owner' type64='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFindFolder'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='OSType' name='folderType' type64='I'/>
<arg declared_type64='Boolean' name='createFolder' type64='B'/>
<arg declared_type64='FSRef*' name='foundRef' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSFlushFork'>
<arg declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSFlushVolume'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSFollowFinderAlias'>
<arg declared_type64='FSRef*' name='fromFile' type64='^{FSRef=[80C]}'/>
<arg declared_type64='AliasHandle' name='alias' type64='^^{AliasRecord}'/>
<arg declared_type64='Boolean' name='logon' type64='B'/>
<arg declared_type64='FSRef*' name='target' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean*' name='wasChanged' type64='^B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSGetAsyncEjectStatus'>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='FSEjectStatus*' name='status' type64='^I'/>
<arg declared_type64='OSStatus*' name='volumeOpStatus' type64='^i'/>
<arg declared_type64='FSVolumeRefNum*' name='volumeRefNum' type64='^s'/>
<arg declared_type64='pid_t*' name='dissenter' type64='^i'/>
<arg declared_type64='void**' name='clientData' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSGetAsyncMountStatus'>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='FSMountStatus*' name='status' type64='^I'/>
<arg declared_type64='OSStatus*' name='volumeOpStatus' type64='^i'/>
<arg declared_type64='FSVolumeRefNum*' name='mountedVolumeRefNum' type64='^s'/>
<arg declared_type64='void**' name='clientData' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSGetAsyncUnmountStatus'>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='FSUnmountStatus*' name='status' type64='^I'/>
<arg declared_type64='OSStatus*' name='volumeOpStatus' type64='^i'/>
<arg declared_type64='FSVolumeRefNum*' name='volumeRefNum' type64='^s'/>
<arg declared_type64='pid_t*' name='dissenter' type64='^i'/>
<arg declared_type64='void**' name='clientData' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSGetCatalogInfo'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<arg declared_type64='FSCatalogInfo*' name='catalogInfo' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type64='HFSUniStr255*' name='outName' type64='^{HFSUniStr255=S[255S]}'/>
<arg declared_type64='FSSpecPtr' name='fsSpec' type64='^{FSSpec=[70C]}'/>
<arg declared_type64='FSRef*' name='parentRef' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSGetCatalogInfoBulk'>
<arg declared_type64='FSIterator' name='iterator' type64='^{OpaqueFSIterator=}'/>
<arg declared_type64='ItemCount' name='maximumObjects' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualObjects' type64='^Q'/>
<arg declared_type64='Boolean*' name='containerChanged' type64='^B'/>
<arg declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<arg declared_type64='FSCatalogInfo*' name='catalogInfos' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type64='FSRef*' name='refs' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSSpecPtr' name='specs' type64='^{FSSpec=[70C]}'/>
<arg declared_type64='HFSUniStr255*' name='names' type64='^{HFSUniStr255=S[255S]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSGetDataForkName'>
<arg declared_type64='HFSUniStr255*' name='dataForkName' type64='^{HFSUniStr255=S[255S]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSGetForkCBInfo'>
<arg declared_type64='FSIORefNum' name='desiredRefNum' type64='i'/>
<arg declared_type64='FSVolumeRefNum' name='volume' type64='s'/>
<arg declared_type64='short*' name='iterator' type64='^s'/>
<arg declared_type64='FSIORefNum*' name='actualRefNum' type64='^i'/>
<arg declared_type64='FSForkInfo*' name='forkInfo' type64='^{FSForkInfo=CcsIIIQQQQ}'/>
<arg declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='HFSUniStr255*' name='outForkName' type64='^{HFSUniStr255=S[255S]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSGetForkPosition'>
<arg declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<arg declared_type64='SInt64*' name='position' type64='^q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSGetForkSize'>
<arg declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<arg declared_type64='SInt64*' name='forkSize' type64='^q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSGetHFSUniStrFromString'>
<arg declared_type64='CFStringRef' name='theString' type64='^{__CFString=}'/>
<arg declared_type64='HFSUniStr255*' name='uniStr' type64='^{HFSUniStr255=S[255S]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSGetResourceForkName'>
<arg declared_type64='HFSUniStr255*' name='resourceForkName' type64='^{HFSUniStr255=S[255S]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSGetTemporaryDirectoryForReplaceObject'>
<arg const='true' declared_type64='FSRef*' name='originalObject' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSRef*' name='temporaryDirectory' type64='^{FSRef=[80C]}'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSGetVolumeForDADisk'>
<arg declared_type64='DADiskRef' name='disk' type64='^{__DADisk=}'/>
<arg declared_type64='FSVolumeRefNum*' name='vRefNum' type64='^s'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSGetVolumeForDiskID'>
<arg declared_type64='CFStringRef' name='diskID' type64='^{__CFString=}'/>
<arg declared_type64='FSVolumeRefNum*' name='vRefNum' type64='^s'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSGetVolumeInfo'>
<arg declared_type64='FSVolumeRefNum' name='volume' type64='s'/>
<arg declared_type64='ItemCount' name='volumeIndex' type64='Q'/>
<arg declared_type64='FSVolumeRefNum*' name='actualVolume' type64='^s'/>
<arg declared_type64='FSVolumeInfoBitmap' name='whichInfo' type64='I'/>
<arg declared_type64='FSVolumeInfo*' name='info' type64='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSi}'/>
<arg declared_type64='HFSUniStr255*' name='volumeName' type64='^{HFSUniStr255=S[255S]}'/>
<arg declared_type64='FSRef*' name='rootDirectory' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSGetVolumeMountInfo'>
<arg declared_type64='FSVolumeRefNum' name='volume' type64='s'/>
<arg declared_type64='BytePtr' name='buffer' type64='*'/>
<arg declared_type64='ByteCount' name='bufferSize' type64='Q'/>
<arg declared_type64='ByteCount*' name='actualSize' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSGetVolumeMountInfoSize'>
<arg declared_type64='FSVolumeRefNum' name='volume' type64='s'/>
<arg declared_type64='ByteCount*' name='size' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSGetVolumeParms'>
<arg declared_type64='FSVolumeRefNum' name='volume' type64='s'/>
<arg declared_type64='GetVolParmsInfoBuffer*' name='buffer' type64='^{GetVolParmsInfoBuffer=si^*iisi^vQ}'/>
<arg declared_type64='ByteCount' name='bufferSize' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSIsAliasFile'>
<arg const='true' declared_type64='FSRef*' name='fileRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean*' name='aliasFileFlag' type64='^B'/>
<arg declared_type64='Boolean*' name='folderFlag' type64='^B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSIsFSRefValid'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='FSIterateForks'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='CatPositionRec*' name='forkIterator' type64='^{CatPositionRec=i[6s]}'/>
<arg declared_type64='HFSUniStr255*' name='forkName' type64='^{HFSUniStr255=S[255S]}'/>
<arg declared_type64='SInt64*' name='forkSize' type64='^q'/>
<arg declared_type64='UInt64*' name='forkPhysicalSize' type64='^Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSLockRange'>
<arg declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<arg declared_type64='UInt16' name='positionMode' type64='S'/>
<arg declared_type64='SInt64' name='positionOffset' type64='q'/>
<arg declared_type64='UInt64' name='requestCount' type64='Q'/>
<arg declared_type64='UInt64*' name='rangeStart' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSMakeFSRefUnicode'>
<arg const='true' declared_type64='FSRef*' name='parentRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='nameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='name' type64='^S'/>
<arg declared_type64='TextEncoding' name='textEncodingHint' type64='I'/>
<arg declared_type64='FSRef*' name='newRef' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSMatchAliasBulk'>
<arg const='true' declared_type64='FSRef*' name='fromFile' type64='^{FSRef=[80C]}'/>
<arg declared_type64='unsigned long' name='rulesMask' type64='Q'/>
<arg declared_type64='AliasHandle' name='inAlias' type64='^^{AliasRecord}'/>
<arg declared_type64='short*' name='aliasCount' type64='^s'/>
<arg declared_type64='FSRef*' name='aliasList' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean*' name='needsUpdate' type64='^B'/>
<arg declared_type64='FSAliasFilterProcPtr' function_pointer='true' name='aliasFilter' type64='^?'>
<arg const='true' declared_type64='FSRef*' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean*' type64='^B'/>
<arg declared_type64='Ptr' type64='*'/>
<retval declared_type64='Boolean' type64='B'/>
</arg>
<arg declared_type64='void*' name='yourDataPtr' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSMountLocalVolumeAsync'>
<arg declared_type64='CFStringRef' name='diskID' type64='^{__CFString=}'/>
<arg declared_type64='CFURLRef' name='mountDir' type64='^{__CFURL=}'/>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' name='clientData' type64='^v'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FSVolumeMountUPP' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFRunLoopRef' name='runloop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef' name='runloopMode' type64='^{__CFString=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSMountLocalVolumeSync'>
<arg declared_type64='CFStringRef' name='diskID' type64='^{__CFString=}'/>
<arg declared_type64='CFURLRef' name='mountDir' type64='^{__CFURL=}'/>
<arg declared_type64='FSVolumeRefNum*' name='mountedVolumeRefNum' type64='^s'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSMountServerVolumeAsync'>
<arg declared_type64='CFURLRef' name='url' type64='^{__CFURL=}'/>
<arg declared_type64='CFURLRef' name='mountDir' type64='^{__CFURL=}'/>
<arg declared_type64='CFStringRef' name='user' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef' name='password' type64='^{__CFString=}'/>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' name='clientData' type64='^v'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FSVolumeMountUPP' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFRunLoopRef' name='runloop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef' name='runloopMode' type64='^{__CFString=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSMountServerVolumeSync'>
<arg declared_type64='CFURLRef' name='url' type64='^{__CFURL=}'/>
<arg declared_type64='CFURLRef' name='mountDir' type64='^{__CFURL=}'/>
<arg declared_type64='CFStringRef' name='user' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef' name='password' type64='^{__CFString=}'/>
<arg declared_type64='FSVolumeRefNum*' name='mountedVolumeRefNum' type64='^s'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSMoveObject'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='destDirectory' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSRef*' name='newRef' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSMoveObjectAsync'>
<arg declared_type64='FSFileOperationRef' name='fileOp' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='FSRef*' name='source' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='destDir' type64='^{FSRef=[80C]}'/>
<arg declared_type64='CFStringRef' name='destName' type64='^{__CFString=}'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FSFileOperationStatusProcPtr' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FSFileOperationRef' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='FSRef*' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSFileOperationStage' type64='I'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFTimeInterval' name='statusChangeInterval' type64='d'/>
<arg declared_type64='FSFileOperationClientContext*' name='clientContext' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSMoveObjectSync'>
<arg const='true' declared_type64='FSRef*' name='source' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='destDir' type64='^{FSRef=[80C]}'/>
<arg declared_type64='CFStringRef' name='destName' type64='^{__CFString=}'/>
<arg declared_type64='FSRef*' name='target' type64='^{FSRef=[80C]}'/>
<arg declared_type64='OptionBits' name='options' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSMoveObjectToTrashAsync'>
<arg declared_type64='FSFileOperationRef' name='fileOp' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='FSRef*' name='source' type64='^{FSRef=[80C]}'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FSFileOperationStatusProcPtr' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FSFileOperationRef' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='FSRef*' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSFileOperationStage' type64='I'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFTimeInterval' name='statusChangeInterval' type64='d'/>
<arg declared_type64='FSFileOperationClientContext*' name='clientContext' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSMoveObjectToTrashSync'>
<arg const='true' declared_type64='FSRef*' name='source' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSRef*' name='target' type64='^{FSRef=[80C]}'/>
<arg declared_type64='OptionBits' name='options' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSNewAlias'>
<arg const='true' declared_type64='FSRef*' name='fromFile' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='target' type64='^{FSRef=[80C]}'/>
<arg declared_type64='AliasHandle*' name='inAlias' type64='^^^{AliasRecord}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSNewAliasFromPath'>
<arg const='true' declared_type64='char*' name='fromFilePath' type64='*'/>
<arg const='true' declared_type64='char*' name='targetPath' type64='*'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='AliasHandle*' name='inAlias' type64='^^^{AliasRecord}'/>
<arg declared_type64='Boolean*' name='isDirectory' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSNewAliasMinimal'>
<arg const='true' declared_type64='FSRef*' name='target' type64='^{FSRef=[80C]}'/>
<arg declared_type64='AliasHandle*' name='inAlias' type64='^^^{AliasRecord}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSNewAliasMinimalUnicode'>
<arg const='true' declared_type64='FSRef*' name='targetParentRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='targetNameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='targetName' type64='^S'/>
<arg declared_type64='AliasHandle*' name='inAlias' type64='^^^{AliasRecord}'/>
<arg declared_type64='Boolean*' name='isDirectory' type64='^B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSNewAliasUnicode'>
<arg const='true' declared_type64='FSRef*' name='fromFile' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='targetParentRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='targetNameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='targetName' type64='^S'/>
<arg declared_type64='AliasHandle*' name='inAlias' type64='^^^{AliasRecord}'/>
<arg declared_type64='Boolean*' name='isDirectory' type64='^B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSOpenFork'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='forkNameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='forkName' type64='^S'/>
<arg declared_type64='SInt8' name='permissions' type64='c'/>
<arg declared_type64='FSIORefNum*' name='forkRefNum' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSOpenIterator'>
<arg const='true' declared_type64='FSRef*' name='container' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSIteratorFlags' name='iteratorFlags' type64='I'/>
<arg declared_type64='FSIterator*' name='iterator' type64='^^{OpaqueFSIterator}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSOpenOrphanResFile'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='SignedByte' name='permission' type64='c'/>
<arg declared_type64='ResFileRefNum*' name='refNum' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSOpenResFile'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='SInt8' name='permission' type64='c'/>
<retval declared_type64='ResFileRefNum' type64='i'/>
</function>
<function name='FSOpenResourceFile'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='forkNameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='forkName' type64='^S'/>
<arg declared_type64='SInt8' name='permissions' type64='c'/>
<arg declared_type64='ResFileRefNum*' name='refNum' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSPathCopyObjectAsync'>
<arg declared_type64='FSFileOperationRef' name='fileOp' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='char*' name='sourcePath' type64='*'/>
<arg const='true' declared_type64='char*' name='destDirPath' type64='*'/>
<arg declared_type64='CFStringRef' name='destName' type64='^{__CFString=}'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FSPathFileOperationStatusProcPtr' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FSFileOperationRef' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='FSFileOperationStage' type64='I'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFTimeInterval' name='statusChangeInterval' type64='d'/>
<arg declared_type64='FSFileOperationClientContext*' name='clientContext' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSPathCopyObjectSync'>
<arg const='true' declared_type64='char*' name='sourcePath' type64='*'/>
<arg const='true' declared_type64='char*' name='destDirPath' type64='*'/>
<arg declared_type64='CFStringRef' name='destName' type64='^{__CFString=}'/>
<arg declared_type64='char**' name='targetPath' type64='^*'/>
<arg declared_type64='OptionBits' name='options' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSPathFileOperationCopyStatus'>
<arg declared_type64='FSFileOperationRef' name='fileOp' type64='^{__FSFileOperation=}'/>
<arg declared_type64='char**' name='currentItem' type64='^*'/>
<arg declared_type64='FSFileOperationStage*' name='stage' type64='^I'/>
<arg declared_type64='OSStatus*' name='error' type64='^i'/>
<arg declared_type64='CFDictionaryRef*' name='statusDictionary' type64='^^{__CFDictionary}'/>
<arg declared_type64='void**' name='info' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSPathGetTemporaryDirectoryForReplaceObject'>
<arg const='true' declared_type64='char*' name='originalObjectPath' type64='*'/>
<arg declared_type64='char*' name='temporaryDirectoryPath' type64='*'/>
<arg declared_type64='UInt32' name='maxPathSize' type64='I'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSPathMakeRef'>
<arg const='true' declared_type64='UInt8*' name='path' type64='*'/>
<arg declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean*' name='isDirectory' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSPathMakeRefWithOptions'>
<arg const='true' declared_type64='UInt8*' name='path' type64='*'/>
<arg declared_type64='OptionBits' name='options' type64='I'/>
<arg declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean*' name='isDirectory' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSPathMoveObjectAsync'>
<arg declared_type64='FSFileOperationRef' name='fileOp' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='char*' name='sourcePath' type64='*'/>
<arg const='true' declared_type64='char*' name='destDirPath' type64='*'/>
<arg declared_type64='CFStringRef' name='destName' type64='^{__CFString=}'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FSPathFileOperationStatusProcPtr' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FSFileOperationRef' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='FSFileOperationStage' type64='I'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFTimeInterval' name='statusChangeInterval' type64='d'/>
<arg declared_type64='FSFileOperationClientContext*' name='clientContext' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSPathMoveObjectSync'>
<arg const='true' declared_type64='char*' name='sourcePath' type64='*'/>
<arg const='true' declared_type64='char*' name='destDirPath' type64='*'/>
<arg declared_type64='CFStringRef' name='destName' type64='^{__CFString=}'/>
<arg declared_type64='char**' name='targetPath' type64='^*'/>
<arg declared_type64='OptionBits' name='options' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSPathMoveObjectToTrashAsync'>
<arg declared_type64='FSFileOperationRef' name='fileOp' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='char*' name='sourcePath' type64='*'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FSPathFileOperationStatusProcPtr' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FSFileOperationRef' type64='^{__FSFileOperation=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='FSFileOperationStage' type64='I'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFTimeInterval' name='statusChangeInterval' type64='d'/>
<arg declared_type64='FSFileOperationClientContext*' name='clientContext' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSPathMoveObjectToTrashSync'>
<arg const='true' declared_type64='char*' name='sourcePath' type64='*'/>
<arg declared_type64='char**' name='targetPath' type64='^*'/>
<arg declared_type64='OptionBits' name='options' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSPathReplaceObject'>
<arg const='true' declared_type64='char*' name='originalObjectPath' type64='*'/>
<arg const='true' declared_type64='char*' name='replacementObjectPath' type64='*'/>
<arg declared_type64='CFStringRef' name='newName' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef' name='temporaryName' type64='^{__CFString=}'/>
<arg const='true' declared_type64='char*' name='temporaryDirectoryPath' type64='*'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSReadFork'>
<arg declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<arg declared_type64='UInt16' name='positionMode' type64='S'/>
<arg declared_type64='SInt64' name='positionOffset' type64='q'/>
<arg declared_type64='ByteCount' name='requestCount' type64='Q'/>
<arg declared_type64='void*' name='buffer' type64='^v'/>
<arg declared_type64='ByteCount*' name='actualCount' type64='^Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSRefMakePath'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UInt8*' name='path' type64='*'/>
<arg declared_type64='UInt32' name='pathBufferSize' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSRenameUnicode'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='UniCharCount' name='nameLength' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='name' type64='^S'/>
<arg declared_type64='TextEncoding' name='textEncodingHint' type64='I'/>
<arg declared_type64='FSRef*' name='newRef' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSReplaceObject'>
<arg const='true' declared_type64='FSRef*' name='originalObject' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='replacementObject' type64='^{FSRef=[80C]}'/>
<arg declared_type64='CFStringRef' name='newName' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef' name='temporaryName' type64='^{__CFString=}'/>
<arg const='true' declared_type64='FSRef*' name='temporaryDirectory' type64='^{FSRef=[80C]}'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FSRef*' name='resultObject' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSResolveAlias'>
<arg const='true' declared_type64='FSRef*' name='fromFile' type64='^{FSRef=[80C]}'/>
<arg declared_type64='AliasHandle' name='alias' type64='^^{AliasRecord}'/>
<arg declared_type64='FSRef*' name='target' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean*' name='wasChanged' type64='^B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSResolveAliasFile'>
<arg declared_type64='FSRef*' name='theRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean' name='resolveAliasChains' type64='B'/>
<arg declared_type64='Boolean*' name='targetIsFolder' type64='^B'/>
<arg declared_type64='Boolean*' name='wasAliased' type64='^B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSResolveAliasFileWithMountFlags'>
<arg declared_type64='FSRef*' name='theRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean' name='resolveAliasChains' type64='B'/>
<arg declared_type64='Boolean*' name='targetIsFolder' type64='^B'/>
<arg declared_type64='Boolean*' name='wasAliased' type64='^B'/>
<arg declared_type64='unsigned long' name='mountFlags' type64='Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSResolveAliasWithMountFlags'>
<arg const='true' declared_type64='FSRef*' name='fromFile' type64='^{FSRef=[80C]}'/>
<arg declared_type64='AliasHandle' name='inAlias' type64='^^{AliasRecord}'/>
<arg declared_type64='FSRef*' name='target' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean*' name='wasChanged' type64='^B'/>
<arg declared_type64='unsigned long' name='mountFlags' type64='Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSResolveNodeID'>
<arg declared_type64='FSVolumeRefNum' name='volume' type64='s'/>
<arg declared_type64='UInt32' name='nodeID' type64='I'/>
<arg declared_type64='FSRefPtr' name='newRef' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSResourceFileAlreadyOpen'>
<arg const='true' declared_type64='FSRef*' name='resourceFileRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='Boolean*' name='inChain' type64='^B'/>
<arg declared_type64='ResFileRefNum*' name='refNum' type64='^i'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='FSSetCatalogInfo'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='FSCatalogInfoBitmap' name='whichInfo' type64='I'/>
<arg const='true' declared_type64='FSCatalogInfo*' name='catalogInfo' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSSetForkPosition'>
<arg declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<arg declared_type64='UInt16' name='positionMode' type64='S'/>
<arg declared_type64='SInt64' name='positionOffset' type64='q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSSetForkSize'>
<arg declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<arg declared_type64='UInt16' name='positionMode' type64='S'/>
<arg declared_type64='SInt64' name='positionOffset' type64='q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSSetVolumeInfo'>
<arg declared_type64='FSVolumeRefNum' name='volume' type64='s'/>
<arg declared_type64='FSVolumeInfoBitmap' name='whichInfo' type64='I'/>
<arg const='true' declared_type64='FSVolumeInfo*' name='info' type64='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSi}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSUnlinkObject'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSUnlockRange'>
<arg declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<arg declared_type64='UInt16' name='positionMode' type64='S'/>
<arg declared_type64='SInt64' name='positionOffset' type64='q'/>
<arg declared_type64='UInt64' name='requestCount' type64='Q'/>
<arg declared_type64='UInt64*' name='rangeStart' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSUnmountVolumeAsync'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' name='clientData' type64='^v'/>
<arg declared_type64='FSVolumeUnmountUPP' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<arg declared_type64='pid_t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFRunLoopRef' name='runloop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef' name='runloopMode' type64='^{__CFString=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSUnmountVolumeSync'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='pid_t*' name='dissenter' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSUpdateAlias'>
<arg const='true' declared_type64='FSRef*' name='fromFile' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='target' type64='^{FSRef=[80C]}'/>
<arg declared_type64='AliasHandle' name='alias' type64='^^{AliasRecord}'/>
<arg declared_type64='Boolean*' name='wasChanged' type64='^B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FSVolumeMount'>
<arg declared_type64='BytePtr' name='buffer' type64='*'/>
<arg declared_type64='FSVolumeRefNum*' name='mountedVolume' type64='^s'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FSWriteFork'>
<arg declared_type64='FSIORefNum' name='forkRefNum' type64='i'/>
<arg declared_type64='UInt16' name='positionMode' type64='S'/>
<arg declared_type64='SInt64' name='positionOffset' type64='q'/>
<arg declared_type64='ByteCount' name='requestCount' type64='Q'/>
<arg const='true' declared_type64='void*' name='buffer' type64='^v'/>
<arg declared_type64='ByteCount*' name='actualCount' type64='^Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FindFolder'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='OSType' name='folderType' type64='I'/>
<arg declared_type64='Boolean' name='createFolder' type64='B'/>
<arg declared_type64='FSVolumeRefNum*' name='foundVRefNum' type64='^s'/>
<arg declared_type64='SInt32*' name='foundDirID' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FindNextComponent'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='ComponentDescription*' name='looking' type64='^{ComponentDescription=IIIII}'/>
<retval declared_type64='Component' type64='^{ComponentRecord=[1q]}'/>
</function>
<function name='Fix2Frac'>
<arg declared_type64='Fixed' name='x' type64='i'/>
<retval declared_type64='Fract' type64='i'/>
</function>
<function name='Fix2Long'>
<arg declared_type64='Fixed' name='x' type64='i'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='Fix2X'>
<arg declared_type64='Fixed' name='x' type64='i'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='FixATan2'>
<arg declared_type64='SInt32' name='x' type64='i'/>
<arg declared_type64='SInt32' name='y' type64='i'/>
<retval declared_type64='Fixed' type64='i'/>
</function>
<function name='FixDiv'>
<arg declared_type64='Fixed' name='x' type64='i'/>
<arg declared_type64='Fixed' name='y' type64='i'/>
<retval declared_type64='Fixed' type64='i'/>
</function>
<function name='FixMul'>
<arg declared_type64='Fixed' name='a' type64='i'/>
<arg declared_type64='Fixed' name='b' type64='i'/>
<retval declared_type64='Fixed' type64='i'/>
</function>
<function name='FixRatio'>
<arg declared_type64='short' name='numer' type64='s'/>
<arg declared_type64='short' name='denom' type64='s'/>
<retval declared_type64='Fixed' type64='i'/>
</function>
<function name='FixRound'>
<arg declared_type64='Fixed' name='x' type64='i'/>
<retval declared_type64='short' type64='s'/>
</function>
<function name='FlattenCollection'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionFlattenUPP' function_pointer='true' name='flattenProc' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<arg declared_type64='void*' name='refCon' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FlattenCollectionToHdl'>
<arg declared_type64='Collection' name='aCollection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='Handle' name='flattened' type64='^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='FlattenPartialCollection'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionFlattenUPP' function_pointer='true' name='flattenProc' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<arg declared_type64='void*' name='refCon' type64='^v'/>
<arg declared_type64='SInt32' name='whichAttributes' type64='i'/>
<arg declared_type64='SInt32' name='matchingAttributes' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='Frac2Fix'>
<arg declared_type64='Fract' name='x' type64='i'/>
<retval declared_type64='Fixed' type64='i'/>
</function>
<function name='Frac2X'>
<arg declared_type64='Fract' name='x' type64='i'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='FracCos'>
<arg declared_type64='Fixed' name='x' type64='i'/>
<retval declared_type64='Fract' type64='i'/>
</function>
<function name='FracDiv'>
<arg declared_type64='Fract' name='x' type64='i'/>
<arg declared_type64='Fract' name='y' type64='i'/>
<retval declared_type64='Fract' type64='i'/>
</function>
<function name='FracMul'>
<arg declared_type64='Fract' name='x' type64='i'/>
<arg declared_type64='Fract' name='y' type64='i'/>
<retval declared_type64='Fract' type64='i'/>
</function>
<function name='FracSin'>
<arg declared_type64='Fixed' name='x' type64='i'/>
<retval declared_type64='Fract' type64='i'/>
</function>
<function name='FracSqrt'>
<arg declared_type64='Fract' name='x' type64='i'/>
<retval declared_type64='Fract' type64='i'/>
</function>
<function name='Gestalt'>
<arg declared_type64='OSType' name='selector' type64='I'/>
<arg declared_type64='SInt32*' name='response' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='Get1IndResource'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<arg declared_type64='ResourceIndex' name='itemIndex' type64='s'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='Get1IndType'>
<arg declared_type64='ResType*' name='theType' type64='^I'/>
<arg declared_type64='ResourceIndex' name='itemIndex' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Get1NamedResource'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<arg declared_type64='ConstStr255Param' name='name' type64='*'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='Get1Resource'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<arg declared_type64='ResID' name='theID' type64='s'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='GetAliasSize'>
<arg declared_type64='AliasHandle' name='alias' type64='^^{AliasRecord}'/>
<retval declared_type64='Size' type64='q'/>
</function>
<function name='GetAliasSizeFromPtr'>
<arg const='true' declared_type64='AliasRecord*' name='alias' type64='^{AliasRecord=[6C]}'/>
<retval declared_type64='Size' type64='q'/>
</function>
<function name='GetAliasUserType'>
<arg declared_type64='AliasHandle' name='alias' type64='^^{AliasRecord}'/>
<retval declared_type64='OSType' type64='I'/>
</function>
<function name='GetAliasUserTypeFromPtr'>
<arg const='true' declared_type64='AliasRecord*' name='alias' type64='^{AliasRecord=[6C]}'/>
<retval declared_type64='OSType' type64='I'/>
</function>
<function name='GetCollectionDefaultAttributes'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='GetCollectionExceptionProc'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<retval declared_type64='CollectionExceptionUPP' function_pointer='true' type64='^?'>
<arg declared_type64='Collection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='OSErr' type64='s'/>
<retval declared_type64='OSErr' type64='s'/>
</retval>
</function>
<function name='GetCollectionItem'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<arg declared_type64='SInt32' name='id' type64='i'/>
<arg declared_type64='SInt32*' name='itemSize' type64='^i'/>
<arg declared_type64='void*' name='itemData' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetCollectionItemHdl'>
<arg declared_type64='Collection' name='aCollection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<arg declared_type64='SInt32' name='id' type64='i'/>
<arg declared_type64='Handle' name='itemData' type64='^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetCollectionItemInfo'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<arg declared_type64='SInt32' name='id' type64='i'/>
<arg declared_type64='SInt32*' name='itemIndex' type64='^i'/>
<arg declared_type64='SInt32*' name='itemSize' type64='^i'/>
<arg declared_type64='SInt32*' name='attributes' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetCollectionRetainCount'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<retval declared_type64='ItemCount' type64='Q'/>
</function>
<function name='GetComponentIndString'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='unsigned char*' name='theString' type64='*'/>
<arg declared_type64='SInt16' name='strListID' type64='s'/>
<arg declared_type64='SInt16' name='index' type64='s'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetComponentInfo'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='ComponentDescription*' name='cd' type64='^{ComponentDescription=IIIII}'/>
<arg declared_type64='Handle' name='componentName' type64='^*'/>
<arg declared_type64='Handle' name='componentInfo' type64='^*'/>
<arg declared_type64='Handle' name='componentIcon' type64='^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetComponentInstanceError'>
<arg declared_type64='ComponentInstance' name='aComponentInstance' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetComponentInstanceStorage'>
<arg declared_type64='ComponentInstance' name='aComponentInstance' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='GetComponentListModSeed'>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='GetComponentPublicIndString'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='unsigned char*' name='theString' type64='*'/>
<arg declared_type64='SInt16' name='strListID' type64='s'/>
<arg declared_type64='SInt16' name='index' type64='s'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetComponentPublicResource'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='OSType' name='resourceType' type64='I'/>
<arg declared_type64='SInt16' name='resourceID' type64='s'/>
<arg declared_type64='Handle*' name='theResource' type64='^^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetComponentPublicResourceList'>
<arg declared_type64='OSType' name='resourceType' type64='I'/>
<arg declared_type64='SInt16' name='resourceID' type64='s'/>
<arg declared_type64='SInt32' name='flags' type64='i'/>
<arg declared_type64='ComponentDescription*' name='cd' type64='^{ComponentDescription=IIIII}'/>
<arg declared_type64='GetMissingComponentResourceUPP' function_pointer='true' name='missingProc' type64='^?'>
<arg declared_type64='Component' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='SInt16' type64='s'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='Handle*' type64='^^*'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<arg declared_type64='void*' name='refCon' type64='^v'/>
<arg declared_type64='void*' name='atomContainerPtr' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetComponentRefcon'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='GetComponentResource'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='OSType' name='resType' type64='I'/>
<arg declared_type64='SInt16' name='resID' type64='s'/>
<arg declared_type64='Handle*' name='theResource' type64='^^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetComponentTypeModSeed'>
<arg declared_type64='OSType' name='componentType' type64='I'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='GetCurrentThread'>
<arg declared_type64='ThreadID*' name='currentThreadID' type64='^Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetDebugComponentInfo'>
<arg declared_type64='UInt32' name='itemIndex' type64='I'/>
<arg declared_type64='OSType*' name='componentSignature' type64='^I'/>
<arg declared_type64='unsigned char*' name='componentName' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='GetDebugOptionInfo'>
<arg declared_type64='UInt32' name='itemIndex' type64='I'/>
<arg declared_type64='OSType' name='componentSignature' type64='I'/>
<arg declared_type64='SInt32*' name='optionSelectorNum' type64='^i'/>
<arg declared_type64='unsigned char*' name='optionName' type64='*'/>
<arg declared_type64='Boolean*' name='optionSetting' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='GetDefaultThreadStackSize'>
<arg declared_type64='ThreadStyle' name='threadStyle' type64='I'/>
<arg declared_type64='Size*' name='stackSize' type64='^q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetFolderNameUnicode'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='OSType' name='foldType' type64='I'/>
<arg declared_type64='FSVolumeRefNum*' name='foundVRefNum' type64='^s'/>
<arg declared_type64='HFSUniStr255*' name='name' type64='^{HFSUniStr255=S[255S]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='GetFolderTypes'>
<arg declared_type64='UInt32' name='requestedTypeCount' type64='I'/>
<arg declared_type64='UInt32*' name='totalTypeCount' type64='^I'/>
<arg declared_type64='FolderType*' name='theTypes' type64='^I'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetHandleSize'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='Size' type64='q'/>
</function>
<function name='GetIndResource'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<arg declared_type64='ResourceIndex' name='itemIndex' type64='s'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='GetIndType'>
<arg declared_type64='ResType*' name='theType' type64='^I'/>
<arg declared_type64='ResourceIndex' name='itemIndex' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='GetIndexedCollectionItem'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='SInt32' name='itemIndex' type64='i'/>
<arg declared_type64='SInt32*' name='itemSize' type64='^i'/>
<arg declared_type64='void*' name='itemData' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetIndexedCollectionItemHdl'>
<arg declared_type64='Collection' name='aCollection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='SInt32' name='itemIndex' type64='i'/>
<arg declared_type64='Handle' name='itemData' type64='^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetIndexedCollectionItemInfo'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='SInt32' name='itemIndex' type64='i'/>
<arg declared_type64='CollectionTag*' name='tag' type64='^I'/>
<arg declared_type64='SInt32*' name='id' type64='^i'/>
<arg declared_type64='SInt32*' name='itemSize' type64='^i'/>
<arg declared_type64='SInt32*' name='attributes' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetIndexedCollectionTag'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='SInt32' name='tagIndex' type64='i'/>
<arg declared_type64='CollectionTag*' name='tag' type64='^I'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetMacOSStatusCommentString'>
<arg declared_type64='OSStatus' name='err' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='GetMacOSStatusErrorString'>
<arg declared_type64='OSStatus' name='err' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='GetMaxResourceSize'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='GetNamedResource'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<arg declared_type64='ConstStr255Param' name='name' type64='*'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='GetNewCollection'>
<arg declared_type64='SInt16' name='collectionID' type64='s'/>
<retval declared_type64='Collection' type64='^{OpaqueCollection=}'/>
</function>
<function name='GetNextFOND'>
<arg declared_type64='Handle' name='fondHandle' type64='^*'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='GetNextResourceFile'>
<arg declared_type64='ResFileRefNum' name='curRefNum' type64='i'/>
<arg declared_type64='ResFileRefNum*' name='nextRefNum' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetPtrSize'>
<arg declared_type64='Ptr' name='p' type64='*'/>
<retval declared_type64='Size' type64='q'/>
</function>
<function name='GetResAttrs'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<retval declared_type64='ResAttributes' type64='s'/>
</function>
<function name='GetResFileAttrs'>
<arg declared_type64='ResFileRefNum' name='refNum' type64='i'/>
<retval declared_type64='ResFileAttributes' type64='s'/>
</function>
<function name='GetResInfo'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<arg declared_type64='ResID*' name='theID' type64='^s'/>
<arg declared_type64='ResType*' name='theType' type64='^I'/>
<arg declared_type64='unsigned char*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='GetResource'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<arg declared_type64='ResID' name='theID' type64='s'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='GetResourceSizeOnDisk'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='GetScriptInfoFromTextEncoding'>
<arg declared_type64='TextEncoding' name='iEncoding' type64='I'/>
<arg declared_type64='ScriptCode*' name='oTextScriptID' type64='^s'/>
<arg declared_type64='LangCode*' name='oTextLanguageID' type64='^s'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='GetScriptManagerVariable'>
<arg declared_type64='short' name='selector' type64='s'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='GetTaggedCollectionItem'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<arg declared_type64='SInt32' name='whichItem' type64='i'/>
<arg declared_type64='SInt32*' name='itemSize' type64='^i'/>
<arg declared_type64='void*' name='itemData' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetTaggedCollectionItemInfo'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<arg declared_type64='SInt32' name='whichItem' type64='i'/>
<arg declared_type64='SInt32*' name='id' type64='^i'/>
<arg declared_type64='SInt32*' name='itemIndex' type64='^i'/>
<arg declared_type64='SInt32*' name='itemSize' type64='^i'/>
<arg declared_type64='SInt32*' name='attributes' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetTextEncodingBase'>
<arg declared_type64='TextEncoding' name='encoding' type64='I'/>
<retval declared_type64='TextEncodingBase' type64='I'/>
</function>
<function name='GetTextEncodingFormat'>
<arg declared_type64='TextEncoding' name='encoding' type64='I'/>
<retval declared_type64='TextEncodingFormat' type64='I'/>
</function>
<function name='GetTextEncodingFromScriptInfo'>
<arg declared_type64='ScriptCode' name='iTextScriptID' type64='s'/>
<arg declared_type64='LangCode' name='iTextLanguageID' type64='s'/>
<arg declared_type64='RegionCode' name='iTextRegionID' type64='s'/>
<arg declared_type64='TextEncoding*' name='oEncoding' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='GetTextEncodingName'>
<arg declared_type64='TextEncoding' name='iEncoding' type64='I'/>
<arg declared_type64='TextEncodingNameSelector' name='iNamePartSelector' type64='I'/>
<arg declared_type64='RegionCode' name='iPreferredRegion' type64='s'/>
<arg declared_type64='TextEncoding' name='iPreferredEncoding' type64='I'/>
<arg declared_type64='ByteCount' name='iOutputBufLen' type64='Q'/>
<arg declared_type64='ByteCount*' name='oNameLength' type64='^Q'/>
<arg declared_type64='RegionCode*' name='oActualRegion' type64='^s'/>
<arg declared_type64='TextEncoding*' name='oActualEncoding' type64='^I'/>
<arg declared_type64='TextPtr' name='oEncodingName' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='GetTextEncodingVariant'>
<arg declared_type64='TextEncoding' name='encoding' type64='I'/>
<retval declared_type64='TextEncodingVariant' type64='I'/>
</function>
<function name='GetThreadCurrentTaskRef'>
<arg declared_type64='ThreadTaskRef*' name='threadTRef' type64='^^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetThreadState'>
<arg declared_type64='ThreadID' name='threadToGet' type64='Q'/>
<arg declared_type64='ThreadState*' name='threadState' type64='^S'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetThreadStateGivenTaskRef'>
<arg declared_type64='ThreadTaskRef' name='threadTRef' type64='^v'/>
<arg declared_type64='ThreadID' name='threadToGet' type64='Q'/>
<arg declared_type64='ThreadState*' name='threadState' type64='^S'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetTopResourceFile'>
<arg declared_type64='ResFileRefNum*' name='refNum' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='HClrRBit'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='HGetState'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='SInt8' type64='c'/>
</function>
<function name='HLock'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='HLockHi'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='HSetRBit'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='HSetState'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<arg declared_type64='SInt8' name='flags' type64='c'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='HUnlock'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='HandAndHand'>
<arg declared_type64='Handle' name='hand1' type64='^*'/>
<arg declared_type64='Handle' name='hand2' type64='^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='HandToHand'>
<arg declared_type64='Handle*' name='theHndl' type64='^^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='HomeResFile'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<retval declared_type64='ResFileRefNum' type64='i'/>
</function>
<function name='IdentifyFolder'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='SInt32' name='dirID' type64='i'/>
<arg declared_type64='FolderType*' name='foldType' type64='^I'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='IncrementAtomic'>
<arg declared_type64='SInt32*' name='address' type64='^i'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='IncrementAtomic16'>
<arg declared_type64='SInt16*' name='address' type64='^s'/>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='IncrementAtomic8'>
<arg declared_type64='SInt8*' name='address' type64='*'/>
<retval declared_type64='SInt8' type64='c'/>
</function>
<function name='InsTime'>
<arg declared_type64='QElemPtr' name='tmTaskPtr' type64='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InsXTime'>
<arg declared_type64='QElemPtr' name='tmTaskPtr' type64='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InsertResourceFile'>
<arg declared_type64='ResFileRefNum' name='refNum' type64='i'/>
<arg declared_type64='RsrcChainLocation' name='where' type64='s'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InstallDebugAssertOutputHandler'>
<arg declared_type64='DebugAssertOutputHandlerUPP' function_pointer='true' name='handler' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='long' type64='q'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ConstStr255Param' type64='*'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InstallExceptionHandler'>
<arg declared_type64='ExceptionHandlerTPP' function_pointer='true' name='theHandler' type64='^?'>
<arg declared_type64='ExceptionInformation*' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='ExceptionHandlerTPP' function_pointer='true' type64='^?'>
<arg declared_type64='ExceptionInformation*' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</retval>
</function>
<function name='InstallTimeTask'>
<arg declared_type64='QElemPtr' name='tmTaskPtr' type64='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InstallXTimeTask'>
<arg declared_type64='QElemPtr' name='tmTaskPtr' type64='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InvalidateFolderDescriptorCache'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='SInt32' name='dirID' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InvokeAVLCompareItemsUPP'>
<arg declared_type64='AVLTreePtr' name='tree' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' name='i1' type64='^v'/>
<arg const='true' declared_type64='void*' name='i2' type64='^v'/>
<arg declared_type64='AVLNodeType' name='nd_typ' type64='S'/>
<arg declared_type64='AVLCompareItemsUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='AVLNodeType' type64='S'/>
<retval declared_type64='SInt32' type64='i'/>
</arg>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='InvokeAVLDisposeItemUPP'>
<arg declared_type64='AVLTreePtr' name='tree' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' name='dataP' type64='^v'/>
<arg declared_type64='AVLDisposeItemUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeAVLItemSizeUPP'>
<arg declared_type64='AVLTreePtr' name='tree' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' name='itemPtr' type64='^v'/>
<arg declared_type64='AVLItemSizeUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='ByteCount' type64='Q'/>
</arg>
<retval declared_type64='ByteCount' type64='Q'/>
</function>
<function name='InvokeAVLWalkUPP'>
<arg declared_type64='AVLTreePtr' name='tree' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' name='dataPtr' type64='^v'/>
<arg declared_type64='AVLVisitStage' name='visitStage' type64='S'/>
<arg declared_type64='AVLNodeType' name='node' type64='S'/>
<arg declared_type64='UInt32' name='level' type64='I'/>
<arg declared_type64='SInt32' name='balance' type64='i'/>
<arg declared_type64='void*' name='refCon' type64='^v'/>
<arg declared_type64='AVLWalkUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='AVLVisitStage' type64='S'/>
<arg declared_type64='AVLNodeType' type64='S'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InvokeCollectionExceptionUPP'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='OSErr' name='status' type64='s'/>
<arg declared_type64='CollectionExceptionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='Collection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='OSErr' type64='s'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InvokeCollectionFlattenUPP'>
<arg declared_type64='SInt32' name='size' type64='i'/>
<arg declared_type64='void*' name='data' type64='^v'/>
<arg declared_type64='void*' name='refCon' type64='^v'/>
<arg declared_type64='CollectionFlattenUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InvokeComponentMPWorkFunctionUPP'>
<arg declared_type64='void*' name='globalRefCon' type64='^v'/>
<arg declared_type64='ComponentMPWorkFunctionHeaderRecordPtr' name='header' type64='^{ComponentMPWorkFunctionHeaderRecord=IIISCC}'/>
<arg declared_type64='ComponentMPWorkFunctionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ComponentMPWorkFunctionHeaderRecordPtr' type64='^{ComponentMPWorkFunctionHeaderRecord=IIISCC}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</arg>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='InvokeComponentRoutineUPP'>
<arg declared_type64='ComponentParameters*' name='cp' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type64='Handle' name='componentStorage' type64='^*'/>
<arg declared_type64='ComponentRoutineUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ComponentParameters*' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type64='Handle' type64='^*'/>
<retval declared_type64='ComponentResult' type64='i'/>
</arg>
<retval declared_type64='ComponentResult' type64='i'/>
</function>
<function name='InvokeDebugAssertOutputHandlerUPP'>
<arg declared_type64='OSType' name='componentSignature' type64='I'/>
<arg declared_type64='UInt32' name='options' type64='I'/>
<arg const='true' declared_type64='char*' name='assertionString' type64='*'/>
<arg const='true' declared_type64='char*' name='exceptionLabelString' type64='*'/>
<arg const='true' declared_type64='char*' name='errorString' type64='*'/>
<arg const='true' declared_type64='char*' name='fileName' type64='*'/>
<arg declared_type64='long' name='lineNumber' type64='q'/>
<arg declared_type64='void*' name='value' type64='^v'/>
<arg declared_type64='ConstStr255Param' name='outputMsg' type64='*'/>
<arg declared_type64='DebugAssertOutputHandlerUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='long' type64='q'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ConstStr255Param' type64='*'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeDebugComponentCallbackUPP'>
<arg declared_type64='SInt32' name='optionSelectorNum' type64='i'/>
<arg declared_type64='UInt32' name='command' type64='I'/>
<arg declared_type64='Boolean*' name='optionSetting' type64='^B'/>
<arg declared_type64='DebugComponentCallbackUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='Boolean*' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeDebuggerDisposeThreadUPP'>
<arg declared_type64='ThreadID' name='threadDeleted' type64='Q'/>
<arg declared_type64='DebuggerDisposeThreadUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeDebuggerNewThreadUPP'>
<arg declared_type64='ThreadID' name='threadCreated' type64='Q'/>
<arg declared_type64='DebuggerNewThreadUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeDebuggerThreadSchedulerUPP'>
<arg declared_type64='SchedulerInfoRecPtr' name='schedulerInfo' type64='^{SchedulerInfoRec=IQQQ}'/>
<arg declared_type64='DebuggerThreadSchedulerUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SchedulerInfoRecPtr' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type64='ThreadID' type64='Q'/>
</arg>
<retval declared_type64='ThreadID' type64='Q'/>
</function>
<function name='InvokeDeferredTaskUPP'>
<arg declared_type64='long' name='dtParam' type64='q'/>
<arg declared_type64='DeferredTaskUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='long' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeExceptionHandlerUPP'>
<arg declared_type64='ExceptionInformation*' name='theException' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<arg declared_type64='ExceptionHandlerUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ExceptionInformation*' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='InvokeFNSubscriptionUPP'>
<arg declared_type64='FNMessage' name='message' type64='I'/>
<arg declared_type64='OptionBits' name='flags' type64='I'/>
<arg declared_type64='void*' name='refcon' type64='^v'/>
<arg declared_type64='FNSubscriptionRef' name='subscription' type64='^{OpaqueFNSubscriptionRef=}'/>
<arg declared_type64='FNSubscriptionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='FNMessage' type64='I'/>
<arg declared_type64='OptionBits' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='FNSubscriptionRef' type64='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeFSVolumeEjectUPP'>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' name='clientData' type64='^v'/>
<arg declared_type64='OSStatus' name='err' type64='i'/>
<arg declared_type64='FSVolumeRefNum' name='volumeRefNum' type64='s'/>
<arg declared_type64='pid_t' name='dissenter' type64='i'/>
<arg declared_type64='FSVolumeEjectUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<arg declared_type64='pid_t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeFSVolumeMountUPP'>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' name='clientData' type64='^v'/>
<arg declared_type64='OSStatus' name='err' type64='i'/>
<arg declared_type64='FSVolumeRefNum' name='mountedVolumeRefNum' type64='s'/>
<arg declared_type64='FSVolumeMountUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeFSVolumeUnmountUPP'>
<arg declared_type64='FSVolumeOperation' name='volumeOp' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' name='clientData' type64='^v'/>
<arg declared_type64='OSStatus' name='err' type64='i'/>
<arg declared_type64='FSVolumeRefNum' name='volumeRefNum' type64='s'/>
<arg declared_type64='pid_t' name='dissenter' type64='i'/>
<arg declared_type64='FSVolumeUnmountUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<arg declared_type64='pid_t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeFolderManagerNotificationUPP'>
<arg declared_type64='OSType' name='message' type64='I'/>
<arg declared_type64='void*' name='arg' type64='^v'/>
<arg declared_type64='void*' name='userRefCon' type64='^v'/>
<arg declared_type64='FolderManagerNotificationUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='InvokeGetMissingComponentResourceUPP'>
<arg declared_type64='Component' name='c' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='OSType' name='resType' type64='I'/>
<arg declared_type64='SInt16' name='resID' type64='s'/>
<arg declared_type64='void*' name='refCon' type64='^v'/>
<arg declared_type64='Handle*' name='resource' type64='^^*'/>
<arg declared_type64='GetMissingComponentResourceUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='Component' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='SInt16' type64='s'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='Handle*' type64='^^*'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InvokeIOCompletionUPP'>
<arg declared_type64='ParmBlkPtr' name='paramBlock' type64='^v'/>
<arg declared_type64='IOCompletionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ParmBlkPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeIndexToUCStringUPP'>
<arg declared_type64='UInt32' name='index' type64='I'/>
<arg declared_type64='void*' name='listDataPtr' type64='^v'/>
<arg declared_type64='void*' name='refcon' type64='^v'/>
<arg declared_type64='CFStringRef*' name='outString' type64='^^{__CFString}'/>
<arg declared_type64='UCTypeSelectOptions*' name='tsOptions' type64='^S'/>
<arg declared_type64='IndexToUCStringUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='CFStringRef*' type64='^^{__CFString}'/>
<arg declared_type64='UCTypeSelectOptions*' type64='^S'/>
<retval declared_type64='Boolean' type64='B'/>
</arg>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='InvokeResErrUPP'>
<arg declared_type64='OSErr' name='thErr' type64='s'/>
<arg declared_type64='ResErrUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='OSErr' type64='s'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeSelectorFunctionUPP'>
<arg declared_type64='OSType' name='selector' type64='I'/>
<arg declared_type64='SInt32*' name='response' type64='^i'/>
<arg declared_type64='SelectorFunctionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='SInt32*' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InvokeThreadEntryUPP'>
<arg declared_type64='void*' name='threadParam' type64='^v'/>
<arg declared_type64='ThreadEntryUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='voidPtr' type64='^v'/>
</arg>
<retval declared_type64='voidPtr' type64='^v'/>
</function>
<function name='InvokeThreadSchedulerUPP'>
<arg declared_type64='SchedulerInfoRecPtr' name='schedulerInfo' type64='^{SchedulerInfoRec=IQQQ}'/>
<arg declared_type64='ThreadSchedulerUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SchedulerInfoRecPtr' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type64='ThreadID' type64='Q'/>
</arg>
<retval declared_type64='ThreadID' type64='Q'/>
</function>
<function name='InvokeThreadSwitchUPP'>
<arg declared_type64='ThreadID' name='threadBeingSwitched' type64='Q'/>
<arg declared_type64='void*' name='switchProcParam' type64='^v'/>
<arg declared_type64='ThreadSwitchUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeThreadTerminationUPP'>
<arg declared_type64='ThreadID' name='threadTerminated' type64='Q'/>
<arg declared_type64='void*' name='terminationProcParam' type64='^v'/>
<arg declared_type64='ThreadTerminationUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeTimerUPP'>
<arg declared_type64='TMTaskPtr' name='tmTaskPtr' type64='^{TMTask=^{QElem}s^?qqq}'/>
<arg declared_type64='TimerUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='TMTaskPtr' type64='^{TMTask=^{QElem}s^?qqq}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeUnicodeToTextFallbackUPP'>
<arg declared_type64='UniChar*' name='iSrcUniStr' type64='^S'/>
<arg declared_type64='ByteCount' name='iSrcUniStrLen' type64='Q'/>
<arg declared_type64='ByteCount*' name='oSrcConvLen' type64='^Q'/>
<arg declared_type64='TextPtr' name='oDestStr' type64='*'/>
<arg declared_type64='ByteCount' name='iDestStrLen' type64='Q'/>
<arg declared_type64='ByteCount*' name='oDestConvLen' type64='^Q'/>
<arg declared_type64='LogicalAddress' name='iInfoPtr' type64='^v'/>
<arg declared_type64='ConstUnicodeMappingPtr' name='iUnicodeMappingPtr' type64='^{UnicodeMapping=IIi}'/>
<arg declared_type64='UnicodeToTextFallbackUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='UniChar*' type64='^S'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='TextPtr' type64='*'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='LogicalAddress' type64='^v'/>
<arg declared_type64='ConstUnicodeMappingPtr' type64='^{UnicodeMapping=IIi}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='IsHandleValid'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='IsHeapValid'>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='IsMetric'>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='IsPointerValid'>
<arg declared_type64='Ptr' name='p' type64='*'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='LMGetApFontID'>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='LMGetBootDrive'>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='LMGetIntlSpec'>
<retval declared_type64='Ptr' type64='*'/>
</function>
<function name='LMGetMemErr'>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='LMGetResErr'>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='LMGetResLoad'>
<retval declared_type64='UInt8' type64='C'/>
</function>
<function name='LMGetSysFontSize'>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='LMGetSysMap'>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='LMGetTmpResLoad'>
<retval declared_type64='UInt8' type64='C'/>
</function>
<function name='LMSetApFontID'>
<arg declared_type64='SInt16' name='value' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='LMSetBootDrive'>
<arg declared_type64='SInt16' name='value' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='LMSetIntlSpec'>
<arg declared_type64='Ptr' name='value' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='LMSetMemErr'>
<arg declared_type64='SInt16' name='value' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='LMSetResErr'>
<arg declared_type64='SInt16' name='value' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='LMSetResLoad'>
<arg declared_type64='UInt8' name='value' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='LMSetSysFontFam'>
<arg declared_type64='SInt16' name='value' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='LMSetSysFontSize'>
<arg declared_type64='SInt16' name='value' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='LMSetSysMap'>
<arg declared_type64='SInt16' name='value' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='LMSetTmpResLoad'>
<arg declared_type64='UInt8' name='value' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='LoadResource'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='LocaleCountNames'>
<arg declared_type64='LocaleRef' name='locale' type64='^{OpaqueLocaleRef=}'/>
<arg declared_type64='LocaleOperationVariant' name='opVariant' type64='I'/>
<arg declared_type64='LocaleNameMask' name='nameMask' type64='I'/>
<arg declared_type64='ItemCount*' name='nameCount' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='LocaleGetIndName'>
<arg declared_type64='LocaleRef' name='locale' type64='^{OpaqueLocaleRef=}'/>
<arg declared_type64='LocaleOperationVariant' name='opVariant' type64='I'/>
<arg declared_type64='LocaleNameMask' name='nameMask' type64='I'/>
<arg declared_type64='ItemCount' name='nameIndex' type64='Q'/>
<arg declared_type64='UniCharCount' name='maxNameLen' type64='Q'/>
<arg declared_type64='UniCharCount*' name='actualNameLen' type64='^Q'/>
<arg declared_type64='UniChar*' name='displayName' type64='^S'/>
<arg declared_type64='LocaleRef*' name='displayLocale' type64='^^{OpaqueLocaleRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='LocaleGetName'>
<arg declared_type64='LocaleRef' name='locale' type64='^{OpaqueLocaleRef=}'/>
<arg declared_type64='LocaleOperationVariant' name='opVariant' type64='I'/>
<arg declared_type64='LocaleNameMask' name='nameMask' type64='I'/>
<arg declared_type64='LocaleRef' name='displayLocale' type64='^{OpaqueLocaleRef=}'/>
<arg declared_type64='UniCharCount' name='maxNameLen' type64='Q'/>
<arg declared_type64='UniCharCount*' name='actualNameLen' type64='^Q'/>
<arg declared_type64='UniChar*' name='displayName' type64='^S'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='LocaleOperationCountLocales'>
<arg declared_type64='LocaleOperationClass' name='opClass' type64='I'/>
<arg declared_type64='ItemCount*' name='localeCount' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='LocaleOperationCountNames'>
<arg declared_type64='LocaleOperationClass' name='opClass' type64='I'/>
<arg declared_type64='ItemCount*' name='nameCount' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='LocaleOperationGetIndName'>
<arg declared_type64='LocaleOperationClass' name='opClass' type64='I'/>
<arg declared_type64='ItemCount' name='nameIndex' type64='Q'/>
<arg declared_type64='UniCharCount' name='maxNameLen' type64='Q'/>
<arg declared_type64='UniCharCount*' name='actualNameLen' type64='^Q'/>
<arg declared_type64='UniChar*' name='displayName' type64='^S'/>
<arg declared_type64='LocaleRef*' name='displayLocale' type64='^^{OpaqueLocaleRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='LocaleOperationGetLocales'>
<arg declared_type64='LocaleOperationClass' name='opClass' type64='I'/>
<arg declared_type64='ItemCount' name='maxLocaleCount' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualLocaleCount' type64='^Q'/>
<arg declared_type64='LocaleAndVariant*' name='localeVariantList' type64='^{LocaleAndVariant=^{OpaqueLocaleRef}I}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='LocaleOperationGetName'>
<arg declared_type64='LocaleOperationClass' name='opClass' type64='I'/>
<arg declared_type64='LocaleRef' name='displayLocale' type64='^{OpaqueLocaleRef=}'/>
<arg declared_type64='UniCharCount' name='maxNameLen' type64='Q'/>
<arg declared_type64='UniCharCount*' name='actualNameLen' type64='^Q'/>
<arg declared_type64='UniChar*' name='displayName' type64='^S'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='LocaleRefFromLangOrRegionCode'>
<arg declared_type64='LangCode' name='lang' type64='s'/>
<arg declared_type64='RegionCode' name='region' type64='s'/>
<arg declared_type64='LocaleRef*' name='locale' type64='^^{OpaqueLocaleRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='LocaleRefFromLocaleString'>
<arg const='true' declared_type64='char*' name='localeString' type64='*'/>
<arg declared_type64='LocaleRef*' name='locale' type64='^^{OpaqueLocaleRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='LocaleRefGetPartString'>
<arg declared_type64='LocaleRef' name='locale' type64='^{OpaqueLocaleRef=}'/>
<arg declared_type64='LocalePartMask' name='partMask' type64='I'/>
<arg declared_type64='ByteCount' name='maxStringLen' type64='Q'/>
<arg declared_type64='char*' name='partString' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='LocaleStringToLangAndRegionCodes'>
<arg const='true' declared_type64='char*' name='localeString' type64='*'/>
<arg declared_type64='LangCode*' name='lang' type64='^s'/>
<arg declared_type64='RegionCode*' name='region' type64='^s'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='Long2Fix'>
<arg declared_type64='SInt32' name='x' type64='i'/>
<retval declared_type64='Fixed' type64='i'/>
</function>
<function name='LongDoubleToSInt64'>
<arg declared_type64='long double' name='value' type64='D'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='LongDoubleToUInt64'>
<arg declared_type64='long double' name='value' type64='D'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='MPAllocate'>
<arg declared_type64='ByteCount' name='size' type64='Q'/>
<retval declared_type64='LogicalAddress' type64='^v'/>
</function>
<function name='MPAllocateAligned'>
<arg declared_type64='ByteCount' name='size' type64='Q'/>
<arg declared_type64='UInt8' name='alignment' type64='C'/>
<arg declared_type64='OptionBits' name='options' type64='I'/>
<retval declared_type64='LogicalAddress' type64='^v'/>
</function>
<function name='MPAllocateTaskStorageIndex'>
<arg declared_type64='TaskStorageIndex*' name='taskIndex' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPArmTimer'>
<arg declared_type64='MPTimerID' name='timerID' type64='^{OpaqueMPTimerID=}'/>
<arg declared_type64='AbsoluteTime*' name='expirationTime' type64='^{UnsignedWide=II}'/>
<arg declared_type64='OptionBits' name='options' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPBlockClear'>
<arg declared_type64='LogicalAddress' name='address' type64='^v'/>
<arg declared_type64='ByteCount' name='size' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='MPBlockCopy'>
<arg declared_type64='LogicalAddress' name='source' type64='^v'/>
<arg declared_type64='LogicalAddress' name='destination' type64='^v'/>
<arg declared_type64='ByteCount' name='size' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='MPCancelTimer'>
<arg declared_type64='MPTimerID' name='timerID' type64='^{OpaqueMPTimerID=}'/>
<arg declared_type64='AbsoluteTime*' name='timeRemaining' type64='^{UnsignedWide=II}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPCauseNotification'>
<arg declared_type64='MPNotificationID' name='notificationID' type64='^{OpaqueMPNotificationID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPCreateCriticalRegion'>
<arg declared_type64='MPCriticalRegionID*' name='criticalRegion' type64='^^{OpaqueMPCriticalRegionID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPCreateEvent'>
<arg declared_type64='MPEventID*' name='event' type64='^^{OpaqueMPEventID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPCreateNotification'>
<arg declared_type64='MPNotificationID*' name='notificationID' type64='^^{OpaqueMPNotificationID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPCreateQueue'>
<arg declared_type64='MPQueueID*' name='queue' type64='^^{OpaqueMPQueueID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPCreateSemaphore'>
<arg declared_type64='MPSemaphoreCount' name='maximumValue' type64='Q'/>
<arg declared_type64='MPSemaphoreCount' name='initialValue' type64='Q'/>
<arg declared_type64='MPSemaphoreID*' name='semaphore' type64='^^{OpaqueMPSemaphoreID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPCreateTask'>
<arg declared_type64='TaskProc' function_pointer='true' name='entryPoint' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='void*' name='parameter' type64='^v'/>
<arg declared_type64='ByteCount' name='stackSize' type64='Q'/>
<arg declared_type64='MPQueueID' name='notifyQueue' type64='^{OpaqueMPQueueID=}'/>
<arg declared_type64='void*' name='terminationParameter1' type64='^v'/>
<arg declared_type64='void*' name='terminationParameter2' type64='^v'/>
<arg declared_type64='MPTaskOptions' name='options' type64='I'/>
<arg declared_type64='MPTaskID*' name='task' type64='^^{OpaqueMPTaskID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPCreateTimer'>
<arg declared_type64='MPTimerID*' name='timerID' type64='^^{OpaqueMPTimerID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPCurrentTaskID'>
<retval declared_type64='MPTaskID' type64='^{OpaqueMPTaskID=}'/>
</function>
<function name='MPDeallocateTaskStorageIndex'>
<arg declared_type64='TaskStorageIndex' name='taskIndex' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPDelayUntil'>
<arg declared_type64='AbsoluteTime*' name='expirationTime' type64='^{UnsignedWide=II}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPDeleteCriticalRegion'>
<arg declared_type64='MPCriticalRegionID' name='criticalRegion' type64='^{OpaqueMPCriticalRegionID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPDeleteEvent'>
<arg declared_type64='MPEventID' name='event' type64='^{OpaqueMPEventID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPDeleteNotification'>
<arg declared_type64='MPNotificationID' name='notificationID' type64='^{OpaqueMPNotificationID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPDeleteQueue'>
<arg declared_type64='MPQueueID' name='queue' type64='^{OpaqueMPQueueID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPDeleteSemaphore'>
<arg declared_type64='MPSemaphoreID' name='semaphore' type64='^{OpaqueMPSemaphoreID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPDeleteTimer'>
<arg declared_type64='MPTimerID' name='timerID' type64='^{OpaqueMPTimerID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPDisposeTaskException'>
<arg declared_type64='MPTaskID' name='task' type64='^{OpaqueMPTaskID=}'/>
<arg declared_type64='OptionBits' name='action' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPEnterCriticalRegion'>
<arg declared_type64='MPCriticalRegionID' name='criticalRegion' type64='^{OpaqueMPCriticalRegionID=}'/>
<arg declared_type64='Duration' name='timeout' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPExit'>
<arg declared_type64='OSStatus' name='status' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='MPExitCriticalRegion'>
<arg declared_type64='MPCriticalRegionID' name='criticalRegion' type64='^{OpaqueMPCriticalRegionID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPExtractTaskState'>
<arg declared_type64='MPTaskID' name='task' type64='^{OpaqueMPTaskID=}'/>
<arg declared_type64='MPTaskStateKind' name='kind' type64='I'/>
<arg declared_type64='void*' name='info' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPFree'>
<arg declared_type64='LogicalAddress' name='object' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='MPGetAllocatedBlockSize'>
<arg declared_type64='LogicalAddress' name='object' type64='^v'/>
<retval declared_type64='ByteCount' type64='Q'/>
</function>
<function name='MPGetNextCpuID'>
<arg declared_type64='MPCoherenceID' name='owningCoherenceID' type64='^{OpaqueMPCoherenceID=}'/>
<arg declared_type64='MPCpuID*' name='cpuID' type64='^^{OpaqueMPCpuID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPGetNextTaskID'>
<arg declared_type64='MPProcessID' name='owningProcessID' type64='^{OpaqueMPProcessID=}'/>
<arg declared_type64='MPTaskID*' name='taskID' type64='^^{OpaqueMPTaskID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPGetTaskStorageValue'>
<arg declared_type64='TaskStorageIndex' name='taskIndex' type64='Q'/>
<retval declared_type64='TaskStorageValue' type64='^v'/>
</function>
<function name='MPModifyNotification'>
<arg declared_type64='MPNotificationID' name='notificationID' type64='^{OpaqueMPNotificationID=}'/>
<arg declared_type64='MPOpaqueID' name='anID' type64='^{OpaqueMPOpaqueID=}'/>
<arg declared_type64='void*' name='notifyParam1' type64='^v'/>
<arg declared_type64='void*' name='notifyParam2' type64='^v'/>
<arg declared_type64='void*' name='notifyParam3' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPModifyNotificationParameters'>
<arg declared_type64='MPNotificationID' name='notificationID' type64='^{OpaqueMPNotificationID=}'/>
<arg declared_type64='MPOpaqueIDClass' name='kind' type64='I'/>
<arg declared_type64='void*' name='notifyParam1' type64='^v'/>
<arg declared_type64='void*' name='notifyParam2' type64='^v'/>
<arg declared_type64='void*' name='notifyParam3' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPNotifyQueue'>
<arg declared_type64='MPQueueID' name='queue' type64='^{OpaqueMPQueueID=}'/>
<arg declared_type64='void*' name='param1' type64='^v'/>
<arg declared_type64='void*' name='param2' type64='^v'/>
<arg declared_type64='void*' name='param3' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPProcessors'>
<retval declared_type64='ItemCount' type64='Q'/>
</function>
<function name='MPProcessorsScheduled'>
<retval declared_type64='ItemCount' type64='Q'/>
</function>
<function name='MPRegisterDebugger'>
<arg declared_type64='MPQueueID' name='queue' type64='^{OpaqueMPQueueID=}'/>
<arg declared_type64='MPDebuggerLevel' name='level' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPRemoteCall'>
<arg declared_type64='MPRemoteProcedure' function_pointer='true' name='remoteProc' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void*' type64='^v'/>
</arg>
<arg declared_type64='void*' name='parameter' type64='^v'/>
<arg declared_type64='MPRemoteContext' name='context' type64='C'/>
<retval declared_type64='void*' type64='^v'/>
</function>
<function name='MPRemoteCallCFM'>
<arg declared_type64='MPRemoteProcedure' function_pointer='true' name='remoteProc' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void*' type64='^v'/>
</arg>
<arg declared_type64='void*' name='parameter' type64='^v'/>
<arg declared_type64='MPRemoteContext' name='context' type64='C'/>
<retval declared_type64='void*' type64='^v'/>
</function>
<function name='MPSetEvent'>
<arg declared_type64='MPEventID' name='event' type64='^{OpaqueMPEventID=}'/>
<arg declared_type64='MPEventFlags' name='flags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPSetExceptionHandler'>
<arg declared_type64='MPTaskID' name='task' type64='^{OpaqueMPTaskID=}'/>
<arg declared_type64='MPQueueID' name='exceptionQ' type64='^{OpaqueMPQueueID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPSetQueueReserve'>
<arg declared_type64='MPQueueID' name='queue' type64='^{OpaqueMPQueueID=}'/>
<arg declared_type64='ItemCount' name='count' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPSetTaskState'>
<arg declared_type64='MPTaskID' name='task' type64='^{OpaqueMPTaskID=}'/>
<arg declared_type64='MPTaskStateKind' name='kind' type64='I'/>
<arg declared_type64='void*' name='info' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPSetTaskStorageValue'>
<arg declared_type64='TaskStorageIndex' name='taskIndex' type64='Q'/>
<arg declared_type64='TaskStorageValue' name='value' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPSetTaskType'>
<arg declared_type64='MPTaskID' name='task' type64='^{OpaqueMPTaskID=}'/>
<arg declared_type64='OSType' name='taskType' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPSetTaskWeight'>
<arg declared_type64='MPTaskID' name='task' type64='^{OpaqueMPTaskID=}'/>
<arg declared_type64='MPTaskWeight' name='weight' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPSetTimerNotify'>
<arg declared_type64='MPTimerID' name='timerID' type64='^{OpaqueMPTimerID=}'/>
<arg declared_type64='MPOpaqueID' name='anID' type64='^{OpaqueMPOpaqueID=}'/>
<arg declared_type64='void*' name='notifyParam1' type64='^v'/>
<arg declared_type64='void*' name='notifyParam2' type64='^v'/>
<arg declared_type64='void*' name='notifyParam3' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPSignalSemaphore'>
<arg declared_type64='MPSemaphoreID' name='semaphore' type64='^{OpaqueMPSemaphoreID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPTaskIsPreemptive'>
<arg declared_type64='MPTaskID' name='taskID' type64='^{OpaqueMPTaskID=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='MPTerminateTask'>
<arg declared_type64='MPTaskID' name='task' type64='^{OpaqueMPTaskID=}'/>
<arg declared_type64='OSStatus' name='terminationStatus' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPThrowException'>
<arg declared_type64='MPTaskID' name='task' type64='^{OpaqueMPTaskID=}'/>
<arg declared_type64='MPExceptionKind' name='kind' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPUnregisterDebugger'>
<arg declared_type64='MPQueueID' name='queue' type64='^{OpaqueMPQueueID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPWaitForEvent'>
<arg declared_type64='MPEventID' name='event' type64='^{OpaqueMPEventID=}'/>
<arg declared_type64='MPEventFlags*' name='flags' type64='^I'/>
<arg declared_type64='Duration' name='timeout' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPWaitOnQueue'>
<arg declared_type64='MPQueueID' name='queue' type64='^{OpaqueMPQueueID=}'/>
<arg declared_type64='void**' name='param1' type64='^^v'/>
<arg declared_type64='void**' name='param2' type64='^^v'/>
<arg declared_type64='void**' name='param3' type64='^^v'/>
<arg declared_type64='Duration' name='timeout' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPWaitOnSemaphore'>
<arg declared_type64='MPSemaphoreID' name='semaphore' type64='^{OpaqueMPSemaphoreID=}'/>
<arg declared_type64='Duration' name='timeout' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MPYield'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='MemError'>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='Microseconds'>
<arg declared_type64='UnsignedWide*' name='microTickCount' type64='^{UnsignedWide=II}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Munger'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<arg declared_type64='long' name='offset' type64='q'/>
<arg const='true' declared_type64='void*' name='ptr1' type64='^v'/>
<arg declared_type64='long' name='len1' type64='q'/>
<arg const='true' declared_type64='void*' name='ptr2' type64='^v'/>
<arg declared_type64='long' name='len2' type64='q'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='NanosecondsToAbsolute'>
<arg declared_type64='Nanoseconds' name='nanoseconds' type64='{UnsignedWide=II}'/>
<retval declared_type64='AbsoluteTime' type64='{UnsignedWide=II}'/>
</function>
<function name='NanosecondsToDuration'>
<arg declared_type64='Nanoseconds' name='theNanoseconds' type64='{UnsignedWide=II}'/>
<retval declared_type64='Duration' type64='i'/>
</function>
<function name='NearestMacTextEncodings'>
<arg declared_type64='TextEncoding' name='generalEncoding' type64='I'/>
<arg declared_type64='TextEncoding*' name='bestMacEncoding' type64='^I'/>
<arg declared_type64='TextEncoding*' name='alternateMacEncoding' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='NewAVLCompareItemsUPP'>
<arg declared_type64='AVLCompareItemsProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='AVLNodeType' type64='S'/>
<retval declared_type64='SInt32' type64='i'/>
</arg>
<retval declared_type64='AVLCompareItemsUPP' function_pointer='true' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='AVLNodeType' type64='S'/>
<retval declared_type64='SInt32' type64='i'/>
</retval>
</function>
<function name='NewAVLDisposeItemUPP'>
<arg declared_type64='AVLDisposeItemProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='AVLDisposeItemUPP' function_pointer='true' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewAVLItemSizeUPP'>
<arg declared_type64='AVLItemSizeProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='ByteCount' type64='Q'/>
</arg>
<retval declared_type64='AVLItemSizeUPP' function_pointer='true' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='ByteCount' type64='Q'/>
</retval>
</function>
<function name='NewAVLWalkUPP'>
<arg declared_type64='AVLWalkProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='AVLVisitStage' type64='S'/>
<arg declared_type64='AVLNodeType' type64='S'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='AVLWalkUPP' function_pointer='true' type64='^?'>
<arg declared_type64='AVLTreePtr' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='AVLVisitStage' type64='S'/>
<arg declared_type64='AVLNodeType' type64='S'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</retval>
</function>
<function name='NewCollection'>
<retval declared_type64='Collection' type64='^{OpaqueCollection=}'/>
</function>
<function name='NewCollectionExceptionUPP'>
<arg declared_type64='CollectionExceptionProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='Collection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='OSErr' type64='s'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='CollectionExceptionUPP' function_pointer='true' type64='^?'>
<arg declared_type64='Collection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='OSErr' type64='s'/>
<retval declared_type64='OSErr' type64='s'/>
</retval>
</function>
<function name='NewCollectionFlattenUPP'>
<arg declared_type64='CollectionFlattenProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='CollectionFlattenUPP' function_pointer='true' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</retval>
</function>
<function name='NewComponentFunctionUPP'>
<arg declared_type64='ProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<retval declared_type64='long' type64='q'/>
</arg>
<arg declared_type64='ProcInfoType' name='procInfo' type64='Q'/>
<retval declared_type64='ComponentFunctionUPP' function_pointer='true' type64='^?'>
<retval declared_type64='long' type64='q'/>
</retval>
</function>
<function name='NewComponentMPWorkFunctionUPP'>
<arg declared_type64='ComponentMPWorkFunctionProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ComponentMPWorkFunctionHeaderRecordPtr' type64='^{ComponentMPWorkFunctionHeaderRecord=IIISCC}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</arg>
<retval declared_type64='ComponentMPWorkFunctionUPP' function_pointer='true' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ComponentMPWorkFunctionHeaderRecordPtr' type64='^{ComponentMPWorkFunctionHeaderRecord=IIISCC}'/>
<retval declared_type64='ComponentResult' type64='i'/>
</retval>
</function>
<function name='NewComponentRoutineUPP'>
<arg declared_type64='ComponentRoutineProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='ComponentParameters*' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type64='Handle' type64='^*'/>
<retval declared_type64='ComponentResult' type64='i'/>
</arg>
<retval declared_type64='ComponentRoutineUPP' function_pointer='true' type64='^?'>
<arg declared_type64='ComponentParameters*' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type64='Handle' type64='^*'/>
<retval declared_type64='ComponentResult' type64='i'/>
</retval>
</function>
<function name='NewDebugAssertOutputHandlerUPP'>
<arg declared_type64='DebugAssertOutputHandlerProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='long' type64='q'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ConstStr255Param' type64='*'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='DebugAssertOutputHandlerUPP' function_pointer='true' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='long' type64='q'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ConstStr255Param' type64='*'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewDebugComponent'>
<arg declared_type64='OSType' name='componentSignature' type64='I'/>
<arg declared_type64='ConstStr255Param' name='componentName' type64='*'/>
<arg declared_type64='DebugComponentCallbackUPP' function_pointer='true' name='componentCallback' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='Boolean*' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='NewDebugComponentCallbackUPP'>
<arg declared_type64='DebugComponentCallbackProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='Boolean*' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='DebugComponentCallbackUPP' function_pointer='true' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='Boolean*' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewDebugOption'>
<arg declared_type64='OSType' name='componentSignature' type64='I'/>
<arg declared_type64='SInt32' name='optionSelectorNum' type64='i'/>
<arg declared_type64='ConstStr255Param' name='optionName' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='NewDebuggerDisposeThreadUPP'>
<arg declared_type64='DebuggerDisposeThreadProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='DebuggerDisposeThreadUPP' function_pointer='true' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewDebuggerNewThreadUPP'>
<arg declared_type64='DebuggerNewThreadProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='DebuggerNewThreadUPP' function_pointer='true' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewDebuggerThreadSchedulerUPP'>
<arg declared_type64='DebuggerThreadSchedulerProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='SchedulerInfoRecPtr' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type64='ThreadID' type64='Q'/>
</arg>
<retval declared_type64='DebuggerThreadSchedulerUPP' function_pointer='true' type64='^?'>
<arg declared_type64='SchedulerInfoRecPtr' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type64='ThreadID' type64='Q'/>
</retval>
</function>
<function name='NewDeferredTaskUPP'>
<arg declared_type64='DeferredTaskProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='long' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='DeferredTaskUPP' function_pointer='true' type64='^?'>
<arg declared_type64='long' type64='q'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewEmptyHandle'>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='NewExceptionHandlerUPP'>
<arg declared_type64='ExceptionHandlerProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='ExceptionInformation*' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='ExceptionHandlerUPP' function_pointer='true' type64='^?'>
<arg declared_type64='ExceptionInformation*' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</retval>
</function>
<function name='NewFNSubscriptionUPP'>
<arg declared_type64='FNSubscriptionProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='FNMessage' type64='I'/>
<arg declared_type64='OptionBits' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='FNSubscriptionRef' type64='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='FNSubscriptionUPP' function_pointer='true' type64='^?'>
<arg declared_type64='FNMessage' type64='I'/>
<arg declared_type64='OptionBits' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='FNSubscriptionRef' type64='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewFSVolumeEjectUPP'>
<arg declared_type64='FSVolumeEjectProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<arg declared_type64='pid_t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='FSVolumeEjectUPP' function_pointer='true' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<arg declared_type64='pid_t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewFSVolumeMountUPP'>
<arg declared_type64='FSVolumeMountProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='FSVolumeMountUPP' function_pointer='true' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewFSVolumeUnmountUPP'>
<arg declared_type64='FSVolumeUnmountProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<arg declared_type64='pid_t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='FSVolumeUnmountUPP' function_pointer='true' type64='^?'>
<arg declared_type64='FSVolumeOperation' type64='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='OSStatus' type64='i'/>
<arg declared_type64='FSVolumeRefNum' type64='s'/>
<arg declared_type64='pid_t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewFolderManagerNotificationUPP'>
<arg declared_type64='FolderManagerNotificationProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='FolderManagerNotificationUPP' function_pointer='true' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</retval>
</function>
<function name='NewGestaltValue'>
<arg declared_type64='OSType' name='selector' type64='I'/>
<arg declared_type64='SInt32' name='newValue' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='NewGetMissingComponentResourceUPP'>
<arg declared_type64='GetMissingComponentResourceProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='Component' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='SInt16' type64='s'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='Handle*' type64='^^*'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='GetMissingComponentResourceUPP' function_pointer='true' type64='^?'>
<arg declared_type64='Component' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='SInt16' type64='s'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='Handle*' type64='^^*'/>
<retval declared_type64='OSErr' type64='s'/>
</retval>
</function>
<function name='NewHandle'>
<arg declared_type64='Size' name='byteCount' type64='q'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='NewHandleClear'>
<arg declared_type64='Size' name='byteCount' type64='q'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='NewIOCompletionUPP'>
<arg declared_type64='IOCompletionProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='ParmBlkPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='IOCompletionUPP' function_pointer='true' type64='^?'>
<arg declared_type64='ParmBlkPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewIndexToUCStringUPP'>
<arg declared_type64='IndexToUCStringProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='CFStringRef*' type64='^^{__CFString}'/>
<arg declared_type64='UCTypeSelectOptions*' type64='^S'/>
<retval declared_type64='Boolean' type64='B'/>
</arg>
<retval declared_type64='IndexToUCStringUPP' function_pointer='true' type64='^?'>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='CFStringRef*' type64='^^{__CFString}'/>
<arg declared_type64='UCTypeSelectOptions*' type64='^S'/>
<retval declared_type64='Boolean' type64='B'/>
</retval>
</function>
<function name='NewPtr'>
<arg declared_type64='Size' name='byteCount' type64='q'/>
<retval declared_type64='Ptr' type64='*'/>
</function>
<function name='NewPtrClear'>
<arg declared_type64='Size' name='byteCount' type64='q'/>
<retval declared_type64='Ptr' type64='*'/>
</function>
<function name='NewResErrUPP'>
<arg declared_type64='ResErrProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='OSErr' type64='s'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='ResErrUPP' function_pointer='true' type64='^?'>
<arg declared_type64='OSErr' type64='s'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewSelectorFunctionUPP'>
<arg declared_type64='SelectorFunctionProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='SInt32*' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='SelectorFunctionUPP' function_pointer='true' type64='^?'>
<arg declared_type64='OSType' type64='I'/>
<arg declared_type64='SInt32*' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</retval>
</function>
<function name='NewThread'>
<arg declared_type64='ThreadStyle' name='threadStyle' type64='I'/>
<arg declared_type64='ThreadEntryTPP' function_pointer='true' name='threadEntry' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='voidPtr' type64='^v'/>
</arg>
<arg declared_type64='void*' name='threadParam' type64='^v'/>
<arg declared_type64='Size' name='stackSize' type64='q'/>
<arg declared_type64='ThreadOptions' name='options' type64='I'/>
<arg declared_type64='void**' name='threadResult' type64='^^v'/>
<arg declared_type64='ThreadID*' name='threadMade' type64='^Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='NewThreadEntryUPP'>
<arg declared_type64='ThreadEntryProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='voidPtr' type64='^v'/>
</arg>
<retval declared_type64='ThreadEntryUPP' function_pointer='true' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='voidPtr' type64='^v'/>
</retval>
</function>
<function name='NewThreadSchedulerUPP'>
<arg declared_type64='ThreadSchedulerProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='SchedulerInfoRecPtr' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type64='ThreadID' type64='Q'/>
</arg>
<retval declared_type64='ThreadSchedulerUPP' function_pointer='true' type64='^?'>
<arg declared_type64='SchedulerInfoRecPtr' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type64='ThreadID' type64='Q'/>
</retval>
</function>
<function name='NewThreadSwitchUPP'>
<arg declared_type64='ThreadSwitchProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='ThreadSwitchUPP' function_pointer='true' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewThreadTerminationUPP'>
<arg declared_type64='ThreadTerminationProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='ThreadTerminationUPP' function_pointer='true' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewTimerUPP'>
<arg declared_type64='TimerProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='TMTaskPtr' type64='^{TMTask=^{QElem}s^?qqq}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='TimerUPP' function_pointer='true' type64='^?'>
<arg declared_type64='TMTaskPtr' type64='^{TMTask=^{QElem}s^?qqq}'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewUnicodeToTextFallbackUPP'>
<arg declared_type64='UnicodeToTextFallbackProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='UniChar*' type64='^S'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='TextPtr' type64='*'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='LogicalAddress' type64='^v'/>
<arg declared_type64='ConstUnicodeMappingPtr' type64='^{UnicodeMapping=IIi}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='UnicodeToTextFallbackUPP' function_pointer='true' type64='^?'>
<arg declared_type64='UniChar*' type64='^S'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='TextPtr' type64='*'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='LogicalAddress' type64='^v'/>
<arg declared_type64='ConstUnicodeMappingPtr' type64='^{UnicodeMapping=IIi}'/>
<retval declared_type64='OSStatus' type64='i'/>
</retval>
</function>
<function name='OpenAComponent'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='ComponentInstance*' name='ci' type64='^^{ComponentInstanceRecord}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='OpenAComponentResFile'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='ResFileRefNum*' name='resRef' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='OpenADefaultComponent'>
<arg declared_type64='OSType' name='componentType' type64='I'/>
<arg declared_type64='OSType' name='componentSubType' type64='I'/>
<arg declared_type64='ComponentInstance*' name='ci' type64='^^{ComponentInstanceRecord}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='OpenComponent'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type64='ComponentInstance' type64='^{ComponentInstanceRecord=[1q]}'/>
</function>
<function name='OpenComponentResFile'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type64='ResFileRefNum' type64='i'/>
</function>
<function name='OpenDefaultComponent'>
<arg declared_type64='OSType' name='componentType' type64='I'/>
<arg declared_type64='OSType' name='componentSubType' type64='I'/>
<retval declared_type64='ComponentInstance' type64='^{ComponentInstanceRecord=[1q]}'/>
</function>
<function name='PBAllocateForkAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBAllocateForkSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBCatalogSearchAsync'>
<arg declared_type64='FSCatalogBulkParam*' name='paramBlock' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBCatalogSearchSync'>
<arg declared_type64='FSCatalogBulkParam*' name='paramBlock' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBCloseForkAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBCloseForkSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBCloseIteratorAsync'>
<arg declared_type64='FSCatalogBulkParam*' name='paramBlock' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBCloseIteratorSync'>
<arg declared_type64='FSCatalogBulkParam*' name='paramBlock' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBCompareFSRefsAsync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBCompareFSRefsSync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBCreateDirectoryUnicodeAsync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBCreateDirectoryUnicodeSync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBCreateFileAndOpenForkUnicodeAsync'>
<arg declared_type64='FSRefForkIOParamPtr' name='paramBlock' type64='^{FSRefForkIOParam=^{QElem}ss*^?s^{FSRef}Q^SI^{FSCatalogInfo}Q^ScCi^{FSRef}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBCreateFileAndOpenForkUnicodeSync'>
<arg declared_type64='FSRefForkIOParamPtr' name='paramBlock' type64='^{FSRefForkIOParam=^{QElem}ss*^?s^{FSRef}Q^SI^{FSCatalogInfo}Q^ScCi^{FSRef}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PBCreateFileUnicodeAsync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBCreateFileUnicodeSync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBCreateForkAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBCreateForkSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBDeleteForkAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBDeleteForkSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBDeleteObjectAsync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBDeleteObjectSync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBExchangeObjectsAsync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBExchangeObjectsSync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBFSCopyFileAsync'>
<arg declared_type64='FSRefParamPtr' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PBFSCopyFileSync'>
<arg declared_type64='FSRefParamPtr' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PBFSResolveNodeIDAsync'>
<arg declared_type64='FSRefParamPtr' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PBFSResolveNodeIDSync'>
<arg declared_type64='FSRefParamPtr' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PBFlushForkAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBFlushForkSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBFlushVolumeAsync'>
<arg declared_type64='FSRefParamPtr' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PBFlushVolumeSync'>
<arg declared_type64='FSRefParamPtr' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PBGetCatalogInfoAsync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBGetCatalogInfoBulkAsync'>
<arg declared_type64='FSCatalogBulkParam*' name='paramBlock' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBGetCatalogInfoBulkSync'>
<arg declared_type64='FSCatalogBulkParam*' name='paramBlock' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBGetCatalogInfoSync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBGetForkCBInfoAsync'>
<arg declared_type64='FSForkCBInfoParam*' name='paramBlock' type64='^{FSForkCBInfoParam=^{QElem}ss*^?sisis^{FSRef}^{FSForkInfo}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBGetForkCBInfoSync'>
<arg declared_type64='FSForkCBInfoParam*' name='paramBlock' type64='^{FSForkCBInfoParam=^{QElem}ss*^?sisis^{FSRef}^{FSForkInfo}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBGetForkPositionAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBGetForkPositionSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBGetForkSizeAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBGetForkSizeSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBGetVolumeInfoAsync'>
<arg declared_type64='FSVolumeInfoParam*' name='paramBlock' type64='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBGetVolumeInfoSync'>
<arg declared_type64='FSVolumeInfoParam*' name='paramBlock' type64='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBIterateForksAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBIterateForksSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBMakeFSRefUnicodeAsync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBMakeFSRefUnicodeSync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBMoveObjectAsync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBMoveObjectSync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBOpenForkAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBOpenForkSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBOpenIteratorAsync'>
<arg declared_type64='FSCatalogBulkParam*' name='paramBlock' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBOpenIteratorSync'>
<arg declared_type64='FSCatalogBulkParam*' name='paramBlock' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBReadForkAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBReadForkSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBRenameUnicodeAsync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBRenameUnicodeSync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBSetCatalogInfoAsync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBSetCatalogInfoSync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBSetForkPositionAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBSetForkPositionSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBSetForkSizeAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBSetForkSizeSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBSetVolumeInfoAsync'>
<arg declared_type64='FSVolumeInfoParam*' name='paramBlock' type64='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBSetVolumeInfoSync'>
<arg declared_type64='FSVolumeInfoParam*' name='paramBlock' type64='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBUnlinkObjectAsync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBUnlinkObjectSync'>
<arg declared_type64='FSRefParam*' name='paramBlock' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBWriteForkAsync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PBWriteForkSync'>
<arg declared_type64='FSForkIOParam*' name='paramBlock' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PBXLockRangeAsync'>
<arg declared_type64='FSRangeLockParamPtr' name='paramBlock' type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PBXLockRangeSync'>
<arg declared_type64='FSRangeLockParamPtr' name='paramBlock' type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PBXUnlockRangeAsync'>
<arg declared_type64='FSRangeLockParamPtr' name='paramBlock' type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PBXUnlockRangeSync'>
<arg declared_type64='FSRangeLockParamPtr' name='paramBlock' type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PLpos'>
<arg declared_type64='ConstStr255Param' name='str1' type64='*'/>
<arg declared_type64='ConstStr255Param' name='searchStr' type64='*'/>
<retval declared_type64='short' type64='s'/>
</function>
<function name='PLstrcat'>
<arg declared_type64='StringPtr' name='str' type64='*'/>
<arg declared_type64='ConstStr255Param' name='append' type64='*'/>
<retval declared_type64='StringPtr' type64='*'/>
</function>
<function name='PLstrchr'>
<arg declared_type64='ConstStr255Param' name='str1' type64='*'/>
<arg declared_type64='short' name='ch1' type64='s'/>
<retval declared_type64='Ptr' type64='*'/>
</function>
<function name='PLstrcmp'>
<arg declared_type64='ConstStr255Param' name='str1' type64='*'/>
<arg declared_type64='ConstStr255Param' name='str2' type64='*'/>
<retval declared_type64='short' type64='s'/>
</function>
<function name='PLstrcpy'>
<arg declared_type64='StringPtr' name='dest' type64='*'/>
<arg declared_type64='ConstStr255Param' name='source' type64='*'/>
<retval declared_type64='StringPtr' type64='*'/>
</function>
<function name='PLstrlen'>
<arg declared_type64='ConstStr255Param' name='str' type64='*'/>
<retval declared_type64='short' type64='s'/>
</function>
<function name='PLstrncat'>
<arg declared_type64='StringPtr' name='str1' type64='*'/>
<arg declared_type64='ConstStr255Param' name='append' type64='*'/>
<arg declared_type64='short' name='num' type64='s'/>
<retval declared_type64='StringPtr' type64='*'/>
</function>
<function name='PLstrncmp'>
<arg declared_type64='ConstStr255Param' name='str1' type64='*'/>
<arg declared_type64='ConstStr255Param' name='str2' type64='*'/>
<arg declared_type64='short' name='num' type64='s'/>
<retval declared_type64='short' type64='s'/>
</function>
<function name='PLstrncpy'>
<arg declared_type64='StringPtr' name='dest' type64='*'/>
<arg declared_type64='ConstStr255Param' name='source' type64='*'/>
<arg declared_type64='short' name='num' type64='s'/>
<retval declared_type64='StringPtr' type64='*'/>
</function>
<function name='PLstrpbrk'>
<arg declared_type64='ConstStr255Param' name='str1' type64='*'/>
<arg declared_type64='ConstStr255Param' name='charSet' type64='*'/>
<retval declared_type64='Ptr' type64='*'/>
</function>
<function name='PLstrrchr'>
<arg declared_type64='ConstStr255Param' name='str1' type64='*'/>
<arg declared_type64='short' name='ch1' type64='s'/>
<retval declared_type64='Ptr' type64='*'/>
</function>
<function name='PLstrspn'>
<arg declared_type64='ConstStr255Param' name='str1' type64='*'/>
<arg declared_type64='ConstStr255Param' name='charSet' type64='*'/>
<retval declared_type64='short' type64='s'/>
</function>
<function name='PLstrstr'>
<arg declared_type64='ConstStr255Param' name='str1' type64='*'/>
<arg declared_type64='ConstStr255Param' name='searchStr' type64='*'/>
<retval declared_type64='Ptr' type64='*'/>
</function>
<function name='PrimeTime'>
<arg declared_type64='QElemPtr' name='tmTaskPtr' type64='^{QElem=^{QElem}s[1s]}'/>
<arg declared_type64='long' name='count' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PrimeTimeTask'>
<arg declared_type64='QElemPtr' name='tmTaskPtr' type64='^{QElem=^{QElem}s[1s]}'/>
<arg declared_type64='long' name='count' type64='q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PtrAndHand'>
<arg const='true' declared_type64='void*' name='ptr1' type64='^v'/>
<arg declared_type64='Handle' name='hand2' type64='^*'/>
<arg declared_type64='long' name='size' type64='q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PtrToHand'>
<arg const='true' declared_type64='void*' name='srcPtr' type64='^v'/>
<arg declared_type64='Handle*' name='dstHndl' type64='^^*'/>
<arg declared_type64='long' name='size' type64='q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PtrToXHand'>
<arg const='true' declared_type64='void*' name='srcPtr' type64='^v'/>
<arg declared_type64='Handle' name='dstHndl' type64='^*'/>
<arg declared_type64='long' name='size' type64='q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='PurgeCollection'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='SInt32' name='whichAttributes' type64='i'/>
<arg declared_type64='SInt32' name='matchingAttributes' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='PurgeCollectionTag'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='QueryUnicodeMappings'>
<arg declared_type64='OptionBits' name='iFilter' type64='I'/>
<arg declared_type64='ConstUnicodeMappingPtr' name='iFindMapping' type64='^{UnicodeMapping=IIi}'/>
<arg declared_type64='ItemCount' name='iMaxCount' type64='Q'/>
<arg declared_type64='ItemCount*' name='oActualCount' type64='^Q'/>
<arg declared_type64='UnicodeMapping*' name='oReturnedMappings' type64='^{UnicodeMapping=IIi}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ReadLocation'>
<arg declared_type64='MachineLocation*' name='loc' type64='^{MachineLocation=ii(?=q{?=[3c]c})}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ReadPartialResource'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<arg declared_type64='long' name='offset' type64='q'/>
<arg declared_type64='void*' name='buffer' type64='^v'/>
<arg declared_type64='long' name='count' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ReallocateHandle'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<arg declared_type64='Size' name='byteCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='RecoverHandle'>
<arg declared_type64='Ptr' name='p' type64='*'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='RegisterComponent'>
<arg declared_type64='ComponentDescription*' name='cd' type64='^{ComponentDescription=IIIII}'/>
<arg declared_type64='ComponentRoutineUPP' function_pointer='true' name='componentEntryPoint' type64='^?'>
<arg declared_type64='ComponentParameters*' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type64='Handle' type64='^*'/>
<retval declared_type64='ComponentResult' type64='i'/>
</arg>
<arg declared_type64='SInt16' name='global' type64='s'/>
<arg declared_type64='Handle' name='componentName' type64='^*'/>
<arg declared_type64='Handle' name='componentInfo' type64='^*'/>
<arg declared_type64='Handle' name='componentIcon' type64='^*'/>
<retval declared_type64='Component' type64='^{ComponentRecord=[1q]}'/>
</function>
<function name='RegisterComponentFileRef'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='SInt16' name='global' type64='s'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='RegisterComponentFileRefEntries'>
<arg const='true' declared_type64='FSRef*' name='ref' type64='^{FSRef=[80C]}'/>
<arg declared_type64='SInt16' name='global' type64='s'/>
<arg const='true' declared_type64='ComponentDescription*' name='toRegister' type64='^{ComponentDescription=IIIII}'/>
<arg declared_type64='UInt32' name='registerCount' type64='I'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='RegisterComponentResource'>
<arg declared_type64='ComponentResourceHandle' name='cr' type64='^^{ComponentResource}'/>
<arg declared_type64='SInt16' name='global' type64='s'/>
<retval declared_type64='Component' type64='^{ComponentRecord=[1q]}'/>
</function>
<function name='RegisterComponentResourceFile'>
<arg declared_type64='SInt16' name='resRefNum' type64='s'/>
<arg declared_type64='SInt16' name='global' type64='s'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='ReleaseCollection'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ReleaseFolder'>
<arg declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<arg declared_type64='OSType' name='folderType' type64='I'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='ReleaseResource'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='RemoveCollectionItem'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<arg declared_type64='SInt32' name='id' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='RemoveFolderDescriptor'>
<arg declared_type64='FolderType' name='foldType' type64='I'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='RemoveIndexedCollectionItem'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='SInt32' name='itemIndex' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='RemoveResource'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='RemoveTimeTask'>
<arg declared_type64='QElemPtr' name='tmTaskPtr' type64='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='ReplaceGestaltValue'>
<arg declared_type64='OSType' name='selector' type64='I'/>
<arg declared_type64='SInt32' name='replacementValue' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='ReplaceIndexedCollectionItem'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='SInt32' name='itemIndex' type64='i'/>
<arg declared_type64='SInt32' name='itemSize' type64='i'/>
<arg const='true' declared_type64='void*' name='itemData' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='ReplaceIndexedCollectionItemHdl'>
<arg declared_type64='Collection' name='aCollection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='SInt32' name='itemIndex' type64='i'/>
<arg declared_type64='Handle' name='itemData' type64='^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='ResError'>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='ResetTextToUnicodeInfo'>
<arg declared_type64='TextToUnicodeInfo' name='ioTextToUnicodeInfo' type64='^{OpaqueTextToUnicodeInfo=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ResetUnicodeToTextInfo'>
<arg declared_type64='UnicodeToTextInfo' name='ioUnicodeToTextInfo' type64='^{OpaqueUnicodeToTextInfo=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ResetUnicodeToTextRunInfo'>
<arg declared_type64='UnicodeToTextRunInfo' name='ioUnicodeToTextRunInfo' type64='^{OpaqueUnicodeToTextRunInfo=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ResolveComponentAlias'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type64='Component' type64='^{ComponentRecord=[1q]}'/>
</function>
<function name='ResolveDefaultTextEncoding'>
<arg declared_type64='TextEncoding' name='encoding' type64='I'/>
<retval declared_type64='TextEncoding' type64='I'/>
</function>
<function name='RetainCollection'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='RevertTextEncodingToScriptInfo'>
<arg declared_type64='TextEncoding' name='iEncoding' type64='I'/>
<arg declared_type64='ScriptCode*' name='oTextScriptID' type64='^s'/>
<arg declared_type64='LangCode*' name='oTextLanguageID' type64='^s'/>
<arg declared_type64='unsigned char*' name='oTextFontname' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='RmvTime'>
<arg declared_type64='QElemPtr' name='tmTaskPtr' type64='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='S32Set'>
<arg declared_type64='SInt64' name='value' type64='q'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='S64Add'>
<arg declared_type64='SInt64' name='left' type64='q'/>
<arg declared_type64='SInt64' name='right' type64='q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64And'>
<arg declared_type64='SInt64' name='left' type64='q'/>
<arg declared_type64='SInt64' name='right' type64='q'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='S64BitwiseAnd'>
<arg declared_type64='SInt64' name='left' type64='q'/>
<arg declared_type64='SInt64' name='right' type64='q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64BitwiseEor'>
<arg declared_type64='SInt64' name='left' type64='q'/>
<arg declared_type64='SInt64' name='right' type64='q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64BitwiseNot'>
<arg declared_type64='SInt64' name='value' type64='q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64BitwiseOr'>
<arg declared_type64='SInt64' name='left' type64='q'/>
<arg declared_type64='SInt64' name='right' type64='q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64Compare'>
<arg declared_type64='SInt64' name='left' type64='q'/>
<arg declared_type64='SInt64' name='right' type64='q'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='S64Div'>
<arg declared_type64='SInt64' name='dividend' type64='q'/>
<arg declared_type64='SInt64' name='divisor' type64='q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64Divide'>
<arg declared_type64='SInt64' name='dividend' type64='q'/>
<arg declared_type64='SInt64' name='divisor' type64='q'/>
<arg declared_type64='SInt64*' name='remainder' type64='^q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64Eor'>
<arg declared_type64='SInt64' name='left' type64='q'/>
<arg declared_type64='SInt64' name='right' type64='q'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='S64Max'>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64Min'>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64Mod'>
<arg declared_type64='SInt64' name='dividend' type64='q'/>
<arg declared_type64='SInt64' name='divisor' type64='q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64Multiply'>
<arg declared_type64='SInt64' name='left' type64='q'/>
<arg declared_type64='SInt64' name='right' type64='q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64Negate'>
<arg declared_type64='SInt64' name='value' type64='q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64Not'>
<arg declared_type64='SInt64' name='value' type64='q'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='S64Or'>
<arg declared_type64='SInt64' name='left' type64='q'/>
<arg declared_type64='SInt64' name='right' type64='q'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='S64Set'>
<arg declared_type64='SInt32' name='value' type64='i'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64SetU'>
<arg declared_type64='UInt32' name='value' type64='I'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64ShiftLeft'>
<arg declared_type64='SInt64' name='value' type64='q'/>
<arg declared_type64='UInt32' name='shift' type64='I'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64ShiftRight'>
<arg declared_type64='SInt64' name='value' type64='q'/>
<arg declared_type64='UInt32' name='shift' type64='I'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='S64Subtract'>
<arg declared_type64='SInt64' name='left' type64='q'/>
<arg declared_type64='SInt64' name='right' type64='q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='SInt64ToLongDouble'>
<arg declared_type64='SInt64' name='value' type64='q'/>
<retval declared_type64='long double' type64='D'/>
</function>
<function name='SInt64ToUInt64'>
<arg declared_type64='SInt64' name='value' type64='q'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function inline='true' name='SInt64ToWide'>
<arg declared_type64='SInt64' name='s' type64='q'/>
<retval declared_type64='wide' type64='{wide=Ii}'/>
</function>
<function name='SetAliasUserType'>
<arg declared_type64='AliasHandle' name='alias' type64='^^{AliasRecord}'/>
<arg declared_type64='OSType' name='userType' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetAliasUserTypeWithPtr'>
<arg declared_type64='AliasPtr' name='alias' type64='^{AliasRecord=[6C]}'/>
<arg declared_type64='OSType' name='userType' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetCollectionDefaultAttributes'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='SInt32' name='whichAttributes' type64='i'/>
<arg declared_type64='SInt32' name='newAttributes' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetCollectionExceptionProc'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionExceptionUPP' function_pointer='true' name='exceptionProc' type64='^?'>
<arg declared_type64='Collection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='OSErr' type64='s'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetCollectionItemInfo'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionTag' name='tag' type64='I'/>
<arg declared_type64='SInt32' name='id' type64='i'/>
<arg declared_type64='SInt32' name='whichAttributes' type64='i'/>
<arg declared_type64='SInt32' name='newAttributes' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetComponentInstanceError'>
<arg declared_type64='ComponentInstance' name='aComponentInstance' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type64='OSErr' name='theError' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetComponentInstanceStorage'>
<arg declared_type64='ComponentInstance' name='aComponentInstance' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type64='Handle' name='theStorage' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetComponentRefcon'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='long' name='theRefcon' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetDebugOptionValue'>
<arg declared_type64='OSType' name='componentSignature' type64='I'/>
<arg declared_type64='SInt32' name='optionSelectorNum' type64='i'/>
<arg declared_type64='Boolean' name='newOptionSetting' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SetDebuggerNotificationProcs'>
<arg declared_type64='DebuggerNewThreadTPP' function_pointer='true' name='notifyNewThread' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='DebuggerDisposeThreadTPP' function_pointer='true' name='notifyDisposeThread' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='DebuggerThreadSchedulerTPP' function_pointer='true' name='notifyThreadScheduler' type64='^?'>
<arg declared_type64='SchedulerInfoRecPtr' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type64='ThreadID' type64='Q'/>
</arg>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetDefaultComponent'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type64='SInt16' name='flags' type64='s'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetFallbackUnicodeToText'>
<arg declared_type64='UnicodeToTextInfo' name='iUnicodeToTextInfo' type64='^{OpaqueUnicodeToTextInfo=}'/>
<arg declared_type64='UnicodeToTextFallbackUPP' function_pointer='true' name='iFallback' type64='^?'>
<arg declared_type64='UniChar*' type64='^S'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='TextPtr' type64='*'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='LogicalAddress' type64='^v'/>
<arg declared_type64='ConstUnicodeMappingPtr' type64='^{UnicodeMapping=IIi}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='OptionBits' name='iControlFlags' type64='I'/>
<arg declared_type64='LogicalAddress' name='iInfoPtr' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SetFallbackUnicodeToTextRun'>
<arg declared_type64='UnicodeToTextRunInfo' name='iUnicodeToTextRunInfo' type64='^{OpaqueUnicodeToTextRunInfo=}'/>
<arg declared_type64='UnicodeToTextFallbackUPP' function_pointer='true' name='iFallback' type64='^?'>
<arg declared_type64='UniChar*' type64='^S'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='TextPtr' type64='*'/>
<arg declared_type64='ByteCount' type64='Q'/>
<arg declared_type64='ByteCount*' type64='^Q'/>
<arg declared_type64='LogicalAddress' type64='^v'/>
<arg declared_type64='ConstUnicodeMappingPtr' type64='^{UnicodeMapping=IIi}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='OptionBits' name='iControlFlags' type64='I'/>
<arg declared_type64='LogicalAddress' name='iInfoPtr' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SetGestaltValue'>
<arg declared_type64='OSType' name='selector' type64='I'/>
<arg declared_type64='SInt32' name='newValue' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetHandleSize'>
<arg declared_type64='Handle' name='h' type64='^*'/>
<arg declared_type64='Size' name='newSize' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetIndexedCollectionItemInfo'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='SInt32' name='itemIndex' type64='i'/>
<arg declared_type64='SInt32' name='whichAttributes' type64='i'/>
<arg declared_type64='SInt32' name='newAttributes' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetPtrSize'>
<arg declared_type64='Ptr' name='p' type64='*'/>
<arg declared_type64='Size' name='newSize' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetResAttrs'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<arg declared_type64='ResAttributes' name='attrs' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetResFileAttrs'>
<arg declared_type64='ResFileRefNum' name='refNum' type64='i'/>
<arg declared_type64='ResFileAttributes' name='attrs' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetResInfo'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<arg declared_type64='ResID' name='theID' type64='s'/>
<arg declared_type64='ConstStr255Param' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetResLoad'>
<arg declared_type64='Boolean' name='load' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetResPurge'>
<arg declared_type64='Boolean' name='install' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetResourceSize'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<arg declared_type64='long' name='newSize' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SetScriptManagerVariable'>
<arg declared_type64='short' name='selector' type64='s'/>
<arg declared_type64='long' name='param' type64='q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetThreadReadyGivenTaskRef'>
<arg declared_type64='ThreadTaskRef' name='threadTRef' type64='^v'/>
<arg declared_type64='ThreadID' name='threadToSet' type64='Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetThreadScheduler'>
<arg declared_type64='ThreadSchedulerTPP' function_pointer='true' name='threadScheduler' type64='^?'>
<arg declared_type64='SchedulerInfoRecPtr' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type64='ThreadID' type64='Q'/>
</arg>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetThreadState'>
<arg declared_type64='ThreadID' name='threadToSet' type64='Q'/>
<arg declared_type64='ThreadState' name='newState' type64='S'/>
<arg declared_type64='ThreadID' name='suggestedThread' type64='Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetThreadStateEndCritical'>
<arg declared_type64='ThreadID' name='threadToSet' type64='Q'/>
<arg declared_type64='ThreadState' name='newState' type64='S'/>
<arg declared_type64='ThreadID' name='suggestedThread' type64='Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetThreadSwitcher'>
<arg declared_type64='ThreadID' name='thread' type64='Q'/>
<arg declared_type64='ThreadSwitchTPP' function_pointer='true' name='threadSwitcher' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void*' name='switchProcParam' type64='^v'/>
<arg declared_type64='Boolean' name='inOrOut' type64='B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetThreadTerminator'>
<arg declared_type64='ThreadID' name='thread' type64='Q'/>
<arg declared_type64='ThreadTerminationTPP' function_pointer='true' name='threadTerminator' type64='^?'>
<arg declared_type64='ThreadID' type64='Q'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void*' name='terminationProcParam' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SubAbsoluteFromAbsolute'>
<arg declared_type64='AbsoluteTime' name='leftAbsoluteTime' type64='{UnsignedWide=II}'/>
<arg declared_type64='AbsoluteTime' name='rightAbsoluteTime' type64='{UnsignedWide=II}'/>
<retval declared_type64='AbsoluteTime' type64='{UnsignedWide=II}'/>
</function>
<function name='SubDurationFromAbsolute'>
<arg declared_type64='Duration' name='duration' type64='i'/>
<arg declared_type64='AbsoluteTime' name='absoluteTime' type64='{UnsignedWide=II}'/>
<retval declared_type64='AbsoluteTime' type64='{UnsignedWide=II}'/>
</function>
<function name='SubNanosecondsFromAbsolute'>
<arg declared_type64='Nanoseconds' name='nanoseconds' type64='{UnsignedWide=II}'/>
<arg declared_type64='AbsoluteTime' name='absoluteTime' type64='{UnsignedWide=II}'/>
<retval declared_type64='AbsoluteTime' type64='{UnsignedWide=II}'/>
</function>
<function name='SysError'>
<arg declared_type64='short' name='errorCode' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TECClearConverterContextInfo'>
<arg declared_type64='TECObjectRef' name='encodingConverter' type64='^{OpaqueTECObjectRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECClearSnifferContextInfo'>
<arg declared_type64='TECSnifferObjectRef' name='encodingSniffer' type64='^{OpaqueTECSnifferObjectRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECConvertText'>
<arg declared_type64='TECObjectRef' name='encodingConverter' type64='^{OpaqueTECObjectRef=}'/>
<arg declared_type64='ConstTextPtr' name='inputBuffer' type64='*'/>
<arg declared_type64='ByteCount' name='inputBufferLength' type64='Q'/>
<arg declared_type64='ByteCount*' name='actualInputLength' type64='^Q'/>
<arg declared_type64='TextPtr' name='outputBuffer' type64='*'/>
<arg declared_type64='ByteCount' name='outputBufferLength' type64='Q'/>
<arg declared_type64='ByteCount*' name='actualOutputLength' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECConvertTextToMultipleEncodings'>
<arg declared_type64='TECObjectRef' name='encodingConverter' type64='^{OpaqueTECObjectRef=}'/>
<arg declared_type64='ConstTextPtr' name='inputBuffer' type64='*'/>
<arg declared_type64='ByteCount' name='inputBufferLength' type64='Q'/>
<arg declared_type64='ByteCount*' name='actualInputLength' type64='^Q'/>
<arg declared_type64='TextPtr' name='outputBuffer' type64='*'/>
<arg declared_type64='ByteCount' name='outputBufferLength' type64='Q'/>
<arg declared_type64='ByteCount*' name='actualOutputLength' type64='^Q'/>
<arg declared_type64='TextEncodingRun*' name='outEncodingsBuffer' type64='^{TextEncodingRun=QI}'/>
<arg declared_type64='ItemCount' name='maxOutEncodingRuns' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualOutEncodingRuns' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCopyTextEncodingInternetNameAndMIB'>
<arg declared_type64='TextEncoding' name='textEncoding' type64='I'/>
<arg declared_type64='TECInternetNameUsageMask' name='usage' type64='I'/>
<arg declared_type64='CFStringRef*' name='encodingNamePtr' type64='^^{__CFString}'/>
<arg declared_type64='SInt32*' name='mibEnumPtr' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCountAvailableSniffers'>
<arg declared_type64='ItemCount*' name='numberOfEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCountAvailableTextEncodings'>
<arg declared_type64='ItemCount*' name='numberEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCountDestinationTextEncodings'>
<arg declared_type64='TextEncoding' name='inputEncoding' type64='I'/>
<arg declared_type64='ItemCount*' name='numberOfEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCountDirectTextEncodingConversions'>
<arg declared_type64='ItemCount*' name='numberOfEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCountMailTextEncodings'>
<arg declared_type64='RegionCode' name='locale' type64='s'/>
<arg declared_type64='ItemCount*' name='numberEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCountSubTextEncodings'>
<arg declared_type64='TextEncoding' name='inputEncoding' type64='I'/>
<arg declared_type64='ItemCount*' name='numberOfEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCountWebTextEncodings'>
<arg declared_type64='RegionCode' name='locale' type64='s'/>
<arg declared_type64='ItemCount*' name='numberEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCreateConverter'>
<arg declared_type64='TECObjectRef*' name='newEncodingConverter' type64='^^{OpaqueTECObjectRef}'/>
<arg declared_type64='TextEncoding' name='inputEncoding' type64='I'/>
<arg declared_type64='TextEncoding' name='outputEncoding' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCreateConverterFromPath'>
<arg declared_type64='TECObjectRef*' name='newEncodingConverter' type64='^^{OpaqueTECObjectRef}'/>
<arg const='true' declared_type64='TextEncoding*' name='inPath' type64='^I'/>
<arg declared_type64='ItemCount' name='inEncodings' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCreateOneToManyConverter'>
<arg declared_type64='TECObjectRef*' name='newEncodingConverter' type64='^^{OpaqueTECObjectRef}'/>
<arg declared_type64='TextEncoding' name='inputEncoding' type64='I'/>
<arg declared_type64='ItemCount' name='numOutputEncodings' type64='Q'/>
<arg const='true' declared_type64='TextEncoding*' name='outputEncodings' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECCreateSniffer'>
<arg declared_type64='TECSnifferObjectRef*' name='encodingSniffer' type64='^^{OpaqueTECSnifferObjectRef}'/>
<arg const='true' declared_type64='TextEncoding*' name='testEncodings' type64='^I'/>
<arg declared_type64='ItemCount' name='numTextEncodings' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECDisposeConverter'>
<arg declared_type64='TECObjectRef' name='newEncodingConverter' type64='^{OpaqueTECObjectRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECDisposeSniffer'>
<arg declared_type64='TECSnifferObjectRef' name='encodingSniffer' type64='^{OpaqueTECSnifferObjectRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECFlushMultipleEncodings'>
<arg declared_type64='TECObjectRef' name='encodingConverter' type64='^{OpaqueTECObjectRef=}'/>
<arg declared_type64='TextPtr' name='outputBuffer' type64='*'/>
<arg declared_type64='ByteCount' name='outputBufferLength' type64='Q'/>
<arg declared_type64='ByteCount*' name='actualOutputLength' type64='^Q'/>
<arg declared_type64='TextEncodingRun*' name='outEncodingsBuffer' type64='^{TextEncodingRun=QI}'/>
<arg declared_type64='ItemCount' name='maxOutEncodingRuns' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualOutEncodingRuns' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECFlushText'>
<arg declared_type64='TECObjectRef' name='encodingConverter' type64='^{OpaqueTECObjectRef=}'/>
<arg declared_type64='TextPtr' name='outputBuffer' type64='*'/>
<arg declared_type64='ByteCount' name='outputBufferLength' type64='Q'/>
<arg declared_type64='ByteCount*' name='actualOutputLength' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetAvailableSniffers'>
<arg declared_type64='TextEncoding*' name='availableSniffers' type64='^I'/>
<arg declared_type64='ItemCount' name='maxAvailableSniffers' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualAvailableSniffers' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetAvailableTextEncodings'>
<arg declared_type64='TextEncoding*' name='availableEncodings' type64='^I'/>
<arg declared_type64='ItemCount' name='maxAvailableEncodings' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualAvailableEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetDestinationTextEncodings'>
<arg declared_type64='TextEncoding' name='inputEncoding' type64='I'/>
<arg declared_type64='TextEncoding*' name='destinationEncodings' type64='^I'/>
<arg declared_type64='ItemCount' name='maxDestinationEncodings' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualDestinationEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetDirectTextEncodingConversions'>
<arg declared_type64='TECConversionInfo*' name='availableConversions' type64='^{TECConversionInfo=IISS}'/>
<arg declared_type64='ItemCount' name='maxAvailableConversions' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualAvailableConversions' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetEncodingList'>
<arg declared_type64='TECObjectRef' name='encodingConverter' type64='^{OpaqueTECObjectRef=}'/>
<arg declared_type64='ItemCount*' name='numEncodings' type64='^Q'/>
<arg declared_type64='Handle*' name='encodingList' type64='^^*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetInfo'>
<arg declared_type64='TECInfoHandle*' name='tecInfo' type64='^^^{TECInfo}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetMailTextEncodings'>
<arg declared_type64='RegionCode' name='locale' type64='s'/>
<arg declared_type64='TextEncoding*' name='availableEncodings' type64='^I'/>
<arg declared_type64='ItemCount' name='maxAvailableEncodings' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualAvailableEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetSubTextEncodings'>
<arg declared_type64='TextEncoding' name='inputEncoding' type64='I'/>
<arg declared_type64='TextEncoding*' name='subEncodings' type64='^I'/>
<arg declared_type64='ItemCount' name='maxSubEncodings' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualSubEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetTextEncodingFromInternetName'>
<arg declared_type64='TextEncoding*' name='textEncoding' type64='^I'/>
<arg declared_type64='ConstStr255Param' name='encodingName' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetTextEncodingFromInternetNameOrMIB'>
<arg declared_type64='TextEncoding*' name='textEncodingPtr' type64='^I'/>
<arg declared_type64='TECInternetNameUsageMask' name='usage' type64='I'/>
<arg declared_type64='CFStringRef' name='encodingName' type64='^{__CFString=}'/>
<arg declared_type64='SInt32' name='mibEnum' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetTextEncodingInternetName'>
<arg declared_type64='TextEncoding' name='textEncoding' type64='I'/>
<arg declared_type64='unsigned char*' name='encodingName' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECGetWebTextEncodings'>
<arg declared_type64='RegionCode' name='locale' type64='s'/>
<arg declared_type64='TextEncoding*' name='availableEncodings' type64='^I'/>
<arg declared_type64='ItemCount' name='maxAvailableEncodings' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualAvailableEncodings' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECSetBasicOptions'>
<arg declared_type64='TECObjectRef' name='encodingConverter' type64='^{OpaqueTECObjectRef=}'/>
<arg declared_type64='OptionBits' name='controlFlags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TECSniffTextEncoding'>
<arg declared_type64='TECSnifferObjectRef' name='encodingSniffer' type64='^{OpaqueTECSnifferObjectRef=}'/>
<arg declared_type64='ConstTextPtr' name='inputBuffer' type64='*'/>
<arg declared_type64='ByteCount' name='inputBufferLength' type64='Q'/>
<arg declared_type64='TextEncoding*' name='testEncodings' type64='^I'/>
<arg declared_type64='ItemCount' name='numTextEncodings' type64='Q'/>
<arg declared_type64='ItemCount*' name='numErrsArray' type64='^Q'/>
<arg declared_type64='ItemCount' name='maxErrs' type64='Q'/>
<arg declared_type64='ItemCount*' name='numFeaturesArray' type64='^Q'/>
<arg declared_type64='ItemCount' name='maxFeatures' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TaskLevel'>
<retval declared_type64='UInt32' type64='I'/>
</function>
<function name='TempNewHandle'>
<arg declared_type64='Size' name='logicalSize' type64='q'/>
<arg declared_type64='OSErr*' name='resultCode' type64='^s'/>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='TestAndClear'>
<arg declared_type64='UInt32' name='bit' type64='I'/>
<arg declared_type64='UInt8*' name='address' type64='*'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='TestAndSet'>
<arg declared_type64='UInt32' name='bit' type64='I'/>
<arg declared_type64='UInt8*' name='address' type64='*'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='ThreadBeginCritical'>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='ThreadCurrentStackSpace'>
<arg declared_type64='ThreadID' name='thread' type64='Q'/>
<arg declared_type64='ByteCount*' name='freeStack' type64='^Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='ThreadEndCritical'>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='TickCount'>
<retval declared_type64='UInt32' type64='I'/>
</function>
<function name='TruncateForTextToUnicode'>
<arg declared_type64='ConstTextToUnicodeInfo' name='iTextToUnicodeInfo' type64='^{OpaqueTextToUnicodeInfo=}'/>
<arg declared_type64='ByteCount' name='iSourceLen' type64='Q'/>
<arg declared_type64='ConstLogicalAddress' name='iSourceStr' type64='^v'/>
<arg declared_type64='ByteCount' name='iMaxLen' type64='Q'/>
<arg declared_type64='ByteCount*' name='oTruncatedLen' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TruncateForUnicodeToText'>
<arg declared_type64='ConstUnicodeToTextInfo' name='iUnicodeToTextInfo' type64='^{OpaqueUnicodeToTextInfo=}'/>
<arg declared_type64='ByteCount' name='iSourceLen' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='iSourceStr' type64='^S'/>
<arg declared_type64='OptionBits' name='iControlFlags' type64='I'/>
<arg declared_type64='ByteCount' name='iMaxLen' type64='Q'/>
<arg declared_type64='ByteCount*' name='oTruncatedLen' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='U32SetU'>
<arg declared_type64='UInt64' name='value' type64='Q'/>
<retval declared_type64='UInt32' type64='I'/>
</function>
<function name='U64Add'>
<arg declared_type64='UInt64' name='left' type64='Q'/>
<arg declared_type64='UInt64' name='right' type64='Q'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64And'>
<arg declared_type64='UInt64' name='left' type64='Q'/>
<arg declared_type64='UInt64' name='right' type64='Q'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='U64BitwiseAnd'>
<arg declared_type64='UInt64' name='left' type64='Q'/>
<arg declared_type64='UInt64' name='right' type64='Q'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64BitwiseEor'>
<arg declared_type64='UInt64' name='left' type64='Q'/>
<arg declared_type64='UInt64' name='right' type64='Q'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64BitwiseNot'>
<arg declared_type64='UInt64' name='value' type64='Q'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64BitwiseOr'>
<arg declared_type64='UInt64' name='left' type64='Q'/>
<arg declared_type64='UInt64' name='right' type64='Q'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64Compare'>
<arg declared_type64='UInt64' name='left' type64='Q'/>
<arg declared_type64='UInt64' name='right' type64='Q'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='U64Div'>
<arg declared_type64='UInt64' name='dividend' type64='Q'/>
<arg declared_type64='UInt64' name='divisor' type64='Q'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64Divide'>
<arg declared_type64='UInt64' name='dividend' type64='Q'/>
<arg declared_type64='UInt64' name='divisor' type64='Q'/>
<arg declared_type64='UInt64*' name='remainder' type64='^Q'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64Eor'>
<arg declared_type64='UInt64' name='left' type64='Q'/>
<arg declared_type64='UInt64' name='right' type64='Q'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='U64Max'>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64Mod'>
<arg declared_type64='UInt64' name='dividend' type64='Q'/>
<arg declared_type64='UInt64' name='divisor' type64='Q'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64Multiply'>
<arg declared_type64='UInt64' name='left' type64='Q'/>
<arg declared_type64='UInt64' name='right' type64='Q'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64Not'>
<arg declared_type64='UInt64' name='value' type64='Q'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='U64Or'>
<arg declared_type64='UInt64' name='left' type64='Q'/>
<arg declared_type64='UInt64' name='right' type64='Q'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='U64Set'>
<arg declared_type64='SInt32' name='value' type64='i'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64SetU'>
<arg declared_type64='UInt32' name='value' type64='I'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64ShiftLeft'>
<arg declared_type64='UInt64' name='value' type64='Q'/>
<arg declared_type64='UInt32' name='shift' type64='I'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64ShiftRight'>
<arg declared_type64='UInt64' name='value' type64='Q'/>
<arg declared_type64='UInt32' name='shift' type64='I'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='U64Subtract'>
<arg declared_type64='UInt64' name='left' type64='Q'/>
<arg declared_type64='UInt64' name='right' type64='Q'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='UCCompareCollationKeys'>
<arg const='true' declared_type64='UCCollationValue*' name='key1Ptr' type64='^I'/>
<arg declared_type64='ItemCount' name='key1Length' type64='Q'/>
<arg const='true' declared_type64='UCCollationValue*' name='key2Ptr' type64='^I'/>
<arg declared_type64='ItemCount' name='key2Length' type64='Q'/>
<arg declared_type64='Boolean*' name='equivalent' type64='^B'/>
<arg declared_type64='SInt32*' name='order' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCCompareText'>
<arg declared_type64='CollatorRef' name='collatorRef' type64='^{OpaqueCollatorRef=}'/>
<arg const='true' declared_type64='UniChar*' name='text1Ptr' type64='^S'/>
<arg declared_type64='UniCharCount' name='text1Length' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='text2Ptr' type64='^S'/>
<arg declared_type64='UniCharCount' name='text2Length' type64='Q'/>
<arg declared_type64='Boolean*' name='equivalent' type64='^B'/>
<arg declared_type64='SInt32*' name='order' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCCompareTextDefault'>
<arg declared_type64='UCCollateOptions' name='options' type64='I'/>
<arg const='true' declared_type64='UniChar*' name='text1Ptr' type64='^S'/>
<arg declared_type64='UniCharCount' name='text1Length' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='text2Ptr' type64='^S'/>
<arg declared_type64='UniCharCount' name='text2Length' type64='Q'/>
<arg declared_type64='Boolean*' name='equivalent' type64='^B'/>
<arg declared_type64='SInt32*' name='order' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCCompareTextNoLocale'>
<arg declared_type64='UCCollateOptions' name='options' type64='I'/>
<arg const='true' declared_type64='UniChar*' name='text1Ptr' type64='^S'/>
<arg declared_type64='UniCharCount' name='text1Length' type64='Q'/>
<arg const='true' declared_type64='UniChar*' name='text2Ptr' type64='^S'/>
<arg declared_type64='UniCharCount' name='text2Length' type64='Q'/>
<arg declared_type64='Boolean*' name='equivalent' type64='^B'/>
<arg declared_type64='SInt32*' name='order' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCConvertCFAbsoluteTimeToLongDateTime'>
<arg declared_type64='CFAbsoluteTime' name='iCFTime' type64='d'/>
<arg declared_type64='LongDateTime*' name='oLongDate' type64='^q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCConvertCFAbsoluteTimeToSeconds'>
<arg declared_type64='CFAbsoluteTime' name='iCFTime' type64='d'/>
<arg declared_type64='UInt32*' name='oSeconds' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCConvertCFAbsoluteTimeToUTCDateTime'>
<arg declared_type64='CFAbsoluteTime' name='iCFTime' type64='d'/>
<arg declared_type64='UTCDateTime*' name='oUTCDate' type64='^{UTCDateTime=SIS}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCConvertLongDateTimeToCFAbsoluteTime'>
<arg declared_type64='LongDateTime' name='iLongTime' type64='q'/>
<arg declared_type64='CFAbsoluteTime*' name='oCFTime' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCConvertSecondsToCFAbsoluteTime'>
<arg declared_type64='UInt32' name='iSeconds' type64='I'/>
<arg declared_type64='CFAbsoluteTime*' name='oCFTime' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCConvertUTCDateTimeToCFAbsoluteTime'>
<arg const='true' declared_type64='UTCDateTime*' name='iUTCDate' type64='^{UTCDateTime=SIS}'/>
<arg declared_type64='CFAbsoluteTime*' name='oCFTime' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCCreateCollator'>
<arg declared_type64='LocaleRef' name='locale' type64='^{OpaqueLocaleRef=}'/>
<arg declared_type64='LocaleOperationVariant' name='opVariant' type64='I'/>
<arg declared_type64='UCCollateOptions' name='options' type64='I'/>
<arg declared_type64='CollatorRef*' name='collatorRef' type64='^^{OpaqueCollatorRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCCreateTextBreakLocator'>
<arg declared_type64='LocaleRef' name='locale' type64='^{OpaqueLocaleRef=}'/>
<arg declared_type64='LocaleOperationVariant' name='opVariant' type64='I'/>
<arg declared_type64='UCTextBreakType' name='breakTypes' type64='I'/>
<arg declared_type64='TextBreakLocatorRef*' name='breakRef' type64='^^{OpaqueTextBreakLocatorRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCDisposeCollator'>
<arg declared_type64='CollatorRef*' name='collatorRef' type64='^^{OpaqueCollatorRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCDisposeTextBreakLocator'>
<arg declared_type64='TextBreakLocatorRef*' name='breakRef' type64='^^{OpaqueTextBreakLocatorRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCFindTextBreak'>
<arg declared_type64='TextBreakLocatorRef' name='breakRef' type64='^{OpaqueTextBreakLocatorRef=}'/>
<arg declared_type64='UCTextBreakType' name='breakType' type64='I'/>
<arg declared_type64='UCTextBreakOptions' name='options' type64='I'/>
<arg const='true' declared_type64='UniChar*' name='textPtr' type64='^S'/>
<arg declared_type64='UniCharCount' name='textLength' type64='Q'/>
<arg declared_type64='UniCharArrayOffset' name='startOffset' type64='Q'/>
<arg declared_type64='UniCharArrayOffset*' name='breakOffset' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCGetCharProperty'>
<arg const='true' declared_type64='UniChar*' name='charPtr' type64='^S'/>
<arg declared_type64='UniCharCount' name='textLength' type64='Q'/>
<arg declared_type64='UCCharPropertyType' name='propType' type64='i'/>
<arg declared_type64='UCCharPropertyValue*' name='propValue' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCGetCollationKey'>
<arg declared_type64='CollatorRef' name='collatorRef' type64='^{OpaqueCollatorRef=}'/>
<arg const='true' declared_type64='UniChar*' name='textPtr' type64='^S'/>
<arg declared_type64='UniCharCount' name='textLength' type64='Q'/>
<arg declared_type64='ItemCount' name='maxKeySize' type64='Q'/>
<arg declared_type64='ItemCount*' name='actualKeySize' type64='^Q'/>
<arg declared_type64='UCCollationValue*' name='collationKey' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function inline='true' name='UCGetUnicodeScalarValueForSurrogatePair'>
<arg declared_type64='UniChar' name='surrogateHigh' type64='S'/>
<arg declared_type64='UniChar' name='surrogateLow' type64='S'/>
<retval declared_type64='UnicodeScalarValue' type64='I'/>
</function>
<function inline='true' name='UCIsSurrogateHighCharacter'>
<arg declared_type64='UniChar' name='character' type64='S'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function inline='true' name='UCIsSurrogateLowCharacter'>
<arg declared_type64='UniChar' name='character' type64='S'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='UCKeyTranslate'>
<arg const='true' declared_type64='UCKeyboardLayout*' name='keyLayoutPtr' type64='^{UCKeyboardLayout=SSII[1{UCKeyboardTypeHeader=IIIIIII}]}'/>
<arg declared_type64='UInt16' name='virtualKeyCode' type64='S'/>
<arg declared_type64='UInt16' name='keyAction' type64='S'/>
<arg declared_type64='UInt32' name='modifierKeyState' type64='I'/>
<arg declared_type64='UInt32' name='keyboardType' type64='I'/>
<arg declared_type64='OptionBits' name='keyTranslateOptions' type64='I'/>
<arg declared_type64='UInt32*' name='deadKeyState' type64='^I'/>
<arg declared_type64='UniCharCount' name='maxStringLength' type64='Q'/>
<arg declared_type64='UniCharCount*' name='actualStringLength' type64='^Q'/>
<arg declared_type64='UniChar*' name='unicodeString' type64='^S'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCTypeSelectAddKeyToSelector'>
<arg declared_type64='UCTypeSelectRef' name='inRef' type64='^{OpaqueUCTypeSelectRef=}'/>
<arg declared_type64='CFStringRef' name='inText' type64='^{__CFString=}'/>
<arg declared_type64='double' name='inEventTime' type64='d'/>
<arg declared_type64='Boolean*' name='updateFlag' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCTypeSelectCompare'>
<arg declared_type64='UCTypeSelectRef' name='ref' type64='^{OpaqueUCTypeSelectRef=}'/>
<arg declared_type64='CFStringRef' name='inText' type64='^{__CFString=}'/>
<arg declared_type64='UCTypeSelectCompareResult*' name='result' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCTypeSelectCreateSelector'>
<arg declared_type64='LocaleRef' name='locale' type64='^{OpaqueLocaleRef=}'/>
<arg declared_type64='LocaleOperationVariant' name='opVariant' type64='I'/>
<arg declared_type64='UCCollateOptions' name='options' type64='I'/>
<arg declared_type64='UCTypeSelectRef*' name='newSelector' type64='^^{OpaqueUCTypeSelectRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCTypeSelectFindItem'>
<arg declared_type64='UCTypeSelectRef' name='ref' type64='^{OpaqueUCTypeSelectRef=}'/>
<arg declared_type64='UInt32' name='listSize' type64='I'/>
<arg declared_type64='void*' name='listDataPtr' type64='^v'/>
<arg declared_type64='void*' name='refcon' type64='^v'/>
<arg declared_type64='IndexToUCStringUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='CFStringRef*' type64='^^{__CFString}'/>
<arg declared_type64='UCTypeSelectOptions*' type64='^S'/>
<retval declared_type64='Boolean' type64='B'/>
</arg>
<arg declared_type64='UInt32*' name='closestItem' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCTypeSelectFlushSelectorData'>
<arg declared_type64='UCTypeSelectRef' name='ref' type64='^{OpaqueUCTypeSelectRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCTypeSelectReleaseSelector'>
<arg declared_type64='UCTypeSelectRef*' name='ref' type64='^^{OpaqueUCTypeSelectRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCTypeSelectWalkList'>
<arg declared_type64='UCTypeSelectRef' name='ref' type64='^{OpaqueUCTypeSelectRef=}'/>
<arg declared_type64='CFStringRef' name='currSelect' type64='^{__CFString=}'/>
<arg declared_type64='UCTSWalkDirection' name='direction' type64='S'/>
<arg declared_type64='UInt32' name='listSize' type64='I'/>
<arg declared_type64='void*' name='listDataPtr' type64='^v'/>
<arg declared_type64='void*' name='refcon' type64='^v'/>
<arg declared_type64='IndexToUCStringUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='CFStringRef*' type64='^^{__CFString}'/>
<arg declared_type64='UCTypeSelectOptions*' type64='^S'/>
<retval declared_type64='Boolean' type64='B'/>
</arg>
<arg declared_type64='UInt32*' name='closestItem' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UCTypeSelectWouldResetBuffer'>
<arg declared_type64='UCTypeSelectRef' name='inRef' type64='^{OpaqueUCTypeSelectRef=}'/>
<arg declared_type64='CFStringRef' name='inText' type64='^{__CFString=}'/>
<arg declared_type64='double' name='inEventTime' type64='d'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='UInt64ToLongDouble'>
<arg declared_type64='UInt64' name='value' type64='Q'/>
<retval declared_type64='long double' type64='D'/>
</function>
<function name='UInt64ToSInt64'>
<arg declared_type64='UInt64' name='value' type64='Q'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function inline='true' name='UInt64ToUnsignedWide'>
<arg declared_type64='UInt64' name='u' type64='Q'/>
<retval declared_type64='UnsignedWide' type64='{UnsignedWide=II}'/>
</function>
<function name='UncaptureComponent'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='UnflattenCollection'>
<arg declared_type64='Collection' name='c' type64='^{OpaqueCollection=}'/>
<arg declared_type64='CollectionFlattenUPP' function_pointer='true' name='flattenProc' type64='^?'>
<arg declared_type64='SInt32' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<arg declared_type64='void*' name='refCon' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='UnflattenCollectionFromHdl'>
<arg declared_type64='Collection' name='aCollection' type64='^{OpaqueCollection=}'/>
<arg declared_type64='Handle' name='flattened' type64='^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='Unique1ID'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<retval declared_type64='ResID' type64='s'/>
</function>
<function name='UniqueID'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<retval declared_type64='ResID' type64='s'/>
</function>
<function name='UnregisterComponent'>
<arg declared_type64='Component' name='aComponent' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='UnsignedFixedMulDiv'>
<arg declared_type64='UnsignedFixed' name='value' type64='I'/>
<arg declared_type64='UnsignedFixed' name='multiplier' type64='I'/>
<arg declared_type64='UnsignedFixed' name='divisor' type64='I'/>
<retval declared_type64='UnsignedFixed' type64='I'/>
</function>
<function inline='true' name='UnsignedWideToUInt64'>
<arg declared_type64='UnsignedWide' name='uw' type64='{UnsignedWide=II}'/>
<retval declared_type64='UInt64' type64='Q'/>
</function>
<function name='UpTime'>
<retval declared_type64='AbsoluteTime' type64='{UnsignedWide=II}'/>
</function>
<function name='UpdateResFile'>
<arg declared_type64='ResFileRefNum' name='refNum' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UpgradeScriptInfoToTextEncoding'>
<arg declared_type64='ScriptCode' name='iTextScriptID' type64='s'/>
<arg declared_type64='LangCode' name='iTextLanguageID' type64='s'/>
<arg declared_type64='RegionCode' name='iRegionID' type64='s'/>
<arg declared_type64='ConstStr255Param' name='iTextFontname' type64='*'/>
<arg declared_type64='TextEncoding*' name='oEncoding' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UseResFile'>
<arg declared_type64='ResFileRefNum' name='refNum' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='WideAdd'>
<arg declared_type64='wide*' name='target' type64='^{wide=Ii}'/>
<arg const='true' declared_type64='wide*' name='source' type64='^{wide=Ii}'/>
<retval declared_type64='wide*' type64='^{wide=Ii}'/>
</function>
<function name='WideBitShift'>
<arg declared_type64='wide*' name='target' type64='^{wide=Ii}'/>
<arg declared_type64='SInt32' name='shift' type64='i'/>
<retval declared_type64='wide*' type64='^{wide=Ii}'/>
</function>
<function name='WideCompare'>
<arg const='true' declared_type64='wide*' name='target' type64='^{wide=Ii}'/>
<arg const='true' declared_type64='wide*' name='source' type64='^{wide=Ii}'/>
<retval declared_type64='short' type64='s'/>
</function>
<function name='WideDivide'>
<arg const='true' declared_type64='wide*' name='dividend' type64='^{wide=Ii}'/>
<arg declared_type64='SInt32' name='divisor' type64='i'/>
<arg declared_type64='SInt32*' name='remainder' type64='^i'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='WideMultiply'>
<arg declared_type64='SInt32' name='multiplicand' type64='i'/>
<arg declared_type64='SInt32' name='multiplier' type64='i'/>
<arg declared_type64='wide*' name='target' type64='^{wide=Ii}'/>
<retval declared_type64='wide*' type64='^{wide=Ii}'/>
</function>
<function name='WideNegate'>
<arg declared_type64='wide*' name='target' type64='^{wide=Ii}'/>
<retval declared_type64='wide*' type64='^{wide=Ii}'/>
</function>
<function name='WideShift'>
<arg declared_type64='wide*' name='target' type64='^{wide=Ii}'/>
<arg declared_type64='SInt32' name='shift' type64='i'/>
<retval declared_type64='wide*' type64='^{wide=Ii}'/>
</function>
<function name='WideSquareRoot'>
<arg const='true' declared_type64='wide*' name='source' type64='^{wide=Ii}'/>
<retval declared_type64='UInt32' type64='I'/>
</function>
<function name='WideSubtract'>
<arg declared_type64='wide*' name='target' type64='^{wide=Ii}'/>
<arg const='true' declared_type64='wide*' name='source' type64='^{wide=Ii}'/>
<retval declared_type64='wide*' type64='^{wide=Ii}'/>
</function>
<function inline='true' name='WideToSInt64'>
<arg declared_type64='wide' name='w' type64='{wide=Ii}'/>
<retval declared_type64='SInt64' type64='q'/>
</function>
<function name='WideWideDivide'>
<arg declared_type64='wide*' name='dividend' type64='^{wide=Ii}'/>
<arg declared_type64='SInt32' name='divisor' type64='i'/>
<arg declared_type64='SInt32*' name='remainder' type64='^i'/>
<retval declared_type64='wide*' type64='^{wide=Ii}'/>
</function>
<function name='WritePartialResource'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<arg declared_type64='long' name='offset' type64='q'/>
<arg const='true' declared_type64='void*' name='buffer' type64='^v'/>
<arg declared_type64='long' name='count' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='WriteResource'>
<arg declared_type64='Handle' name='theResource' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='X2Fix'>
<arg declared_type64='double' name='x' type64='d'/>
<retval declared_type64='Fixed' type64='i'/>
</function>
<function name='X2Frac'>
<arg declared_type64='double' name='x' type64='d'/>
<retval declared_type64='Fract' type64='i'/>
</function>
<function name='YieldToAnyThread'>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='YieldToThread'>
<arg declared_type64='ThreadID' name='suggestedThread' type64='Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='annuity'>
<arg declared_type64='double' name='rate' type64='d'/>
<arg declared_type64='double' name='periods' type64='d'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='compound'>
<arg declared_type64='double' name='rate' type64='d'/>
<arg declared_type64='double' name='periods' type64='d'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='dec2f'>
<arg const='true' declared_type64='decimal*' name='d' type64='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type64='float' type64='f'/>
</function>
<function name='dec2l'>
<arg const='true' declared_type64='decimal*' name='d' type64='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='dec2num'>
<arg const='true' declared_type64='decimal*' name='d' type64='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type64='double_t' type64='d'/>
</function>
<function name='dec2numl'>
<arg const='true' declared_type64='decimal*' name='d' type64='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type64='long double' type64='D'/>
</function>
<function name='dec2s'>
<arg const='true' declared_type64='decimal*' name='d' type64='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type64='short' type64='s'/>
</function>
<function name='dec2str'>
<arg const='true' declared_type64='decform*' name='f' type64='^{decform=ccs}'/>
<arg const='true' declared_type64='decimal*' name='d' type64='^{decimal=ccs{?=C[36C]C}}'/>
<arg declared_type64='char*' name='s' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='dtox80'>
<arg const='true' declared_type64='double*' name='x' type64='^d'/>
<arg declared_type64='extended80*' name='x80' type64='^{Float80=s[4S]}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ldtox80'>
<arg const='true' declared_type64='long double*' name='x' type64='^D'/>
<arg declared_type64='extended80*' name='x80' type64='^{Float80=s[4S]}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='num2dec'>
<arg const='true' declared_type64='decform*' name='f' type64='^{decform=ccs}'/>
<arg declared_type64='double_t' name='x' type64='d'/>
<arg declared_type64='decimal*' name='d' type64='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='num2decl'>
<arg const='true' declared_type64='decform*' name='f' type64='^{decform=ccs}'/>
<arg declared_type64='long double' name='x' type64='D'/>
<arg declared_type64='decimal*' name='d' type64='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='numtostring'>
<arg declared_type64='long' name='theNum' type64='q'/>
<arg declared_type64='char*' name='theString' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='randomx'>
<arg declared_type64='double_t*' name='x' type64='^d'/>
<retval declared_type64='double_t' type64='d'/>
</function>
<function name='relation'>
<arg declared_type64='double_t' name='x' type64='d'/>
<arg declared_type64='double_t' name='y' type64='d'/>
<retval declared_type64='relop' type64='s'/>
</function>
<function name='relationl'>
<arg declared_type64='long double' name='x' type64='D'/>
<arg declared_type64='long double' name='y' type64='D'/>
<retval declared_type64='relop' type64='s'/>
</function>
<function name='str2dec'>
<arg const='true' declared_type64='char*' name='s' type64='*'/>
<arg declared_type64='short*' name='ix' type64='^s'/>
<arg declared_type64='decimal*' name='d' type64='^{decimal=ccs{?=C[36C]C}}'/>
<arg declared_type64='short*' name='vp' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='x80tod'>
<arg const='true' declared_type64='extended80*' name='x80' type64='^{Float80=s[4S]}'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='x80told'>
<arg const='true' declared_type64='extended80*' name='x80' type64='^{Float80=s[4S]}'/>
<arg declared_type64='long double*' name='x' type64='^D'/>
<retval declared_type64='void' type64='v'/>
</function>
<function_alias name='MacGetCurrentThread' original='GetCurrentThread'/>
<function_alias name='MacLoadResource' original='LoadResource'/>
</signatures>
