<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type64='NSString*' name='QCCompositionAttributeBuiltInKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionAttributeCategoryKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionAttributeCopyrightKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionAttributeDescriptionKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionAttributeHasConsumersKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionAttributeIsTimeDependentKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionAttributeNameKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionCategoryDistortion' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionCategoryStylize' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionCategoryUtility' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputAudioPeakKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputAudioSpectrumKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputDestinationImageKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputImageKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputPaceKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputPreviewModeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputPrimaryColorKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputScreenImageKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputSecondaryColorKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputSourceImageKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputTrackInfoKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputTrackPositionKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputTrackSignalKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputXKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionInputYKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionOutputImageKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionOutputWebPageURLKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionPickerPanelDidSelectCompositionNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionPickerViewDidSelectCompositionNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionProtocolGraphicAnimation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionProtocolGraphicTransition' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionProtocolImageFilter' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionProtocolMusicVisualizer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionProtocolScreenSaver' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCCompositionRepositoryDidUpdateNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInAttributeCategoriesKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInAttributeCopyrightKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInAttributeDescriptionKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInAttributeExamplesKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInAttributeNameKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInExecutionArgumentEventKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInExecutionArgumentMouseLocationKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInPixelFormatARGB8' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInPixelFormatBGRA8' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInPixelFormatI8' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInPixelFormatIf' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPlugInPixelFormatRGBAf' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortAttributeDefaultValueKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortAttributeMaximumValueKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortAttributeMenuItemsKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortAttributeMinimumValueKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortAttributeNameKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortAttributeTypeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortTypeBoolean' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortTypeColor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortTypeImage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortTypeIndex' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortTypeNumber' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortTypeString' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCPortTypeStructure' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCRendererEventKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCRendererMouseLocationKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCViewDidStartRenderingNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='QCViewDidStopRenderingNotification' type64='@'/>
<enum name='kQCPlugInExecutionModeConsumer' value64='3'/>
<enum name='kQCPlugInExecutionModeProcessor' value64='2'/>
<enum name='kQCPlugInExecutionModeProvider' value64='1'/>
<enum name='kQCPlugInTimeModeIdle' value64='1'/>
<enum name='kQCPlugInTimeModeNone' value64='0'/>
<enum name='kQCPlugInTimeModeTimeBase' value64='2'/>
<class name='NSObject'>
<method selector='CGLContextObj'>
<retval declared_type64='CGLContextObj' type64='^{_CGLContextObject=}'/>
</method>
<method selector='attributes'>
<retval declared_type64='NSDictionary*' type64='@'/>
</method>
<method selector='bindTextureRepresentationToCGLContext:textureUnit:normalizeCoordinates:'>
<arg declared_type64='CGLContextObj' index='0' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<arg declared_type64='GLenum' index='1' name='unit' type64='I'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='bounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='bufferBaseAddress'>
<retval const='true' declared_type64='void*' type64='^v'/>
</method>
<method selector='bufferBytesPerRow'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='bufferColorSpace'>
<retval declared_type64='CGColorSpaceRef' type64='^{CGColorSpace=}'/>
</method>
<method selector='bufferPixelFormat'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='bufferPixelsHigh'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='bufferPixelsWide'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='canRenderWithCGLContext:'>
<arg declared_type64='CGLContextObj' index='0' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='colorSpace'>
<retval declared_type64='CGColorSpaceRef' type64='^{CGColorSpace=}'/>
</method>
<method selector='compositionParameterView:didChangeParameterWithKey:'>
<arg declared_type64='QCCompositionParameterView*' index='0' name='parameterView' type64='@'/>
<arg declared_type64='NSString*' index='1' name='portKey' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='compositionParameterView:shouldDisplayParameterWithKey:attributes:'>
<arg declared_type64='QCCompositionParameterView*' index='0' name='parameterView' type64='@'/>
<arg declared_type64='NSString*' index='1' name='portKey' type64='@'/>
<arg declared_type64='NSDictionary*' index='2' name='portAttributes' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='compositionPickerView:didSelectComposition:'>
<arg declared_type64='QCCompositionPickerView*' index='0' name='pickerView' type64='@'/>
<arg declared_type64='QCComposition*' index='1' name='composition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='compositionPickerViewDidStartAnimating:'>
<arg declared_type64='QCCompositionPickerView*' index='0' name='pickerView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='compositionPickerViewWillStopAnimating:'>
<arg declared_type64='QCCompositionPickerView*' index='0' name='pickerView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='compositionURL'>
<retval declared_type64='NSURL*' type64='@'/>
</method>
<method selector='copyRenderedTextureForCGLContext:pixelFormat:bounds:isFlipped:'>
<arg declared_type64='CGLContextObj' index='0' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<arg declared_type64='NSString*' index='1' name='format' type64='@'/>
<arg declared_type64='NSRect' index='2' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL*' index='3' name='flipped' type64='^B'/>
<retval declared_type64='GLuint' type64='I'/>
</method>
<method selector='imageBounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageColorSpace'>
<retval declared_type64='CGColorSpaceRef' type64='^{CGColorSpace=}'/>
</method>
<method selector='inputKeys'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='lockBufferRepresentationWithPixelFormat:colorSpace:forBounds:'>
<arg declared_type64='NSString*' index='0' name='format' type64='@'/>
<arg declared_type64='CGColorSpaceRef' index='1' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSRect' index='2' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lockTextureRepresentationWithColorSpace:forBounds:'>
<arg declared_type64='CGColorSpaceRef' index='0' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSRect' index='1' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='logMessage:' variadic='true'>
<arg declared_type64='NSString*' index='0' name='format' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outputImageProviderFromBufferWithPixelFormat:pixelsWide:pixelsHigh:baseAddress:bytesPerRow:releaseCallback:releaseContext:colorSpace:shouldColorMatch:'>
<arg declared_type64='NSString*' index='0' name='format' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='width' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='height' type64='Q'/>
<arg const='true' declared_type64='void*' index='3' name='baseAddress' type64='^v'/>
<arg declared_type64='NSUInteger' index='4' name='rowBytes' type64='Q'/>
<arg declared_type64='QCPlugInBufferReleaseCallback' function_pointer='true' index='5' name='callback' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void*' index='6' name='context' type64='^v'/>
<arg declared_type64='CGColorSpaceRef' index='7' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='BOOL' index='8' name='colorMatch' type64='B'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='outputImageProviderFromTextureWithPixelFormat:pixelsWide:pixelsHigh:name:flipped:releaseCallback:releaseContext:colorSpace:shouldColorMatch:'>
<arg declared_type64='NSString*' index='0' name='format' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='width' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='height' type64='Q'/>
<arg declared_type64='GLuint' index='3' name='name' type64='I'/>
<arg declared_type64='BOOL' index='4' name='flipped' type64='B'/>
<arg declared_type64='QCPlugInTextureReleaseCallback' function_pointer='true' index='5' name='callback' type64='^?'>
<arg declared_type64='CGLContextObj' type64='^{_CGLContextObject=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void*' index='6' name='context' type64='^v'/>
<arg declared_type64='CGColorSpaceRef' index='7' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='BOOL' index='8' name='colorMatch' type64='B'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='outputKeys'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='propertyListFromInputValues'>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='releaseRenderedTexture:forCGLContext:'>
<arg declared_type64='GLuint' index='0' name='name' type64='I'/>
<arg declared_type64='CGLContextObj' index='1' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderToBuffer:withBytesPerRow:pixelFormat:forBounds:'>
<arg declared_type64='void*' index='0' name='baseAddress' type64='^v'/>
<arg declared_type64='NSUInteger' index='1' name='rowBytes' type64='Q'/>
<arg declared_type64='NSString*' index='2' name='format' type64='@'/>
<arg declared_type64='NSRect' index='3' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='renderWithCGLContext:forBounds:'>
<arg declared_type64='CGLContextObj' index='0' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<arg declared_type64='NSRect' index='1' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setInputValuesWithPropertyList:'>
<arg declared_type64='id' index='0' name='plist' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:forInputKey:'>
<arg declared_type64='id' index='0' name='value' type64='@'/>
<arg declared_type64='NSString*' index='1' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldColorMatch'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='supportedBufferPixelFormats'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='supportedRenderedTexturePixelFormats'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='textureColorSpace'>
<retval declared_type64='CGColorSpaceRef' type64='^{CGColorSpace=}'/>
</method>
<method selector='textureFlipped'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textureMatrix'>
<retval const='true' declared_type64='GLfloat*' type64='^f'/>
</method>
<method selector='textureName'>
<retval declared_type64='GLuint' type64='I'/>
</method>
<method selector='texturePixelsHigh'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='texturePixelsWide'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='textureTarget'>
<retval declared_type64='GLenum' type64='I'/>
</method>
<method selector='unbindTextureRepresentationFromCGLContext:textureUnit:'>
<arg declared_type64='CGLContextObj' index='0' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<arg declared_type64='GLenum' index='1' name='unit' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unlockBufferRepresentation'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unlockTextureRepresentation'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userInfo'>
<retval declared_type64='NSMutableDictionary*' type64='@'/>
</method>
<method selector='valueForInputKey:'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='valueForOutputKey:'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='valueForOutputKey:ofType:'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<arg declared_type64='NSString*' index='1' name='type' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
</class>
<class name='QCComposition'>
<method selector='attributes'>
<retval declared_type64='NSDictionary*' type64='@'/>
</method>
<method class_method='true' selector='compositionWithData:'>
<arg declared_type64='NSData*' index='0' name='data' type64='@'/>
<retval declared_type64='QCComposition*' type64='@'/>
</method>
<method class_method='true' selector='compositionWithFile:'>
<arg declared_type64='NSString*' index='0' name='path' type64='@'/>
<retval declared_type64='QCComposition*' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='inputKeys'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='outputKeys'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='protocols'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
</class>
<class name='QCCompositionLayer'>
<method selector='composition'>
<retval declared_type64='QCComposition*' type64='@'/>
</method>
<method class_method='true' selector='compositionLayerWithComposition:'>
<arg declared_type64='QCComposition*' index='0' name='composition' type64='@'/>
<retval declared_type64='QCCompositionLayer*' type64='@'/>
</method>
<method class_method='true' selector='compositionLayerWithFile:'>
<arg declared_type64='NSString*' index='0' name='path' type64='@'/>
<retval declared_type64='QCCompositionLayer*' type64='@'/>
</method>
<method selector='initWithComposition:'>
<arg declared_type64='QCComposition*' index='0' name='composition' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='initWithFile:'>
<arg declared_type64='NSString*' index='0' name='path' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
</class>
<class name='QCCompositionParameterView'>
<method selector='backgroundColor'>
<retval declared_type64='NSColor*' type64='@'/>
</method>
<method selector='compositionRenderer'>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasParameters'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor*' index='0' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCompositionRenderer:'>
<arg declared_type64='id' index='0' name='renderer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='QCCompositionPickerPanel'>
<method selector='compositionPickerView'>
<retval declared_type64='QCCompositionPickerView*' type64='@'/>
</method>
<method class_method='true' selector='sharedCompositionPickerPanel'>
<retval declared_type64='QCCompositionPickerPanel*' type64='@'/>
</method>
</class>
<class name='QCCompositionPickerView'>
<method selector='allowsEmptySelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor*' type64='@'/>
</method>
<method selector='compositionAspectRatio'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='compositions'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAnimating'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maxAnimationFrameRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='numberOfRows'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='resetDefaultInputValues'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedComposition'>
<retval declared_type64='QCComposition*' type64='@'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor*' index='0' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCompositionAspectRatio:'>
<arg declared_type64='NSSize' index='0' name='ratio' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCompositionsFromRepositoryWithProtocol:andAttributes:'>
<arg declared_type64='NSString*' index='0' name='protocol' type64='@'/>
<arg declared_type64='NSDictionary*' index='1' name='attributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultValue:forInputKey:'>
<arg declared_type64='id' index='0' name='value' type64='@'/>
<arg declared_type64='NSString*' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxAnimationFrameRate:'>
<arg declared_type64='float' index='0' name='maxFPS' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfColumns:'>
<arg declared_type64='NSUInteger' index='0' name='columns' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfRows:'>
<arg declared_type64='NSUInteger' index='0' name='rows' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedComposition:'>
<arg declared_type64='QCComposition*' index='0' name='composition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsCompositionNames:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsCompositionNames'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='startAnimation:'>
<arg declared_type64='id' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopAnimation:'>
<arg declared_type64='id' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='QCCompositionRepository'>
<method selector='allCompositions'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='compositionWithIdentifier:'>
<arg declared_type64='NSString*' index='0' name='identifier' type64='@'/>
<retval declared_type64='QCComposition*' type64='@'/>
</method>
<method selector='compositionsWithProtocols:andAttributes:'>
<arg declared_type64='NSArray*' index='0' name='protocols' type64='@'/>
<arg declared_type64='NSDictionary*' index='1' name='attributes' type64='@'/>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method class_method='true' selector='sharedCompositionRepository'>
<retval declared_type64='QCCompositionRepository*' type64='@'/>
</method>
</class>
<class name='QCPlugIn'>
<method selector='addInputPortWithType:forKey:withAttributes:'>
<arg declared_type64='NSString*' index='0' name='type' type64='@'/>
<arg declared_type64='NSString*' index='1' name='key' type64='@'/>
<arg declared_type64='NSDictionary*' index='2' name='attributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addOutputPortWithType:forKey:withAttributes:'>
<arg declared_type64='NSString*' index='0' name='type' type64='@'/>
<arg declared_type64='NSString*' index='1' name='key' type64='@'/>
<arg declared_type64='NSDictionary*' index='2' name='attributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='attributes'>
<retval declared_type64='NSDictionary*' type64='@'/>
</method>
<method class_method='true' selector='attributesForPropertyPortWithKey:'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<retval declared_type64='NSDictionary*' type64='@'/>
</method>
<method selector='createViewController'>
<retval already_retained='true' declared_type64='QCPlugInViewController*' type64='@'/>
</method>
<method selector='didValueForInputKeyChange:'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='disableExecution:'>
<arg declared_type64='id' index='0' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enableExecution:'>
<arg declared_type64='id' index='0' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='execute:atTime:withArguments:'>
<arg declared_type64='id' index='0' name='context' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='time' type64='d'/>
<arg declared_type64='NSDictionary*' index='2' name='arguments' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='executionMode'>
<retval declared_type64='QCPlugInExecutionMode' type64='i'/>
</method>
<method selector='executionTimeForContext:atTime:withArguments:'>
<arg declared_type64='id' index='0' name='context' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='time' type64='d'/>
<arg declared_type64='NSDictionary*' index='2' name='arguments' type64='@'/>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='loadPlugInAtPath:'>
<arg declared_type64='NSString*' index='0' name='path' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='plugInKeys'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method class_method='true' selector='registerPlugInClass:'>
<arg declared_type64='Class' index='0' name='aClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeInputPortForKey:'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeOutputPortForKey:'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='serializedValueForKey:'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='setSerializedValue:forKey:'>
<arg declared_type64='id' index='0' name='serializedValue' type64='@'/>
<arg declared_type64='NSString*' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:forOutputKey:'>
<arg declared_type64='id' index='0' name='value' type64='@'/>
<arg declared_type64='NSString*' index='1' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='sortedPropertyPortKeys'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='startExecution:'>
<arg declared_type64='id' index='0' name='context' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stopExecution:'>
<arg declared_type64='id' index='0' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='timeMode'>
<retval declared_type64='QCPlugInTimeMode' type64='i'/>
</method>
<method selector='valueForInputKey:'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
</class>
<class name='QCPlugInViewController'>
<method selector='initWithPlugIn:viewNibName:'>
<arg declared_type64='QCPlugIn*' index='0' name='plugIn' type64='@'/>
<arg declared_type64='NSString*' index='1' name='name' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='plugIn'>
<retval declared_type64='QCPlugIn*' type64='@'/>
</method>
</class>
<class name='QCRenderer'>
<method selector='composition'>
<retval declared_type64='QCComposition*' type64='@'/>
</method>
<method selector='createSnapshotImageOfType:'>
<arg declared_type64='NSString*' index='0' name='type' type64='@'/>
<retval already_retained='true' declared_type64='id' type64='@'/>
</method>
<method selector='initOffScreenWithSize:colorSpace:composition:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='CGColorSpaceRef' index='1' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='QCComposition*' index='2' name='composition' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='initWithCGLContext:pixelFormat:colorSpace:composition:'>
<arg declared_type64='CGLContextObj' index='0' name='context' type64='^{_CGLContextObject=}'/>
<arg declared_type64='CGLPixelFormatObj' index='1' name='format' type64='^{_CGLPixelFormatObject=}'/>
<arg declared_type64='CGColorSpaceRef' index='2' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='QCComposition*' index='3' name='composition' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='initWithComposition:colorSpace:'>
<arg declared_type64='QCComposition*' index='0' name='composition' type64='@'/>
<arg declared_type64='CGColorSpaceRef' index='1' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='initWithOpenGLContext:pixelFormat:file:'>
<arg declared_type64='NSOpenGLContext*' index='0' name='context' type64='@'/>
<arg declared_type64='NSOpenGLPixelFormat*' index='1' name='format' type64='@'/>
<arg declared_type64='NSString*' index='2' name='path' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='renderAtTime:arguments:'>
<arg declared_type64='NSTimeInterval' index='0' name='time' type64='d'/>
<arg declared_type64='NSDictionary*' index='1' name='arguments' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='renderingTimeForTime:arguments:'>
<arg declared_type64='NSTimeInterval' index='0' name='time' type64='d'/>
<arg declared_type64='NSDictionary*' index='1' name='arguments' type64='@'/>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='snapshotImage'>
<retval declared_type64='NSImage*' type64='@'/>
</method>
</class>
<class name='QCView'>
<method selector='autostartsRendering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='createSnapshotImageOfType:'>
<arg declared_type64='NSString*' index='0' name='type' type64='@'/>
<retval already_retained='true' declared_type64='id' type64='@'/>
</method>
<method selector='erase'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='eraseColor'>
<retval declared_type64='NSColor*' type64='@'/>
</method>
<method selector='eventForwardingMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='isPausedRendering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRendering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadComposition:'>
<arg declared_type64='QCComposition*' index='0' name='composition' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadCompositionFromFile:'>
<arg declared_type64='NSString*' index='0' name='path' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadedComposition'>
<retval declared_type64='QCComposition*' type64='@'/>
</method>
<method selector='maxRenderingFrameRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='openGLContext'>
<retval declared_type64='NSOpenGLContext*' type64='@'/>
</method>
<method selector='openGLPixelFormat'>
<retval declared_type64='NSOpenGLPixelFormat*' type64='@'/>
</method>
<method selector='pauseRendering'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='play:'>
<arg declared_type64='id' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderAtTime:arguments:'>
<arg declared_type64='NSTimeInterval' index='0' name='time' type64='d'/>
<arg declared_type64='NSDictionary*' index='1' name='arguments' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resumeRendering'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutostartsRendering:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEraseColor:'>
<arg declared_type64='NSColor*' index='0' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEventForwardingMask:'>
<arg declared_type64='NSUInteger' index='0' name='mask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxRenderingFrameRate:'>
<arg declared_type64='float' index='0' name='maxFPS' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='snapshotImage'>
<retval declared_type64='NSImage*' type64='@'/>
</method>
<method selector='start:'>
<arg declared_type64='id' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startRendering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stop:'>
<arg declared_type64='id' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopRendering'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unloadComposition'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<informal_protocol name='QCCompositionParameterViewDelegate'>
<method selector='compositionParameterView:didChangeParameterWithKey:' type64='v32@0:8@16@24'>
<arg declared_type64='QCCompositionParameterView*' index='0' name='parameterView' type64='@'/>
<arg declared_type64='NSString*' index='1' name='portKey' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='compositionParameterView:shouldDisplayParameterWithKey:attributes:' type64='B40@0:8@16@24@32'>
<arg declared_type64='QCCompositionParameterView*' index='0' name='parameterView' type64='@'/>
<arg declared_type64='NSString*' index='1' name='portKey' type64='@'/>
<arg declared_type64='NSDictionary*' index='2' name='portAttributes' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='QCCompositionPickerViewDelegate'>
<method selector='compositionPickerView:didSelectComposition:' type64='v32@0:8@16@24'>
<arg declared_type64='QCCompositionPickerView*' index='0' name='pickerView' type64='@'/>
<arg declared_type64='QCComposition*' index='1' name='composition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='compositionPickerViewDidStartAnimating:' type64='v24@0:8@16'>
<arg declared_type64='QCCompositionPickerView*' index='0' name='pickerView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='compositionPickerViewWillStopAnimating:' type64='v24@0:8@16'>
<arg declared_type64='QCCompositionPickerView*' index='0' name='pickerView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='QCCompositionRenderer'>
<method selector='attributes' type64='@16@0:8'>
<retval declared_type64='NSDictionary*' type64='@'/>
</method>
<method selector='inputKeys' type64='@16@0:8'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='outputKeys' type64='@16@0:8'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='propertyListFromInputValues' type64='@16@0:8'>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='setInputValuesWithPropertyList:' type64='v24@0:8@16'>
<arg declared_type64='id' index='0' name='plist' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:forInputKey:' type64='B32@0:8@16@24'>
<arg declared_type64='id' index='0' name='value' type64='@'/>
<arg declared_type64='NSString*' index='1' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='userInfo' type64='@16@0:8'>
<retval declared_type64='NSMutableDictionary*' type64='@'/>
</method>
<method selector='valueForInputKey:' type64='@24@0:8@16'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='valueForOutputKey:' type64='@24@0:8@16'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='valueForOutputKey:ofType:' type64='@32@0:8@16@24'>
<arg declared_type64='NSString*' index='0' name='key' type64='@'/>
<arg declared_type64='NSString*' index='1' name='type' type64='@'/>
<retval declared_type64='id' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='QCPlugInContext'>
<method selector='CGLContextObj' type64='^{_CGLContextObject=}16@0:8'>
<retval declared_type64='CGLContextObj' type64='^{_CGLContextObject=}'/>
</method>
<method selector='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='colorSpace' type64='^{CGColorSpace=}16@0:8'>
<retval declared_type64='CGColorSpaceRef' type64='^{CGColorSpace=}'/>
</method>
<method selector='compositionURL' type64='@16@0:8'>
<retval declared_type64='NSURL*' type64='@'/>
</method>
<method selector='logMessage:' type64='v24@0:8@16' variadic='true'>
<arg declared_type64='NSString*' index='0' name='format' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outputImageProviderFromBufferWithPixelFormat:pixelsWide:pixelsHigh:baseAddress:bytesPerRow:releaseCallback:releaseContext:colorSpace:shouldColorMatch:' type64='@84@0:8@16Q24Q32r^v40Q48^?56^v64^{CGColorSpace=}72B80'>
<arg declared_type64='NSString*' index='0' name='format' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='width' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='height' type64='Q'/>
<arg const='true' declared_type64='void*' index='3' name='baseAddress' type64='^v'/>
<arg declared_type64='NSUInteger' index='4' name='rowBytes' type64='Q'/>
<arg declared_type64='QCPlugInBufferReleaseCallback' function_pointer='true' index='5' name='callback' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void*' index='6' name='context' type64='^v'/>
<arg declared_type64='CGColorSpaceRef' index='7' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='BOOL' index='8' name='colorMatch' type64='B'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='outputImageProviderFromTextureWithPixelFormat:pixelsWide:pixelsHigh:name:flipped:releaseCallback:releaseContext:colorSpace:shouldColorMatch:' type64='@76@0:8@16Q24Q32I40B44^?48^v56^{CGColorSpace=}64B72'>
<arg declared_type64='NSString*' index='0' name='format' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='width' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='height' type64='Q'/>
<arg declared_type64='GLuint' index='3' name='name' type64='I'/>
<arg declared_type64='BOOL' index='4' name='flipped' type64='B'/>
<arg declared_type64='QCPlugInTextureReleaseCallback' function_pointer='true' index='5' name='callback' type64='^?'>
<arg declared_type64='CGLContextObj' type64='^{_CGLContextObject=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void*' index='6' name='context' type64='^v'/>
<arg declared_type64='CGColorSpaceRef' index='7' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='BOOL' index='8' name='colorMatch' type64='B'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='userInfo' type64='@16@0:8'>
<retval declared_type64='NSMutableDictionary*' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='QCPlugInInputImageSource'>
<method selector='bindTextureRepresentationToCGLContext:textureUnit:normalizeCoordinates:' type64='v32@0:8^{_CGLContextObject=}16I24B28'>
<arg declared_type64='CGLContextObj' index='0' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<arg declared_type64='GLenum' index='1' name='unit' type64='I'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='bufferBaseAddress' type64='r^v16@0:8'>
<retval const='true' declared_type64='void*' type64='^v'/>
</method>
<method selector='bufferBytesPerRow' type64='Q16@0:8'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='bufferColorSpace' type64='^{CGColorSpace=}16@0:8'>
<retval declared_type64='CGColorSpaceRef' type64='^{CGColorSpace=}'/>
</method>
<method selector='bufferPixelFormat' type64='@16@0:8'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='bufferPixelsHigh' type64='Q16@0:8'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='bufferPixelsWide' type64='Q16@0:8'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='imageBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageColorSpace' type64='^{CGColorSpace=}16@0:8'>
<retval declared_type64='CGColorSpaceRef' type64='^{CGColorSpace=}'/>
</method>
<method selector='lockBufferRepresentationWithPixelFormat:colorSpace:forBounds:' type64='B64@0:8@16^{CGColorSpace=}24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type64='NSString*' index='0' name='format' type64='@'/>
<arg declared_type64='CGColorSpaceRef' index='1' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSRect' index='2' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lockTextureRepresentationWithColorSpace:forBounds:' type64='B56@0:8^{CGColorSpace=}16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type64='CGColorSpaceRef' index='0' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSRect' index='1' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldColorMatch' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textureColorSpace' type64='^{CGColorSpace=}16@0:8'>
<retval declared_type64='CGColorSpaceRef' type64='^{CGColorSpace=}'/>
</method>
<method selector='textureFlipped' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textureMatrix' type64='r^f16@0:8'>
<retval const='true' declared_type64='GLfloat*' type64='^f'/>
</method>
<method selector='textureName' type64='I16@0:8'>
<retval declared_type64='GLuint' type64='I'/>
</method>
<method selector='texturePixelsHigh' type64='Q16@0:8'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='texturePixelsWide' type64='Q16@0:8'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='textureTarget' type64='I16@0:8'>
<retval declared_type64='GLenum' type64='I'/>
</method>
<method selector='unbindTextureRepresentationFromCGLContext:textureUnit:' type64='v28@0:8^{_CGLContextObject=}16I24'>
<arg declared_type64='CGLContextObj' index='0' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<arg declared_type64='GLenum' index='1' name='unit' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unlockBufferRepresentation' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unlockTextureRepresentation' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='QCPlugInOutputImageProvider'>
<method selector='canRenderWithCGLContext:' type64='B24@0:8^{_CGLContextObject=}16'>
<arg declared_type64='CGLContextObj' index='0' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='copyRenderedTextureForCGLContext:pixelFormat:bounds:isFlipped:' type64='I72@0:8^{_CGLContextObject=}16@24{CGRect={CGPoint=dd}{CGSize=dd}}32^B64'>
<arg declared_type64='CGLContextObj' index='0' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<arg declared_type64='NSString*' index='1' name='format' type64='@'/>
<arg declared_type64='NSRect' index='2' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL*' index='3' name='flipped' type64='^B'/>
<retval declared_type64='GLuint' type64='I'/>
</method>
<method selector='imageBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageColorSpace' type64='^{CGColorSpace=}16@0:8'>
<retval declared_type64='CGColorSpaceRef' type64='^{CGColorSpace=}'/>
</method>
<method selector='releaseRenderedTexture:forCGLContext:' type64='v28@0:8I16^{_CGLContextObject=}20'>
<arg declared_type64='GLuint' index='0' name='name' type64='I'/>
<arg declared_type64='CGLContextObj' index='1' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderToBuffer:withBytesPerRow:pixelFormat:forBounds:' type64='B72@0:8^v16Q24@32{CGRect={CGPoint=dd}{CGSize=dd}}40'>
<arg declared_type64='void*' index='0' name='baseAddress' type64='^v'/>
<arg declared_type64='NSUInteger' index='1' name='rowBytes' type64='Q'/>
<arg declared_type64='NSString*' index='2' name='format' type64='@'/>
<arg declared_type64='NSRect' index='3' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='renderWithCGLContext:forBounds:' type64='B56@0:8^{_CGLContextObject=}16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type64='CGLContextObj' index='0' name='cgl_ctx' type64='^{_CGLContextObject=}'/>
<arg declared_type64='NSRect' index='1' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldColorMatch' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='supportedBufferPixelFormats' type64='@16@0:8'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='supportedRenderedTexturePixelFormats' type64='@16@0:8'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
</informal_protocol>
</signatures>
