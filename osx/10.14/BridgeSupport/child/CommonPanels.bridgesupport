<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='CalibratorInfo' type64='{CalibratorInfo=&quot;dataSize&quot;I&quot;displayID&quot;I&quot;profileLocationSize&quot;I&quot;profileLocationPtr&quot;^{CMProfileLocation}&quot;eventProc&quot;^?&quot;isGood&quot;B}'>
<field declared_type64='UInt32' name='dataSize' type64='I'/>
<field declared_type64='CMDisplayIDType' name='displayID' type64='I'/>
<field declared_type64='UInt32' name='profileLocationSize' type64='I'/>
<field declared_type64='CMProfileLocation*' name='profileLocationPtr' type64='^{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}'/>
<field declared_type64='CalibrateEventUPP' function_pointer='true' name='eventProc' type64='^?'>
<arg declared_type64='EventRecord*' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Boolean' name='isGood' type64='B'/>
</struct>
<struct name='FontSelectionQDStyle' type64='{FontSelectionQDStyle=&quot;version&quot;I&quot;instance&quot;{FMFontFamilyInstance=&quot;fontFamily&quot;s&quot;fontStyle&quot;s}&quot;size&quot;s&quot;hasColor&quot;B&quot;reserved&quot;C&quot;color&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}'>
<field declared_type64='UInt32' name='version' type64='I'/>
<field declared_type64='FMFontFamilyInstance' name='instance' type64='{FMFontFamilyInstance=&quot;fontFamily&quot;s&quot;fontStyle&quot;s}'/>
<field declared_type64='FMFontSize' name='size' type64='s'/>
<field declared_type64='Boolean' name='hasColor' type64='B'/>
<field declared_type64='UInt8' name='reserved' type64='C'/>
<field declared_type64='RGBColor' name='color' type64='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
</struct>
<struct name='NColorPickerInfo' type64='{NColorPickerInfo=&quot;theColor&quot;{NPMColor=&quot;profile&quot;^{OpaqueCMProfileRef}&quot;color&quot;(CMColor=&quot;rgb&quot;{CMRGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;hsv&quot;{CMHSVColor=&quot;hue&quot;S&quot;saturation&quot;S&quot;value&quot;S}&quot;hls&quot;{CMHLSColor=&quot;hue&quot;S&quot;lightness&quot;S&quot;saturation&quot;S}&quot;XYZ&quot;{CMXYZColor=&quot;X&quot;S&quot;Y&quot;S&quot;Z&quot;S}&quot;Lab&quot;{CMLabColor=&quot;L&quot;S&quot;a&quot;S&quot;b&quot;S}&quot;Luv&quot;{CMLuvColor=&quot;L&quot;S&quot;u&quot;S&quot;v&quot;S}&quot;Yxy&quot;{CMYxyColor=&quot;capY&quot;S&quot;x&quot;S&quot;y&quot;S}&quot;cmyk&quot;{CMCMYKColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S&quot;black&quot;S}&quot;cmy&quot;{CMCMYColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S}&quot;gray&quot;{CMGrayColor=&quot;gray&quot;S}&quot;mc5&quot;{CMMultichannel5Color=&quot;components&quot;[5C]}&quot;mc6&quot;{CMMultichannel6Color=&quot;components&quot;[6C]}&quot;mc7&quot;{CMMultichannel7Color=&quot;components&quot;[7C]}&quot;mc8&quot;{CMMultichannel8Color=&quot;components&quot;[8C]}&quot;namedColor&quot;{CMNamedColor=&quot;namedColorIndex&quot;I})}&quot;dstProfile&quot;^{OpaqueCMProfileRef}&quot;flags&quot;I&quot;placeWhere&quot;s&quot;dialogOrigin&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;pickerType&quot;I&quot;colorProc&quot;^?&quot;colorProcData&quot;^v&quot;prompt&quot;[256C]&quot;mInfo&quot;{PickerMenuItemInfo=&quot;editMenuID&quot;s&quot;cutItem&quot;s&quot;copyItem&quot;s&quot;pasteItem&quot;s&quot;clearItem&quot;s&quot;undoItem&quot;s}&quot;newColorChosen&quot;B&quot;reserved&quot;C}'>
<field declared_type64='NPMColor' name='theColor' type64='{NPMColor=&quot;profile&quot;^{OpaqueCMProfileRef}&quot;color&quot;(CMColor=&quot;rgb&quot;{CMRGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;hsv&quot;{CMHSVColor=&quot;hue&quot;S&quot;saturation&quot;S&quot;value&quot;S}&quot;hls&quot;{CMHLSColor=&quot;hue&quot;S&quot;lightness&quot;S&quot;saturation&quot;S}&quot;XYZ&quot;{CMXYZColor=&quot;X&quot;S&quot;Y&quot;S&quot;Z&quot;S}&quot;Lab&quot;{CMLabColor=&quot;L&quot;S&quot;a&quot;S&quot;b&quot;S}&quot;Luv&quot;{CMLuvColor=&quot;L&quot;S&quot;u&quot;S&quot;v&quot;S}&quot;Yxy&quot;{CMYxyColor=&quot;capY&quot;S&quot;x&quot;S&quot;y&quot;S}&quot;cmyk&quot;{CMCMYKColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S&quot;black&quot;S}&quot;cmy&quot;{CMCMYColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S}&quot;gray&quot;{CMGrayColor=&quot;gray&quot;S}&quot;mc5&quot;{CMMultichannel5Color=&quot;components&quot;[5C]}&quot;mc6&quot;{CMMultichannel6Color=&quot;components&quot;[6C]}&quot;mc7&quot;{CMMultichannel7Color=&quot;components&quot;[7C]}&quot;mc8&quot;{CMMultichannel8Color=&quot;components&quot;[8C]}&quot;namedColor&quot;{CMNamedColor=&quot;namedColorIndex&quot;I})}'/>
<field declared_type64='CMProfileRef' name='dstProfile' type64='^{OpaqueCMProfileRef=}'/>
<field declared_type64='UInt32' name='flags' type64='I'/>
<field declared_type64='DialogPlacementSpec' name='placeWhere' type64='s'/>
<field declared_type64='Point' name='dialogOrigin' type64='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type64='OSType' name='pickerType' type64='I'/>
<field declared_type64='NColorChangedUPP' function_pointer='true' name='colorProc' type64='^?'>
<arg declared_type64='SRefCon' type64='^v'/>
<arg declared_type64='NPMColor*' type64='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='URefCon' name='colorProcData' type64='^v'/>
<field declared_type64='Str255' name='prompt' type64='[256C]'/>
<field declared_type64='PickerMenuItemInfo' name='mInfo' type64='{PickerMenuItemInfo=&quot;editMenuID&quot;s&quot;cutItem&quot;s&quot;copyItem&quot;s&quot;pasteItem&quot;s&quot;clearItem&quot;s&quot;undoItem&quot;s}'/>
<field declared_type64='Boolean' name='newColorChosen' type64='B'/>
<field declared_type64='UInt8' name='reserved' type64='C'/>
</struct>
<struct name='NPMColor' type64='{NPMColor=&quot;profile&quot;^{OpaqueCMProfileRef}&quot;color&quot;(CMColor=&quot;rgb&quot;{CMRGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;hsv&quot;{CMHSVColor=&quot;hue&quot;S&quot;saturation&quot;S&quot;value&quot;S}&quot;hls&quot;{CMHLSColor=&quot;hue&quot;S&quot;lightness&quot;S&quot;saturation&quot;S}&quot;XYZ&quot;{CMXYZColor=&quot;X&quot;S&quot;Y&quot;S&quot;Z&quot;S}&quot;Lab&quot;{CMLabColor=&quot;L&quot;S&quot;a&quot;S&quot;b&quot;S}&quot;Luv&quot;{CMLuvColor=&quot;L&quot;S&quot;u&quot;S&quot;v&quot;S}&quot;Yxy&quot;{CMYxyColor=&quot;capY&quot;S&quot;x&quot;S&quot;y&quot;S}&quot;cmyk&quot;{CMCMYKColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S&quot;black&quot;S}&quot;cmy&quot;{CMCMYColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S}&quot;gray&quot;{CMGrayColor=&quot;gray&quot;S}&quot;mc5&quot;{CMMultichannel5Color=&quot;components&quot;[5C]}&quot;mc6&quot;{CMMultichannel6Color=&quot;components&quot;[6C]}&quot;mc7&quot;{CMMultichannel7Color=&quot;components&quot;[7C]}&quot;mc8&quot;{CMMultichannel8Color=&quot;components&quot;[8C]}&quot;namedColor&quot;{CMNamedColor=&quot;namedColorIndex&quot;I})}'>
<field declared_type64='CMProfileRef' name='profile' type64='^{OpaqueCMProfileRef=}'/>
<field declared_type64='CMColor' name='color' type64='(CMColor=&quot;rgb&quot;{CMRGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;hsv&quot;{CMHSVColor=&quot;hue&quot;S&quot;saturation&quot;S&quot;value&quot;S}&quot;hls&quot;{CMHLSColor=&quot;hue&quot;S&quot;lightness&quot;S&quot;saturation&quot;S}&quot;XYZ&quot;{CMXYZColor=&quot;X&quot;S&quot;Y&quot;S&quot;Z&quot;S}&quot;Lab&quot;{CMLabColor=&quot;L&quot;S&quot;a&quot;S&quot;b&quot;S}&quot;Luv&quot;{CMLuvColor=&quot;L&quot;S&quot;u&quot;S&quot;v&quot;S}&quot;Yxy&quot;{CMYxyColor=&quot;capY&quot;S&quot;x&quot;S&quot;y&quot;S}&quot;cmyk&quot;{CMCMYKColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S&quot;black&quot;S}&quot;cmy&quot;{CMCMYColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S}&quot;gray&quot;{CMGrayColor=&quot;gray&quot;S}&quot;mc5&quot;{CMMultichannel5Color=&quot;components&quot;[5C]}&quot;mc6&quot;{CMMultichannel6Color=&quot;components&quot;[6C]}&quot;mc7&quot;{CMMultichannel7Color=&quot;components&quot;[7C]}&quot;mc8&quot;{CMMultichannel8Color=&quot;components&quot;[8C]}&quot;namedColor&quot;{CMNamedColor=&quot;namedColorIndex&quot;I})'/>
</struct>
<struct name='PickerMenuItemInfo' type64='{PickerMenuItemInfo=&quot;editMenuID&quot;s&quot;cutItem&quot;s&quot;copyItem&quot;s&quot;pasteItem&quot;s&quot;clearItem&quot;s&quot;undoItem&quot;s}'>
<field declared_type64='SInt16' name='editMenuID' type64='s'/>
<field declared_type64='SInt16' name='cutItem' type64='s'/>
<field declared_type64='SInt16' name='copyItem' type64='s'/>
<field declared_type64='SInt16' name='pasteItem' type64='s'/>
<field declared_type64='SInt16' name='clearItem' type64='s'/>
<field declared_type64='SInt16' name='undoItem' type64='s'/>
</struct>
<cftype name='FCFontDescriptorRef' type64='^{OpaqueFCFontDescriptorRef=}'/>
<cftype name='Picker' type64='^{OpaquePicker=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFCFontCGColorAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFCFontFaceAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFCFontFamilyAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFCFontNameAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFCFontSizeAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFCFontVisibleNameAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFontPanelATSUFontIDKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFontPanelAttributeSizesKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFontPanelAttributeTagsKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFontPanelAttributeValuesKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFontPanelAttributesKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFontPanelBackgroundColorAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFontPanelFeatureSelectorsKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFontPanelFeatureTypesKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFontPanelMouseTrackingState' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFontPanelVariationAxesKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kFontPanelVariationValuesKey' type64='^{__CFString=}'/>
<enum name='fontPanelFontSelectionQDStyleVersionErr' value64='-8882'/>
<enum name='fontPanelSelectionStyleErr' value64='-8881'/>
<enum name='fontPanelShowErr' value64='-8880'/>
<enum name='kAtSpecifiedOrigin' value64='0'/>
<enum name='kCalibratorNamePrefix' value64='1667329129'/>
<enum name='kCenterOnMainScreen' value64='2'/>
<enum name='kColorPickerAppIsColorSyncAware' value64='16'/>
<enum name='kColorPickerCallColorProcLive' value64='512'/>
<enum name='kColorPickerCanAnimatePalette' value64='8'/>
<enum name='kColorPickerCanModifyPalette' value64='4'/>
<enum name='kColorPickerDetachedFromChoices' value64='256'/>
<enum name='kColorPickerDialogIsModal' value64='2'/>
<enum name='kColorPickerDialogIsMoveable' value64='1'/>
<enum name='kColorPickerInApplicationDialog' value64='64'/>
<enum name='kColorPickerInPickerDialog' value64='128'/>
<enum name='kColorPickerInSystemDialog' value64='32'/>
<enum name='kDeepestColorScreen' value64='1'/>
<enum name='kDefaultColorPickerHeight' value64='238'/>
<enum name='kDefaultColorPickerWidth' value64='383'/>
<enum name='kEventClassFont' value64='1718578804'/>
<enum name='kEventFontPanelClosed' value64='1'/>
<enum name='kEventFontSelection' value64='2'/>
<enum name='kEventParamATSUFontID' value64='1635084644'/>
<enum name='kEventParamATSUFontSize' value64='1635087226'/>
<enum name='kEventParamCTFontDescriptor' value64='1668572772'/>
<enum name='kEventParamDictionary' value64='1684628340'/>
<enum name='kEventParamFMFontFamily' value64='1718445677'/>
<enum name='kEventParamFMFontSize' value64='1718449018'/>
<enum name='kEventParamFMFontStyle' value64='1718449012'/>
<enum name='kEventParamFontColor' value64='1717791858'/>
<enum name='kEventParamViewAttributesDictionary' value64='1684104291'/>
<enum name='kFontSelectionATSUIType' value64='1634956396'/>
<enum name='kFontSelectionCoreTextType' value64='1668572772'/>
<enum name='kFontSelectionQDStyleVersionZero' value64='0'/>
<enum name='kFontSelectionQDType' value64='1903391852'/>
<enum name='kHICommandShowHideFontPanel' value64='1936221808'/>
<enum name='typeATSUFontID' value64='1835100014'/>
<enum name='typeATSUSize' value64='1718188132'/>
<enum name='typeCTFontDescriptorRef' value64='1667658873'/>
<enum name='typeFMFontFamily' value64='1936224114'/>
<enum name='typeFMFontSize' value64='1936224114'/>
<enum name='typeFMFontStyle' value64='1936224114'/>
<enum name='typeFontColor' value64='1666336578'/>
<function name='CMCalibrateDisplay'>
<arg declared_type64='CalibratorInfo*' name='theInfo' type64='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='DisposeCalibrateEventUPP'>
<arg declared_type64='CalibrateEventUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='EventRecord*' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeCalibrateUPP'>
<arg declared_type64='CalibrateUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='CalibratorInfo*' type64='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeCanCalibrateUPP'>
<arg declared_type64='CanCalibrateUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='CMDisplayIDType' type64='I'/>
<arg declared_type64='unsigned char*' type64='*'/>
<retval declared_type64='Boolean' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeNColorChangedUPP'>
<arg declared_type64='NColorChangedUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SRefCon' type64='^v'/>
<arg declared_type64='NPMColor*' type64='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='FCAddCollection'>
<arg declared_type64='CFStringRef' name='iCollection' type64='^{__CFString=}'/>
<arg declared_type64='OptionBits' name='iCollectionOptions' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FCAddFontDescriptorToCollection'>
<arg declared_type64='FCFontDescriptorRef' name='iDescriptor' type64='^{OpaqueFCFontDescriptorRef=}'/>
<arg declared_type64='CFStringRef' name='iCollection' type64='^{__CFString=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FCCopyCollectionNames'>
<retval already_retained='true' declared_type64='CFArrayRef' type64='^{__CFArray=}'/>
</function>
<function name='FCCopyFontDescriptorsInCollection'>
<arg declared_type64='CFStringRef' name='iCollection' type64='^{__CFString=}'/>
<retval already_retained='true' declared_type64='CFArrayRef' type64='^{__CFArray=}'/>
</function>
<function name='FCFontDescriptorCreateWithFontAttributes'>
<arg declared_type64='CFDictionaryRef' name='iAttributes' type64='^{__CFDictionary=}'/>
<retval already_retained='true' declared_type64='FCFontDescriptorRef' type64='^{OpaqueFCFontDescriptorRef=}'/>
</function>
<function name='FCFontDescriptorCreateWithName'>
<arg declared_type64='CFStringRef' name='iFontName' type64='^{__CFString=}'/>
<arg declared_type64='CGFloat' name='iSize' type64='d'/>
<retval already_retained='true' declared_type64='FCFontDescriptorRef' type64='^{OpaqueFCFontDescriptorRef=}'/>
</function>
<function name='FCRemoveCollection'>
<arg declared_type64='CFStringRef' name='iCollection' type64='^{__CFString=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FCRemoveFontDescriptorFromCollection'>
<arg declared_type64='FCFontDescriptorRef' name='iDescriptor' type64='^{OpaqueFCFontDescriptorRef=}'/>
<arg declared_type64='CFStringRef' name='iCollection' type64='^{__CFString=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='FPIsFontPanelVisible'>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='FPShowHideFontPanel'>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='GetColor'>
<arg declared_type64='Point' name='where' type64='{Point=ss}'/>
<arg declared_type64='ConstStr255Param' name='prompt' type64='*'/>
<arg const='true' declared_type64='RGBColor*' name='inColor' type64='^{RGBColor=SSS}'/>
<arg declared_type64='RGBColor*' name='outColor' type64='^{RGBColor=SSS}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='InvokeCalibrateEventUPP'>
<arg declared_type64='EventRecord*' name='event' type64='^{EventRecord=SQI{Point=ss}S}'/>
<arg declared_type64='CalibrateEventUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='EventRecord*' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeCalibrateUPP'>
<arg declared_type64='CalibratorInfo*' name='theInfo' type64='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<arg declared_type64='CalibrateUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='CalibratorInfo*' type64='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InvokeCanCalibrateUPP'>
<arg declared_type64='CMDisplayIDType' name='displayID' type64='I'/>
<arg declared_type64='unsigned char*' name='errMessage' type64='*'/>
<arg declared_type64='CanCalibrateUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='CMDisplayIDType' type64='I'/>
<arg declared_type64='unsigned char*' type64='*'/>
<retval declared_type64='Boolean' type64='B'/>
</arg>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='InvokeNColorChangedUPP'>
<arg declared_type64='SRefCon' name='userData' type64='^v'/>
<arg declared_type64='NPMColor*' name='newColor' type64='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<arg declared_type64='NColorChangedUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SRefCon' type64='^v'/>
<arg declared_type64='NPMColor*' type64='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NPickColor'>
<arg declared_type64='NColorPickerInfo*' name='theColorInfo' type64='^{NColorPickerInfo={NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}^{OpaqueCMProfileRef}Is{Point=ss}I^?^v[256C]{PickerMenuItemInfo=ssssss}BC}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='NewCalibrateEventUPP'>
<arg declared_type64='CalibrateEventProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='EventRecord*' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='CalibrateEventUPP' function_pointer='true' type64='^?'>
<arg declared_type64='EventRecord*' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewCalibrateUPP'>
<arg declared_type64='CalibrateProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='CalibratorInfo*' type64='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='CalibrateUPP' function_pointer='true' type64='^?'>
<arg declared_type64='CalibratorInfo*' type64='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<retval declared_type64='OSErr' type64='s'/>
</retval>
</function>
<function name='NewCanCalibrateUPP'>
<arg declared_type64='CanCalibrateProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='CMDisplayIDType' type64='I'/>
<arg declared_type64='unsigned char*' type64='*'/>
<retval declared_type64='Boolean' type64='B'/>
</arg>
<retval declared_type64='CanCalibrateUPP' function_pointer='true' type64='^?'>
<arg declared_type64='CMDisplayIDType' type64='I'/>
<arg declared_type64='unsigned char*' type64='*'/>
<retval declared_type64='Boolean' type64='B'/>
</retval>
</function>
<function name='NewNColorChangedUPP'>
<arg declared_type64='NColorChangedProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='SRefCon' type64='^v'/>
<arg declared_type64='NPMColor*' type64='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='NColorChangedUPP' function_pointer='true' type64='^?'>
<arg declared_type64='SRefCon' type64='^v'/>
<arg declared_type64='NPMColor*' type64='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='SetFontInfoForSelection'>
<arg declared_type64='OSType' name='iStyleType' type64='I'/>
<arg declared_type64='UInt32' name='iNumStyles' type64='I'/>
<arg declared_type64='void*' name='iStyles' type64='^v'/>
<arg declared_type64='EventTargetRef' name='iFPEventTarget' type64='^{OpaqueEventTargetRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
</signatures>
