<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='CSIdentityClientContext' type64='{CSIdentityClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;statusUpdated&quot;^?}'>
<field declared_type64='CFIndex' name='version' type64='q'/>
<field declared_type64='void*' name='info' type64='^v'/>
<field declared_type64='CFAllocatorRetainCallBack' function_pointer='true' name='retain' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval const='true' declared_type64='void*' type64='^v'/>
</field>
<field declared_type64='CFAllocatorReleaseCallBack' function_pointer='true' name='release' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='CFAllocatorCopyDescriptionCallBack' function_pointer='true' name='copyDescription' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</field>
<field declared_type64='CSIdentityStatusUpdatedCallback' function_pointer='true' name='statusUpdated' type64='^?'>
<arg declared_type64='CSIdentityRef' type64='^{__CSIdentity=}'/>
<arg declared_type64='CFIndex' type64='q'/>
<arg declared_type64='CFErrorRef' type64='^{__CFError=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='CSIdentityQueryClientContext' type64='{CSIdentityQueryClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retainInfo&quot;^?&quot;releaseInfo&quot;^?&quot;copyInfoDescription&quot;^?&quot;receiveEvent&quot;^?}'>
<field declared_type64='CFIndex' name='version' type64='q'/>
<field declared_type64='void*' name='info' type64='^v'/>
<field declared_type64='CFAllocatorRetainCallBack' function_pointer='true' name='retainInfo' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval const='true' declared_type64='void*' type64='^v'/>
</field>
<field declared_type64='CFAllocatorReleaseCallBack' function_pointer='true' name='releaseInfo' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='CFAllocatorCopyDescriptionCallBack' function_pointer='true' name='copyInfoDescription' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</field>
<field declared_type64='CSIdentityQueryReceiveEventCallback' function_pointer='true' name='receiveEvent' type64='^?'>
<arg declared_type64='CSIdentityQueryRef' type64='^{__CSIdentityQuery=}'/>
<arg declared_type64='CSIdentityQueryEvent' type64='q'/>
<arg declared_type64='CFArrayRef' type64='^{__CFArray=}'/>
<arg declared_type64='CFErrorRef' type64='^{__CFError=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='IconFamilyElement' type64='{IconFamilyElement=&quot;elementType&quot;I&quot;elementSize&quot;i&quot;elementData&quot;[1C]}'>
<field declared_type64='OSType' name='elementType' type64='I'/>
<field declared_type64='SInt32' name='elementSize' type64='i'/>
<field declared_type64='unsigned char*' name='elementData' type64='[1C]'/>
</struct>
<struct name='IconFamilyResource' type64='{IconFamilyResource=&quot;resourceType&quot;I&quot;resourceSize&quot;i&quot;elements&quot;[1{IconFamilyElement=&quot;elementType&quot;I&quot;elementSize&quot;i&quot;elementData&quot;[1C]}]}'>
<field declared_type64='OSType' name='resourceType' type64='I'/>
<field declared_type64='SInt32' name='resourceSize' type64='i'/>
<field declared_type64='IconFamilyElement*' name='elements' type64='[1{IconFamilyElement=&quot;elementType&quot;I&quot;elementSize&quot;i&quot;elementData&quot;[1C]}]'/>
</struct>
<struct name='KCAttribute' type64='{SecKeychainAttribute=&quot;tag&quot;I&quot;length&quot;I&quot;data&quot;^v}'>
<field declared_type64='SecKeychainAttrType' name='tag' type64='I'/>
<field declared_type64='UInt32' name='length' type64='I'/>
<field declared_type64='void * _Nullable' name='data' type64='^v'/>
</struct>
<struct name='KCAttributeList' type64='{SecKeychainAttributeList=&quot;count&quot;I&quot;attr&quot;^{SecKeychainAttribute}}'>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='SecKeychainAttribute * _Nullable' name='attr' type64='^{SecKeychainAttribute=II^v}'/>
</struct>
<struct name='KCCallbackInfo' type64='{KCCallbackInfo=&quot;version&quot;I&quot;item&quot;^{OpaqueSecKeychainItemRef}&quot;processID&quot;[2i]&quot;event&quot;[4i]&quot;keychain&quot;^{OpaqueSecKeychainRef}}'>
<field declared_type64='UInt32' name='version' type64='I'/>
<field declared_type64='KCItemRef' name='item' type64='^{OpaqueSecKeychainItemRef=}'/>
<field declared_type64='SInt32*' name='processID' type64='[2i]'/>
<field declared_type64='SInt32*' name='event' type64='[4i]'/>
<field declared_type64='KCRef' name='keychain' type64='^{OpaqueSecKeychainRef=}'/>
</struct>
<struct name='SleepQRec' type64='{SleepQRec=&quot;sleepQLink&quot;^{SleepQRec}&quot;sleepQType&quot;s&quot;sleepQProc&quot;^?&quot;sleepQFlags&quot;s}'>
<field declared_type64='SleepQRecPtr' name='sleepQLink' type64='^{SleepQRec=^{SleepQRec}s^?s}'/>
<field declared_type64='short' name='sleepQType' type64='s'/>
<field declared_type64='SleepQUPP' function_pointer='true' name='sleepQProc' type64='^?'>
<arg declared_type64='long' type64='q'/>
<arg declared_type64='SleepQRecPtr' type64='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type64='long' type64='q'/>
</field>
<field declared_type64='short' name='sleepQFlags' type64='s'/>
</struct>
<struct name='WSClientContext' type64='{WSClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type64='CFIndex' name='version' type64='q'/>
<field declared_type64='void*' name='info' type64='^v'/>
<field declared_type64='WSClientContextRetainCallBackProcPtr' function_pointer='true' name='retain' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void*' type64='^v'/>
</field>
<field declared_type64='WSClientContextReleaseCallBackProcPtr' function_pointer='true' name='release' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='WSClientContextCopyDescriptionCallBackProcPtr' function_pointer='true' name='copyDescription' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</field>
</struct>
<cftype gettypeid_func='CSIdentityAuthorityGetTypeID' name='CSIdentityAuthorityRef' type64='^{__CSIdentityAuthority=}'/>
<cftype gettypeid_func='CSIdentityQueryGetTypeID' name='CSIdentityQueryRef' type64='^{__CSIdentityQuery=}'/>
<cftype gettypeid_func='CSIdentityGetTypeID' name='CSIdentityRef' type64='^{__CSIdentity=}'/>
<cftype gettypeid_func='WSMethodInvocationGetTypeID' name='WSMethodInvocationRef' type64='^{OpaqueWSMethodInvocationRef=}'/>
<cftype gettypeid_func='WSProtocolHandlerGetTypeID' name='WSProtocolHandlerRef' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<constant const='true' declared_type64='CFStringRef' name='kCSIdentityErrorDomain' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kCSIdentityGeneratePosixName' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSDebugIncomingBody' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSDebugIncomingHeaders' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSDebugOutgoingBody' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSDebugOutgoingHeaders' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSFaultCode' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSFaultExtra' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSFaultString' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSHTTPExtraHeaders' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSHTTPFollowsRedirects' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSHTTPMessage' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSHTTPProxy' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSHTTPResponseMessage' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSHTTPVersion' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSMethodInvocationResult' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSMethodInvocationResultParameterName' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSMethodInvocationTimeoutValue' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSNetworkStreamFaultString' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSRecordNamespaceURI' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSRecordParameterOrder' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSRecordType' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSSOAP1999Protocol' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSSOAP2001Protocol' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSSOAPBodyEncodingStyle' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSSOAPMessageHeaders' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSSOAPMethodNamespaceURI' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSSOAPStyleDoc' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSSOAPStyleRPC' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSStreamErrorDomain' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSStreamErrorError' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSStreamErrorMessage' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef' name='kWSXMLRPCProtocol' type64='^{__CFString=}'/>
<string_constant name='kWSMethodName' nsstring='true' value='/WSMethodName'/>
<string_constant name='kWSMethodParameterOrder' nsstring='true' value='/WSMethodParameterOrder'/>
<string_constant name='kWSMethodParameters' nsstring='true' value='/WSMethodParameters'/>
<enum name='HDActivity' value64='3'/>
<enum name='IdleActivity' value64='4'/>
<enum name='NetActivity' value64='2'/>
<enum name='OverallAct' value64='0'/>
<enum name='UsrActivity' value64='1'/>
<enum name='eWSArrayType' value64='8'/>
<enum name='eWSBooleanType' value64='2'/>
<enum name='eWSDataType' value64='7'/>
<enum name='eWSDateType' value64='6'/>
<enum name='eWSDictionaryType' value64='9'/>
<enum name='eWSDoubleType' value64='4'/>
<enum name='eWSIntegerType' value64='3'/>
<enum name='eWSNullType' value64='1'/>
<enum name='eWSStringType' value64='5'/>
<enum name='eWSUnknownType' value64='0'/>
<enum name='errWSInternalError' value64='-65793'/>
<enum name='errWSParseError' value64='-65795'/>
<enum name='errWSTimeoutError' value64='-65796'/>
<enum name='errWSTransportError' value64='-65794'/>
<enum name='kAccountKCItemAttr' value64='1633903476'/>
<enum name='kAddKCEvent' value64='3'/>
<enum name='kAddKCEventMask' value64='8'/>
<enum name='kAddressKCItemAttr' value64='1633969266'/>
<enum name='kAnyAuthType' value64='0'/>
<enum name='kAnyPort' value64='0'/>
<enum name='kAnyProtocol' value64='0'/>
<enum name='kAppleSharePasswordKCItemClass' value64='1634953328'/>
<enum name='kAuthTypeKCItemAttr' value64='1635023216'/>
<enum name='kCSIdentityAuthorityNotAccessibleErr' value64='-2'/>
<enum name='kCSIdentityClassGroup' value64='2'/>
<enum name='kCSIdentityClassUser' value64='1'/>
<enum name='kCSIdentityCommitCompleted' value64='1'/>
<enum name='kCSIdentityDeletedErr' value64='-4'/>
<enum name='kCSIdentityDuplicateFullNameErr' value64='-6'/>
<enum name='kCSIdentityDuplicatePosixNameErr' value64='-8'/>
<enum name='kCSIdentityFlagHidden' value64='1'/>
<enum name='kCSIdentityFlagNone' value64='0'/>
<enum name='kCSIdentityInvalidFullNameErr' value64='-5'/>
<enum name='kCSIdentityInvalidPosixNameErr' value64='-7'/>
<enum name='kCSIdentityPermissionErr' value64='-3'/>
<enum name='kCSIdentityQueryEventErrorOccurred' value64='5'/>
<enum name='kCSIdentityQueryEventResultsAdded' value64='2'/>
<enum name='kCSIdentityQueryEventResultsChanged' value64='3'/>
<enum name='kCSIdentityQueryEventResultsRemoved' value64='4'/>
<enum name='kCSIdentityQueryEventSearchPhaseFinished' value64='1'/>
<enum name='kCSIdentityQueryGenerateUpdateEvents' value64='1'/>
<enum name='kCSIdentityQueryIncludeHiddenIdentities' value64='2'/>
<enum name='kCSIdentityQueryStringBeginsWith' value64='2'/>
<enum name='kCSIdentityQueryStringEquals' value64='1'/>
<enum name='kCSIdentityUnknownAuthorityErr' value64='-1'/>
<enum name='kCertSearchAny' value64='0'/>
<enum name='kCertSearchDecryptAllowed' value64='64'/>
<enum name='kCertSearchDecryptDisallowed' value64='128'/>
<enum name='kCertSearchDecryptIgnored' value64='0'/>
<enum name='kCertSearchDecryptMask' value64='192'/>
<enum name='kCertSearchEncryptAllowed' value64='16'/>
<enum name='kCertSearchEncryptDisallowed' value64='32'/>
<enum name='kCertSearchEncryptIgnored' value64='0'/>
<enum name='kCertSearchEncryptMask' value64='48'/>
<enum name='kCertSearchPrivKeyRequired' value64='4096'/>
<enum name='kCertSearchShift' value64='0'/>
<enum name='kCertSearchSigningAllowed' value64='1'/>
<enum name='kCertSearchSigningDisallowed' value64='2'/>
<enum name='kCertSearchSigningIgnored' value64='0'/>
<enum name='kCertSearchSigningMask' value64='3'/>
<enum name='kCertSearchUnwrapAllowed' value64='1024'/>
<enum name='kCertSearchUnwrapDisallowed' value64='2048'/>
<enum name='kCertSearchUnwrapIgnored' value64='0'/>
<enum name='kCertSearchUnwrapMask' value64='3072'/>
<enum name='kCertSearchVerifyAllowed' value64='4'/>
<enum name='kCertSearchVerifyDisallowed' value64='8'/>
<enum name='kCertSearchVerifyIgnored' value64='0'/>
<enum name='kCertSearchVerifyMask' value64='12'/>
<enum name='kCertSearchWrapAllowed' value64='256'/>
<enum name='kCertSearchWrapDisallowed' value64='512'/>
<enum name='kCertSearchWrapIgnored' value64='0'/>
<enum name='kCertSearchWrapMask' value64='768'/>
<enum name='kCertUsageAllAdd' value64='2147483392'/>
<enum name='kCertUsageDecryptAdd' value64='16384'/>
<enum name='kCertUsageDecryptAskAndAdd' value64='32768'/>
<enum name='kCertUsageEncryptAdd' value64='4096'/>
<enum name='kCertUsageEncryptAskAndAdd' value64='8192'/>
<enum name='kCertUsageKeyExchAdd' value64='65536'/>
<enum name='kCertUsageKeyExchAskAndAdd' value64='131072'/>
<enum name='kCertUsageRootAdd' value64='262144'/>
<enum name='kCertUsageRootAskAndAdd' value64='524288'/>
<enum name='kCertUsageSSLAdd' value64='1048576'/>
<enum name='kCertUsageSSLAskAndAdd' value64='2097152'/>
<enum name='kCertUsageShift' value64='8'/>
<enum name='kCertUsageSigningAdd' value64='256'/>
<enum name='kCertUsageSigningAskAndAdd' value64='512'/>
<enum name='kCertUsageVerifyAdd' value64='1024'/>
<enum name='kCertUsageVerifyAskAndAdd' value64='2048'/>
<enum name='kCertificateKCItemClass' value64='1667592820'/>
<enum name='kClassKCItemAttr' value64='1668047219'/>
<enum name='kCommentKCItemAttr' value64='1768123764'/>
<enum name='kCommonNameKCItemAttr' value64='1668161568'/>
<enum name='kCreationDateKCItemAttr' value64='1667522932'/>
<enum name='kCreatorKCItemAttr' value64='1668445298'/>
<enum name='kCustomIconKCItemAttr' value64='1668641641'/>
<enum name='kDataAccessKCEvent' value64='10'/>
<enum name='kDataAccessKCEventMask' value64='1024'/>
<enum name='kDecryptKCItemAttr' value64='1684366194'/>
<enum name='kDefaultChangedKCEvent' value64='9'/>
<enum name='kDefaultChangedKCEventMask' value64='512'/>
<enum name='kDeleteKCEvent' value64='4'/>
<enum name='kDeleteKCEventMask' value64='16'/>
<enum name='kDescriptionKCItemAttr' value64='1684370275'/>
<enum name='kDeviceInitiatedWake' value64='18'/>
<enum name='kDozeDemand' value64='7'/>
<enum name='kDozeRequest' value64='9'/>
<enum name='kDozeToFullWakeUp' value64='20'/>
<enum name='kDozeWakeUp' value64='8'/>
<enum name='kDropIconVariant' value64='1685221232'/>
<enum name='kEMailKCItemAttr' value64='1835100524'/>
<enum name='kEncryptKCItemAttr' value64='1701733234'/>
<enum name='kEndDateKCItemAttr' value64='1701077364'/>
<enum name='kEnterIdle' value64='24'/>
<enum name='kEnterRun' value64='11'/>
<enum name='kEnterStandby' value64='10'/>
<enum name='kEveryKCEventMask' value64='65535'/>
<enum name='kExitIdle' value64='26'/>
<enum name='kFirstFailKCStopOn' value64='3'/>
<enum name='kFirstPassKCStopOn' value64='2'/>
<enum name='kGenericKCItemAttr' value64='1734700641'/>
<enum name='kGenericPasswordKCItemClass' value64='1734700656'/>
<enum name='kGetPowerInfo' value64='21'/>
<enum name='kGetPowerLevel' value64='16'/>
<enum name='kGetWakeOnNetInfo' value64='22'/>
<enum name='kHuge1BitMask' value64='1768122403'/>
<enum name='kHuge32BitData' value64='1768436530'/>
<enum name='kHuge4BitData' value64='1768122420'/>
<enum name='kHuge8BitData' value64='1768122424'/>
<enum name='kHuge8BitMask' value64='1748528491'/>
<enum name='kIconFamilyType' value64='1768124019'/>
<enum name='kIconServices1024PixelDataARGB' value64='1768108336'/>
<enum name='kIconServices128PixelDataARGB' value64='1768108087'/>
<enum name='kIconServices16PixelDataARGB' value64='1768108084'/>
<enum name='kIconServices256PixelDataARGB' value64='1768108088'/>
<enum name='kIconServices32PixelDataARGB' value64='1768108085'/>
<enum name='kIconServices48PixelDataARGB' value64='1768108086'/>
<enum name='kIconServices512PixelDataARGB' value64='1768108089'/>
<enum name='kIdleKCEvent' value64='0'/>
<enum name='kIdleKCEventMask' value64='1'/>
<enum name='kInternetPasswordKCItemClass' value64='1768842612'/>
<enum name='kInvisibleKCItemAttr' value64='1768846953'/>
<enum name='kIssuerKCItemAttr' value64='1769173877'/>
<enum name='kIssuerURLKCItemAttr' value64='1769304684'/>
<enum name='kKCAuthTypeDPA' value64='1685086561'/>
<enum name='kKCAuthTypeDefault' value64='1684434036'/>
<enum name='kKCAuthTypeHTTPDigest' value64='1752462436'/>
<enum name='kKCAuthTypeMSN' value64='1836281441'/>
<enum name='kKCAuthTypeNTLM' value64='1853123693'/>
<enum name='kKCAuthTypeRPA' value64='1919967585'/>
<enum name='kKCProtocolTypeAFP' value64='1634103328'/>
<enum name='kKCProtocolTypeAppleTalk' value64='1635019883'/>
<enum name='kKCProtocolTypeFTP' value64='1718906912'/>
<enum name='kKCProtocolTypeFTPAccount' value64='1718906977'/>
<enum name='kKCProtocolTypeHTTP' value64='1752462448'/>
<enum name='kKCProtocolTypeIMAP' value64='1768776048'/>
<enum name='kKCProtocolTypeIRC' value64='1769104160'/>
<enum name='kKCProtocolTypeLDAP' value64='1818517872'/>
<enum name='kKCProtocolTypeNNTP' value64='1852732528'/>
<enum name='kKCProtocolTypePOP3' value64='1886351411'/>
<enum name='kKCProtocolTypeSMTP' value64='1936553072'/>
<enum name='kKCProtocolTypeSOCKS' value64='1936685088'/>
<enum name='kKCProtocolTypeTelnet' value64='1952803950'/>
<enum name='kKeychainListChangedKCEvent' value64='11'/>
<enum name='kLabelKCItemAttr' value64='1818321516'/>
<enum name='kLarge1BitMask' value64='1229147683'/>
<enum name='kLarge32BitData' value64='1768698674'/>
<enum name='kLarge4BitData' value64='1768123444'/>
<enum name='kLarge8BitData' value64='1768123448'/>
<enum name='kLarge8BitMask' value64='1815637355'/>
<enum name='kLockKCEvent' value64='1'/>
<enum name='kLockKCEventMask' value64='2'/>
<enum name='kMini1BitMask' value64='1768123683'/>
<enum name='kMini4BitData' value64='1768123700'/>
<enum name='kMini8BitData' value64='1768123704'/>
<enum name='kModDateKCItemAttr' value64='1835295092'/>
<enum name='kNegativeKCItemAttr' value64='1852139361'/>
<enum name='kNoneKCStopOn' value64='1'/>
<enum name='kOpenDropIconVariant' value64='1868853872'/>
<enum name='kOpenIconVariant' value64='1869636974'/>
<enum name='kPasswordChangedKCEvent' value64='6'/>
<enum name='kPasswordChangedKCEventMask' value64='64'/>
<enum name='kPathKCItemAttr' value64='1885434984'/>
<enum name='kPolicyKCStopOn' value64='0'/>
<enum name='kPortKCItemAttr' value64='1886351988'/>
<enum name='kProtocolKCItemAttr' value64='1886675820'/>
<enum name='kPublicKeyHashKCItemAttr' value64='1752198009'/>
<enum name='kRdPermKCStatus' value64='2'/>
<enum name='kRolloverIconVariant' value64='1870030194'/>
<enum name='kScriptCodeKCItemAttr' value64='1935897200'/>
<enum name='kSecOptionReserved' value64='255'/>
<enum name='kSecurityDomainKCItemAttr' value64='1935961454'/>
<enum name='kSerialNumberKCItemAttr' value64='1936614002'/>
<enum name='kServerKCItemAttr' value64='1936881266'/>
<enum name='kServiceKCItemAttr' value64='1937138533'/>
<enum name='kSetPowerLevel' value64='17'/>
<enum name='kSignKCItemAttr' value64='1936287598'/>
<enum name='kSignatureKCItemAttr' value64='1936943463'/>
<enum name='kSleepDemand' value64='2'/>
<enum name='kSleepDeny' value64='5'/>
<enum name='kSleepNow' value64='6'/>
<enum name='kSleepRequest' value64='1'/>
<enum name='kSleepRevoke' value64='4'/>
<enum name='kSleepUnlock' value64='4'/>
<enum name='kSleepWakeUp' value64='3'/>
<enum name='kSmall1BitMask' value64='1768125219'/>
<enum name='kSmall32BitData' value64='1769157426'/>
<enum name='kSmall4BitData' value64='1768125236'/>
<enum name='kSmall8BitData' value64='1768125240'/>
<enum name='kSmall8BitMask' value64='1933077867'/>
<enum name='kStartDateKCItemAttr' value64='1935958388'/>
<enum name='kStillIdle' value64='25'/>
<enum name='kSubjectKCItemAttr' value64='1937072746'/>
<enum name='kSuspendDemand' value64='13'/>
<enum name='kSuspendRequest' value64='12'/>
<enum name='kSuspendRevoke' value64='14'/>
<enum name='kSuspendWakeToDoze' value64='23'/>
<enum name='kSuspendWakeUp' value64='15'/>
<enum name='kSystemEventKCEventMask' value64='256'/>
<enum name='kSystemKCEvent' value64='8'/>
<enum name='kThumbnail32BitData' value64='1769222962'/>
<enum name='kThumbnail8BitMask' value64='1949855083'/>
<enum name='kTileIconVariant' value64='1953066085'/>
<enum name='kTypeKCItemAttr' value64='1954115685'/>
<enum name='kUnlockKCEvent' value64='2'/>
<enum name='kUnlockKCEventMask' value64='4'/>
<enum name='kUnlockStateKCStatus' value64='1'/>
<enum name='kUnwrapKCItemAttr' value64='1970173810'/>
<enum name='kUpdateKCEvent' value64='5'/>
<enum name='kUpdateKCEventMask' value64='32'/>
<enum name='kVerifyKCItemAttr' value64='1986359913'/>
<enum name='kVolumeKCItemAttr' value64='1986817381'/>
<enum name='kWakeToDoze' value64='19'/>
<enum name='kWrPermKCStatus' value64='4'/>
<enum name='kWrapKCItemAttr' value64='2003984752'/>
<enum name='large1BitMask' value64='1229147683'/>
<enum name='large4BitData' value64='1768123444'/>
<enum name='large8BitData' value64='1768123448'/>
<enum name='mini1BitMask' value64='1768123683'/>
<enum name='mini4BitData' value64='1768123700'/>
<enum name='mini8BitData' value64='1768123704'/>
<enum name='noCalls' value64='1'/>
<enum name='noRequest' value64='2'/>
<enum name='sleepQType' value64='16'/>
<enum name='slpQType' value64='16'/>
<enum name='small1BitMask' value64='1768125219'/>
<enum name='small4BitData' value64='1768125236'/>
<enum name='small8BitData' value64='1768125240'/>
<function name='BatteryCount'>
<retval declared_type64='short' type64='s'/>
</function>
<function name='CSGetDefaultIdentityAuthority'>
<retval declared_type64='CSIdentityAuthorityRef' type64='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSGetLocalIdentityAuthority'>
<retval declared_type64='CSIdentityAuthorityRef' type64='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSGetManagedIdentityAuthority'>
<retval declared_type64='CSIdentityAuthorityRef' type64='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSIdentityAddAlias'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<arg declared_type64='CFStringRef' name='alias' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentityAddMember'>
<arg declared_type64='CSIdentityRef' name='group' type64='^{__CSIdentity=}'/>
<arg declared_type64='CSIdentityRef' name='member' type64='^{__CSIdentity=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentityAuthenticateUsingPassword'>
<arg declared_type64='CSIdentityRef' name='user' type64='^{__CSIdentity=}'/>
<arg declared_type64='CFStringRef' name='password' type64='^{__CFString=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CSIdentityAuthorityCopyLocalizedName'>
<arg declared_type64='CSIdentityAuthorityRef' name='authority' type64='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type64='CFStringRef' type64='^{__CFString=}'/>
</function>
<function name='CSIdentityAuthorityGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CSIdentityCommit'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<arg declared_type64='AuthorizationRef' name='authorization' type64='^{AuthorizationOpaqueRef=}'/>
<arg declared_type64='CFErrorRef*' name='error' type64='^^{__CFError}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CSIdentityCommitAsynchronously'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<arg const='true' declared_type64='CSIdentityClientContext*' name='clientContext' type64='^{CSIdentityClientContext=q^v^?^?^?^?}'/>
<arg declared_type64='CFRunLoopRef' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef' name='runLoopMode' type64='^{__CFString=}'/>
<arg declared_type64='AuthorizationRef' name='authorization' type64='^{AuthorizationOpaqueRef=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CSIdentityCreate'>
<arg declared_type64='CFAllocatorRef' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CSIdentityClass' name='identityClass' type64='q'/>
<arg declared_type64='CFStringRef' name='fullName' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef' name='posixName' type64='^{__CFString=}'/>
<arg declared_type64='CSIdentityFlags' name='flags' type64='Q'/>
<arg declared_type64='CSIdentityAuthorityRef' name='authority' type64='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type64='CSIdentityRef' type64='^{__CSIdentity=}'/>
</function>
<function name='CSIdentityCreateCopy'>
<arg declared_type64='CFAllocatorRef' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval already_retained='true' declared_type64='CSIdentityRef' type64='^{__CSIdentity=}'/>
</function>
<function name='CSIdentityCreateGroupMembershipQuery'>
<arg declared_type64='CFAllocatorRef' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CSIdentityRef' name='group' type64='^{__CSIdentity=}'/>
<retval already_retained='true' declared_type64='CSIdentityQueryRef' type64='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityCreatePersistentReference'>
<arg declared_type64='CFAllocatorRef' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval already_retained='true' declared_type64='CFDataRef' type64='^{__CFData=}'/>
</function>
<function name='CSIdentityDelete'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentityGetAliases'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='CFArrayRef' type64='^{__CFArray=}'/>
</function>
<function name='CSIdentityGetAuthority'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='CSIdentityAuthorityRef' type64='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSIdentityGetCertificate'>
<arg declared_type64='CSIdentityRef' name='user' type64='^{__CSIdentity=}'/>
<retval declared_type64='SecCertificateRef' type64='^{OpaqueSecCertificateRef=}'/>
</function>
<function name='CSIdentityGetClass'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='CSIdentityClass' type64='q'/>
</function>
<function name='CSIdentityGetEmailAddress'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</function>
<function name='CSIdentityGetFullName'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</function>
<function name='CSIdentityGetImageData'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='CFDataRef' type64='^{__CFData=}'/>
</function>
<function name='CSIdentityGetImageDataType'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</function>
<function name='CSIdentityGetImageURL'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='CFURLRef' type64='^{__CFURL=}'/>
</function>
<function name='CSIdentityGetPosixID'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='id_t' type64='I'/>
</function>
<function name='CSIdentityGetPosixName'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</function>
<function name='CSIdentityGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CSIdentityGetUUID'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='CFUUIDRef' type64='^{__CFUUID=}'/>
</function>
<function name='CSIdentityIsCommitting'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CSIdentityIsEnabled'>
<arg declared_type64='CSIdentityRef' name='user' type64='^{__CSIdentity=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CSIdentityIsHidden'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CSIdentityIsMemberOfGroup'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<arg declared_type64='CSIdentityRef' name='group' type64='^{__CSIdentity=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CSIdentityQueryCopyResults'>
<arg declared_type64='CSIdentityQueryRef' name='query' type64='^{__CSIdentityQuery=}'/>
<retval already_retained='true' declared_type64='CFArrayRef' type64='^{__CFArray=}'/>
</function>
<function name='CSIdentityQueryCreate'>
<arg declared_type64='CFAllocatorRef' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CSIdentityClass' name='identityClass' type64='q'/>
<arg declared_type64='CSIdentityAuthorityRef' name='authority' type64='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type64='CSIdentityQueryRef' type64='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForCurrentUser'>
<arg declared_type64='CFAllocatorRef' name='allocator' type64='^{__CFAllocator=}'/>
<retval already_retained='true' declared_type64='CSIdentityQueryRef' type64='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForName'>
<arg declared_type64='CFAllocatorRef' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFStringRef' name='name' type64='^{__CFString=}'/>
<arg declared_type64='CSIdentityQueryStringComparisonMethod' name='comparisonMethod' type64='q'/>
<arg declared_type64='CSIdentityClass' name='identityClass' type64='q'/>
<arg declared_type64='CSIdentityAuthorityRef' name='authority' type64='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type64='CSIdentityQueryRef' type64='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForPersistentReference'>
<arg declared_type64='CFAllocatorRef' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFDataRef' name='referenceData' type64='^{__CFData=}'/>
<retval already_retained='true' declared_type64='CSIdentityQueryRef' type64='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForPosixID'>
<arg declared_type64='CFAllocatorRef' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='id_t' name='posixID' type64='I'/>
<arg declared_type64='CSIdentityClass' name='identityClass' type64='q'/>
<arg declared_type64='CSIdentityAuthorityRef' name='authority' type64='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type64='CSIdentityQueryRef' type64='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForUUID'>
<arg declared_type64='CFAllocatorRef' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFUUIDRef' name='uuid' type64='^{__CFUUID=}'/>
<arg declared_type64='CSIdentityAuthorityRef' name='authority' type64='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type64='CSIdentityQueryRef' type64='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryExecute'>
<arg declared_type64='CSIdentityQueryRef' name='query' type64='^{__CSIdentityQuery=}'/>
<arg declared_type64='CSIdentityQueryFlags' name='flags' type64='Q'/>
<arg declared_type64='CFErrorRef*' name='error' type64='^^{__CFError}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CSIdentityQueryExecuteAsynchronously'>
<arg declared_type64='CSIdentityQueryRef' name='query' type64='^{__CSIdentityQuery=}'/>
<arg declared_type64='CSIdentityQueryFlags' name='flags' type64='Q'/>
<arg const='true' declared_type64='CSIdentityQueryClientContext*' name='clientContext' type64='^{CSIdentityQueryClientContext=q^v^?^?^?^?}'/>
<arg declared_type64='CFRunLoopRef' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CSIdentityQueryGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CSIdentityQueryStop'>
<arg declared_type64='CSIdentityQueryRef' name='query' type64='^{__CSIdentityQuery=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentityRemoveAlias'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<arg declared_type64='CFStringRef' name='alias' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentityRemoveClient'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentityRemoveMember'>
<arg declared_type64='CSIdentityRef' name='group' type64='^{__CSIdentity=}'/>
<arg declared_type64='CSIdentityRef' name='member' type64='^{__CSIdentity=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentitySetCertificate'>
<arg declared_type64='CSIdentityRef' name='user' type64='^{__CSIdentity=}'/>
<arg declared_type64='SecCertificateRef' name='certificate' type64='^{OpaqueSecCertificateRef=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentitySetEmailAddress'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<arg declared_type64='CFStringRef' name='emailAddress' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentitySetFullName'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<arg declared_type64='CFStringRef' name='fullName' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentitySetImageData'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<arg declared_type64='CFDataRef' name='imageData' type64='^{__CFData=}'/>
<arg declared_type64='CFStringRef' name='imageDataType' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentitySetImageURL'>
<arg declared_type64='CSIdentityRef' name='identity' type64='^{__CSIdentity=}'/>
<arg declared_type64='CFURLRef' name='url' type64='^{__CFURL=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentitySetIsEnabled'>
<arg declared_type64='CSIdentityRef' name='user' type64='^{__CSIdentity=}'/>
<arg declared_type64='Boolean' name='isEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CSIdentitySetPassword'>
<arg declared_type64='CSIdentityRef' name='user' type64='^{__CSIdentity=}'/>
<arg declared_type64='CFStringRef' name='password' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CurrentProcessorSpeed'>
<retval declared_type64='short' type64='s'/>
</function>
<function name='DisposeKCCallbackUPP'>
<arg declared_type64='KCCallbackUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='KCEvent' type64='S'/>
<arg declared_type64='KCCallbackInfo*' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeSleepQUPP'>
<arg declared_type64='SleepQUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='long' type64='q'/>
<arg declared_type64='SleepQRecPtr' type64='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type64='long' type64='q'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='GetCPUSpeed'>
<retval declared_type64='long' type64='q'/>
</function>
<function name='InvokeKCCallbackUPP'>
<arg declared_type64='KCEvent' name='keychainEvent' type64='S'/>
<arg declared_type64='KCCallbackInfo*' name='info' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type64='void*' name='userContext' type64='^v'/>
<arg declared_type64='KCCallbackUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='KCEvent' type64='S'/>
<arg declared_type64='KCCallbackInfo*' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='InvokeSleepQUPP'>
<arg declared_type64='long' name='message' type64='q'/>
<arg declared_type64='SleepQRecPtr' name='qRecPtr' type64='^{SleepQRec=^{SleepQRec}s^?s}'/>
<arg declared_type64='SleepQUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='long' type64='q'/>
<arg declared_type64='SleepQRecPtr' type64='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type64='long' type64='q'/>
</arg>
<retval declared_type64='long' type64='q'/>
</function>
<function name='KCAddCallback'>
<arg declared_type64='KCCallbackUPP' function_pointer='true' name='callbackProc' type64='^?'>
<arg declared_type64='KCEvent' type64='S'/>
<arg declared_type64='KCCallbackInfo*' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='KCEventMask' name='eventMask' type64='S'/>
<arg declared_type64='void*' name='userContext' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCCopyItem'>
<arg declared_type64='KCItemRef' name='item' type64='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type64='KCRef' name='destKeychain' type64='^{OpaqueSecKeychainRef=}'/>
<arg declared_type64='KCItemRef*' name='copy' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCCountKeychains'>
<retval declared_type64='UInt16' type64='S'/>
</function>
<function name='KCDeleteItem'>
<arg declared_type64='KCItemRef' name='item' type64='^{OpaqueSecKeychainItemRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCFindAppleSharePassword'>
<arg declared_type64='AFPServerSignature*' name='serverSignature' type64='^[16C]'/>
<arg declared_type64='ConstStringPtr' name='serverAddress' type64='*'/>
<arg declared_type64='ConstStringPtr' name='serverName' type64='*'/>
<arg declared_type64='ConstStringPtr' name='volumeName' type64='*'/>
<arg declared_type64='ConstStringPtr' name='accountName' type64='*'/>
<arg declared_type64='UInt32' name='maxLength' type64='I'/>
<arg declared_type64='void*' name='passwordData' type64='^v'/>
<arg declared_type64='UInt32*' name='actualLength' type64='^I'/>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCFindFirstItem'>
<arg declared_type64='KCRef' name='keychain' type64='^{OpaqueSecKeychainRef=}'/>
<arg const='true' declared_type64='KCAttributeList*' name='attrList' type64='^{SecKeychainAttributeList=I^{SecKeychainAttribute}}'/>
<arg declared_type64='KCSearchRef*' name='search' type64='^^{OpaqueSecKeychainSearchRef}'/>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCFindGenericPassword'>
<arg declared_type64='ConstStringPtr' name='serviceName' type64='*'/>
<arg declared_type64='ConstStringPtr' name='accountName' type64='*'/>
<arg declared_type64='UInt32' name='maxLength' type64='I'/>
<arg declared_type64='void*' name='passwordData' type64='^v'/>
<arg declared_type64='UInt32*' name='actualLength' type64='^I'/>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCFindInternetPassword'>
<arg declared_type64='ConstStringPtr' name='serverName' type64='*'/>
<arg declared_type64='ConstStringPtr' name='securityDomain' type64='*'/>
<arg declared_type64='ConstStringPtr' name='accountName' type64='*'/>
<arg declared_type64='UInt16' name='port' type64='S'/>
<arg declared_type64='OSType' name='protocol' type64='I'/>
<arg declared_type64='OSType' name='authType' type64='I'/>
<arg declared_type64='UInt32' name='maxLength' type64='I'/>
<arg declared_type64='void*' name='passwordData' type64='^v'/>
<arg declared_type64='UInt32*' name='actualLength' type64='^I'/>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCFindInternetPasswordWithPath'>
<arg declared_type64='ConstStringPtr' name='serverName' type64='*'/>
<arg declared_type64='ConstStringPtr' name='securityDomain' type64='*'/>
<arg declared_type64='ConstStringPtr' name='accountName' type64='*'/>
<arg declared_type64='ConstStringPtr' name='path' type64='*'/>
<arg declared_type64='UInt16' name='port' type64='S'/>
<arg declared_type64='OSType' name='protocol' type64='I'/>
<arg declared_type64='OSType' name='authType' type64='I'/>
<arg declared_type64='UInt32' name='maxLength' type64='I'/>
<arg declared_type64='void*' name='passwordData' type64='^v'/>
<arg declared_type64='UInt32*' name='actualLength' type64='^I'/>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCFindNextItem'>
<arg declared_type64='KCSearchRef' name='search' type64='^{OpaqueSecKeychainSearchRef=}'/>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCGetAttribute'>
<arg declared_type64='KCItemRef' name='item' type64='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type64='KCAttribute*' name='attr' type64='^{SecKeychainAttribute=II^v}'/>
<arg declared_type64='UInt32*' name='actualLength' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCGetData'>
<arg declared_type64='KCItemRef' name='item' type64='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type64='UInt32' name='maxLength' type64='I'/>
<arg declared_type64='void*' name='data' type64='^v'/>
<arg declared_type64='UInt32*' name='actualLength' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCGetDefaultKeychain'>
<arg declared_type64='KCRef*' name='keychain' type64='^^{OpaqueSecKeychainRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCGetIndKeychain'>
<arg declared_type64='UInt16' name='index' type64='S'/>
<arg declared_type64='KCRef*' name='keychain' type64='^^{OpaqueSecKeychainRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCGetKeychain'>
<arg declared_type64='KCItemRef' name='item' type64='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type64='KCRef*' name='keychain' type64='^^{OpaqueSecKeychainRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCGetKeychainManagerVersion'>
<arg declared_type64='UInt32*' name='returnVers' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCGetKeychainName'>
<arg declared_type64='KCRef' name='keychain' type64='^{OpaqueSecKeychainRef=}'/>
<arg declared_type64='StringPtr' name='keychainName' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCGetStatus'>
<arg declared_type64='KCRef' name='keychain' type64='^{OpaqueSecKeychainRef=}'/>
<arg declared_type64='UInt32*' name='keychainStatus' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCIsInteractionAllowed'>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='KCLock'>
<arg declared_type64='KCRef' name='keychain' type64='^{OpaqueSecKeychainRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCMakeAliasFromKCRef'>
<arg declared_type64='KCRef' name='keychain' type64='^{OpaqueSecKeychainRef=}'/>
<arg declared_type64='AliasHandle*' name='keychainAlias' type64='^^^{AliasRecord}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCMakeKCRefFromAlias'>
<arg declared_type64='AliasHandle' name='keychainAlias' type64='^^{AliasRecord}'/>
<arg declared_type64='KCRef*' name='keychain' type64='^^{OpaqueSecKeychainRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCMakeKCRefFromFSRef'>
<arg declared_type64='FSRef*' name='keychainFSRef' type64='^{FSRef=[80C]}'/>
<arg declared_type64='KCRef*' name='keychain' type64='^^{OpaqueSecKeychainRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCNewItem'>
<arg declared_type64='KCItemClass' name='itemClass' type64='I'/>
<arg declared_type64='OSType' name='itemCreator' type64='I'/>
<arg declared_type64='UInt32' name='length' type64='I'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCReleaseItem'>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCReleaseKeychain'>
<arg declared_type64='KCRef*' name='keychain' type64='^^{OpaqueSecKeychainRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCReleaseSearch'>
<arg declared_type64='KCSearchRef*' name='search' type64='^^{OpaqueSecKeychainSearchRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCRemoveCallback'>
<arg declared_type64='KCCallbackUPP' function_pointer='true' name='callbackProc' type64='^?'>
<arg declared_type64='KCEvent' type64='S'/>
<arg declared_type64='KCCallbackInfo*' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCSetAttribute'>
<arg declared_type64='KCItemRef' name='item' type64='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type64='KCAttribute*' name='attr' type64='^{SecKeychainAttribute=II^v}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCSetData'>
<arg declared_type64='KCItemRef' name='item' type64='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type64='UInt32' name='length' type64='I'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCSetDefaultKeychain'>
<arg declared_type64='KCRef' name='keychain' type64='^{OpaqueSecKeychainRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCSetInteractionAllowed'>
<arg declared_type64='Boolean' name='state' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='KCUpdateItem'>
<arg declared_type64='KCItemRef' name='item' type64='^{OpaqueSecKeychainItemRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MaximumProcessorSpeed'>
<retval declared_type64='short' type64='s'/>
</function>
<function name='MinimumProcessorSpeed'>
<retval declared_type64='short' type64='s'/>
</function>
<function name='NewKCCallbackUPP'>
<arg declared_type64='KCCallbackProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='KCEvent' type64='S'/>
<arg declared_type64='KCCallbackInfo*' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='KCCallbackUPP' function_pointer='true' type64='^?'>
<arg declared_type64='KCEvent' type64='S'/>
<arg declared_type64='KCCallbackInfo*' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</retval>
</function>
<function name='NewSleepQUPP'>
<arg declared_type64='SleepQProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='long' type64='q'/>
<arg declared_type64='SleepQRecPtr' type64='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type64='long' type64='q'/>
</arg>
<retval declared_type64='SleepQUPP' function_pointer='true' type64='^?'>
<arg declared_type64='long' type64='q'/>
<arg declared_type64='SleepQRecPtr' type64='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type64='long' type64='q'/>
</retval>
</function>
<function name='SleepQInstall'>
<arg declared_type64='SleepQRecPtr' name='qRecPtr' type64='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SleepQRemove'>
<arg declared_type64='SleepQRecPtr' name='qRecPtr' type64='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UpdateSystemActivity'>
<arg declared_type64='UInt8' name='activity' type64='C'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='WSGetCFTypeIDFromWSTypeID'>
<arg declared_type64='WSTypeID' name='typeID' type64='i'/>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='WSGetWSTypeIDFromCFType'>
<arg declared_type64='CFTypeRef' name='ref' type64='@'/>
<retval declared_type64='WSTypeID' type64='i'/>
</function>
<function name='WSMethodInvocationAddDeserializationOverride'>
<arg declared_type64='WSMethodInvocationRef' name='invocation' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='CFStringRef' name='typeNamespace' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef' name='typeName' type64='^{__CFString=}'/>
<arg declared_type64='WSMethodInvocationDeserializationProcPtr' function_pointer='true' name='deserializationProc' type64='^?'>
<arg declared_type64='WSMethodInvocationRef' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='CFXMLTreeRef' type64='^{__CFTree=}'/>
<arg declared_type64='CFXMLTreeRef' type64='^{__CFTree=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='CFTypeRef' type64='@'/>
</arg>
<arg declared_type64='WSClientContext*' name='context' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='WSMethodInvocationAddSerializationOverride'>
<arg declared_type64='WSMethodInvocationRef' name='invocation' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='CFTypeID' name='objType' type64='Q'/>
<arg declared_type64='WSMethodInvocationSerializationProcPtr' function_pointer='true' name='serializationProc' type64='^?'>
<arg declared_type64='WSMethodInvocationRef' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='CFTypeRef' type64='@'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</arg>
<arg declared_type64='WSClientContext*' name='context' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='WSMethodInvocationCopyParameters'>
<arg declared_type64='WSMethodInvocationRef' name='invocation' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='CFArrayRef*' name='parameterOrder' type64='^^{__CFArray}'/>
<retval already_retained='true' declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
</function>
<function name='WSMethodInvocationCopyProperty'>
<arg declared_type64='WSMethodInvocationRef' name='invocation' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='CFStringRef' name='propertyName' type64='^{__CFString=}'/>
<retval already_retained='true' declared_type64='CFTypeRef' type64='@'/>
</function>
<function name='WSMethodInvocationCopySerialization'>
<arg declared_type64='WSMethodInvocationRef' name='invocation' type64='^{OpaqueWSMethodInvocationRef=}'/>
<retval already_retained='true' declared_type64='CFDataRef' type64='^{__CFData=}'/>
</function>
<function name='WSMethodInvocationCreate'>
<arg declared_type64='CFURLRef' name='url' type64='^{__CFURL=}'/>
<arg declared_type64='CFStringRef' name='methodName' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef' name='protocol' type64='^{__CFString=}'/>
<retval already_retained='true' declared_type64='WSMethodInvocationRef' type64='^{OpaqueWSMethodInvocationRef=}'/>
</function>
<function name='WSMethodInvocationCreateFromSerialization'>
<arg declared_type64='CFDataRef' name='contract' type64='^{__CFData=}'/>
<retval already_retained='true' declared_type64='WSMethodInvocationRef' type64='^{OpaqueWSMethodInvocationRef=}'/>
</function>
<function name='WSMethodInvocationGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='WSMethodInvocationInvoke'>
<arg declared_type64='WSMethodInvocationRef' name='invocation' type64='^{OpaqueWSMethodInvocationRef=}'/>
<retval declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
</function>
<function name='WSMethodInvocationScheduleWithRunLoop'>
<arg declared_type64='WSMethodInvocationRef' name='invocation' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='CFRunLoopRef' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='WSMethodInvocationSetCallBack'>
<arg declared_type64='WSMethodInvocationRef' name='invocation' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='WSMethodInvocationCallBackProcPtr' function_pointer='true' name='clientCB' type64='^?'>
<arg declared_type64='WSMethodInvocationRef' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='WSClientContext*' name='context' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='WSMethodInvocationSetParameters'>
<arg declared_type64='WSMethodInvocationRef' name='invocation' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='CFDictionaryRef' name='parameters' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFArrayRef' name='parameterOrder' type64='^{__CFArray=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='WSMethodInvocationSetProperty'>
<arg declared_type64='WSMethodInvocationRef' name='invocation' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='CFStringRef' name='propertyName' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef' name='propertyValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='WSMethodInvocationUnscheduleFromRunLoop'>
<arg declared_type64='WSMethodInvocationRef' name='invocation' type64='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type64='CFRunLoopRef' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='WSMethodResultIsFault'>
<arg declared_type64='CFDictionaryRef' name='methodResult' type64='^{__CFDictionary=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='WSProtocolHandlerCopyFaultDocument'>
<arg declared_type64='WSProtocolHandlerRef' name='ref' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type64='CFDictionaryRef' name='methodContext' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFDictionaryRef' name='faultDict' type64='^{__CFDictionary=}'/>
<retval already_retained='true' declared_type64='CFDataRef' type64='^{__CFData=}'/>
</function>
<function name='WSProtocolHandlerCopyProperty'>
<arg declared_type64='WSProtocolHandlerRef' name='ref' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type64='CFStringRef' name='propertyName' type64='^{__CFString=}'/>
<retval already_retained='true' declared_type64='CFTypeRef' type64='@'/>
</function>
<function name='WSProtocolHandlerCopyReplyDictionary'>
<arg declared_type64='WSProtocolHandlerRef' name='ref' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type64='CFStringRef' name='methodName' type64='^{__CFString=}'/>
<arg declared_type64='CFDataRef' name='data' type64='^{__CFData=}'/>
<retval already_retained='true' declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
</function>
<function name='WSProtocolHandlerCopyReplyDocument'>
<arg declared_type64='WSProtocolHandlerRef' name='ref' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type64='CFDictionaryRef' name='methodContext' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFTypeRef' name='resultValue' type64='@'/>
<retval already_retained='true' declared_type64='CFDataRef' type64='^{__CFData=}'/>
</function>
<function name='WSProtocolHandlerCopyRequestDictionary'>
<arg declared_type64='WSProtocolHandlerRef' name='ref' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type64='CFDataRef' name='data' type64='^{__CFData=}'/>
<retval already_retained='true' declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
</function>
<function name='WSProtocolHandlerCopyRequestDocument'>
<arg declared_type64='WSProtocolHandlerRef' name='ref' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type64='CFStringRef' name='methodName' type64='^{__CFString=}'/>
<arg declared_type64='CFDictionaryRef' name='methodParams' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFArrayRef' name='methodParamOrder' type64='^{__CFArray=}'/>
<arg declared_type64='CFDictionaryRef' name='methodExtras' type64='^{__CFDictionary=}'/>
<retval already_retained='true' declared_type64='CFDataRef' type64='^{__CFData=}'/>
</function>
<function name='WSProtocolHandlerCreate'>
<arg declared_type64='CFAllocatorRef' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFStringRef' name='protocol' type64='^{__CFString=}'/>
<retval already_retained='true' declared_type64='WSProtocolHandlerRef' type64='^{OpaqueWSProtocolHandlerRef=}'/>
</function>
<function name='WSProtocolHandlerGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='WSProtocolHandlerSetDeserializationOverride'>
<arg declared_type64='WSProtocolHandlerRef' name='protocol' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type64='CFStringRef' name='typeNamespace' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef' name='typeName' type64='^{__CFString=}'/>
<arg declared_type64='WSProtocolHandlerDeserializationProcPtr' function_pointer='true' name='deserializationProc' type64='^?'>
<arg declared_type64='WSProtocolHandlerRef' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type64='CFXMLTreeRef' type64='^{__CFTree=}'/>
<arg declared_type64='CFXMLTreeRef' type64='^{__CFTree=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='CFTypeRef' type64='@'/>
</arg>
<arg declared_type64='WSClientContext*' name='context' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='WSProtocolHandlerSetProperty'>
<arg declared_type64='WSProtocolHandlerRef' name='ref' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type64='CFStringRef' name='propertyName' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef' name='propertyValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='WSProtocolHandlerSetSerializationOverride'>
<arg declared_type64='WSProtocolHandlerRef' name='protocol' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type64='CFTypeID' name='objType' type64='Q'/>
<arg declared_type64='WSProtocolHandlerSerializationProcPtr' function_pointer='true' name='serializationProc' type64='^?'>
<arg declared_type64='WSProtocolHandlerRef' type64='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type64='CFTypeRef' type64='@'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</arg>
<arg declared_type64='WSClientContext*' name='context' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='kcfindapplesharepassword'>
<arg declared_type64='AFPServerSignature*' name='serverSignature' type64='^[16C]'/>
<arg const='true' declared_type64='char*' name='serverAddress' type64='*'/>
<arg const='true' declared_type64='char*' name='serverName' type64='*'/>
<arg const='true' declared_type64='char*' name='volumeName' type64='*'/>
<arg const='true' declared_type64='char*' name='accountName' type64='*'/>
<arg declared_type64='UInt32' name='maxLength' type64='I'/>
<arg declared_type64='void*' name='passwordData' type64='^v'/>
<arg declared_type64='UInt32*' name='actualLength' type64='^I'/>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='kcfindgenericpassword'>
<arg const='true' declared_type64='char*' name='serviceName' type64='*'/>
<arg const='true' declared_type64='char*' name='accountName' type64='*'/>
<arg declared_type64='UInt32' name='maxLength' type64='I'/>
<arg declared_type64='void*' name='passwordData' type64='^v'/>
<arg declared_type64='UInt32*' name='actualLength' type64='^I'/>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='kcfindinternetpassword'>
<arg const='true' declared_type64='char*' name='serverName' type64='*'/>
<arg const='true' declared_type64='char*' name='securityDomain' type64='*'/>
<arg const='true' declared_type64='char*' name='accountName' type64='*'/>
<arg declared_type64='UInt16' name='port' type64='S'/>
<arg declared_type64='OSType' name='protocol' type64='I'/>
<arg declared_type64='OSType' name='authType' type64='I'/>
<arg declared_type64='UInt32' name='maxLength' type64='I'/>
<arg declared_type64='void*' name='passwordData' type64='^v'/>
<arg declared_type64='UInt32*' name='actualLength' type64='^I'/>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='kcfindinternetpasswordwithpath'>
<arg const='true' declared_type64='char*' name='serverName' type64='*'/>
<arg const='true' declared_type64='char*' name='securityDomain' type64='*'/>
<arg const='true' declared_type64='char*' name='accountName' type64='*'/>
<arg const='true' declared_type64='char*' name='path' type64='*'/>
<arg declared_type64='UInt16' name='port' type64='S'/>
<arg declared_type64='OSType' name='protocol' type64='I'/>
<arg declared_type64='OSType' name='authType' type64='I'/>
<arg declared_type64='UInt32' name='maxLength' type64='I'/>
<arg declared_type64='void*' name='passwordData' type64='^v'/>
<arg declared_type64='UInt32*' name='actualLength' type64='^I'/>
<arg declared_type64='KCItemRef*' name='item' type64='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='kcgetkeychainname'>
<arg declared_type64='KCRef' name='keychain' type64='^{OpaqueSecKeychainRef=}'/>
<arg declared_type64='char*' name='keychainName' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
</signatures>
