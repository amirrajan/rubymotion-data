<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPErrorDomain' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPLanguageOptionCharacteristicContainsOnlyForcedSubtitles' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPLanguageOptionCharacteristicDescribesMusicAndSound' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPLanguageOptionCharacteristicDescribesVideo' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPLanguageOptionCharacteristicDubbedTranslation' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPLanguageOptionCharacteristicEasyToRead' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPLanguageOptionCharacteristicIsAuxiliaryContent' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPLanguageOptionCharacteristicIsMainProgramContent' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPLanguageOptionCharacteristicLanguageTranslation' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPLanguageOptionCharacteristicTranscribesSpokenDialog' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPLanguageOptionCharacteristicVoiceOverTranslation' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaEntityPropertyPersistentID' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyAlbumArtist' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyAlbumArtistPersistentID' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyAlbumPersistentID' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyAlbumTitle' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyAlbumTrackCount' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyAlbumTrackNumber' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyArtist' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyArtistPersistentID' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyArtwork' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyAssetURL' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyBeatsPerMinute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyBookmarkTime' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyComments' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyComposer' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyComposerPersistentID' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyDateAdded' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyDiscCount' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyDiscNumber' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyGenre' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyGenrePersistentID' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyHasProtectedAsset' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyIsCloudItem' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyIsCompilation' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyIsExplicit' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyLastPlayedDate' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyLyrics' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyMediaType' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyPersistentID' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyPlayCount' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyPlaybackDuration' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyPlaybackStoreID' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyPodcastPersistentID' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyPodcastTitle' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyRating' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyReleaseDate' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertySkipCount' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyTitle' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaItemPropertyUserGrouping' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaLibraryDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMediaPlaybackIsPreparedToPlayDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaPlaylistPropertyAuthorDisplayName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaPlaylistPropertyDescriptionText' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaPlaylistPropertyName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaPlaylistPropertyPersistentID' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaPlaylistPropertyPlaylistAttributes' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMediaPlaylistPropertySeedItems' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMovieDurationAvailableNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMovieMediaTypesAvailableNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMovieNaturalSizeAvailableNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerDidEnterFullscreenNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerDidExitFullscreenNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerFullscreenAnimationCurveUserInfoKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerFullscreenAnimationDurationUserInfoKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerLoadStateDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerNowPlayingMovieDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerPlaybackDidFinishNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerPlaybackDidFinishReasonUserInfoKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerPlaybackStateDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerReadyForDisplayDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerScalingModeDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerThumbnailErrorKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerThumbnailImageKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerThumbnailImageRequestDidFinishNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerThumbnailTimeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerTimedMetadataKeyDataType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerTimedMetadataKeyInfo' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerTimedMetadataKeyLanguageCode' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerTimedMetadataKeyMIMEType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerTimedMetadataKeyName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerTimedMetadataUpdatedNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerTimedMetadataUserInfoKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerWillEnterFullscreenNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMoviePlayerWillExitFullscreenNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='MPMovieSourceTypeAvailableNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='MPMusicPlayerControllerNowPlayingItemDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='MPMusicPlayerControllerPlaybackStateDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPMusicPlayerControllerQueueDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='MPMusicPlayerControllerVolumeDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoCollectionIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyAssetURL' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyAvailableLanguageOptions' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyChapterCount' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyChapterNumber' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyCurrentLanguageOptions' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyCurrentPlaybackDate' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyDefaultPlaybackRate' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyElapsedPlaybackTime' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyExternalContentIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyExternalUserProfileIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyIsLiveStream' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyMediaType' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyPlaybackProgress' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyPlaybackQueueCount' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyPlaybackQueueIndex' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyPlaybackRate' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPNowPlayingInfoPropertyServiceIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPVolumeViewWirelessRouteActiveDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MPVolumeViewWirelessRoutesAvailableDidChangeNotification' type64='@'/>
<enum name='MPChangeLanguageOptionSettingNone' value64='0'/>
<enum name='MPChangeLanguageOptionSettingNowPlayingItemOnly' value64='1'/>
<enum name='MPChangeLanguageOptionSettingPermanent' value64='2'/>
<enum name='MPErrorCancelled' value64='6'/>
<enum name='MPErrorCloudServiceCapabilityMissing' value64='2'/>
<enum name='MPErrorNetworkConnectionFailed' value64='3'/>
<enum name='MPErrorNotFound' value64='4'/>
<enum name='MPErrorNotSupported' value64='5'/>
<enum name='MPErrorPermissionDenied' value64='1'/>
<enum name='MPErrorRequestTimedOut' value64='7'/>
<enum name='MPErrorUnknown' value64='0'/>
<enum name='MPMediaGroupingAlbum' value64='1'/>
<enum name='MPMediaGroupingAlbumArtist' value64='3'/>
<enum name='MPMediaGroupingArtist' value64='2'/>
<enum name='MPMediaGroupingComposer' value64='4'/>
<enum name='MPMediaGroupingGenre' value64='5'/>
<enum name='MPMediaGroupingPlaylist' value64='6'/>
<enum name='MPMediaGroupingPodcastTitle' value64='7'/>
<enum name='MPMediaGroupingTitle' value64='0'/>
<enum name='MPMediaLibraryAuthorizationStatusAuthorized' value64='3'/>
<enum name='MPMediaLibraryAuthorizationStatusDenied' value64='1'/>
<enum name='MPMediaLibraryAuthorizationStatusNotDetermined' value64='0'/>
<enum name='MPMediaLibraryAuthorizationStatusRestricted' value64='2'/>
<enum name='MPMediaPlaylistAttributeGenius' value64='4'/>
<enum name='MPMediaPlaylistAttributeNone' value64='0'/>
<enum name='MPMediaPlaylistAttributeOnTheGo' value64='1'/>
<enum name='MPMediaPlaylistAttributeSmart' value64='2'/>
<enum name='MPMediaPredicateComparisonContains' value64='1'/>
<enum name='MPMediaPredicateComparisonEqualTo' value64='0'/>
<enum name='MPMediaTypeAny' value64='18446744073709551615'/>
<enum name='MPMediaTypeAnyAudio' value64='255'/>
<enum name='MPMediaTypeAnyVideo' value64='65280'/>
<enum name='MPMediaTypeAudioBook' value64='4'/>
<enum name='MPMediaTypeAudioITunesU' value64='8'/>
<enum name='MPMediaTypeHomeVideo' value64='8192'/>
<enum name='MPMediaTypeMovie' value64='256'/>
<enum name='MPMediaTypeMusic' value64='1'/>
<enum name='MPMediaTypeMusicVideo' value64='2048'/>
<enum name='MPMediaTypePodcast' value64='2'/>
<enum name='MPMediaTypeTVShow' value64='512'/>
<enum name='MPMediaTypeVideoITunesU' value64='4096'/>
<enum name='MPMediaTypeVideoPodcast' value64='1024'/>
<enum name='MPMovieControlStyleDefault' value64='1'/>
<enum name='MPMovieControlStyleEmbedded' value64='1'/>
<enum name='MPMovieControlStyleFullscreen' value64='2'/>
<enum name='MPMovieControlStyleNone' value64='0'/>
<enum name='MPMovieFinishReasonPlaybackEnded' value64='0'/>
<enum name='MPMovieFinishReasonPlaybackError' value64='1'/>
<enum name='MPMovieFinishReasonUserExited' value64='2'/>
<enum name='MPMovieLoadStatePlayable' value64='1'/>
<enum name='MPMovieLoadStatePlaythroughOK' value64='2'/>
<enum name='MPMovieLoadStateStalled' value64='4'/>
<enum name='MPMovieLoadStateUnknown' value64='0'/>
<enum name='MPMovieMediaTypeMaskAudio' value64='2'/>
<enum name='MPMovieMediaTypeMaskNone' value64='0'/>
<enum name='MPMovieMediaTypeMaskVideo' value64='1'/>
<enum name='MPMoviePlaybackStateInterrupted' value64='3'/>
<enum name='MPMoviePlaybackStatePaused' value64='2'/>
<enum name='MPMoviePlaybackStatePlaying' value64='1'/>
<enum name='MPMoviePlaybackStateSeekingBackward' value64='5'/>
<enum name='MPMoviePlaybackStateSeekingForward' value64='4'/>
<enum name='MPMoviePlaybackStateStopped' value64='0'/>
<enum name='MPMovieRepeatModeNone' value64='0'/>
<enum name='MPMovieRepeatModeOne' value64='1'/>
<enum name='MPMovieScalingModeAspectFill' value64='2'/>
<enum name='MPMovieScalingModeAspectFit' value64='1'/>
<enum name='MPMovieScalingModeFill' value64='3'/>
<enum name='MPMovieScalingModeNone' value64='0'/>
<enum name='MPMovieSourceTypeFile' value64='1'/>
<enum name='MPMovieSourceTypeStreaming' value64='2'/>
<enum name='MPMovieSourceTypeUnknown' value64='0'/>
<enum name='MPMovieTimeOptionExact' value64='1'/>
<enum name='MPMovieTimeOptionNearestKeyFrame' value64='0'/>
<enum name='MPMusicPlaybackStateInterrupted' value64='3'/>
<enum name='MPMusicPlaybackStatePaused' value64='2'/>
<enum name='MPMusicPlaybackStatePlaying' value64='1'/>
<enum name='MPMusicPlaybackStateSeekingBackward' value64='5'/>
<enum name='MPMusicPlaybackStateSeekingForward' value64='4'/>
<enum name='MPMusicPlaybackStateStopped' value64='0'/>
<enum name='MPMusicRepeatModeAll' value64='3'/>
<enum name='MPMusicRepeatModeDefault' value64='0'/>
<enum name='MPMusicRepeatModeNone' value64='1'/>
<enum name='MPMusicRepeatModeOne' value64='2'/>
<enum name='MPMusicShuffleModeAlbums' value64='3'/>
<enum name='MPMusicShuffleModeDefault' value64='0'/>
<enum name='MPMusicShuffleModeOff' value64='1'/>
<enum name='MPMusicShuffleModeSongs' value64='2'/>
<enum name='MPNowPlayingInfoLanguageOptionTypeAudible' value64='0'/>
<enum name='MPNowPlayingInfoLanguageOptionTypeLegible' value64='1'/>
<enum name='MPNowPlayingInfoMediaTypeAudio' value64='1'/>
<enum name='MPNowPlayingInfoMediaTypeNone' value64='0'/>
<enum name='MPNowPlayingInfoMediaTypeVideo' value64='2'/>
<enum name='MPNowPlayingPlaybackStateInterrupted' value64='4'/>
<enum name='MPNowPlayingPlaybackStatePaused' value64='2'/>
<enum name='MPNowPlayingPlaybackStatePlaying' value64='1'/>
<enum name='MPNowPlayingPlaybackStateStopped' value64='3'/>
<enum name='MPNowPlayingPlaybackStateUnknown' value64='0'/>
<enum name='MPRemoteCommandHandlerStatusCommandFailed' value64='200'/>
<enum name='MPRemoteCommandHandlerStatusDeviceNotFound' value64='120'/>
<enum name='MPRemoteCommandHandlerStatusNoActionableNowPlayingItem' value64='110'/>
<enum name='MPRemoteCommandHandlerStatusNoSuchContent' value64='100'/>
<enum name='MPRemoteCommandHandlerStatusSuccess' value64='0'/>
<enum name='MPRepeatTypeAll' value64='2'/>
<enum name='MPRepeatTypeOff' value64='0'/>
<enum name='MPRepeatTypeOne' value64='1'/>
<enum name='MPSeekCommandEventTypeBeginSeeking' value64='0'/>
<enum name='MPSeekCommandEventTypeEndSeeking' value64='1'/>
<enum name='MPShuffleTypeCollections' value64='2'/>
<enum name='MPShuffleTypeItems' value64='1'/>
<enum name='MPShuffleTypeOff' value64='0'/>
<function name='MPVolumeSettingsAlertHide'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='MPVolumeSettingsAlertIsVisible'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='MPVolumeSettingsAlertShow'>
<retval declared_type64='void' type64='v'/>
</function>
<class name='AVMediaSelectionGroup'>
<method selector='makeNowPlayingInfoLanguageOptionGroup'>
<retval declared_type64='MPNowPlayingInfoLanguageOptionGroup * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMediaSelectionOption'>
<method selector='makeNowPlayingInfoLanguageOption'>
<retval declared_type64='MPNowPlayingInfoLanguageOption * _Nullable' type64='@'/>
</method>
</class>
<class name='MPChangeLanguageOptionCommandEvent'>
<method selector='languageOption'>
<retval declared_type64='MPNowPlayingInfoLanguageOption * _Nonnull' type64='@'/>
</method>
<method selector='setting'>
<retval declared_type64='MPChangeLanguageOptionSetting' type64='q'/>
</method>
</class>
<class name='MPChangePlaybackPositionCommandEvent'>
<method selector='positionTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
</class>
<class name='MPChangePlaybackRateCommand'>
<method selector='setSupportedPlaybackRates:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='supportedPlaybackRates' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supportedPlaybackRates'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='MPChangePlaybackRateCommandEvent'>
<method selector='playbackRate'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='MPChangeRepeatModeCommand'>
<method selector='currentRepeatType'>
<retval declared_type64='MPRepeatType' type64='q'/>
</method>
<method selector='setCurrentRepeatType:'>
<arg declared_type64='MPRepeatType' index='0' name='currentRepeatType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPChangeRepeatModeCommandEvent'>
<method selector='preservesRepeatMode'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='repeatType'>
<retval declared_type64='MPRepeatType' type64='q'/>
</method>
</class>
<class name='MPChangeShuffleModeCommand'>
<method selector='currentShuffleType'>
<retval declared_type64='MPShuffleType' type64='q'/>
</method>
<method selector='setCurrentShuffleType:'>
<arg declared_type64='MPShuffleType' index='0' name='currentShuffleType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPChangeShuffleModeCommandEvent'>
<method selector='preservesShuffleMode'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shuffleType'>
<retval declared_type64='MPShuffleType' type64='q'/>
</method>
</class>
<class name='MPContentItem'>
<method selector='artwork'>
<retval declared_type64='MPMediaItemArtwork * _Nullable' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isContainer'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExplicitContent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlayable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isStreamingContent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='playbackProgress'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setArtwork:'>
<arg declared_type64='MPMediaItemArtwork * _Nullable' index='0' name='artwork' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContainer:'>
<arg declared_type64='BOOL' index='0' name='container' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExplicitContent:'>
<arg declared_type64='BOOL' index='0' name='explicitContent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlayable:'>
<arg declared_type64='BOOL' index='0' name='playable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaybackProgress:'>
<arg declared_type64='float' index='0' name='playbackProgress' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStreamingContent:'>
<arg declared_type64='BOOL' index='0' name='streamingContent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSubtitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='subtitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='subtitle'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='MPFeedbackCommand'>
<method selector='isActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='localizedShortTitle'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='localizedTitle'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='setActive:'>
<arg declared_type64='BOOL' index='0' name='active' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocalizedShortTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='localizedShortTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocalizedTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='localizedTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPFeedbackCommandEvent'>
<method selector='isNegative'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='MPMediaEntity'>
<method class_method='true' selector='canFilterByProperty:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='property' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='enumerateValuesForProperties:usingBlock:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='properties' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSString * _Nonnull, id _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='NSString * _Nonnull' type64='@'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type64='id _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='persistentID'>
<retval declared_type64='MPMediaEntityPersistentID' type64='Q'/>
</method>
<method selector='valueForProperty:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='property' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='MPMediaItem'>
<method selector='albumArtist'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='albumArtistPersistentID'>
<retval declared_type64='MPMediaEntityPersistentID' type64='Q'/>
</method>
<method selector='albumPersistentID'>
<retval declared_type64='MPMediaEntityPersistentID' type64='Q'/>
</method>
<method selector='albumTitle'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='albumTrackCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='albumTrackNumber'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='artist'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='artistPersistentID'>
<retval declared_type64='MPMediaEntityPersistentID' type64='Q'/>
</method>
<method selector='artwork'>
<retval declared_type64='MPMediaItemArtwork * _Nullable' type64='@'/>
</method>
<method selector='assetURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='beatsPerMinute'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='bookmarkTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='comments'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='composer'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='composerPersistentID'>
<retval declared_type64='MPMediaEntityPersistentID' type64='Q'/>
</method>
<method selector='dateAdded'>
<retval declared_type64='NSDate * _Nonnull' type64='@'/>
</method>
<method selector='discCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='discNumber'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='genre'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='genrePersistentID'>
<retval declared_type64='MPMediaEntityPersistentID' type64='Q'/>
</method>
<method selector='hasProtectedAsset'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isCloudItem'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isCompilation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExplicitItem'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lastPlayedDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='lyrics'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='mediaType'>
<retval declared_type64='MPMediaType' type64='Q'/>
</method>
<method selector='persistentID'>
<retval declared_type64='MPMediaEntityPersistentID' type64='Q'/>
</method>
<method class_method='true' selector='persistentIDPropertyForGroupingType:'>
<arg declared_type64='MPMediaGrouping' index='0' name='groupingType' type64='q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='playCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='playbackDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='playbackStoreID'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='podcastPersistentID'>
<retval declared_type64='MPMediaEntityPersistentID' type64='Q'/>
</method>
<method selector='podcastTitle'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='rating'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='releaseDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='skipCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='titlePropertyForGroupingType:'>
<arg declared_type64='MPMediaGrouping' index='0' name='groupingType' type64='q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='userGrouping'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='MPMediaItemArtwork'>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageCropRect'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageWithSize:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='initWithBoundsSize:requestHandler:'>
<arg declared_type64='CGSize' index='0' name='boundsSize' type64='{CGSize=dd}'/>
<arg declared_type64='UIImage * _Nonnull (^ _Nonnull)(CGSize)' function_pointer='true' index='1' name='requestHandler' type64='@?'>
<arg declared_type64='CGSize' type64='{CGSize=dd}'/>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithImage:'>
<arg declared_type64='UIImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='MPMediaItemCollection'>
<method class_method='true' selector='collectionWithItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='MPMediaItemCollection * _Nonnull' type64='@'/>
</method>
<method selector='count'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='initWithItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='mediaTypes'>
<retval declared_type64='MPMediaType' type64='Q'/>
</method>
<method selector='representativeItem'>
<retval declared_type64='MPMediaItem * _Nullable' type64='@'/>
</method>
</class>
<class name='MPMediaLibrary'>
<method selector='addItemWithProductID:completionHandler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='productID' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSArray * _Nonnull, NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSArray * _Nonnull' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='authorizationStatus'>
<retval declared_type64='MPMediaLibraryAuthorizationStatus' type64='q'/>
</method>
<method selector='beginGeneratingLibraryChangeNotifications'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='defaultMediaLibrary'>
<retval declared_type64='MPMediaLibrary * _Nonnull' type64='@'/>
</method>
<method selector='endGeneratingLibraryChangeNotifications'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getPlaylistWithUUID:creationMetadata:completionHandler:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='uuid' type64='@'/>
<arg declared_type64='MPMediaPlaylistCreationMetadata * _Nullable' index='1' name='creationMetadata' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(MPMediaPlaylist * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='MPMediaPlaylist * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lastModifiedDate'>
<retval declared_type64='NSDate * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='requestAuthorization:'>
<arg declared_type64='void (^ _Nonnull)(MPMediaLibraryAuthorizationStatus)' function_pointer='true' index='0' name='handler' type64='@?'>
<arg declared_type64='MPMediaLibraryAuthorizationStatus' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPMediaPickerController'>
<method selector='allowsPickingMultipleItems'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='initWithMediaTypes:'>
<arg declared_type64='MPMediaType' index='0' name='mediaTypes' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='mediaTypes'>
<retval declared_type64='MPMediaType' type64='Q'/>
</method>
<method selector='prompt'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setAllowsPickingMultipleItems:'>
<arg declared_type64='BOOL' index='0' name='allowsPickingMultipleItems' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrompt:'>
<arg declared_type64='NSString * _Nullable' index='0' name='prompt' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsCloudItems:'>
<arg declared_type64='BOOL' index='0' name='showsCloudItems' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsItemsWithProtectedAssets:'>
<arg declared_type64='BOOL' index='0' name='showsItemsWithProtectedAssets' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsCloudItems'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsItemsWithProtectedAssets'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='MPMediaPlaylist'>
<method selector='addItemWithProductID:completionHandler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='productID' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addMediaItems:completionHandler:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='mediaItems' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='authorDisplayName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='descriptionText'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='persistentID'>
<retval declared_type64='MPMediaEntityPersistentID' type64='Q'/>
</method>
<method selector='playlistAttributes'>
<retval declared_type64='MPMediaPlaylistAttribute' type64='Q'/>
</method>
<method selector='seedItems'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='MPMediaPlaylistCreationMetadata'>
<method selector='authorDisplayName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='descriptionText'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='initWithName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='setAuthorDisplayName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='authorDisplayName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDescriptionText:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='descriptionText' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPMediaPropertyPredicate'>
<method selector='comparisonType'>
<retval declared_type64='MPMediaPredicateComparison' type64='q'/>
</method>
<method class_method='true' selector='predicateWithValue:forProperty:'>
<arg declared_type64='id _Nullable' index='0' name='value' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='property' type64='@'/>
<retval declared_type64='MPMediaPropertyPredicate * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='predicateWithValue:forProperty:comparisonType:'>
<arg declared_type64='id _Nullable' index='0' name='value' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='property' type64='@'/>
<arg declared_type64='MPMediaPredicateComparison' index='2' name='comparisonType' type64='q'/>
<retval declared_type64='MPMediaPropertyPredicate * _Nonnull' type64='@'/>
</method>
<method selector='property'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='value'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='MPMediaQuery'>
<method selector='addFilterPredicate:'>
<arg declared_type64='MPMediaPredicate * _Nonnull' index='0' name='predicate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='albumsQuery'>
<retval declared_type64='MPMediaQuery * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='artistsQuery'>
<retval declared_type64='MPMediaQuery * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='audiobooksQuery'>
<retval declared_type64='MPMediaQuery * _Nonnull' type64='@'/>
</method>
<method selector='collectionSections'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='collections'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='compilationsQuery'>
<retval declared_type64='MPMediaQuery * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='composersQuery'>
<retval declared_type64='MPMediaQuery * _Nonnull' type64='@'/>
</method>
<method selector='filterPredicates'>
<retval declared_type64='NSSet * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='genresQuery'>
<retval declared_type64='MPMediaQuery * _Nonnull' type64='@'/>
</method>
<method selector='groupingType'>
<retval declared_type64='MPMediaGrouping' type64='q'/>
</method>
<method selector='initWithFilterPredicates:'>
<arg declared_type64='NSSet * _Nullable' index='0' name='filterPredicates' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='itemSections'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='playlistsQuery'>
<retval declared_type64='MPMediaQuery * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='podcastsQuery'>
<retval declared_type64='MPMediaQuery * _Nonnull' type64='@'/>
</method>
<method selector='removeFilterPredicate:'>
<arg declared_type64='MPMediaPredicate * _Nonnull' index='0' name='predicate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFilterPredicates:'>
<arg declared_type64='NSSet * _Nullable' index='0' name='filterPredicates' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGroupingType:'>
<arg declared_type64='MPMediaGrouping' index='0' name='groupingType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='songsQuery'>
<retval declared_type64='MPMediaQuery * _Nonnull' type64='@'/>
</method>
</class>
<class name='MPMediaQuerySection'>
<method selector='range'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='MPMovieAccessLog'>
<method selector='events'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='extendedLogData'>
<retval declared_type64='NSData*' type64='@'/>
</method>
<method selector='extendedLogDataStringEncoding'>
<retval declared_type64='NSStringEncoding' type64='Q'/>
</method>
</class>
<class name='MPMovieAccessLogEvent'>
<method selector='URI'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='durationWatched'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='indicatedBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='numberOfBytesTransferred'>
<retval declared_type64='int64_t' type64='q'/>
</method>
<method selector='numberOfDroppedVideoFrames'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfSegmentsDownloaded'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='numberOfServerAddressChanges'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='numberOfStalls'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='observedBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='playbackSessionID'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='playbackStartDate'>
<retval declared_type64='NSDate*' type64='@'/>
</method>
<method selector='playbackStartOffset'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='segmentsDownloadedDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='serverAddress'>
<retval declared_type64='NSString*' type64='@'/>
</method>
</class>
<class name='MPMovieErrorLog'>
<method selector='events'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='extendedLogData'>
<retval declared_type64='NSData*' type64='@'/>
</method>
<method selector='extendedLogDataStringEncoding'>
<retval declared_type64='NSStringEncoding' type64='Q'/>
</method>
</class>
<class name='MPMovieErrorLogEvent'>
<method selector='URI'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='date'>
<retval declared_type64='NSDate*' type64='@'/>
</method>
<method selector='errorComment'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='errorDomain'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='errorStatusCode'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='playbackSessionID'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='serverAddress'>
<retval declared_type64='NSString*' type64='@'/>
</method>
</class>
<class name='MPMoviePlayerController'>
<method selector='accessLog'>
<retval declared_type64='MPMovieAccessLog*' type64='@'/>
</method>
<method selector='allowsAirPlay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundView'>
<retval declared_type64='UIView*' type64='@'/>
</method>
<method selector='cancelAllThumbnailImageRequests'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentURL'>
<retval declared_type64='NSURL*' type64='@'/>
</method>
<method selector='controlStyle'>
<retval declared_type64='MPMovieControlStyle' type64='q'/>
</method>
<method selector='duration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='endPlaybackTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='errorLog'>
<retval declared_type64='MPMovieErrorLog*' type64='@'/>
</method>
<method selector='initWithContentURL:'>
<arg declared_type64='NSURL*' index='0' name='url' type64='@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method selector='initialPlaybackTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='isAirPlayVideoActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFullscreen'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadState'>
<retval declared_type64='MPMovieLoadState' type64='Q'/>
</method>
<method selector='movieMediaTypes'>
<retval declared_type64='MPMovieMediaTypeMask' type64='Q'/>
</method>
<method selector='movieSourceType'>
<retval declared_type64='MPMovieSourceType' type64='q'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='playableDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='playbackState'>
<retval declared_type64='MPMoviePlaybackState' type64='q'/>
</method>
<method selector='readyForDisplay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='repeatMode'>
<retval declared_type64='MPMovieRepeatMode' type64='q'/>
</method>
<method selector='requestThumbnailImagesAtTimes:timeOption:'>
<arg declared_type64='NSArray*' index='0' name='playbackTimes' type64='@'/>
<arg declared_type64='MPMovieTimeOption' index='1' name='option' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scalingMode'>
<retval declared_type64='MPMovieScalingMode' type64='q'/>
</method>
<method selector='setAllowsAirPlay:'>
<arg declared_type64='BOOL' index='0' name='allowsAirPlay' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentURL:'>
<arg declared_type64='NSURL*' index='0' name='contentURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlStyle:'>
<arg declared_type64='MPMovieControlStyle' index='0' name='controlStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEndPlaybackTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='endPlaybackTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFullscreen:'>
<arg declared_type64='BOOL' index='0' name='fullscreen' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFullscreen:animated:'>
<arg declared_type64='BOOL' index='0' name='fullscreen' type64='B'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInitialPlaybackTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='initialPlaybackTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMovieSourceType:'>
<arg declared_type64='MPMovieSourceType' index='0' name='movieSourceType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepeatMode:'>
<arg declared_type64='MPMovieRepeatMode' index='0' name='repeatMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScalingMode:'>
<arg declared_type64='MPMovieScalingMode' index='0' name='scalingMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldAutoplay:'>
<arg declared_type64='BOOL' index='0' name='shouldAutoplay' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUseApplicationAudioSession:'>
<arg declared_type64='BOOL' index='0' name='useApplicationAudioSession' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldAutoplay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='thumbnailImageAtTime:timeOption:'>
<arg declared_type64='NSTimeInterval' index='0' name='playbackTime' type64='d'/>
<arg declared_type64='MPMovieTimeOption' index='1' name='option' type64='q'/>
<retval declared_type64='UIImage*' type64='@'/>
</method>
<method selector='timedMetadata'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='useApplicationAudioSession'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='view'>
<retval declared_type64='UIView*' type64='@'/>
</method>
</class>
<class name='MPMoviePlayerViewController'>
<method selector='initWithContentURL:'>
<arg declared_type64='NSURL*' index='0' name='contentURL' type64='@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method selector='moviePlayer'>
<retval declared_type64='MPMoviePlayerController*' type64='@'/>
</method>
</class>
<class name='MPMusicPlayerApplicationController'>
<method selector='performQueueTransaction:completionHandler:'>
<arg declared_type64='void (^ _Nonnull)(MPMusicPlayerControllerMutableQueue * _Nonnull)' function_pointer='true' index='0' name='queueTransaction' type64='@?'>
<arg declared_type64='MPMusicPlayerControllerMutableQueue * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nonnull)(MPMusicPlayerControllerQueue * _Nonnull, NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='MPMusicPlayerControllerQueue * _Nonnull' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPMusicPlayerController'>
<method selector='appendQueueDescriptor:'>
<arg declared_type64='MPMusicPlayerQueueDescriptor * _Nonnull' index='0' name='descriptor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='applicationMusicPlayer'>
<retval declared_type64='MPMusicPlayerController * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='applicationQueuePlayer'>
<retval declared_type64='MPMusicPlayerApplicationController * _Nonnull' type64='@'/>
</method>
<method selector='beginGeneratingPlaybackNotifications'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endGeneratingPlaybackNotifications'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='iPodMusicPlayer'>
<retval declared_type64='MPMusicPlayerController * _Nonnull' type64='@'/>
</method>
<method selector='indexOfNowPlayingItem'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='nowPlayingItem'>
<retval declared_type64='MPMediaItem * _Nullable' type64='@'/>
</method>
<method selector='playbackState'>
<retval declared_type64='MPMusicPlaybackState' type64='q'/>
</method>
<method selector='prepareToPlayWithCompletionHandler:'>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prependQueueDescriptor:'>
<arg declared_type64='MPMusicPlayerQueueDescriptor * _Nonnull' index='0' name='descriptor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='repeatMode'>
<retval declared_type64='MPMusicRepeatMode' type64='q'/>
</method>
<method selector='setNowPlayingItem:'>
<arg declared_type64='MPMediaItem * _Nullable' index='0' name='nowPlayingItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setQueueWithDescriptor:'>
<arg declared_type64='MPMusicPlayerQueueDescriptor * _Nonnull' index='0' name='descriptor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setQueueWithItemCollection:'>
<arg declared_type64='MPMediaItemCollection * _Nonnull' index='0' name='itemCollection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setQueueWithQuery:'>
<arg declared_type64='MPMediaQuery * _Nonnull' index='0' name='query' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setQueueWithStoreIDs:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='storeIDs' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepeatMode:'>
<arg declared_type64='MPMusicRepeatMode' index='0' name='repeatMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShuffleMode:'>
<arg declared_type64='MPMusicShuffleMode' index='0' name='shuffleMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shuffleMode'>
<retval declared_type64='MPMusicShuffleMode' type64='q'/>
</method>
<method selector='skipToBeginning'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='skipToNextItem'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='skipToPreviousItem'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='systemMusicPlayer'>
<retval declared_type64='MPMusicPlayerController * _Nonnull' type64='@'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='MPMusicPlayerControllerMutableQueue'>
<method selector='insertQueueDescriptor:afterItem:'>
<arg declared_type64='MPMusicPlayerQueueDescriptor * _Nonnull' index='0' name='queueDescriptor' type64='@'/>
<arg declared_type64='MPMediaItem * _Nullable' index='1' name='afterItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItem:'>
<arg declared_type64='MPMediaItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPMusicPlayerControllerQueue'>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='MPMusicPlayerMediaItemQueueDescriptor'>
<method selector='initWithItemCollection:'>
<arg declared_type64='MPMediaItemCollection * _Nonnull' index='0' name='itemCollection' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithQuery:'>
<arg declared_type64='MPMediaQuery * _Nonnull' index='0' name='query' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='itemCollection'>
<retval declared_type64='MPMediaItemCollection * _Nonnull' type64='@'/>
</method>
<method selector='query'>
<retval declared_type64='MPMediaQuery * _Nonnull' type64='@'/>
</method>
<method selector='setEndTime:forItem:'>
<arg declared_type64='NSTimeInterval' index='0' name='endTime' type64='d'/>
<arg declared_type64='MPMediaItem * _Nonnull' index='1' name='mediaItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartItem:'>
<arg declared_type64='MPMediaItem * _Nullable' index='0' name='startItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartTime:forItem:'>
<arg declared_type64='NSTimeInterval' index='0' name='startTime' type64='d'/>
<arg declared_type64='MPMediaItem * _Nonnull' index='1' name='mediaItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startItem'>
<retval declared_type64='MPMediaItem * _Nullable' type64='@'/>
</method>
</class>
<class name='MPMusicPlayerPlayParameters'>
<method selector='dictionary'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='initWithDictionary:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='dictionary' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
</class>
<class name='MPMusicPlayerPlayParametersQueueDescriptor'>
<method selector='initWithPlayParametersQueue:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='playParametersQueue' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='playParametersQueue'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setEndTime:forItemWithPlayParameters:'>
<arg declared_type64='NSTimeInterval' index='0' name='endTime' type64='d'/>
<arg declared_type64='MPMusicPlayerPlayParameters * _Nonnull' index='1' name='playParameters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlayParametersQueue:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='playParametersQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartItemPlayParameters:'>
<arg declared_type64='MPMusicPlayerPlayParameters * _Nullable' index='0' name='startItemPlayParameters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartTime:forItemWithPlayParameters:'>
<arg declared_type64='NSTimeInterval' index='0' name='startTime' type64='d'/>
<arg declared_type64='MPMusicPlayerPlayParameters * _Nonnull' index='1' name='playParameters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startItemPlayParameters'>
<retval declared_type64='MPMusicPlayerPlayParameters * _Nullable' type64='@'/>
</method>
</class>
<class name='MPMusicPlayerStoreQueueDescriptor'>
<method selector='initWithStoreIDs:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='storeIDs' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setEndTime:forItemWithStoreID:'>
<arg declared_type64='NSTimeInterval' index='0' name='endTime' type64='d'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='storeID' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartItemID:'>
<arg declared_type64='NSString * _Nullable' index='0' name='startItemID' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartTime:forItemWithStoreID:'>
<arg declared_type64='NSTimeInterval' index='0' name='startTime' type64='d'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='storeID' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStoreIDs:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='storeIDs' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startItemID'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='storeIDs'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='MPNowPlayingInfoCenter'>
<method class_method='true' selector='defaultCenter'>
<retval declared_type64='MPNowPlayingInfoCenter * _Nonnull' type64='@'/>
</method>
<method selector='nowPlayingInfo'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='playbackState'>
<retval declared_type64='MPNowPlayingPlaybackState' type64='Q'/>
</method>
<method selector='setNowPlayingInfo:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='nowPlayingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaybackState:'>
<arg declared_type64='MPNowPlayingPlaybackState' index='0' name='playbackState' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPNowPlayingInfoLanguageOption'>
<method selector='displayName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='initWithType:languageTag:characteristics:displayName:identifier:'>
<arg declared_type64='MPNowPlayingInfoLanguageOptionType' index='0' name='languageOptionType' type64='Q'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='languageTag' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='2' name='languageOptionCharacteristics' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='3' name='displayName' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='4' name='identifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isAutomaticAudibleLanguageOption'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAutomaticLegibleLanguageOption'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='languageOptionCharacteristics'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='languageOptionType'>
<retval declared_type64='MPNowPlayingInfoLanguageOptionType' type64='Q'/>
</method>
<method selector='languageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='MPNowPlayingInfoLanguageOptionGroup'>
<method selector='allowEmptySelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='defaultLanguageOption'>
<retval declared_type64='MPNowPlayingInfoLanguageOption * _Nullable' type64='@'/>
</method>
<method selector='initWithLanguageOptions:defaultLanguageOption:allowEmptySelection:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='languageOptions' type64='@'/>
<arg declared_type64='MPNowPlayingInfoLanguageOption * _Nullable' index='1' name='defaultLanguageOption' type64='@'/>
<arg declared_type64='BOOL' index='2' name='allowEmptySelection' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='languageOptions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='MPPlayableContentManager'>
<method selector='beginUpdates'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='context'>
<retval declared_type64='MPPlayableContentManagerContext * _Nonnull' type64='@'/>
</method>
<method selector='dataSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='endUpdates'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='nowPlayingIdentifiers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='reloadData'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type64='id _Nullable' index='0' name='dataSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNowPlayingIdentifiers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='nowPlayingIdentifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedContentManager'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='MPPlayableContentManagerContext'>
<method selector='contentLimitsEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contentLimitsEnforced'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='endpointAvailable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='enforcedContentItemsCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='enforcedContentTreeDepth'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='MPRatingCommand'>
<method selector='maximumRating'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='minimumRating'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setMaximumRating:'>
<arg declared_type64='float' index='0' name='maximumRating' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumRating:'>
<arg declared_type64='float' index='0' name='minimumRating' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPRatingCommandEvent'>
<method selector='rating'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='MPRemoteCommand'>
<method selector='addTarget:action:'>
<arg declared_type64='id _Nonnull' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addTargetWithHandler:'>
<arg declared_type64='MPRemoteCommandHandlerStatus (^ _Nonnull)(MPRemoteCommandEvent * _Nonnull)' function_pointer='true' index='0' name='handler' type64='@?'>
<arg declared_type64='MPRemoteCommandEvent * _Nonnull' type64='@'/>
<retval declared_type64='MPRemoteCommandHandlerStatus' type64='q'/>
</arg>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTarget:action:'>
<arg declared_type64='id _Nonnull' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPRemoteCommandCenter'>
<method selector='bookmarkCommand'>
<retval declared_type64='MPFeedbackCommand * _Nonnull' type64='@'/>
</method>
<method selector='changePlaybackPositionCommand'>
<retval declared_type64='MPChangePlaybackPositionCommand * _Nonnull' type64='@'/>
</method>
<method selector='changePlaybackRateCommand'>
<retval declared_type64='MPChangePlaybackRateCommand * _Nonnull' type64='@'/>
</method>
<method selector='changeRepeatModeCommand'>
<retval declared_type64='MPChangeRepeatModeCommand * _Nonnull' type64='@'/>
</method>
<method selector='changeShuffleModeCommand'>
<retval declared_type64='MPChangeShuffleModeCommand * _Nonnull' type64='@'/>
</method>
<method selector='disableLanguageOptionCommand'>
<retval declared_type64='MPRemoteCommand * _Nonnull' type64='@'/>
</method>
<method selector='dislikeCommand'>
<retval declared_type64='MPFeedbackCommand * _Nonnull' type64='@'/>
</method>
<method selector='enableLanguageOptionCommand'>
<retval declared_type64='MPRemoteCommand * _Nonnull' type64='@'/>
</method>
<method selector='likeCommand'>
<retval declared_type64='MPFeedbackCommand * _Nonnull' type64='@'/>
</method>
<method selector='nextTrackCommand'>
<retval declared_type64='MPRemoteCommand * _Nonnull' type64='@'/>
</method>
<method selector='pauseCommand'>
<retval declared_type64='MPRemoteCommand * _Nonnull' type64='@'/>
</method>
<method selector='playCommand'>
<retval declared_type64='MPRemoteCommand * _Nonnull' type64='@'/>
</method>
<method selector='previousTrackCommand'>
<retval declared_type64='MPRemoteCommand * _Nonnull' type64='@'/>
</method>
<method selector='ratingCommand'>
<retval declared_type64='MPRatingCommand * _Nonnull' type64='@'/>
</method>
<method selector='seekBackwardCommand'>
<retval declared_type64='MPRemoteCommand * _Nonnull' type64='@'/>
</method>
<method selector='seekForwardCommand'>
<retval declared_type64='MPRemoteCommand * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sharedCommandCenter'>
<retval declared_type64='MPRemoteCommandCenter * _Nonnull' type64='@'/>
</method>
<method selector='skipBackwardCommand'>
<retval declared_type64='MPSkipIntervalCommand * _Nonnull' type64='@'/>
</method>
<method selector='skipForwardCommand'>
<retval declared_type64='MPSkipIntervalCommand * _Nonnull' type64='@'/>
</method>
<method selector='stopCommand'>
<retval declared_type64='MPRemoteCommand * _Nonnull' type64='@'/>
</method>
<method selector='togglePlayPauseCommand'>
<retval declared_type64='MPRemoteCommand * _Nonnull' type64='@'/>
</method>
</class>
<class name='MPRemoteCommandEvent'>
<method selector='command'>
<retval declared_type64='MPRemoteCommand * _Nonnull' type64='@'/>
</method>
<method selector='timestamp'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
</class>
<class name='MPSeekCommandEvent'>
<method selector='type'>
<retval declared_type64='MPSeekCommandEventType' type64='Q'/>
</method>
</class>
<class name='MPSkipIntervalCommand'>
<method selector='preferredIntervals'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setPreferredIntervals:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='preferredIntervals' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPSkipIntervalCommandEvent'>
<method selector='interval'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
</class>
<class name='MPTimedMetadata'>
<method selector='allMetadata'>
<retval declared_type64='NSDictionary*' type64='@'/>
</method>
<method selector='key'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='keyspace'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='timestamp'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='value'>
<retval declared_type64='id' type64='@'/>
</method>
</class>
<class name='MPVolumeView'>
<method selector='areWirelessRoutesAvailable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isWirelessRouteActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maximumVolumeSliderImageForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='minimumVolumeSliderImageForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='routeButtonImageForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='routeButtonRectForBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setMaximumVolumeSliderImage:forState:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumVolumeSliderImage:forState:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRouteButtonImage:forState:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsRouteButton:'>
<arg declared_type64='BOOL' index='0' name='showsRouteButton' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsVolumeSlider:'>
<arg declared_type64='BOOL' index='0' name='showsVolumeSlider' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolumeThumbImage:forState:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolumeWarningSliderImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='volumeWarningSliderImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsRouteButton'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsVolumeSlider'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='volumeSliderRectForBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='volumeThumbImageForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='volumeThumbRectForBounds:volumeSliderRect:value:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='float' index='2' name='value' type64='f'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='volumeWarningSliderImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='beginLoadingChildItemsAtIndexPath:completionHandler:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginSeekingBackward'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginSeekingForward'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='childItemsDisplayPlaybackProgressAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contentItemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='MPContentItem * _Nullable' type64='@'/>
</method>
<method selector='contentItemForIdentifier:completionHandler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(MPContentItem * _Nullable, NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='MPContentItem * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='currentPlaybackRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='currentPlaybackTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='endSeeking'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isPreparedToPlay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mediaPicker:didPickMediaItems:'>
<arg declared_type64='MPMediaPickerController * _Nonnull' index='0' name='mediaPicker' type64='@'/>
<arg declared_type64='MPMediaItemCollection * _Nonnull' index='1' name='mediaItemCollection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mediaPickerDidCancel:'>
<arg declared_type64='MPMediaPickerController * _Nonnull' index='0' name='mediaPicker' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfChildItemsAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='openToPlayQueueDescriptor:'>
<arg declared_type64='MPMusicPlayerQueueDescriptor * _Nonnull' index='0' name='queueDescriptor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pause'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='play'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playableContentManager:didUpdateContext:'>
<arg declared_type64='MPPlayableContentManager * _Nonnull' index='0' name='contentManager' type64='@'/>
<arg declared_type64='MPPlayableContentManagerContext * _Nonnull' index='1' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playableContentManager:initializePlaybackQueueWithCompletionHandler:'>
<arg declared_type64='MPPlayableContentManager * _Nonnull' index='0' name='contentManager' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playableContentManager:initializePlaybackQueueWithContentItems:completionHandler:'>
<arg declared_type64='MPPlayableContentManager * _Nonnull' index='0' name='contentManager' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='contentItems' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:'>
<arg declared_type64='MPPlayableContentManager * _Nonnull' index='0' name='contentManager' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCurrentPlaybackRate:'>
<arg declared_type64='float' index='0' name='currentPlaybackRate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCurrentPlaybackTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='currentPlaybackTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSUserActivity'>
<method selector='externalMediaContentIdentifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setExternalMediaContentIdentifier:'>
<arg declared_type64='NSString * _Nullable' index='0' name='externalMediaContentIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIViewController'>
<method selector='dismissMoviePlayerViewControllerAnimated'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentMoviePlayerViewControllerAnimated:'>
<arg declared_type64='MPMoviePlayerViewController*' index='0' name='moviePlayerViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<informal_protocol name='MPMediaPickerControllerDelegate'>
<method selector='mediaPicker:didPickMediaItems:' type64='v32@0:8@16@24'>
<arg declared_type64='MPMediaPickerController * _Nonnull' index='0' name='mediaPicker' type64='@'/>
<arg declared_type64='MPMediaItemCollection * _Nonnull' index='1' name='mediaItemCollection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mediaPickerDidCancel:' type64='v24@0:8@16'>
<arg declared_type64='MPMediaPickerController * _Nonnull' index='0' name='mediaPicker' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='MPMediaPlayback'>
<method selector='beginSeekingBackward' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginSeekingForward' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='currentPlaybackRate' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='currentPlaybackTime' type64='d16@0:8'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='endSeeking' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isPreparedToPlay' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pause' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='play' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareToPlay' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCurrentPlaybackRate:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='currentPlaybackRate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCurrentPlaybackTime:' type64='v24@0:8d16'>
<arg declared_type64='NSTimeInterval' index='0' name='currentPlaybackTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stop' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='MPPlayableContentDataSource'>
<method selector='beginLoadingChildItemsAtIndexPath:completionHandler:' type64='v32@0:8@16@?24'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='childItemsDisplayPlaybackProgressAtIndexPath:' type64='B24@0:8@16'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contentItemAtIndexPath:' type64='@24@0:8@16'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='MPContentItem * _Nullable' type64='@'/>
</method>
<method selector='contentItemForIdentifier:completionHandler:' type64='v32@0:8@16@?24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(MPContentItem * _Nullable, NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='MPContentItem * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfChildItemsAtIndexPath:' type64='q24@0:8@16'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='MPPlayableContentDelegate'>
<method selector='playableContentManager:didUpdateContext:' type64='v32@0:8@16@24'>
<arg declared_type64='MPPlayableContentManager * _Nonnull' index='0' name='contentManager' type64='@'/>
<arg declared_type64='MPPlayableContentManagerContext * _Nonnull' index='1' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playableContentManager:initializePlaybackQueueWithCompletionHandler:' type64='v32@0:8@16@?24'>
<arg declared_type64='MPPlayableContentManager * _Nonnull' index='0' name='contentManager' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playableContentManager:initializePlaybackQueueWithContentItems:completionHandler:' type64='v40@0:8@16@24@?32'>
<arg declared_type64='MPPlayableContentManager * _Nonnull' index='0' name='contentManager' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='contentItems' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:' type64='v40@0:8@16@24@?32'>
<arg declared_type64='MPPlayableContentManager * _Nonnull' index='0' name='contentManager' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='MPSystemMusicPlayerController'>
<method selector='openToPlayQueueDescriptor:' type64='v24@0:8@16'>
<arg declared_type64='MPMusicPlayerQueueDescriptor * _Nonnull' index='0' name='queueDescriptor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
</signatures>
