<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type64='PKPushType _Nonnull' name='PKPushTypeComplication' type64='@'/>
<constant const='true' declared_type64='PKPushType _Nonnull' name='PKPushTypeFileProvider' type64='@'/>
<constant const='true' declared_type64='PKPushType _Nonnull' name='PKPushTypeVoIP' type64='@'/>
<class name='NSObject'>
<method selector='pushRegistry:didInvalidatePushTokenForType:'>
<arg declared_type64='PKPushRegistry * _Nonnull' index='0' name='registry' type64='@'/>
<arg declared_type64='PKPushType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pushRegistry:didReceiveIncomingPushWithPayload:forType:'>
<arg declared_type64='PKPushRegistry * _Nonnull' index='0' name='registry' type64='@'/>
<arg declared_type64='PKPushPayload * _Nonnull' index='1' name='payload' type64='@'/>
<arg declared_type64='PKPushType _Nonnull' index='2' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pushRegistry:didReceiveIncomingPushWithPayload:forType:withCompletionHandler:'>
<arg declared_type64='PKPushRegistry * _Nonnull' index='0' name='registry' type64='@'/>
<arg declared_type64='PKPushPayload * _Nonnull' index='1' name='payload' type64='@'/>
<arg declared_type64='PKPushType _Nonnull' index='2' name='type' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='completion' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pushRegistry:didUpdatePushCredentials:forType:'>
<arg declared_type64='PKPushRegistry * _Nonnull' index='0' name='registry' type64='@'/>
<arg declared_type64='PKPushCredentials * _Nonnull' index='1' name='pushCredentials' type64='@'/>
<arg declared_type64='PKPushType _Nonnull' index='2' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='PKPushCredentials'>
<method selector='token'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='PKPushType _Nonnull' type64='@'/>
</method>
</class>
<class name='PKPushPayload'>
<method selector='dictionaryPayload'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='PKPushType _Nonnull' type64='@'/>
</method>
</class>
<class name='PKPushRegistry'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='desiredPushTypes'>
<retval declared_type64='NSSet * _Nullable' type64='@'/>
</method>
<method selector='initWithQueue:'>
<arg declared_type64='dispatch_queue_t _Nullable' index='0' name='queue' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='pushTokenForType:'>
<arg declared_type64='PKPushType _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDesiredPushTypes:'>
<arg declared_type64='NSSet * _Nullable' index='0' name='desiredPushTypes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<informal_protocol name='PKPushRegistryDelegate'>
<method selector='pushRegistry:didInvalidatePushTokenForType:' type64='v32@0:8@16@24'>
<arg declared_type64='PKPushRegistry * _Nonnull' index='0' name='registry' type64='@'/>
<arg declared_type64='PKPushType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pushRegistry:didReceiveIncomingPushWithPayload:forType:' type64='v40@0:8@16@24@32'>
<arg declared_type64='PKPushRegistry * _Nonnull' index='0' name='registry' type64='@'/>
<arg declared_type64='PKPushPayload * _Nonnull' index='1' name='payload' type64='@'/>
<arg declared_type64='PKPushType _Nonnull' index='2' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pushRegistry:didReceiveIncomingPushWithPayload:forType:withCompletionHandler:' type64='v48@0:8@16@24@32@?40'>
<arg declared_type64='PKPushRegistry * _Nonnull' index='0' name='registry' type64='@'/>
<arg declared_type64='PKPushPayload * _Nonnull' index='1' name='payload' type64='@'/>
<arg declared_type64='PKPushType _Nonnull' index='2' name='type' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='completion' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pushRegistry:didUpdatePushCredentials:forType:' type64='v40@0:8@16@24@32'>
<arg declared_type64='PKPushRegistry * _Nonnull' index='0' name='registry' type64='@'/>
<arg declared_type64='PKPushCredentials * _Nonnull' index='1' name='pushCredentials' type64='@'/>
<arg declared_type64='PKPushType _Nonnull' index='2' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
</signatures>
