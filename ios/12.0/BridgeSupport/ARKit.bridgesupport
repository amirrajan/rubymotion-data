<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationBrowDownLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationBrowDownRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationBrowInnerUp' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationBrowOuterUpLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationBrowOuterUpRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationCheekPuff' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationCheekSquintLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationCheekSquintRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeBlinkLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeBlinkRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeLookDownLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeLookDownRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeLookInLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeLookInRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeLookOutLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeLookOutRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeLookUpLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeLookUpRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeSquintLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeSquintRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeWideLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationEyeWideRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationJawForward' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationJawLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationJawOpen' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationJawRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthClose' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthDimpleLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthDimpleRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthFrownLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthFrownRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthFunnel' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthLowerDownLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthLowerDownRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthPressLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthPressRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthPucker' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthRollLower' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthRollUpper' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthShrugLower' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthShrugUpper' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthSmileLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthSmileRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthStretchLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthStretchRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthUpperUpLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationMouthUpperUpRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationNoseSneerLeft' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationNoseSneerRight' type='@'/>
<constant const='true' declared_type='ARBlendShapeLocation _Nonnull' name='ARBlendShapeLocationTongueOut' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='ARErrorDomain' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='ARReferenceObjectArchiveExtension' type='@'/>
<constant const='true' declared_type='SCNDebugOptions' name='ARSCNDebugOptionShowFeaturePoints' type='I' type64='Q'/>
<constant const='true' declared_type='SCNDebugOptions' name='ARSCNDebugOptionShowWorldOrigin' type='I' type64='Q'/>
<enum name='AREnvironmentTexturingAutomatic' value='2'/>
<enum name='AREnvironmentTexturingManual' value='1'/>
<enum name='AREnvironmentTexturingNone' value='0'/>
<enum name='ARErrorCodeCameraUnauthorized' value='103'/>
<enum name='ARErrorCodeFileIOFailed' value='500'/>
<enum name='ARErrorCodeInsufficientFeatures' value='400'/>
<enum name='ARErrorCodeInvalidConfiguration' value='303'/>
<enum name='ARErrorCodeInvalidReferenceImage' value='300'/>
<enum name='ARErrorCodeInvalidReferenceObject' value='301'/>
<enum name='ARErrorCodeInvalidWorldMap' value='302'/>
<enum name='ARErrorCodeMicrophoneUnauthorized' value='104'/>
<enum name='ARErrorCodeObjectMergeFailed' value='401'/>
<enum name='ARErrorCodeSensorFailed' value='102'/>
<enum name='ARErrorCodeSensorUnavailable' value='101'/>
<enum name='ARErrorCodeUnsupportedConfiguration' value='100'/>
<enum name='ARErrorCodeWorldTrackingFailed' value='200'/>
<enum name='ARHitTestResultTypeEstimatedHorizontalPlane' value='2'/>
<enum name='ARHitTestResultTypeEstimatedVerticalPlane' value='4'/>
<enum name='ARHitTestResultTypeExistingPlane' value='8'/>
<enum name='ARHitTestResultTypeExistingPlaneUsingExtent' value='16'/>
<enum name='ARHitTestResultTypeExistingPlaneUsingGeometry' value='32'/>
<enum name='ARHitTestResultTypeFeaturePoint' value='1'/>
<enum name='ARPlaneAnchorAlignmentHorizontal' value='0'/>
<enum name='ARPlaneAnchorAlignmentVertical' value='1'/>
<enum name='ARPlaneClassificationCeiling' value='3'/>
<enum name='ARPlaneClassificationFloor' value='2'/>
<enum name='ARPlaneClassificationNone' value='0'/>
<enum name='ARPlaneClassificationSeat' value='5'/>
<enum name='ARPlaneClassificationStatusKnown' value='3'/>
<enum name='ARPlaneClassificationStatusNotAvailable' value='0'/>
<enum name='ARPlaneClassificationStatusUndetermined' value='1'/>
<enum name='ARPlaneClassificationStatusUnknown' value='2'/>
<enum name='ARPlaneClassificationTable' value='4'/>
<enum name='ARPlaneClassificationWall' value='1'/>
<enum name='ARPlaneDetectionHorizontal' value='1'/>
<enum name='ARPlaneDetectionNone' value='0'/>
<enum name='ARPlaneDetectionVertical' value='2'/>
<enum name='ARSessionRunOptionRemoveExistingAnchors' value='2'/>
<enum name='ARSessionRunOptionResetTracking' value='1'/>
<enum name='ARTrackingStateLimited' value='1'/>
<enum name='ARTrackingStateNormal' value='2'/>
<enum name='ARTrackingStateNotAvailable' value='0'/>
<enum name='ARTrackingStateReasonExcessiveMotion' value='2'/>
<enum name='ARTrackingStateReasonInitializing' value='1'/>
<enum name='ARTrackingStateReasonInsufficientFeatures' value='3'/>
<enum name='ARTrackingStateReasonNone' value='0'/>
<enum name='ARTrackingStateReasonRelocalizing' value='4'/>
<enum name='ARWorldAlignmentCamera' value='2'/>
<enum name='ARWorldAlignmentGravity' value='0'/>
<enum name='ARWorldAlignmentGravityAndHeading' value='1'/>
<enum name='ARWorldMappingStatusExtending' value='2'/>
<enum name='ARWorldMappingStatusLimited' value='1'/>
<enum name='ARWorldMappingStatusMapped' value='3'/>
<enum name='ARWorldMappingStatusNotAvailable' value='0'/>
<class name='ARAnchor'>
<method selector='identifier'>
<retval declared_type='NSUUID * _Nonnull' type='@'/>
</method>
<method selector='initWithName:transform:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='simd_float4x4' index='1' name='transform' type='{_simd_float4x4=[4]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTransform:'>
<arg declared_type='simd_float4x4' index='0' name='transform' type='{_simd_float4x4=[4]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='transform'>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
</class>
<class name='ARCamera'>
<method selector='eulerAngles'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='imageResolution'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='intrinsics'>
<retval declared_type='simd_float3x3' type='{_simd_float3x3=[3]}'/>
</method>
<method selector='projectPoint:orientation:viewportSize:'>
<arg declared_type='simd_float3' index='0' name='point' type=''/>
<arg declared_type='UIInterfaceOrientation' index='1' name='orientation' type='i' type64='q'/>
<arg declared_type='CGSize' index='2' name='viewportSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='projectionMatrix'>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
<method selector='projectionMatrixForOrientation:viewportSize:zNear:zFar:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='orientation' type='i' type64='q'/>
<arg declared_type='CGSize' index='1' name='viewportSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='CGFloat' index='2' name='zNear' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='zFar' type='f' type64='d'/>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
<method selector='trackingState'>
<retval declared_type='ARTrackingState' type='i' type64='q'/>
</method>
<method selector='trackingStateReason'>
<retval declared_type='ARTrackingStateReason' type='i' type64='q'/>
</method>
<method selector='transform'>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
<method selector='unprojectPoint:ontoPlaneWithTransform:orientation:viewportSize:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='simd_float4x4' index='1' name='planeTransform' type='{_simd_float4x4=[4]}'/>
<arg declared_type='UIInterfaceOrientation' index='2' name='orientation' type='i' type64='q'/>
<arg declared_type='CGSize' index='3' name='viewportSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='viewMatrixForOrientation:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
</class>
<class name='ARConfiguration'>
<method selector='isLightEstimationEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='providesAudioData'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setLightEstimationEnabled:'>
<arg declared_type='BOOL' index='0' name='lightEstimationEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProvidesAudioData:'>
<arg declared_type='BOOL' index='0' name='providesAudioData' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoFormat:'>
<arg declared_type='ARVideoFormat * _Nonnull' index='0' name='videoFormat' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWorldAlignment:'>
<arg declared_type='ARWorldAlignment' index='0' name='worldAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='supportedVideoFormats'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='videoFormat'>
<retval declared_type='ARVideoFormat * _Nonnull' type='@'/>
</method>
<method selector='worldAlignment'>
<retval declared_type='ARWorldAlignment' type='i' type64='q'/>
</method>
</class>
<class name='ARDirectionalLightEstimate'>
<method selector='primaryLightDirection'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='primaryLightIntensity'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='sphericalHarmonicsCoefficients'>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
</class>
<class name='AREnvironmentProbeAnchor'>
<method selector='environmentTexture'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='extent'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='initWithName:transform:extent:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='simd_float4x4' index='1' name='transform' type='{_simd_float4x4=[4]}'/>
<arg declared_type='simd_float3' index='2' name='extent' type=''/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTransform:extent:'>
<arg declared_type='simd_float4x4' index='0' name='transform' type='{_simd_float4x4=[4]}'/>
<arg declared_type='simd_float3' index='1' name='extent' type=''/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='ARFaceAnchor'>
<method selector='blendShapes'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='geometry'>
<retval declared_type='ARFaceGeometry * _Nonnull' type='@'/>
</method>
<method selector='leftEyeTransform'>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
<method selector='lookAtPoint'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='rightEyeTransform'>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
</class>
<class name='ARFaceGeometry'>
<method selector='initWithBlendShapes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='blendShapes' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='textureCoordinateCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='textureCoordinates'>
<retval const='true' declared_type='simd_float2 * _Nonnull' type='^'/>
</method>
<method selector='triangleCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='triangleIndices'>
<retval const='true' declared_type='int16_t * _Nonnull' type='^s'/>
</method>
<method selector='vertexCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='vertices'>
<retval const='true' declared_type='simd_float3 * _Nonnull' type='^'/>
</method>
</class>
<class name='ARFaceTrackingConfiguration'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='new'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='ARFrame'>
<method selector='anchors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='camera'>
<retval declared_type='ARCamera * _Nonnull' type='@'/>
</method>
<method selector='capturedDepthData'>
<retval declared_type='AVDepthData * _Nullable' type='@'/>
</method>
<method selector='capturedDepthDataTimestamp'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='capturedImage'>
<retval declared_type='CVPixelBufferRef _Nonnull' type='^{__CVBuffer=}'/>
</method>
<method selector='displayTransformForOrientation:viewportSize:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='orientation' type='i' type64='q'/>
<arg declared_type='CGSize' index='1' name='viewportSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='hitTest:types:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='ARHitTestResultType' index='1' name='types' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='lightEstimate'>
<retval declared_type='ARLightEstimate * _Nullable' type='@'/>
</method>
<method selector='rawFeaturePoints'>
<retval declared_type='ARPointCloud * _Nullable' type='@'/>
</method>
<method selector='timestamp'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='worldMappingStatus'>
<retval declared_type='ARWorldMappingStatus' type='i' type64='q'/>
</method>
</class>
<class name='ARHitTestResult'>
<method selector='anchor'>
<retval declared_type='ARAnchor * _Nullable' type='@'/>
</method>
<method selector='distance'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='localTransform'>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
<method selector='type'>
<retval declared_type='ARHitTestResultType' type='I' type64='Q'/>
</method>
<method selector='worldTransform'>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
</class>
<class name='ARImageAnchor'>
<method selector='referenceImage'>
<retval declared_type='ARReferenceImage * _Nonnull' type='@'/>
</method>
</class>
<class name='ARImageTrackingConfiguration'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isAutoFocusEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumNumberOfTrackedImages'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='new'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAutoFocusEnabled:'>
<arg declared_type='BOOL' index='0' name='autoFocusEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfTrackedImages:'>
<arg declared_type='NSInteger' index='0' name='maximumNumberOfTrackedImages' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrackingImages:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='trackingImages' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackingImages'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
</class>
<class name='ARLightEstimate'>
<method selector='ambientColorTemperature'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='ambientIntensity'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='ARObjectAnchor'>
<method selector='referenceObject'>
<retval declared_type='ARReferenceObject * _Nonnull' type='@'/>
</method>
</class>
<class name='ARObjectScanningConfiguration'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isAutoFocusEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='new'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='planeDetection'>
<retval declared_type='ARPlaneDetection' type='I' type64='Q'/>
</method>
<method selector='setAutoFocusEnabled:'>
<arg declared_type='BOOL' index='0' name='autoFocusEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaneDetection:'>
<arg declared_type='ARPlaneDetection' index='0' name='planeDetection' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AROrientationTrackingConfiguration'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isAutoFocusEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='new'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAutoFocusEnabled:'>
<arg declared_type='BOOL' index='0' name='autoFocusEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ARPlaneAnchor'>
<method selector='alignment'>
<retval declared_type='ARPlaneAnchorAlignment' type='i' type64='q'/>
</method>
<method selector='center'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='classification'>
<retval declared_type='ARPlaneClassification' type='i' type64='q'/>
</method>
<method selector='classificationStatus'>
<retval declared_type='ARPlaneClassificationStatus' type='i' type64='q'/>
</method>
<method selector='extent'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='geometry'>
<retval declared_type='ARPlaneGeometry * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='isClassificationSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='ARPlaneGeometry'>
<method selector='boundaryVertexCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='boundaryVertices'>
<retval const='true' declared_type='simd_float3 * _Nonnull' type='^'/>
</method>
<method selector='textureCoordinateCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='textureCoordinates'>
<retval const='true' declared_type='simd_float2 * _Nonnull' type='^'/>
</method>
<method selector='triangleCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='triangleIndices'>
<retval const='true' declared_type='int16_t * _Nonnull' type='^s'/>
</method>
<method selector='vertexCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='vertices'>
<retval const='true' declared_type='simd_float3 * _Nonnull' type='^'/>
</method>
</class>
<class name='ARPointCloud'>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='identifiers'>
<retval const='true' declared_type='uint64_t * _Nonnull' type='^Q'/>
</method>
<method selector='points'>
<retval const='true' declared_type='simd_float3 * _Nonnull' type='^'/>
</method>
</class>
<class name='ARReferenceImage'>
<method selector='initWithCGImage:orientation:physicalWidth:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='image' type='^{CGImage=}'/>
<arg declared_type='CGImagePropertyOrientation' index='1' name='orientation' type='I'/>
<arg declared_type='CGFloat' index='2' name='physicalWidth' type='f' type64='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithPixelBuffer:orientation:physicalWidth:'>
<arg declared_type='CVPixelBufferRef _Nonnull' index='0' name='pixelBuffer' type='^{__CVBuffer=}'/>
<arg declared_type='CGImagePropertyOrientation' index='1' name='orientation' type='I'/>
<arg declared_type='CGFloat' index='2' name='physicalWidth' type='f' type64='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='physicalSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='referenceImagesInGroupNamed:bundle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='bundle' type='@'/>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ARReferenceObject'>
<method selector='center'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='exportObjectToURL:previewImage:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='UIImage * _Nullable' index='1' name='previewImage' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='extent'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='initWithArchiveURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='rawFeaturePoints'>
<retval declared_type='ARPointCloud * _Nonnull' type='@'/>
</method>
<method selector='referenceObjectByApplyingTransform:'>
<arg declared_type='simd_float4x4' index='0' name='transform' type='{_simd_float4x4=[4]}'/>
<retval declared_type='ARReferenceObject * _Nonnull' type='@'/>
</method>
<method selector='referenceObjectByMergingObject:error:'>
<arg declared_type='ARReferenceObject * _Nonnull' index='0' name='object' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='ARReferenceObject * _Nullable' type='@'/>
</method>
<method class_method='true' selector='referenceObjectsInGroupNamed:bundle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='bundle' type='@'/>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method selector='scale'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ARSCNFaceGeometry'>
<method class_method='true' selector='faceGeometryWithDevice:'>
<arg declared_type='id _Nonnull' index='0' name='device' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method class_method='true' selector='faceGeometryWithDevice:fillMesh:'>
<arg declared_type='id _Nonnull' index='0' name='device' type='@'/>
<arg declared_type='BOOL' index='1' name='fillMesh' type='B'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='updateFromFaceGeometry:'>
<arg declared_type='ARFaceGeometry * _Nonnull' index='0' name='faceGeometry' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ARSCNPlaneGeometry'>
<method class_method='true' selector='planeGeometryWithDevice:'>
<arg declared_type='id _Nonnull' index='0' name='device' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='updateFromPlaneGeometry:'>
<arg declared_type='ARPlaneGeometry * _Nonnull' index='0' name='planeGeometry' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ARSCNView'>
<method selector='anchorForNode:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='ARAnchor * _Nullable' type='@'/>
</method>
<method selector='automaticallyUpdatesLighting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='hitTest:types:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='ARHitTestResultType' index='1' name='types' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='nodeForAnchor:'>
<arg declared_type='ARAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='scene'>
<retval declared_type='SCNScene * _Nonnull' type='@'/>
</method>
<method selector='session'>
<retval declared_type='ARSession * _Nonnull' type='@'/>
</method>
<method selector='setAutomaticallyUpdatesLighting:'>
<arg declared_type='BOOL' index='0' name='automaticallyUpdatesLighting' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScene:'>
<arg declared_type='SCNScene * _Nonnull' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSession:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unprojectPoint:ontoPlaneWithTransform:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='simd_float4x4' index='1' name='planeTransform' type='{_simd_float4x4=[4]}'/>
<retval declared_type='simd_float3' type=''/>
</method>
</class>
<class name='ARSKView'>
<method selector='anchorForNode:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='ARAnchor * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='NSObject * _Nullable' type='@'/>
</method>
<method selector='hitTest:types:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='ARHitTestResultType' index='1' name='types' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='nodeForAnchor:'>
<arg declared_type='ARAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='SKNode * _Nullable' type='@'/>
</method>
<method selector='session'>
<retval declared_type='ARSession * _Nonnull' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='NSObject * _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSession:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ARSession'>
<method selector='addAnchor:'>
<arg declared_type='ARAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='configuration'>
<retval declared_type='ARConfiguration * _Nullable' type='@'/>
</method>
<method selector='createReferenceObjectWithTransform:center:extent:completionHandler:'>
<arg declared_type='simd_float4x4' index='0' name='transform' type='{_simd_float4x4=[4]}'/>
<arg declared_type='simd_float3' index='1' name='center' type=''/>
<arg declared_type='simd_float3' index='2' name='extent' type=''/>
<arg declared_type='void (^ _Nonnull)(ARReferenceObject * _Nullable, NSError * _Nullable)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='ARReferenceObject * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentFrame'>
<retval declared_type='ARFrame * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type='dispatch_queue_t _Nullable' type='@'/>
</method>
<method selector='getCurrentWorldMapWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(ARWorldMap * _Nullable, NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='ARWorldMap * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnchor:'>
<arg declared_type='ARAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runWithConfiguration:'>
<arg declared_type='ARConfiguration * _Nonnull' index='0' name='configuration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runWithConfiguration:options:'>
<arg declared_type='ARConfiguration * _Nonnull' index='0' name='configuration' type='@'/>
<arg declared_type='ARSessionRunOptions' index='1' name='options' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegateQueue:'>
<arg declared_type='dispatch_queue_t _Nullable' index='0' name='delegateQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWorldOrigin:'>
<arg declared_type='simd_float4x4' index='0' name='relativeTransform' type='{_simd_float4x4=[4]}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ARVideoFormat'>
<method selector='framesPerSecond'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='imageResolution'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='ARWorldMap'>
<method selector='anchors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='center'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='extent'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='rawFeaturePoints'>
<retval declared_type='ARPointCloud * _Nonnull' type='@'/>
</method>
<method selector='setAnchors:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='anchors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ARWorldTrackingConfiguration'>
<method selector='detectionImages'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='detectionObjects'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='environmentTexturing'>
<retval declared_type='AREnvironmentTexturing' type='i' type64='q'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initialWorldMap'>
<retval declared_type='ARWorldMap * _Nullable' type='@'/>
</method>
<method selector='isAutoFocusEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumNumberOfTrackedImages'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='new'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='planeDetection'>
<retval declared_type='ARPlaneDetection' type='I' type64='Q'/>
</method>
<method selector='setAutoFocusEnabled:'>
<arg declared_type='BOOL' index='0' name='autoFocusEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetectionImages:'>
<arg declared_type='NSSet * _Nullable' index='0' name='detectionImages' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetectionObjects:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='detectionObjects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnvironmentTexturing:'>
<arg declared_type='AREnvironmentTexturing' index='0' name='environmentTexturing' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInitialWorldMap:'>
<arg declared_type='ARWorldMap * _Nullable' index='0' name='initialWorldMap' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfTrackedImages:'>
<arg declared_type='NSInteger' index='0' name='maximumNumberOfTrackedImages' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaneDetection:'>
<arg declared_type='ARPlaneDetection' index='0' name='planeDetection' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='initWithAnchor:'>
<arg declared_type='ARAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isTracked'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='renderer:didAddNode:forAnchor:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:didRemoveNode:forAnchor:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:didUpdateNode:forAnchor:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:nodeForAnchor:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='1' name='anchor' type='@'/>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='renderer:willUpdateNode:forAnchor:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:cameraDidChangeTrackingState:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='ARCamera * _Nonnull' index='1' name='camera' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:didAddAnchors:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='anchors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:didFailWithError:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:didOutputAudioSampleBuffer:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='CMSampleBufferRef _Nonnull' index='1' name='audioSampleBuffer' type='^{opaqueCMSampleBuffer=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:didRemoveAnchors:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='anchors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:didUpdateAnchors:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='anchors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:didUpdateFrame:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='ARFrame * _Nonnull' index='1' name='frame' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sessionInterruptionEnded:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sessionShouldAttemptRelocalization:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sessionWasInterrupted:'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view:didAddNode:forAnchor:'>
<arg declared_type='ARSKView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view:didRemoveNode:forAnchor:'>
<arg declared_type='ARSKView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view:didUpdateNode:forAnchor:'>
<arg declared_type='ARSKView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view:nodeForAnchor:'>
<arg declared_type='ARSKView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='1' name='anchor' type='@'/>
<retval declared_type='SKNode * _Nullable' type='@'/>
</method>
<method selector='view:willUpdateNode:forAnchor:'>
<arg declared_type='ARSKView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='ARAnchorCopying'>
<method selector='initWithAnchor:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='ARAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='ARSCNViewDelegate'>
<method selector='renderer:didAddNode:forAnchor:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:didRemoveNode:forAnchor:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:didUpdateNode:forAnchor:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:nodeForAnchor:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='1' name='anchor' type='@'/>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='renderer:willUpdateNode:forAnchor:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='ARSKViewDelegate'>
<method selector='view:didAddNode:forAnchor:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='ARSKView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view:didRemoveNode:forAnchor:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='ARSKView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view:didUpdateNode:forAnchor:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='ARSKView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view:nodeForAnchor:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='ARSKView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='1' name='anchor' type='@'/>
<retval declared_type='SKNode * _Nullable' type='@'/>
</method>
<method selector='view:willUpdateNode:forAnchor:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='ARSKView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='ARAnchor * _Nonnull' index='2' name='anchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='ARSessionDelegate'>
<method selector='session:didAddAnchors:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='anchors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:didRemoveAnchors:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='anchors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:didUpdateAnchors:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='anchors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:didUpdateFrame:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='ARFrame * _Nonnull' index='1' name='frame' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='ARSessionObserver'>
<method selector='session:cameraDidChangeTrackingState:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='ARCamera * _Nonnull' index='1' name='camera' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:didFailWithError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session:didOutputAudioSampleBuffer:' type='v16@0:4@8^{opaqueCMSampleBuffer=}12' type64='v32@0:8@16^{opaqueCMSampleBuffer=}24'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='CMSampleBufferRef _Nonnull' index='1' name='audioSampleBuffer' type='^{opaqueCMSampleBuffer=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sessionInterruptionEnded:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sessionShouldAttemptRelocalization:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sessionWasInterrupted:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='ARSession * _Nonnull' index='0' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='ARTrackable'>
<method selector='isTracked' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
</signatures>
