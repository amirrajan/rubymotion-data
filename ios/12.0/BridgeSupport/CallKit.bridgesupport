<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type64='CXCallDirectoryPhoneNumber' name='CXCallDirectoryPhoneNumberMax' type64='q'/>
<constant const='true' declared_type64='NSErrorDomain _Nonnull' name='CXErrorDomain' type64='@'/>
<constant const='true' declared_type64='NSErrorDomain _Nonnull' name='CXErrorDomainCallDirectoryManager' type64='@'/>
<constant const='true' declared_type64='NSErrorDomain _Nonnull' name='CXErrorDomainIncomingCall' type64='@'/>
<constant const='true' declared_type64='NSErrorDomain _Nonnull' name='CXErrorDomainRequestTransaction' type64='@'/>
<enum name='CXCallDirectoryEnabledStatusDisabled' value64='1'/>
<enum name='CXCallDirectoryEnabledStatusEnabled' value64='2'/>
<enum name='CXCallDirectoryEnabledStatusUnknown' value64='0'/>
<enum name='CXCallEndedReasonAnsweredElsewhere' value64='4'/>
<enum name='CXCallEndedReasonDeclinedElsewhere' value64='5'/>
<enum name='CXCallEndedReasonFailed' value64='1'/>
<enum name='CXCallEndedReasonRemoteEnded' value64='2'/>
<enum name='CXCallEndedReasonUnanswered' value64='3'/>
<enum name='CXErrorCodeCallDirectoryManagerErrorCurrentlyLoading' value64='7'/>
<enum name='CXErrorCodeCallDirectoryManagerErrorDuplicateEntries' value64='4'/>
<enum name='CXErrorCodeCallDirectoryManagerErrorEntriesOutOfOrder' value64='3'/>
<enum name='CXErrorCodeCallDirectoryManagerErrorExtensionDisabled' value64='6'/>
<enum name='CXErrorCodeCallDirectoryManagerErrorLoadingInterrupted' value64='2'/>
<enum name='CXErrorCodeCallDirectoryManagerErrorMaximumEntriesExceeded' value64='5'/>
<enum name='CXErrorCodeCallDirectoryManagerErrorNoExtensionFound' value64='1'/>
<enum name='CXErrorCodeCallDirectoryManagerErrorUnexpectedIncrementalRemoval' value64='8'/>
<enum name='CXErrorCodeCallDirectoryManagerErrorUnknown' value64='0'/>
<enum name='CXErrorCodeIncomingCallErrorCallUUIDAlreadyExists' value64='2'/>
<enum name='CXErrorCodeIncomingCallErrorFilteredByBlockList' value64='4'/>
<enum name='CXErrorCodeIncomingCallErrorFilteredByDoNotDisturb' value64='3'/>
<enum name='CXErrorCodeIncomingCallErrorUnentitled' value64='1'/>
<enum name='CXErrorCodeIncomingCallErrorUnknown' value64='0'/>
<enum name='CXErrorCodeRequestTransactionErrorCallUUIDAlreadyExists' value64='5'/>
<enum name='CXErrorCodeRequestTransactionErrorEmptyTransaction' value64='3'/>
<enum name='CXErrorCodeRequestTransactionErrorInvalidAction' value64='6'/>
<enum name='CXErrorCodeRequestTransactionErrorMaximumCallGroupsReached' value64='7'/>
<enum name='CXErrorCodeRequestTransactionErrorUnentitled' value64='1'/>
<enum name='CXErrorCodeRequestTransactionErrorUnknown' value64='0'/>
<enum name='CXErrorCodeRequestTransactionErrorUnknownCallProvider' value64='2'/>
<enum name='CXErrorCodeRequestTransactionErrorUnknownCallUUID' value64='4'/>
<enum name='CXErrorCodeUnknownError' value64='0'/>
<enum name='CXHandleTypeEmailAddress' value64='3'/>
<enum name='CXHandleTypeGeneric' value64='1'/>
<enum name='CXHandleTypePhoneNumber' value64='2'/>
<enum name='CXPlayDTMFCallActionTypeHardPause' value64='3'/>
<enum name='CXPlayDTMFCallActionTypeSingleTone' value64='1'/>
<enum name='CXPlayDTMFCallActionTypeSoftPause' value64='2'/>
<class name='CXAction'>
<method selector='UUID'>
<retval declared_type64='NSUUID * _Nonnull' type64='@'/>
</method>
<method selector='fail'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fulfill'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isComplete'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='timeoutDate'>
<retval declared_type64='NSDate * _Nonnull' type64='@'/>
</method>
</class>
<class name='CXAnswerCallAction'>
<method selector='fulfillWithDateConnected:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='dateConnected' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CXCall'>
<method selector='UUID'>
<retval declared_type64='NSUUID * _Nonnull' type64='@'/>
</method>
<method selector='hasConnected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasEnded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEqualToCall:'>
<arg declared_type64='CXCall * _Nonnull' index='0' name='call' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOnHold'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOutgoing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='CXCallAction'>
<method selector='callUUID'>
<retval declared_type64='NSUUID * _Nonnull' type64='@'/>
</method>
<method selector='initWithCallUUID:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='callUUID' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
</class>
<class name='CXCallController'>
<method selector='callObserver'>
<retval declared_type64='CXCallObserver * _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithQueue:'>
<arg declared_type64='dispatch_queue_t _Nonnull' index='0' name='queue' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='requestTransaction:completion:'>
<arg declared_type64='CXTransaction * _Nonnull' index='0' name='transaction' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completion' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requestTransactionWithAction:completion:'>
<arg declared_type64='CXAction * _Nonnull' index='0' name='action' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completion' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requestTransactionWithActions:completion:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='actions' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completion' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CXCallDirectoryExtensionContext'>
<method selector='addBlockingEntryWithNextSequentialPhoneNumber:'>
<arg declared_type64='CXCallDirectoryPhoneNumber' index='0' name='phoneNumber' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addIdentificationEntryWithNextSequentialPhoneNumber:label:'>
<arg declared_type64='CXCallDirectoryPhoneNumber' index='0' name='phoneNumber' type64='q'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='label' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='completeRequestWithCompletionHandler:'>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='0' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='isIncremental'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeAllBlockingEntries'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAllIdentificationEntries'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeBlockingEntryWithPhoneNumber:'>
<arg declared_type64='CXCallDirectoryPhoneNumber' index='0' name='phoneNumber' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeIdentificationEntryWithPhoneNumber:'>
<arg declared_type64='CXCallDirectoryPhoneNumber' index='0' name='phoneNumber' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CXCallDirectoryManager'>
<method selector='getEnabledStatusForExtensionWithIdentifier:completionHandler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(CXCallDirectoryEnabledStatus, NSError * _Nullable)' function_pointer='true' index='1' name='completion' type64='@?'>
<arg declared_type64='CXCallDirectoryEnabledStatus' type64='q'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadExtensionWithIdentifier:completionHandler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='1' name='completion' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type64='CXCallDirectoryManager * _Nonnull' type64='@'/>
</method>
</class>
<class name='CXCallDirectoryProvider'>
<method selector='beginRequestWithExtensionContext:'>
<arg declared_type64='CXCallDirectoryExtensionContext * _Nonnull' index='0' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CXCallObserver'>
<method selector='calls'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='queue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CXCallUpdate'>
<method selector='hasVideo'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='localizedCallerName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='remoteHandle'>
<retval declared_type64='CXHandle * _Nullable' type64='@'/>
</method>
<method selector='setHasVideo:'>
<arg declared_type64='BOOL' index='0' name='hasVideo' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocalizedCallerName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='localizedCallerName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRemoteHandle:'>
<arg declared_type64='CXHandle * _Nullable' index='0' name='remoteHandle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupportsDTMF:'>
<arg declared_type64='BOOL' index='0' name='supportsDTMF' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupportsGrouping:'>
<arg declared_type64='BOOL' index='0' name='supportsGrouping' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupportsHolding:'>
<arg declared_type64='BOOL' index='0' name='supportsHolding' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupportsUngrouping:'>
<arg declared_type64='BOOL' index='0' name='supportsUngrouping' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supportsDTMF'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='supportsGrouping'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='supportsHolding'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='supportsUngrouping'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='CXEndCallAction'>
<method selector='fulfillWithDateEnded:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='dateEnded' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CXHandle'>
<method selector='initWithType:value:'>
<arg declared_type64='CXHandleType' index='0' name='type' type64='q'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='value' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEqualToHandle:'>
<arg declared_type64='CXHandle * _Nonnull' index='0' name='handle' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='type'>
<retval declared_type64='CXHandleType' type64='q'/>
</method>
<method selector='value'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='CXPlayDTMFCallAction'>
<method selector='digits'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='initWithCallUUID:digits:type:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='callUUID' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='digits' type64='@'/>
<arg declared_type64='CXPlayDTMFCallActionType' index='2' name='type' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='setDigits:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='digits' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setType:'>
<arg declared_type64='CXPlayDTMFCallActionType' index='0' name='type' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='type'>
<retval declared_type64='CXPlayDTMFCallActionType' type64='q'/>
</method>
</class>
<class name='CXProvider'>
<method selector='configuration'>
<retval declared_type64='CXProviderConfiguration * _Nonnull' type64='@'/>
</method>
<method selector='initWithConfiguration:'>
<arg declared_type64='CXProviderConfiguration * _Nonnull' index='0' name='configuration' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='invalidate'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pendingCallActionsOfClass:withCallUUID:'>
<arg declared_type64='Class _Nonnull' index='0' name='callActionClass' type64='#'/>
<arg declared_type64='NSUUID * _Nonnull' index='1' name='callUUID' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='pendingTransactions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='reportCallWithUUID:endedAtDate:reason:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='UUID' type64='@'/>
<arg declared_type64='NSDate * _Nullable' index='1' name='dateEnded' type64='@'/>
<arg declared_type64='CXCallEndedReason' index='2' name='endedReason' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reportCallWithUUID:updated:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='UUID' type64='@'/>
<arg declared_type64='CXCallUpdate * _Nonnull' index='1' name='update' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reportNewIncomingCallWithUUID:update:completion:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='UUID' type64='@'/>
<arg declared_type64='CXCallUpdate * _Nonnull' index='1' name='update' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='2' name='completion' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reportOutgoingCallWithUUID:connectedAtDate:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='UUID' type64='@'/>
<arg declared_type64='NSDate * _Nullable' index='1' name='dateConnected' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reportOutgoingCallWithUUID:startedConnectingAtDate:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='UUID' type64='@'/>
<arg declared_type64='NSDate * _Nullable' index='1' name='dateStartedConnecting' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setConfiguration:'>
<arg declared_type64='CXProviderConfiguration * _Nonnull' index='0' name='configuration' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='queue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CXProviderConfiguration'>
<method selector='iconTemplateImageData'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='includesCallsInRecents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithLocalizedName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='localizedName' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='localizedName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='maximumCallGroups'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='maximumCallsPerCallGroup'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='ringtoneSound'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setIconTemplateImageData:'>
<arg declared_type64='NSData * _Nullable' index='0' name='iconTemplateImageData' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIncludesCallsInRecents:'>
<arg declared_type64='BOOL' index='0' name='includesCallsInRecents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumCallGroups:'>
<arg declared_type64='NSUInteger' index='0' name='maximumCallGroups' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumCallsPerCallGroup:'>
<arg declared_type64='NSUInteger' index='0' name='maximumCallsPerCallGroup' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRingtoneSound:'>
<arg declared_type64='NSString * _Nullable' index='0' name='ringtoneSound' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupportedHandleTypes:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='supportedHandleTypes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupportsVideo:'>
<arg declared_type64='BOOL' index='0' name='supportsVideo' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supportedHandleTypes'>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='supportsVideo'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='CXSetGroupCallAction'>
<method selector='callUUIDToGroupWith'>
<retval declared_type64='NSUUID * _Nullable' type64='@'/>
</method>
<method selector='initWithCallUUID:callUUIDToGroupWith:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='callUUID' type64='@'/>
<arg declared_type64='NSUUID * _Nullable' index='1' name='callUUIDToGroupWith' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='setCallUUIDToGroupWith:'>
<arg declared_type64='NSUUID * _Nullable' index='0' name='callUUIDToGroupWith' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CXSetHeldCallAction'>
<method selector='initWithCallUUID:onHold:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='callUUID' type64='@'/>
<arg declared_type64='BOOL' index='1' name='onHold' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isOnHold'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setOnHold:'>
<arg declared_type64='BOOL' index='0' name='onHold' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CXSetMutedCallAction'>
<method selector='initWithCallUUID:muted:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='callUUID' type64='@'/>
<arg declared_type64='BOOL' index='1' name='muted' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isMuted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setMuted:'>
<arg declared_type64='BOOL' index='0' name='muted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CXStartCallAction'>
<method selector='contactIdentifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='fulfillWithDateStarted:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='dateStarted' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='handle'>
<retval declared_type64='CXHandle * _Nonnull' type64='@'/>
</method>
<method selector='initWithCallUUID:handle:'>
<arg declared_type64='NSUUID * _Nonnull' index='0' name='callUUID' type64='@'/>
<arg declared_type64='CXHandle * _Nonnull' index='1' name='handle' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isVideo'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setContactIdentifier:'>
<arg declared_type64='NSString * _Nullable' index='0' name='contactIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHandle:'>
<arg declared_type64='CXHandle * _Nonnull' index='0' name='handle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideo:'>
<arg declared_type64='BOOL' index='0' name='video' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CXTransaction'>
<method selector='UUID'>
<retval declared_type64='NSUUID * _Nonnull' type64='@'/>
</method>
<method selector='actions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='addAction:'>
<arg declared_type64='CXAction * _Nonnull' index='0' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithAction:'>
<arg declared_type64='CXAction * _Nonnull' index='0' name='action' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithActions:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='actions' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isComplete'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSObject'>
<method selector='callObserver:callChanged:'>
<arg declared_type64='CXCallObserver * _Nonnull' index='0' name='callObserver' type64='@'/>
<arg declared_type64='CXCall * _Nonnull' index='1' name='call' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:didActivateAudioSession:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='AVAudioSession * _Nonnull' index='1' name='audioSession' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:didDeactivateAudioSession:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='AVAudioSession * _Nonnull' index='1' name='audioSession' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:executeTransaction:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXTransaction * _Nonnull' index='1' name='transaction' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='provider:performAnswerCallAction:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXAnswerCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performEndCallAction:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXEndCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performPlayDTMFCallAction:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXPlayDTMFCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performSetGroupCallAction:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXSetGroupCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performSetHeldCallAction:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXSetHeldCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performSetMutedCallAction:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXSetMutedCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performStartCallAction:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXStartCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:timedOutPerformingAction:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='providerDidBegin:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='providerDidReset:'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requestFailedForExtensionContext:withError:'>
<arg declared_type64='CXCallDirectoryExtensionContext * _Nonnull' index='0' name='extensionContext' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<informal_protocol name='CXCallDirectoryExtensionContextDelegate'>
<method selector='requestFailedForExtensionContext:withError:' type64='v32@0:8@16@24'>
<arg declared_type64='CXCallDirectoryExtensionContext * _Nonnull' index='0' name='extensionContext' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='CXCallObserverDelegate'>
<method selector='callObserver:callChanged:' type64='v32@0:8@16@24'>
<arg declared_type64='CXCallObserver * _Nonnull' index='0' name='callObserver' type64='@'/>
<arg declared_type64='CXCall * _Nonnull' index='1' name='call' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='CXProviderDelegate'>
<method selector='provider:didActivateAudioSession:' type64='v32@0:8@16@24'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='AVAudioSession * _Nonnull' index='1' name='audioSession' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:didDeactivateAudioSession:' type64='v32@0:8@16@24'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='AVAudioSession * _Nonnull' index='1' name='audioSession' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:executeTransaction:' type64='B32@0:8@16@24'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXTransaction * _Nonnull' index='1' name='transaction' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='provider:performAnswerCallAction:' type64='v32@0:8@16@24'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXAnswerCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performEndCallAction:' type64='v32@0:8@16@24'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXEndCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performPlayDTMFCallAction:' type64='v32@0:8@16@24'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXPlayDTMFCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performSetGroupCallAction:' type64='v32@0:8@16@24'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXSetGroupCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performSetHeldCallAction:' type64='v32@0:8@16@24'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXSetHeldCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performSetMutedCallAction:' type64='v32@0:8@16@24'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXSetMutedCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:performStartCallAction:' type64='v32@0:8@16@24'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXStartCallAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provider:timedOutPerformingAction:' type64='v32@0:8@16@24'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<arg declared_type64='CXAction * _Nonnull' index='1' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='providerDidBegin:' type64='v24@0:8@16'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='providerDidReset:' type64='v24@0:8@16'>
<arg declared_type64='CXProvider * _Nonnull' index='0' name='provider' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
</signatures>
