<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<cftype gettypeid_func='SSLContextGetTypeID' name='SSLContextRef' type64='^{SSLContext=}'/>
<cftype gettypeid_func='SecAccessControlGetTypeID' name='SecAccessControlRef' type64='^{__SecAccessControl=}'/>
<cftype gettypeid_func='SecCertificateGetTypeID' name='SecCertificateRef' type64='^{__SecCertificate=}'/>
<cftype gettypeid_func='SecIdentityGetTypeID' name='SecIdentityRef' type64='^{__SecIdentity=}'/>
<cftype gettypeid_func='SecKeyGetTypeID' name='SecKeyRef' type64='^{__SecKey=}'/>
<cftype gettypeid_func='SecPolicyGetTypeID' name='SecPolicyRef' type64='^{__SecPolicy=}'/>
<cftype gettypeid_func='SecTrustGetTypeID' name='SecTrustRef' type64='^{__SecTrust=}'/>
<cftype name='SSLConnectionRef' type64='^v'/>
<cftype name='SecRandomRef' type64='^{__SecRandom=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_3DES_fallback' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_ATSv1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_ATSv1_noPFS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_RC4_fallback' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_TLSv1_3DES_fallback' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_TLSv1_RC4_fallback' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_TLSv1_fallback' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_anonymous' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_default' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_legacy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_legacy_DHE' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSSLSessionConfig_standard' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccessControl' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccessGroup' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccessGroupToken' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccessible' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccessibleAfterFirstUnlock' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccessibleAlways' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccessibleAlwaysThisDeviceOnly' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccessibleWhenPasscodeSetThisDeviceOnly' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccessibleWhenUnlocked' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccessibleWhenUnlockedThisDeviceOnly' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAccount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrApplicationLabel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrApplicationTag' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAuthenticationType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeDPA' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeDefault' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeHTMLForm' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeHTTPBasic' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeHTTPDigest' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeMSN' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeNTLM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeRPA' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrCanDecrypt' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrCanDerive' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrCanEncrypt' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrCanSign' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrCanUnwrap' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrCanVerify' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrCanWrap' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrCertificateEncoding' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrCertificateType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrComment' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrCreationDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrCreator' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrEffectiveKeySize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrGeneric' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrIsExtractable' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrIsInvisible' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrIsNegative' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrIsPermanent' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrIsSensitive' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrIssuer' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrKeyClass' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrKeyClassPrivate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrKeyClassPublic' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrKeyClassSymmetric' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrKeySizeInBits' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrKeyType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrKeyTypeEC' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrKeyTypeECSECPrimeRandom' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrKeyTypeRSA' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrLabel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrModificationDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrPath' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrPersistantReference' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrPersistentReference' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrPort' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocol' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolAFP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolAppleTalk' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolDAAP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolEPPC' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolFTP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolFTPAccount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolFTPProxy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolFTPS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolHTTP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolHTTPProxy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolHTTPS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolHTTPSProxy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolIMAP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolIMAPS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolIPP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolIRC' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolIRCS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolLDAP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolLDAPS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolNNTP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolNNTPS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolPOP3' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolPOP3S' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolRTSP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolRTSPProxy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolSMB' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolSMTP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolSOCKS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolSSH' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolTelnet' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrProtocolTelnetS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrPublicKeyHash' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrSecurityDomain' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrSerialNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrServer' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrService' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrSubject' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrSubjectKeyID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrSyncViewHint' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrSynchronizable' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrSynchronizableAny' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrTokenID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrTokenIDSecureEnclave' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecAttrType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecClass' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecClassCertificate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecClassGenericPassword' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecClassIdentity' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecClassInternetPassword' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecClassKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecImportExportPassphrase' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecImportItemCertChain' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecImportItemIdentity' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecImportItemKeyID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecImportItemLabel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecImportItemTrust' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeCofactor' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA224' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA256' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA384' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA512' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeStandard' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA224' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA256' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA384' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA512' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureDigestX962' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureDigestX962SHA1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureDigestX962SHA224' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureDigestX962SHA256' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureDigestX962SHA384' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureDigestX962SHA512' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureMessageX962SHA1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureMessageX962SHA224' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureMessageX962SHA256' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureMessageX962SHA384' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureMessageX962SHA512' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECDSASignatureRFC4754' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA224AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA256AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA384AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA512AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionCofactorX963SHA1AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionCofactorX963SHA224AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionCofactorX963SHA256AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionCofactorX963SHA384AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionCofactorX963SHA512AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA224AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA256AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA384AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA512AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionStandardX963SHA1AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionStandardX963SHA224AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionStandardX963SHA256AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionStandardX963SHA384AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmECIESEncryptionStandardX963SHA512AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionOAEPSHA1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionOAEPSHA1AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionOAEPSHA224' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionOAEPSHA224AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionOAEPSHA256' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionOAEPSHA256AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionOAEPSHA384' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionOAEPSHA384AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionOAEPSHA512' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionOAEPSHA512AESGCM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionPKCS1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSAEncryptionRaw' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureDigestPKCS1v15Raw' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA224' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA256' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA384' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA512' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureDigestPSSSHA1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureDigestPSSSHA224' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureDigestPSSSHA256' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureDigestPSSSHA384' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureDigestPSSSHA512' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA224' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA256' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA384' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA512' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureMessagePSSSHA1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureMessagePSSSHA224' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureMessagePSSSHA256' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureMessagePSSSHA384' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureMessagePSSSHA512' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyAlgorithm _Nonnull' name='kSecKeyAlgorithmRSASignatureRaw' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyKeyExchangeParameter _Nonnull' name='kSecKeyKeyExchangeParameterRequestedSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecKeyKeyExchangeParameter _Nonnull' name='kSecKeyKeyExchangeParameterSharedInfo' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchCaseInsensitive' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchEmailAddressIfPresent' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchIssuers' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchItemList' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchLimit' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchLimitAll' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchLimitOne' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchPolicy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchSearchList' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchSubjectContains' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchTrustedOnly' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecMatchValidOnDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyAppleCodeSigning' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyAppleEAP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyAppleIDValidation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyAppleIPsec' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyApplePassbookSigning' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyApplePayIssuerEncryption' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyAppleRevocation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyAppleSMIME' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyAppleSSL' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyAppleTimeStamping' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyAppleX509Basic' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyClient' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyMacAppStoreReceipt' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyOid' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyRevocationFlags' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPolicyTeamIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPrivateKeyAttrs' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPropertyTypeError' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPropertyTypeTitle' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecPublicKeyAttrs' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SecRandomRef _Nonnull' name='kSecRandomDefault' type64='^{__SecRandom=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecReturnAttributes' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecReturnData' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecReturnPersistentRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecReturnRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecSharedPassword' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecTrustCertificateTransparency' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecTrustCertificateTransparencyWhiteList' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecTrustEvaluationDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecTrustExtendedValidation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecTrustOrganizationName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecTrustResultValue' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecTrustRevocationChecked' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecTrustRevocationValidUntilDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecUseAuthenticationContext' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecUseAuthenticationUI' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecUseAuthenticationUIAllow' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecUseAuthenticationUIFail' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecUseAuthenticationUISkip' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecUseNoAuthenticationUI' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecUseOperationPrompt' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecValueData' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecValuePersistentRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSecValueRef' type64='^{__CFString=}'/>
<enum name='SEC_OS_IPHONE' value64='1'/>
<enum name='SEC_OS_OSX' value64='0'/>
<enum name='SEC_OS_OSX_INCLUDES' value64='0'/>
<enum name='SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA' value64='17'/>
<enum name='SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA' value64='19'/>
<enum name='SSL_DHE_DSS_WITH_DES_CBC_SHA' value64='18'/>
<enum name='SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA' value64='20'/>
<enum name='SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA' value64='22'/>
<enum name='SSL_DHE_RSA_WITH_DES_CBC_SHA' value64='21'/>
<enum name='SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA' value64='11'/>
<enum name='SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA' value64='13'/>
<enum name='SSL_DH_DSS_WITH_DES_CBC_SHA' value64='12'/>
<enum name='SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA' value64='14'/>
<enum name='SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA' value64='16'/>
<enum name='SSL_DH_RSA_WITH_DES_CBC_SHA' value64='15'/>
<enum name='SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA' value64='25'/>
<enum name='SSL_DH_anon_EXPORT_WITH_RC4_40_MD5' value64='23'/>
<enum name='SSL_DH_anon_WITH_3DES_EDE_CBC_SHA' value64='27'/>
<enum name='SSL_DH_anon_WITH_DES_CBC_SHA' value64='26'/>
<enum name='SSL_DH_anon_WITH_RC4_128_MD5' value64='24'/>
<enum name='SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA' value64='29'/>
<enum name='SSL_FORTEZZA_DMS_WITH_NULL_SHA' value64='28'/>
<enum name='SSL_NO_SUCH_CIPHERSUITE' value64='65535'/>
<enum name='SSL_NULL_WITH_NULL_NULL' value64='0'/>
<enum name='SSL_RSA_EXPORT_WITH_DES40_CBC_SHA' value64='8'/>
<enum name='SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5' value64='6'/>
<enum name='SSL_RSA_EXPORT_WITH_RC4_40_MD5' value64='3'/>
<enum name='SSL_RSA_WITH_3DES_EDE_CBC_MD5' value64='65411'/>
<enum name='SSL_RSA_WITH_3DES_EDE_CBC_SHA' value64='10'/>
<enum name='SSL_RSA_WITH_DES_CBC_MD5' value64='65410'/>
<enum name='SSL_RSA_WITH_DES_CBC_SHA' value64='9'/>
<enum name='SSL_RSA_WITH_IDEA_CBC_MD5' value64='65409'/>
<enum name='SSL_RSA_WITH_IDEA_CBC_SHA' value64='7'/>
<enum name='SSL_RSA_WITH_NULL_MD5' value64='1'/>
<enum name='SSL_RSA_WITH_NULL_SHA' value64='2'/>
<enum name='SSL_RSA_WITH_RC2_CBC_MD5' value64='65408'/>
<enum name='SSL_RSA_WITH_RC4_128_MD5' value64='4'/>
<enum name='SSL_RSA_WITH_RC4_128_SHA' value64='5'/>
<enum name='TLS_AES_128_CCM_8_SHA256' value64='4869'/>
<enum name='TLS_AES_128_CCM_SHA256' value64='4868'/>
<enum name='TLS_AES_128_GCM_SHA256' value64='4865'/>
<enum name='TLS_AES_256_GCM_SHA384' value64='4866'/>
<enum name='TLS_CHACHA20_POLY1305_SHA256' value64='4867'/>
<enum name='TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA' value64='19'/>
<enum name='TLS_DHE_DSS_WITH_AES_128_CBC_SHA' value64='50'/>
<enum name='TLS_DHE_DSS_WITH_AES_128_CBC_SHA256' value64='64'/>
<enum name='TLS_DHE_DSS_WITH_AES_128_GCM_SHA256' value64='162'/>
<enum name='TLS_DHE_DSS_WITH_AES_256_CBC_SHA' value64='56'/>
<enum name='TLS_DHE_DSS_WITH_AES_256_CBC_SHA256' value64='106'/>
<enum name='TLS_DHE_DSS_WITH_AES_256_GCM_SHA384' value64='163'/>
<enum name='TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA' value64='143'/>
<enum name='TLS_DHE_PSK_WITH_AES_128_CBC_SHA' value64='144'/>
<enum name='TLS_DHE_PSK_WITH_AES_128_CBC_SHA256' value64='178'/>
<enum name='TLS_DHE_PSK_WITH_AES_128_GCM_SHA256' value64='170'/>
<enum name='TLS_DHE_PSK_WITH_AES_256_CBC_SHA' value64='145'/>
<enum name='TLS_DHE_PSK_WITH_AES_256_CBC_SHA384' value64='179'/>
<enum name='TLS_DHE_PSK_WITH_AES_256_GCM_SHA384' value64='171'/>
<enum name='TLS_DHE_PSK_WITH_NULL_SHA' value64='45'/>
<enum name='TLS_DHE_PSK_WITH_NULL_SHA256' value64='180'/>
<enum name='TLS_DHE_PSK_WITH_NULL_SHA384' value64='181'/>
<enum name='TLS_DHE_PSK_WITH_RC4_128_SHA' value64='142'/>
<enum name='TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA' value64='22'/>
<enum name='TLS_DHE_RSA_WITH_AES_128_CBC_SHA' value64='51'/>
<enum name='TLS_DHE_RSA_WITH_AES_128_CBC_SHA256' value64='103'/>
<enum name='TLS_DHE_RSA_WITH_AES_128_GCM_SHA256' value64='158'/>
<enum name='TLS_DHE_RSA_WITH_AES_256_CBC_SHA' value64='57'/>
<enum name='TLS_DHE_RSA_WITH_AES_256_CBC_SHA256' value64='107'/>
<enum name='TLS_DHE_RSA_WITH_AES_256_GCM_SHA384' value64='159'/>
<enum name='TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA' value64='13'/>
<enum name='TLS_DH_DSS_WITH_AES_128_CBC_SHA' value64='48'/>
<enum name='TLS_DH_DSS_WITH_AES_128_CBC_SHA256' value64='62'/>
<enum name='TLS_DH_DSS_WITH_AES_128_GCM_SHA256' value64='164'/>
<enum name='TLS_DH_DSS_WITH_AES_256_CBC_SHA' value64='54'/>
<enum name='TLS_DH_DSS_WITH_AES_256_CBC_SHA256' value64='104'/>
<enum name='TLS_DH_DSS_WITH_AES_256_GCM_SHA384' value64='165'/>
<enum name='TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA' value64='16'/>
<enum name='TLS_DH_RSA_WITH_AES_128_CBC_SHA' value64='49'/>
<enum name='TLS_DH_RSA_WITH_AES_128_CBC_SHA256' value64='63'/>
<enum name='TLS_DH_RSA_WITH_AES_128_GCM_SHA256' value64='160'/>
<enum name='TLS_DH_RSA_WITH_AES_256_CBC_SHA' value64='55'/>
<enum name='TLS_DH_RSA_WITH_AES_256_CBC_SHA256' value64='105'/>
<enum name='TLS_DH_RSA_WITH_AES_256_GCM_SHA384' value64='161'/>
<enum name='TLS_DH_anon_WITH_3DES_EDE_CBC_SHA' value64='27'/>
<enum name='TLS_DH_anon_WITH_AES_128_CBC_SHA' value64='52'/>
<enum name='TLS_DH_anon_WITH_AES_128_CBC_SHA256' value64='108'/>
<enum name='TLS_DH_anon_WITH_AES_128_GCM_SHA256' value64='166'/>
<enum name='TLS_DH_anon_WITH_AES_256_CBC_SHA' value64='58'/>
<enum name='TLS_DH_anon_WITH_AES_256_CBC_SHA256' value64='109'/>
<enum name='TLS_DH_anon_WITH_AES_256_GCM_SHA384' value64='167'/>
<enum name='TLS_DH_anon_WITH_RC4_128_MD5' value64='24'/>
<enum name='TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA' value64='49160'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA' value64='49161'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256' value64='49187'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256' value64='49195'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA' value64='49162'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384' value64='49188'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384' value64='49196'/>
<enum name='TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256' value64='52393'/>
<enum name='TLS_ECDHE_ECDSA_WITH_NULL_SHA' value64='49158'/>
<enum name='TLS_ECDHE_ECDSA_WITH_RC4_128_SHA' value64='49159'/>
<enum name='TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA' value64='49170'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA' value64='49171'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256' value64='49191'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256' value64='49199'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA' value64='49172'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384' value64='49192'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384' value64='49200'/>
<enum name='TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256' value64='52392'/>
<enum name='TLS_ECDHE_RSA_WITH_NULL_SHA' value64='49168'/>
<enum name='TLS_ECDHE_RSA_WITH_RC4_128_SHA' value64='49169'/>
<enum name='TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA' value64='49155'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA' value64='49156'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256' value64='49189'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256' value64='49197'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA' value64='49157'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384' value64='49190'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384' value64='49198'/>
<enum name='TLS_ECDH_ECDSA_WITH_NULL_SHA' value64='49153'/>
<enum name='TLS_ECDH_ECDSA_WITH_RC4_128_SHA' value64='49154'/>
<enum name='TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA' value64='49165'/>
<enum name='TLS_ECDH_RSA_WITH_AES_128_CBC_SHA' value64='49166'/>
<enum name='TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256' value64='49193'/>
<enum name='TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256' value64='49201'/>
<enum name='TLS_ECDH_RSA_WITH_AES_256_CBC_SHA' value64='49167'/>
<enum name='TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384' value64='49194'/>
<enum name='TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384' value64='49202'/>
<enum name='TLS_ECDH_RSA_WITH_NULL_SHA' value64='49163'/>
<enum name='TLS_ECDH_RSA_WITH_RC4_128_SHA' value64='49164'/>
<enum name='TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA' value64='49175'/>
<enum name='TLS_ECDH_anon_WITH_AES_128_CBC_SHA' value64='49176'/>
<enum name='TLS_ECDH_anon_WITH_AES_256_CBC_SHA' value64='49177'/>
<enum name='TLS_ECDH_anon_WITH_NULL_SHA' value64='49173'/>
<enum name='TLS_ECDH_anon_WITH_RC4_128_SHA' value64='49174'/>
<enum name='TLS_EMPTY_RENEGOTIATION_INFO_SCSV' value64='255'/>
<enum name='TLS_NULL_WITH_NULL_NULL' value64='0'/>
<enum name='TLS_PSK_WITH_3DES_EDE_CBC_SHA' value64='139'/>
<enum name='TLS_PSK_WITH_AES_128_CBC_SHA' value64='140'/>
<enum name='TLS_PSK_WITH_AES_128_CBC_SHA256' value64='174'/>
<enum name='TLS_PSK_WITH_AES_128_GCM_SHA256' value64='168'/>
<enum name='TLS_PSK_WITH_AES_256_CBC_SHA' value64='141'/>
<enum name='TLS_PSK_WITH_AES_256_CBC_SHA384' value64='175'/>
<enum name='TLS_PSK_WITH_AES_256_GCM_SHA384' value64='169'/>
<enum name='TLS_PSK_WITH_NULL_SHA' value64='44'/>
<enum name='TLS_PSK_WITH_NULL_SHA256' value64='176'/>
<enum name='TLS_PSK_WITH_NULL_SHA384' value64='177'/>
<enum name='TLS_PSK_WITH_RC4_128_SHA' value64='138'/>
<enum name='TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA' value64='147'/>
<enum name='TLS_RSA_PSK_WITH_AES_128_CBC_SHA' value64='148'/>
<enum name='TLS_RSA_PSK_WITH_AES_128_CBC_SHA256' value64='182'/>
<enum name='TLS_RSA_PSK_WITH_AES_128_GCM_SHA256' value64='172'/>
<enum name='TLS_RSA_PSK_WITH_AES_256_CBC_SHA' value64='149'/>
<enum name='TLS_RSA_PSK_WITH_AES_256_CBC_SHA384' value64='183'/>
<enum name='TLS_RSA_PSK_WITH_AES_256_GCM_SHA384' value64='173'/>
<enum name='TLS_RSA_PSK_WITH_NULL_SHA' value64='46'/>
<enum name='TLS_RSA_PSK_WITH_NULL_SHA256' value64='184'/>
<enum name='TLS_RSA_PSK_WITH_NULL_SHA384' value64='185'/>
<enum name='TLS_RSA_PSK_WITH_RC4_128_SHA' value64='146'/>
<enum name='TLS_RSA_WITH_3DES_EDE_CBC_SHA' value64='10'/>
<enum name='TLS_RSA_WITH_AES_128_CBC_SHA' value64='47'/>
<enum name='TLS_RSA_WITH_AES_128_CBC_SHA256' value64='60'/>
<enum name='TLS_RSA_WITH_AES_128_GCM_SHA256' value64='156'/>
<enum name='TLS_RSA_WITH_AES_256_CBC_SHA' value64='53'/>
<enum name='TLS_RSA_WITH_AES_256_CBC_SHA256' value64='61'/>
<enum name='TLS_RSA_WITH_AES_256_GCM_SHA384' value64='157'/>
<enum name='TLS_RSA_WITH_NULL_MD5' value64='1'/>
<enum name='TLS_RSA_WITH_NULL_SHA' value64='2'/>
<enum name='TLS_RSA_WITH_NULL_SHA256' value64='59'/>
<enum name='TLS_RSA_WITH_RC4_128_MD5' value64='4'/>
<enum name='TLS_RSA_WITH_RC4_128_SHA' value64='5'/>
<enum name='errSSLBadCert' value64='-9808'/>
<enum name='errSSLBadCertificateStatusResponse' value64='-9862'/>
<enum name='errSSLBadCipherSuite' value64='-9818'/>
<enum name='errSSLBadConfiguration' value64='-9848'/>
<enum name='errSSLBadRecordMac' value64='-9846'/>
<enum name='errSSLBufferOverflow' value64='-9817'/>
<enum name='errSSLCertExpired' value64='-9814'/>
<enum name='errSSLCertNotYetValid' value64='-9815'/>
<enum name='errSSLCertificateRequired' value64='-9863'/>
<enum name='errSSLClientAuthCompleted' value64='-9841'/>
<enum name='errSSLClientCertRequested' value64='-9842'/>
<enum name='errSSLClientHelloReceived' value64='-9851'/>
<enum name='errSSLClosedAbort' value64='-9806'/>
<enum name='errSSLClosedGraceful' value64='-9805'/>
<enum name='errSSLClosedNoNotify' value64='-9816'/>
<enum name='errSSLConfigurationFailed' value64='-9854'/>
<enum name='errSSLConnectionRefused' value64='-9844'/>
<enum name='errSSLCrypto' value64='-9809'/>
<enum name='errSSLDecodeError' value64='-9859'/>
<enum name='errSSLDecompressFail' value64='-9857'/>
<enum name='errSSLDecryptionFail' value64='-9845'/>
<enum name='errSSLFatalAlert' value64='-9802'/>
<enum name='errSSLHandshakeFail' value64='-9858'/>
<enum name='errSSLHostNameMismatch' value64='-9843'/>
<enum name='errSSLIllegalParam' value64='-9830'/>
<enum name='errSSLInappropriateFallback' value64='-9860'/>
<enum name='errSSLInternal' value64='-9810'/>
<enum name='errSSLLast' value64='-9849'/>
<enum name='errSSLMissingExtension' value64='-9861'/>
<enum name='errSSLModuleAttach' value64='-9811'/>
<enum name='errSSLNegotiation' value64='-9801'/>
<enum name='errSSLNetworkTimeout' value64='-9853'/>
<enum name='errSSLNoRootCert' value64='-9813'/>
<enum name='errSSLPeerAccessDenied' value64='-9832'/>
<enum name='errSSLPeerAuthCompleted' value64='-9841'/>
<enum name='errSSLPeerBadCert' value64='-9825'/>
<enum name='errSSLPeerBadRecordMac' value64='-9820'/>
<enum name='errSSLPeerCertExpired' value64='-9828'/>
<enum name='errSSLPeerCertRevoked' value64='-9827'/>
<enum name='errSSLPeerCertUnknown' value64='-9829'/>
<enum name='errSSLPeerDecodeError' value64='-9833'/>
<enum name='errSSLPeerDecompressFail' value64='-9823'/>
<enum name='errSSLPeerDecryptError' value64='-9834'/>
<enum name='errSSLPeerDecryptionFail' value64='-9821'/>
<enum name='errSSLPeerExportRestriction' value64='-9835'/>
<enum name='errSSLPeerHandshakeFail' value64='-9824'/>
<enum name='errSSLPeerInsufficientSecurity' value64='-9837'/>
<enum name='errSSLPeerInternalError' value64='-9838'/>
<enum name='errSSLPeerNoRenegotiation' value64='-9840'/>
<enum name='errSSLPeerProtocolVersion' value64='-9836'/>
<enum name='errSSLPeerRecordOverflow' value64='-9822'/>
<enum name='errSSLPeerUnexpectedMsg' value64='-9819'/>
<enum name='errSSLPeerUnknownCA' value64='-9831'/>
<enum name='errSSLPeerUnsupportedCert' value64='-9826'/>
<enum name='errSSLPeerUserCancelled' value64='-9839'/>
<enum name='errSSLProtocol' value64='-9800'/>
<enum name='errSSLRecordOverflow' value64='-9847'/>
<enum name='errSSLServerAuthCompleted' value64='-9841'/>
<enum name='errSSLSessionNotFound' value64='-9804'/>
<enum name='errSSLTransportReset' value64='-9852'/>
<enum name='errSSLUnexpectedMessage' value64='-9856'/>
<enum name='errSSLUnexpectedRecord' value64='-9849'/>
<enum name='errSSLUnknownPSKIdentity' value64='-9864'/>
<enum name='errSSLUnknownRootCert' value64='-9812'/>
<enum name='errSSLUnrecognizedName' value64='-9865'/>
<enum name='errSSLUnsupportedExtension' value64='-9855'/>
<enum name='errSSLWeakPeerEphemeralDHKey' value64='-9850'/>
<enum name='errSSLWouldBlock' value64='-9803'/>
<enum name='errSSLXCertChainInvalid' value64='-9807'/>
<enum name='errSecACLAddFailed' value64='-67698'/>
<enum name='errSecACLChangeFailed' value64='-67699'/>
<enum name='errSecACLDeleteFailed' value64='-67696'/>
<enum name='errSecACLNotSimple' value64='-25240'/>
<enum name='errSecACLReplaceFailed' value64='-67697'/>
<enum name='errSecAddinLoadFailed' value64='-67711'/>
<enum name='errSecAddinUnloadFailed' value64='-67714'/>
<enum name='errSecAlgorithmMismatch' value64='-67730'/>
<enum name='errSecAllocate' value64='-108'/>
<enum name='errSecAlreadyLoggedIn' value64='-67814'/>
<enum name='errSecAppleAddAppACLSubject' value64='-67589'/>
<enum name='errSecAppleInvalidKeyEndDate' value64='-67593'/>
<enum name='errSecAppleInvalidKeyStartDate' value64='-67592'/>
<enum name='errSecApplePublicKeyIncomplete' value64='-67590'/>
<enum name='errSecAppleSSLv2Rollback' value64='-67595'/>
<enum name='errSecAppleSignatureMismatch' value64='-67591'/>
<enum name='errSecAttachHandleBusy' value64='-67728'/>
<enum name='errSecAttributeNotInContext' value64='-67720'/>
<enum name='errSecAuthFailed' value64='-25293'/>
<enum name='errSecBadReq' value64='-909'/>
<enum name='errSecBlockSizeMismatch' value64='-67810'/>
<enum name='errSecBufferTooSmall' value64='-25301'/>
<enum name='errSecCRLAlreadySigned' value64='-67684'/>
<enum name='errSecCRLBadURI' value64='-67617'/>
<enum name='errSecCRLExpired' value64='-67613'/>
<enum name='errSecCRLNotFound' value64='-67615'/>
<enum name='errSecCRLNotTrusted' value64='-67620'/>
<enum name='errSecCRLNotValidYet' value64='-67614'/>
<enum name='errSecCRLPolicyFailed' value64='-67621'/>
<enum name='errSecCRLServerDown' value64='-67616'/>
<enum name='errSecCallbackFailed' value64='-67695'/>
<enum name='errSecCertificateCannotOperate' value64='-67817'/>
<enum name='errSecCertificateExpired' value64='-67818'/>
<enum name='errSecCertificateNotValidYet' value64='-67819'/>
<enum name='errSecCertificateRevoked' value64='-67820'/>
<enum name='errSecCertificateSuspended' value64='-67821'/>
<enum name='errSecCodeSigningBadCertChainLength' value64='-67647'/>
<enum name='errSecCodeSigningBadPathLengthConstraint' value64='-67649'/>
<enum name='errSecCodeSigningDevelopment' value64='-67651'/>
<enum name='errSecCodeSigningNoBasicConstraints' value64='-67648'/>
<enum name='errSecCodeSigningNoExtendedKeyUsage' value64='-67650'/>
<enum name='errSecConversionError' value64='-67594'/>
<enum name='errSecCoreFoundationUnknown' value64='-4960'/>
<enum name='errSecCreateChainFailed' value64='-25318'/>
<enum name='errSecDataNotAvailable' value64='-25316'/>
<enum name='errSecDataNotModifiable' value64='-25317'/>
<enum name='errSecDataTooLarge' value64='-25302'/>
<enum name='errSecDatabaseLocked' value64='-67869'/>
<enum name='errSecDatastoreIsOpen' value64='-67870'/>
<enum name='errSecDecode' value64='-26275'/>
<enum name='errSecDeviceError' value64='-67727'/>
<enum name='errSecDeviceFailed' value64='-67588'/>
<enum name='errSecDeviceReset' value64='-67587'/>
<enum name='errSecDeviceVerifyFailed' value64='-67812'/>
<enum name='errSecDiskFull' value64='-34'/>
<enum name='errSecDskFull' value64='-34'/>
<enum name='errSecDuplicateCallback' value64='-25297'/>
<enum name='errSecDuplicateItem' value64='-25299'/>
<enum name='errSecDuplicateKeychain' value64='-25296'/>
<enum name='errSecEMMLoadFailed' value64='-67709'/>
<enum name='errSecEMMUnloadFailed' value64='-67710'/>
<enum name='errSecEndOfData' value64='-67634'/>
<enum name='errSecEventNotificationCallbackNotFound' value64='-67723'/>
<enum name='errSecExtendedKeyUsageNotCritical' value64='-67881'/>
<enum name='errSecFieldSpecifiedMultiple' value64='-67866'/>
<enum name='errSecFileTooBig' value64='-67597'/>
<enum name='errSecFunctionFailed' value64='-67677'/>
<enum name='errSecFunctionIntegrityFail' value64='-67670'/>
<enum name='errSecHostNameMismatch' value64='-67602'/>
<enum name='errSecIDPFailure' value64='-67622'/>
<enum name='errSecIO' value64='-36'/>
<enum name='errSecInDarkWake' value64='-25320'/>
<enum name='errSecIncompatibleDatabaseBlob' value64='-67600'/>
<enum name='errSecIncompatibleFieldFormat' value64='-67867'/>
<enum name='errSecIncompatibleKeyBlob' value64='-67601'/>
<enum name='errSecIncompatibleVersion' value64='-67704'/>
<enum name='errSecIncompleteCertRevocationCheck' value64='-67635'/>
<enum name='errSecInputLengthError' value64='-67724'/>
<enum name='errSecInsufficientClientID' value64='-67586'/>
<enum name='errSecInsufficientCredentials' value64='-67822'/>
<enum name='errSecInteractionNotAllowed' value64='-25308'/>
<enum name='errSecInteractionRequired' value64='-25315'/>
<enum name='errSecInternalComponent' value64='-2070'/>
<enum name='errSecInternalError' value64='-67671'/>
<enum name='errSecInvaldCRLAuthority' value64='-67827'/>
<enum name='errSecInvalidACL' value64='-67702'/>
<enum name='errSecInvalidAccessCredentials' value64='-67700'/>
<enum name='errSecInvalidAccessRequest' value64='-67876'/>
<enum name='errSecInvalidAction' value64='-67823'/>
<enum name='errSecInvalidAddinFunctionTable' value64='-67716'/>
<enum name='errSecInvalidAlgorithm' value64='-67747'/>
<enum name='errSecInvalidAlgorithmParms' value64='-67770'/>
<enum name='errSecInvalidAttributeAccessCredentials' value64='-67796'/>
<enum name='errSecInvalidAttributeBase' value64='-67788'/>
<enum name='errSecInvalidAttributeBlockSize' value64='-67764'/>
<enum name='errSecInvalidAttributeDLDBHandle' value64='-67794'/>
<enum name='errSecInvalidAttributeEffectiveBits' value64='-67778'/>
<enum name='errSecInvalidAttributeEndDate' value64='-67782'/>
<enum name='errSecInvalidAttributeInitVector' value64='-67750'/>
<enum name='errSecInvalidAttributeIterationCount' value64='-67792'/>
<enum name='errSecInvalidAttributeKey' value64='-67748'/>
<enum name='errSecInvalidAttributeKeyLength' value64='-67762'/>
<enum name='errSecInvalidAttributeKeyType' value64='-67774'/>
<enum name='errSecInvalidAttributeLabel' value64='-67772'/>
<enum name='errSecInvalidAttributeMode' value64='-67776'/>
<enum name='errSecInvalidAttributeOutputSize' value64='-67766'/>
<enum name='errSecInvalidAttributePadding' value64='-67754'/>
<enum name='errSecInvalidAttributePassphrase' value64='-67760'/>
<enum name='errSecInvalidAttributePrime' value64='-67786'/>
<enum name='errSecInvalidAttributePrivateKeyFormat' value64='-67800'/>
<enum name='errSecInvalidAttributePublicKeyFormat' value64='-67798'/>
<enum name='errSecInvalidAttributeRandom' value64='-67756'/>
<enum name='errSecInvalidAttributeRounds' value64='-67768'/>
<enum name='errSecInvalidAttributeSalt' value64='-67752'/>
<enum name='errSecInvalidAttributeSeed' value64='-67758'/>
<enum name='errSecInvalidAttributeStartDate' value64='-67780'/>
<enum name='errSecInvalidAttributeSubprime' value64='-67790'/>
<enum name='errSecInvalidAttributeSymmetricKeyFormat' value64='-67802'/>
<enum name='errSecInvalidAttributeVersion' value64='-67784'/>
<enum name='errSecInvalidAttributeWrappedKeyFormat' value64='-67804'/>
<enum name='errSecInvalidAuthority' value64='-67824'/>
<enum name='errSecInvalidAuthorityKeyID' value64='-67606'/>
<enum name='errSecInvalidBaseACLs' value64='-67851'/>
<enum name='errSecInvalidBundleInfo' value64='-67857'/>
<enum name='errSecInvalidCRL' value64='-67830'/>
<enum name='errSecInvalidCRLEncoding' value64='-67828'/>
<enum name='errSecInvalidCRLGroup' value64='-67816'/>
<enum name='errSecInvalidCRLIndex' value64='-67858'/>
<enum name='errSecInvalidCRLType' value64='-67829'/>
<enum name='errSecInvalidCallback' value64='-25298'/>
<enum name='errSecInvalidCertAuthority' value64='-67826'/>
<enum name='errSecInvalidCertificateGroup' value64='-67691'/>
<enum name='errSecInvalidCertificateRef' value64='-67690'/>
<enum name='errSecInvalidContext' value64='-67746'/>
<enum name='errSecInvalidDBList' value64='-67681'/>
<enum name='errSecInvalidDBLocation' value64='-67875'/>
<enum name='errSecInvalidData' value64='-67673'/>
<enum name='errSecInvalidDatabaseBlob' value64='-67598'/>
<enum name='errSecInvalidDigestAlgorithm' value64='-67815'/>
<enum name='errSecInvalidEncoding' value64='-67853'/>
<enum name='errSecInvalidExtendedKeyUsage' value64='-67609'/>
<enum name='errSecInvalidFormType' value64='-67831'/>
<enum name='errSecInvalidGUID' value64='-67679'/>
<enum name='errSecInvalidHandle' value64='-67680'/>
<enum name='errSecInvalidHandleUsage' value64='-67668'/>
<enum name='errSecInvalidID' value64='-67832'/>
<enum name='errSecInvalidIDLinkage' value64='-67610'/>
<enum name='errSecInvalidIdentifier' value64='-67833'/>
<enum name='errSecInvalidIndex' value64='-67834'/>
<enum name='errSecInvalidIndexInfo' value64='-67877'/>
<enum name='errSecInvalidInputVector' value64='-67744'/>
<enum name='errSecInvalidItemRef' value64='-25304'/>
<enum name='errSecInvalidKeyAttributeMask' value64='-67738'/>
<enum name='errSecInvalidKeyBlob' value64='-67599'/>
<enum name='errSecInvalidKeyFormat' value64='-67742'/>
<enum name='errSecInvalidKeyHierarchy' value64='-67713'/>
<enum name='errSecInvalidKeyLabel' value64='-67740'/>
<enum name='errSecInvalidKeyRef' value64='-67712'/>
<enum name='errSecInvalidKeyUsageForPolicy' value64='-67608'/>
<enum name='errSecInvalidKeyUsageMask' value64='-67736'/>
<enum name='errSecInvalidKeychain' value64='-25295'/>
<enum name='errSecInvalidLoginName' value64='-67813'/>
<enum name='errSecInvalidModifyMode' value64='-67879'/>
<enum name='errSecInvalidName' value64='-67689'/>
<enum name='errSecInvalidNetworkAddress' value64='-67683'/>
<enum name='errSecInvalidNewOwner' value64='-67878'/>
<enum name='errSecInvalidNumberOfFields' value64='-67685'/>
<enum name='errSecInvalidOutputVector' value64='-67745'/>
<enum name='errSecInvalidOwnerEdit' value64='-25244'/>
<enum name='errSecInvalidPVC' value64='-67708'/>
<enum name='errSecInvalidParsingModule' value64='-67868'/>
<enum name='errSecInvalidPassthroughID' value64='-67682'/>
<enum name='errSecInvalidPasswordRef' value64='-25261'/>
<enum name='errSecInvalidPointer' value64='-67675'/>
<enum name='errSecInvalidPolicyIdentifiers' value64='-67835'/>
<enum name='errSecInvalidPrefsDomain' value64='-25319'/>
<enum name='errSecInvalidQuery' value64='-67693'/>
<enum name='errSecInvalidReason' value64='-67837'/>
<enum name='errSecInvalidRecord' value64='-67701'/>
<enum name='errSecInvalidRequestInputs' value64='-67838'/>
<enum name='errSecInvalidRequestor' value64='-67855'/>
<enum name='errSecInvalidResponseVector' value64='-67839'/>
<enum name='errSecInvalidRoot' value64='-67612'/>
<enum name='errSecInvalidSampleValue' value64='-67703'/>
<enum name='errSecInvalidScope' value64='-67706'/>
<enum name='errSecInvalidSearchRef' value64='-25305'/>
<enum name='errSecInvalidServiceMask' value64='-67717'/>
<enum name='errSecInvalidSignature' value64='-67688'/>
<enum name='errSecInvalidStopOnPolicy' value64='-67840'/>
<enum name='errSecInvalidSubServiceID' value64='-67719'/>
<enum name='errSecInvalidSubjectKeyID' value64='-67607'/>
<enum name='errSecInvalidSubjectName' value64='-67655'/>
<enum name='errSecInvalidTimeString' value64='-67836'/>
<enum name='errSecInvalidTrustSetting' value64='-25242'/>
<enum name='errSecInvalidTrustSettings' value64='-25262'/>
<enum name='errSecInvalidTuple' value64='-67841'/>
<enum name='errSecInvalidTupleCredendtials' value64='-67852'/>
<enum name='errSecInvalidTupleGroup' value64='-67850'/>
<enum name='errSecInvalidValidityPeriod' value64='-67854'/>
<enum name='errSecInvalidValue' value64='-67694'/>
<enum name='errSecItemNotFound' value64='-25300'/>
<enum name='errSecKeyBlobTypeIncorrect' value64='-67732'/>
<enum name='errSecKeyHeaderInconsistent' value64='-67733'/>
<enum name='errSecKeyIsSensitive' value64='-25258'/>
<enum name='errSecKeySizeNotAllowed' value64='-25311'/>
<enum name='errSecKeyUsageIncorrect' value64='-67731'/>
<enum name='errSecLibraryReferenceNotFound' value64='-67715'/>
<enum name='errSecMDSError' value64='-67674'/>
<enum name='errSecMemoryError' value64='-67672'/>
<enum name='errSecMissingAlgorithmParms' value64='-67771'/>
<enum name='errSecMissingAttributeAccessCredentials' value64='-67797'/>
<enum name='errSecMissingAttributeBase' value64='-67789'/>
<enum name='errSecMissingAttributeBlockSize' value64='-67765'/>
<enum name='errSecMissingAttributeDLDBHandle' value64='-67795'/>
<enum name='errSecMissingAttributeEffectiveBits' value64='-67779'/>
<enum name='errSecMissingAttributeEndDate' value64='-67783'/>
<enum name='errSecMissingAttributeInitVector' value64='-67751'/>
<enum name='errSecMissingAttributeIterationCount' value64='-67793'/>
<enum name='errSecMissingAttributeKey' value64='-67749'/>
<enum name='errSecMissingAttributeKeyLength' value64='-67763'/>
<enum name='errSecMissingAttributeKeyType' value64='-67775'/>
<enum name='errSecMissingAttributeLabel' value64='-67773'/>
<enum name='errSecMissingAttributeMode' value64='-67777'/>
<enum name='errSecMissingAttributeOutputSize' value64='-67767'/>
<enum name='errSecMissingAttributePadding' value64='-67755'/>
<enum name='errSecMissingAttributePassphrase' value64='-67761'/>
<enum name='errSecMissingAttributePrime' value64='-67787'/>
<enum name='errSecMissingAttributePrivateKeyFormat' value64='-67801'/>
<enum name='errSecMissingAttributePublicKeyFormat' value64='-67799'/>
<enum name='errSecMissingAttributeRandom' value64='-67757'/>
<enum name='errSecMissingAttributeRounds' value64='-67769'/>
<enum name='errSecMissingAttributeSalt' value64='-67753'/>
<enum name='errSecMissingAttributeSeed' value64='-67759'/>
<enum name='errSecMissingAttributeStartDate' value64='-67781'/>
<enum name='errSecMissingAttributeSubprime' value64='-67791'/>
<enum name='errSecMissingAttributeSymmetricKeyFormat' value64='-67803'/>
<enum name='errSecMissingAttributeVersion' value64='-67785'/>
<enum name='errSecMissingAttributeWrappedKeyFormat' value64='-67805'/>
<enum name='errSecMissingEntitlement' value64='-34018'/>
<enum name='errSecMissingRequiredExtension' value64='-67880'/>
<enum name='errSecMissingValue' value64='-67871'/>
<enum name='errSecMobileMeCSRVerifyFailure' value64='-67665'/>
<enum name='errSecMobileMeFailedConsistencyCheck' value64='-67666'/>
<enum name='errSecMobileMeNoRequestPending' value64='-67664'/>
<enum name='errSecMobileMeRequestAlreadyPending' value64='-67663'/>
<enum name='errSecMobileMeRequestQueued' value64='-67657'/>
<enum name='errSecMobileMeRequestRedirected' value64='-67658'/>
<enum name='errSecMobileMeServerAlreadyExists' value64='-67661'/>
<enum name='errSecMobileMeServerError' value64='-67659'/>
<enum name='errSecMobileMeServerNotAvailable' value64='-67660'/>
<enum name='errSecMobileMeServerServiceErr' value64='-67662'/>
<enum name='errSecModuleManagerInitializeFailed' value64='-67721'/>
<enum name='errSecModuleManagerNotFound' value64='-67722'/>
<enum name='errSecModuleManifestVerifyFailed' value64='-67678'/>
<enum name='errSecModuleNotLoaded' value64='-67718'/>
<enum name='errSecMultiplePrivKeys' value64='-25259'/>
<enum name='errSecMultipleValuesUnsupported' value64='-67842'/>
<enum name='errSecNetworkFailure' value64='-67636'/>
<enum name='errSecNoAccessForItem' value64='-25243'/>
<enum name='errSecNoBasicConstraints' value64='-67604'/>
<enum name='errSecNoBasicConstraintsCA' value64='-67605'/>
<enum name='errSecNoCertificateModule' value64='-25313'/>
<enum name='errSecNoDefaultAuthority' value64='-67844'/>
<enum name='errSecNoDefaultKeychain' value64='-25307'/>
<enum name='errSecNoFieldValues' value64='-67859'/>
<enum name='errSecNoPolicyModule' value64='-25314'/>
<enum name='errSecNoStorageModule' value64='-25312'/>
<enum name='errSecNoSuchAttr' value64='-25303'/>
<enum name='errSecNoSuchClass' value64='-25306'/>
<enum name='errSecNoSuchKeychain' value64='-25294'/>
<enum name='errSecNoTrustSettings' value64='-25263'/>
<enum name='errSecNotAvailable' value64='-25291'/>
<enum name='errSecNotInitialized' value64='-67667'/>
<enum name='errSecNotLoggedIn' value64='-67729'/>
<enum name='errSecNotSigner' value64='-26267'/>
<enum name='errSecNotTrusted' value64='-67843'/>
<enum name='errSecOCSPBadRequest' value64='-67631'/>
<enum name='errSecOCSPBadResponse' value64='-67630'/>
<enum name='errSecOCSPNoSigner' value64='-67640'/>
<enum name='errSecOCSPNotTrustedToAnchor' value64='-67637'/>
<enum name='errSecOCSPResponderInternalError' value64='-67642'/>
<enum name='errSecOCSPResponderMalformedReq' value64='-67641'/>
<enum name='errSecOCSPResponderSignatureRequired' value64='-67644'/>
<enum name='errSecOCSPResponderTryLater' value64='-67643'/>
<enum name='errSecOCSPResponderUnauthorized' value64='-67645'/>
<enum name='errSecOCSPResponseNonceMismatch' value64='-67646'/>
<enum name='errSecOCSPSignatureError' value64='-67639'/>
<enum name='errSecOCSPStatusUnrecognized' value64='-67633'/>
<enum name='errSecOCSPUnavailable' value64='-67632'/>
<enum name='errSecOpWr' value64='-49'/>
<enum name='errSecOutputLengthError' value64='-67725'/>
<enum name='errSecPVCAlreadyConfigured' value64='-67707'/>
<enum name='errSecPVCReferentNotFound' value64='-67669'/>
<enum name='errSecParam' value64='-50'/>
<enum name='errSecPassphraseRequired' value64='-25260'/>
<enum name='errSecPathLengthConstraintExceeded' value64='-67611'/>
<enum name='errSecPkcs12VerifyFailure' value64='-25264'/>
<enum name='errSecPolicyNotFound' value64='-25241'/>
<enum name='errSecPrivilegeNotGranted' value64='-67705'/>
<enum name='errSecPrivilegeNotSupported' value64='-67726'/>
<enum name='errSecPublicKeyInconsistent' value64='-67811'/>
<enum name='errSecQuerySizeUnknown' value64='-67809'/>
<enum name='errSecQuotaExceeded' value64='-67596'/>
<enum name='errSecReadOnly' value64='-25292'/>
<enum name='errSecReadOnlyAttr' value64='-25309'/>
<enum name='errSecRecordModified' value64='-67638'/>
<enum name='errSecRejectedForm' value64='-67845'/>
<enum name='errSecRequestDescriptor' value64='-67856'/>
<enum name='errSecRequestLost' value64='-67846'/>
<enum name='errSecRequestRejected' value64='-67847'/>
<enum name='errSecResourceSignBadCertChainLength' value64='-67652'/>
<enum name='errSecResourceSignBadExtKeyUsage' value64='-67653'/>
<enum name='errSecSMIMEBadExtendedKeyUsage' value64='-67624'/>
<enum name='errSecSMIMEBadKeyUsage' value64='-67625'/>
<enum name='errSecSMIMEEmailAddressesNotFound' value64='-67623'/>
<enum name='errSecSMIMEKeyUsageNotCritical' value64='-67626'/>
<enum name='errSecSMIMENoEmailAddress' value64='-67627'/>
<enum name='errSecSMIMESubjAltNameNotCritical' value64='-67628'/>
<enum name='errSecSSLBadExtendedKeyUsage' value64='-67629'/>
<enum name='errSecSelfCheckFailed' value64='-67676'/>
<enum name='errSecServiceNotAvailable' value64='-67585'/>
<enum name='errSecSigningTimeMissing' value64='-67894'/>
<enum name='errSecStagedOperationInProgress' value64='-67806'/>
<enum name='errSecStagedOperationNotStarted' value64='-67807'/>
<enum name='errSecSuccess' value64='0'/>
<enum name='errSecTagNotFound' value64='-67692'/>
<enum name='errSecTimestampAddInfoNotAvailable' value64='-67892'/>
<enum name='errSecTimestampBadAlg' value64='-67886'/>
<enum name='errSecTimestampBadDataFormat' value64='-67888'/>
<enum name='errSecTimestampBadRequest' value64='-67887'/>
<enum name='errSecTimestampInvalid' value64='-67883'/>
<enum name='errSecTimestampMissing' value64='-67882'/>
<enum name='errSecTimestampNotTrusted' value64='-67884'/>
<enum name='errSecTimestampRejection' value64='-67895'/>
<enum name='errSecTimestampRevocationNotification' value64='-67898'/>
<enum name='errSecTimestampRevocationWarning' value64='-67897'/>
<enum name='errSecTimestampServiceNotAvailable' value64='-67885'/>
<enum name='errSecTimestampSystemFailure' value64='-67893'/>
<enum name='errSecTimestampTimeNotAvailable' value64='-67889'/>
<enum name='errSecTimestampUnacceptedExtension' value64='-67891'/>
<enum name='errSecTimestampUnacceptedPolicy' value64='-67890'/>
<enum name='errSecTimestampWaiting' value64='-67896'/>
<enum name='errSecTrustNotAvailable' value64='-25245'/>
<enum name='errSecTrustSettingDeny' value64='-67654'/>
<enum name='errSecUnimplemented' value64='-4'/>
<enum name='errSecUnknownCRLExtension' value64='-67619'/>
<enum name='errSecUnknownCertExtension' value64='-67618'/>
<enum name='errSecUnknownCriticalExtensionFlag' value64='-67603'/>
<enum name='errSecUnknownFormat' value64='-25257'/>
<enum name='errSecUnknownQualifiedCertStatement' value64='-67656'/>
<enum name='errSecUnknownTag' value64='-67687'/>
<enum name='errSecUnsupportedAddressType' value64='-67848'/>
<enum name='errSecUnsupportedFieldFormat' value64='-67860'/>
<enum name='errSecUnsupportedFormat' value64='-25256'/>
<enum name='errSecUnsupportedIndexInfo' value64='-67861'/>
<enum name='errSecUnsupportedKeyAttributeMask' value64='-67739'/>
<enum name='errSecUnsupportedKeyFormat' value64='-67734'/>
<enum name='errSecUnsupportedKeyLabel' value64='-67741'/>
<enum name='errSecUnsupportedKeySize' value64='-67735'/>
<enum name='errSecUnsupportedKeyUsageMask' value64='-67737'/>
<enum name='errSecUnsupportedLocality' value64='-67862'/>
<enum name='errSecUnsupportedNumAttributes' value64='-67863'/>
<enum name='errSecUnsupportedNumIndexes' value64='-67864'/>
<enum name='errSecUnsupportedNumRecordTypes' value64='-67865'/>
<enum name='errSecUnsupportedNumSelectionPreds' value64='-67873'/>
<enum name='errSecUnsupportedOperator' value64='-67874'/>
<enum name='errSecUnsupportedQueryLimits' value64='-67872'/>
<enum name='errSecUnsupportedService' value64='-67849'/>
<enum name='errSecUnsupportedVectorOfBuffers' value64='-67743'/>
<enum name='errSecUserCanceled' value64='-128'/>
<enum name='errSecVerificationFailure' value64='-67686'/>
<enum name='errSecVerifyActionFailed' value64='-67825'/>
<enum name='errSecVerifyFailed' value64='-67808'/>
<enum name='errSecWrPerm' value64='-61'/>
<enum name='errSecWrongSecVersion' value64='-25310'/>
<enum name='kAlwaysAuthenticate' value64='1'/>
<enum name='kDTLSProtocol1' value64='9'/>
<enum name='kNeverAuthenticate' value64='0'/>
<enum name='kSSLAborted' value64='4'/>
<enum name='kSSLCiphersuiteGroupATS' value64='3'/>
<enum name='kSSLCiphersuiteGroupATSCompatibility' value64='4'/>
<enum name='kSSLCiphersuiteGroupCompatibility' value64='1'/>
<enum name='kSSLCiphersuiteGroupDefault' value64='0'/>
<enum name='kSSLCiphersuiteGroupLegacy' value64='2'/>
<enum name='kSSLClientCertNone' value64='0'/>
<enum name='kSSLClientCertRejected' value64='3'/>
<enum name='kSSLClientCertRequested' value64='1'/>
<enum name='kSSLClientCertSent' value64='2'/>
<enum name='kSSLClientSide' value64='1'/>
<enum name='kSSLClosed' value64='3'/>
<enum name='kSSLConnected' value64='2'/>
<enum name='kSSLDatagramType' value64='1'/>
<enum name='kSSLHandshake' value64='1'/>
<enum name='kSSLIdle' value64='0'/>
<enum name='kSSLProtocol2' value64='1'/>
<enum name='kSSLProtocol3' value64='2'/>
<enum name='kSSLProtocol3Only' value64='3'/>
<enum name='kSSLProtocolAll' value64='6'/>
<enum name='kSSLProtocolUnknown' value64='0'/>
<enum name='kSSLServerSide' value64='0'/>
<enum name='kSSLSessionOptionAllowRenegotiation' value64='8'/>
<enum name='kSSLSessionOptionAllowServerIdentityChange' value64='5'/>
<enum name='kSSLSessionOptionBreakOnCertRequested' value64='1'/>
<enum name='kSSLSessionOptionBreakOnClientAuth' value64='2'/>
<enum name='kSSLSessionOptionBreakOnClientHello' value64='7'/>
<enum name='kSSLSessionOptionBreakOnServerAuth' value64='0'/>
<enum name='kSSLSessionOptionEnableSessionTickets' value64='9'/>
<enum name='kSSLSessionOptionFallback' value64='6'/>
<enum name='kSSLSessionOptionFalseStart' value64='3'/>
<enum name='kSSLSessionOptionSendOneByteRecord' value64='4'/>
<enum name='kSSLStreamType' value64='0'/>
<enum name='kSecAccessControlAnd' value64='32768'/>
<enum name='kSecAccessControlApplicationPassword' value64='2147483648'/>
<enum name='kSecAccessControlBiometryAny' value64='2'/>
<enum name='kSecAccessControlBiometryCurrentSet' value64='8'/>
<enum name='kSecAccessControlDevicePasscode' value64='16'/>
<enum name='kSecAccessControlOr' value64='16384'/>
<enum name='kSecAccessControlPrivateKeyUsage' value64='1073741824'/>
<enum name='kSecAccessControlTouchIDAny' value64='2'/>
<enum name='kSecAccessControlTouchIDCurrentSet' value64='8'/>
<enum name='kSecAccessControlUserPresence' value64='1'/>
<enum name='kSecKeyOperationTypeDecrypt' value64='3'/>
<enum name='kSecKeyOperationTypeEncrypt' value64='2'/>
<enum name='kSecKeyOperationTypeKeyExchange' value64='4'/>
<enum name='kSecKeyOperationTypeSign' value64='0'/>
<enum name='kSecKeyOperationTypeVerify' value64='1'/>
<enum name='kSecPaddingNone' value64='0'/>
<enum name='kSecPaddingOAEP' value64='2'/>
<enum name='kSecPaddingPKCS1' value64='1'/>
<enum name='kSecPaddingPKCS1MD2' value64='32768'/>
<enum name='kSecPaddingPKCS1MD5' value64='32769'/>
<enum name='kSecPaddingPKCS1SHA1' value64='32770'/>
<enum name='kSecPaddingPKCS1SHA224' value64='32771'/>
<enum name='kSecPaddingPKCS1SHA256' value64='32772'/>
<enum name='kSecPaddingPKCS1SHA384' value64='32773'/>
<enum name='kSecPaddingPKCS1SHA512' value64='32774'/>
<enum name='kSecPaddingSigRaw' value64='16384'/>
<enum name='kSecRevocationCRLMethod' value64='2'/>
<enum name='kSecRevocationNetworkAccessDisabled' value64='16'/>
<enum name='kSecRevocationOCSPMethod' value64='1'/>
<enum name='kSecRevocationPreferCRL' value64='4'/>
<enum name='kSecRevocationRequirePositiveResponse' value64='8'/>
<enum name='kSecRevocationUseAnyAvailableMethod' value64='3'/>
<enum name='kSecTrustResultConfirm' value64='2'/>
<enum name='kSecTrustResultDeny' value64='3'/>
<enum name='kSecTrustResultFatalTrustFailure' value64='6'/>
<enum name='kSecTrustResultInvalid' value64='0'/>
<enum name='kSecTrustResultOtherError' value64='7'/>
<enum name='kSecTrustResultProceed' value64='1'/>
<enum name='kSecTrustResultRecoverableTrustFailure' value64='5'/>
<enum name='kSecTrustResultUnspecified' value64='4'/>
<enum name='kTLSProtocol1' value64='4'/>
<enum name='kTLSProtocol11' value64='7'/>
<enum name='kTLSProtocol12' value64='8'/>
<enum name='kTLSProtocol13' value64='10'/>
<enum name='kTLSProtocol1Only' value64='5'/>
<enum name='kTLSProtocolMaxSupported' value64='999'/>
<enum name='kTryAuthenticate' value64='2'/>
<function name='SSLAddDistinguishedName'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg const='true' declared_type64='void * _Nullable' name='derDN' type64='^v'/>
<arg declared_type64='size_t' name='derDNLen' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLClose'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLContextGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='SSLCopyALPNProtocols'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='protocols' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLCopyDistinguishedNames'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='names' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLCopyPeerTrust'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SecTrustRef _Nullable * _Nonnull' name='trust' type64='^^{__SecTrust}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLCopyRequestedPeerName'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='char * _Nonnull' name='peerName' type64='*'/>
<arg declared_type64='size_t * _Nonnull' name='peerNameLen' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLCopyRequestedPeerNameLength'>
<arg declared_type64='SSLContextRef _Nonnull' name='ctx' type64='^{SSLContext=}'/>
<arg declared_type64='size_t * _Nonnull' name='peerNameLen' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLCreateContext'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='SSLProtocolSide' name='protocolSide' type64='i'/>
<arg declared_type64='SSLConnectionType' name='connectionType' type64='i'/>
<retval declared_type64='SSLContextRef _Nullable' type64='^{SSLContext=}'/>
</function>
<function name='SSLGetBufferedReadSize'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='size_t * _Nonnull' name='bufSize' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetClientCertificateState'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLClientCertificateState * _Nonnull' name='clientState' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetConnection'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLConnectionRef _Nullable * _Nonnull' name='connection' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetDatagramWriteSize'>
<arg declared_type64='SSLContextRef _Nonnull' name='dtlsContext' type64='^{SSLContext=}'/>
<arg declared_type64='size_t * _Nonnull' name='bufSize' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetEnabledCiphers'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLCipherSuite * _Nonnull' name='ciphers' type64='^S'/>
<arg declared_type64='size_t * _Nonnull' name='numCiphers' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetMaxDatagramRecordSize'>
<arg declared_type64='SSLContextRef _Nonnull' name='dtlsContext' type64='^{SSLContext=}'/>
<arg declared_type64='size_t * _Nonnull' name='maxSize' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetNegotiatedCipher'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLCipherSuite * _Nonnull' name='cipherSuite' type64='^S'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetNegotiatedProtocolVersion'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLProtocol * _Nonnull' name='protocol' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetNumberEnabledCiphers'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='size_t * _Nonnull' name='numCiphers' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetNumberSupportedCiphers'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='size_t * _Nonnull' name='numCiphers' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetPeerDomainName'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='char * _Nonnull' name='peerName' type64='*'/>
<arg declared_type64='size_t * _Nonnull' name='peerNameLen' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetPeerDomainNameLength'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='size_t * _Nonnull' name='peerNameLen' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetPeerID'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg const='true' declared_type64='void * _Nullable * _Nonnull' name='peerID' type64='^^v'/>
<arg declared_type64='size_t * _Nonnull' name='peerIDLen' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetProtocolVersionMax'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLProtocol * _Nonnull' name='maxVersion' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetProtocolVersionMin'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLProtocol * _Nonnull' name='minVersion' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetSessionOption'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLSessionOption' name='option' type64='i'/>
<arg declared_type64='Boolean * _Nonnull' name='value' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetSessionState'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLSessionState * _Nonnull' name='state' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLGetSupportedCiphers'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLCipherSuite * _Nonnull' name='ciphers' type64='^S'/>
<arg declared_type64='size_t * _Nonnull' name='numCiphers' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLHandshake'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLReHandshake'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLRead'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='void * _Nonnull' name='data' type64='^v'/>
<arg declared_type64='size_t' name='dataLength' type64='Q'/>
<arg declared_type64='size_t * _Nonnull' name='processed' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetALPNProtocols'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='CFArrayRef _Nonnull' name='protocols' type64='^{__CFArray=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetCertificate'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='CFArrayRef _Nullable' name='certRefs' type64='^{__CFArray=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetClientSideAuthenticate'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLAuthenticate' name='auth' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetConnection'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLConnectionRef _Nullable' name='connection' type64='@'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetDatagramHelloCookie'>
<arg declared_type64='SSLContextRef _Nonnull' name='dtlsContext' type64='^{SSLContext=}'/>
<arg const='true' declared_type64='void * _Nullable' name='cookie' type64='^v'/>
<arg declared_type64='size_t' name='cookieLen' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetEnabledCiphers'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg const='true' declared_type64='SSLCipherSuite * _Nonnull' name='ciphers' type64='^S'/>
<arg declared_type64='size_t' name='numCiphers' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetEncryptionCertificate'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='CFArrayRef _Nonnull' name='certRefs' type64='^{__CFArray=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetError'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='OSStatus' name='status' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetIOFuncs'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLReadFunc _Nonnull' function_pointer='true' name='readFunc' type64='^?'>
<arg declared_type64='SSLConnectionRef _Nonnull' type64='@'/>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='size_t * _Nonnull' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='SSLWriteFunc _Nonnull' function_pointer='true' name='writeFunc' type64='^?'>
<arg declared_type64='SSLConnectionRef _Nonnull' type64='@'/>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='size_t * _Nonnull' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetMaxDatagramRecordSize'>
<arg declared_type64='SSLContextRef _Nonnull' name='dtlsContext' type64='^{SSLContext=}'/>
<arg declared_type64='size_t' name='maxSize' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetOCSPResponse'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='response' type64='^{__CFData=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetPeerDomainName'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg const='true' declared_type64='char * _Nullable' name='peerName' type64='*'/>
<arg declared_type64='size_t' name='peerNameLen' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetPeerID'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg const='true' declared_type64='void * _Nullable' name='peerID' type64='^v'/>
<arg declared_type64='size_t' name='peerIDLen' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetProtocolVersionMax'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLProtocol' name='maxVersion' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetProtocolVersionMin'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLProtocol' name='minVersion' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetSessionConfig'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='config' type64='^{__CFString=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetSessionOption'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='SSLSessionOption' name='option' type64='i'/>
<arg declared_type64='Boolean' name='value' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLSetSessionTicketsEnabled'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg declared_type64='Boolean' name='enabled' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SSLWrite'>
<arg declared_type64='SSLContextRef _Nonnull' name='context' type64='^{SSLContext=}'/>
<arg const='true' declared_type64='void * _Nullable' name='data' type64='^v'/>
<arg declared_type64='size_t' name='dataLength' type64='Q'/>
<arg declared_type64='size_t * _Nonnull' name='processed' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecAccessControlCreateWithFlags'>
<arg declared_type64='CFAllocatorRef _Nullable' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFTypeRef _Nonnull' name='protection' type64='@'/>
<arg declared_type64='SecAccessControlCreateFlags' name='flags' type64='Q'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='SecAccessControlRef _Nullable' type64='^{__SecAccessControl=}'/>
</function>
<function name='SecAccessControlGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='SecAddSharedWebCredential'>
<arg declared_type64='CFStringRef _Nonnull' name='fqdn' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='account' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable' name='password' type64='^{__CFString=}'/>
<arg declared_type64='void (^ _Nonnull)(CFErrorRef _Nullable)' function_pointer='true' name='completionHandler' type64='@?'>
<arg declared_type64='CFErrorRef _Nullable' type64='^{__CFError=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SecCertificateCopyCommonName'>
<arg declared_type64='SecCertificateRef _Nonnull' name='certificate' type64='^{__SecCertificate=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='commonName' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecCertificateCopyData'>
<arg declared_type64='SecCertificateRef _Nonnull' name='certificate' type64='^{__SecCertificate=}'/>
<retval declared_type64='CFDataRef _Nonnull' type64='^{__CFData=}'/>
</function>
<function name='SecCertificateCopyEmailAddresses'>
<arg declared_type64='SecCertificateRef _Nonnull' name='certificate' type64='^{__SecCertificate=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='emailAddresses' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecCertificateCopyKey'>
<arg declared_type64='SecCertificateRef _Nonnull' name='certificate' type64='^{__SecCertificate=}'/>
<retval declared_type64='SecKeyRef _Nullable' type64='^{__SecKey=}'/>
</function>
<function name='SecCertificateCopyNormalizedIssuerSequence'>
<arg declared_type64='SecCertificateRef _Nonnull' name='certificate' type64='^{__SecCertificate=}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='SecCertificateCopyNormalizedSubjectSequence'>
<arg declared_type64='SecCertificateRef _Nonnull' name='certificate' type64='^{__SecCertificate=}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='SecCertificateCopyPublicKey'>
<arg declared_type64='SecCertificateRef _Nonnull' name='certificate' type64='^{__SecCertificate=}'/>
<retval declared_type64='SecKeyRef _Nullable' type64='^{__SecKey=}'/>
</function>
<function name='SecCertificateCopySerialNumber'>
<arg declared_type64='SecCertificateRef _Nonnull' name='certificate' type64='^{__SecCertificate=}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='SecCertificateCopySerialNumberData'>
<arg declared_type64='SecCertificateRef _Nonnull' name='certificate' type64='^{__SecCertificate=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='SecCertificateCopySubjectSummary'>
<arg declared_type64='SecCertificateRef _Nonnull' name='certificate' type64='^{__SecCertificate=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='SecCertificateCreateWithData'>
<arg declared_type64='CFAllocatorRef _Nullable' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<retval declared_type64='SecCertificateRef _Nullable' type64='^{__SecCertificate=}'/>
</function>
<function name='SecCertificateGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='SecCopyErrorMessageString'>
<arg declared_type64='OSStatus' name='status' type64='i'/>
<arg declared_type64='void * _Nullable' name='reserved' type64='^v'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='SecCreateSharedWebCredentialPassword'>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='SecIdentityCopyCertificate'>
<arg declared_type64='SecIdentityRef _Nonnull' name='identityRef' type64='^{__SecIdentity=}'/>
<arg declared_type64='SecCertificateRef _Nullable * _Nonnull' name='certificateRef' type64='^^{__SecCertificate}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecIdentityCopyPrivateKey'>
<arg declared_type64='SecIdentityRef _Nonnull' name='identityRef' type64='^{__SecIdentity=}'/>
<arg declared_type64='SecKeyRef _Nullable * _Nonnull' name='privateKeyRef' type64='^^{__SecKey}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecIdentityGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='SecItemAdd'>
<arg declared_type64='CFDictionaryRef _Nonnull' name='attributes' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFTypeRef _Nullable * _Nullable' name='result' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecItemCopyMatching'>
<arg declared_type64='CFDictionaryRef _Nonnull' name='query' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFTypeRef _Nullable * _Nullable' name='result' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecItemDelete'>
<arg declared_type64='CFDictionaryRef _Nonnull' name='query' type64='^{__CFDictionary=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecItemUpdate'>
<arg declared_type64='CFDictionaryRef _Nonnull' name='query' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='attributesToUpdate' type64='^{__CFDictionary=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecKeyCopyAttributes'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='SecKeyCopyExternalRepresentation'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='SecKeyCopyKeyExchangeResult'>
<arg declared_type64='SecKeyRef _Nonnull' name='privateKey' type64='^{__SecKey=}'/>
<arg declared_type64='SecKeyAlgorithm _Nonnull' name='algorithm' type64='^{__CFString=}'/>
<arg declared_type64='SecKeyRef _Nonnull' name='publicKey' type64='^{__SecKey=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='parameters' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='SecKeyCopyPublicKey'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<retval declared_type64='SecKeyRef _Nullable' type64='^{__SecKey=}'/>
</function>
<function name='SecKeyCreateDecryptedData'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<arg declared_type64='SecKeyAlgorithm _Nonnull' name='algorithm' type64='^{__CFString=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='ciphertext' type64='^{__CFData=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='SecKeyCreateEncryptedData'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<arg declared_type64='SecKeyAlgorithm _Nonnull' name='algorithm' type64='^{__CFString=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='plaintext' type64='^{__CFData=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='SecKeyCreateRandomKey'>
<arg declared_type64='CFDictionaryRef _Nonnull' name='parameters' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='SecKeyRef _Nullable' type64='^{__SecKey=}'/>
</function>
<function name='SecKeyCreateSignature'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<arg declared_type64='SecKeyAlgorithm _Nonnull' name='algorithm' type64='^{__CFString=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='dataToSign' type64='^{__CFData=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='SecKeyCreateWithData'>
<arg declared_type64='CFDataRef _Nonnull' name='keyData' type64='^{__CFData=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='attributes' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='SecKeyRef _Nullable' type64='^{__SecKey=}'/>
</function>
<function name='SecKeyDecrypt'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<arg declared_type64='SecPadding' name='padding' type64='I'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' name='cipherText' type64='*'/>
<arg declared_type64='size_t' name='cipherTextLen' type64='Q'/>
<arg declared_type64='uint8_t * _Nonnull' name='plainText' type64='*'/>
<arg declared_type64='size_t * _Nonnull' name='plainTextLen' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecKeyEncrypt'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<arg declared_type64='SecPadding' name='padding' type64='I'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' name='plainText' type64='*'/>
<arg declared_type64='size_t' name='plainTextLen' type64='Q'/>
<arg declared_type64='uint8_t * _Nonnull' name='cipherText' type64='*'/>
<arg declared_type64='size_t * _Nonnull' name='cipherTextLen' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecKeyGeneratePair'>
<arg declared_type64='CFDictionaryRef _Nonnull' name='parameters' type64='^{__CFDictionary=}'/>
<arg declared_type64='SecKeyRef _Nullable * _Nullable' name='publicKey' type64='^^{__SecKey}'/>
<arg declared_type64='SecKeyRef _Nullable * _Nullable' name='privateKey' type64='^^{__SecKey}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecKeyGetBlockSize'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<retval declared_type64='size_t' type64='Q'/>
</function>
<function name='SecKeyGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='SecKeyIsAlgorithmSupported'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<arg declared_type64='SecKeyOperationType' name='operation' type64='q'/>
<arg declared_type64='SecKeyAlgorithm _Nonnull' name='algorithm' type64='^{__CFString=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='SecKeyRawSign'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<arg declared_type64='SecPadding' name='padding' type64='I'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' name='dataToSign' type64='*'/>
<arg declared_type64='size_t' name='dataToSignLen' type64='Q'/>
<arg declared_type64='uint8_t * _Nonnull' name='sig' type64='*'/>
<arg declared_type64='size_t * _Nonnull' name='sigLen' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecKeyRawVerify'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<arg declared_type64='SecPadding' name='padding' type64='I'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' name='signedData' type64='*'/>
<arg declared_type64='size_t' name='signedDataLen' type64='Q'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' name='sig' type64='*'/>
<arg declared_type64='size_t' name='sigLen' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecKeyVerifySignature'>
<arg declared_type64='SecKeyRef _Nonnull' name='key' type64='^{__SecKey=}'/>
<arg declared_type64='SecKeyAlgorithm _Nonnull' name='algorithm' type64='^{__CFString=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='signedData' type64='^{__CFData=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='signature' type64='^{__CFData=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='SecPKCS12Import'>
<arg declared_type64='CFDataRef _Nonnull' name='pkcs12_data' type64='^{__CFData=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='options' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='items' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecPolicyCopyProperties'>
<arg declared_type64='SecPolicyRef _Nonnull' name='policyRef' type64='^{__SecPolicy=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='SecPolicyCreateBasicX509'>
<retval declared_type64='SecPolicyRef _Nonnull' type64='^{__SecPolicy=}'/>
</function>
<function name='SecPolicyCreateRevocation'>
<arg declared_type64='CFOptionFlags' name='revocationFlags' type64='Q'/>
<retval declared_type64='SecPolicyRef _Nullable' type64='^{__SecPolicy=}'/>
</function>
<function name='SecPolicyCreateSSL'>
<arg declared_type64='Boolean' name='server' type64='B'/>
<arg declared_type64='CFStringRef _Nullable' name='hostname' type64='^{__CFString=}'/>
<retval declared_type64='SecPolicyRef _Nonnull' type64='^{__SecPolicy=}'/>
</function>
<function name='SecPolicyCreateWithProperties'>
<arg declared_type64='CFTypeRef _Nonnull' name='policyIdentifier' type64='@'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='properties' type64='^{__CFDictionary=}'/>
<retval declared_type64='SecPolicyRef _Nullable' type64='^{__SecPolicy=}'/>
</function>
<function name='SecPolicyGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='SecRandomCopyBytes'>
<arg declared_type64='SecRandomRef _Nullable' name='rnd' type64='^{__SecRandom=}'/>
<arg declared_type64='size_t' name='count' type64='Q'/>
<arg declared_type64='void * _Nonnull' name='bytes' type64='^v'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='SecRequestSharedWebCredential'>
<arg declared_type64='CFStringRef _Nullable' name='fqdn' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable' name='account' type64='^{__CFString=}'/>
<arg declared_type64='void (^ _Nonnull)(CFArrayRef _Nullable, CFErrorRef _Nullable)' function_pointer='true' name='completionHandler' type64='@?'>
<arg declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
<arg declared_type64='CFErrorRef _Nullable' type64='^{__CFError=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SecTrustCopyCustomAnchorCertificates'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='anchors' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustCopyExceptions'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<retval declared_type64='CFDataRef _Nonnull' type64='^{__CFData=}'/>
</function>
<function name='SecTrustCopyPolicies'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='policies' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustCopyProperties'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='SecTrustCopyPublicKey'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<retval declared_type64='SecKeyRef _Nullable' type64='^{__SecKey=}'/>
</function>
<function name='SecTrustCopyResult'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='SecTrustCreateWithCertificates'>
<arg declared_type64='CFTypeRef _Nonnull' name='certificates' type64='@'/>
<arg declared_type64='CFTypeRef _Nullable' name='policies' type64='@'/>
<arg declared_type64='SecTrustRef _Nullable * _Nonnull' name='trust' type64='^^{__SecTrust}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustEvaluate'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='SecTrustResultType * _Nonnull' name='result' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustEvaluateAsync'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='dispatch_queue_t _Nullable' name='queue' type64='@'/>
<arg declared_type64='SecTrustCallback _Nonnull' function_pointer='true' name='result' type64='@?'>
<arg declared_type64='SecTrustRef _Nonnull' type64='^{__SecTrust=}'/>
<arg declared_type64='SecTrustResultType' type64='I'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustEvaluateWithError'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='SecTrustGetCertificateAtIndex'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='CFIndex' name='ix' type64='q'/>
<retval declared_type64='SecCertificateRef _Nullable' type64='^{__SecCertificate=}'/>
</function>
<function name='SecTrustGetCertificateCount'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<function name='SecTrustGetNetworkFetchAllowed'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='Boolean * _Nonnull' name='allowFetch' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustGetTrustResult'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='SecTrustResultType * _Nonnull' name='result' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='SecTrustGetVerifyTime'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<retval declared_type64='CFAbsoluteTime' type64='d'/>
</function>
<function name='SecTrustSetAnchorCertificates'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='CFArrayRef _Nonnull' name='anchorCertificates' type64='^{__CFArray=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustSetAnchorCertificatesOnly'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='Boolean' name='anchorCertificatesOnly' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustSetExceptions'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='CFDataRef _Nullable' name='exceptions' type64='^{__CFData=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='SecTrustSetNetworkFetchAllowed'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='Boolean' name='allowFetch' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustSetOCSPResponse'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='CFTypeRef _Nullable' name='responseData' type64='@'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustSetPolicies'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='CFTypeRef _Nonnull' name='policies' type64='@'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustSetSignedCertificateTimestamps'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='CFArrayRef _Nullable' name='sctArray' type64='^{__CFArray=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SecTrustSetVerifyDate'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<arg declared_type64='CFDateRef _Nonnull' name='verifyDate' type64='^{__CFDate=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='sec_certificate_copy_ref'>
<arg declared_type64='sec_certificate_t _Nonnull' name='certificate' type64='@'/>
<retval declared_type64='SecCertificateRef _Nonnull' type64='^{__SecCertificate=}'/>
</function>
<function name='sec_certificate_create'>
<arg declared_type64='SecCertificateRef _Nonnull' name='certificate' type64='^{__SecCertificate=}'/>
<retval already_retained='true' declared_type64='sec_certificate_t _Nullable' type64='@'/>
</function>
<function name='sec_identity_copy_certificates_ref'>
<arg declared_type64='sec_identity_t _Nonnull' name='identity' type64='@'/>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='sec_identity_copy_ref'>
<arg declared_type64='sec_identity_t _Nonnull' name='identity' type64='@'/>
<retval declared_type64='SecIdentityRef _Nonnull' type64='^{__SecIdentity=}'/>
</function>
<function name='sec_identity_create'>
<arg declared_type64='SecIdentityRef _Nonnull' name='identity' type64='^{__SecIdentity=}'/>
<retval already_retained='true' declared_type64='sec_identity_t _Nullable' type64='@'/>
</function>
<function name='sec_identity_create_with_certificates'>
<arg declared_type64='SecIdentityRef _Nonnull' name='identity' type64='^{__SecIdentity=}'/>
<arg declared_type64='CFArrayRef _Nonnull' name='certificates' type64='^{__CFArray=}'/>
<retval already_retained='true' declared_type64='sec_identity_t _Nullable' type64='@'/>
</function>
<function name='sec_protocol_metadata_access_distinguished_names'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(dispatch_data_t _Nonnull)' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='dispatch_data_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='sec_protocol_metadata_access_ocsp_response'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(dispatch_data_t _Nonnull)' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='dispatch_data_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='sec_protocol_metadata_access_peer_certificate_chain'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(sec_certificate_t _Nonnull)' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='sec_certificate_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='sec_protocol_metadata_access_supported_signature_algorithms'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(uint16_t)' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='uint16_t' type64='S'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='sec_protocol_metadata_challenge_parameters_are_equal'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadataA' type64='@'/>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadataB' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='sec_protocol_metadata_copy_peer_public_key'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval already_retained='true' declared_type64='dispatch_data_t _Nullable' type64='@'/>
</function>
<function name='sec_protocol_metadata_create_secret'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<arg declared_type64='size_t' name='label_len' type64='Q'/>
<arg const='true' declared_type64='char * _Nonnull' name='label' type64='*'/>
<arg declared_type64='size_t' name='exporter_length' type64='Q'/>
<retval already_retained='true' declared_type64='dispatch_data_t _Nullable' type64='@'/>
</function>
<function name='sec_protocol_metadata_create_secret_with_context'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<arg declared_type64='size_t' name='label_len' type64='Q'/>
<arg const='true' declared_type64='char * _Nonnull' name='label' type64='*'/>
<arg declared_type64='size_t' name='context_len' type64='Q'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' name='context' type64='*'/>
<arg declared_type64='size_t' name='exporter_length' type64='Q'/>
<retval already_retained='true' declared_type64='dispatch_data_t _Nullable' type64='@'/>
</function>
<function name='sec_protocol_metadata_get_early_data_accepted'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='sec_protocol_metadata_get_negotiated_ciphersuite'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='SSLCipherSuite' type64='S'/>
</function>
<function name='sec_protocol_metadata_get_negotiated_protocol'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval const='true' declared_type64='char * _Nullable' type64='*'/>
</function>
<function name='sec_protocol_metadata_get_negotiated_protocol_version'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='SSLProtocol' type64='i'/>
</function>
<function name='sec_protocol_metadata_peers_are_equal'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadataA' type64='@'/>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' name='metadataB' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='sec_protocol_options_add_pre_shared_key'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='dispatch_data_t _Nonnull' name='psk' type64='@'/>
<arg declared_type64='dispatch_data_t _Nonnull' name='psk_identity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_add_tls_application_protocol'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='application_protocol' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_add_tls_ciphersuite'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='SSLCipherSuite' name='ciphersuite' type64='S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_add_tls_ciphersuite_group'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='SSLCiphersuiteGroup' name='group' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_challenge_block'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='sec_protocol_challenge_t _Nonnull' function_pointer='true' name='challenge_block' type64='@?'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' type64='@'/>
<arg declared_type64='sec_protocol_challenge_complete_t _Nonnull' function_pointer='true' type64='@?'>
<arg declared_type64='sec_identity_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='dispatch_queue_t _Nonnull' name='challenge_queue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_key_update_block'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='sec_protocol_key_update_t _Nonnull' function_pointer='true' name='key_update_block' type64='@?'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' type64='@'/>
<arg declared_type64='sec_protocol_key_update_complete_t _Nonnull' function_pointer='true' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='dispatch_queue_t _Nonnull' name='key_update_queue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_local_identity'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='sec_identity_t _Nonnull' name='identity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_peer_authentication_required'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='peer_authentication_required' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_tls_diffie_hellman_parameters'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='dispatch_data_t _Nonnull' name='params' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_tls_false_start_enabled'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='false_start_enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_tls_is_fallback_attempt'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='is_fallback_attempt' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_tls_max_version'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='SSLProtocol' name='version' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_tls_min_version'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='SSLProtocol' name='version' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_tls_ocsp_enabled'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='ocsp_enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_tls_renegotiation_enabled'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='renegotiation_enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_tls_resumption_enabled'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='resumption_enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_tls_sct_enabled'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='sct_enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_tls_server_name'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='server_name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_tls_tickets_enabled'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='tickets_enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_protocol_options_set_verify_block'>
<arg declared_type64='sec_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='sec_protocol_verify_t _Nonnull' function_pointer='true' name='verify_block' type64='@?'>
<arg declared_type64='sec_protocol_metadata_t _Nonnull' type64='@'/>
<arg declared_type64='sec_trust_t _Nonnull' type64='@'/>
<arg declared_type64='sec_protocol_verify_complete_t _Nonnull' function_pointer='true' type64='@?'>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='dispatch_queue_t _Nonnull' name='verify_block_queue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_release'>
<arg declared_type64='void*' name='obj' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='sec_retain'>
<arg declared_type64='void*' name='obj' type64='^v'/>
<retval declared_type64='void*' type64='^v'/>
</function>
<function name='sec_trust_copy_ref'>
<arg declared_type64='sec_trust_t _Nonnull' name='trust' type64='@'/>
<retval declared_type64='SecTrustRef _Nonnull' type64='^{__SecTrust=}'/>
</function>
<function name='sec_trust_create'>
<arg declared_type64='SecTrustRef _Nonnull' name='trust' type64='^{__SecTrust=}'/>
<retval already_retained='true' declared_type64='sec_trust_t _Nullable' type64='@'/>
</function>
</signatures>
