<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<cftype name='GLsync' type='^{__GLsync=}'/>
<constant const='true' declared_type='NSString * _Nonnull' name='kEAGLColorFormatRGB565' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='kEAGLColorFormatRGBA8' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='kEAGLColorFormatSRGBA8' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='kEAGLDrawablePropertyColorFormat' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='kEAGLDrawablePropertyRetainedBacking' type='@'/>
<enum name='EAGL_MAJOR_VERSION' value='1'/>
<enum name='EAGL_MINOR_VERSION' value='0'/>
<enum name='GL_ACTIVE_ATTRIBUTES' value='35721'/>
<enum name='GL_ACTIVE_ATTRIBUTE_MAX_LENGTH' value='35722'/>
<enum name='GL_ACTIVE_PROGRAM_EXT' value='33369'/>
<enum name='GL_ACTIVE_TEXTURE' value='34016'/>
<enum name='GL_ACTIVE_UNIFORMS' value='35718'/>
<enum name='GL_ACTIVE_UNIFORM_BLOCKS' value='35382'/>
<enum name='GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH' value='35381'/>
<enum name='GL_ACTIVE_UNIFORM_MAX_LENGTH' value='35719'/>
<enum name='GL_ADD' value='260'/>
<enum name='GL_ADD_SIGNED' value='34164'/>
<enum name='GL_ALIASED_LINE_WIDTH_RANGE' value='33902'/>
<enum name='GL_ALIASED_POINT_SIZE_RANGE' value='33901'/>
<enum name='GL_ALL_SHADER_BITS_EXT' value='4294967295'/>
<enum name='GL_ALPHA' value='6406'/>
<enum name='GL_ALPHA16F_EXT' value='34844'/>
<enum name='GL_ALPHA32F_EXT' value='34838'/>
<enum name='GL_ALPHA8_EXT' value='32828'/>
<enum name='GL_ALPHA_BITS' value='3413'/>
<enum name='GL_ALPHA_SCALE' value='3356'/>
<enum name='GL_ALPHA_TEST' value='3008'/>
<enum name='GL_ALPHA_TEST_FUNC' value='3009'/>
<enum name='GL_ALPHA_TEST_REF' value='3010'/>
<enum name='GL_ALREADY_SIGNALED' value='37146'/>
<enum name='GL_ALREADY_SIGNALED_APPLE' value='37146'/>
<enum name='GL_ALWAYS' value='519'/>
<enum name='GL_AMBIENT' value='4608'/>
<enum name='GL_AMBIENT_AND_DIFFUSE' value='5634'/>
<enum name='GL_AND' value='5377'/>
<enum name='GL_AND_INVERTED' value='5380'/>
<enum name='GL_AND_REVERSE' value='5378'/>
<enum name='GL_ANY_SAMPLES_PASSED' value='35887'/>
<enum name='GL_ANY_SAMPLES_PASSED_CONSERVATIVE' value='36202'/>
<enum name='GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT' value='36202'/>
<enum name='GL_ANY_SAMPLES_PASSED_EXT' value='35887'/>
<enum name='GL_APPLE_clip_distance' value='1'/>
<enum name='GL_APPLE_color_buffer_packed_float' value='1'/>
<enum name='GL_APPLE_copy_texture_levels' value='1'/>
<enum name='GL_APPLE_framebuffer_multisample' value='1'/>
<enum name='GL_APPLE_rgb_422' value='1'/>
<enum name='GL_APPLE_sync' value='1'/>
<enum name='GL_APPLE_texture_2D_limited_npot' value='1'/>
<enum name='GL_APPLE_texture_format_BGRA8888' value='1'/>
<enum name='GL_APPLE_texture_max_level' value='1'/>
<enum name='GL_APPLE_texture_packed_float' value='1'/>
<enum name='GL_ARRAY_BUFFER' value='34962'/>
<enum name='GL_ARRAY_BUFFER_BINDING' value='34964'/>
<enum name='GL_ATTACHED_SHADERS' value='35717'/>
<enum name='GL_BACK' value='1029'/>
<enum name='GL_BGRA' value='32993'/>
<enum name='GL_BGRA8_EXT' value='37793'/>
<enum name='GL_BGRA_EXT' value='32993'/>
<enum name='GL_BGRA_IMG' value='32993'/>
<enum name='GL_BLEND' value='3042'/>
<enum name='GL_BLEND_COLOR' value='32773'/>
<enum name='GL_BLEND_DST' value='3040'/>
<enum name='GL_BLEND_DST_ALPHA' value='32970'/>
<enum name='GL_BLEND_DST_ALPHA_OES' value='32970'/>
<enum name='GL_BLEND_DST_RGB' value='32968'/>
<enum name='GL_BLEND_DST_RGB_OES' value='32968'/>
<enum name='GL_BLEND_EQUATION' value='32777'/>
<enum name='GL_BLEND_EQUATION_ALPHA' value='34877'/>
<enum name='GL_BLEND_EQUATION_ALPHA_OES' value='34877'/>
<enum name='GL_BLEND_EQUATION_OES' value='32777'/>
<enum name='GL_BLEND_EQUATION_RGB' value='32777'/>
<enum name='GL_BLEND_EQUATION_RGB_OES' value='32777'/>
<enum name='GL_BLEND_SRC' value='3041'/>
<enum name='GL_BLEND_SRC_ALPHA' value='32971'/>
<enum name='GL_BLEND_SRC_ALPHA_OES' value='32971'/>
<enum name='GL_BLEND_SRC_RGB' value='32969'/>
<enum name='GL_BLEND_SRC_RGB_OES' value='32969'/>
<enum name='GL_BLUE' value='6405'/>
<enum name='GL_BLUE_BITS' value='3412'/>
<enum name='GL_BOOL' value='35670'/>
<enum name='GL_BOOL_VEC2' value='35671'/>
<enum name='GL_BOOL_VEC3' value='35672'/>
<enum name='GL_BOOL_VEC4' value='35673'/>
<enum name='GL_BUFFER_ACCESS_FLAGS' value='37151'/>
<enum name='GL_BUFFER_ACCESS_OES' value='35003'/>
<enum name='GL_BUFFER_MAPPED' value='35004'/>
<enum name='GL_BUFFER_MAPPED_OES' value='35004'/>
<enum name='GL_BUFFER_MAP_LENGTH' value='37152'/>
<enum name='GL_BUFFER_MAP_OFFSET' value='37153'/>
<enum name='GL_BUFFER_MAP_POINTER' value='35005'/>
<enum name='GL_BUFFER_MAP_POINTER_OES' value='35005'/>
<enum name='GL_BUFFER_OBJECT_EXT' value='37201'/>
<enum name='GL_BUFFER_SIZE' value='34660'/>
<enum name='GL_BUFFER_USAGE' value='34661'/>
<enum name='GL_BYTE' value='5120'/>
<enum name='GL_CCW' value='2305'/>
<enum name='GL_CLAMP_TO_EDGE' value='33071'/>
<enum name='GL_CLEAR' value='5376'/>
<enum name='GL_CLIENT_ACTIVE_TEXTURE' value='34017'/>
<enum name='GL_CLIP_DISTANCE0_APPLE' value='12288'/>
<enum name='GL_CLIP_DISTANCE1_APPLE' value='12289'/>
<enum name='GL_CLIP_DISTANCE2_APPLE' value='12290'/>
<enum name='GL_CLIP_DISTANCE3_APPLE' value='12291'/>
<enum name='GL_CLIP_DISTANCE4_APPLE' value='12292'/>
<enum name='GL_CLIP_DISTANCE5_APPLE' value='12293'/>
<enum name='GL_CLIP_DISTANCE6_APPLE' value='12294'/>
<enum name='GL_CLIP_DISTANCE7_APPLE' value='12295'/>
<enum name='GL_CLIP_PLANE0' value='12288'/>
<enum name='GL_CLIP_PLANE1' value='12289'/>
<enum name='GL_CLIP_PLANE2' value='12290'/>
<enum name='GL_CLIP_PLANE3' value='12291'/>
<enum name='GL_CLIP_PLANE4' value='12292'/>
<enum name='GL_CLIP_PLANE5' value='12293'/>
<enum name='GL_COLOR' value='6144'/>
<enum name='GL_COLOR_ARRAY' value='32886'/>
<enum name='GL_COLOR_ARRAY_BUFFER_BINDING' value='34968'/>
<enum name='GL_COLOR_ARRAY_POINTER' value='32912'/>
<enum name='GL_COLOR_ARRAY_SIZE' value='32897'/>
<enum name='GL_COLOR_ARRAY_STRIDE' value='32899'/>
<enum name='GL_COLOR_ARRAY_TYPE' value='32898'/>
<enum name='GL_COLOR_ATTACHMENT0' value='36064'/>
<enum name='GL_COLOR_ATTACHMENT0_OES' value='36064'/>
<enum name='GL_COLOR_ATTACHMENT1' value='36065'/>
<enum name='GL_COLOR_ATTACHMENT10' value='36074'/>
<enum name='GL_COLOR_ATTACHMENT11' value='36075'/>
<enum name='GL_COLOR_ATTACHMENT12' value='36076'/>
<enum name='GL_COLOR_ATTACHMENT13' value='36077'/>
<enum name='GL_COLOR_ATTACHMENT14' value='36078'/>
<enum name='GL_COLOR_ATTACHMENT15' value='36079'/>
<enum name='GL_COLOR_ATTACHMENT2' value='36066'/>
<enum name='GL_COLOR_ATTACHMENT3' value='36067'/>
<enum name='GL_COLOR_ATTACHMENT4' value='36068'/>
<enum name='GL_COLOR_ATTACHMENT5' value='36069'/>
<enum name='GL_COLOR_ATTACHMENT6' value='36070'/>
<enum name='GL_COLOR_ATTACHMENT7' value='36071'/>
<enum name='GL_COLOR_ATTACHMENT8' value='36072'/>
<enum name='GL_COLOR_ATTACHMENT9' value='36073'/>
<enum name='GL_COLOR_BUFFER_BIT' value='16384'/>
<enum name='GL_COLOR_CLEAR_VALUE' value='3106'/>
<enum name='GL_COLOR_EXT' value='6144'/>
<enum name='GL_COLOR_LOGIC_OP' value='3058'/>
<enum name='GL_COLOR_MATERIAL' value='2903'/>
<enum name='GL_COLOR_WRITEMASK' value='3107'/>
<enum name='GL_COMBINE' value='34160'/>
<enum name='GL_COMBINE_ALPHA' value='34162'/>
<enum name='GL_COMBINE_RGB' value='34161'/>
<enum name='GL_COMPARE_REF_TO_TEXTURE' value='34894'/>
<enum name='GL_COMPARE_REF_TO_TEXTURE_EXT' value='34894'/>
<enum name='GL_COMPILE_STATUS' value='35713'/>
<enum name='GL_COMPRESSED_R11_EAC' value='37488'/>
<enum name='GL_COMPRESSED_RG11_EAC' value='37490'/>
<enum name='GL_COMPRESSED_RGB8_ETC2' value='37492'/>
<enum name='GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2' value='37494'/>
<enum name='GL_COMPRESSED_RGBA8_ETC2_EAC' value='37496'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_10x10_KHR' value='37819'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_10x5_KHR' value='37816'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_10x6_KHR' value='37817'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_10x8_KHR' value='37818'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_12x10_KHR' value='37820'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_12x12_KHR' value='37821'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_4x4_KHR' value='37808'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_5x4_KHR' value='37809'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_5x5_KHR' value='37810'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_6x5_KHR' value='37811'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_6x6_KHR' value='37812'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_8x5_KHR' value='37813'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_8x6_KHR' value='37814'/>
<enum name='GL_COMPRESSED_RGBA_ASTC_8x8_KHR' value='37815'/>
<enum name='GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG' value='35843'/>
<enum name='GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG' value='35842'/>
<enum name='GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG' value='35841'/>
<enum name='GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG' value='35840'/>
<enum name='GL_COMPRESSED_SIGNED_R11_EAC' value='37489'/>
<enum name='GL_COMPRESSED_SIGNED_RG11_EAC' value='37491'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR' value='37851'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR' value='37848'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR' value='37849'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR' value='37850'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR' value='37852'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR' value='37853'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR' value='37840'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR' value='37841'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR' value='37842'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR' value='37843'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR' value='37844'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR' value='37845'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR' value='37846'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR' value='37847'/>
<enum name='GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC' value='37497'/>
<enum name='GL_COMPRESSED_SRGB8_ETC2' value='37493'/>
<enum name='GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2' value='37495'/>
<enum name='GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT' value='35414'/>
<enum name='GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT' value='35415'/>
<enum name='GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT' value='35412'/>
<enum name='GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT' value='35413'/>
<enum name='GL_COMPRESSED_TEXTURE_FORMATS' value='34467'/>
<enum name='GL_CONDITION_SATISFIED' value='37148'/>
<enum name='GL_CONDITION_SATISFIED_APPLE' value='37148'/>
<enum name='GL_CONSTANT' value='34166'/>
<enum name='GL_CONSTANT_ALPHA' value='32771'/>
<enum name='GL_CONSTANT_ATTENUATION' value='4615'/>
<enum name='GL_CONSTANT_COLOR' value='32769'/>
<enum name='GL_COORD_REPLACE_OES' value='34914'/>
<enum name='GL_COPY' value='5379'/>
<enum name='GL_COPY_INVERTED' value='5388'/>
<enum name='GL_COPY_READ_BUFFER' value='36662'/>
<enum name='GL_COPY_READ_BUFFER_BINDING' value='36662'/>
<enum name='GL_COPY_WRITE_BUFFER' value='36663'/>
<enum name='GL_COPY_WRITE_BUFFER_BINDING' value='36663'/>
<enum name='GL_CULL_FACE' value='2884'/>
<enum name='GL_CULL_FACE_MODE' value='2885'/>
<enum name='GL_CURRENT_COLOR' value='2816'/>
<enum name='GL_CURRENT_NORMAL' value='2818'/>
<enum name='GL_CURRENT_PALETTE_MATRIX_OES' value='34883'/>
<enum name='GL_CURRENT_PROGRAM' value='35725'/>
<enum name='GL_CURRENT_QUERY' value='34917'/>
<enum name='GL_CURRENT_QUERY_EXT' value='34917'/>
<enum name='GL_CURRENT_TEXTURE_COORDS' value='2819'/>
<enum name='GL_CURRENT_VERTEX_ATTRIB' value='34342'/>
<enum name='GL_CW' value='2304'/>
<enum name='GL_DECAL' value='8449'/>
<enum name='GL_DECR' value='7683'/>
<enum name='GL_DECR_WRAP' value='34056'/>
<enum name='GL_DECR_WRAP_OES' value='34056'/>
<enum name='GL_DELETE_STATUS' value='35712'/>
<enum name='GL_DEPTH' value='6145'/>
<enum name='GL_DEPTH24_STENCIL8' value='35056'/>
<enum name='GL_DEPTH24_STENCIL8_OES' value='35056'/>
<enum name='GL_DEPTH32F_STENCIL8' value='36013'/>
<enum name='GL_DEPTH_ATTACHMENT' value='36096'/>
<enum name='GL_DEPTH_ATTACHMENT_OES' value='36096'/>
<enum name='GL_DEPTH_BITS' value='3414'/>
<enum name='GL_DEPTH_BUFFER_BIT' value='256'/>
<enum name='GL_DEPTH_CLEAR_VALUE' value='2931'/>
<enum name='GL_DEPTH_COMPONENT' value='6402'/>
<enum name='GL_DEPTH_COMPONENT16' value='33189'/>
<enum name='GL_DEPTH_COMPONENT16_OES' value='33189'/>
<enum name='GL_DEPTH_COMPONENT24' value='33190'/>
<enum name='GL_DEPTH_COMPONENT24_OES' value='33190'/>
<enum name='GL_DEPTH_COMPONENT32F' value='36012'/>
<enum name='GL_DEPTH_COMPONENT32_OES' value='33191'/>
<enum name='GL_DEPTH_EXT' value='6145'/>
<enum name='GL_DEPTH_FUNC' value='2932'/>
<enum name='GL_DEPTH_RANGE' value='2928'/>
<enum name='GL_DEPTH_STENCIL' value='34041'/>
<enum name='GL_DEPTH_STENCIL_ATTACHMENT' value='33306'/>
<enum name='GL_DEPTH_STENCIL_OES' value='34041'/>
<enum name='GL_DEPTH_TEST' value='2929'/>
<enum name='GL_DEPTH_WRITEMASK' value='2930'/>
<enum name='GL_DIFFUSE' value='4609'/>
<enum name='GL_DITHER' value='3024'/>
<enum name='GL_DONT_CARE' value='4352'/>
<enum name='GL_DOT3_RGB' value='34478'/>
<enum name='GL_DOT3_RGBA' value='34479'/>
<enum name='GL_DRAW_BUFFER0' value='34853'/>
<enum name='GL_DRAW_BUFFER1' value='34854'/>
<enum name='GL_DRAW_BUFFER10' value='34863'/>
<enum name='GL_DRAW_BUFFER11' value='34864'/>
<enum name='GL_DRAW_BUFFER12' value='34865'/>
<enum name='GL_DRAW_BUFFER13' value='34866'/>
<enum name='GL_DRAW_BUFFER14' value='34867'/>
<enum name='GL_DRAW_BUFFER15' value='34868'/>
<enum name='GL_DRAW_BUFFER2' value='34855'/>
<enum name='GL_DRAW_BUFFER3' value='34856'/>
<enum name='GL_DRAW_BUFFER4' value='34857'/>
<enum name='GL_DRAW_BUFFER5' value='34858'/>
<enum name='GL_DRAW_BUFFER6' value='34859'/>
<enum name='GL_DRAW_BUFFER7' value='34860'/>
<enum name='GL_DRAW_BUFFER8' value='34861'/>
<enum name='GL_DRAW_BUFFER9' value='34862'/>
<enum name='GL_DRAW_FRAMEBUFFER' value='36009'/>
<enum name='GL_DRAW_FRAMEBUFFER_APPLE' value='36009'/>
<enum name='GL_DRAW_FRAMEBUFFER_BINDING' value='36006'/>
<enum name='GL_DRAW_FRAMEBUFFER_BINDING_APPLE' value='36006'/>
<enum name='GL_DST_ALPHA' value='772'/>
<enum name='GL_DST_COLOR' value='774'/>
<enum name='GL_DYNAMIC_COPY' value='35050'/>
<enum name='GL_DYNAMIC_DRAW' value='35048'/>
<enum name='GL_DYNAMIC_READ' value='35049'/>
<enum name='GL_ELEMENT_ARRAY_BUFFER' value='34963'/>
<enum name='GL_ELEMENT_ARRAY_BUFFER_BINDING' value='34965'/>
<enum name='GL_EMISSION' value='5632'/>
<enum name='GL_EQUAL' value='514'/>
<enum name='GL_EQUIV' value='5385'/>
<enum name='GL_ES_VERSION_2_0' value='1'/>
<enum name='GL_ES_VERSION_3_0' value='1'/>
<enum name='GL_EXP' value='2048'/>
<enum name='GL_EXP2' value='2049'/>
<enum name='GL_EXTENSIONS' value='7939'/>
<enum name='GL_EXT_blend_minmax' value='1'/>
<enum name='GL_EXT_color_buffer_half_float' value='1'/>
<enum name='GL_EXT_debug_label' value='1'/>
<enum name='GL_EXT_debug_marker' value='1'/>
<enum name='GL_EXT_discard_framebuffer' value='1'/>
<enum name='GL_EXT_draw_instanced' value='1'/>
<enum name='GL_EXT_instanced_arrays' value='1'/>
<enum name='GL_EXT_map_buffer_range' value='1'/>
<enum name='GL_EXT_occlusion_query_boolean' value='1'/>
<enum name='GL_EXT_pvrtc_sRGB' value='1'/>
<enum name='GL_EXT_read_format_bgra' value='1'/>
<enum name='GL_EXT_sRGB' value='1'/>
<enum name='GL_EXT_separate_shader_objects' value='1'/>
<enum name='GL_EXT_shader_framebuffer_fetch' value='1'/>
<enum name='GL_EXT_shader_texture_lod' value='1'/>
<enum name='GL_EXT_shadow_samplers' value='1'/>
<enum name='GL_EXT_texture_filter_anisotropic' value='1'/>
<enum name='GL_EXT_texture_lod_bias' value='1'/>
<enum name='GL_EXT_texture_rg' value='1'/>
<enum name='GL_EXT_texture_storage' value='1'/>
<enum name='GL_FALSE' value='0'/>
<enum name='GL_FASTEST' value='4353'/>
<enum name='GL_FIXED' value='5132'/>
<enum name='GL_FLAT' value='7424'/>
<enum name='GL_FLOAT' value='5126'/>
<enum name='GL_FLOAT_32_UNSIGNED_INT_24_8_REV' value='36269'/>
<enum name='GL_FLOAT_MAT2' value='35674'/>
<enum name='GL_FLOAT_MAT2x3' value='35685'/>
<enum name='GL_FLOAT_MAT2x4' value='35686'/>
<enum name='GL_FLOAT_MAT3' value='35675'/>
<enum name='GL_FLOAT_MAT3x2' value='35687'/>
<enum name='GL_FLOAT_MAT3x4' value='35688'/>
<enum name='GL_FLOAT_MAT4' value='35676'/>
<enum name='GL_FLOAT_MAT4x2' value='35689'/>
<enum name='GL_FLOAT_MAT4x3' value='35690'/>
<enum name='GL_FLOAT_VEC2' value='35664'/>
<enum name='GL_FLOAT_VEC3' value='35665'/>
<enum name='GL_FLOAT_VEC4' value='35666'/>
<enum name='GL_FOG' value='2912'/>
<enum name='GL_FOG_COLOR' value='2918'/>
<enum name='GL_FOG_DENSITY' value='2914'/>
<enum name='GL_FOG_END' value='2916'/>
<enum name='GL_FOG_HINT' value='3156'/>
<enum name='GL_FOG_MODE' value='2917'/>
<enum name='GL_FOG_START' value='2915'/>
<enum name='GL_FRAGMENT_SHADER' value='35632'/>
<enum name='GL_FRAGMENT_SHADER_BIT_EXT' value='2'/>
<enum name='GL_FRAGMENT_SHADER_DERIVATIVE_HINT' value='35723'/>
<enum name='GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES' value='35723'/>
<enum name='GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT' value='35410'/>
<enum name='GL_FRAMEBUFFER' value='36160'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE' value='33301'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE' value='33300'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING' value='33296'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT' value='33296'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE' value='33297'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT' value='33297'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE' value='33302'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE' value='33299'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME' value='36049'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES' value='36049'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE' value='36048'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES' value='36048'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE' value='33298'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE' value='33303'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE' value='36051'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES' value='36051'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER' value='36052'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL' value='36050'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES' value='36050'/>
<enum name='GL_FRAMEBUFFER_BINDING' value='36006'/>
<enum name='GL_FRAMEBUFFER_BINDING_OES' value='36006'/>
<enum name='GL_FRAMEBUFFER_COMPLETE' value='36053'/>
<enum name='GL_FRAMEBUFFER_COMPLETE_OES' value='36053'/>
<enum name='GL_FRAMEBUFFER_DEFAULT' value='33304'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT' value='36054'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES' value='36054'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS' value='36057'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES' value='36057'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES' value='36058'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT' value='36055'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES' value='36055'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE' value='36182'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE' value='36182'/>
<enum name='GL_FRAMEBUFFER_OES' value='36160'/>
<enum name='GL_FRAMEBUFFER_UNDEFINED' value='33305'/>
<enum name='GL_FRAMEBUFFER_UNSUPPORTED' value='36061'/>
<enum name='GL_FRAMEBUFFER_UNSUPPORTED_OES' value='36061'/>
<enum name='GL_FRONT' value='1028'/>
<enum name='GL_FRONT_AND_BACK' value='1032'/>
<enum name='GL_FRONT_FACE' value='2886'/>
<enum name='GL_FUNC_ADD' value='32774'/>
<enum name='GL_FUNC_ADD_OES' value='32774'/>
<enum name='GL_FUNC_REVERSE_SUBTRACT' value='32779'/>
<enum name='GL_FUNC_REVERSE_SUBTRACT_OES' value='32779'/>
<enum name='GL_FUNC_SUBTRACT' value='32778'/>
<enum name='GL_FUNC_SUBTRACT_OES' value='32778'/>
<enum name='GL_GENERATE_MIPMAP' value='33169'/>
<enum name='GL_GENERATE_MIPMAP_HINT' value='33170'/>
<enum name='GL_GEQUAL' value='518'/>
<enum name='GL_GREATER' value='516'/>
<enum name='GL_GREEN' value='6404'/>
<enum name='GL_GREEN_BITS' value='3411'/>
<enum name='GL_HALF_FLOAT' value='5131'/>
<enum name='GL_HALF_FLOAT_OES' value='36193'/>
<enum name='GL_HIGH_FLOAT' value='36338'/>
<enum name='GL_HIGH_INT' value='36341'/>
<enum name='GL_IMG_read_format' value='1'/>
<enum name='GL_IMG_texture_compression_pvrtc' value='1'/>
<enum name='GL_IMPLEMENTATION_COLOR_READ_FORMAT' value='35739'/>
<enum name='GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES' value='35739'/>
<enum name='GL_IMPLEMENTATION_COLOR_READ_TYPE' value='35738'/>
<enum name='GL_IMPLEMENTATION_COLOR_READ_TYPE_OES' value='35738'/>
<enum name='GL_INCR' value='7682'/>
<enum name='GL_INCR_WRAP' value='34055'/>
<enum name='GL_INCR_WRAP_OES' value='34055'/>
<enum name='GL_INFO_LOG_LENGTH' value='35716'/>
<enum name='GL_INT' value='5124'/>
<enum name='GL_INTERLEAVED_ATTRIBS' value='35980'/>
<enum name='GL_INTERPOLATE' value='34165'/>
<enum name='GL_INT_2_10_10_10_REV' value='36255'/>
<enum name='GL_INT_SAMPLER_2D' value='36298'/>
<enum name='GL_INT_SAMPLER_2D_ARRAY' value='36303'/>
<enum name='GL_INT_SAMPLER_3D' value='36299'/>
<enum name='GL_INT_SAMPLER_CUBE' value='36300'/>
<enum name='GL_INT_VEC2' value='35667'/>
<enum name='GL_INT_VEC3' value='35668'/>
<enum name='GL_INT_VEC4' value='35669'/>
<enum name='GL_INVALID_ENUM' value='1280'/>
<enum name='GL_INVALID_FRAMEBUFFER_OPERATION' value='1286'/>
<enum name='GL_INVALID_FRAMEBUFFER_OPERATION_OES' value='1286'/>
<enum name='GL_INVALID_INDEX' value='4294967295'/>
<enum name='GL_INVALID_OPERATION' value='1282'/>
<enum name='GL_INVALID_VALUE' value='1281'/>
<enum name='GL_INVERT' value='5386'/>
<enum name='GL_KEEP' value='7680'/>
<enum name='GL_KHR_texture_compression_astc_ldr' value='1'/>
<enum name='GL_LEQUAL' value='515'/>
<enum name='GL_LESS' value='513'/>
<enum name='GL_LIGHT0' value='16384'/>
<enum name='GL_LIGHT1' value='16385'/>
<enum name='GL_LIGHT2' value='16386'/>
<enum name='GL_LIGHT3' value='16387'/>
<enum name='GL_LIGHT4' value='16388'/>
<enum name='GL_LIGHT5' value='16389'/>
<enum name='GL_LIGHT6' value='16390'/>
<enum name='GL_LIGHT7' value='16391'/>
<enum name='GL_LIGHTING' value='2896'/>
<enum name='GL_LIGHT_MODEL_AMBIENT' value='2899'/>
<enum name='GL_LIGHT_MODEL_TWO_SIDE' value='2898'/>
<enum name='GL_LINEAR' value='9729'/>
<enum name='GL_LINEAR_ATTENUATION' value='4616'/>
<enum name='GL_LINEAR_MIPMAP_LINEAR' value='9987'/>
<enum name='GL_LINEAR_MIPMAP_NEAREST' value='9985'/>
<enum name='GL_LINES' value='1'/>
<enum name='GL_LINE_LOOP' value='2'/>
<enum name='GL_LINE_SMOOTH' value='2848'/>
<enum name='GL_LINE_SMOOTH_HINT' value='3154'/>
<enum name='GL_LINE_STRIP' value='3'/>
<enum name='GL_LINE_WIDTH' value='2849'/>
<enum name='GL_LINK_STATUS' value='35714'/>
<enum name='GL_LOGIC_OP_MODE' value='3056'/>
<enum name='GL_LOW_FLOAT' value='36336'/>
<enum name='GL_LOW_INT' value='36339'/>
<enum name='GL_LUMINANCE' value='6409'/>
<enum name='GL_LUMINANCE16F_EXT' value='34846'/>
<enum name='GL_LUMINANCE32F_EXT' value='34840'/>
<enum name='GL_LUMINANCE8_ALPHA8_EXT' value='32837'/>
<enum name='GL_LUMINANCE8_EXT' value='32832'/>
<enum name='GL_LUMINANCE_ALPHA' value='6410'/>
<enum name='GL_LUMINANCE_ALPHA16F_EXT' value='34847'/>
<enum name='GL_LUMINANCE_ALPHA32F_EXT' value='34841'/>
<enum name='GL_MAJOR_VERSION' value='33307'/>
<enum name='GL_MAP_FLUSH_EXPLICIT_BIT' value='16'/>
<enum name='GL_MAP_FLUSH_EXPLICIT_BIT_EXT' value='16'/>
<enum name='GL_MAP_INVALIDATE_BUFFER_BIT' value='8'/>
<enum name='GL_MAP_INVALIDATE_BUFFER_BIT_EXT' value='8'/>
<enum name='GL_MAP_INVALIDATE_RANGE_BIT' value='4'/>
<enum name='GL_MAP_INVALIDATE_RANGE_BIT_EXT' value='4'/>
<enum name='GL_MAP_READ_BIT' value='1'/>
<enum name='GL_MAP_READ_BIT_EXT' value='1'/>
<enum name='GL_MAP_UNSYNCHRONIZED_BIT' value='32'/>
<enum name='GL_MAP_UNSYNCHRONIZED_BIT_EXT' value='32'/>
<enum name='GL_MAP_WRITE_BIT' value='2'/>
<enum name='GL_MAP_WRITE_BIT_EXT' value='2'/>
<enum name='GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES' value='35742'/>
<enum name='GL_MATRIX_INDEX_ARRAY_OES' value='34884'/>
<enum name='GL_MATRIX_INDEX_ARRAY_POINTER_OES' value='34889'/>
<enum name='GL_MATRIX_INDEX_ARRAY_SIZE_OES' value='34886'/>
<enum name='GL_MATRIX_INDEX_ARRAY_STRIDE_OES' value='34888'/>
<enum name='GL_MATRIX_INDEX_ARRAY_TYPE_OES' value='34887'/>
<enum name='GL_MATRIX_MODE' value='2976'/>
<enum name='GL_MATRIX_PALETTE_OES' value='34880'/>
<enum name='GL_MAX' value='32776'/>
<enum name='GL_MAX_3D_TEXTURE_SIZE' value='32883'/>
<enum name='GL_MAX_ARRAY_TEXTURE_LAYERS' value='35071'/>
<enum name='GL_MAX_CLIP_DISTANCES_APPLE' value='3378'/>
<enum name='GL_MAX_CLIP_PLANES' value='3378'/>
<enum name='GL_MAX_COLOR_ATTACHMENTS' value='36063'/>
<enum name='GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS' value='35379'/>
<enum name='GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS' value='35661'/>
<enum name='GL_MAX_COMBINED_UNIFORM_BLOCKS' value='35374'/>
<enum name='GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS' value='35377'/>
<enum name='GL_MAX_CUBE_MAP_TEXTURE_SIZE' value='34076'/>
<enum name='GL_MAX_DRAW_BUFFERS' value='34852'/>
<enum name='GL_MAX_ELEMENTS_INDICES' value='33001'/>
<enum name='GL_MAX_ELEMENTS_VERTICES' value='33000'/>
<enum name='GL_MAX_ELEMENT_INDEX' value='36203'/>
<enum name='GL_MAX_EXT' value='32776'/>
<enum name='GL_MAX_FRAGMENT_INPUT_COMPONENTS' value='37157'/>
<enum name='GL_MAX_FRAGMENT_UNIFORM_BLOCKS' value='35373'/>
<enum name='GL_MAX_FRAGMENT_UNIFORM_COMPONENTS' value='35657'/>
<enum name='GL_MAX_FRAGMENT_UNIFORM_VECTORS' value='36349'/>
<enum name='GL_MAX_LIGHTS' value='3377'/>
<enum name='GL_MAX_MODELVIEW_STACK_DEPTH' value='3382'/>
<enum name='GL_MAX_PALETTE_MATRICES_OES' value='34882'/>
<enum name='GL_MAX_PROGRAM_TEXEL_OFFSET' value='35077'/>
<enum name='GL_MAX_PROJECTION_STACK_DEPTH' value='3384'/>
<enum name='GL_MAX_RENDERBUFFER_SIZE' value='34024'/>
<enum name='GL_MAX_RENDERBUFFER_SIZE_OES' value='34024'/>
<enum name='GL_MAX_SAMPLES' value='36183'/>
<enum name='GL_MAX_SAMPLES_APPLE' value='36183'/>
<enum name='GL_MAX_SERVER_WAIT_TIMEOUT' value='37137'/>
<enum name='GL_MAX_SERVER_WAIT_TIMEOUT_APPLE' value='37137'/>
<enum name='GL_MAX_TEXTURE_IMAGE_UNITS' value='34930'/>
<enum name='GL_MAX_TEXTURE_LOD_BIAS' value='34045'/>
<enum name='GL_MAX_TEXTURE_LOD_BIAS_EXT' value='34045'/>
<enum name='GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT' value='34047'/>
<enum name='GL_MAX_TEXTURE_SIZE' value='3379'/>
<enum name='GL_MAX_TEXTURE_STACK_DEPTH' value='3385'/>
<enum name='GL_MAX_TEXTURE_UNITS' value='34018'/>
<enum name='GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS' value='35978'/>
<enum name='GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS' value='35979'/>
<enum name='GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS' value='35968'/>
<enum name='GL_MAX_UNIFORM_BLOCK_SIZE' value='35376'/>
<enum name='GL_MAX_UNIFORM_BUFFER_BINDINGS' value='35375'/>
<enum name='GL_MAX_VARYING_COMPONENTS' value='35659'/>
<enum name='GL_MAX_VARYING_VECTORS' value='36348'/>
<enum name='GL_MAX_VERTEX_ATTRIBS' value='34921'/>
<enum name='GL_MAX_VERTEX_OUTPUT_COMPONENTS' value='37154'/>
<enum name='GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS' value='35660'/>
<enum name='GL_MAX_VERTEX_UNIFORM_BLOCKS' value='35371'/>
<enum name='GL_MAX_VERTEX_UNIFORM_COMPONENTS' value='35658'/>
<enum name='GL_MAX_VERTEX_UNIFORM_VECTORS' value='36347'/>
<enum name='GL_MAX_VERTEX_UNITS_OES' value='34468'/>
<enum name='GL_MAX_VIEWPORT_DIMS' value='3386'/>
<enum name='GL_MEDIUM_FLOAT' value='36337'/>
<enum name='GL_MEDIUM_INT' value='36340'/>
<enum name='GL_MIN' value='32775'/>
<enum name='GL_MINOR_VERSION' value='33308'/>
<enum name='GL_MIN_EXT' value='32775'/>
<enum name='GL_MIN_PROGRAM_TEXEL_OFFSET' value='35076'/>
<enum name='GL_MIRRORED_REPEAT' value='33648'/>
<enum name='GL_MIRRORED_REPEAT_OES' value='33648'/>
<enum name='GL_MODELVIEW' value='5888'/>
<enum name='GL_MODELVIEW_MATRIX' value='2982'/>
<enum name='GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES' value='35213'/>
<enum name='GL_MODELVIEW_STACK_DEPTH' value='2979'/>
<enum name='GL_MODULATE' value='8448'/>
<enum name='GL_MULTISAMPLE' value='32925'/>
<enum name='GL_NAND' value='5390'/>
<enum name='GL_NEAREST' value='9728'/>
<enum name='GL_NEAREST_MIPMAP_LINEAR' value='9986'/>
<enum name='GL_NEAREST_MIPMAP_NEAREST' value='9984'/>
<enum name='GL_NEVER' value='512'/>
<enum name='GL_NICEST' value='4354'/>
<enum name='GL_NONE' value='0'/>
<enum name='GL_NOOP' value='5381'/>
<enum name='GL_NOR' value='5384'/>
<enum name='GL_NORMALIZE' value='2977'/>
<enum name='GL_NORMAL_ARRAY' value='32885'/>
<enum name='GL_NORMAL_ARRAY_BUFFER_BINDING' value='34967'/>
<enum name='GL_NORMAL_ARRAY_POINTER' value='32911'/>
<enum name='GL_NORMAL_ARRAY_STRIDE' value='32895'/>
<enum name='GL_NORMAL_ARRAY_TYPE' value='32894'/>
<enum name='GL_NOTEQUAL' value='517'/>
<enum name='GL_NO_ERROR' value='0'/>
<enum name='GL_NUM_COMPRESSED_TEXTURE_FORMATS' value='34466'/>
<enum name='GL_NUM_EXTENSIONS' value='33309'/>
<enum name='GL_NUM_PROGRAM_BINARY_FORMATS' value='34814'/>
<enum name='GL_NUM_SAMPLE_COUNTS' value='37760'/>
<enum name='GL_NUM_SHADER_BINARY_FORMATS' value='36345'/>
<enum name='GL_OBJECT_TYPE' value='37138'/>
<enum name='GL_OBJECT_TYPE_APPLE' value='37138'/>
<enum name='GL_OES_VERSION_1_0' value='1'/>
<enum name='GL_OES_VERSION_1_1' value='1'/>
<enum name='GL_OES_blend_equation_separate' value='1'/>
<enum name='GL_OES_blend_func_separate' value='1'/>
<enum name='GL_OES_blend_subtract' value='1'/>
<enum name='GL_OES_byte_coordinates' value='1'/>
<enum name='GL_OES_compressed_paletted_texture' value='1'/>
<enum name='GL_OES_depth24' value='1'/>
<enum name='GL_OES_depth_texture' value='1'/>
<enum name='GL_OES_draw_texture' value='1'/>
<enum name='GL_OES_element_index_uint' value='1'/>
<enum name='GL_OES_fbo_render_mipmap' value='1'/>
<enum name='GL_OES_fixed_point' value='1'/>
<enum name='GL_OES_framebuffer_object' value='1'/>
<enum name='GL_OES_mapbuffer' value='1'/>
<enum name='GL_OES_matrix_get' value='1'/>
<enum name='GL_OES_matrix_palette' value='1'/>
<enum name='GL_OES_packed_depth_stencil' value='1'/>
<enum name='GL_OES_point_size_array' value='1'/>
<enum name='GL_OES_point_sprite' value='1'/>
<enum name='GL_OES_read_format' value='1'/>
<enum name='GL_OES_rgb8_rgba8' value='1'/>
<enum name='GL_OES_single_precision' value='1'/>
<enum name='GL_OES_standard_derivatives' value='1'/>
<enum name='GL_OES_stencil8' value='1'/>
<enum name='GL_OES_stencil_wrap' value='1'/>
<enum name='GL_OES_texture_float' value='1'/>
<enum name='GL_OES_texture_half_float' value='1'/>
<enum name='GL_OES_texture_half_float_linear' value='1'/>
<enum name='GL_OES_texture_mirrored_repeat' value='1'/>
<enum name='GL_OES_vertex_array_object' value='1'/>
<enum name='GL_ONE' value='1'/>
<enum name='GL_ONE_MINUS_CONSTANT_ALPHA' value='32772'/>
<enum name='GL_ONE_MINUS_CONSTANT_COLOR' value='32770'/>
<enum name='GL_ONE_MINUS_DST_ALPHA' value='773'/>
<enum name='GL_ONE_MINUS_DST_COLOR' value='775'/>
<enum name='GL_ONE_MINUS_SRC_ALPHA' value='771'/>
<enum name='GL_ONE_MINUS_SRC_COLOR' value='769'/>
<enum name='GL_OPERAND0_ALPHA' value='34200'/>
<enum name='GL_OPERAND0_RGB' value='34192'/>
<enum name='GL_OPERAND1_ALPHA' value='34201'/>
<enum name='GL_OPERAND1_RGB' value='34193'/>
<enum name='GL_OPERAND2_ALPHA' value='34202'/>
<enum name='GL_OPERAND2_RGB' value='34194'/>
<enum name='GL_OR' value='5383'/>
<enum name='GL_OR_INVERTED' value='5389'/>
<enum name='GL_OR_REVERSE' value='5387'/>
<enum name='GL_OUT_OF_MEMORY' value='1285'/>
<enum name='GL_PACK_ALIGNMENT' value='3333'/>
<enum name='GL_PACK_ROW_LENGTH' value='3330'/>
<enum name='GL_PACK_SKIP_PIXELS' value='3332'/>
<enum name='GL_PACK_SKIP_ROWS' value='3331'/>
<enum name='GL_PALETTE4_R5_G6_B5_OES' value='35730'/>
<enum name='GL_PALETTE4_RGB5_A1_OES' value='35732'/>
<enum name='GL_PALETTE4_RGB8_OES' value='35728'/>
<enum name='GL_PALETTE4_RGBA4_OES' value='35731'/>
<enum name='GL_PALETTE4_RGBA8_OES' value='35729'/>
<enum name='GL_PALETTE8_R5_G6_B5_OES' value='35735'/>
<enum name='GL_PALETTE8_RGB5_A1_OES' value='35737'/>
<enum name='GL_PALETTE8_RGB8_OES' value='35733'/>
<enum name='GL_PALETTE8_RGBA4_OES' value='35736'/>
<enum name='GL_PALETTE8_RGBA8_OES' value='35734'/>
<enum name='GL_PERSPECTIVE_CORRECTION_HINT' value='3152'/>
<enum name='GL_PIXEL_PACK_BUFFER' value='35051'/>
<enum name='GL_PIXEL_PACK_BUFFER_BINDING' value='35053'/>
<enum name='GL_PIXEL_UNPACK_BUFFER' value='35052'/>
<enum name='GL_PIXEL_UNPACK_BUFFER_BINDING' value='35055'/>
<enum name='GL_POINTS' value='0'/>
<enum name='GL_POINT_DISTANCE_ATTENUATION' value='33065'/>
<enum name='GL_POINT_FADE_THRESHOLD_SIZE' value='33064'/>
<enum name='GL_POINT_SIZE' value='2833'/>
<enum name='GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES' value='35743'/>
<enum name='GL_POINT_SIZE_ARRAY_OES' value='35740'/>
<enum name='GL_POINT_SIZE_ARRAY_POINTER_OES' value='35212'/>
<enum name='GL_POINT_SIZE_ARRAY_STRIDE_OES' value='35211'/>
<enum name='GL_POINT_SIZE_ARRAY_TYPE_OES' value='35210'/>
<enum name='GL_POINT_SIZE_MAX' value='33063'/>
<enum name='GL_POINT_SIZE_MIN' value='33062'/>
<enum name='GL_POINT_SMOOTH' value='2832'/>
<enum name='GL_POINT_SMOOTH_HINT' value='3153'/>
<enum name='GL_POINT_SPRITE_OES' value='34913'/>
<enum name='GL_POLYGON_OFFSET_FACTOR' value='32824'/>
<enum name='GL_POLYGON_OFFSET_FILL' value='32823'/>
<enum name='GL_POLYGON_OFFSET_UNITS' value='10752'/>
<enum name='GL_POSITION' value='4611'/>
<enum name='GL_PREVIOUS' value='34168'/>
<enum name='GL_PRIMARY_COLOR' value='34167'/>
<enum name='GL_PRIMITIVE_RESTART_FIXED_INDEX' value='36201'/>
<enum name='GL_PROGRAM_BINARY_FORMATS' value='34815'/>
<enum name='GL_PROGRAM_BINARY_LENGTH' value='34625'/>
<enum name='GL_PROGRAM_BINARY_RETRIEVABLE_HINT' value='33367'/>
<enum name='GL_PROGRAM_OBJECT_EXT' value='35648'/>
<enum name='GL_PROGRAM_PIPELINE_BINDING_EXT' value='33370'/>
<enum name='GL_PROGRAM_PIPELINE_OBJECT_EXT' value='35407'/>
<enum name='GL_PROGRAM_SEPARABLE_EXT' value='33368'/>
<enum name='GL_PROJECTION' value='5889'/>
<enum name='GL_PROJECTION_MATRIX' value='2983'/>
<enum name='GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES' value='35214'/>
<enum name='GL_PROJECTION_STACK_DEPTH' value='2980'/>
<enum name='GL_QUADRATIC_ATTENUATION' value='4617'/>
<enum name='GL_QUERY_OBJECT_EXT' value='37203'/>
<enum name='GL_QUERY_RESULT' value='34918'/>
<enum name='GL_QUERY_RESULT_AVAILABLE' value='34919'/>
<enum name='GL_QUERY_RESULT_AVAILABLE_EXT' value='34919'/>
<enum name='GL_QUERY_RESULT_EXT' value='34918'/>
<enum name='GL_R11F_G11F_B10F' value='35898'/>
<enum name='GL_R11F_G11F_B10F_APPLE' value='35898'/>
<enum name='GL_R16F' value='33325'/>
<enum name='GL_R16F_EXT' value='33325'/>
<enum name='GL_R16I' value='33331'/>
<enum name='GL_R16UI' value='33332'/>
<enum name='GL_R32F' value='33326'/>
<enum name='GL_R32F_EXT' value='33326'/>
<enum name='GL_R32I' value='33333'/>
<enum name='GL_R32UI' value='33334'/>
<enum name='GL_R8' value='33321'/>
<enum name='GL_R8I' value='33329'/>
<enum name='GL_R8UI' value='33330'/>
<enum name='GL_R8_EXT' value='33321'/>
<enum name='GL_R8_SNORM' value='36756'/>
<enum name='GL_RASTERIZER_DISCARD' value='35977'/>
<enum name='GL_READ_BUFFER' value='3074'/>
<enum name='GL_READ_FRAMEBUFFER' value='36008'/>
<enum name='GL_READ_FRAMEBUFFER_APPLE' value='36008'/>
<enum name='GL_READ_FRAMEBUFFER_BINDING' value='36010'/>
<enum name='GL_READ_FRAMEBUFFER_BINDING_APPLE' value='36010'/>
<enum name='GL_RED' value='6403'/>
<enum name='GL_RED_BITS' value='3410'/>
<enum name='GL_RED_EXT' value='6403'/>
<enum name='GL_RED_INTEGER' value='36244'/>
<enum name='GL_RENDERBUFFER' value='36161'/>
<enum name='GL_RENDERBUFFER_ALPHA_SIZE' value='36179'/>
<enum name='GL_RENDERBUFFER_ALPHA_SIZE_OES' value='36179'/>
<enum name='GL_RENDERBUFFER_BINDING' value='36007'/>
<enum name='GL_RENDERBUFFER_BINDING_OES' value='36007'/>
<enum name='GL_RENDERBUFFER_BLUE_SIZE' value='36178'/>
<enum name='GL_RENDERBUFFER_BLUE_SIZE_OES' value='36178'/>
<enum name='GL_RENDERBUFFER_DEPTH_SIZE' value='36180'/>
<enum name='GL_RENDERBUFFER_DEPTH_SIZE_OES' value='36180'/>
<enum name='GL_RENDERBUFFER_GREEN_SIZE' value='36177'/>
<enum name='GL_RENDERBUFFER_GREEN_SIZE_OES' value='36177'/>
<enum name='GL_RENDERBUFFER_HEIGHT' value='36163'/>
<enum name='GL_RENDERBUFFER_HEIGHT_OES' value='36163'/>
<enum name='GL_RENDERBUFFER_INTERNAL_FORMAT' value='36164'/>
<enum name='GL_RENDERBUFFER_INTERNAL_FORMAT_OES' value='36164'/>
<enum name='GL_RENDERBUFFER_OES' value='36161'/>
<enum name='GL_RENDERBUFFER_RED_SIZE' value='36176'/>
<enum name='GL_RENDERBUFFER_RED_SIZE_OES' value='36176'/>
<enum name='GL_RENDERBUFFER_SAMPLES' value='36011'/>
<enum name='GL_RENDERBUFFER_SAMPLES_APPLE' value='36011'/>
<enum name='GL_RENDERBUFFER_STENCIL_SIZE' value='36181'/>
<enum name='GL_RENDERBUFFER_STENCIL_SIZE_OES' value='36181'/>
<enum name='GL_RENDERBUFFER_WIDTH' value='36162'/>
<enum name='GL_RENDERBUFFER_WIDTH_OES' value='36162'/>
<enum name='GL_RENDERER' value='7937'/>
<enum name='GL_REPEAT' value='10497'/>
<enum name='GL_REPLACE' value='7681'/>
<enum name='GL_RESCALE_NORMAL' value='32826'/>
<enum name='GL_RG' value='33319'/>
<enum name='GL_RG16F' value='33327'/>
<enum name='GL_RG16F_EXT' value='33327'/>
<enum name='GL_RG16I' value='33337'/>
<enum name='GL_RG16UI' value='33338'/>
<enum name='GL_RG32F' value='33328'/>
<enum name='GL_RG32F_EXT' value='33328'/>
<enum name='GL_RG32I' value='33339'/>
<enum name='GL_RG32UI' value='33340'/>
<enum name='GL_RG8' value='33323'/>
<enum name='GL_RG8I' value='33335'/>
<enum name='GL_RG8UI' value='33336'/>
<enum name='GL_RG8_EXT' value='33323'/>
<enum name='GL_RG8_SNORM' value='36757'/>
<enum name='GL_RGB' value='6407'/>
<enum name='GL_RGB10_A2' value='32857'/>
<enum name='GL_RGB10_A2UI' value='36975'/>
<enum name='GL_RGB16F' value='34843'/>
<enum name='GL_RGB16F_EXT' value='34843'/>
<enum name='GL_RGB16I' value='36233'/>
<enum name='GL_RGB16UI' value='36215'/>
<enum name='GL_RGB32F' value='34837'/>
<enum name='GL_RGB32F_EXT' value='34837'/>
<enum name='GL_RGB32I' value='36227'/>
<enum name='GL_RGB32UI' value='36209'/>
<enum name='GL_RGB565' value='36194'/>
<enum name='GL_RGB565_OES' value='36194'/>
<enum name='GL_RGB5_A1' value='32855'/>
<enum name='GL_RGB5_A1_OES' value='32855'/>
<enum name='GL_RGB8' value='32849'/>
<enum name='GL_RGB8I' value='36239'/>
<enum name='GL_RGB8UI' value='36221'/>
<enum name='GL_RGB8_OES' value='32849'/>
<enum name='GL_RGB8_SNORM' value='36758'/>
<enum name='GL_RGB9_E5' value='35901'/>
<enum name='GL_RGB9_E5_APPLE' value='35901'/>
<enum name='GL_RGBA' value='6408'/>
<enum name='GL_RGBA16F' value='34842'/>
<enum name='GL_RGBA16F_EXT' value='34842'/>
<enum name='GL_RGBA16I' value='36232'/>
<enum name='GL_RGBA16UI' value='36214'/>
<enum name='GL_RGBA32F' value='34836'/>
<enum name='GL_RGBA32F_EXT' value='34836'/>
<enum name='GL_RGBA32I' value='36226'/>
<enum name='GL_RGBA32UI' value='36208'/>
<enum name='GL_RGBA4' value='32854'/>
<enum name='GL_RGBA4_OES' value='32854'/>
<enum name='GL_RGBA8' value='32856'/>
<enum name='GL_RGBA8I' value='36238'/>
<enum name='GL_RGBA8UI' value='36220'/>
<enum name='GL_RGBA8_OES' value='32856'/>
<enum name='GL_RGBA8_SNORM' value='36759'/>
<enum name='GL_RGBA_INTEGER' value='36249'/>
<enum name='GL_RGB_422_APPLE' value='35359'/>
<enum name='GL_RGB_INTEGER' value='36248'/>
<enum name='GL_RGB_RAW_422_APPLE' value='35409'/>
<enum name='GL_RGB_SCALE' value='34163'/>
<enum name='GL_RG_EXT' value='33319'/>
<enum name='GL_RG_INTEGER' value='33320'/>
<enum name='GL_SAMPLER' value='33510'/>
<enum name='GL_SAMPLER_2D' value='35678'/>
<enum name='GL_SAMPLER_2D_ARRAY' value='36289'/>
<enum name='GL_SAMPLER_2D_ARRAY_SHADOW' value='36292'/>
<enum name='GL_SAMPLER_2D_SHADOW' value='35682'/>
<enum name='GL_SAMPLER_2D_SHADOW_EXT' value='35682'/>
<enum name='GL_SAMPLER_3D' value='35679'/>
<enum name='GL_SAMPLER_BINDING' value='35097'/>
<enum name='GL_SAMPLER_CUBE' value='35680'/>
<enum name='GL_SAMPLER_CUBE_SHADOW' value='36293'/>
<enum name='GL_SAMPLES' value='32937'/>
<enum name='GL_SAMPLE_ALPHA_TO_COVERAGE' value='32926'/>
<enum name='GL_SAMPLE_ALPHA_TO_ONE' value='32927'/>
<enum name='GL_SAMPLE_BUFFERS' value='32936'/>
<enum name='GL_SAMPLE_COVERAGE' value='32928'/>
<enum name='GL_SAMPLE_COVERAGE_INVERT' value='32939'/>
<enum name='GL_SAMPLE_COVERAGE_VALUE' value='32938'/>
<enum name='GL_SCISSOR_BOX' value='3088'/>
<enum name='GL_SCISSOR_TEST' value='3089'/>
<enum name='GL_SEPARATE_ATTRIBS' value='35981'/>
<enum name='GL_SET' value='5391'/>
<enum name='GL_SHADER_BINARY_FORMATS' value='36344'/>
<enum name='GL_SHADER_COMPILER' value='36346'/>
<enum name='GL_SHADER_OBJECT_EXT' value='35656'/>
<enum name='GL_SHADER_SOURCE_LENGTH' value='35720'/>
<enum name='GL_SHADER_TYPE' value='35663'/>
<enum name='GL_SHADE_MODEL' value='2900'/>
<enum name='GL_SHADING_LANGUAGE_VERSION' value='35724'/>
<enum name='GL_SHININESS' value='5633'/>
<enum name='GL_SHORT' value='5122'/>
<enum name='GL_SIGNALED' value='37145'/>
<enum name='GL_SIGNALED_APPLE' value='37145'/>
<enum name='GL_SIGNED_NORMALIZED' value='36764'/>
<enum name='GL_SMOOTH' value='7425'/>
<enum name='GL_SMOOTH_LINE_WIDTH_RANGE' value='2850'/>
<enum name='GL_SMOOTH_POINT_SIZE_RANGE' value='2834'/>
<enum name='GL_SPECULAR' value='4610'/>
<enum name='GL_SPOT_CUTOFF' value='4614'/>
<enum name='GL_SPOT_DIRECTION' value='4612'/>
<enum name='GL_SPOT_EXPONENT' value='4613'/>
<enum name='GL_SRC0_ALPHA' value='34184'/>
<enum name='GL_SRC0_RGB' value='34176'/>
<enum name='GL_SRC1_ALPHA' value='34185'/>
<enum name='GL_SRC1_RGB' value='34177'/>
<enum name='GL_SRC2_ALPHA' value='34186'/>
<enum name='GL_SRC2_RGB' value='34178'/>
<enum name='GL_SRC_ALPHA' value='770'/>
<enum name='GL_SRC_ALPHA_SATURATE' value='776'/>
<enum name='GL_SRC_COLOR' value='768'/>
<enum name='GL_SRGB' value='35904'/>
<enum name='GL_SRGB8' value='35905'/>
<enum name='GL_SRGB8_ALPHA8' value='35907'/>
<enum name='GL_SRGB8_ALPHA8_EXT' value='35907'/>
<enum name='GL_SRGB_ALPHA_EXT' value='35906'/>
<enum name='GL_SRGB_EXT' value='35904'/>
<enum name='GL_STACK_OVERFLOW' value='1283'/>
<enum name='GL_STACK_UNDERFLOW' value='1284'/>
<enum name='GL_STATIC_COPY' value='35046'/>
<enum name='GL_STATIC_DRAW' value='35044'/>
<enum name='GL_STATIC_READ' value='35045'/>
<enum name='GL_STENCIL' value='6146'/>
<enum name='GL_STENCIL_ATTACHMENT' value='36128'/>
<enum name='GL_STENCIL_ATTACHMENT_OES' value='36128'/>
<enum name='GL_STENCIL_BACK_FAIL' value='34817'/>
<enum name='GL_STENCIL_BACK_FUNC' value='34816'/>
<enum name='GL_STENCIL_BACK_PASS_DEPTH_FAIL' value='34818'/>
<enum name='GL_STENCIL_BACK_PASS_DEPTH_PASS' value='34819'/>
<enum name='GL_STENCIL_BACK_REF' value='36003'/>
<enum name='GL_STENCIL_BACK_VALUE_MASK' value='36004'/>
<enum name='GL_STENCIL_BACK_WRITEMASK' value='36005'/>
<enum name='GL_STENCIL_BITS' value='3415'/>
<enum name='GL_STENCIL_BUFFER_BIT' value='1024'/>
<enum name='GL_STENCIL_CLEAR_VALUE' value='2961'/>
<enum name='GL_STENCIL_EXT' value='6146'/>
<enum name='GL_STENCIL_FAIL' value='2964'/>
<enum name='GL_STENCIL_FUNC' value='2962'/>
<enum name='GL_STENCIL_INDEX8' value='36168'/>
<enum name='GL_STENCIL_INDEX8_OES' value='36168'/>
<enum name='GL_STENCIL_PASS_DEPTH_FAIL' value='2965'/>
<enum name='GL_STENCIL_PASS_DEPTH_PASS' value='2966'/>
<enum name='GL_STENCIL_REF' value='2967'/>
<enum name='GL_STENCIL_TEST' value='2960'/>
<enum name='GL_STENCIL_VALUE_MASK' value='2963'/>
<enum name='GL_STENCIL_WRITEMASK' value='2968'/>
<enum name='GL_STREAM_COPY' value='35042'/>
<enum name='GL_STREAM_DRAW' value='35040'/>
<enum name='GL_STREAM_READ' value='35041'/>
<enum name='GL_SUBPIXEL_BITS' value='3408'/>
<enum name='GL_SUBTRACT' value='34023'/>
<enum name='GL_SYNC_CONDITION' value='37139'/>
<enum name='GL_SYNC_CONDITION_APPLE' value='37139'/>
<enum name='GL_SYNC_FENCE' value='37142'/>
<enum name='GL_SYNC_FENCE_APPLE' value='37142'/>
<enum name='GL_SYNC_FLAGS' value='37141'/>
<enum name='GL_SYNC_FLAGS_APPLE' value='37141'/>
<enum name='GL_SYNC_FLUSH_COMMANDS_BIT' value='1'/>
<enum name='GL_SYNC_FLUSH_COMMANDS_BIT_APPLE' value='1'/>
<enum name='GL_SYNC_GPU_COMMANDS_COMPLETE' value='37143'/>
<enum name='GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE' value='37143'/>
<enum name='GL_SYNC_OBJECT_APPLE' value='35411'/>
<enum name='GL_SYNC_STATUS' value='37140'/>
<enum name='GL_SYNC_STATUS_APPLE' value='37140'/>
<enum name='GL_TEXTURE' value='5890'/>
<enum name='GL_TEXTURE0' value='33984'/>
<enum name='GL_TEXTURE1' value='33985'/>
<enum name='GL_TEXTURE10' value='33994'/>
<enum name='GL_TEXTURE11' value='33995'/>
<enum name='GL_TEXTURE12' value='33996'/>
<enum name='GL_TEXTURE13' value='33997'/>
<enum name='GL_TEXTURE14' value='33998'/>
<enum name='GL_TEXTURE15' value='33999'/>
<enum name='GL_TEXTURE16' value='34000'/>
<enum name='GL_TEXTURE17' value='34001'/>
<enum name='GL_TEXTURE18' value='34002'/>
<enum name='GL_TEXTURE19' value='34003'/>
<enum name='GL_TEXTURE2' value='33986'/>
<enum name='GL_TEXTURE20' value='34004'/>
<enum name='GL_TEXTURE21' value='34005'/>
<enum name='GL_TEXTURE22' value='34006'/>
<enum name='GL_TEXTURE23' value='34007'/>
<enum name='GL_TEXTURE24' value='34008'/>
<enum name='GL_TEXTURE25' value='34009'/>
<enum name='GL_TEXTURE26' value='34010'/>
<enum name='GL_TEXTURE27' value='34011'/>
<enum name='GL_TEXTURE28' value='34012'/>
<enum name='GL_TEXTURE29' value='34013'/>
<enum name='GL_TEXTURE3' value='33987'/>
<enum name='GL_TEXTURE30' value='34014'/>
<enum name='GL_TEXTURE31' value='34015'/>
<enum name='GL_TEXTURE4' value='33988'/>
<enum name='GL_TEXTURE5' value='33989'/>
<enum name='GL_TEXTURE6' value='33990'/>
<enum name='GL_TEXTURE7' value='33991'/>
<enum name='GL_TEXTURE8' value='33992'/>
<enum name='GL_TEXTURE9' value='33993'/>
<enum name='GL_TEXTURE_2D' value='3553'/>
<enum name='GL_TEXTURE_2D_ARRAY' value='35866'/>
<enum name='GL_TEXTURE_3D' value='32879'/>
<enum name='GL_TEXTURE_BASE_LEVEL' value='33084'/>
<enum name='GL_TEXTURE_BINDING_2D' value='32873'/>
<enum name='GL_TEXTURE_BINDING_2D_ARRAY' value='35869'/>
<enum name='GL_TEXTURE_BINDING_3D' value='32874'/>
<enum name='GL_TEXTURE_BINDING_CUBE_MAP' value='34068'/>
<enum name='GL_TEXTURE_COMPARE_FUNC' value='34893'/>
<enum name='GL_TEXTURE_COMPARE_FUNC_EXT' value='34893'/>
<enum name='GL_TEXTURE_COMPARE_MODE' value='34892'/>
<enum name='GL_TEXTURE_COMPARE_MODE_EXT' value='34892'/>
<enum name='GL_TEXTURE_COORD_ARRAY' value='32888'/>
<enum name='GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING' value='34970'/>
<enum name='GL_TEXTURE_COORD_ARRAY_POINTER' value='32914'/>
<enum name='GL_TEXTURE_COORD_ARRAY_SIZE' value='32904'/>
<enum name='GL_TEXTURE_COORD_ARRAY_STRIDE' value='32906'/>
<enum name='GL_TEXTURE_COORD_ARRAY_TYPE' value='32905'/>
<enum name='GL_TEXTURE_CROP_RECT_OES' value='35741'/>
<enum name='GL_TEXTURE_CUBE_MAP' value='34067'/>
<enum name='GL_TEXTURE_CUBE_MAP_NEGATIVE_X' value='34070'/>
<enum name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Y' value='34072'/>
<enum name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Z' value='34074'/>
<enum name='GL_TEXTURE_CUBE_MAP_POSITIVE_X' value='34069'/>
<enum name='GL_TEXTURE_CUBE_MAP_POSITIVE_Y' value='34071'/>
<enum name='GL_TEXTURE_CUBE_MAP_POSITIVE_Z' value='34073'/>
<enum name='GL_TEXTURE_ENV' value='8960'/>
<enum name='GL_TEXTURE_ENV_COLOR' value='8705'/>
<enum name='GL_TEXTURE_ENV_MODE' value='8704'/>
<enum name='GL_TEXTURE_FILTER_CONTROL_EXT' value='34048'/>
<enum name='GL_TEXTURE_IMMUTABLE_FORMAT' value='37167'/>
<enum name='GL_TEXTURE_IMMUTABLE_FORMAT_EXT' value='37167'/>
<enum name='GL_TEXTURE_IMMUTABLE_LEVELS' value='33503'/>
<enum name='GL_TEXTURE_LOD_BIAS_EXT' value='34049'/>
<enum name='GL_TEXTURE_MAG_FILTER' value='10240'/>
<enum name='GL_TEXTURE_MATRIX' value='2984'/>
<enum name='GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES' value='35215'/>
<enum name='GL_TEXTURE_MAX_ANISOTROPY_EXT' value='34046'/>
<enum name='GL_TEXTURE_MAX_LEVEL' value='33085'/>
<enum name='GL_TEXTURE_MAX_LEVEL_APPLE' value='33085'/>
<enum name='GL_TEXTURE_MAX_LOD' value='33083'/>
<enum name='GL_TEXTURE_MIN_FILTER' value='10241'/>
<enum name='GL_TEXTURE_MIN_LOD' value='33082'/>
<enum name='GL_TEXTURE_STACK_DEPTH' value='2981'/>
<enum name='GL_TEXTURE_SWIZZLE_A' value='36421'/>
<enum name='GL_TEXTURE_SWIZZLE_B' value='36420'/>
<enum name='GL_TEXTURE_SWIZZLE_G' value='36419'/>
<enum name='GL_TEXTURE_SWIZZLE_R' value='36418'/>
<enum name='GL_TEXTURE_WRAP_R' value='32882'/>
<enum name='GL_TEXTURE_WRAP_S' value='10242'/>
<enum name='GL_TEXTURE_WRAP_T' value='10243'/>
<enum name='GL_TIMEOUT_EXPIRED' value='37147'/>
<enum name='GL_TIMEOUT_EXPIRED_APPLE' value='37147'/>
<enum name='GL_TIMEOUT_IGNORED' value='18446744073709551615'/>
<enum name='GL_TIMEOUT_IGNORED_APPLE' value='18446744073709551615'/>
<enum name='GL_TRANSFORM_FEEDBACK' value='36386'/>
<enum name='GL_TRANSFORM_FEEDBACK_ACTIVE' value='36388'/>
<enum name='GL_TRANSFORM_FEEDBACK_BINDING' value='36389'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER' value='35982'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_BINDING' value='35983'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_MODE' value='35967'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_SIZE' value='35973'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_START' value='35972'/>
<enum name='GL_TRANSFORM_FEEDBACK_PAUSED' value='36387'/>
<enum name='GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN' value='35976'/>
<enum name='GL_TRANSFORM_FEEDBACK_VARYINGS' value='35971'/>
<enum name='GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH' value='35958'/>
<enum name='GL_TRIANGLES' value='4'/>
<enum name='GL_TRIANGLE_FAN' value='6'/>
<enum name='GL_TRIANGLE_STRIP' value='5'/>
<enum name='GL_TRUE' value='1'/>
<enum name='GL_UNIFORM_ARRAY_STRIDE' value='35388'/>
<enum name='GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS' value='35394'/>
<enum name='GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES' value='35395'/>
<enum name='GL_UNIFORM_BLOCK_BINDING' value='35391'/>
<enum name='GL_UNIFORM_BLOCK_DATA_SIZE' value='35392'/>
<enum name='GL_UNIFORM_BLOCK_INDEX' value='35386'/>
<enum name='GL_UNIFORM_BLOCK_NAME_LENGTH' value='35393'/>
<enum name='GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER' value='35398'/>
<enum name='GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER' value='35396'/>
<enum name='GL_UNIFORM_BUFFER' value='35345'/>
<enum name='GL_UNIFORM_BUFFER_BINDING' value='35368'/>
<enum name='GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT' value='35380'/>
<enum name='GL_UNIFORM_BUFFER_SIZE' value='35370'/>
<enum name='GL_UNIFORM_BUFFER_START' value='35369'/>
<enum name='GL_UNIFORM_IS_ROW_MAJOR' value='35390'/>
<enum name='GL_UNIFORM_MATRIX_STRIDE' value='35389'/>
<enum name='GL_UNIFORM_NAME_LENGTH' value='35385'/>
<enum name='GL_UNIFORM_OFFSET' value='35387'/>
<enum name='GL_UNIFORM_SIZE' value='35384'/>
<enum name='GL_UNIFORM_TYPE' value='35383'/>
<enum name='GL_UNPACK_ALIGNMENT' value='3317'/>
<enum name='GL_UNPACK_IMAGE_HEIGHT' value='32878'/>
<enum name='GL_UNPACK_ROW_LENGTH' value='3314'/>
<enum name='GL_UNPACK_SKIP_IMAGES' value='32877'/>
<enum name='GL_UNPACK_SKIP_PIXELS' value='3316'/>
<enum name='GL_UNPACK_SKIP_ROWS' value='3315'/>
<enum name='GL_UNSIGNALED' value='37144'/>
<enum name='GL_UNSIGNALED_APPLE' value='37144'/>
<enum name='GL_UNSIGNED_BYTE' value='5121'/>
<enum name='GL_UNSIGNED_INT' value='5125'/>
<enum name='GL_UNSIGNED_INT_10F_11F_11F_REV' value='35899'/>
<enum name='GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE' value='35899'/>
<enum name='GL_UNSIGNED_INT_24_8' value='34042'/>
<enum name='GL_UNSIGNED_INT_24_8_OES' value='34042'/>
<enum name='GL_UNSIGNED_INT_2_10_10_10_REV' value='33640'/>
<enum name='GL_UNSIGNED_INT_5_9_9_9_REV' value='35902'/>
<enum name='GL_UNSIGNED_INT_5_9_9_9_REV_APPLE' value='35902'/>
<enum name='GL_UNSIGNED_INT_OES' value='5125'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_2D' value='36306'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_2D_ARRAY' value='36311'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_3D' value='36307'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_CUBE' value='36308'/>
<enum name='GL_UNSIGNED_INT_VEC2' value='36294'/>
<enum name='GL_UNSIGNED_INT_VEC3' value='36295'/>
<enum name='GL_UNSIGNED_INT_VEC4' value='36296'/>
<enum name='GL_UNSIGNED_NORMALIZED' value='35863'/>
<enum name='GL_UNSIGNED_NORMALIZED_EXT' value='35863'/>
<enum name='GL_UNSIGNED_SHORT' value='5123'/>
<enum name='GL_UNSIGNED_SHORT_1_5_5_5_REV' value='33638'/>
<enum name='GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT' value='33638'/>
<enum name='GL_UNSIGNED_SHORT_4_4_4_4' value='32819'/>
<enum name='GL_UNSIGNED_SHORT_4_4_4_4_REV' value='33637'/>
<enum name='GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT' value='33637'/>
<enum name='GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG' value='33637'/>
<enum name='GL_UNSIGNED_SHORT_5_5_5_1' value='32820'/>
<enum name='GL_UNSIGNED_SHORT_5_6_5' value='33635'/>
<enum name='GL_UNSIGNED_SHORT_8_8_APPLE' value='34234'/>
<enum name='GL_UNSIGNED_SHORT_8_8_REV_APPLE' value='34235'/>
<enum name='GL_VALIDATE_STATUS' value='35715'/>
<enum name='GL_VENDOR' value='7936'/>
<enum name='GL_VERSION' value='7938'/>
<enum name='GL_VERSION_ES_CL_1_0' value='1'/>
<enum name='GL_VERSION_ES_CL_1_1' value='1'/>
<enum name='GL_VERSION_ES_CM_1_0' value='1'/>
<enum name='GL_VERSION_ES_CM_1_1' value='1'/>
<enum name='GL_VERTEX_ARRAY' value='32884'/>
<enum name='GL_VERTEX_ARRAY_BINDING' value='34229'/>
<enum name='GL_VERTEX_ARRAY_BINDING_OES' value='34229'/>
<enum name='GL_VERTEX_ARRAY_BUFFER_BINDING' value='34966'/>
<enum name='GL_VERTEX_ARRAY_OBJECT_EXT' value='37204'/>
<enum name='GL_VERTEX_ARRAY_POINTER' value='32910'/>
<enum name='GL_VERTEX_ARRAY_SIZE' value='32890'/>
<enum name='GL_VERTEX_ARRAY_STRIDE' value='32892'/>
<enum name='GL_VERTEX_ARRAY_TYPE' value='32891'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING' value='34975'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_DIVISOR' value='35070'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT' value='35070'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_ENABLED' value='34338'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_INTEGER' value='35069'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_NORMALIZED' value='34922'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_POINTER' value='34373'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_SIZE' value='34339'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_STRIDE' value='34340'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_TYPE' value='34341'/>
<enum name='GL_VERTEX_SHADER' value='35633'/>
<enum name='GL_VERTEX_SHADER_BIT_EXT' value='1'/>
<enum name='GL_VIEWPORT' value='2978'/>
<enum name='GL_WAIT_FAILED' value='37149'/>
<enum name='GL_WAIT_FAILED_APPLE' value='37149'/>
<enum name='GL_WEIGHT_ARRAY_BUFFER_BINDING_OES' value='34974'/>
<enum name='GL_WEIGHT_ARRAY_OES' value='34477'/>
<enum name='GL_WEIGHT_ARRAY_POINTER_OES' value='34476'/>
<enum name='GL_WEIGHT_ARRAY_SIZE_OES' value='34475'/>
<enum name='GL_WEIGHT_ARRAY_STRIDE_OES' value='34474'/>
<enum name='GL_WEIGHT_ARRAY_TYPE_OES' value='34473'/>
<enum name='GL_WRITE_ONLY_OES' value='35001'/>
<enum name='GL_XOR' value='5382'/>
<enum name='GL_ZERO' value='0'/>
<enum name='kEAGLRenderingAPIOpenGLES1' value='1'/>
<enum name='kEAGLRenderingAPIOpenGLES2' value='2'/>
<enum name='kEAGLRenderingAPIOpenGLES3' value='3'/>
<function name='EAGLGetVersion'>
<arg declared_type='unsigned int * _Nonnull' name='major' type='^I'/>
<arg declared_type='unsigned int * _Nonnull' name='minor' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glActiveShaderProgramEXT'>
<arg declared_type='GLuint' name='pipeline' type='I'/>
<arg declared_type='GLuint' name='program' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glActiveTexture'>
<arg declared_type='GLenum' name='texture' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glAlphaFunc'>
<arg declared_type='GLenum' name='func' type='I'/>
<arg declared_type='GLclampf' name='ref' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glAlphaFuncx'>
<arg declared_type='GLenum' name='func' type='I'/>
<arg declared_type='GLclampx' name='ref' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glAttachShader'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLuint' name='shader' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBeginQuery'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='id' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBeginQueryEXT'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='id' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glBeginTransformFeedback'>
<arg declared_type='GLenum' name='primitiveMode' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBindAttribLocation'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLuint' name='index' type='I'/>
<arg const='true' declared_type='GLchar*' name='name' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBindBuffer'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='buffer' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBindBufferBase'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLuint' name='buffer' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBindBufferRange'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLuint' name='buffer' type='I'/>
<arg declared_type='GLintptr' name='offset' type='l' type64='q'/>
<arg declared_type='GLsizeiptr' name='size' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBindFramebuffer'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='framebuffer' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBindFramebufferOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='framebuffer' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glBindProgramPipelineEXT'>
<arg declared_type='GLuint' name='pipeline' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glBindRenderbuffer'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='renderbuffer' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBindRenderbufferOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='renderbuffer' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glBindSampler'>
<arg declared_type='GLuint' name='unit' type='I'/>
<arg declared_type='GLuint' name='sampler' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBindTexture'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='texture' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBindTransformFeedback'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='id' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBindVertexArray'>
<arg declared_type='GLuint' name='array' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBindVertexArrayOES'>
<arg declared_type='GLuint' name='array' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glBlendColor'>
<arg declared_type='GLfloat' name='red' type='f'/>
<arg declared_type='GLfloat' name='green' type='f'/>
<arg declared_type='GLfloat' name='blue' type='f'/>
<arg declared_type='GLfloat' name='alpha' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBlendEquation'>
<arg declared_type='GLenum' name='mode' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBlendEquationOES'>
<arg declared_type='GLenum' name='mode' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glBlendEquationSeparate'>
<arg declared_type='GLenum' name='modeRGB' type='I'/>
<arg declared_type='GLenum' name='modeAlpha' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBlendEquationSeparateOES'>
<arg declared_type='GLenum' name='modeRGB' type='I'/>
<arg declared_type='GLenum' name='modeAlpha' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glBlendFunc'>
<arg declared_type='GLenum' name='sfactor' type='I'/>
<arg declared_type='GLenum' name='dfactor' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBlendFuncSeparate'>
<arg declared_type='GLenum' name='srcRGB' type='I'/>
<arg declared_type='GLenum' name='dstRGB' type='I'/>
<arg declared_type='GLenum' name='srcAlpha' type='I'/>
<arg declared_type='GLenum' name='dstAlpha' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBlendFuncSeparateOES'>
<arg declared_type='GLenum' name='srcRGB' type='I'/>
<arg declared_type='GLenum' name='dstRGB' type='I'/>
<arg declared_type='GLenum' name='srcAlpha' type='I'/>
<arg declared_type='GLenum' name='dstAlpha' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glBlitFramebuffer'>
<arg declared_type='GLint' name='srcX0' type='i'/>
<arg declared_type='GLint' name='srcY0' type='i'/>
<arg declared_type='GLint' name='srcX1' type='i'/>
<arg declared_type='GLint' name='srcY1' type='i'/>
<arg declared_type='GLint' name='dstX0' type='i'/>
<arg declared_type='GLint' name='dstY0' type='i'/>
<arg declared_type='GLint' name='dstX1' type='i'/>
<arg declared_type='GLint' name='dstY1' type='i'/>
<arg declared_type='GLbitfield' name='mask' type='I'/>
<arg declared_type='GLenum' name='filter' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBufferData'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLsizeiptr' name='size' type='l' type64='q'/>
<arg const='true' declared_type='GLvoid*' name='data' type='^v'/>
<arg declared_type='GLenum' name='usage' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glBufferSubData'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLintptr' name='offset' type='l' type64='q'/>
<arg declared_type='GLsizeiptr' name='size' type='l' type64='q'/>
<arg const='true' declared_type='GLvoid*' name='data' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCheckFramebufferStatus'>
<arg declared_type='GLenum' name='target' type='I'/>
<retval declared_type='GLenum' type='I'/>
</function>
<function name='glCheckFramebufferStatusOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<retval declared_type='GLenum' type='I'/>
</function>
<function name='glClear'>
<arg declared_type='GLbitfield' name='mask' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClearBufferfi'>
<arg declared_type='GLenum' name='buffer' type='I'/>
<arg declared_type='GLint' name='drawbuffer' type='i'/>
<arg declared_type='GLfloat' name='depth' type='f'/>
<arg declared_type='GLint' name='stencil' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClearBufferfv'>
<arg declared_type='GLenum' name='buffer' type='I'/>
<arg declared_type='GLint' name='drawbuffer' type='i'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClearBufferiv'>
<arg declared_type='GLenum' name='buffer' type='I'/>
<arg declared_type='GLint' name='drawbuffer' type='i'/>
<arg const='true' declared_type='GLint*' name='value' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClearBufferuiv'>
<arg declared_type='GLenum' name='buffer' type='I'/>
<arg declared_type='GLint' name='drawbuffer' type='i'/>
<arg const='true' declared_type='GLuint*' name='value' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClearColor'>
<arg declared_type='GLfloat' name='red' type='f'/>
<arg declared_type='GLfloat' name='green' type='f'/>
<arg declared_type='GLfloat' name='blue' type='f'/>
<arg declared_type='GLfloat' name='alpha' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClearColorx'>
<arg declared_type='GLclampx' name='red' type='i'/>
<arg declared_type='GLclampx' name='green' type='i'/>
<arg declared_type='GLclampx' name='blue' type='i'/>
<arg declared_type='GLclampx' name='alpha' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClearDepthf'>
<arg declared_type='GLclampf' name='depth' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClearDepthx'>
<arg declared_type='GLclampx' name='depth' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClearStencil'>
<arg declared_type='GLint' name='s' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClientActiveTexture'>
<arg declared_type='GLenum' name='texture' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClientWaitSync'>
<arg declared_type='GLsync' name='sync' type='^{__GLsync=}'/>
<arg declared_type='GLbitfield' name='flags' type='I'/>
<arg declared_type='GLuint64' name='timeout' type='Q'/>
<retval declared_type='GLenum' type='I'/>
</function>
<function name='glClientWaitSyncAPPLE'>
<arg declared_type='GLsync' name='sync' type='^{__GLsync=}'/>
<arg declared_type='GLbitfield' name='flags' type='I'/>
<arg declared_type='GLuint64' name='timeout' type='Q'/>
<retval declared_type='GLenum' type='I'/>
</function>
<function name='glClipPlanef'>
<arg declared_type='GLenum' name='plane' type='I'/>
<arg const='true' declared_type='GLfloat*' name='equation' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glClipPlanex'>
<arg declared_type='GLenum' name='plane' type='I'/>
<arg const='true' declared_type='GLfixed*' name='equation' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glColor4f'>
<arg declared_type='GLfloat' name='red' type='f'/>
<arg declared_type='GLfloat' name='green' type='f'/>
<arg declared_type='GLfloat' name='blue' type='f'/>
<arg declared_type='GLfloat' name='alpha' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glColor4ub'>
<arg declared_type='GLubyte' name='red' type='C'/>
<arg declared_type='GLubyte' name='green' type='C'/>
<arg declared_type='GLubyte' name='blue' type='C'/>
<arg declared_type='GLubyte' name='alpha' type='C'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glColor4x'>
<arg declared_type='GLfixed' name='red' type='i'/>
<arg declared_type='GLfixed' name='green' type='i'/>
<arg declared_type='GLfixed' name='blue' type='i'/>
<arg declared_type='GLfixed' name='alpha' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glColorMask'>
<arg declared_type='GLboolean' name='red' type='C'/>
<arg declared_type='GLboolean' name='green' type='C'/>
<arg declared_type='GLboolean' name='blue' type='C'/>
<arg declared_type='GLboolean' name='alpha' type='C'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glColorPointer'>
<arg declared_type='GLint' name='size' type='i'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLsizei' name='stride' type='i'/>
<arg const='true' declared_type='GLvoid*' name='pointer' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCompileShader'>
<arg declared_type='GLuint' name='shader' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCompressedTexImage2D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLenum' name='internalformat' type='I'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<arg declared_type='GLint' name='border' type='i'/>
<arg declared_type='GLsizei' name='imageSize' type='i'/>
<arg const='true' declared_type='GLvoid*' name='data' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCompressedTexImage3D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLenum' name='internalformat' type='I'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<arg declared_type='GLsizei' name='depth' type='i'/>
<arg declared_type='GLint' name='border' type='i'/>
<arg declared_type='GLsizei' name='imageSize' type='i'/>
<arg const='true' declared_type='GLvoid*' name='data' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCompressedTexSubImage2D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLint' name='xoffset' type='i'/>
<arg declared_type='GLint' name='yoffset' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<arg declared_type='GLenum' name='format' type='I'/>
<arg declared_type='GLsizei' name='imageSize' type='i'/>
<arg const='true' declared_type='GLvoid*' name='data' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCompressedTexSubImage3D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLint' name='xoffset' type='i'/>
<arg declared_type='GLint' name='yoffset' type='i'/>
<arg declared_type='GLint' name='zoffset' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<arg declared_type='GLsizei' name='depth' type='i'/>
<arg declared_type='GLenum' name='format' type='I'/>
<arg declared_type='GLsizei' name='imageSize' type='i'/>
<arg const='true' declared_type='GLvoid*' name='data' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCopyBufferSubData'>
<arg declared_type='GLenum' name='readTarget' type='I'/>
<arg declared_type='GLenum' name='writeTarget' type='I'/>
<arg declared_type='GLintptr' name='readOffset' type='l' type64='q'/>
<arg declared_type='GLintptr' name='writeOffset' type='l' type64='q'/>
<arg declared_type='GLsizeiptr' name='size' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCopyTexImage2D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLenum' name='internalformat' type='I'/>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<arg declared_type='GLint' name='border' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCopyTexSubImage2D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLint' name='xoffset' type='i'/>
<arg declared_type='GLint' name='yoffset' type='i'/>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCopyTexSubImage3D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLint' name='xoffset' type='i'/>
<arg declared_type='GLint' name='yoffset' type='i'/>
<arg declared_type='GLint' name='zoffset' type='i'/>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCopyTextureLevelsAPPLE'>
<arg declared_type='GLuint' name='destinationTexture' type='I'/>
<arg declared_type='GLuint' name='sourceTexture' type='I'/>
<arg declared_type='GLint' name='sourceBaseLevel' type='i'/>
<arg declared_type='GLsizei' name='sourceLevelCount' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glCreateProgram'>
<retval declared_type='GLuint' type='I'/>
</function>
<function name='glCreateShader'>
<arg declared_type='GLenum' name='type' type='I'/>
<retval declared_type='GLuint' type='I'/>
</function>
<function name='glCreateShaderProgramvEXT'>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLchar **' name='strings' type='^*'/>
<retval declared_type='GLuint' type='I'/>
</function>
<function name='glCullFace'>
<arg declared_type='GLenum' name='mode' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glCurrentPaletteMatrixOES'>
<arg declared_type='GLuint' name='matrixpaletteindex' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteBuffers'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='buffers' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteFramebuffers'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='framebuffers' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteFramebuffersOES'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='framebuffers' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glDeleteProgram'>
<arg declared_type='GLuint' name='program' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteProgramPipelinesEXT'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='pipelines' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glDeleteQueries'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='ids' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteQueriesEXT'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='ids' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glDeleteRenderbuffers'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='renderbuffers' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteRenderbuffersOES'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='renderbuffers' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glDeleteSamplers'>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLuint*' name='samplers' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteShader'>
<arg declared_type='GLuint' name='shader' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteSync'>
<arg declared_type='GLsync' name='sync' type='^{__GLsync=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteSyncAPPLE'>
<arg declared_type='GLsync' name='sync' type='^{__GLsync=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteTextures'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='textures' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteTransformFeedbacks'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='ids' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteVertexArrays'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='arrays' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDeleteVertexArraysOES'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='arrays' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glDepthFunc'>
<arg declared_type='GLenum' name='func' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDepthMask'>
<arg declared_type='GLboolean' name='flag' type='C'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDepthRangef'>
<arg declared_type='GLclampf' name='zNear' type='f'/>
<arg declared_type='GLclampf' name='zFar' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDepthRangex'>
<arg declared_type='GLclampx' name='zNear' type='i'/>
<arg declared_type='GLclampx' name='zFar' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDetachShader'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLuint' name='shader' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDisable'>
<arg declared_type='GLenum' name='cap' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDisableClientState'>
<arg declared_type='GLenum' name='array' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDisableVertexAttribArray'>
<arg declared_type='GLuint' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDiscardFramebufferEXT'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLsizei' name='numAttachments' type='i'/>
<arg const='true' declared_type='GLenum*' name='attachments' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glDrawArrays'>
<arg declared_type='GLenum' name='mode' type='I'/>
<arg declared_type='GLint' name='first' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawArraysInstanced'>
<arg declared_type='GLenum' name='mode' type='I'/>
<arg declared_type='GLint' name='first' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLsizei' name='instancecount' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawArraysInstancedEXT'>
<arg declared_type='GLenum' name='mode' type='I'/>
<arg declared_type='GLint' name='first' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLsizei' name='instanceCount' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glDrawBuffers'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLenum*' name='bufs' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawElements'>
<arg declared_type='GLenum' name='mode' type='I'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg const='true' declared_type='GLvoid*' name='indices' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawElementsInstanced'>
<arg declared_type='GLenum' name='mode' type='I'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg const='true' declared_type='GLvoid*' name='indices' type='^v'/>
<arg declared_type='GLsizei' name='instancecount' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawElementsInstancedEXT'>
<arg declared_type='GLenum' name='mode' type='I'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg const='true' declared_type='GLvoid*' name='indices' type='^v'/>
<arg declared_type='GLsizei' name='instanceCount' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glDrawRangeElements'>
<arg declared_type='GLenum' name='mode' type='I'/>
<arg declared_type='GLuint' name='start' type='I'/>
<arg declared_type='GLuint' name='end' type='I'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg const='true' declared_type='GLvoid*' name='indices' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawTexfOES'>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<arg declared_type='GLfloat' name='z' type='f'/>
<arg declared_type='GLfloat' name='width' type='f'/>
<arg declared_type='GLfloat' name='height' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawTexfvOES'>
<arg const='true' declared_type='GLfloat*' name='coords' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawTexiOES'>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLint' name='z' type='i'/>
<arg declared_type='GLint' name='width' type='i'/>
<arg declared_type='GLint' name='height' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawTexivOES'>
<arg const='true' declared_type='GLint*' name='coords' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawTexsOES'>
<arg declared_type='GLshort' name='x' type='s'/>
<arg declared_type='GLshort' name='y' type='s'/>
<arg declared_type='GLshort' name='z' type='s'/>
<arg declared_type='GLshort' name='width' type='s'/>
<arg declared_type='GLshort' name='height' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawTexsvOES'>
<arg const='true' declared_type='GLshort*' name='coords' type='^s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawTexxOES'>
<arg declared_type='GLfixed' name='x' type='i'/>
<arg declared_type='GLfixed' name='y' type='i'/>
<arg declared_type='GLfixed' name='z' type='i'/>
<arg declared_type='GLfixed' name='width' type='i'/>
<arg declared_type='GLfixed' name='height' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glDrawTexxvOES'>
<arg const='true' declared_type='GLfixed*' name='coords' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glEnable'>
<arg declared_type='GLenum' name='cap' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glEnableClientState'>
<arg declared_type='GLenum' name='array' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glEnableVertexAttribArray'>
<arg declared_type='GLuint' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glEndQuery'>
<arg declared_type='GLenum' name='target' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glEndQueryEXT'>
<arg declared_type='GLenum' name='target' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glEndTransformFeedback'>
<retval declared_type='void' type='v'/>
</function>
<function name='glFenceSync'>
<arg declared_type='GLenum' name='condition' type='I'/>
<arg declared_type='GLbitfield' name='flags' type='I'/>
<retval declared_type='GLsync' type='^{__GLsync=}'/>
</function>
<function name='glFenceSyncAPPLE'>
<arg declared_type='GLenum' name='condition' type='I'/>
<arg declared_type='GLbitfield' name='flags' type='I'/>
<retval declared_type='GLsync' type='^{__GLsync=}'/>
</function>
<function name='glFinish'>
<retval declared_type='void' type='v'/>
</function>
<function name='glFlush'>
<retval declared_type='void' type='v'/>
</function>
<function name='glFlushMappedBufferRange'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLintptr' name='offset' type='l' type64='q'/>
<arg declared_type='GLsizeiptr' name='length' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glFlushMappedBufferRangeEXT'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLintptr' name='offset' type='l' type64='q'/>
<arg declared_type='GLsizeiptr' name='length' type='l' type64='q'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glFogf'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat' name='param' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glFogfv'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glFogx'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glFogxv'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glFramebufferRenderbuffer'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='attachment' type='I'/>
<arg declared_type='GLenum' name='renderbuffertarget' type='I'/>
<arg declared_type='GLuint' name='renderbuffer' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glFramebufferRenderbufferOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='attachment' type='I'/>
<arg declared_type='GLenum' name='renderbuffertarget' type='I'/>
<arg declared_type='GLuint' name='renderbuffer' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glFramebufferTexture2D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='attachment' type='I'/>
<arg declared_type='GLenum' name='textarget' type='I'/>
<arg declared_type='GLuint' name='texture' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glFramebufferTexture2DOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='attachment' type='I'/>
<arg declared_type='GLenum' name='textarget' type='I'/>
<arg declared_type='GLuint' name='texture' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glFramebufferTextureLayer'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='attachment' type='I'/>
<arg declared_type='GLuint' name='texture' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLint' name='layer' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glFrontFace'>
<arg declared_type='GLenum' name='mode' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glFrustumf'>
<arg declared_type='GLfloat' name='left' type='f'/>
<arg declared_type='GLfloat' name='right' type='f'/>
<arg declared_type='GLfloat' name='bottom' type='f'/>
<arg declared_type='GLfloat' name='top' type='f'/>
<arg declared_type='GLfloat' name='zNear' type='f'/>
<arg declared_type='GLfloat' name='zFar' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glFrustumx'>
<arg declared_type='GLfixed' name='left' type='i'/>
<arg declared_type='GLfixed' name='right' type='i'/>
<arg declared_type='GLfixed' name='bottom' type='i'/>
<arg declared_type='GLfixed' name='top' type='i'/>
<arg declared_type='GLfixed' name='zNear' type='i'/>
<arg declared_type='GLfixed' name='zFar' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGenBuffers'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='buffers' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGenFramebuffers'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='framebuffers' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGenFramebuffersOES'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='framebuffers' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGenProgramPipelinesEXT'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='pipelines' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGenQueries'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='ids' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGenQueriesEXT'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='ids' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGenRenderbuffers'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='renderbuffers' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGenRenderbuffersOES'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='renderbuffers' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGenSamplers'>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLuint*' name='samplers' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGenTextures'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='textures' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGenTransformFeedbacks'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='ids' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGenVertexArrays'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='arrays' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGenVertexArraysOES'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg declared_type='GLuint*' name='arrays' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGenerateMipmap'>
<arg declared_type='GLenum' name='target' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGenerateMipmapOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGetActiveAttrib'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLsizei' name='bufsize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLint*' name='size' type='^i'/>
<arg declared_type='GLenum*' name='type' type='^I'/>
<arg declared_type='GLchar*' name='name' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetActiveUniform'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLsizei' name='bufsize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLint*' name='size' type='^i'/>
<arg declared_type='GLenum*' name='type' type='^I'/>
<arg declared_type='GLchar*' name='name' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetActiveUniformBlockName'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLuint' name='uniformBlockIndex' type='I'/>
<arg declared_type='GLsizei' name='bufSize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLchar*' name='uniformBlockName' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetActiveUniformBlockiv'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLuint' name='uniformBlockIndex' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetActiveUniformsiv'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLsizei' name='uniformCount' type='i'/>
<arg const='true' declared_type='GLuint*' name='uniformIndices' type='^I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetAttachedShaders'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLsizei' name='maxcount' type='i'/>
<arg declared_type='GLsizei*' name='count' type='^i'/>
<arg declared_type='GLuint*' name='shaders' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetAttribLocation'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg const='true' declared_type='GLchar*' name='name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='glGetBooleanv'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLboolean*' name='params' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetBufferParameteri64v'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint64*' name='params' type='^q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetBufferParameteriv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetBufferPointerv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLvoid**' name='params' type='^^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetBufferPointervOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLvoid**' name='params' type='^^v'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGetClipPlanef'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat*' name='equation' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetClipPlanex'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed*' name='eqn' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetError'>
<retval declared_type='GLenum' type='I'/>
</function>
<function name='glGetFixedv'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetFloatv'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetFragDataLocation'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg const='true' declared_type='GLchar*' name='name' type='*'/>
<retval declared_type='GLint' type='i'/>
</function>
<function name='glGetFramebufferAttachmentParameteriv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='attachment' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetFramebufferAttachmentParameterivOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='attachment' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGetInteger64i_v'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLint64*' name='data' type='^q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetInteger64v'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint64*' name='params' type='^q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetInteger64vAPPLE'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint64*' name='params' type='^q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetIntegeri_v'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLint*' name='data' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetIntegerv'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetInternalformativ'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='internalformat' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLsizei' name='bufSize' type='i'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetLightfv'>
<arg declared_type='GLenum' name='light' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetLightxv'>
<arg declared_type='GLenum' name='light' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetMaterialfv'>
<arg declared_type='GLenum' name='face' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetMaterialxv'>
<arg declared_type='GLenum' name='face' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetObjectLabelEXT'>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLuint' name='object' type='I'/>
<arg declared_type='GLsizei' name='bufSize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLchar*' name='label' type='*'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGetPointerv'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='void**' name='params' type='^^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetProgramBinary'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLsizei' name='bufSize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLenum*' name='binaryFormat' type='^I'/>
<arg declared_type='GLvoid*' name='binary' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetProgramInfoLog'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLsizei' name='bufsize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLchar*' name='infolog' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetProgramPipelineInfoLogEXT'>
<arg declared_type='GLuint' name='pipeline' type='I'/>
<arg declared_type='GLsizei' name='bufSize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLchar*' name='infoLog' type='*'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGetProgramPipelineivEXT'>
<arg declared_type='GLuint' name='pipeline' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGetProgramiv'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetQueryObjectuiv'>
<arg declared_type='GLuint' name='id' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLuint*' name='params' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetQueryObjectuivEXT'>
<arg declared_type='GLuint' name='id' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLuint*' name='params' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGetQueryiv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetQueryivEXT'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGetRenderbufferParameteriv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetRenderbufferParameterivOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glGetSamplerParameterfv'>
<arg declared_type='GLuint' name='sampler' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetSamplerParameteriv'>
<arg declared_type='GLuint' name='sampler' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetShaderInfoLog'>
<arg declared_type='GLuint' name='shader' type='I'/>
<arg declared_type='GLsizei' name='bufsize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLchar*' name='infolog' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetShaderPrecisionFormat'>
<arg declared_type='GLenum' name='shadertype' type='I'/>
<arg declared_type='GLenum' name='precisiontype' type='I'/>
<arg declared_type='GLint*' name='range' type='^i'/>
<arg declared_type='GLint*' name='precision' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetShaderSource'>
<arg declared_type='GLuint' name='shader' type='I'/>
<arg declared_type='GLsizei' name='bufsize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLchar*' name='source' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetShaderiv'>
<arg declared_type='GLuint' name='shader' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetString'>
<arg declared_type='GLenum' name='name' type='I'/>
<retval const='true' declared_type='GLubyte*' type='*'/>
</function>
<function name='glGetStringi'>
<arg declared_type='GLenum' name='name' type='I'/>
<arg declared_type='GLuint' name='index' type='I'/>
<retval const='true' declared_type='GLubyte*' type='*'/>
</function>
<function name='glGetSynciv'>
<arg declared_type='GLsync' name='sync' type='^{__GLsync=}'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLsizei' name='bufSize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLint*' name='values' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetSyncivAPPLE'>
<arg declared_type='GLsync' name='sync' type='^{__GLsync=}'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLsizei' name='bufSize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLint*' name='values' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetTexEnvfv'>
<arg declared_type='GLenum' name='env' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetTexEnviv'>
<arg declared_type='GLenum' name='env' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetTexEnvxv'>
<arg declared_type='GLenum' name='env' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetTexParameterfv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetTexParameteriv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetTexParameterxv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetTransformFeedbackVarying'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLsizei' name='bufSize' type='i'/>
<arg declared_type='GLsizei*' name='length' type='^i'/>
<arg declared_type='GLsizei*' name='size' type='^i'/>
<arg declared_type='GLenum*' name='type' type='^I'/>
<arg declared_type='GLchar*' name='name' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetUniformBlockIndex'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg const='true' declared_type='GLchar*' name='uniformBlockName' type='*'/>
<retval declared_type='GLuint' type='I'/>
</function>
<function name='glGetUniformIndices'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLsizei' name='uniformCount' type='i'/>
<arg const='true' declared_type='GLchar **' name='uniformNames' type='^*'/>
<arg declared_type='GLuint*' name='uniformIndices' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetUniformLocation'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg const='true' declared_type='GLchar*' name='name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='glGetUniformfv'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetUniformiv'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetUniformuiv'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLuint*' name='params' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetVertexAttribIiv'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetVertexAttribIuiv'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLuint*' name='params' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetVertexAttribPointerv'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLvoid**' name='pointer' type='^^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetVertexAttribfv'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glGetVertexAttribiv'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glHint'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='mode' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glInsertEventMarkerEXT'>
<arg declared_type='GLsizei' name='length' type='i'/>
<arg const='true' declared_type='GLchar*' name='marker' type='*'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glInvalidateFramebuffer'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLsizei' name='numAttachments' type='i'/>
<arg const='true' declared_type='GLenum*' name='attachments' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glInvalidateSubFramebuffer'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLsizei' name='numAttachments' type='i'/>
<arg const='true' declared_type='GLenum*' name='attachments' type='^I'/>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glIsBuffer'>
<arg declared_type='GLuint' name='buffer' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsEnabled'>
<arg declared_type='GLenum' name='cap' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsFramebuffer'>
<arg declared_type='GLuint' name='framebuffer' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsFramebufferOES'>
<arg declared_type='GLuint' name='framebuffer' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsProgram'>
<arg declared_type='GLuint' name='program' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsProgramPipelineEXT'>
<arg declared_type='GLuint' name='pipeline' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsQuery'>
<arg declared_type='GLuint' name='id' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsQueryEXT'>
<arg declared_type='GLuint' name='id' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsRenderbuffer'>
<arg declared_type='GLuint' name='renderbuffer' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsRenderbufferOES'>
<arg declared_type='GLuint' name='renderbuffer' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsSampler'>
<arg declared_type='GLuint' name='sampler' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsShader'>
<arg declared_type='GLuint' name='shader' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsSync'>
<arg declared_type='GLsync' name='sync' type='^{__GLsync=}'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsSyncAPPLE'>
<arg declared_type='GLsync' name='sync' type='^{__GLsync=}'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsTexture'>
<arg declared_type='GLuint' name='texture' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsTransformFeedback'>
<arg declared_type='GLuint' name='id' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsVertexArray'>
<arg declared_type='GLuint' name='array' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glIsVertexArrayOES'>
<arg declared_type='GLuint' name='array' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glLabelObjectEXT'>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLuint' name='object' type='I'/>
<arg declared_type='GLsizei' name='length' type='i'/>
<arg const='true' declared_type='GLchar*' name='label' type='*'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glLightModelf'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat' name='param' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLightModelfv'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLightModelx'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLightModelxv'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLightf'>
<arg declared_type='GLenum' name='light' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat' name='param' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLightfv'>
<arg declared_type='GLenum' name='light' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLightx'>
<arg declared_type='GLenum' name='light' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLightxv'>
<arg declared_type='GLenum' name='light' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLineWidth'>
<arg declared_type='GLfloat' name='width' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLineWidthx'>
<arg declared_type='GLfixed' name='width' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLinkProgram'>
<arg declared_type='GLuint' name='program' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLoadIdentity'>
<retval declared_type='void' type='v'/>
</function>
<function name='glLoadMatrixf'>
<arg const='true' declared_type='GLfloat*' name='m' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLoadMatrixx'>
<arg const='true' declared_type='GLfixed*' name='m' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glLoadPaletteFromModelViewMatrixOES'>
<retval declared_type='void' type='v'/>
</function>
<function name='glLogicOp'>
<arg declared_type='GLenum' name='opcode' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glMapBufferOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='access' type='I'/>
<retval declared_type='GLvoid*' type='^v'/>
</function>
<function name='glMapBufferRange'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLintptr' name='offset' type='l' type64='q'/>
<arg declared_type='GLsizeiptr' name='length' type='l' type64='q'/>
<arg declared_type='GLbitfield' name='access' type='I'/>
<retval declared_type='GLvoid*' type='^v'/>
</function>
<function name='glMapBufferRangeEXT'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLintptr' name='offset' type='l' type64='q'/>
<arg declared_type='GLsizeiptr' name='length' type='l' type64='q'/>
<arg declared_type='GLbitfield' name='access' type='I'/>
<retval declared_type='GLvoid*' type='^v'/>
</function>
<function name='glMaterialf'>
<arg declared_type='GLenum' name='face' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat' name='param' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glMaterialfv'>
<arg declared_type='GLenum' name='face' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glMaterialx'>
<arg declared_type='GLenum' name='face' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glMaterialxv'>
<arg declared_type='GLenum' name='face' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glMatrixIndexPointerOES'>
<arg declared_type='GLint' name='size' type='i'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLsizei' name='stride' type='i'/>
<arg const='true' declared_type='GLvoid*' name='pointer' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glMatrixMode'>
<arg declared_type='GLenum' name='mode' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glMultMatrixf'>
<arg const='true' declared_type='GLfloat*' name='m' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glMultMatrixx'>
<arg const='true' declared_type='GLfixed*' name='m' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glMultiTexCoord4f'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLfloat' name='s' type='f'/>
<arg declared_type='GLfloat' name='t' type='f'/>
<arg declared_type='GLfloat' name='r' type='f'/>
<arg declared_type='GLfloat' name='q' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glMultiTexCoord4x'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLfixed' name='s' type='i'/>
<arg declared_type='GLfixed' name='t' type='i'/>
<arg declared_type='GLfixed' name='r' type='i'/>
<arg declared_type='GLfixed' name='q' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glNormal3f'>
<arg declared_type='GLfloat' name='nx' type='f'/>
<arg declared_type='GLfloat' name='ny' type='f'/>
<arg declared_type='GLfloat' name='nz' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glNormal3x'>
<arg declared_type='GLfixed' name='nx' type='i'/>
<arg declared_type='GLfixed' name='ny' type='i'/>
<arg declared_type='GLfixed' name='nz' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glNormalPointer'>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLsizei' name='stride' type='i'/>
<arg const='true' declared_type='GLvoid*' name='pointer' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glOrthof'>
<arg declared_type='GLfloat' name='left' type='f'/>
<arg declared_type='GLfloat' name='right' type='f'/>
<arg declared_type='GLfloat' name='bottom' type='f'/>
<arg declared_type='GLfloat' name='top' type='f'/>
<arg declared_type='GLfloat' name='zNear' type='f'/>
<arg declared_type='GLfloat' name='zFar' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glOrthox'>
<arg declared_type='GLfixed' name='left' type='i'/>
<arg declared_type='GLfixed' name='right' type='i'/>
<arg declared_type='GLfixed' name='bottom' type='i'/>
<arg declared_type='GLfixed' name='top' type='i'/>
<arg declared_type='GLfixed' name='zNear' type='i'/>
<arg declared_type='GLfixed' name='zFar' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glPauseTransformFeedback'>
<retval declared_type='void' type='v'/>
</function>
<function name='glPixelStorei'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glPointParameterf'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat' name='param' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glPointParameterfv'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glPointParameterx'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glPointParameterxv'>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glPointSize'>
<arg declared_type='GLfloat' name='size' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glPointSizePointerOES'>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLsizei' name='stride' type='i'/>
<arg const='true' declared_type='GLvoid*' name='pointer' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glPointSizex'>
<arg declared_type='GLfixed' name='size' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glPolygonOffset'>
<arg declared_type='GLfloat' name='factor' type='f'/>
<arg declared_type='GLfloat' name='units' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glPolygonOffsetx'>
<arg declared_type='GLfixed' name='factor' type='i'/>
<arg declared_type='GLfixed' name='units' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glPopGroupMarkerEXT'>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glPopMatrix'>
<retval declared_type='void' type='v'/>
</function>
<function name='glProgramBinary'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLenum' name='binaryFormat' type='I'/>
<arg const='true' declared_type='GLvoid*' name='binary' type='^v'/>
<arg declared_type='GLsizei' name='length' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glProgramParameteri'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint' name='value' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glProgramParameteriEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint' name='value' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform1fEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform1fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform1iEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLint' name='x' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform1ivEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLint*' name='value' type='^i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform1uiEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLuint' name='x' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform1uivEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLuint*' name='value' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform2fEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform2fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform2iEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform2ivEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLint*' name='value' type='^i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform2uiEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLuint' name='x' type='I'/>
<arg declared_type='GLuint' name='y' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform2uivEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLuint*' name='value' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform3fEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<arg declared_type='GLfloat' name='z' type='f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform3fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform3iEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLint' name='z' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform3ivEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLint*' name='value' type='^i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform3uiEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLuint' name='x' type='I'/>
<arg declared_type='GLuint' name='y' type='I'/>
<arg declared_type='GLuint' name='z' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform3uivEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLuint*' name='value' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform4fEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<arg declared_type='GLfloat' name='z' type='f'/>
<arg declared_type='GLfloat' name='w' type='f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform4fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform4iEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLint' name='z' type='i'/>
<arg declared_type='GLint' name='w' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform4ivEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLint*' name='value' type='^i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform4uiEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLuint' name='x' type='I'/>
<arg declared_type='GLuint' name='y' type='I'/>
<arg declared_type='GLuint' name='z' type='I'/>
<arg declared_type='GLuint' name='w' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniform4uivEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLuint*' name='value' type='^I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniformMatrix2fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniformMatrix2x3fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniformMatrix2x4fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniformMatrix3fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniformMatrix3x2fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniformMatrix3x4fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniformMatrix4fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniformMatrix4x2fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glProgramUniformMatrix4x3fvEXT'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glPushGroupMarkerEXT'>
<arg declared_type='GLsizei' name='length' type='i'/>
<arg const='true' declared_type='GLchar*' name='marker' type='*'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glPushMatrix'>
<retval declared_type='void' type='v'/>
</function>
<function name='glReadBuffer'>
<arg declared_type='GLenum' name='mode' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glReadPixels'>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<arg declared_type='GLenum' name='format' type='I'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLvoid*' name='pixels' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glReleaseShaderCompiler'>
<retval declared_type='void' type='v'/>
</function>
<function name='glRenderbufferStorage'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='internalformat' type='I'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glRenderbufferStorageMultisample'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLsizei' name='samples' type='i'/>
<arg declared_type='GLenum' name='internalformat' type='I'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glRenderbufferStorageMultisampleAPPLE'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLsizei' name='samples' type='i'/>
<arg declared_type='GLenum' name='internalformat' type='I'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glRenderbufferStorageOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='internalformat' type='I'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glResolveMultisampleFramebufferAPPLE'>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glResumeTransformFeedback'>
<retval declared_type='void' type='v'/>
</function>
<function name='glRotatef'>
<arg declared_type='GLfloat' name='angle' type='f'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<arg declared_type='GLfloat' name='z' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glRotatex'>
<arg declared_type='GLfixed' name='angle' type='i'/>
<arg declared_type='GLfixed' name='x' type='i'/>
<arg declared_type='GLfixed' name='y' type='i'/>
<arg declared_type='GLfixed' name='z' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glSampleCoverage'>
<arg declared_type='GLclampf' name='value' type='f'/>
<arg declared_type='GLboolean' name='invert' type='C'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glSampleCoveragex'>
<arg declared_type='GLclampx' name='value' type='i'/>
<arg declared_type='GLboolean' name='invert' type='C'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glSamplerParameterf'>
<arg declared_type='GLuint' name='sampler' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat' name='param' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glSamplerParameterfv'>
<arg declared_type='GLuint' name='sampler' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfloat*' name='param' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glSamplerParameteri'>
<arg declared_type='GLuint' name='sampler' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glSamplerParameteriv'>
<arg declared_type='GLuint' name='sampler' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLint*' name='param' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glScalef'>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<arg declared_type='GLfloat' name='z' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glScalex'>
<arg declared_type='GLfixed' name='x' type='i'/>
<arg declared_type='GLfixed' name='y' type='i'/>
<arg declared_type='GLfixed' name='z' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glScissor'>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glShadeModel'>
<arg declared_type='GLenum' name='mode' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glShaderBinary'>
<arg declared_type='GLsizei' name='n' type='i'/>
<arg const='true' declared_type='GLuint*' name='shaders' type='^I'/>
<arg declared_type='GLenum' name='binaryformat' type='I'/>
<arg const='true' declared_type='GLvoid*' name='binary' type='^v'/>
<arg declared_type='GLsizei' name='length' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glShaderSource'>
<arg declared_type='GLuint' name='shader' type='I'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLchar **' name='string' type='^*'/>
<arg const='true' declared_type='GLint*' name='length' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glStencilFunc'>
<arg declared_type='GLenum' name='func' type='I'/>
<arg declared_type='GLint' name='ref' type='i'/>
<arg declared_type='GLuint' name='mask' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glStencilFuncSeparate'>
<arg declared_type='GLenum' name='face' type='I'/>
<arg declared_type='GLenum' name='func' type='I'/>
<arg declared_type='GLint' name='ref' type='i'/>
<arg declared_type='GLuint' name='mask' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glStencilMask'>
<arg declared_type='GLuint' name='mask' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glStencilMaskSeparate'>
<arg declared_type='GLenum' name='face' type='I'/>
<arg declared_type='GLuint' name='mask' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glStencilOp'>
<arg declared_type='GLenum' name='fail' type='I'/>
<arg declared_type='GLenum' name='zfail' type='I'/>
<arg declared_type='GLenum' name='zpass' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glStencilOpSeparate'>
<arg declared_type='GLenum' name='face' type='I'/>
<arg declared_type='GLenum' name='fail' type='I'/>
<arg declared_type='GLenum' name='zfail' type='I'/>
<arg declared_type='GLenum' name='zpass' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexCoordPointer'>
<arg declared_type='GLint' name='size' type='i'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLsizei' name='stride' type='i'/>
<arg const='true' declared_type='GLvoid*' name='pointer' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexEnvf'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat' name='param' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexEnvfv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexEnvi'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexEnviv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexEnvx'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexEnvxv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexImage2D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLint' name='internalformat' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<arg declared_type='GLint' name='border' type='i'/>
<arg declared_type='GLenum' name='format' type='I'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg const='true' declared_type='GLvoid*' name='pixels' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexImage3D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLint' name='internalformat' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<arg declared_type='GLsizei' name='depth' type='i'/>
<arg declared_type='GLint' name='border' type='i'/>
<arg declared_type='GLenum' name='format' type='I'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg const='true' declared_type='GLvoid*' name='pixels' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexParameterf'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfloat' name='param' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexParameterfv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfloat*' name='params' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexParameteri'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLint' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexParameteriv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLint*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexParameterx'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg declared_type='GLfixed' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexParameterxv'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLenum' name='pname' type='I'/>
<arg const='true' declared_type='GLfixed*' name='params' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexStorage2D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLsizei' name='levels' type='i'/>
<arg declared_type='GLenum' name='internalformat' type='I'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexStorage2DEXT'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLsizei' name='levels' type='i'/>
<arg declared_type='GLenum' name='internalformat' type='I'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glTexStorage3D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLsizei' name='levels' type='i'/>
<arg declared_type='GLenum' name='internalformat' type='I'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<arg declared_type='GLsizei' name='depth' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexSubImage2D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLint' name='xoffset' type='i'/>
<arg declared_type='GLint' name='yoffset' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<arg declared_type='GLenum' name='format' type='I'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg const='true' declared_type='GLvoid*' name='pixels' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTexSubImage3D'>
<arg declared_type='GLenum' name='target' type='I'/>
<arg declared_type='GLint' name='level' type='i'/>
<arg declared_type='GLint' name='xoffset' type='i'/>
<arg declared_type='GLint' name='yoffset' type='i'/>
<arg declared_type='GLint' name='zoffset' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<arg declared_type='GLsizei' name='depth' type='i'/>
<arg declared_type='GLenum' name='format' type='I'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg const='true' declared_type='GLvoid*' name='pixels' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTransformFeedbackVaryings'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLchar **' name='varyings' type='^*'/>
<arg declared_type='GLenum' name='bufferMode' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTranslatef'>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<arg declared_type='GLfloat' name='z' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glTranslatex'>
<arg declared_type='GLfixed' name='x' type='i'/>
<arg declared_type='GLfixed' name='y' type='i'/>
<arg declared_type='GLfixed' name='z' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform1f'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform1fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLfloat*' name='v' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform1i'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLint' name='x' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform1iv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLint*' name='v' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform1ui'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLuint' name='v0' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform1uiv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLuint*' name='value' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform2f'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform2fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLfloat*' name='v' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform2i'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform2iv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLint*' name='v' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform2ui'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLuint' name='v0' type='I'/>
<arg declared_type='GLuint' name='v1' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform2uiv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLuint*' name='value' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform3f'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<arg declared_type='GLfloat' name='z' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform3fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLfloat*' name='v' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform3i'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLint' name='z' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform3iv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLint*' name='v' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform3ui'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLuint' name='v0' type='I'/>
<arg declared_type='GLuint' name='v1' type='I'/>
<arg declared_type='GLuint' name='v2' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform3uiv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLuint*' name='value' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform4f'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<arg declared_type='GLfloat' name='z' type='f'/>
<arg declared_type='GLfloat' name='w' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform4fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLfloat*' name='v' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform4i'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLint' name='z' type='i'/>
<arg declared_type='GLint' name='w' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform4iv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLint*' name='v' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform4ui'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLuint' name='v0' type='I'/>
<arg declared_type='GLuint' name='v1' type='I'/>
<arg declared_type='GLuint' name='v2' type='I'/>
<arg declared_type='GLuint' name='v3' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniform4uiv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg const='true' declared_type='GLuint*' name='value' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniformBlockBinding'>
<arg declared_type='GLuint' name='program' type='I'/>
<arg declared_type='GLuint' name='uniformBlockIndex' type='I'/>
<arg declared_type='GLuint' name='uniformBlockBinding' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniformMatrix2fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniformMatrix2x3fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniformMatrix2x4fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniformMatrix3fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniformMatrix3x2fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniformMatrix3x4fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniformMatrix4fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniformMatrix4x2fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUniformMatrix4x3fv'>
<arg declared_type='GLint' name='location' type='i'/>
<arg declared_type='GLsizei' name='count' type='i'/>
<arg declared_type='GLboolean' name='transpose' type='C'/>
<arg const='true' declared_type='GLfloat*' name='value' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUnmapBuffer'>
<arg declared_type='GLenum' name='target' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glUnmapBufferOES'>
<arg declared_type='GLenum' name='target' type='I'/>
<retval declared_type='GLboolean' type='C'/>
</function>
<function name='glUseProgram'>
<arg declared_type='GLuint' name='program' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glUseProgramStagesEXT'>
<arg declared_type='GLuint' name='pipeline' type='I'/>
<arg declared_type='GLbitfield' name='stages' type='I'/>
<arg declared_type='GLuint' name='program' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glValidateProgram'>
<arg declared_type='GLuint' name='program' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glValidateProgramPipelineEXT'>
<arg declared_type='GLuint' name='pipeline' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glVertexAttrib1f'>
<arg declared_type='GLuint' name='indx' type='I'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttrib1fv'>
<arg declared_type='GLuint' name='indx' type='I'/>
<arg const='true' declared_type='GLfloat*' name='values' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttrib2f'>
<arg declared_type='GLuint' name='indx' type='I'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttrib2fv'>
<arg declared_type='GLuint' name='indx' type='I'/>
<arg const='true' declared_type='GLfloat*' name='values' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttrib3f'>
<arg declared_type='GLuint' name='indx' type='I'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<arg declared_type='GLfloat' name='z' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttrib3fv'>
<arg declared_type='GLuint' name='indx' type='I'/>
<arg const='true' declared_type='GLfloat*' name='values' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttrib4f'>
<arg declared_type='GLuint' name='indx' type='I'/>
<arg declared_type='GLfloat' name='x' type='f'/>
<arg declared_type='GLfloat' name='y' type='f'/>
<arg declared_type='GLfloat' name='z' type='f'/>
<arg declared_type='GLfloat' name='w' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttrib4fv'>
<arg declared_type='GLuint' name='indx' type='I'/>
<arg const='true' declared_type='GLfloat*' name='values' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttribDivisor'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLuint' name='divisor' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttribDivisorEXT'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLuint' name='divisor' type='I'/>
<retval declared_type='GLvoid' type='v'/>
</function>
<function name='glVertexAttribI4i'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLint' name='z' type='i'/>
<arg declared_type='GLint' name='w' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttribI4iv'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg const='true' declared_type='GLint*' name='v' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttribI4ui'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLuint' name='x' type='I'/>
<arg declared_type='GLuint' name='y' type='I'/>
<arg declared_type='GLuint' name='z' type='I'/>
<arg declared_type='GLuint' name='w' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttribI4uiv'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg const='true' declared_type='GLuint*' name='v' type='^I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttribIPointer'>
<arg declared_type='GLuint' name='index' type='I'/>
<arg declared_type='GLint' name='size' type='i'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLsizei' name='stride' type='i'/>
<arg const='true' declared_type='GLvoid*' name='pointer' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexAttribPointer'>
<arg declared_type='GLuint' name='indx' type='I'/>
<arg declared_type='GLint' name='size' type='i'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLboolean' name='normalized' type='C'/>
<arg declared_type='GLsizei' name='stride' type='i'/>
<arg const='true' declared_type='GLvoid*' name='ptr' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glVertexPointer'>
<arg declared_type='GLint' name='size' type='i'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLsizei' name='stride' type='i'/>
<arg const='true' declared_type='GLvoid*' name='pointer' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glViewport'>
<arg declared_type='GLint' name='x' type='i'/>
<arg declared_type='GLint' name='y' type='i'/>
<arg declared_type='GLsizei' name='width' type='i'/>
<arg declared_type='GLsizei' name='height' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glWaitSync'>
<arg declared_type='GLsync' name='sync' type='^{__GLsync=}'/>
<arg declared_type='GLbitfield' name='flags' type='I'/>
<arg declared_type='GLuint64' name='timeout' type='Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glWaitSyncAPPLE'>
<arg declared_type='GLsync' name='sync' type='^{__GLsync=}'/>
<arg declared_type='GLbitfield' name='flags' type='I'/>
<arg declared_type='GLuint64' name='timeout' type='Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='glWeightPointerOES'>
<arg declared_type='GLint' name='size' type='i'/>
<arg declared_type='GLenum' name='type' type='I'/>
<arg declared_type='GLsizei' name='stride' type='i'/>
<arg const='true' declared_type='GLvoid*' name='pointer' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<class name='EAGLContext'>
<method selector='API'>
<retval declared_type='EAGLRenderingAPI' type='I' type64='Q'/>
</method>
<method class_method='true' selector='currentContext'>
<retval declared_type='EAGLContext * _Nullable' type='@'/>
</method>
<method selector='debugLabel'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='initWithAPI:'>
<arg declared_type='EAGLRenderingAPI' index='0' name='api' type='I' type64='Q'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithAPI:sharegroup:'>
<arg declared_type='EAGLRenderingAPI' index='0' name='api' type='I' type64='Q'/>
<arg declared_type='EAGLSharegroup * _Nonnull' index='1' name='sharegroup' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isMultiThreaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentRenderbuffer:'>
<arg declared_type='NSUInteger' index='0' name='target' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentRenderbuffer:afterMinimumDuration:'>
<arg declared_type='NSUInteger' index='0' name='target' type='I' type64='Q'/>
<arg declared_type='CFTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentRenderbuffer:atTime:'>
<arg declared_type='NSUInteger' index='0' name='target' type='I' type64='Q'/>
<arg declared_type='CFTimeInterval' index='1' name='presentationTime' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='renderbufferStorage:fromDrawable:'>
<arg declared_type='NSUInteger' index='0' name='target' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='1' name='drawable' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='setCurrentContext:'>
<arg declared_type='EAGLContext * _Nullable' index='0' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDebugLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='debugLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMultiThreaded:'>
<arg declared_type='BOOL' index='0' name='multiThreaded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharegroup'>
<retval declared_type='EAGLSharegroup * _Nonnull' type='@'/>
</method>
</class>
<class name='EAGLSharegroup'>
<method selector='debugLabel'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setDebugLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='debugLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='drawableProperties'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='setDrawableProperties:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='drawableProperties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='EAGLDrawable'>
<method selector='drawableProperties' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='setDrawableProperties:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='drawableProperties' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
