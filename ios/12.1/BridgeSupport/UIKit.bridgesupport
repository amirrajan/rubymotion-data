<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/FileProvider.framework'/>
<struct name='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=&quot;top&quot;f&quot;leading&quot;f&quot;bottom&quot;f&quot;trailing&quot;f}' type64='{NSDirectionalEdgeInsets=&quot;top&quot;d&quot;leading&quot;d&quot;bottom&quot;d&quot;trailing&quot;d}'>
<field declared_type='CGFloat' name='top' type='f' type64='d'/>
<field declared_type='CGFloat' name='leading' type='f' type64='d'/>
<field declared_type='CGFloat' name='bottom' type='f' type64='d'/>
<field declared_type='CGFloat' name='trailing' type='f' type64='d'/>
</struct>
<struct name='UIEdgeInsets' type='{UIEdgeInsets=&quot;top&quot;f&quot;left&quot;f&quot;bottom&quot;f&quot;right&quot;f}' type64='{UIEdgeInsets=&quot;top&quot;d&quot;left&quot;d&quot;bottom&quot;d&quot;right&quot;d}'>
<field declared_type='CGFloat' name='top' type='f' type64='d'/>
<field declared_type='CGFloat' name='left' type='f' type64='d'/>
<field declared_type='CGFloat' name='bottom' type='f' type64='d'/>
<field declared_type='CGFloat' name='right' type='f' type64='d'/>
</struct>
<struct name='UIFloatRange' type='{_UIFloatRange=&quot;minimum&quot;f&quot;maximum&quot;f}' type64='{_UIFloatRange=&quot;minimum&quot;d&quot;maximum&quot;d}'>
<field declared_type='CGFloat' name='minimum' type='f' type64='d'/>
<field declared_type='CGFloat' name='maximum' type='f' type64='d'/>
</struct>
<struct name='UIOffset' type='{UIOffset=&quot;horizontal&quot;f&quot;vertical&quot;f}' type64='{UIOffset=&quot;horizontal&quot;d&quot;vertical&quot;d}'>
<field declared_type='CGFloat' name='horizontal' type='f' type64='d'/>
<field declared_type='CGFloat' name='vertical' type='f' type64='d'/>
</struct>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAttachmentAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSBackgroundColorAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSBackgroundColorDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSBaselineOffsetAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCharacterEncodingDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSCharacterEncodingDocumentOption' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDefaultAttributesDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSDefaultAttributesDocumentOption' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDefaultTabIntervalDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSDirectionalEdgeInsets' name='NSDirectionalEdgeInsetsZero' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDocumentTypeDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSDocumentTypeDocumentOption' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSExpansionAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSFontAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSForegroundColorAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentType _Nonnull' name='NSHTMLTextDocumentType' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSHyphenationFactorDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSKernAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSLigatureAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSLinkAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSObliquenessAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSPaperMarginDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSPaperSizeDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSParagraphStyleAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentType _Nonnull' name='NSPlainTextDocumentType' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentType _Nonnull' name='NSRTFDTextDocumentType' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentType _Nonnull' name='NSRTFTextDocumentType' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSReadOnlyDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSShadowAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSStrikethroughColorAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSStrikethroughStyleAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSStrokeColorAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSStrokeWidthAttributeName' type='@'/>
<constant const='true' declared_type='NSTextTabOptionKey _Nonnull' name='NSTabColumnTerminatorsAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSTextEffectAttributeName' type='@'/>
<constant const='true' declared_type='NSTextEffectStyle _Nonnull' name='NSTextEffectLetterpressStyle' type='@'/>
<constant const='true' declared_type='NSTextLayoutSectionKey _Nonnull' name='NSTextLayoutSectionOrientation' type='@'/>
<constant const='true' declared_type='NSTextLayoutSectionKey _Nonnull' name='NSTextLayoutSectionRange' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSTextLayoutSectionsAttribute' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSTextStorageDidProcessEditingNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSTextStorageWillProcessEditingNotification' type='@'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlineByWord' type='i' type64='q'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSUnderlineColorAttributeName' type='@'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlinePatternDash' type='i' type64='q'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlinePatternDashDot' type='i' type64='q'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlinePatternDashDotDot' type='i' type64='q'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlinePatternDot' type='i' type64='q'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlinePatternSolid' type='i' type64='q'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSUnderlineStyleAttributeName' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSUserActivityDocumentURLKey' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSVerticalGlyphFormAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewModeDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewSizeDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewZoomDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSWritingDirectionAttributeName' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityAnnouncementDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIAccessibilityAnnouncementKeyStringValue' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIAccessibilityAnnouncementKeyWasSuccessful' type='@'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityAnnouncementNotification' type='I'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIAccessibilityAssistiveTechnologyKey' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityAssistiveTouchStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityBoldTextStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityClosedCaptioningStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityDarkerSystemColorsStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityElementFocusedNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIAccessibilityFocusedElementKey' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityGrayscaleStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityGuidedAccessStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityHearingDevicePairedEarDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityInvertColorsStatusDidChangeNotification' type='@'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityLayoutChangedNotification' type='I'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityMonoAudioStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='UIAccessibilityAssistiveTechnologyIdentifier _Nonnull' name='UIAccessibilityNotificationSwitchControlIdentifier' type='@'/>
<constant const='true' declared_type='UIAccessibilityAssistiveTechnologyIdentifier _Nonnull' name='UIAccessibilityNotificationVoiceOverIdentifier' type='@'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityPageScrolledNotification' type='I'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityPauseAssistiveTechnologyNotification' type='I'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityReduceMotionStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityReduceTransparencyStatusDidChangeNotification' type='@'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityResumeAssistiveTechnologyNotification' type='I'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityScreenChangedNotification' type='I'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityShakeToUndoDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilitySpeakScreenStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilitySpeakSelectionStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilitySpeechAttributeIPANotation' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilitySpeechAttributeLanguage' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilitySpeechAttributePitch' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilitySpeechAttributePunctuation' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilitySpeechAttributeQueueAnnouncement' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilitySwitchControlStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilityTextAttributeCustom' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilityTextAttributeHeadingLevel' type='@'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitAdjustable' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitAllowsDirectInteraction' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitButton' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitCausesPageTurn' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitHeader' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitImage' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitKeyboardKey' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitLink' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitNone' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitNotEnabled' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitPlaysSound' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitSearchField' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitSelected' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitStartsMediaSession' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitStaticText' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitSummaryElement' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitTabBar' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitUpdatesFrequently' type='Q'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIAccessibilityUnfocusedElementKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIAccessibilityVoiceOverStatusChanged' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityVoiceOverStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypeAddToReadingList' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypeAirDrop' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypeAssignToContact' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypeCopyToPasteboard' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypeMail' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypeMarkupAsPDF' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypeMessage' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypeOpenInIBooks' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypePostToFacebook' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypePostToFlickr' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypePostToTencentWeibo' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypePostToTwitter' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypePostToVimeo' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypePostToWeibo' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypePrint' type='@'/>
<constant const='true' declared_type='UIActivityType _Nonnull' name='UIActivityTypeSaveToCameraRoll' type='@'/>
<constant const='true' declared_type='NSTimeInterval' name='UIApplicationBackgroundFetchIntervalMinimum' type='d'/>
<constant const='true' declared_type='NSTimeInterval' name='UIApplicationBackgroundFetchIntervalNever' type='d'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationBackgroundRefreshStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationDidBecomeActiveNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationDidChangeStatusBarFrameNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationDidChangeStatusBarOrientationNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationDidEnterBackgroundNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationDidFinishLaunchingNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationDidReceiveMemoryWarningNotification' type='@'/>
<constant const='true' declared_type='NSExceptionName _Nonnull' name='UIApplicationInvalidInterfaceOrientationException' type='@'/>
<constant const='true' declared_type='UIApplicationExtensionPointIdentifier _Nonnull' name='UIApplicationKeyboardExtensionPointIdentifier' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsAnnotationKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsBluetoothCentralsKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsBluetoothPeripheralsKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsCloudKitShareMetadataKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsLocalNotificationKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsLocationKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsNewsstandDownloadsKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsRemoteNotificationKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsShortcutItemKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsSourceApplicationKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsURLKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsUserActivityDictionaryKey' type='@'/>
<constant const='true' declared_type='UIApplicationLaunchOptionsKey _Nonnull' name='UIApplicationLaunchOptionsUserActivityTypeKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIApplicationOpenSettingsURLString' type='@'/>
<constant const='true' declared_type='UIApplicationOpenExternalURLOptionsKey _Nonnull' name='UIApplicationOpenURLOptionUniversalLinksOnly' type='@'/>
<constant const='true' declared_type='UIApplicationOpenURLOptionsKey _Nonnull' name='UIApplicationOpenURLOptionsAnnotationKey' type='@'/>
<constant const='true' declared_type='UIApplicationOpenURLOptionsKey _Nonnull' name='UIApplicationOpenURLOptionsOpenInPlaceKey' type='@'/>
<constant const='true' declared_type='UIApplicationOpenURLOptionsKey _Nonnull' name='UIApplicationOpenURLOptionsSourceApplicationKey' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationProtectedDataDidBecomeAvailable' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationProtectedDataWillBecomeUnavailable' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationSignificantTimeChangeNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIApplicationStateRestorationBundleVersionKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIApplicationStateRestorationSystemVersionKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIApplicationStateRestorationTimestampKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIApplicationStateRestorationUserInterfaceIdiomKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIApplicationStatusBarFrameUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIApplicationStatusBarOrientationUserInfoKey' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationUserDidTakeScreenshotNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationWillChangeStatusBarFrameNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationWillChangeStatusBarOrientationNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationWillEnterForegroundNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationWillResignActiveNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIApplicationWillTerminateNotification' type='@'/>
<constant const='true' declared_type='UIBackgroundTaskIdentifier' name='UIBackgroundTaskInvalid' type='I' type64='Q'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UICollectionElementKindSectionFooter' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UICollectionElementKindSectionHeader' type='@'/>
<constant const='true' declared_type='CGSize' name='UICollectionViewFlowLayoutAutomaticSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryAccessibilityExtraExtraExtraLarge' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryAccessibilityExtraExtraLarge' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryAccessibilityExtraLarge' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryAccessibilityLarge' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryAccessibilityMedium' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIContentSizeCategoryDidChangeNotification' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryExtraExtraExtraLarge' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryExtraExtraLarge' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryExtraLarge' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryExtraSmall' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryLarge' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryMedium' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIContentSizeCategoryNewValueKey' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategorySmall' type='@'/>
<constant const='true' declared_type='UIContentSizeCategory _Nonnull' name='UIContentSizeCategoryUnspecified' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIDeviceBatteryLevelDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIDeviceBatteryStateDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIDeviceOrientationDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIDeviceProximityStateDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIDocumentBrowserErrorDomain' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIDocumentStateChangedNotification' type='@'/>
<constant const='true' declared_type='UIEdgeInsets' name='UIEdgeInsetsZero' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<constant const='true' declared_type='UIFloatRange' name='UIFloatRangeInfinite' type='{_UIFloatRange=ff}' type64='{_UIFloatRange=dd}'/>
<constant const='true' declared_type='UIFloatRange' name='UIFloatRangeZero' type='{_UIFloatRange=ff}' type64='{_UIFloatRange=dd}'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIFocusDidUpdateNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIFocusMovementDidFailNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIFocusUpdateAnimationCoordinatorKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIFocusUpdateContextKey' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorCascadeListAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorCharacterSetAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorFaceAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorFamilyAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorFeatureSettingsAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorFixedAdvanceAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorMatrixAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorNameAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorSizeAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorTextStyleAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorTraitsAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorVisibleNameAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorFeatureKey _Nonnull' name='UIFontFeatureSelectorIdentifierKey' type='@'/>
<constant const='true' declared_type='UIFontDescriptorFeatureKey _Nonnull' name='UIFontFeatureTypeIdentifierKey' type='@'/>
<constant const='true' declared_type='UIFontDescriptorTraitKey _Nonnull' name='UIFontSlantTrait' type='@'/>
<constant const='true' declared_type='UIFontDescriptorTraitKey _Nonnull' name='UIFontSymbolicTrait' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleBody' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleCallout' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleCaption1' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleCaption2' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleFootnote' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleHeadline' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleLargeTitle' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleSubheadline' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleTitle1' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleTitle2' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleTitle3' type='@'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightBlack' type='f' type64='d'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightBold' type='f' type64='d'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightHeavy' type='f' type64='d'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightLight' type='f' type64='d'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightMedium' type='f' type64='d'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightRegular' type='f' type64='d'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightSemibold' type='f' type64='d'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightThin' type='f' type64='d'/>
<constant const='true' declared_type='UIFontDescriptorTraitKey _Nonnull' name='UIFontWeightTrait' type='@'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightUltraLight' type='f' type64='d'/>
<constant const='true' declared_type='UIFontDescriptorTraitKey _Nonnull' name='UIFontWidthTrait' type='@'/>
<constant const='true' declared_type='UIImagePickerControllerInfoKey _Nonnull' name='UIImagePickerControllerCropRect' type='@'/>
<constant const='true' declared_type='UIImagePickerControllerInfoKey _Nonnull' name='UIImagePickerControllerEditedImage' type='@'/>
<constant const='true' declared_type='UIImagePickerControllerInfoKey _Nonnull' name='UIImagePickerControllerImageURL' type='@'/>
<constant const='true' declared_type='UIImagePickerControllerInfoKey _Nonnull' name='UIImagePickerControllerLivePhoto' type='@'/>
<constant const='true' declared_type='UIImagePickerControllerInfoKey _Nonnull' name='UIImagePickerControllerMediaMetadata' type='@'/>
<constant const='true' declared_type='UIImagePickerControllerInfoKey _Nonnull' name='UIImagePickerControllerMediaType' type='@'/>
<constant const='true' declared_type='UIImagePickerControllerInfoKey _Nonnull' name='UIImagePickerControllerMediaURL' type='@'/>
<constant const='true' declared_type='UIImagePickerControllerInfoKey _Nonnull' name='UIImagePickerControllerOriginalImage' type='@'/>
<constant const='true' declared_type='UIImagePickerControllerInfoKey _Nonnull' name='UIImagePickerControllerPHAsset' type='@'/>
<constant const='true' declared_type='UIImagePickerControllerInfoKey _Nonnull' name='UIImagePickerControllerReferenceURL' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyInputDownArrow' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyInputEscape' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyInputLeftArrow' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyInputRightArrow' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyInputUpArrow' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyboardAnimationCurveUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyboardAnimationDurationUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyboardBoundsUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyboardCenterBeginUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyboardCenterEndUserInfoKey' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIKeyboardDidChangeFrameNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIKeyboardDidHideNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIKeyboardDidShowNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyboardFrameBeginUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyboardFrameEndUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIKeyboardIsLocalUserInfoKey' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIKeyboardWillChangeFrameNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIKeyboardWillHideNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIKeyboardWillShowNotification' type='@'/>
<constant const='true' declared_type='CGSize' name='UILayoutFittingCompressedSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<constant const='true' declared_type='CGSize' name='UILayoutFittingExpandedSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<constant const='true' declared_type='UILayoutPriority' name='UILayoutPriorityDefaultHigh' type='f'/>
<constant const='true' declared_type='UILayoutPriority' name='UILayoutPriorityDefaultLow' type='f'/>
<constant const='true' declared_type='UILayoutPriority' name='UILayoutPriorityFittingSizeLevel' type='f'/>
<constant const='true' declared_type='UILayoutPriority' name='UILayoutPriorityRequired' type='f'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UILocalNotificationDefaultSoundName' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIMenuControllerDidHideMenuNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIMenuControllerDidShowMenuNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIMenuControllerMenuFrameDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIMenuControllerWillHideMenuNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIMenuControllerWillShowMenuNotification' type='@'/>
<constant const='true' declared_type='NSTimeInterval' name='UIMinimumKeepAliveTimeout' type='d'/>
<constant const='true' declared_type='CGFloat' name='UINavigationControllerHideShowBarDuration' type='f' type64='d'/>
<constant const='true' declared_type='UINibOptionsKey _Nonnull' name='UINibExternalObjects' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UINibProxiedObjectsKey' type='@'/>
<constant const='true' declared_type='UIOffset' name='UIOffsetZero' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<constant const='true' declared_type='UIPageViewControllerOptionsKey _Nonnull' name='UIPageViewControllerOptionInterPageSpacingKey' type='@'/>
<constant const='true' declared_type='UIPageViewControllerOptionsKey _Nonnull' name='UIPageViewControllerOptionSpineLocationKey' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIPasteboardChangedNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIPasteboardChangedTypesAddedKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIPasteboardChangedTypesRemovedKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIPasteboardNameFind' type='@'/>
<constant const='true' declared_type='UIPasteboardName _Nonnull' name='UIPasteboardNameGeneral' type='@'/>
<constant const='true' declared_type='UIPasteboardOption _Nonnull' name='UIPasteboardOptionExpirationDate' type='@'/>
<constant const='true' declared_type='UIPasteboardOption _Nonnull' name='UIPasteboardOptionLocalOnly' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIPasteboardRemovedNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIPasteboardTypeAutomatic' type='@'/>
<constant declared_type='NSArray * _Nonnull' name='UIPasteboardTypeListColor' type='@'/>
<constant declared_type='NSArray * _Nonnull' name='UIPasteboardTypeListImage' type='@'/>
<constant declared_type='NSArray * _Nonnull' name='UIPasteboardTypeListString' type='@'/>
<constant declared_type='NSArray * _Nonnull' name='UIPasteboardTypeListURL' type='@'/>
<constant const='true' declared_type='NSErrorDomain _Nonnull' name='UIPrintErrorDomain' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIScreenBrightnessDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIScreenCapturedDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIScreenDidConnectNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIScreenDidDisconnectNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIScreenModeDidChangeNotification' type='@'/>
<constant const='true' declared_type='UIScrollViewDecelerationRate' name='UIScrollViewDecelerationRateFast' type='f' type64='d'/>
<constant const='true' declared_type='UIScrollViewDecelerationRate' name='UIScrollViewDecelerationRateNormal' type='f' type64='d'/>
<constant const='true' declared_type='CGFloat' name='UISplitViewControllerAutomaticDimension' type='f' type64='d'/>
<constant const='true' declared_type='CGFloat' name='UIStackViewSpacingUseDefault' type='f' type64='d'/>
<constant const='true' declared_type='CGFloat' name='UIStackViewSpacingUseSystem' type='f' type64='d'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIStateRestorationViewControllerStoryboardKey' type='@'/>
<constant const='true' declared_type='CGFloat' name='UITableViewAutomaticDimension' type='f' type64='d'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UITableViewIndexSearch' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UITableViewSelectionDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='UITextAttributeFont' type='@'/>
<constant const='true' declared_type='NSString*' name='UITextAttributeTextColor' type='@'/>
<constant const='true' declared_type='NSString*' name='UITextAttributeTextShadowColor' type='@'/>
<constant const='true' declared_type='NSString*' name='UITextAttributeTextShadowOffset' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeAddressCity' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeAddressCityAndState' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeAddressState' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeCountryName' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeCreditCardNumber' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeEmailAddress' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeFamilyName' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeFullStreetAddress' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeGivenName' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeJobTitle' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeLocation' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeMiddleName' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeName' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeNamePrefix' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeNameSuffix' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeNewPassword' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeNickname' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeOneTimeCode' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeOrganizationName' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypePassword' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypePostalCode' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeStreetAddressLine1' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeStreetAddressLine2' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeSublocality' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeTelephoneNumber' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeURL' type='@'/>
<constant const='true' declared_type='UITextContentType _Nonnull' name='UITextContentTypeUsername' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UITextFieldDidEndEditingReasonKey' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UITextFieldTextDidBeginEditingNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UITextFieldTextDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UITextFieldTextDidEndEditingNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UITextInputCurrentInputModeDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UITextInputTextBackgroundColorKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UITextInputTextColorKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UITextInputTextFontKey' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UITextViewTextDidBeginEditingNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UITextViewTextDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UITextViewTextDidEndEditingNotification' type='@'/>
<constant const='true' declared_type='NSRunLoopMode _Nonnull' name='UITrackingRunLoopMode' type='@'/>
<constant const='true' declared_type='UITransitionContextViewControllerKey _Nonnull' name='UITransitionContextFromViewControllerKey' type='@'/>
<constant const='true' declared_type='UITransitionContextViewKey _Nonnull' name='UITransitionContextFromViewKey' type='@'/>
<constant const='true' declared_type='UITransitionContextViewControllerKey _Nonnull' name='UITransitionContextToViewControllerKey' type='@'/>
<constant const='true' declared_type='UITransitionContextViewKey _Nonnull' name='UITransitionContextToViewKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIUserNotificationActionResponseTypedTextKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIUserNotificationTextInputActionButtonTitleKey' type='@'/>
<constant const='true' declared_type='NSExceptionName _Nonnull' name='UIViewControllerHierarchyInconsistencyException' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIViewControllerShowDetailTargetDidChangeNotification' type='@'/>
<constant const='true' declared_type='CGFloat' name='UIViewNoIntrinsicMetric' type='f' type64='d'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIWindowDidBecomeHiddenNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIWindowDidBecomeKeyNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIWindowDidBecomeVisibleNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIWindowDidResignKeyNotification' type='@'/>
<constant const='true' declared_type='UIWindowLevel' name='UIWindowLevelAlert' type='f' type64='d'/>
<constant const='true' declared_type='UIWindowLevel' name='UIWindowLevelNormal' type='f' type64='d'/>
<constant const='true' declared_type='UIWindowLevel' name='UIWindowLevelStatusBar' type='f' type64='d'/>
<enum name='NSAttachmentCharacter' value='65532'/>
<enum name='NSControlCharacterActionContainerBreak' value='32'/>
<enum name='NSControlCharacterActionHorizontalTab' value='4'/>
<enum name='NSControlCharacterActionLineBreak' value='8'/>
<enum name='NSControlCharacterActionParagraphBreak' value='16'/>
<enum name='NSControlCharacterActionWhitespace' value='2'/>
<enum name='NSControlCharacterActionZeroAdvancement' value='1'/>
<enum name='NSControlCharacterContainerBreakAction' value='32'/>
<enum name='NSControlCharacterHorizontalTabAction' value='4'/>
<enum name='NSControlCharacterLineBreakAction' value='8'/>
<enum name='NSControlCharacterParagraphBreakAction' value='16'/>
<enum name='NSControlCharacterWhitespaceAction' value='2'/>
<enum name='NSControlCharacterZeroAdvancementAction' value='1'/>
<enum name='NSGlyphPropertyControlCharacter' value='2'/>
<enum name='NSGlyphPropertyElastic' value='4'/>
<enum name='NSGlyphPropertyNonBaseCharacter' value='8'/>
<enum name='NSGlyphPropertyNull' value='1'/>
<enum name='NSLayoutAttributeBaseline' value='11'/>
<enum name='NSLayoutAttributeBottom' value='4'/>
<enum name='NSLayoutAttributeBottomMargin' value='16'/>
<enum name='NSLayoutAttributeCenterX' value='9'/>
<enum name='NSLayoutAttributeCenterXWithinMargins' value='19'/>
<enum name='NSLayoutAttributeCenterY' value='10'/>
<enum name='NSLayoutAttributeCenterYWithinMargins' value='20'/>
<enum name='NSLayoutAttributeFirstBaseline' value='12'/>
<enum name='NSLayoutAttributeHeight' value='8'/>
<enum name='NSLayoutAttributeLastBaseline' value='11'/>
<enum name='NSLayoutAttributeLeading' value='5'/>
<enum name='NSLayoutAttributeLeadingMargin' value='17'/>
<enum name='NSLayoutAttributeLeft' value='1'/>
<enum name='NSLayoutAttributeLeftMargin' value='13'/>
<enum name='NSLayoutAttributeNotAnAttribute' value='0'/>
<enum name='NSLayoutAttributeRight' value='2'/>
<enum name='NSLayoutAttributeRightMargin' value='14'/>
<enum name='NSLayoutAttributeTop' value='3'/>
<enum name='NSLayoutAttributeTopMargin' value='15'/>
<enum name='NSLayoutAttributeTrailing' value='6'/>
<enum name='NSLayoutAttributeTrailingMargin' value='18'/>
<enum name='NSLayoutAttributeWidth' value='7'/>
<enum name='NSLayoutFormatAlignAllBaseline' value='2048'/>
<enum name='NSLayoutFormatAlignAllBottom' value='16'/>
<enum name='NSLayoutFormatAlignAllCenterX' value='512'/>
<enum name='NSLayoutFormatAlignAllCenterY' value='1024'/>
<enum name='NSLayoutFormatAlignAllFirstBaseline' value='4096'/>
<enum name='NSLayoutFormatAlignAllLastBaseline' value='2048'/>
<enum name='NSLayoutFormatAlignAllLeading' value='32'/>
<enum name='NSLayoutFormatAlignAllLeft' value='2'/>
<enum name='NSLayoutFormatAlignAllRight' value='4'/>
<enum name='NSLayoutFormatAlignAllTop' value='8'/>
<enum name='NSLayoutFormatAlignAllTrailing' value='64'/>
<enum name='NSLayoutFormatAlignmentMask' value='65535'/>
<enum name='NSLayoutFormatDirectionLeadingToTrailing' value='0'/>
<enum name='NSLayoutFormatDirectionLeftToRight' value='65536'/>
<enum name='NSLayoutFormatDirectionMask' value='196608'/>
<enum name='NSLayoutFormatDirectionRightToLeft' value='131072'/>
<enum name='NSLayoutFormatSpacingBaselineToBaseline' value='524288'/>
<enum name='NSLayoutFormatSpacingEdgeToEdge' value='0'/>
<enum name='NSLayoutFormatSpacingMask' value='524288'/>
<enum name='NSLayoutRelationEqual' value='0'/>
<enum name='NSLayoutRelationGreaterThanOrEqual' value='1'/>
<enum name='NSLayoutRelationLessThanOrEqual' value='-1'/>
<enum name='NSLineBreakByCharWrapping' value='1'/>
<enum name='NSLineBreakByClipping' value='2'/>
<enum name='NSLineBreakByTruncatingHead' value='3'/>
<enum name='NSLineBreakByTruncatingMiddle' value='5'/>
<enum name='NSLineBreakByTruncatingTail' value='4'/>
<enum name='NSLineBreakByWordWrapping' value='0'/>
<enum name='NSStringDrawingTruncatesLastVisibleLine' value='32'/>
<enum name='NSStringDrawingUsesDeviceMetrics' value='8'/>
<enum name='NSStringDrawingUsesFontLeading' value='2'/>
<enum name='NSStringDrawingUsesLineFragmentOrigin' value='1'/>
<enum name='NSTextAlignmentCenter' value='1'/>
<enum name='NSTextAlignmentJustified' value='3'/>
<enum name='NSTextAlignmentLeft' value='0'/>
<enum name='NSTextAlignmentNatural' value='4'/>
<enum name='NSTextAlignmentRight' value='2'/>
<enum name='NSTextLayoutOrientationHorizontal' value='0'/>
<enum name='NSTextLayoutOrientationVertical' value='1'/>
<enum name='NSTextStorageEditedAttributes' value='1'/>
<enum name='NSTextStorageEditedCharacters' value='2'/>
<enum name='NSTextWritingDirectionEmbedding' value='0'/>
<enum name='NSTextWritingDirectionOverride' value='2'/>
<enum name='NSUnderlineStyleByWord' value='32768'/>
<enum name='NSUnderlineStyleDouble' value='9'/>
<enum name='NSUnderlineStyleNone' value='0'/>
<enum name='NSUnderlineStylePatternDash' value='512'/>
<enum name='NSUnderlineStylePatternDashDot' value='768'/>
<enum name='NSUnderlineStylePatternDashDotDot' value='1024'/>
<enum name='NSUnderlineStylePatternDot' value='256'/>
<enum name='NSUnderlineStylePatternSolid' value='0'/>
<enum name='NSUnderlineStyleSingle' value='1'/>
<enum name='NSUnderlineStyleThick' value='2'/>
<enum name='NSWritingDirectionEmbedding' value='0'/>
<enum name='NSWritingDirectionLeftToRight' value='0'/>
<enum name='NSWritingDirectionNatural' value='-1'/>
<enum name='NSWritingDirectionOverride' value='2'/>
<enum name='NSWritingDirectionRightToLeft' value='1'/>
<enum name='UIAccessibilityContainerTypeDataTable' value='1'/>
<enum name='UIAccessibilityContainerTypeLandmark' value='3'/>
<enum name='UIAccessibilityContainerTypeList' value='2'/>
<enum name='UIAccessibilityContainerTypeNone' value='0'/>
<enum name='UIAccessibilityCustomRotorDirectionNext' value='1'/>
<enum name='UIAccessibilityCustomRotorDirectionPrevious' value='0'/>
<enum name='UIAccessibilityCustomSystemRotorTypeBoldText' value='10'/>
<enum name='UIAccessibilityCustomSystemRotorTypeHeading' value='3'/>
<enum name='UIAccessibilityCustomSystemRotorTypeHeadingLevel1' value='4'/>
<enum name='UIAccessibilityCustomSystemRotorTypeHeadingLevel2' value='5'/>
<enum name='UIAccessibilityCustomSystemRotorTypeHeadingLevel3' value='6'/>
<enum name='UIAccessibilityCustomSystemRotorTypeHeadingLevel4' value='7'/>
<enum name='UIAccessibilityCustomSystemRotorTypeHeadingLevel5' value='8'/>
<enum name='UIAccessibilityCustomSystemRotorTypeHeadingLevel6' value='9'/>
<enum name='UIAccessibilityCustomSystemRotorTypeImage' value='14'/>
<enum name='UIAccessibilityCustomSystemRotorTypeItalicText' value='11'/>
<enum name='UIAccessibilityCustomSystemRotorTypeLandmark' value='18'/>
<enum name='UIAccessibilityCustomSystemRotorTypeLink' value='1'/>
<enum name='UIAccessibilityCustomSystemRotorTypeList' value='17'/>
<enum name='UIAccessibilityCustomSystemRotorTypeMisspelledWord' value='13'/>
<enum name='UIAccessibilityCustomSystemRotorTypeNone' value='0'/>
<enum name='UIAccessibilityCustomSystemRotorTypeTable' value='16'/>
<enum name='UIAccessibilityCustomSystemRotorTypeTextField' value='15'/>
<enum name='UIAccessibilityCustomSystemRotorTypeUnderlineText' value='12'/>
<enum name='UIAccessibilityCustomSystemRotorTypeVisitedLink' value='2'/>
<enum name='UIAccessibilityHearingDeviceEarBoth' value='6'/>
<enum name='UIAccessibilityHearingDeviceEarLeft' value='2'/>
<enum name='UIAccessibilityHearingDeviceEarNone' value='0'/>
<enum name='UIAccessibilityHearingDeviceEarRight' value='4'/>
<enum name='UIAccessibilityNavigationStyleAutomatic' value='0'/>
<enum name='UIAccessibilityNavigationStyleCombined' value='2'/>
<enum name='UIAccessibilityNavigationStyleSeparate' value='1'/>
<enum name='UIAccessibilityScrollDirectionDown' value='4'/>
<enum name='UIAccessibilityScrollDirectionLeft' value='2'/>
<enum name='UIAccessibilityScrollDirectionNext' value='5'/>
<enum name='UIAccessibilityScrollDirectionPrevious' value='6'/>
<enum name='UIAccessibilityScrollDirectionRight' value='1'/>
<enum name='UIAccessibilityScrollDirectionUp' value='3'/>
<enum name='UIAccessibilityZoomTypeInsertionPoint' value='0'/>
<enum name='UIActionSheetStyleAutomatic' value='-1'/>
<enum name='UIActionSheetStyleBlackOpaque' value='1'/>
<enum name='UIActionSheetStyleBlackTranslucent' value='2'/>
<enum name='UIActionSheetStyleDefault' value='0'/>
<enum name='UIActivityCategoryAction' value='0'/>
<enum name='UIActivityCategoryShare' value='1'/>
<enum name='UIActivityIndicatorViewStyleGray' value='2'/>
<enum name='UIActivityIndicatorViewStyleWhite' value='1'/>
<enum name='UIActivityIndicatorViewStyleWhiteLarge' value='0'/>
<enum name='UIAlertActionStyleCancel' value='1'/>
<enum name='UIAlertActionStyleDefault' value='0'/>
<enum name='UIAlertActionStyleDestructive' value='2'/>
<enum name='UIAlertControllerStyleActionSheet' value='0'/>
<enum name='UIAlertControllerStyleAlert' value='1'/>
<enum name='UIAlertViewStyleDefault' value='0'/>
<enum name='UIAlertViewStyleLoginAndPasswordInput' value='3'/>
<enum name='UIAlertViewStylePlainTextInput' value='2'/>
<enum name='UIAlertViewStyleSecureTextInput' value='1'/>
<enum name='UIApplicationShortcutIconTypeAdd' value='3'/>
<enum name='UIApplicationShortcutIconTypeAlarm' value='24'/>
<enum name='UIApplicationShortcutIconTypeAudio' value='27'/>
<enum name='UIApplicationShortcutIconTypeBookmark' value='25'/>
<enum name='UIApplicationShortcutIconTypeCapturePhoto' value='20'/>
<enum name='UIApplicationShortcutIconTypeCaptureVideo' value='21'/>
<enum name='UIApplicationShortcutIconTypeCloud' value='13'/>
<enum name='UIApplicationShortcutIconTypeCompose' value='0'/>
<enum name='UIApplicationShortcutIconTypeConfirmation' value='15'/>
<enum name='UIApplicationShortcutIconTypeContact' value='8'/>
<enum name='UIApplicationShortcutIconTypeDate' value='18'/>
<enum name='UIApplicationShortcutIconTypeFavorite' value='11'/>
<enum name='UIApplicationShortcutIconTypeHome' value='9'/>
<enum name='UIApplicationShortcutIconTypeInvitation' value='14'/>
<enum name='UIApplicationShortcutIconTypeLocation' value='4'/>
<enum name='UIApplicationShortcutIconTypeLove' value='12'/>
<enum name='UIApplicationShortcutIconTypeMail' value='16'/>
<enum name='UIApplicationShortcutIconTypeMarkLocation' value='10'/>
<enum name='UIApplicationShortcutIconTypeMessage' value='17'/>
<enum name='UIApplicationShortcutIconTypePause' value='2'/>
<enum name='UIApplicationShortcutIconTypePlay' value='1'/>
<enum name='UIApplicationShortcutIconTypeProhibit' value='7'/>
<enum name='UIApplicationShortcutIconTypeSearch' value='5'/>
<enum name='UIApplicationShortcutIconTypeShare' value='6'/>
<enum name='UIApplicationShortcutIconTypeShuffle' value='26'/>
<enum name='UIApplicationShortcutIconTypeTask' value='22'/>
<enum name='UIApplicationShortcutIconTypeTaskCompleted' value='23'/>
<enum name='UIApplicationShortcutIconTypeTime' value='19'/>
<enum name='UIApplicationShortcutIconTypeUpdate' value='28'/>
<enum name='UIApplicationStateActive' value='0'/>
<enum name='UIApplicationStateBackground' value='2'/>
<enum name='UIApplicationStateInactive' value='1'/>
<enum name='UIAttachmentBehaviorTypeAnchor' value='1'/>
<enum name='UIAttachmentBehaviorTypeItems' value='0'/>
<enum name='UIBackgroundFetchResultFailed' value='2'/>
<enum name='UIBackgroundFetchResultNewData' value='0'/>
<enum name='UIBackgroundFetchResultNoData' value='1'/>
<enum name='UIBackgroundRefreshStatusAvailable' value='2'/>
<enum name='UIBackgroundRefreshStatusDenied' value='1'/>
<enum name='UIBackgroundRefreshStatusRestricted' value='0'/>
<enum name='UIBarButtonItemStyleBordered' value='1'/>
<enum name='UIBarButtonItemStyleDone' value='2'/>
<enum name='UIBarButtonItemStylePlain' value='0'/>
<enum name='UIBarButtonSystemItemAction' value='9'/>
<enum name='UIBarButtonSystemItemAdd' value='4'/>
<enum name='UIBarButtonSystemItemBookmarks' value='11'/>
<enum name='UIBarButtonSystemItemCamera' value='15'/>
<enum name='UIBarButtonSystemItemCancel' value='1'/>
<enum name='UIBarButtonSystemItemCompose' value='7'/>
<enum name='UIBarButtonSystemItemDone' value='0'/>
<enum name='UIBarButtonSystemItemEdit' value='2'/>
<enum name='UIBarButtonSystemItemFastForward' value='20'/>
<enum name='UIBarButtonSystemItemFixedSpace' value='6'/>
<enum name='UIBarButtonSystemItemFlexibleSpace' value='5'/>
<enum name='UIBarButtonSystemItemOrganize' value='10'/>
<enum name='UIBarButtonSystemItemPageCurl' value='23'/>
<enum name='UIBarButtonSystemItemPause' value='18'/>
<enum name='UIBarButtonSystemItemPlay' value='17'/>
<enum name='UIBarButtonSystemItemRedo' value='22'/>
<enum name='UIBarButtonSystemItemRefresh' value='13'/>
<enum name='UIBarButtonSystemItemReply' value='8'/>
<enum name='UIBarButtonSystemItemRewind' value='19'/>
<enum name='UIBarButtonSystemItemSave' value='3'/>
<enum name='UIBarButtonSystemItemSearch' value='12'/>
<enum name='UIBarButtonSystemItemStop' value='14'/>
<enum name='UIBarButtonSystemItemTrash' value='16'/>
<enum name='UIBarButtonSystemItemUndo' value='21'/>
<enum name='UIBarMetricsCompact' value='1'/>
<enum name='UIBarMetricsCompactPrompt' value='102'/>
<enum name='UIBarMetricsDefault' value='0'/>
<enum name='UIBarMetricsDefaultPrompt' value='101'/>
<enum name='UIBarMetricsLandscapePhone' value='1'/>
<enum name='UIBarMetricsLandscapePhonePrompt' value='102'/>
<enum name='UIBarPositionAny' value='0'/>
<enum name='UIBarPositionBottom' value='1'/>
<enum name='UIBarPositionTop' value='2'/>
<enum name='UIBarPositionTopAttached' value='3'/>
<enum name='UIBarStyleBlack' value='1'/>
<enum name='UIBarStyleBlackOpaque' value='1'/>
<enum name='UIBarStyleBlackTranslucent' value='2'/>
<enum name='UIBarStyleDefault' value='0'/>
<enum name='UIBaselineAdjustmentAlignBaselines' value='0'/>
<enum name='UIBaselineAdjustmentAlignCenters' value='1'/>
<enum name='UIBaselineAdjustmentNone' value='2'/>
<enum name='UIBlurEffectStyleDark' value='2'/>
<enum name='UIBlurEffectStyleExtraDark' value='3'/>
<enum name='UIBlurEffectStyleExtraLight' value='0'/>
<enum name='UIBlurEffectStyleLight' value='1'/>
<enum name='UIBlurEffectStyleProminent' value='5'/>
<enum name='UIBlurEffectStyleRegular' value='4'/>
<enum name='UIButtonTypeContactAdd' value='5'/>
<enum name='UIButtonTypeCustom' value='0'/>
<enum name='UIButtonTypeDetailDisclosure' value='2'/>
<enum name='UIButtonTypeInfoDark' value='4'/>
<enum name='UIButtonTypeInfoLight' value='3'/>
<enum name='UIButtonTypePlain' value='6'/>
<enum name='UIButtonTypeRoundedRect' value='1'/>
<enum name='UIButtonTypeSystem' value='1'/>
<enum name='UICloudSharingPermissionAllowPrivate' value='2'/>
<enum name='UICloudSharingPermissionAllowPublic' value='1'/>
<enum name='UICloudSharingPermissionAllowReadOnly' value='4'/>
<enum name='UICloudSharingPermissionAllowReadWrite' value='8'/>
<enum name='UICloudSharingPermissionStandard' value='0'/>
<enum name='UICollectionElementCategoryCell' value='0'/>
<enum name='UICollectionElementCategoryDecorationView' value='2'/>
<enum name='UICollectionElementCategorySupplementaryView' value='1'/>
<enum name='UICollectionUpdateActionDelete' value='1'/>
<enum name='UICollectionUpdateActionInsert' value='0'/>
<enum name='UICollectionUpdateActionMove' value='3'/>
<enum name='UICollectionUpdateActionNone' value='4'/>
<enum name='UICollectionUpdateActionReload' value='2'/>
<enum name='UICollectionViewCellDragStateDragging' value='2'/>
<enum name='UICollectionViewCellDragStateLifting' value='1'/>
<enum name='UICollectionViewCellDragStateNone' value='0'/>
<enum name='UICollectionViewDropIntentInsertAtDestinationIndexPath' value='1'/>
<enum name='UICollectionViewDropIntentInsertIntoDestinationIndexPath' value='2'/>
<enum name='UICollectionViewDropIntentUnspecified' value='0'/>
<enum name='UICollectionViewFlowLayoutSectionInsetFromContentInset' value='0'/>
<enum name='UICollectionViewFlowLayoutSectionInsetFromLayoutMargins' value='2'/>
<enum name='UICollectionViewFlowLayoutSectionInsetFromSafeArea' value='1'/>
<enum name='UICollectionViewReorderingCadenceFast' value='1'/>
<enum name='UICollectionViewReorderingCadenceImmediate' value='0'/>
<enum name='UICollectionViewReorderingCadenceSlow' value='2'/>
<enum name='UICollectionViewScrollDirectionHorizontal' value='1'/>
<enum name='UICollectionViewScrollDirectionVertical' value='0'/>
<enum name='UICollectionViewScrollPositionBottom' value='4'/>
<enum name='UICollectionViewScrollPositionCenteredHorizontally' value='16'/>
<enum name='UICollectionViewScrollPositionCenteredVertically' value='2'/>
<enum name='UICollectionViewScrollPositionLeft' value='8'/>
<enum name='UICollectionViewScrollPositionNone' value='0'/>
<enum name='UICollectionViewScrollPositionRight' value='32'/>
<enum name='UICollectionViewScrollPositionTop' value='1'/>
<enum name='UICollisionBehaviorModeBoundaries' value='2'/>
<enum name='UICollisionBehaviorModeEverything' value='4294967295' value64='18446744073709551615'/>
<enum name='UICollisionBehaviorModeItems' value='1'/>
<enum name='UIContextualActionStyleDestructive' value='1'/>
<enum name='UIContextualActionStyleNormal' value='0'/>
<enum name='UIControlContentHorizontalAlignmentCenter' value='0'/>
<enum name='UIControlContentHorizontalAlignmentFill' value='3'/>
<enum name='UIControlContentHorizontalAlignmentLeading' value='4'/>
<enum name='UIControlContentHorizontalAlignmentLeft' value='1'/>
<enum name='UIControlContentHorizontalAlignmentRight' value='2'/>
<enum name='UIControlContentHorizontalAlignmentTrailing' value='5'/>
<enum name='UIControlContentVerticalAlignmentBottom' value='2'/>
<enum name='UIControlContentVerticalAlignmentCenter' value='0'/>
<enum name='UIControlContentVerticalAlignmentFill' value='3'/>
<enum name='UIControlContentVerticalAlignmentTop' value='1'/>
<enum name='UIControlEventAllEditingEvents' value='983040'/>
<enum name='UIControlEventAllEvents' value='4294967295'/>
<enum name='UIControlEventAllTouchEvents' value='4095'/>
<enum name='UIControlEventApplicationReserved' value='251658240'/>
<enum name='UIControlEventEditingChanged' value='131072'/>
<enum name='UIControlEventEditingDidBegin' value='65536'/>
<enum name='UIControlEventEditingDidEnd' value='262144'/>
<enum name='UIControlEventEditingDidEndOnExit' value='524288'/>
<enum name='UIControlEventPrimaryActionTriggered' value='8192'/>
<enum name='UIControlEventSystemReserved' value='4026531840'/>
<enum name='UIControlEventTouchCancel' value='256'/>
<enum name='UIControlEventTouchDown' value='1'/>
<enum name='UIControlEventTouchDownRepeat' value='2'/>
<enum name='UIControlEventTouchDragEnter' value='16'/>
<enum name='UIControlEventTouchDragExit' value='32'/>
<enum name='UIControlEventTouchDragInside' value='4'/>
<enum name='UIControlEventTouchDragOutside' value='8'/>
<enum name='UIControlEventTouchUpInside' value='64'/>
<enum name='UIControlEventTouchUpOutside' value='128'/>
<enum name='UIControlEventValueChanged' value='4096'/>
<enum name='UIControlStateApplication' value='16711680'/>
<enum name='UIControlStateDisabled' value='2'/>
<enum name='UIControlStateFocused' value='8'/>
<enum name='UIControlStateHighlighted' value='1'/>
<enum name='UIControlStateNormal' value='0'/>
<enum name='UIControlStateReserved' value='4278190080'/>
<enum name='UIControlStateSelected' value='4'/>
<enum name='UIDataDetectorTypeAddress' value='4'/>
<enum name='UIDataDetectorTypeAll' value='4294967295' value64='18446744073709551615'/>
<enum name='UIDataDetectorTypeCalendarEvent' value='8'/>
<enum name='UIDataDetectorTypeFlightNumber' value='32'/>
<enum name='UIDataDetectorTypeLink' value='2'/>
<enum name='UIDataDetectorTypeLookupSuggestion' value='64'/>
<enum name='UIDataDetectorTypeNone' value='0'/>
<enum name='UIDataDetectorTypePhoneNumber' value='1'/>
<enum name='UIDataDetectorTypeShipmentTrackingNumber' value='16'/>
<enum name='UIDatePickerModeCountDownTimer' value='3'/>
<enum name='UIDatePickerModeDate' value='1'/>
<enum name='UIDatePickerModeDateAndTime' value='2'/>
<enum name='UIDatePickerModeTime' value='0'/>
<enum name='UIDeviceBatteryStateCharging' value='2'/>
<enum name='UIDeviceBatteryStateFull' value='3'/>
<enum name='UIDeviceBatteryStateUnknown' value='0'/>
<enum name='UIDeviceBatteryStateUnplugged' value='1'/>
<enum name='UIDeviceOrientationFaceDown' value='6'/>
<enum name='UIDeviceOrientationFaceUp' value='5'/>
<enum name='UIDeviceOrientationLandscapeLeft' value='3'/>
<enum name='UIDeviceOrientationLandscapeRight' value='4'/>
<enum name='UIDeviceOrientationPortrait' value='1'/>
<enum name='UIDeviceOrientationPortraitUpsideDown' value='2'/>
<enum name='UIDeviceOrientationUnknown' value='0'/>
<enum name='UIDisplayGamutP3' value='1'/>
<enum name='UIDisplayGamutSRGB' value='0'/>
<enum name='UIDisplayGamutUnspecified' value='-1'/>
<enum name='UIDocumentBrowserActionAvailabilityMenu' value='1'/>
<enum name='UIDocumentBrowserActionAvailabilityNavigationBar' value='2'/>
<enum name='UIDocumentBrowserErrorGeneric' value='1'/>
<enum name='UIDocumentBrowserErrorNoLocationAvailable' value='2'/>
<enum name='UIDocumentBrowserImportModeCopy' value='1'/>
<enum name='UIDocumentBrowserImportModeMove' value='2'/>
<enum name='UIDocumentBrowserImportModeNone' value='0'/>
<enum name='UIDocumentBrowserUserInterfaceStyleDark' value='2'/>
<enum name='UIDocumentBrowserUserInterfaceStyleLight' value='1'/>
<enum name='UIDocumentBrowserUserInterfaceStyleWhite' value='0'/>
<enum name='UIDocumentChangeCleared' value='3'/>
<enum name='UIDocumentChangeDone' value='0'/>
<enum name='UIDocumentChangeRedone' value='2'/>
<enum name='UIDocumentChangeUndone' value='1'/>
<enum name='UIDocumentMenuOrderFirst' value='0'/>
<enum name='UIDocumentMenuOrderLast' value='1'/>
<enum name='UIDocumentPickerModeExportToService' value='2'/>
<enum name='UIDocumentPickerModeImport' value='0'/>
<enum name='UIDocumentPickerModeMoveToService' value='3'/>
<enum name='UIDocumentPickerModeOpen' value='1'/>
<enum name='UIDocumentSaveForCreating' value='0'/>
<enum name='UIDocumentSaveForOverwriting' value='1'/>
<enum name='UIDocumentStateClosed' value='1'/>
<enum name='UIDocumentStateEditingDisabled' value='8'/>
<enum name='UIDocumentStateInConflict' value='2'/>
<enum name='UIDocumentStateNormal' value='0'/>
<enum name='UIDocumentStateProgressAvailable' value='16'/>
<enum name='UIDocumentStateSavingError' value='4'/>
<enum name='UIDropOperationCancel' value='0'/>
<enum name='UIDropOperationCopy' value='2'/>
<enum name='UIDropOperationForbidden' value='1'/>
<enum name='UIDropOperationMove' value='3'/>
<enum name='UIDropSessionProgressIndicatorStyleDefault' value='1'/>
<enum name='UIDropSessionProgressIndicatorStyleNone' value='0'/>
<enum name='UIDynamicItemCollisionBoundsTypeEllipse' value='1'/>
<enum name='UIDynamicItemCollisionBoundsTypePath' value='2'/>
<enum name='UIDynamicItemCollisionBoundsTypeRectangle' value='0'/>
<enum name='UIEventSubtypeMotionShake' value='1'/>
<enum name='UIEventSubtypeNone' value='0'/>
<enum name='UIEventSubtypeRemoteControlBeginSeekingBackward' value='106'/>
<enum name='UIEventSubtypeRemoteControlBeginSeekingForward' value='108'/>
<enum name='UIEventSubtypeRemoteControlEndSeekingBackward' value='107'/>
<enum name='UIEventSubtypeRemoteControlEndSeekingForward' value='109'/>
<enum name='UIEventSubtypeRemoteControlNextTrack' value='104'/>
<enum name='UIEventSubtypeRemoteControlPause' value='101'/>
<enum name='UIEventSubtypeRemoteControlPlay' value='100'/>
<enum name='UIEventSubtypeRemoteControlPreviousTrack' value='105'/>
<enum name='UIEventSubtypeRemoteControlStop' value='102'/>
<enum name='UIEventSubtypeRemoteControlTogglePlayPause' value='103'/>
<enum name='UIEventTypeMotion' value='1'/>
<enum name='UIEventTypePresses' value='3'/>
<enum name='UIEventTypeRemoteControl' value='2'/>
<enum name='UIEventTypeTouches' value='0'/>
<enum name='UIFocusHeadingDown' value='2'/>
<enum name='UIFocusHeadingLeft' value='4'/>
<enum name='UIFocusHeadingNext' value='16'/>
<enum name='UIFocusHeadingNone' value='0'/>
<enum name='UIFocusHeadingPrevious' value='32'/>
<enum name='UIFocusHeadingRight' value='8'/>
<enum name='UIFocusHeadingUp' value='1'/>
<enum name='UIFontDescriptorClassClarendonSerifs' value='1073741824'/>
<enum name='UIFontDescriptorClassFreeformSerifs' value='1879048192'/>
<enum name='UIFontDescriptorClassMask' value='4026531840'/>
<enum name='UIFontDescriptorClassModernSerifs' value='805306368'/>
<enum name='UIFontDescriptorClassOldStyleSerifs' value='268435456'/>
<enum name='UIFontDescriptorClassOrnamentals' value='2415919104'/>
<enum name='UIFontDescriptorClassSansSerif' value='2147483648'/>
<enum name='UIFontDescriptorClassScripts' value='2684354560'/>
<enum name='UIFontDescriptorClassSlabSerifs' value='1342177280'/>
<enum name='UIFontDescriptorClassSymbolic' value='3221225472'/>
<enum name='UIFontDescriptorClassTransitionalSerifs' value='536870912'/>
<enum name='UIFontDescriptorClassUnknown' value='0'/>
<enum name='UIFontDescriptorTraitBold' value='2'/>
<enum name='UIFontDescriptorTraitCondensed' value='64'/>
<enum name='UIFontDescriptorTraitExpanded' value='32'/>
<enum name='UIFontDescriptorTraitItalic' value='1'/>
<enum name='UIFontDescriptorTraitLooseLeading' value='65536'/>
<enum name='UIFontDescriptorTraitMonoSpace' value='1024'/>
<enum name='UIFontDescriptorTraitTightLeading' value='32768'/>
<enum name='UIFontDescriptorTraitUIOptimized' value='4096'/>
<enum name='UIFontDescriptorTraitVertical' value='2048'/>
<enum name='UIForceTouchCapabilityAvailable' value='2'/>
<enum name='UIForceTouchCapabilityUnavailable' value='1'/>
<enum name='UIForceTouchCapabilityUnknown' value='0'/>
<enum name='UIGestureRecognizerStateBegan' value='1'/>
<enum name='UIGestureRecognizerStateCancelled' value='4'/>
<enum name='UIGestureRecognizerStateChanged' value='2'/>
<enum name='UIGestureRecognizerStateEnded' value='3'/>
<enum name='UIGestureRecognizerStateFailed' value='5'/>
<enum name='UIGestureRecognizerStatePossible' value='0'/>
<enum name='UIGestureRecognizerStateRecognized' value='3'/>
<enum name='UIGraphicsImageRendererFormatRangeAutomatic' value='0'/>
<enum name='UIGraphicsImageRendererFormatRangeExtended' value='1'/>
<enum name='UIGraphicsImageRendererFormatRangeStandard' value='2'/>
<enum name='UIGraphicsImageRendererFormatRangeUnspecified' value='-1'/>
<enum name='UIGuidedAccessRestrictionStateAllow' value='0'/>
<enum name='UIGuidedAccessRestrictionStateDeny' value='1'/>
<enum name='UIImageOrientationDown' value='1'/>
<enum name='UIImageOrientationDownMirrored' value='5'/>
<enum name='UIImageOrientationLeft' value='2'/>
<enum name='UIImageOrientationLeftMirrored' value='6'/>
<enum name='UIImageOrientationRight' value='3'/>
<enum name='UIImageOrientationRightMirrored' value='7'/>
<enum name='UIImageOrientationUp' value='0'/>
<enum name='UIImageOrientationUpMirrored' value='4'/>
<enum name='UIImagePickerControllerCameraCaptureModePhoto' value='0'/>
<enum name='UIImagePickerControllerCameraCaptureModeVideo' value='1'/>
<enum name='UIImagePickerControllerCameraDeviceFront' value='1'/>
<enum name='UIImagePickerControllerCameraDeviceRear' value='0'/>
<enum name='UIImagePickerControllerCameraFlashModeAuto' value='0'/>
<enum name='UIImagePickerControllerCameraFlashModeOff' value='-1'/>
<enum name='UIImagePickerControllerCameraFlashModeOn' value='1'/>
<enum name='UIImagePickerControllerImageURLExportPresetCompatible' value='0'/>
<enum name='UIImagePickerControllerImageURLExportPresetCurrent' value='1'/>
<enum name='UIImagePickerControllerQualityType640x480' value='3'/>
<enum name='UIImagePickerControllerQualityTypeHigh' value='0'/>
<enum name='UIImagePickerControllerQualityTypeIFrame1280x720' value='4'/>
<enum name='UIImagePickerControllerQualityTypeIFrame960x540' value='5'/>
<enum name='UIImagePickerControllerQualityTypeLow' value='2'/>
<enum name='UIImagePickerControllerQualityTypeMedium' value='1'/>
<enum name='UIImagePickerControllerSourceTypeCamera' value='1'/>
<enum name='UIImagePickerControllerSourceTypePhotoLibrary' value='0'/>
<enum name='UIImagePickerControllerSourceTypeSavedPhotosAlbum' value='2'/>
<enum name='UIImageRenderingModeAlwaysOriginal' value='1'/>
<enum name='UIImageRenderingModeAlwaysTemplate' value='2'/>
<enum name='UIImageRenderingModeAutomatic' value='0'/>
<enum name='UIImageResizingModeStretch' value='1'/>
<enum name='UIImageResizingModeTile' value='0'/>
<enum name='UIImpactFeedbackStyleHeavy' value='2'/>
<enum name='UIImpactFeedbackStyleLight' value='0'/>
<enum name='UIImpactFeedbackStyleMedium' value='1'/>
<enum name='UIInputViewStyleDefault' value='0'/>
<enum name='UIInputViewStyleKeyboard' value='1'/>
<enum name='UIInterfaceOrientationLandscapeLeft' value='4'/>
<enum name='UIInterfaceOrientationLandscapeRight' value='3'/>
<enum name='UIInterfaceOrientationMaskAll' value='30'/>
<enum name='UIInterfaceOrientationMaskAllButUpsideDown' value='26'/>
<enum name='UIInterfaceOrientationMaskLandscape' value='24'/>
<enum name='UIInterfaceOrientationMaskLandscapeLeft' value='16'/>
<enum name='UIInterfaceOrientationMaskLandscapeRight' value='8'/>
<enum name='UIInterfaceOrientationMaskPortrait' value='2'/>
<enum name='UIInterfaceOrientationMaskPortraitUpsideDown' value='4'/>
<enum name='UIInterfaceOrientationPortrait' value='1'/>
<enum name='UIInterfaceOrientationPortraitUpsideDown' value='2'/>
<enum name='UIInterfaceOrientationUnknown' value='0'/>
<enum name='UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis' value='0'/>
<enum name='UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis' value='1'/>
<enum name='UIKIT_DEFINE_AS_PROPERTIES' value='1'/>
<enum name='UIKIT_REMOVE_ZERO_FROM_SWIFT' value='1'/>
<enum name='UIKIT_STRING_ENUMS' value='0'/>
<enum name='UIKeyModifierAlphaShift' value='65536'/>
<enum name='UIKeyModifierAlternate' value='524288'/>
<enum name='UIKeyModifierCommand' value='1048576'/>
<enum name='UIKeyModifierControl' value='262144'/>
<enum name='UIKeyModifierNumericPad' value='2097152'/>
<enum name='UIKeyModifierShift' value='131072'/>
<enum name='UIKeyboardAppearanceAlert' value='1'/>
<enum name='UIKeyboardAppearanceDark' value='1'/>
<enum name='UIKeyboardAppearanceDefault' value='0'/>
<enum name='UIKeyboardAppearanceLight' value='2'/>
<enum name='UIKeyboardTypeASCIICapable' value='1'/>
<enum name='UIKeyboardTypeASCIICapableNumberPad' value='11'/>
<enum name='UIKeyboardTypeAlphabet' value='1'/>
<enum name='UIKeyboardTypeDecimalPad' value='8'/>
<enum name='UIKeyboardTypeDefault' value='0'/>
<enum name='UIKeyboardTypeEmailAddress' value='7'/>
<enum name='UIKeyboardTypeNamePhonePad' value='6'/>
<enum name='UIKeyboardTypeNumberPad' value='4'/>
<enum name='UIKeyboardTypeNumbersAndPunctuation' value='2'/>
<enum name='UIKeyboardTypePhonePad' value='5'/>
<enum name='UIKeyboardTypeTwitter' value='9'/>
<enum name='UIKeyboardTypeURL' value='3'/>
<enum name='UIKeyboardTypeWebSearch' value='10'/>
<enum name='UILayoutConstraintAxisHorizontal' value='0'/>
<enum name='UILayoutConstraintAxisVertical' value='1'/>
<enum name='UILineBreakModeCharacterWrap' value='1'/>
<enum name='UILineBreakModeClip' value='2'/>
<enum name='UILineBreakModeHeadTruncation' value='3'/>
<enum name='UILineBreakModeMiddleTruncation' value='5'/>
<enum name='UILineBreakModeTailTruncation' value='4'/>
<enum name='UILineBreakModeWordWrap' value='0'/>
<enum name='UIMenuControllerArrowDefault' value='0'/>
<enum name='UIMenuControllerArrowDown' value='2'/>
<enum name='UIMenuControllerArrowLeft' value='3'/>
<enum name='UIMenuControllerArrowRight' value='4'/>
<enum name='UIMenuControllerArrowUp' value='1'/>
<enum name='UIModalPresentationBlurOverFullScreen' value='8'/>
<enum name='UIModalPresentationCurrentContext' value='3'/>
<enum name='UIModalPresentationCustom' value='4'/>
<enum name='UIModalPresentationFormSheet' value='2'/>
<enum name='UIModalPresentationFullScreen' value='0'/>
<enum name='UIModalPresentationNone' value='-1'/>
<enum name='UIModalPresentationOverCurrentContext' value='6'/>
<enum name='UIModalPresentationOverFullScreen' value='5'/>
<enum name='UIModalPresentationPageSheet' value='1'/>
<enum name='UIModalPresentationPopover' value='7'/>
<enum name='UIModalTransitionStyleCoverVertical' value='0'/>
<enum name='UIModalTransitionStyleCrossDissolve' value='2'/>
<enum name='UIModalTransitionStyleFlipHorizontal' value='1'/>
<enum name='UIModalTransitionStylePartialCurl' value='3'/>
<enum name='UINavigationControllerOperationNone' value='0'/>
<enum name='UINavigationControllerOperationPop' value='2'/>
<enum name='UINavigationControllerOperationPush' value='1'/>
<enum name='UINavigationItemLargeTitleDisplayModeAlways' value='1'/>
<enum name='UINavigationItemLargeTitleDisplayModeAutomatic' value='0'/>
<enum name='UINavigationItemLargeTitleDisplayModeNever' value='2'/>
<enum name='UINotificationFeedbackTypeError' value='2'/>
<enum name='UINotificationFeedbackTypeSuccess' value='0'/>
<enum name='UINotificationFeedbackTypeWarning' value='1'/>
<enum name='UIPageViewControllerNavigationDirectionForward' value='0'/>
<enum name='UIPageViewControllerNavigationDirectionReverse' value='1'/>
<enum name='UIPageViewControllerNavigationOrientationHorizontal' value='0'/>
<enum name='UIPageViewControllerNavigationOrientationVertical' value='1'/>
<enum name='UIPageViewControllerSpineLocationMax' value='3'/>
<enum name='UIPageViewControllerSpineLocationMid' value='2'/>
<enum name='UIPageViewControllerSpineLocationMin' value='1'/>
<enum name='UIPageViewControllerSpineLocationNone' value='0'/>
<enum name='UIPageViewControllerTransitionStylePageCurl' value='0'/>
<enum name='UIPageViewControllerTransitionStyleScroll' value='1'/>
<enum name='UIPencilPreferredActionIgnore' value='0'/>
<enum name='UIPencilPreferredActionShowColorPalette' value='3'/>
<enum name='UIPencilPreferredActionSwitchEraser' value='1'/>
<enum name='UIPencilPreferredActionSwitchPrevious' value='2'/>
<enum name='UIPopoverArrowDirectionAny' value='15'/>
<enum name='UIPopoverArrowDirectionDown' value='2'/>
<enum name='UIPopoverArrowDirectionLeft' value='4'/>
<enum name='UIPopoverArrowDirectionRight' value='8'/>
<enum name='UIPopoverArrowDirectionUnknown' value='4294967295' value64='18446744073709551615'/>
<enum name='UIPopoverArrowDirectionUp' value='1'/>
<enum name='UIPreferredPresentationStyleAttachment' value='2'/>
<enum name='UIPreferredPresentationStyleInline' value='1'/>
<enum name='UIPreferredPresentationStyleUnspecified' value='0'/>
<enum name='UIPressPhaseBegan' value='0'/>
<enum name='UIPressPhaseCancelled' value='4'/>
<enum name='UIPressPhaseChanged' value='1'/>
<enum name='UIPressPhaseEnded' value='3'/>
<enum name='UIPressPhaseStationary' value='2'/>
<enum name='UIPressTypeDownArrow' value='1'/>
<enum name='UIPressTypeLeftArrow' value='2'/>
<enum name='UIPressTypeMenu' value='5'/>
<enum name='UIPressTypePlayPause' value='6'/>
<enum name='UIPressTypeRightArrow' value='3'/>
<enum name='UIPressTypeSelect' value='4'/>
<enum name='UIPressTypeUpArrow' value='0'/>
<enum name='UIPreviewActionStyleDefault' value='0'/>
<enum name='UIPreviewActionStyleDestructive' value='2'/>
<enum name='UIPreviewActionStyleSelected' value='1'/>
<enum name='UIPrintInfoDuplexLongEdge' value='1'/>
<enum name='UIPrintInfoDuplexNone' value='0'/>
<enum name='UIPrintInfoDuplexShortEdge' value='2'/>
<enum name='UIPrintInfoOrientationLandscape' value='1'/>
<enum name='UIPrintInfoOrientationPortrait' value='0'/>
<enum name='UIPrintInfoOutputGeneral' value='0'/>
<enum name='UIPrintInfoOutputGrayscale' value='2'/>
<enum name='UIPrintInfoOutputPhoto' value='1'/>
<enum name='UIPrintInfoOutputPhotoGrayscale' value='3'/>
<enum name='UIPrintJobFailedError' value='4'/>
<enum name='UIPrintNoContentError' value='2'/>
<enum name='UIPrintUnknownImageFormatError' value='3'/>
<enum name='UIPrinterCutterBehaviorCutAfterEachCopy' value='3'/>
<enum name='UIPrinterCutterBehaviorCutAfterEachJob' value='4'/>
<enum name='UIPrinterCutterBehaviorCutAfterEachPage' value='2'/>
<enum name='UIPrinterCutterBehaviorNoCut' value='0'/>
<enum name='UIPrinterCutterBehaviorPrinterDefault' value='1'/>
<enum name='UIPrinterJobTypeDocument' value='1'/>
<enum name='UIPrinterJobTypeEnvelope' value='2'/>
<enum name='UIPrinterJobTypeLabel' value='4'/>
<enum name='UIPrinterJobTypeLargeFormat' value='64'/>
<enum name='UIPrinterJobTypePhoto' value='8'/>
<enum name='UIPrinterJobTypePostcard' value='128'/>
<enum name='UIPrinterJobTypeReceipt' value='16'/>
<enum name='UIPrinterJobTypeRoll' value='32'/>
<enum name='UIPrinterJobTypeUnknown' value='0'/>
<enum name='UIPrintingNotAvailableError' value='1'/>
<enum name='UIProgressViewStyleBar' value='1'/>
<enum name='UIProgressViewStyleDefault' value='0'/>
<enum name='UIPushBehaviorModeContinuous' value='0'/>
<enum name='UIPushBehaviorModeInstantaneous' value='1'/>
<enum name='UIRectCornerAllCorners' value='4294967295' value64='18446744073709551615'/>
<enum name='UIRectCornerBottomLeft' value='4'/>
<enum name='UIRectCornerBottomRight' value='8'/>
<enum name='UIRectCornerTopLeft' value='1'/>
<enum name='UIRectCornerTopRight' value='2'/>
<enum name='UIRectEdgeAll' value='15'/>
<enum name='UIRectEdgeBottom' value='4'/>
<enum name='UIRectEdgeLeft' value='2'/>
<enum name='UIRectEdgeNone' value='0'/>
<enum name='UIRectEdgeRight' value='8'/>
<enum name='UIRectEdgeTop' value='1'/>
<enum name='UIRemoteNotificationTypeAlert' value='4'/>
<enum name='UIRemoteNotificationTypeBadge' value='1'/>
<enum name='UIRemoteNotificationTypeNewsstandContentAvailability' value='8'/>
<enum name='UIRemoteNotificationTypeNone' value='0'/>
<enum name='UIRemoteNotificationTypeSound' value='2'/>
<enum name='UIReturnKeyContinue' value='11'/>
<enum name='UIReturnKeyDefault' value='0'/>
<enum name='UIReturnKeyDone' value='9'/>
<enum name='UIReturnKeyEmergencyCall' value='10'/>
<enum name='UIReturnKeyGo' value='1'/>
<enum name='UIReturnKeyGoogle' value='2'/>
<enum name='UIReturnKeyJoin' value='3'/>
<enum name='UIReturnKeyNext' value='4'/>
<enum name='UIReturnKeyRoute' value='5'/>
<enum name='UIReturnKeySearch' value='6'/>
<enum name='UIReturnKeySend' value='7'/>
<enum name='UIReturnKeyYahoo' value='8'/>
<enum name='UIScreenOverscanCompensationInsetApplicationFrame' value='2'/>
<enum name='UIScreenOverscanCompensationInsetBounds' value='1'/>
<enum name='UIScreenOverscanCompensationNone' value='2'/>
<enum name='UIScreenOverscanCompensationScale' value='0'/>
<enum name='UIScrollViewContentInsetAdjustmentAlways' value='3'/>
<enum name='UIScrollViewContentInsetAdjustmentAutomatic' value='0'/>
<enum name='UIScrollViewContentInsetAdjustmentNever' value='2'/>
<enum name='UIScrollViewContentInsetAdjustmentScrollableAxes' value='1'/>
<enum name='UIScrollViewIndexDisplayModeAlwaysHidden' value='1'/>
<enum name='UIScrollViewIndexDisplayModeAutomatic' value='0'/>
<enum name='UIScrollViewIndicatorStyleBlack' value='1'/>
<enum name='UIScrollViewIndicatorStyleDefault' value='0'/>
<enum name='UIScrollViewIndicatorStyleWhite' value='2'/>
<enum name='UIScrollViewKeyboardDismissModeInteractive' value='2'/>
<enum name='UIScrollViewKeyboardDismissModeNone' value='0'/>
<enum name='UIScrollViewKeyboardDismissModeOnDrag' value='1'/>
<enum name='UISearchBarIconBookmark' value='2'/>
<enum name='UISearchBarIconClear' value='1'/>
<enum name='UISearchBarIconResultsList' value='3'/>
<enum name='UISearchBarIconSearch' value='0'/>
<enum name='UISearchBarStyleDefault' value='0'/>
<enum name='UISearchBarStyleMinimal' value='2'/>
<enum name='UISearchBarStyleProminent' value='1'/>
<enum name='UISegmentedControlNoSegment' value='-1'/>
<enum name='UISegmentedControlSegmentAlone' value='4'/>
<enum name='UISegmentedControlSegmentAny' value='0'/>
<enum name='UISegmentedControlSegmentCenter' value='2'/>
<enum name='UISegmentedControlSegmentLeft' value='1'/>
<enum name='UISegmentedControlSegmentRight' value='3'/>
<enum name='UISegmentedControlStyleBar' value='2'/>
<enum name='UISegmentedControlStyleBezeled' value='3'/>
<enum name='UISegmentedControlStyleBordered' value='1'/>
<enum name='UISegmentedControlStylePlain' value='0'/>
<enum name='UISemanticContentAttributeForceLeftToRight' value='3'/>
<enum name='UISemanticContentAttributeForceRightToLeft' value='4'/>
<enum name='UISemanticContentAttributePlayback' value='1'/>
<enum name='UISemanticContentAttributeSpatial' value='2'/>
<enum name='UISemanticContentAttributeUnspecified' value='0'/>
<enum name='UISplitViewControllerDisplayModeAllVisible' value='2'/>
<enum name='UISplitViewControllerDisplayModeAutomatic' value='0'/>
<enum name='UISplitViewControllerDisplayModePrimaryHidden' value='1'/>
<enum name='UISplitViewControllerDisplayModePrimaryOverlay' value='3'/>
<enum name='UISplitViewControllerPrimaryEdgeLeading' value='0'/>
<enum name='UISplitViewControllerPrimaryEdgeTrailing' value='1'/>
<enum name='UISpringLoadedInteractionEffectStateActivated' value='3'/>
<enum name='UISpringLoadedInteractionEffectStateActivating' value='2'/>
<enum name='UISpringLoadedInteractionEffectStateInactive' value='0'/>
<enum name='UISpringLoadedInteractionEffectStatePossible' value='1'/>
<enum name='UIStackViewAlignmentBottom' value='4'/>
<enum name='UIStackViewAlignmentCenter' value='3'/>
<enum name='UIStackViewAlignmentFill' value='0'/>
<enum name='UIStackViewAlignmentFirstBaseline' value='2'/>
<enum name='UIStackViewAlignmentLastBaseline' value='5'/>
<enum name='UIStackViewAlignmentLeading' value='1'/>
<enum name='UIStackViewAlignmentTop' value='1'/>
<enum name='UIStackViewAlignmentTrailing' value='4'/>
<enum name='UIStackViewDistributionEqualCentering' value='4'/>
<enum name='UIStackViewDistributionEqualSpacing' value='3'/>
<enum name='UIStackViewDistributionFill' value='0'/>
<enum name='UIStackViewDistributionFillEqually' value='1'/>
<enum name='UIStackViewDistributionFillProportionally' value='2'/>
<enum name='UIStatusBarAnimationFade' value='1'/>
<enum name='UIStatusBarAnimationNone' value='0'/>
<enum name='UIStatusBarAnimationSlide' value='2'/>
<enum name='UIStatusBarStyleBlackOpaque' value='2'/>
<enum name='UIStatusBarStyleBlackTranslucent' value='1'/>
<enum name='UIStatusBarStyleDefault' value='0'/>
<enum name='UIStatusBarStyleLightContent' value='1'/>
<enum name='UISwipeGestureRecognizerDirectionDown' value='8'/>
<enum name='UISwipeGestureRecognizerDirectionLeft' value='2'/>
<enum name='UISwipeGestureRecognizerDirectionRight' value='1'/>
<enum name='UISwipeGestureRecognizerDirectionUp' value='4'/>
<enum name='UISystemAnimationDelete' value='0'/>
<enum name='UITabBarItemPositioningAutomatic' value='0'/>
<enum name='UITabBarItemPositioningCentered' value='2'/>
<enum name='UITabBarItemPositioningFill' value='1'/>
<enum name='UITabBarSystemItemBookmarks' value='7'/>
<enum name='UITabBarSystemItemContacts' value='5'/>
<enum name='UITabBarSystemItemDownloads' value='9'/>
<enum name='UITabBarSystemItemFavorites' value='1'/>
<enum name='UITabBarSystemItemFeatured' value='2'/>
<enum name='UITabBarSystemItemHistory' value='6'/>
<enum name='UITabBarSystemItemMore' value='0'/>
<enum name='UITabBarSystemItemMostRecent' value='10'/>
<enum name='UITabBarSystemItemMostViewed' value='11'/>
<enum name='UITabBarSystemItemRecents' value='4'/>
<enum name='UITabBarSystemItemSearch' value='8'/>
<enum name='UITabBarSystemItemTopRated' value='3'/>
<enum name='UITableViewCellAccessoryCheckmark' value='3'/>
<enum name='UITableViewCellAccessoryDetailButton' value='4'/>
<enum name='UITableViewCellAccessoryDetailDisclosureButton' value='2'/>
<enum name='UITableViewCellAccessoryDisclosureIndicator' value='1'/>
<enum name='UITableViewCellAccessoryNone' value='0'/>
<enum name='UITableViewCellDragStateDragging' value='2'/>
<enum name='UITableViewCellDragStateLifting' value='1'/>
<enum name='UITableViewCellDragStateNone' value='0'/>
<enum name='UITableViewCellEditingStyleDelete' value='1'/>
<enum name='UITableViewCellEditingStyleInsert' value='2'/>
<enum name='UITableViewCellEditingStyleNone' value='0'/>
<enum name='UITableViewCellFocusStyleCustom' value='1'/>
<enum name='UITableViewCellFocusStyleDefault' value='0'/>
<enum name='UITableViewCellSelectionStyleBlue' value='1'/>
<enum name='UITableViewCellSelectionStyleDefault' value='3'/>
<enum name='UITableViewCellSelectionStyleGray' value='2'/>
<enum name='UITableViewCellSelectionStyleNone' value='0'/>
<enum name='UITableViewCellSeparatorStyleNone' value='0'/>
<enum name='UITableViewCellSeparatorStyleSingleLine' value='1'/>
<enum name='UITableViewCellSeparatorStyleSingleLineEtched' value='2'/>
<enum name='UITableViewCellStateDefaultMask' value='0'/>
<enum name='UITableViewCellStateEditingMask' value='1'/>
<enum name='UITableViewCellStateShowingDeleteConfirmationMask' value='2'/>
<enum name='UITableViewCellStateShowingEditControlMask' value='1'/>
<enum name='UITableViewCellStyleDefault' value='0'/>
<enum name='UITableViewCellStyleSubtitle' value='3'/>
<enum name='UITableViewCellStyleValue1' value='1'/>
<enum name='UITableViewCellStyleValue2' value='2'/>
<enum name='UITableViewDropIntentAutomatic' value='3'/>
<enum name='UITableViewDropIntentInsertAtDestinationIndexPath' value='1'/>
<enum name='UITableViewDropIntentInsertIntoDestinationIndexPath' value='2'/>
<enum name='UITableViewDropIntentUnspecified' value='0'/>
<enum name='UITableViewRowActionStyleDefault' value='0'/>
<enum name='UITableViewRowActionStyleDestructive' value='0'/>
<enum name='UITableViewRowActionStyleNormal' value='1'/>
<enum name='UITableViewRowAnimationAutomatic' value='100'/>
<enum name='UITableViewRowAnimationBottom' value='4'/>
<enum name='UITableViewRowAnimationFade' value='0'/>
<enum name='UITableViewRowAnimationLeft' value='2'/>
<enum name='UITableViewRowAnimationMiddle' value='6'/>
<enum name='UITableViewRowAnimationNone' value='5'/>
<enum name='UITableViewRowAnimationRight' value='1'/>
<enum name='UITableViewRowAnimationTop' value='3'/>
<enum name='UITableViewScrollPositionBottom' value='3'/>
<enum name='UITableViewScrollPositionMiddle' value='2'/>
<enum name='UITableViewScrollPositionNone' value='0'/>
<enum name='UITableViewScrollPositionTop' value='1'/>
<enum name='UITableViewSeparatorInsetFromAutomaticInsets' value='1'/>
<enum name='UITableViewSeparatorInsetFromCellEdges' value='0'/>
<enum name='UITableViewStyleGrouped' value='1'/>
<enum name='UITableViewStylePlain' value='0'/>
<enum name='UITextAlignmentCenter' value='1'/>
<enum name='UITextAlignmentLeft' value='0'/>
<enum name='UITextAlignmentRight' value='2'/>
<enum name='UITextAutocapitalizationTypeAllCharacters' value='3'/>
<enum name='UITextAutocapitalizationTypeNone' value='0'/>
<enum name='UITextAutocapitalizationTypeSentences' value='2'/>
<enum name='UITextAutocapitalizationTypeWords' value='1'/>
<enum name='UITextAutocorrectionTypeDefault' value='0'/>
<enum name='UITextAutocorrectionTypeNo' value='1'/>
<enum name='UITextAutocorrectionTypeYes' value='2'/>
<enum name='UITextBorderStyleBezel' value='2'/>
<enum name='UITextBorderStyleLine' value='1'/>
<enum name='UITextBorderStyleNone' value='0'/>
<enum name='UITextBorderStyleRoundedRect' value='3'/>
<enum name='UITextDragOptionStripTextColorFromPreviews' value='1'/>
<enum name='UITextDragOptionsNone' value='0'/>
<enum name='UITextDropActionInsert' value='0'/>
<enum name='UITextDropActionReplaceAll' value='2'/>
<enum name='UITextDropActionReplaceSelection' value='1'/>
<enum name='UITextDropEditabilityNo' value='0'/>
<enum name='UITextDropEditabilityTemporary' value='1'/>
<enum name='UITextDropEditabilityYes' value='2'/>
<enum name='UITextDropPerformerDelegate' value='1'/>
<enum name='UITextDropPerformerView' value='0'/>
<enum name='UITextDropProgressModeCustom' value='1'/>
<enum name='UITextDropProgressModeSystem' value='0'/>
<enum name='UITextFieldDidEndEditingReasonCancelled' value='1'/>
<enum name='UITextFieldDidEndEditingReasonCommitted' value='0'/>
<enum name='UITextFieldViewModeAlways' value='3'/>
<enum name='UITextFieldViewModeNever' value='0'/>
<enum name='UITextFieldViewModeUnlessEditing' value='2'/>
<enum name='UITextFieldViewModeWhileEditing' value='1'/>
<enum name='UITextGranularityCharacter' value='0'/>
<enum name='UITextGranularityDocument' value='5'/>
<enum name='UITextGranularityLine' value='4'/>
<enum name='UITextGranularityParagraph' value='3'/>
<enum name='UITextGranularitySentence' value='2'/>
<enum name='UITextGranularityWord' value='1'/>
<enum name='UITextItemInteractionInvokeDefaultAction' value='0'/>
<enum name='UITextItemInteractionPresentActions' value='1'/>
<enum name='UITextItemInteractionPreview' value='2'/>
<enum name='UITextLayoutDirectionDown' value='5'/>
<enum name='UITextLayoutDirectionLeft' value='3'/>
<enum name='UITextLayoutDirectionRight' value='2'/>
<enum name='UITextLayoutDirectionUp' value='4'/>
<enum name='UITextSmartDashesTypeDefault' value='0'/>
<enum name='UITextSmartDashesTypeNo' value='1'/>
<enum name='UITextSmartDashesTypeYes' value='2'/>
<enum name='UITextSmartInsertDeleteTypeDefault' value='0'/>
<enum name='UITextSmartInsertDeleteTypeNo' value='1'/>
<enum name='UITextSmartInsertDeleteTypeYes' value='2'/>
<enum name='UITextSmartQuotesTypeDefault' value='0'/>
<enum name='UITextSmartQuotesTypeNo' value='1'/>
<enum name='UITextSmartQuotesTypeYes' value='2'/>
<enum name='UITextSpellCheckingTypeDefault' value='0'/>
<enum name='UITextSpellCheckingTypeNo' value='1'/>
<enum name='UITextSpellCheckingTypeYes' value='2'/>
<enum name='UITextStorageDirectionBackward' value='1'/>
<enum name='UITextStorageDirectionForward' value='0'/>
<enum name='UITextWritingDirectionLeftToRight' value='0'/>
<enum name='UITextWritingDirectionNatural' value='-1'/>
<enum name='UITextWritingDirectionRightToLeft' value='1'/>
<enum name='UITimingCurveTypeBuiltin' value='0'/>
<enum name='UITimingCurveTypeComposed' value='3'/>
<enum name='UITimingCurveTypeCubic' value='1'/>
<enum name='UITimingCurveTypeSpring' value='2'/>
<enum name='UIToolbarPositionAny' value='0'/>
<enum name='UIToolbarPositionBottom' value='1'/>
<enum name='UIToolbarPositionTop' value='2'/>
<enum name='UITouchPhaseBegan' value='0'/>
<enum name='UITouchPhaseCancelled' value='4'/>
<enum name='UITouchPhaseEnded' value='3'/>
<enum name='UITouchPhaseMoved' value='1'/>
<enum name='UITouchPhaseStationary' value='2'/>
<enum name='UITouchPropertyAltitude' value='4'/>
<enum name='UITouchPropertyAzimuth' value='2'/>
<enum name='UITouchPropertyForce' value='1'/>
<enum name='UITouchPropertyLocation' value='8'/>
<enum name='UITouchTypeDirect' value='0'/>
<enum name='UITouchTypeIndirect' value='1'/>
<enum name='UITouchTypePencil' value='2'/>
<enum name='UITouchTypeStylus' value='2'/>
<enum name='UITraitEnvironmentLayoutDirectionLeftToRight' value='0'/>
<enum name='UITraitEnvironmentLayoutDirectionRightToLeft' value='1'/>
<enum name='UITraitEnvironmentLayoutDirectionUnspecified' value='-1'/>
<enum name='UIUserInterfaceIdiomCarPlay' value='3'/>
<enum name='UIUserInterfaceIdiomPad' value='1'/>
<enum name='UIUserInterfaceIdiomPhone' value='0'/>
<enum name='UIUserInterfaceIdiomTV' value='2'/>
<enum name='UIUserInterfaceIdiomUnspecified' value='-1'/>
<enum name='UIUserInterfaceLayoutDirectionLeftToRight' value='0'/>
<enum name='UIUserInterfaceLayoutDirectionRightToLeft' value='1'/>
<enum name='UIUserInterfaceSizeClassCompact' value='1'/>
<enum name='UIUserInterfaceSizeClassRegular' value='2'/>
<enum name='UIUserInterfaceSizeClassUnspecified' value='0'/>
<enum name='UIUserInterfaceStyleDark' value='2'/>
<enum name='UIUserInterfaceStyleLight' value='1'/>
<enum name='UIUserInterfaceStyleUnspecified' value='0'/>
<enum name='UIUserNotificationActionBehaviorDefault' value='0'/>
<enum name='UIUserNotificationActionBehaviorTextInput' value='1'/>
<enum name='UIUserNotificationActionContextDefault' value='0'/>
<enum name='UIUserNotificationActionContextMinimal' value='1'/>
<enum name='UIUserNotificationActivationModeBackground' value='1'/>
<enum name='UIUserNotificationActivationModeForeground' value='0'/>
<enum name='UIUserNotificationTypeAlert' value='4'/>
<enum name='UIUserNotificationTypeBadge' value='1'/>
<enum name='UIUserNotificationTypeNone' value='0'/>
<enum name='UIUserNotificationTypeSound' value='2'/>
<enum name='UIViewAnimatingPositionCurrent' value='2'/>
<enum name='UIViewAnimatingPositionEnd' value='0'/>
<enum name='UIViewAnimatingPositionStart' value='1'/>
<enum name='UIViewAnimatingStateActive' value='1'/>
<enum name='UIViewAnimatingStateInactive' value='0'/>
<enum name='UIViewAnimatingStateStopped' value='2'/>
<enum name='UIViewAnimationCurveEaseIn' value='1'/>
<enum name='UIViewAnimationCurveEaseInOut' value='0'/>
<enum name='UIViewAnimationCurveEaseOut' value='2'/>
<enum name='UIViewAnimationCurveLinear' value='3'/>
<enum name='UIViewAnimationOptionAllowAnimatedContent' value='128'/>
<enum name='UIViewAnimationOptionAllowUserInteraction' value='2'/>
<enum name='UIViewAnimationOptionAutoreverse' value='16'/>
<enum name='UIViewAnimationOptionBeginFromCurrentState' value='4'/>
<enum name='UIViewAnimationOptionCurveEaseIn' value='65536'/>
<enum name='UIViewAnimationOptionCurveEaseInOut' value='0'/>
<enum name='UIViewAnimationOptionCurveEaseOut' value='131072'/>
<enum name='UIViewAnimationOptionCurveLinear' value='196608'/>
<enum name='UIViewAnimationOptionLayoutSubviews' value='1'/>
<enum name='UIViewAnimationOptionOverrideInheritedCurve' value='64'/>
<enum name='UIViewAnimationOptionOverrideInheritedDuration' value='32'/>
<enum name='UIViewAnimationOptionOverrideInheritedOptions' value='512'/>
<enum name='UIViewAnimationOptionPreferredFramesPerSecond30' value='117440512'/>
<enum name='UIViewAnimationOptionPreferredFramesPerSecond60' value='50331648'/>
<enum name='UIViewAnimationOptionPreferredFramesPerSecondDefault' value='0'/>
<enum name='UIViewAnimationOptionRepeat' value='8'/>
<enum name='UIViewAnimationOptionShowHideTransitionViews' value='256'/>
<enum name='UIViewAnimationOptionTransitionCrossDissolve' value='5242880'/>
<enum name='UIViewAnimationOptionTransitionCurlDown' value='4194304'/>
<enum name='UIViewAnimationOptionTransitionCurlUp' value='3145728'/>
<enum name='UIViewAnimationOptionTransitionFlipFromBottom' value='7340032'/>
<enum name='UIViewAnimationOptionTransitionFlipFromLeft' value='1048576'/>
<enum name='UIViewAnimationOptionTransitionFlipFromRight' value='2097152'/>
<enum name='UIViewAnimationOptionTransitionFlipFromTop' value='6291456'/>
<enum name='UIViewAnimationOptionTransitionNone' value='0'/>
<enum name='UIViewAnimationTransitionCurlDown' value='4'/>
<enum name='UIViewAnimationTransitionCurlUp' value='3'/>
<enum name='UIViewAnimationTransitionFlipFromLeft' value='1'/>
<enum name='UIViewAnimationTransitionFlipFromRight' value='2'/>
<enum name='UIViewAnimationTransitionNone' value='0'/>
<enum name='UIViewAutoresizingFlexibleBottomMargin' value='32'/>
<enum name='UIViewAutoresizingFlexibleHeight' value='16'/>
<enum name='UIViewAutoresizingFlexibleLeftMargin' value='1'/>
<enum name='UIViewAutoresizingFlexibleRightMargin' value='4'/>
<enum name='UIViewAutoresizingFlexibleTopMargin' value='8'/>
<enum name='UIViewAutoresizingFlexibleWidth' value='2'/>
<enum name='UIViewAutoresizingNone' value='0'/>
<enum name='UIViewContentModeBottom' value='6'/>
<enum name='UIViewContentModeBottomLeft' value='11'/>
<enum name='UIViewContentModeBottomRight' value='12'/>
<enum name='UIViewContentModeCenter' value='4'/>
<enum name='UIViewContentModeLeft' value='7'/>
<enum name='UIViewContentModeRedraw' value='3'/>
<enum name='UIViewContentModeRight' value='8'/>
<enum name='UIViewContentModeScaleAspectFill' value='2'/>
<enum name='UIViewContentModeScaleAspectFit' value='1'/>
<enum name='UIViewContentModeScaleToFill' value='0'/>
<enum name='UIViewContentModeTop' value='5'/>
<enum name='UIViewContentModeTopLeft' value='9'/>
<enum name='UIViewContentModeTopRight' value='10'/>
<enum name='UIViewKeyframeAnimationOptionAllowUserInteraction' value='2'/>
<enum name='UIViewKeyframeAnimationOptionAutoreverse' value='16'/>
<enum name='UIViewKeyframeAnimationOptionBeginFromCurrentState' value='4'/>
<enum name='UIViewKeyframeAnimationOptionCalculationModeCubic' value='3072'/>
<enum name='UIViewKeyframeAnimationOptionCalculationModeCubicPaced' value='4096'/>
<enum name='UIViewKeyframeAnimationOptionCalculationModeDiscrete' value='1024'/>
<enum name='UIViewKeyframeAnimationOptionCalculationModeLinear' value='0'/>
<enum name='UIViewKeyframeAnimationOptionCalculationModePaced' value='2048'/>
<enum name='UIViewKeyframeAnimationOptionLayoutSubviews' value='1'/>
<enum name='UIViewKeyframeAnimationOptionOverrideInheritedDuration' value='32'/>
<enum name='UIViewKeyframeAnimationOptionOverrideInheritedOptions' value='512'/>
<enum name='UIViewKeyframeAnimationOptionRepeat' value='8'/>
<enum name='UIViewTintAdjustmentModeAutomatic' value='0'/>
<enum name='UIViewTintAdjustmentModeDimmed' value='2'/>
<enum name='UIViewTintAdjustmentModeNormal' value='1'/>
<enum name='UIWebPaginationBreakingModeColumn' value='1'/>
<enum name='UIWebPaginationBreakingModePage' value='0'/>
<enum name='UIWebPaginationModeBottomToTop' value='3'/>
<enum name='UIWebPaginationModeLeftToRight' value='1'/>
<enum name='UIWebPaginationModeRightToLeft' value='4'/>
<enum name='UIWebPaginationModeTopToBottom' value='2'/>
<enum name='UIWebPaginationModeUnpaginated' value='0'/>
<enum name='UIWebViewNavigationTypeBackForward' value='2'/>
<enum name='UIWebViewNavigationTypeFormResubmitted' value='4'/>
<enum name='UIWebViewNavigationTypeFormSubmitted' value='1'/>
<enum name='UIWebViewNavigationTypeLinkClicked' value='0'/>
<enum name='UIWebViewNavigationTypeOther' value='5'/>
<enum name='UIWebViewNavigationTypeReload' value='3'/>
<function name='CGAffineTransformFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGPointFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGRectFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGSizeFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='CGVectorFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</function>
<function inline='true' name='NSDirectionalEdgeInsetsEqualToDirectionalEdgeInsets'>
<arg declared_type='NSDirectionalEdgeInsets' name='insets1' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
<arg declared_type='NSDirectionalEdgeInsets' name='insets2' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSDirectionalEdgeInsetsFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
</function>
<function inline='true' name='NSDirectionalEdgeInsetsMake'>
<arg declared_type='CGFloat' name='top' type='f' type64='d'/>
<arg declared_type='CGFloat' name='leading' type='f' type64='d'/>
<arg declared_type='CGFloat' name='bottom' type='f' type64='d'/>
<arg declared_type='CGFloat' name='trailing' type='f' type64='d'/>
<retval declared_type='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
</function>
<function name='NSStringFromCGAffineTransform'>
<arg declared_type='CGAffineTransform' name='transform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromCGPoint'>
<arg declared_type='CGPoint' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromCGRect'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromCGSize'>
<arg declared_type='CGSize' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromCGVector'>
<arg declared_type='CGVector' name='vector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromDirectionalEdgeInsets'>
<arg declared_type='NSDirectionalEdgeInsets' name='insets' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromUIEdgeInsets'>
<arg declared_type='UIEdgeInsets' name='insets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromUIOffset'>
<arg declared_type='UIOffset' name='offset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSTextAlignmentFromCTTextAlignment'>
<arg declared_type='CTTextAlignment' name='ctTextAlignment' type='C'/>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</function>
<function name='NSTextAlignmentToCTTextAlignment'>
<arg declared_type='NSTextAlignment' name='nsTextAlignment' type='i' type64='q'/>
<retval declared_type='CTTextAlignment' type='C'/>
</function>
<function name='UIAccessibilityConvertFrameToScreenCoordinates'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull' name='view' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='UIAccessibilityConvertPathToScreenCoordinates'>
<arg declared_type='UIBezierPath * _Nonnull' name='path' type='@'/>
<arg declared_type='UIView * _Nonnull' name='view' type='@'/>
<retval declared_type='UIBezierPath * _Nonnull' type='@'/>
</function>
<function name='UIAccessibilityDarkerSystemColorsEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityFocusedElement'>
<arg declared_type='UIAccessibilityAssistiveTechnologyIdentifier _Nullable' name='assistiveTechnologyIdentifier' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</function>
<function name='UIAccessibilityHearingDevicePairedEar'>
<retval declared_type='UIAccessibilityHearingDeviceEar' type='I' type64='Q'/>
</function>
<function name='UIAccessibilityIsAssistiveTouchRunning'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsBoldTextEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsClosedCaptioningEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsGrayscaleEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsGuidedAccessEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsInvertColorsEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsMonoAudioEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsReduceMotionEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsReduceTransparencyEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsShakeToUndoEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsSpeakScreenEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsSpeakSelectionEnabled'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsSwitchControlRunning'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityIsVoiceOverRunning'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIAccessibilityPostNotification'>
<arg declared_type='UIAccessibilityNotifications' name='notification' type='I'/>
<arg declared_type='id _Nullable' name='argument' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIAccessibilityRegisterGestureConflictWithZoom'>
<retval declared_type='void' type='v'/>
</function>
<function name='UIAccessibilityRequestGuidedAccessSession'>
<arg declared_type='BOOL' name='enable' type='B'/>
<arg declared_type='void (^ _Nonnull)(BOOL)' function_pointer='true' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='UIAccessibilityZoomFocusChanged'>
<arg declared_type='UIAccessibilityZoomType' name='type' type='i' type64='q'/>
<arg declared_type='CGRect' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIApplicationMain'>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='char * _Nullable*' name='argv' type='^*'/>
<arg declared_type='NSString * _Nullable' name='principalClassName' type='@'/>
<arg declared_type='NSString * _Nullable' name='delegateClassName' type='@'/>
<retval declared_type='int' type='i'/>
</function>
<function name='UIContentSizeCategoryCompareToCategory'>
<arg declared_type='UIContentSizeCategory _Nonnull' name='lhs' type='@'/>
<arg declared_type='UIContentSizeCategory _Nonnull' name='rhs' type='@'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</function>
<function name='UIContentSizeCategoryIsAccessibilityCategory'>
<arg declared_type='UIContentSizeCategory _Nonnull' name='category' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='UIDeviceOrientationIsFlat'>
<arg declared_type='UIDeviceOrientation' name='orientation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='UIDeviceOrientationIsLandscape'>
<arg declared_type='UIDeviceOrientation' name='orientation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='UIDeviceOrientationIsPortrait'>
<arg declared_type='UIDeviceOrientation' name='orientation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='UIDeviceOrientationIsValidInterfaceOrientation'>
<arg declared_type='UIDeviceOrientation' name='orientation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='UIEdgeInsetsEqualToEdgeInsets'>
<arg declared_type='UIEdgeInsets' name='insets1' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<arg declared_type='UIEdgeInsets' name='insets2' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIEdgeInsetsFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</function>
<function inline='true' name='UIEdgeInsetsInsetRect'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIEdgeInsets' name='insets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function inline='true' name='UIEdgeInsetsMake'>
<arg declared_type='CGFloat' name='top' type='f' type64='d'/>
<arg declared_type='CGFloat' name='left' type='f' type64='d'/>
<arg declared_type='CGFloat' name='bottom' type='f' type64='d'/>
<arg declared_type='CGFloat' name='right' type='f' type64='d'/>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</function>
<function name='UIFloatRangeIsEqualToRange'>
<arg declared_type='UIFloatRange' name='range' type='{_UIFloatRange=ff}' type64='{_UIFloatRange=dd}'/>
<arg declared_type='UIFloatRange' name='otherRange' type='{_UIFloatRange=ff}' type64='{_UIFloatRange=dd}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIFloatRangeIsInfinite'>
<arg declared_type='UIFloatRange' name='range' type='{_UIFloatRange=ff}' type64='{_UIFloatRange=dd}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='UIFloatRangeMake'>
<arg declared_type='CGFloat' name='minimum' type='f' type64='d'/>
<arg declared_type='CGFloat' name='maximum' type='f' type64='d'/>
<retval declared_type='UIFloatRange' type='{_UIFloatRange=ff}' type64='{_UIFloatRange=dd}'/>
</function>
<function name='UIGraphicsAddPDFContextDestinationAtPoint'>
<arg declared_type='NSString * _Nonnull' name='name' type='@'/>
<arg declared_type='CGPoint' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsBeginImageContext'>
<arg declared_type='CGSize' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsBeginImageContextWithOptions'>
<arg declared_type='CGSize' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='BOOL' name='opaque' type='B'/>
<arg declared_type='CGFloat' name='scale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsBeginPDFContextToData'>
<arg declared_type='NSMutableData * _Nonnull' name='data' type='@'/>
<arg declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSDictionary * _Nullable' name='documentInfo' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsBeginPDFContextToFile'>
<arg declared_type='NSString * _Nonnull' name='path' type='@'/>
<arg declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSDictionary * _Nullable' name='documentInfo' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIGraphicsBeginPDFPage'>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsBeginPDFPageWithInfo'>
<arg declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSDictionary * _Nullable' name='pageInfo' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsEndImageContext'>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsEndPDFContext'>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsGetCurrentContext'>
<retval declared_type='CGContextRef _Nullable' type='^{CGContext=}'/>
</function>
<function name='UIGraphicsGetImageFromCurrentImageContext'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</function>
<function name='UIGraphicsGetPDFContextBounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='UIGraphicsPopContext'>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsPushContext'>
<arg declared_type='CGContextRef _Nonnull' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsSetPDFContextDestinationForRect'>
<arg declared_type='NSString * _Nonnull' name='name' type='@'/>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsSetPDFContextURLForRect'>
<arg declared_type='NSURL * _Nonnull' name='url' type='@'/>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGuidedAccessRestrictionStateForIdentifier'>
<arg declared_type='NSString * _Nonnull' name='restrictionIdentifier' type='@'/>
<retval declared_type='UIGuidedAccessRestrictionState' type='i' type64='q'/>
</function>
<function name='UIImageJPEGRepresentation'>
<arg declared_type='UIImage * _Nonnull' name='image' type='@'/>
<arg declared_type='CGFloat' name='compressionQuality' type='f' type64='d'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</function>
<function name='UIImagePNGRepresentation'>
<arg declared_type='UIImage * _Nonnull' name='image' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</function>
<function name='UIImageWriteToSavedPhotosAlbum'>
<arg declared_type='UIImage * _Nonnull' name='image' type='@'/>
<arg declared_type='id _Nullable' name='completionTarget' type='@'/>
<arg declared_type='SEL _Nullable' name='completionSelector' type=':'/>
<arg declared_type='void * _Nullable' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function inline='true' name='UIInterfaceOrientationIsLandscape'>
<arg declared_type='UIInterfaceOrientation' name='orientation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='UIInterfaceOrientationIsPortrait'>
<arg declared_type='UIInterfaceOrientation' name='orientation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='UIOffsetEqualToOffset'>
<arg declared_type='UIOffset' name='offset1' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<arg declared_type='UIOffset' name='offset2' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIOffsetFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</function>
<function inline='true' name='UIOffsetMake'>
<arg declared_type='CGFloat' name='horizontal' type='f' type64='d'/>
<arg declared_type='CGFloat' name='vertical' type='f' type64='d'/>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</function>
<function name='UIRectClip'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIRectFill'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIRectFillUsingBlendMode'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGBlendMode' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIRectFrame'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIRectFrameUsingBlendMode'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGBlendMode' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UISaveVideoAtPathToSavedPhotosAlbum'>
<arg declared_type='NSString * _Nonnull' name='videoPath' type='@'/>
<arg declared_type='id _Nullable' name='completionTarget' type='@'/>
<arg declared_type='SEL _Nullable' name='completionSelector' type=':'/>
<arg declared_type='void * _Nullable' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIVideoAtPathIsCompatibleWithSavedPhotosAlbum'>
<arg declared_type='NSString * _Nonnull' name='videoPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='UI_USER_INTERFACE_IDIOM'>
<retval declared_type='UIUserInterfaceIdiom' type='i' type64='q'/>
</function>
<class name='CIColor'>
<method selector='initWithColor:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='color' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='CIImage'>
<method selector='initWithImage:'>
<arg declared_type='UIImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithImage:options:'>
<arg declared_type='UIImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
</class>
<class name='NSAttributedString'>
<method class_method='true' selector='attributedStringWithAttachment:'>
<arg declared_type='NSTextAttachment * _Nonnull' index='0' name='attachment' type='@'/>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='boundingRectWithSize:options:context:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='2' name='context' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='containsAttachmentsInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataFromRange:documentAttributes:error:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='dict' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='drawAtPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithRect:options:context:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='2' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fileWrapperFromRange:documentAttributes:error:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='dict' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='NSFileWrapper * _Nullable' type='@'/>
</method>
<method selector='initWithData:options:documentAttributes:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFileURL:options:documentAttributes:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithURL:options:documentAttributes:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSBundle'>
<method selector='loadNibNamed:owner:options:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='id _Nullable' index='1' name='owner' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='options' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeCGAffineTransformForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='decodeCGPointForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='decodeCGRectForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='decodeCGSizeForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='decodeCGVectorForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</method>
<method selector='decodeDirectionalEdgeInsetsForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
</method>
<method selector='decodeUIEdgeInsetsForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='decodeUIOffsetForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</method>
<method selector='encodeCGAffineTransform:forKey:'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCGPoint:forKey:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCGRect:forKey:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCGSize:forKey:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCGVector:forKey:'>
<arg declared_type='CGVector' index='0' name='vector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeDirectionalEdgeInsets:forKey:'>
<arg declared_type='NSDirectionalEdgeInsets' index='0' name='insets' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeUIEdgeInsets:forKey:'>
<arg declared_type='UIEdgeInsets' index='0' name='insets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeUIOffset:forKey:'>
<arg declared_type='UIOffset' index='0' name='offset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSDataAsset'>
<method selector='data'>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='initWithName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithName:bundle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nonnull' index='1' name='bundle' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='typeIdentifier'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSIndexPath'>
<method class_method='true' selector='indexPathForItem:inSection:'>
<arg declared_type='NSInteger' index='0' name='item' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='indexPathForRow:inSection:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='item'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='row'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='section'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSItemProvider'>
<method selector='preferredPresentationSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='preferredPresentationStyle'>
<retval declared_type='UIPreferredPresentationStyle' type='i' type64='q'/>
</method>
<method selector='setPreferredPresentationSize:'>
<arg declared_type='CGSize' index='0' name='preferredPresentationSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredPresentationStyle:'>
<arg declared_type='UIPreferredPresentationStyle' index='0' name='preferredPresentationStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTeamData:'>
<arg declared_type='NSData * _Nullable' index='0' name='teamData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='teamData'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
</class>
<class name='NSLayoutAnchor'>
<method selector='constraintEqualToAnchor:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintEqualToAnchor:constant:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:constant:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:constant:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
</class>
<class name='NSLayoutConstraint'>
<method class_method='true' selector='activateConstraints:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='constraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='constant'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:'>
<arg declared_type='id _Nonnull' index='0' name='view1' type='@'/>
<arg declared_type='NSLayoutAttribute' index='1' name='attr1' type='i' type64='q'/>
<arg declared_type='NSLayoutRelation' index='2' name='relation' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='3' name='view2' type='@'/>
<arg declared_type='NSLayoutAttribute' index='4' name='attr2' type='i' type64='q'/>
<arg declared_type='CGFloat' index='5' name='multiplier' type='f' type64='d'/>
<arg declared_type='CGFloat' index='6' name='c' type='f' type64='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='constraintsWithVisualFormat:options:metrics:views:'>
<arg declared_type='NSString * _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='NSLayoutFormatOptions' index='1' name='opts' type='I' type64='Q'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='metrics' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='views' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='deactivateConstraints:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='constraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstAnchor'>
<retval declared_type='NSLayoutAnchor * _Nonnull' type='@'/>
</method>
<method selector='firstAttribute'>
<retval declared_type='NSLayoutAttribute' type='i' type64='q'/>
</method>
<method selector='firstItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='multiplier'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='priority'>
<retval declared_type='UILayoutPriority' type='f'/>
</method>
<method selector='relation'>
<retval declared_type='NSLayoutRelation' type='i' type64='q'/>
</method>
<method selector='secondAnchor'>
<retval declared_type='NSLayoutAnchor * _Nullable' type='@'/>
</method>
<method selector='secondAttribute'>
<retval declared_type='NSLayoutAttribute' type='i' type64='q'/>
</method>
<method selector='secondItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setActive:'>
<arg declared_type='BOOL' index='0' name='active' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConstant:'>
<arg declared_type='CGFloat' index='0' name='constant' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPriority:'>
<arg declared_type='UILayoutPriority' index='0' name='priority' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldBeArchived:'>
<arg declared_type='BOOL' index='0' name='shouldBeArchived' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldBeArchived'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSLayoutDimension'>
<method selector='constraintEqualToAnchor:multiplier:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintEqualToAnchor:multiplier:constant:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintEqualToConstant:'>
<arg declared_type='CGFloat' index='0' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:multiplier:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:multiplier:constant:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToConstant:'>
<arg declared_type='CGFloat' index='0' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:multiplier:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:multiplier:constant:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToConstant:'>
<arg declared_type='CGFloat' index='0' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
</class>
<class name='NSLayoutManager'>
<method selector='CGGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='CGGlyph' type='S'/>
</method>
<method selector='CGGlyphAtIndex:isValidIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='BOOL * _Nullable' index='1' name='isValidIndex' type='^B'/>
<retval declared_type='CGGlyph' type='S'/>
</method>
<method selector='addTextContainer:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowsNonContiguousLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attachmentSizeForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='boundingRectForGlyphRange:inTextContainer:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='characterIndexForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='partialFraction' type='^f' type64='^d'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='characterRangeForGlyphRange:actualGlyphRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='drawBackgroundForGlyphRange:atPoint:'>
<arg declared_type='NSRange' index='0' name='glyphsToShow' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='CGPoint' index='1' name='origin' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawGlyphsForGlyphRange:atPoint:'>
<arg declared_type='NSRange' index='0' name='glyphsToShow' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='CGPoint' index='1' name='origin' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSUnderlineStyle' index='1' name='strikethroughVal' type='i' type64='q'/>
<arg declared_type='CGFloat' index='2' name='baselineOffset' type='f' type64='d'/>
<arg declared_type='CGRect' index='3' name='lineRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='4' name='lineGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='CGPoint' index='5' name='containerOrigin' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSUnderlineStyle' index='1' name='underlineVal' type='i' type64='q'/>
<arg declared_type='CGFloat' index='2' name='baselineOffset' type='f' type64='d'/>
<arg declared_type='CGRect' index='3' name='lineRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='4' name='lineGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='CGPoint' index='5' name='containerOrigin' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawsOutsideLineFragmentForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ensureGlyphsForCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ensureGlyphsForGlyphRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ensureLayoutForBoundingRect:inTextContainer:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ensureLayoutForCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ensureLayoutForGlyphRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ensureLayoutForTextContainer:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='1' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='textContainer' type='@'/>
<arg declared_type='void (^ _Nonnull)(CGRect, BOOL * _Nonnull)' function_pointer='true' index='3' name='block' type='@?'>
<arg declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enumerateLineFragmentsForGlyphRange:usingBlock:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='void (^ _Nonnull)(CGRect, CGRect, NSTextContainer * _Nonnull, NSRange, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' type='@'/>
<arg declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='extraLineFragmentRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='extraLineFragmentTextContainer'>
<retval declared_type='NSTextContainer * _Nullable' type='@'/>
</method>
<method selector='extraLineFragmentUsedRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='fillBackgroundRectArray:count:forCharacterRange:color:'>
<arg const='true' declared_type='CGRect * _Nonnull' index='0' name='rectArray' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSUInteger' index='1' name='rectCount' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='UIColor * _Nonnull' index='3' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstUnlaidCharacterIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='firstUnlaidGlyphIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='fractionOfDistanceThroughGlyphForPoint:inTextContainer:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='getFirstUnlaidCharacterIndex:glyphIndex:'>
<arg declared_type='NSUInteger * _Nullable' index='0' name='charIndex' type='^I' type64='^Q'/>
<arg declared_type='NSUInteger * _Nullable' index='1' name='glyphIndex' type='^I' type64='^Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='CGGlyph * _Nullable' index='1' name='glyphBuffer' type='^S'/>
<arg declared_type='NSGlyphProperty * _Nullable' index='2' name='props' type='^i' type64='^q'/>
<arg declared_type='NSUInteger * _Nullable' index='3' name='charIndexBuffer' type='^I' type64='^Q'/>
<arg declared_type='unsigned char * _Nullable' index='4' name='bidiLevelBuffer' type='*'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<arg declared_type='BOOL' index='1' name='aFlag' type='B'/>
<arg declared_type='BOOL' index='2' name='dFlag' type='B'/>
<arg declared_type='CGFloat * _Nullable' index='3' name='positions' type='^f' type64='^d'/>
<arg declared_type='NSUInteger * _Nullable' index='4' name='charIndexes' type='^I' type64='^Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='glyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='CGGlyph' type='S'/>
</method>
<method selector='glyphAtIndex:isValidIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='BOOL * _Nullable' index='1' name='isValidIndex' type='^B'/>
<retval declared_type='CGGlyph' type='S'/>
</method>
<method selector='glyphIndexForCharacterAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='glyphIndexForPoint:inTextContainer:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='partialFraction' type='^f' type64='^d'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='glyphRangeForBoundingRect:inTextContainer:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualCharRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForTextContainer:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='hasNonContiguousLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='insertTextContainer:atIndex:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateDisplayForCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateDisplayForGlyphRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='1' name='delta' type='i' type64='q'/>
<arg declared_type='NSRangePointer _Nullable' index='2' name='actualCharRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateLayoutForCharacterRange:actualCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualCharRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isValidGlyphIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='limitsLayoutForSuspiciousContents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='locationForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='notShownAttributeForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='numberOfGlyphs'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='textStorage' type='@'/>
<arg declared_type='NSTextStorageEditActions' index='1' name='editMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='newCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='3' name='delta' type='i' type64='q'/>
<arg declared_type='NSRange' index='4' name='invalidatedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='propertyForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSGlyphProperty' type='i' type64='q'/>
</method>
<method selector='rangeOfNominallySpacedGlyphsContainingIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='removeTextContainerAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsNonContiguousLayout:'>
<arg declared_type='BOOL' index='0' name='allowsNonContiguousLayout' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttachmentSize:forGlyphRange:'>
<arg declared_type='CGSize' index='0' name='attachmentSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphAtIndex:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExtraLineFragmentRect:usedRect:textContainer:'>
<arg declared_type='CGRect' index='0' name='fragmentRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGRect' index='1' name='usedRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGlyphs:properties:characterIndexes:font:forGlyphRange:'>
<arg const='true' declared_type='CGGlyph * _Nonnull' index='0' name='glyphs' type='^S'/>
<arg const='true' declared_type='NSGlyphProperty * _Nonnull' index='1' name='props' type='^i' type64='^q'/>
<arg const='true' declared_type='NSUInteger * _Nonnull' index='2' name='charIndexes' type='^I' type64='^Q'/>
<arg declared_type='UIFont * _Nonnull' index='3' name='aFont' type='@'/>
<arg declared_type='NSRange' index='4' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type='CGFloat' index='0' name='hyphenationFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLimitsLayoutForSuspiciousContents:'>
<arg declared_type='BOOL' index='0' name='limitsLayoutForSuspiciousContents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineFragmentRect:forGlyphRange:usedRect:'>
<arg declared_type='CGRect' index='0' name='fragmentRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='CGRect' index='2' name='usedRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocation:forStartOfGlyphRange:'>
<arg declared_type='CGPoint' index='0' name='location' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotShownAttribute:forGlyphAtIndex:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsControlCharacters:'>
<arg declared_type='BOOL' index='0' name='showsControlCharacters' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsInvisibleCharacters:'>
<arg declared_type='BOOL' index='0' name='showsInvisibleCharacters' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextContainer:forGlyphRange:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextStorage:'>
<arg declared_type='NSTextStorage * _Nullable' index='0' name='textStorage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesFontLeading:'>
<arg declared_type='BOOL' index='0' name='usesFontLeading' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showCGGlyphs:positions:count:font:matrix:attributes:inContext:'>
<arg const='true' declared_type='CGGlyph * _Nonnull' index='0' name='glyphs' type='^S'/>
<arg const='true' declared_type='CGPoint * _Nonnull' index='1' name='positions' type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='2' name='glyphCount' type='I' type64='Q'/>
<arg declared_type='UIFont * _Nonnull' index='3' name='font' type='@'/>
<arg declared_type='CGAffineTransform' index='4' name='textMatrix' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type='NSDictionary * _Nonnull' index='5' name='attributes' type='@'/>
<arg declared_type='CGContextRef _Nonnull' index='6' name='graphicsContext' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsControlCharacters'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsInvisibleCharacters'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSUnderlineStyle' index='1' name='strikethroughVal' type='i' type64='q'/>
<arg declared_type='CGRect' index='2' name='lineRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='3' name='lineGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='CGPoint' index='4' name='containerOrigin' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textContainerChangedGeometry:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textContainerForGlyphAtIndex:effectiveRange:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSTextContainer * _Nullable' type='@'/>
</method>
<method selector='textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='NSTextContainer * _Nullable' type='@'/>
</method>
<method selector='textContainers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textStorage'>
<retval declared_type='NSTextStorage * _Nullable' type='@'/>
</method>
<method selector='truncatedGlyphRangeInLineFragmentForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSUnderlineStyle' index='1' name='underlineVal' type='i' type64='q'/>
<arg declared_type='CGRect' index='2' name='lineRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='3' name='lineGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='CGPoint' index='4' name='containerOrigin' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usedRectForTextContainer:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='usesFontLeading'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSLayoutXAxisAnchor'>
<method selector='anchorWithOffsetToAnchor:'>
<arg declared_type='NSLayoutXAxisAnchor * _Nonnull' index='0' name='otherAnchor' type='@'/>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
<method selector='constraintEqualToSystemSpacingAfterAnchor:multiplier:'>
<arg declared_type='NSLayoutXAxisAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='multiplier' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:'>
<arg declared_type='NSLayoutXAxisAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='multiplier' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToSystemSpacingAfterAnchor:multiplier:'>
<arg declared_type='NSLayoutXAxisAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='multiplier' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
</class>
<class name='NSLayoutYAxisAnchor'>
<method selector='anchorWithOffsetToAnchor:'>
<arg declared_type='NSLayoutYAxisAnchor * _Nonnull' index='0' name='otherAnchor' type='@'/>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
<method selector='constraintEqualToSystemSpacingBelowAnchor:multiplier:'>
<arg declared_type='NSLayoutYAxisAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='multiplier' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:'>
<arg declared_type='NSLayoutYAxisAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='multiplier' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToSystemSpacingBelowAnchor:multiplier:'>
<arg declared_type='NSLayoutYAxisAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='multiplier' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='fixAttributesInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readFromData:options:documentAttributes:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='opts' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readFromFileURL:options:documentAttributes:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='opts' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readFromURL:options:documentAttributes:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='opts' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSMutableParagraphStyle'>
<method selector='addTabStop:'>
<arg declared_type='NSTextTab * _Nonnull' index='0' name='anObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type='NSWritingDirection' type='i' type64='q'/>
</method>
<method selector='defaultTabInterval'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='firstLineHeadIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='headIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='i' type64='q'/>
</method>
<method selector='lineHeightMultiple'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='lineSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='maximumLineHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumLineHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='removeTabStop:'>
<arg declared_type='NSTextTab * _Nonnull' index='0' name='anObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsDefaultTighteningForTruncation:'>
<arg declared_type='BOOL' index='0' name='allowsDefaultTighteningForTruncation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg declared_type='NSWritingDirection' index='0' name='baseWritingDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultTabInterval:'>
<arg declared_type='CGFloat' index='0' name='defaultTabInterval' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFirstLineHeadIndent:'>
<arg declared_type='CGFloat' index='0' name='firstLineHeadIndent' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeadIndent:'>
<arg declared_type='CGFloat' index='0' name='headIndent' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type='float' index='0' name='hyphenationFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type='NSLineBreakMode' index='0' name='lineBreakMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineHeightMultiple:'>
<arg declared_type='CGFloat' index='0' name='lineHeightMultiple' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineSpacing:'>
<arg declared_type='CGFloat' index='0' name='lineSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumLineHeight:'>
<arg declared_type='CGFloat' index='0' name='maximumLineHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumLineHeight:'>
<arg declared_type='CGFloat' index='0' name='minimumLineHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphSpacing:'>
<arg declared_type='CGFloat' index='0' name='paragraphSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphSpacingBefore:'>
<arg declared_type='CGFloat' index='0' name='paragraphSpacingBefore' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphStyle:'>
<arg declared_type='NSParagraphStyle * _Nonnull' index='0' name='obj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabStops:'>
<arg declared_type='NSArray * _Nullable' index='0' name='tabStops' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTailIndent:'>
<arg declared_type='CGFloat' index='0' name='tailIndent' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabStops'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tailIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSObject'>
<method selector='accelerometer:didAccelerate:'>
<arg declared_type='UIAccelerometer * _Nonnull' index='0' name='accelerometer' type='@'/>
<arg declared_type='UIAcceleration * _Nonnull' index='1' name='acceleration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityActivate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityActivationPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityAssistiveTechnologyFocusedIdentifiers'>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributedContentForLineNumber:'>
<arg declared_type='NSInteger' index='0' name='lineNumber' type='i' type64='q'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributedHint'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributedLabel'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributedPageContent'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributedScrollStatusForScrollView:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributedValue'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityColumnCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='accessibilityColumnRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityContainerType'>
<retval declared_type='UIAccessibilityContainerType' type='i' type64='q'/>
</method>
<method selector='accessibilityContentForLineNumber:'>
<arg declared_type='NSInteger' index='0' name='lineNumber' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityCustomActions'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityCustomRotors'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityDataTableCellElementForRow:column:'>
<arg declared_type='NSUInteger' index='0' name='row' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='column' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityDecrement'>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityDragSourceDescriptors'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityDropPointDescriptors'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityElementAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityElementCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityElementDidBecomeFocused'>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityElementDidLoseFocus'>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityElementIsFocused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityElements'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityElementsHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityFrame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityFrameForLineNumber:'>
<arg declared_type='NSInteger' index='0' name='lineNumber' type='i' type64='q'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityHeaderElementsForColumn:'>
<arg declared_type='NSUInteger' index='0' name='column' type='I' type64='Q'/>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='accessibilityHeaderElementsForRow:'>
<arg declared_type='NSUInteger' index='0' name='row' type='I' type64='Q'/>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='accessibilityHint'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityIncrement'>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityLabel'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityLanguage'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityLineNumberForPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityNavigationStyle'>
<retval declared_type='UIAccessibilityNavigationStyle' type='i' type64='q'/>
</method>
<method selector='accessibilityPageContent'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityPath'>
<retval declared_type='UIBezierPath * _Nullable' type='@'/>
</method>
<method selector='accessibilityPerformEscape'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformMagicTap'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityRowCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='accessibilityRowRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityScroll:'>
<arg declared_type='UIAccessibilityScrollDirection' index='0' name='direction' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityScrollStatusForScrollView:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityTraits'>
<retval declared_type='UIAccessibilityTraits' type='Q'/>
</method>
<method selector='accessibilityValue'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityViewIsModal'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='actionSheet:clickedButtonAtIndex:'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='actionSheet:didDismissWithButtonIndex:'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='actionSheet:willDismissWithButtonIndex:'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='actionSheetCancel:'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='activityViewController:dataTypeIdentifierForActivityType:'>
<arg declared_type='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type='@'/>
<arg declared_type='UIActivityType _Nullable' index='1' name='activityType' type='@'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='activityViewController:itemForActivityType:'>
<arg declared_type='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type='@'/>
<arg declared_type='UIActivityType _Nullable' index='1' name='activityType' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='activityViewController:subjectForActivityType:'>
<arg declared_type='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type='@'/>
<arg declared_type='UIActivityType _Nullable' index='1' name='activityType' type='@'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='activityViewController:thumbnailImageForActivityType:suggestedSize:'>
<arg declared_type='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type='@'/>
<arg declared_type='UIActivityType _Nullable' index='1' name='activityType' type='@'/>
<arg declared_type='CGSize' index='2' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='activityViewControllerPlaceholderItem:'>
<arg declared_type='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='adaptivePresentationStyleForPresentationController:'>
<arg declared_type='UIPresentationController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='UIModalPresentationStyle' type='i' type64='q'/>
</method>
<method selector='adaptivePresentationStyleForPresentationController:traitCollection:'>
<arg declared_type='UIPresentationController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITraitCollection * _Nonnull' index='1' name='traitCollection' type='@'/>
<retval declared_type='UIModalPresentationStyle' type='i' type64='q'/>
</method>
<method selector='addAnimations:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='animation' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnimations:delayFactor:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='animation' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CGFloat' index='1' name='delayFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addCompletion:'>
<arg declared_type='void (^ _Nonnull)(UIViewAnimatingPosition)' function_pointer='true' index='0' name='completion' type='@?'>
<arg declared_type='UIViewAnimatingPosition' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='adjustTextPositionByCharacterOffset:'>
<arg declared_type='NSInteger' index='0' name='offset' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='adjustsFontForContentSizeCategory'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='adjustsImageSizeForAccessibilityContentSizeCategory'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alertView:clickedButtonAtIndex:'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alertView:didDismissWithButtonIndex:'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alertView:willDismissWithButtonIndex:'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alertViewCancel:'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alertViewShouldEnableFirstOtherButton:'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsMoveOperation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='animateAlongsideTransition:completion:'>
<arg declared_type='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='0' name='animation' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='animateAlongsideTransitionInView:animation:completion:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<arg declared_type='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='1' name='animation' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='animateTransition:'>
<arg declared_type='id _Nonnull' index='0' name='transitionContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationControllerForDismissedController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='dismissed' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='animationControllerForPresentedController:presentingController:sourceController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='presented' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='presenting' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='source' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='animationEnded:'>
<arg declared_type='BOOL' index='0' name='transitionCompleted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='appearance'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='appearanceForTraitCollection:'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='trait' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='appearanceForTraitCollection:whenContainedIn:' sentinel='0' variadic='true'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='trait' type='@'/>
<arg declared_type='Class _Nullable' index='1' name='ContainerClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='appearanceForTraitCollection:whenContainedInInstancesOfClasses:'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='trait' type='@'/>
<arg declared_type='NSArray&gt; * _Nonnull' index='1' name='containerTypes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='appearanceWhenContainedIn:' sentinel='0' variadic='true'>
<arg declared_type='Class _Nullable' index='0' name='ContainerClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='appearanceWhenContainedInInstancesOfClasses:'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='containerTypes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='application:continueUserActivity:restorationHandler:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSUserActivity * _Nonnull' index='1' name='userActivity' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSArray&gt; * _Nullable)' function_pointer='true' index='2' name='restorationHandler' type='@?'>
<arg declared_type='NSArray&gt; * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:didChangeStatusBarFrame:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='CGRect' index='1' name='oldStatusBarFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didChangeStatusBarOrientation:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIInterfaceOrientation' index='1' name='oldStatusBarOrientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didDecodeRestorableStateWithCoder:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didFailToContinueUserActivityWithType:error:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='userActivityType' type='@'/>
<arg declared_type='NSError * _Nonnull' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didFailToRegisterForRemoteNotificationsWithError:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didFinishLaunchingWithOptions:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='launchOptions' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:didReceiveLocalNotification:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UILocalNotification * _Nonnull' index='1' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didReceiveRemoteNotification:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didReceiveRemoteNotification:fetchCompletionHandler:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='userInfo' type='@'/>
<arg declared_type='void (^ _Nonnull)(UIBackgroundFetchResult)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='UIBackgroundFetchResult' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didRegisterForRemoteNotificationsWithDeviceToken:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSData * _Nonnull' index='1' name='deviceToken' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didRegisterUserNotificationSettings:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIUserNotificationSettings * _Nonnull' index='1' name='notificationSettings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didUpdateUserActivity:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSUserActivity * _Nonnull' index='1' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleActionWithIdentifier:forLocalNotification:completionHandler:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='identifier' type='@'/>
<arg declared_type='UILocalNotification * _Nonnull' index='2' name='notification' type='@'/>
<arg declared_type='void (^ _Nonnull)()' function_pointer='true' index='3' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='identifier' type='@'/>
<arg declared_type='UILocalNotification * _Nonnull' index='2' name='notification' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='responseInfo' type='@'/>
<arg declared_type='void (^ _Nonnull)()' function_pointer='true' index='4' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleActionWithIdentifier:forRemoteNotification:completionHandler:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='identifier' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='userInfo' type='@'/>
<arg declared_type='void (^ _Nonnull)()' function_pointer='true' index='3' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='identifier' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='userInfo' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='responseInfo' type='@'/>
<arg declared_type='void (^ _Nonnull)()' function_pointer='true' index='4' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleEventsForBackgroundURLSession:completionHandler:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='identifier' type='@'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleIntent:completionHandler:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='INIntent * _Nonnull' index='1' name='intent' type='@'/>
<arg declared_type='void (^ _Nonnull)(INIntentResponse * _Nonnull)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='INIntentResponse * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleOpenURL:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:handleWatchKitExtensionRequest:reply:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='userInfo' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSDictionary * _Nullable)' function_pointer='true' index='2' name='reply' type='@?'>
<arg declared_type='NSDictionary * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:openURL:options:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='app' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='options' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:openURL:sourceApplication:annotation:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='sourceApplication' type='@'/>
<arg declared_type='id _Nonnull' index='3' name='annotation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:performActionForShortcutItem:completionHandler:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIApplicationShortcutItem * _Nonnull' index='1' name='shortcutItem' type='@'/>
<arg declared_type='void (^ _Nonnull)(BOOL)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:performFetchWithCompletionHandler:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='void (^ _Nonnull)(UIBackgroundFetchResult)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='UIBackgroundFetchResult' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:shouldAllowExtensionPointIdentifier:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIApplicationExtensionPointIdentifier _Nonnull' index='1' name='extensionPointIdentifier' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:shouldRestoreApplicationState:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:shouldSaveApplicationState:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:supportedInterfaceOrientationsForWindow:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIWindow * _Nullable' index='1' name='window' type='@'/>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
<method selector='application:userDidAcceptCloudKitShareWithMetadata:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='CKShareMetadata * _Nonnull' index='1' name='cloudKitShareMetadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:viewControllerWithRestorationIdentifierPath:coder:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='identifierComponents' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='2' name='coder' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='application:willChangeStatusBarFrame:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='CGRect' index='1' name='newStatusBarFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:willChangeStatusBarOrientation:duration:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIInterfaceOrientation' index='1' name='newStatusBarOrientation' type='i' type64='q'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:willContinueUserActivityWithType:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='userActivityType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:willEncodeRestorableStateWithCoder:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:willFinishLaunchingWithOptions:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='launchOptions' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationDidBecomeActive:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidEnterBackground:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidFinishLaunching:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidReceiveMemoryWarning:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationFinishedRestoringState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationProtectedDataDidBecomeAvailable:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationProtectedDataWillBecomeUnavailable:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationShouldRequestHealthAuthorization:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationSignificantTimeChange:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillEnterForeground:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillResignActive:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillTerminate:'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='arrowBase'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='arrowHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type='NSTextContainer * _Nullable' index='0' name='textContainer' type='@'/>
<arg declared_type='CGRect' index='1' name='lineFrag' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGPoint' index='2' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='autocapitalizationType'>
<retval declared_type='UITextAutocapitalizationType' type='i' type64='q'/>
</method>
<method selector='autocorrectionType'>
<retval declared_type='UITextAutocorrectionType' type='i' type64='q'/>
</method>
<method selector='awakeFromNib'>
<retval declared_type='void' type='v'/>
</method>
<method selector='barPosition'>
<retval declared_type='UIBarPosition' type='i' type64='q'/>
</method>
<method selector='baseWritingDirectionForPosition:inDirection:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextStorageDirection' index='1' name='direction' type='i' type64='q'/>
<retval declared_type='UITextWritingDirection' type='i' type64='q'/>
</method>
<method selector='beginFloatingCursorAtPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginningOfDocument'>
<retval declared_type='UITextPosition * _Nonnull' type='@'/>
</method>
<method selector='bottomAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='canBecomeFocused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canLoadObjectsOfClass:'>
<arg declared_type='Class _Nonnull' index='0' name='aClass' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canPasteItemProviders:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='itemProviders' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelInteractiveTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='caretRectForPosition:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='center'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='characterOffsetOfPosition:withinRange:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextRange * _Nonnull' index='1' name='range' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='characterRangeAtPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
<method selector='characterRangeByExtendingPosition:inDirection:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextLayoutDirection' index='1' name='direction' type='i' type64='q'/>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
<method selector='closestPositionToPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='closestPositionToPoint:withinRange:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UITextRange * _Nonnull' index='1' name='range' type='@'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='cloudSharingController:failedToSaveShareWithError:'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cloudSharingControllerDidSaveShare:'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cloudSharingControllerDidStopSharing:'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:canFocusItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:canHandleDropSession:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:canMoveItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:canPerformAction:forItemAtIndexPath:withSender:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='id _Nullable' index='3' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:cancelPrefetchingForItemsAtIndexPaths:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:cellForItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='__kindof UICollectionViewCell * _Nonnull' type='@'/>
</method>
<method selector='collectionView:didDeselectItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didEndDisplayingCell:forItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionReusableView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='3' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didHighlightItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didSelectItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didUnhighlightItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didUpdateFocusInContext:withAnimationCoordinator:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewFocusUpdateContext * _Nonnull' index='1' name='context' type='@'/>
<arg declared_type='UIFocusAnimationCoordinator * _Nonnull' index='2' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:dragPreviewParametersForItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</method>
<method selector='collectionView:dragSessionAllowsMoveOperation:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:dragSessionDidEnd:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:dragSessionIsRestrictedToDraggingApplication:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:dragSessionWillBegin:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:dropPreviewParametersForItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</method>
<method selector='collectionView:dropSessionDidEnd:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:dropSessionDidEnter:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:dropSessionDidExit:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:dropSessionDidUpdate:withDestinationIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nullable' index='2' name='destinationIndexPath' type='@'/>
<retval declared_type='UICollectionViewDropProposal * _Nonnull' type='@'/>
</method>
<method selector='collectionView:indexPathForIndexTitle:atIndex:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='title' type='@'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<retval declared_type='NSIndexPath * _Nonnull' type='@'/>
</method>
<method selector='collectionView:itemsForAddingToDragSession:atIndexPath:point:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='CGPoint' index='3' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='collectionView:itemsForBeginningDragSession:atIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='collectionView:layout:insetForSectionAtIndex:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='collectionView:layout:minimumInteritemSpacingForSectionAtIndex:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='collectionView:layout:minimumLineSpacingForSectionAtIndex:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='collectionView:layout:referenceSizeForFooterInSection:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:referenceSizeForHeaderInSection:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:sizeForItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:moveItemAtIndexPath:toIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='destinationIndexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:numberOfItemsInSection:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='collectionView:performAction:forItemAtIndexPath:withSender:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='id _Nullable' index='3' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:performDropWithCoordinator:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:prefetchItemsAtIndexPaths:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:shouldDeselectItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:shouldHighlightItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:shouldSelectItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:shouldShowMenuForItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:shouldSpringLoadItemAtIndexPath:withContext:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:shouldUpdateFocusInContext:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewFocusUpdateContext * _Nonnull' index='1' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:targetContentOffsetForProposedContentOffset:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='CGPoint' index='1' name='proposedContentOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='originalIndexPath' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='proposedIndexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nonnull' type='@'/>
</method>
<method selector='collectionView:transitionLayoutForOldLayout:newLayout:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='fromLayout' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='2' name='toLayout' type='@'/>
<retval declared_type='UICollectionViewTransitionLayout * _Nonnull' type='@'/>
</method>
<method selector='collectionView:viewForSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='kind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='UICollectionReusableView * _Nonnull' type='@'/>
</method>
<method selector='collectionView:willDisplayCell:forItemAtIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionReusableView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='3' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:'>
<arg declared_type='UICollisionBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nullable' index='2' name='identifier' type='@'/>
<arg declared_type='CGPoint' index='3' name='p' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collisionBehavior:beganContactForItem:withItem:atPoint:'>
<arg declared_type='UICollisionBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item1' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item2' type='@'/>
<arg declared_type='CGPoint' index='3' name='p' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collisionBehavior:endedContactForItem:withBoundaryIdentifier:'>
<arg declared_type='UICollisionBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nullable' index='2' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collisionBehavior:endedContactForItem:withItem:'>
<arg declared_type='UICollisionBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item1' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collisionBoundingPath'>
<retval declared_type='UIBezierPath * _Nonnull' type='@'/>
</method>
<method selector='collisionBoundsType'>
<retval declared_type='UIDynamicItemCollisionBoundsType' type='I' type64='Q'/>
</method>
<method selector='commitInsertionWithDataSourceUpdates:'>
<arg declared_type='void (^ _Nonnull)(NSIndexPath * _Nonnull)' function_pointer='true' index='0' name='dataSourceUpdates' type='@?'>
<arg declared_type='NSIndexPath * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='comparePosition:toPosition:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextPosition * _Nonnull' index='1' name='other' type='@'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='completeTransition:'>
<arg declared_type='BOOL' index='0' name='didComplete' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='completionCurve'>
<retval declared_type='UIViewAnimationCurve' type='i' type64='q'/>
</method>
<method selector='completionSpeed'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='completionVelocity'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='containerView'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='contentOffset'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='contentSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='contentViewInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='continueAnimationWithTimingParameters:durationFactor:'>
<arg declared_type='id _Nullable' index='0' name='parameters' type='@'/>
<arg declared_type='CGFloat' index='1' name='durationFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='convertPoint:fromCoordinateSpace:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='id _Nonnull' index='1' name='coordinateSpace' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toCoordinateSpace:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='id _Nonnull' index='1' name='coordinateSpace' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromCoordinateSpace:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='id _Nonnull' index='1' name='coordinateSpace' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toCoordinateSpace:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='id _Nonnull' index='1' name='coordinateSpace' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='coordinateSpace'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='copy:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cubicTimingParameters'>
<retval declared_type='UICubicTimingParameters * _Nullable' type='@'/>
</method>
<method selector='cut:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dataSourceIndexPathForPresentationIndexPath:'>
<arg declared_type='NSIndexPath * _Nullable' index='0' name='presentationIndexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='dataSourceSectionIndexForPresentationSectionIndex:'>
<arg declared_type='NSInteger' index='0' name='presentationSectionIndex' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='decodeRestorableStateWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='decreaseSize:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultAttributes'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='delete:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteBackward'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deletePlaceholder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='destinationIndexPath'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='detailTextForGuidedAccessRestrictionWithIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='restrictionIdentifier' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='dictationRecognitionFailed'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dictationRecordingDidEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didDismissSearchController:'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didHintFocusMovement:'>
<arg declared_type='UIFocusMovementHint * _Nonnull' index='0' name='hint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didMoveToView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didPresentActionSheet:'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didPresentAlertView:'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didPresentSearchController:'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didUpdateFocusInContext:withAnimationCoordinator:'>
<arg declared_type='UIFocusUpdateContext * _Nonnull' index='0' name='context' type='@'/>
<arg declared_type='UIFocusAnimationCoordinator * _Nonnull' index='1' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentBrowser:applicationActivitiesForDocumentURLs:'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='documentURLs' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='documentBrowser:didImportDocumentAtURL:toDestinationURL:'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='sourceURL' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='2' name='destinationURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentBrowser:didPickDocumentURLs:'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='documentURLs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentBrowser:didPickDocumentsAtURLs:'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='documentURLs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentBrowser:didRequestDocumentCreationWithHandler:'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSURL * _Nullable, UIDocumentBrowserImportMode)' function_pointer='true' index='1' name='importHandler' type='@?'>
<arg declared_type='NSURL * _Nullable' type='@'/>
<arg declared_type='UIDocumentBrowserImportMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentBrowser:failedToImportDocumentAtURL:error:'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='documentURL' type='@'/>
<arg declared_type='NSError * _Nullable' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentBrowser:willPresentActivityViewController:'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UIActivityViewController * _Nonnull' index='1' name='activityViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentContextAfterInput'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='documentContextBeforeInput'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='documentIdentifier'>
<retval declared_type='NSUUID * _Nonnull' type='@'/>
</method>
<method selector='documentInputMode'>
<retval declared_type='UITextInputMode * _Nullable' type='@'/>
</method>
<method selector='documentInteractionController:canPerformAction:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='action' type=':'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='documentInteractionController:didEndSendingToApplication:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionController:performAction:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='action' type=':'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='documentInteractionController:willBeginSendingToApplication:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerDidDismissOpenInMenu:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerDidDismissOptionsMenu:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerDidEndPreview:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerRectForPreview:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='documentInteractionControllerViewControllerForPreview:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='UIViewController * _Nonnull' type='@'/>
</method>
<method selector='documentInteractionControllerViewForPreview:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='documentInteractionControllerWillBeginPreview:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerWillPresentOpenInMenu:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerWillPresentOptionsMenu:'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentMenu:didPickDocumentPicker:'>
<arg declared_type='UIDocumentMenuViewController * _Nonnull' index='0' name='documentMenu' type='@'/>
<arg declared_type='UIDocumentPickerViewController * _Nonnull' index='1' name='documentPicker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentMenuWasCancelled:'>
<arg declared_type='UIDocumentMenuViewController * _Nonnull' index='0' name='documentMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentPicker:didPickDocumentAtURL:'>
<arg declared_type='UIDocumentPickerViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentPicker:didPickDocumentsAtURLs:'>
<arg declared_type='UIDocumentPickerViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='urls' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentPickerWasCancelled:'>
<arg declared_type='UIDocumentPickerViewController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:item:willAnimateCancelWithAnimator:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='animator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:itemsForAddingToSession:withTouchAtPoint:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='CGPoint' index='2' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='dragInteraction:itemsForBeginningSession:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='dragInteraction:prefersFullSizePreviewsForSession:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dragInteraction:previewForCancellingItem:withDefault:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='UITargetedDragPreview * _Nonnull' index='2' name='defaultPreview' type='@'/>
<retval declared_type='UITargetedDragPreview * _Nullable' type='@'/>
</method>
<method selector='dragInteraction:previewForLiftingItem:session:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='session' type='@'/>
<retval declared_type='UITargetedDragPreview * _Nullable' type='@'/>
</method>
<method selector='dragInteraction:session:didEndWithOperation:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='UIDropOperation' index='2' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:session:willAddItems:forInteraction:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='items' type='@'/>
<arg declared_type='UIDragInteraction * _Nonnull' index='3' name='addingInteraction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:session:willEndWithOperation:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='UIDropOperation' index='2' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:sessionAllowsMoveOperation:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dragInteraction:sessionDidMove:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:sessionDidTransferItems:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:sessionForAddingItems:withTouchAtPoint:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='NSArray&gt; * _Nonnull' index='1' name='sessions' type='@'/>
<arg declared_type='CGPoint' index='2' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dragInteraction:sessionIsRestrictedToDraggingApplication:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dragInteraction:sessionWillBegin:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:willAnimateLiftWithAnimator:session:'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='animator' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragItem'>
<retval declared_type='UIDragItem * _Nonnull' type='@'/>
</method>
<method selector='dragRange'>
<retval declared_type='UITextRange * _Nonnull' type='@'/>
</method>
<method selector='dragSession'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropInteraction:canHandleSession:'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dropInteraction:concludeDrop:'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:item:willAnimateDropWithAnimator:'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='animator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:performDrop:'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:previewForDroppingItem:withDefault:'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='UITargetedDragPreview * _Nonnull' index='2' name='defaultPreview' type='@'/>
<retval declared_type='UITargetedDragPreview * _Nullable' type='@'/>
</method>
<method selector='dropInteraction:sessionDidEnd:'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:sessionDidEnter:'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:sessionDidExit:'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:sessionDidUpdate:'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='UIDropProposal * _Nonnull' type='@'/>
</method>
<method selector='dropItem:intoItemAtIndexPath:rect:'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<arg declared_type='CGRect' index='2' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropItem:intoRowAtIndexPath:rect:'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<arg declared_type='CGRect' index='2' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropItem:toItemAtIndexPath:'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropItem:toPlaceholder:'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='UITableViewDropPlaceholder * _Nonnull' index='1' name='placeholder' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropItem:toRowAtIndexPath:'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropItem:toTarget:'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='UIDragPreviewTarget * _Nonnull' index='1' name='target' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropPosition'>
<retval declared_type='UITextPosition * _Nonnull' type='@'/>
</method>
<method selector='dropSession'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='dynamicAnimatorDidPause:'>
<arg declared_type='UIDynamicAnimator * _Nonnull' index='0' name='animator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dynamicAnimatorWillResume:'>
<arg declared_type='UIDynamicAnimator * _Nonnull' index='0' name='animator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableInputClicksWhenVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enablesReturnKeyAutomatically'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endFloatingCursor'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endOfDocument'>
<retval declared_type='UITextPosition * _Nonnull' type='@'/>
</method>
<method selector='existingItems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='finalFrameForViewController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='vc' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='finishAnimationAtPosition:'>
<arg declared_type='UIViewAnimatingPosition' index='0' name='finalPosition' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='finishInteractiveTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstRectForRange:'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='focusItemContainer'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='focusItemsInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='fractionComplete'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='frame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameForDictationResultPlaceholder:'>
<arg declared_type='id _Nonnull' index='0' name='placeholder' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldReceivePress:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='UIPress * _Nonnull' index='1' name='press' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldReceiveTouch:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='UITouch * _Nonnull' index='1' name='touch' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldRequireFailureOfGestureRecognizer:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizerShouldBegin:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='guidedAccessRestrictionIdentifiers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='guidedAccessRestrictionWithIdentifier:didChangeState:'>
<arg declared_type='NSString * _Nonnull' index='0' name='restrictionIdentifier' type='@'/>
<arg declared_type='UIGuidedAccessRestrictionState' index='1' name='newRestrictionState' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasItemsConformingToTypeIdentifiers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='typeIdentifiers' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasText'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='heightAnchor'>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
<method selector='imageForBounds:textContainer:characterIndex:'>
<arg declared_type='CGRect' index='0' name='imageBounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nullable' index='1' name='textContainer' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='imagePickerController:didFinishPickingImage:editingInfo:'>
<arg declared_type='UIImagePickerController * _Nonnull' index='0' name='picker' type='@'/>
<arg declared_type='UIImage * _Nonnull' index='1' name='image' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='editingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imagePickerController:didFinishPickingMediaWithInfo:'>
<arg declared_type='UIImagePickerController * _Nonnull' index='0' name='picker' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='info' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imagePickerControllerDidCancel:'>
<arg declared_type='UIImagePickerController * _Nonnull' index='0' name='picker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='increaseSize:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='indexOfAccessibilityElement:'>
<arg declared_type='id _Nonnull' index='0' name='element' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexPathForElementWithModelIdentifier:inView:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexPathForPreferredFocusedViewInCollectionView:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexPathForPreferredFocusedViewInTableView:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexTitlesForCollectionView:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='initialFrameForViewController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='vc' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initiallyInteractive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inputDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='insertDictationResult:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='dictationResult' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertDictationResultPlaceholder'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='insertText:'>
<arg declared_type='NSString * _Nonnull' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='interaction:didChangeWithContext:'>
<arg declared_type='UISpringLoadedInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='interactionControllerForDismissal:'>
<arg declared_type='id _Nonnull' index='0' name='animator' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='interactionControllerForPresentation:'>
<arg declared_type='id _Nonnull' index='0' name='animator' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='interactionDidFinish:'>
<arg declared_type='UISpringLoadedInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='interruptibleAnimatorForTransition:'>
<arg declared_type='id _Nonnull' index='0' name='transitionContext' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='isAccessibilityElement'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAnimated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isCancelled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInteractive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInterruptible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPosition:atBoundary:inDirection:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextGranularity' index='1' name='granularity' type='i' type64='q'/>
<arg declared_type='UITextDirection' index='2' name='direction' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPosition:withinTextUnit:inDirection:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextGranularity' index='1' name='granularity' type='i' type64='q'/>
<arg declared_type='UITextDirection' index='2' name='direction' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRestrictedToDraggingApplication'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReversed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSameView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSecureTextEntry'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSpringLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTextDragActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTextDropActive'>
<retval declared_type='_Bool' type='B'/>
</method>
<method selector='itemProvider'>
<retval declared_type='__kindof NSItemProvider * _Nonnull' type='@'/>
</method>
<method selector='itemThumbnailDataForCloudSharingController:'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='itemTitleForCloudSharingController:'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='itemTypeForCloudSharingController:'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='items'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='keyboardAppearance'>
<retval declared_type='UIKeyboardAppearance' type='i' type64='q'/>
</method>
<method selector='keyboardType'>
<retval declared_type='UIKeyboardType' type='i' type64='q'/>
</method>
<method selector='layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='textContainer' type='@'/>
<arg declared_type='CGRect' index='3' name='proposedRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGPoint' index='4' name='glyphPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='5' name='charIndex' type='I' type64='Q'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSTextContainer * _Nullable' index='1' name='textContainer' type='@'/>
<arg declared_type='BOOL' index='2' name='layoutFinishedFlag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='CGRect' index='2' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='CGRect' index='2' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='CGRect' index='2' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg const='true' declared_type='CGGlyph * _Nonnull' index='1' name='glyphs' type='^S'/>
<arg const='true' declared_type='NSGlyphProperty * _Nonnull' index='2' name='props' type='^i' type64='^q'/>
<arg const='true' declared_type='NSUInteger * _Nonnull' index='3' name='charIndexes' type='^I' type64='^Q'/>
<arg declared_type='UIFont * _Nonnull' index='4' name='aFont' type='@'/>
<arg declared_type='NSRange' index='5' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='CGRect * _Nonnull' index='1' name='lineFragmentRect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGRect * _Nonnull' index='2' name='lineFragmentUsedRect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat * _Nonnull' index='3' name='baselineOffset' type='^f' type64='^d'/>
<arg declared_type='NSTextContainer * _Nonnull' index='4' name='textContainer' type='@'/>
<arg declared_type='NSRange' index='5' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldUseAction:forControlCharacterAtIndex:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSControlCharacterAction' index='1' name='action' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSControlCharacterAction' type='i' type64='q'/>
</method>
<method selector='layoutManager:textContainer:didChangeGeometryFromSize:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='textContainer' type='@'/>
<arg declared_type='CGSize' index='2' name='oldSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutManagerDidInvalidateLayout:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutOrientation'>
<retval declared_type='NSTextLayoutOrientation' type='i' type64='q'/>
</method>
<method selector='length'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='loadObjectsOfClass:completion:'>
<arg declared_type='Class _Nonnull' index='0' name='aClass' type='#'/>
<arg declared_type='void (^ _Nonnull)(NSArray&gt; * _Nonnull)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='NSArray&gt; * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSProgress * _Nonnull' type='@'/>
</method>
<method selector='localContext'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='localDragSession'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='localObject'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='locationInView:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='makeTextWritingDirectionLeftToRight:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeTextWritingDirectionRightToLeft:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='markedTextRange'>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
<method selector='markedTextStyle'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='modelIdentifierForElementAtIndexPath:inView:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='idx' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='navigationBar:didPopItem:'>
<arg declared_type='UINavigationBar * _Nonnull' index='0' name='navigationBar' type='@'/>
<arg declared_type='UINavigationItem * _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='navigationBar:didPushItem:'>
<arg declared_type='UINavigationBar * _Nonnull' index='0' name='navigationBar' type='@'/>
<arg declared_type='UINavigationItem * _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='navigationBar:shouldPopItem:'>
<arg declared_type='UINavigationBar * _Nonnull' index='0' name='navigationBar' type='@'/>
<arg declared_type='UINavigationItem * _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='navigationBar:shouldPushItem:'>
<arg declared_type='UINavigationBar * _Nonnull' index='0' name='navigationBar' type='@'/>
<arg declared_type='UINavigationItem * _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='navigationController:animationControllerForOperation:fromViewController:toViewController:'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<arg declared_type='UINavigationControllerOperation' index='1' name='operation' type='i' type64='q'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='fromVC' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='3' name='toVC' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='navigationController:didShowViewController:animated:'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='navigationController:interactionControllerForAnimationController:'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='animationController' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='navigationController:willShowViewController:animated:'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='navigationControllerPreferredInterfaceOrientationForPresentation:'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<retval declared_type='UIInterfaceOrientation' type='i' type64='q'/>
</method>
<method selector='navigationControllerSupportedInterfaceOrientations:'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
<method selector='notifyWhenInteractionChangesUsingBlock:'>
<arg declared_type='void (^ _Nonnull)(id _Nonnull)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='notifyWhenInteractionEndsUsingBlock:'>
<arg declared_type='void (^ _Nonnull)(id _Nonnull)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfComponentsInPickerView:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfSectionsInCollectionView:'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfSectionsInTableView:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='objectRestorationClass'>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method class_method='true' selector='objectWithRestorationIdentifierPath:coder:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='identifierComponents' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='offsetFromPosition:toPosition:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='from' type='@'/>
<arg declared_type='UITextPosition * _Nonnull' index='1' name='toPosition' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<arg declared_type='BOOL' index='1' name='finished' type='B'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='previousViewControllers' type='@'/>
<arg declared_type='BOOL' index='3' name='completed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageViewController:spineLocationForInterfaceOrientation:'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<arg declared_type='UIInterfaceOrientation' index='1' name='orientation' type='i' type64='q'/>
<retval declared_type='UIPageViewControllerSpineLocation' type='i' type64='q'/>
</method>
<method selector='pageViewController:viewControllerAfterViewController:'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='pageViewController:viewControllerBeforeViewController:'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='pageViewController:willTransitionToViewControllers:'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='pendingViewControllers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageViewControllerPreferredInterfaceOrientationForPresentation:'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<retval declared_type='UIInterfaceOrientation' type='i' type64='q'/>
</method>
<method selector='pageViewControllerSupportedInterfaceOrientations:'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
<method selector='parentFocusEnvironment'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='passwordRules'>
<retval declared_type='UITextInputPasswordRules * _Nullable' type='@'/>
</method>
<method selector='paste:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteConfiguration'>
<retval declared_type='UIPasteConfiguration * _Nullable' type='@'/>
</method>
<method selector='pasteDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='pasteItemProviders:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='itemProviders' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pauseAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pauseInteractiveTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pencilInteractionDidTap:'>
<arg declared_type='UIPencilInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='percentComplete'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='performUsingPresentationValues:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='actionsToTranslate' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='pickerView:accessibilityAttributedHintForComponent:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='pickerView:accessibilityAttributedLabelForComponent:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='pickerView:accessibilityHintForComponent:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='pickerView:accessibilityLabelForComponent:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='pickerView:attributedTitleForRow:forComponent:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='component' type='i' type64='q'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='pickerView:didSelectRow:inComponent:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='component' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pickerView:numberOfRowsInComponent:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='pickerView:rowHeightForComponent:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='pickerView:titleForRow:forComponent:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='component' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='pickerView:viewForRow:forComponent:reusingView:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='component' type='i' type64='q'/>
<arg declared_type='UIView * _Nullable' index='3' name='view' type='@'/>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='pickerView:widthForComponent:'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='popoverController:willRepositionPopoverToRect:inView:'>
<arg declared_type='UIPopoverController * _Nonnull' index='0' name='popoverController' type='@'/>
<arg declared_type='CGRect * _Nonnull' index='1' name='rect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull * _Nonnull' index='2' name='view' type='^@' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverControllerDidDismissPopover:'>
<arg declared_type='UIPopoverController * _Nonnull' index='0' name='popoverController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverControllerShouldDismissPopover:'>
<arg declared_type='UIPopoverController * _Nonnull' index='0' name='popoverController' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='popoverPresentationController:willRepositionPopoverToRect:inView:'>
<arg declared_type='UIPopoverPresentationController * _Nonnull' index='0' name='popoverPresentationController' type='@'/>
<arg declared_type='CGRect * _Nonnull' index='1' name='rect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull * _Nonnull' index='2' name='view' type='^@' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverPresentationControllerDidDismissPopover:'>
<arg declared_type='UIPopoverPresentationController * _Nonnull' index='0' name='popoverPresentationController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverPresentationControllerShouldDismissPopover:'>
<arg declared_type='UIPopoverPresentationController * _Nonnull' index='0' name='popoverPresentationController' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='positionForBar:'>
<arg declared_type='id _Nonnull' index='0' name='bar' type='@'/>
<retval declared_type='UIBarPosition' type='i' type64='q'/>
</method>
<method selector='positionFromPosition:inDirection:offset:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextLayoutDirection' index='1' name='direction' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='offset' type='i' type64='q'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='positionFromPosition:offset:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='NSInteger' index='1' name='offset' type='i' type64='q'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='positionFromPosition:toBoundary:inDirection:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextGranularity' index='1' name='granularity' type='i' type64='q'/>
<arg declared_type='UITextDirection' index='2' name='direction' type='i' type64='q'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='positionWithinRange:atCharacterOffset:'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<arg declared_type='NSInteger' index='1' name='offset' type='i' type64='q'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='positionWithinRange:farthestInDirection:'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<arg declared_type='UITextLayoutDirection' index='1' name='direction' type='i' type64='q'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='preferredContentSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='preferredContentSizeDidChangeForChildContentContainer:'>
<arg declared_type='id _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preferredFocusEnvironments'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='preferredFocusedView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='preferredPresentationSizeForItemProvider'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='prepareForInterfaceBuilder'>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForPopoverPresentation:'>
<arg declared_type='UIPopoverPresentationController * _Nonnull' index='0' name='popoverPresentationController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentSearchController:'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentationController:viewControllerForAdaptivePresentationStyle:'>
<arg declared_type='UIPresentationController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UIModalPresentationStyle' index='1' name='style' type='i' type64='q'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:'>
<arg declared_type='UIPresentationController * _Nonnull' index='0' name='presentationController' type='@'/>
<arg declared_type='UIModalPresentationStyle' index='1' name='style' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='2' name='transitionCoordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentationControllerForPresentedViewController:presentingViewController:sourceViewController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='presented' type='@'/>
<arg declared_type='UIViewController * _Nullable' index='1' name='presenting' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='source' type='@'/>
<retval declared_type='UIPresentationController * _Nullable' type='@'/>
</method>
<method selector='presentationCountForPageViewController:'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='presentationIndexForPageViewController:'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='presentationIndexPathForDataSourceIndexPath:'>
<arg declared_type='NSIndexPath * _Nullable' index='0' name='dataSourceIndexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='presentationSectionIndexForDataSourceSectionIndex:'>
<arg declared_type='NSInteger' index='0' name='dataSourceSectionIndex' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='presentationStyle'>
<retval declared_type='UIModalPresentationStyle' type='i' type64='q'/>
</method>
<method selector='previewInteraction:didUpdateCommitTransition:ended:'>
<arg declared_type='UIPreviewInteraction * _Nonnull' index='0' name='previewInteraction' type='@'/>
<arg declared_type='CGFloat' index='1' name='transitionProgress' type='f' type64='d'/>
<arg declared_type='BOOL' index='2' name='ended' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='previewInteraction:didUpdatePreviewTransition:ended:'>
<arg declared_type='UIPreviewInteraction * _Nonnull' index='0' name='previewInteraction' type='@'/>
<arg declared_type='CGFloat' index='1' name='transitionProgress' type='f' type64='d'/>
<arg declared_type='BOOL' index='2' name='ended' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='previewInteractionDidCancel:'>
<arg declared_type='UIPreviewInteraction * _Nonnull' index='0' name='previewInteraction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='previewInteractionShouldBegin:'>
<arg declared_type='UIPreviewInteraction * _Nonnull' index='0' name='previewInteraction' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='previewSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='previewingContext:commitViewController:'>
<arg declared_type='id _Nonnull' index='0' name='previewingContext' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewControllerToCommit' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='previewingContext:viewControllerForLocation:'>
<arg declared_type='id _Nonnull' index='0' name='previewingContext' type='@'/>
<arg declared_type='CGPoint' index='1' name='location' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='previewingGestureRecognizerForFailureRelationship'>
<retval declared_type='UIGestureRecognizer * _Nonnull' type='@'/>
</method>
<method selector='primaryViewControllerForCollapsingSplitViewController:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='primaryViewControllerForExpandingSplitViewController:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='printInteractionController:chooseCutterBehavior:'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='availableBehaviors' type='@'/>
<retval declared_type='UIPrinterCutterBehavior' type='i' type64='q'/>
</method>
<method selector='printInteractionController:choosePaper:'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='paperList' type='@'/>
<retval declared_type='UIPrintPaper * _Nonnull' type='@'/>
</method>
<method selector='printInteractionController:cutLengthForPaper:'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<arg declared_type='UIPrintPaper * _Nonnull' index='1' name='paper' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='printInteractionControllerDidDismissPrinterOptions:'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printInteractionControllerDidFinishJob:'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printInteractionControllerDidPresentPrinterOptions:'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printInteractionControllerParentViewController:'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='printInteractionControllerWillDismissPrinterOptions:'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printInteractionControllerWillPresentPrinterOptions:'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printInteractionControllerWillStartJob:'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printerPickerController:shouldShowPrinter:'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<arg declared_type='UIPrinter * _Nonnull' index='1' name='printer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='printerPickerControllerDidDismiss:'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printerPickerControllerDidPresent:'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printerPickerControllerDidSelectPrinter:'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printerPickerControllerParentViewController:'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='printerPickerControllerWillDismiss:'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printerPickerControllerWillPresent:'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='progressIndicatorStyle'>
<retval declared_type='UIDropSessionProgressIndicatorStyle' type='I' type64='Q'/>
</method>
<method selector='proposal'>
<retval declared_type='UITableViewDropProposal * _Nonnull' type='@'/>
</method>
<method selector='rangeEnclosingPosition:withGranularity:inDirection:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextGranularity' index='1' name='granularity' type='i' type64='q'/>
<arg declared_type='UITextDirection' index='2' name='direction' type='i' type64='q'/>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
<method selector='removeDictationResultPlaceholder:willInsertResult:'>
<arg declared_type='id _Nonnull' index='0' name='placeholder' type='@'/>
<arg declared_type='BOOL' index='1' name='willInsertResult' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceRange:withText:'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restorationParent'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='restoreUserActivityState:'>
<arg declared_type='NSUserActivity * _Nonnull' index='0' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='returnKeyType'>
<retval declared_type='UIReturnKeyType' type='i' type64='q'/>
</method>
<method selector='scrollViewDidChangeAdjustedContentInset:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidEndDecelerating:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidEndDragging:willDecelerate:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<arg declared_type='BOOL' index='1' name='decelerate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidEndScrollingAnimation:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidEndZooming:withView:atScale:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<arg declared_type='UIView * _Nullable' index='1' name='view' type='@'/>
<arg declared_type='CGFloat' index='2' name='scale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidScroll:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidScrollToTop:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidZoom:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewShouldScrollToTop:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scrollViewWillBeginDecelerating:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewWillBeginDragging:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewWillBeginZooming:withView:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<arg declared_type='UIView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewWillEndDragging:withVelocity:targetContentOffset:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<arg declared_type='CGPoint' index='1' name='velocity' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint * _Nonnull' index='2' name='targetContentOffset' type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBar:selectedScopeButtonIndexDidChange:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<arg declared_type='NSInteger' index='1' name='selectedScope' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBar:shouldChangeTextInRange:replacementText:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='2' name='text' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchBar:textDidChange:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='searchText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarBookmarkButtonClicked:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarCancelButtonClicked:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarResultsListButtonClicked:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarSearchButtonClicked:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarShouldBeginEditing:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchBarShouldEndEditing:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchBarTextDidBeginEditing:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarTextDidEndEditing:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayController:didHideSearchResultsTableView:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayController:didLoadSearchResultsTableView:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayController:didShowSearchResultsTableView:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayController:shouldReloadTableForSearchScope:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSInteger' index='1' name='searchOption' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchDisplayController:shouldReloadTableForSearchString:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='searchString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchDisplayController:willHideSearchResultsTableView:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayController:willShowSearchResultsTableView:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayController:willUnloadSearchResultsTableView:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayControllerDidBeginSearch:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayControllerDidEndSearch:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayControllerWillBeginSearch:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayControllerWillEndSearch:'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sectionIndexTitlesForTableView:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='select:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedText'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='selectedTextRange'>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
<method selector='selectionAffinity'>
<retval declared_type='UITextStorageDirection' type='i' type64='q'/>
</method>
<method selector='selectionDidChange:'>
<arg declared_type='id _Nullable' index='0' name='textInput' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectionRectsForRange:'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='selectionWillChange:'>
<arg declared_type='id _Nullable' index='0' name='textInput' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='session'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='setAccessibilityActivationPoint:'>
<arg declared_type='CGPoint' index='0' name='accessibilityActivationPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityAttributedHint:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='accessibilityAttributedHint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityAttributedLabel:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='accessibilityAttributedLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityAttributedValue:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='accessibilityAttributedValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityContainerType:'>
<arg declared_type='UIAccessibilityContainerType' index='0' name='accessibilityContainerType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCustomActions:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityCustomActions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCustomRotors:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityCustomRotors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDragSourceDescriptors:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityDragSourceDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDropPointDescriptors:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityDropPointDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityElements:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityElementsHidden:'>
<arg declared_type='BOOL' index='0' name='accessibilityElementsHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFrame:'>
<arg declared_type='CGRect' index='0' name='accessibilityFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHint:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityHint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLanguage:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityLanguage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityNavigationStyle:'>
<arg declared_type='UIAccessibilityNavigationStyle' index='0' name='accessibilityNavigationStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityPath:'>
<arg declared_type='UIBezierPath * _Nullable' index='0' name='accessibilityPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityTraits:'>
<arg declared_type='UIAccessibilityTraits' index='0' name='accessibilityTraits' type='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityValue:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityViewIsModal:'>
<arg declared_type='BOOL' index='0' name='accessibilityViewIsModal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAdjustsFontForContentSizeCategory:'>
<arg declared_type='BOOL' index='0' name='adjustsFontForContentSizeCategory' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAdjustsImageSizeForAccessibilityContentSizeCategory:'>
<arg declared_type='BOOL' index='0' name='adjustsImageSizeForAccessibilityContentSizeCategory' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttachmentResult:'>
<arg declared_type='NSTextAttachment * _Nonnull' index='0' name='textAttachment' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedStringResult:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutocapitalizationType:'>
<arg declared_type='UITextAutocapitalizationType' index='0' name='autocapitalizationType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutocorrectionType:'>
<arg declared_type='UITextAutocorrectionType' index='0' name='autocorrectionType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseWritingDirection:forRange:'>
<arg declared_type='UITextWritingDirection' index='0' name='writingDirection' type='i' type64='q'/>
<arg declared_type='UITextRange * _Nonnull' index='1' name='range' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenter:'>
<arg declared_type='CGPoint' index='0' name='center' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentOffset:'>
<arg declared_type='CGPoint' index='0' name='contentOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultResult'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnablesReturnKeyAutomatically:'>
<arg declared_type='BOOL' index='0' name='enablesReturnKeyAutomatically' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFractionComplete:'>
<arg declared_type='CGFloat' index='0' name='fractionComplete' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputDelegate:'>
<arg declared_type='id _Nullable' index='0' name='inputDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsAccessibilityElement:'>
<arg declared_type='BOOL' index='0' name='isAccessibilityElement' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyboardAppearance:'>
<arg declared_type='UIKeyboardAppearance' index='0' name='keyboardAppearance' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyboardType:'>
<arg declared_type='UIKeyboardType' index='0' name='keyboardType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalContext:'>
<arg declared_type='id _Nullable' index='0' name='localContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMarkedText:selectedRange:'>
<arg declared_type='NSString * _Nullable' index='0' name='markedText' type='@'/>
<arg declared_type='NSRange' index='1' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMarkedTextStyle:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='markedTextStyle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsCellUpdate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsFocusUpdate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNoResult'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPasswordRules:'>
<arg declared_type='UITextInputPasswordRules * _Nullable' index='0' name='passwordRules' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPasteConfiguration:'>
<arg declared_type='UIPasteConfiguration * _Nullable' index='0' name='pasteConfiguration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPasteDelegate:'>
<arg declared_type='id _Nullable' index='0' name='pasteDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressIndicatorStyle:'>
<arg declared_type='UIDropSessionProgressIndicatorStyle' index='0' name='progressIndicatorStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReturnKeyType:'>
<arg declared_type='UIReturnKeyType' index='0' name='returnKeyType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReversed:'>
<arg declared_type='BOOL' index='0' name='reversed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecureTextEntry:'>
<arg declared_type='BOOL' index='0' name='secureTextEntry' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedTextRange:'>
<arg declared_type='UITextRange * _Nullable' index='0' name='selectedTextRange' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionAffinity:'>
<arg declared_type='UITextStorageDirection' index='0' name='selectionAffinity' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldGroupAccessibilityChildren:'>
<arg declared_type='BOOL' index='0' name='shouldGroupAccessibilityChildren' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSmartDashesType:'>
<arg declared_type='UITextSmartDashesType' index='0' name='smartDashesType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSmartInsertDeleteType:'>
<arg declared_type='UITextSmartInsertDeleteType' index='0' name='smartInsertDeleteType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSmartQuotesType:'>
<arg declared_type='UITextSmartQuotesType' index='0' name='smartQuotesType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceRect:'>
<arg declared_type='CGRect' index='0' name='sourceRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpellCheckingType:'>
<arg declared_type='UITextSpellCheckingType' index='0' name='spellCheckingType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpringLoaded:'>
<arg declared_type='BOOL' index='0' name='springLoaded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringResult:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetItem:'>
<arg declared_type='id _Nullable' index='0' name='targetItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetView:'>
<arg declared_type='UIView * _Nullable' index='0' name='targetView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextContentType:'>
<arg declared_type='UITextContentType _Null_unspecified' index='0' name='textContentType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextDragDelegate:'>
<arg declared_type='id _Nullable' index='0' name='textDragDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextDragOptions:'>
<arg declared_type='UITextDragOptions' index='0' name='textDragOptions' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextDropDelegate:'>
<arg declared_type='id _Nullable' index='0' name='textDropDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWindow:'>
<arg declared_type='UIWindow * _Nullable' index='0' name='window' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldAllowInteraction:withContext:'>
<arg declared_type='UISpringLoadedInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldChangeTextInRange:replacementText:'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='text' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldGroupAccessibilityChildren'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldUpdateFocusInContext:'>
<arg declared_type='UIFocusUpdateContext * _Nonnull' index='0' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sizeForChildContentContainer:withParentContainerSize:'>
<arg declared_type='id _Nonnull' index='0' name='container' type='@'/>
<arg declared_type='CGSize' index='1' name='parentSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='smartDashesType'>
<retval declared_type='UITextSmartDashesType' type='i' type64='q'/>
</method>
<method selector='smartInsertDeleteType'>
<retval declared_type='UITextSmartInsertDeleteType' type='i' type64='q'/>
</method>
<method selector='smartQuotesType'>
<retval declared_type='UITextSmartQuotesType' type='i' type64='q'/>
</method>
<method selector='sourceIndexPath'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='sourceRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sourceView'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='spellCheckingType'>
<retval declared_type='UITextSpellCheckingType' type='i' type64='q'/>
</method>
<method selector='splitViewController:collapseSecondaryViewController:ontoPrimaryViewController:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='secondaryViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='primaryViewController' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitViewController:popoverController:willPresentViewController:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<arg declared_type='UIPopoverController * _Nonnull' index='1' name='pc' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='aViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitViewController:separateSecondaryViewControllerFromPrimaryViewController:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='primaryViewController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='splitViewController:shouldHideViewController:inOrientation:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='vc' type='@'/>
<arg declared_type='UIInterfaceOrientation' index='2' name='orientation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitViewController:showDetailViewController:sender:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='vc' type='@'/>
<arg declared_type='id _Nullable' index='2' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitViewController:showViewController:sender:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='vc' type='@'/>
<arg declared_type='id _Nullable' index='2' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitViewController:willChangeToDisplayMode:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<arg declared_type='UISplitViewControllerDisplayMode' index='1' name='displayMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitViewController:willHideViewController:withBarButtonItem:forPopoverController:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='aViewController' type='@'/>
<arg declared_type='UIBarButtonItem * _Nonnull' index='2' name='barButtonItem' type='@'/>
<arg declared_type='UIPopoverController * _Nonnull' index='3' name='pc' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitViewController:willShowViewController:invalidatingBarButtonItem:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='aViewController' type='@'/>
<arg declared_type='UIBarButtonItem * _Nonnull' index='2' name='barButtonItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitViewControllerPreferredInterfaceOrientationForPresentation:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<retval declared_type='UIInterfaceOrientation' type='i' type64='q'/>
</method>
<method selector='splitViewControllerSupportedInterfaceOrientations:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
<method selector='springTimingParameters'>
<retval declared_type='UISpringTimingParameters * _Nullable' type='@'/>
</method>
<method selector='startAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimationAfterDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startInteractiveTransition:'>
<arg declared_type='id _Nonnull' index='0' name='transitionContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='UISpringLoadedInteractionEffectState' type='i' type64='q'/>
</method>
<method selector='stopAnimation:'>
<arg declared_type='BOOL' index='0' name='withoutFinishing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='suggestedItems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='suggestedProposal'>
<retval declared_type='UITextDropProposal * _Nonnull' type='@'/>
</method>
<method selector='systemLayoutFittingSizeDidChangeForChildContentContainer:'>
<arg declared_type='id _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBar:didBeginCustomizingItems:'>
<arg declared_type='UITabBar * _Nonnull' index='0' name='tabBar' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBar:didEndCustomizingItems:changed:'>
<arg declared_type='UITabBar * _Nonnull' index='0' name='tabBar' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='BOOL' index='2' name='changed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBar:didSelectItem:'>
<arg declared_type='UITabBar * _Nonnull' index='0' name='tabBar' type='@'/>
<arg declared_type='UITabBarItem * _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBar:willBeginCustomizingItems:'>
<arg declared_type='UITabBar * _Nonnull' index='0' name='tabBar' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBar:willEndCustomizingItems:changed:'>
<arg declared_type='UITabBar * _Nonnull' index='0' name='tabBar' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='BOOL' index='2' name='changed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBarController:animationControllerForTransitionFromViewController:toViewController:'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='fromVC' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='toVC' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tabBarController:didEndCustomizingViewControllers:changed:'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='viewControllers' type='@'/>
<arg declared_type='BOOL' index='2' name='changed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBarController:didSelectViewController:'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBarController:interactionControllerForAnimationController:'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='animationController' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tabBarController:shouldSelectViewController:'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tabBarController:willBeginCustomizingViewControllers:'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='viewControllers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBarController:willEndCustomizingViewControllers:changed:'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='viewControllers' type='@'/>
<arg declared_type='BOOL' index='2' name='changed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBarControllerPreferredInterfaceOrientationForPresentation:'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<retval declared_type='UIInterfaceOrientation' type='i' type64='q'/>
</method>
<method selector='tabBarControllerSupportedInterfaceOrientations:'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
<method selector='tableView:accessoryButtonTappedForRowWithIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:accessoryTypeForRowWithIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UITableViewCellAccessoryType' type='i' type64='q'/>
</method>
<method selector='tableView:canEditRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:canFocusRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:canHandleDropSession:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:canMoveRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:canPerformAction:forRowAtIndexPath:withSender:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='id _Nullable' index='3' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:cancelPrefetchingForRowsAtIndexPaths:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:cellForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UITableViewCell * _Nonnull' type='@'/>
</method>
<method selector='tableView:commitEditingStyle:forRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UITableViewCellEditingStyle' index='1' name='editingStyle' type='i' type64='q'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didDeselectRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didEndDisplayingCell:forRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UITableViewCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didEndDisplayingFooterView:forSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didEndDisplayingHeaderView:forSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didEndEditingRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nullable' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didHighlightRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didSelectRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didUnhighlightRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didUpdateFocusInContext:withAnimationCoordinator:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UITableViewFocusUpdateContext * _Nonnull' index='1' name='context' type='@'/>
<arg declared_type='UIFocusAnimationCoordinator * _Nonnull' index='2' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:dragPreviewParametersForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</method>
<method selector='tableView:dragSessionAllowsMoveOperation:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:dragSessionDidEnd:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:dragSessionIsRestrictedToDraggingApplication:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:dragSessionWillBegin:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:dropPreviewParametersForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</method>
<method selector='tableView:dropSessionDidEnd:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:dropSessionDidEnter:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:dropSessionDidExit:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:dropSessionDidUpdate:withDestinationIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nullable' index='2' name='destinationIndexPath' type='@'/>
<retval declared_type='UITableViewDropProposal * _Nonnull' type='@'/>
</method>
<method selector='tableView:editActionsForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='tableView:editingStyleForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UITableViewCellEditingStyle' type='i' type64='q'/>
</method>
<method selector='tableView:estimatedHeightForFooterInSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:estimatedHeightForHeaderInSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:estimatedHeightForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:heightForFooterInSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:heightForHeaderInSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:heightForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:indentationLevelForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tableView:itemsForAddingToDragSession:atIndexPath:point:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='CGPoint' index='3' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tableView:itemsForBeginningDragSession:atIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UISwipeActionsConfiguration * _Nullable' type='@'/>
</method>
<method selector='tableView:moveRowAtIndexPath:toIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='destinationIndexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:numberOfRowsInSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tableView:performAction:forRowAtIndexPath:withSender:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='id _Nullable' index='3' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:performDropWithCoordinator:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:prefetchRowsAtIndexPaths:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:sectionForSectionIndexTitle:atIndex:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='title' type='@'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tableView:shouldHighlightRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldIndentWhileEditingRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldShowMenuForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldSpringLoadRowAtIndexPath:withContext:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldUpdateFocusInContext:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UITableViewFocusUpdateContext * _Nonnull' index='1' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='proposedDestinationIndexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nonnull' type='@'/>
</method>
<method selector='tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tableView:titleForFooterInSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tableView:titleForHeaderInSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UISwipeActionsConfiguration * _Nullable' type='@'/>
</method>
<method selector='tableView:viewForFooterInSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='tableView:viewForHeaderInSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='tableView:willBeginEditingRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:willDeselectRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='tableView:willDisplayCell:forRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UITableViewCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:willDisplayFooterView:forSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:willDisplayHeaderView:forSection:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:willSelectRowAtIndexPath:'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='targetDisplayModeForActionInSplitViewController:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<retval declared_type='UISplitViewControllerDisplayMode' type='i' type64='q'/>
</method>
<method selector='targetItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='targetTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='targetView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='textContentType'>
<retval declared_type='UITextContentType _Null_unspecified' type='@'/>
</method>
<method selector='textDidChange:'>
<arg declared_type='id _Nullable' index='0' name='textInput' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDragDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='textDragInteraction'>
<retval declared_type='UIDragInteraction * _Nullable' type='@'/>
</method>
<method selector='textDragOptions'>
<retval declared_type='UITextDragOptions' type='i' type64='q'/>
</method>
<method selector='textDraggableView:dragPreviewForLiftingItem:session:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDraggableView' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='session' type='@'/>
<retval declared_type='UITargetedDragPreview * _Nullable' type='@'/>
</method>
<method selector='textDraggableView:dragSessionDidEnd:withOperation:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDraggableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='UIDropOperation' index='2' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDraggableView:dragSessionWillBegin:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDraggableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDraggableView:itemsForDrag:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDraggableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='dragRequest' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textDraggableView:willAnimateLiftWithAnimator:session:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDraggableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='animator' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDropDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='textDropInteraction'>
<retval declared_type='UIDropInteraction * _Nullable' type='@'/>
</method>
<method selector='textDroppableView:dropSessionDidEnd:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDroppableView:dropSessionDidEnter:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDroppableView:dropSessionDidExit:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDroppableView:dropSessionDidUpdate:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDroppableView:previewForDroppingAllItemsWithDefault:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='UITargetedDragPreview * _Nonnull' index='1' name='defaultPreview' type='@'/>
<retval declared_type='UITargetedDragPreview * _Nullable' type='@'/>
</method>
<method selector='textDroppableView:proposalForDrop:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='drop' type='@'/>
<retval declared_type='UITextDropProposal * _Nonnull' type='@'/>
</method>
<method selector='textDroppableView:willBecomeEditableForDrop:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='drop' type='@'/>
<retval declared_type='UITextDropEditability' type='I' type64='Q'/>
</method>
<method selector='textDroppableView:willPerformDrop:'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='drop' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textField:shouldChangeCharactersInRange:replacementString:'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='2' name='string' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textFieldDidBeginEditing:'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textFieldDidEndEditing:'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textFieldDidEndEditing:reason:'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<arg declared_type='UITextFieldDidEndEditingReason' index='1' name='reason' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textFieldShouldBeginEditing:'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textFieldShouldClear:'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textFieldShouldEndEditing:'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textFieldShouldReturn:'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textForGuidedAccessRestrictionWithIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='restrictionIdentifier' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='textInRange:'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='textInputView'>
<retval declared_type='__kindof UIView * _Nonnull' type='@'/>
</method>
<method selector='textPasteConfigurationSupporting:combineItemAttributedStrings:forRange:'>
<arg declared_type='id _Nonnull' index='0' name='textPasteConfigurationSupporting' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='itemStrings' type='@'/>
<arg declared_type='UITextRange * _Nonnull' index='2' name='textRange' type='@'/>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='textPasteConfigurationSupporting:performPasteOfAttributedString:toRange:'>
<arg declared_type='id _Nonnull' index='0' name='textPasteConfigurationSupporting' type='@'/>
<arg declared_type='NSAttributedString * _Nonnull' index='1' name='attributedString' type='@'/>
<arg declared_type='UITextRange * _Nonnull' index='2' name='textRange' type='@'/>
<retval declared_type='UITextRange * _Nonnull' type='@'/>
</method>
<method selector='textPasteConfigurationSupporting:shouldAnimatePasteOfAttributedString:toRange:'>
<arg declared_type='id _Nonnull' index='0' name='textPasteConfigurationSupporting' type='@'/>
<arg declared_type='NSAttributedString * _Nonnull' index='1' name='attributedString' type='@'/>
<arg declared_type='UITextRange * _Nonnull' index='2' name='textRange' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textPasteConfigurationSupporting:transformPasteItem:'>
<arg declared_type='id _Nonnull' index='0' name='textPasteConfigurationSupporting' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textRangeFromPosition:toPosition:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='fromPosition' type='@'/>
<arg declared_type='UITextPosition * _Nonnull' index='1' name='toPosition' type='@'/>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
<method selector='textStorage:didProcessEditing:range:changeInLength:'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='textStorage' type='@'/>
<arg declared_type='NSTextStorageEditActions' index='1' name='editedMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='editedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='3' name='delta' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textStorage:willProcessEditing:range:changeInLength:'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='textStorage' type='@'/>
<arg declared_type='NSTextStorageEditActions' index='1' name='editedMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='editedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='3' name='delta' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textStylingAtPosition:inDirection:'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextStorageDirection' index='1' name='direction' type='i' type64='q'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='textView:shouldChangeTextInRange:replacementText:'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='2' name='text' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldInteractWithTextAttachment:inRange:'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSTextAttachment * _Nonnull' index='1' name='textAttachment' type='@'/>
<arg declared_type='NSRange' index='2' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldInteractWithTextAttachment:inRange:interaction:'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSTextAttachment * _Nonnull' index='1' name='textAttachment' type='@'/>
<arg declared_type='NSRange' index='2' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='UITextItemInteraction' index='3' name='interaction' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldInteractWithURL:inRange:'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='URL' type='@'/>
<arg declared_type='NSRange' index='2' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldInteractWithURL:inRange:interaction:'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='URL' type='@'/>
<arg declared_type='NSRange' index='2' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='UITextItemInteraction' index='3' name='interaction' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textViewDidBeginEditing:'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textViewDidChange:'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textViewDidChangeSelection:'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textViewDidEndEditing:'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textViewShouldBeginEditing:'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textViewShouldEndEditing:'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textWillChange:'>
<arg declared_type='id _Nullable' index='0' name='textInput' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timingCurveType'>
<retval declared_type='UITimingCurveType' type='i' type64='q'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='toggleBoldface:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleItalics:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleUnderline:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tokenizer'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='topAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='traitCollection'>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method selector='traitCollectionDidChange:'>
<arg declared_type='UITraitCollection * _Nullable' index='0' name='previousTraitCollection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='transitionDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='transitionDuration:'>
<arg declared_type='id _Nullable' index='0' name='transitionContext' type='@'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='transitionWasCancelled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unmarkText'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateFloatingCursorAtPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateFocusIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateInteractiveTransition:'>
<arg declared_type='CGFloat' index='0' name='percentComplete' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateSearchResultsForSearchController:'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoEditorController:didFailWithError:'>
<arg declared_type='UIVideoEditorController * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoEditorController:didSaveEditedVideoToPath:'>
<arg declared_type='UIVideoEditorController * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='editedVideoPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoEditorControllerDidCancel:'>
<arg declared_type='UIVideoEditorController * _Nonnull' index='0' name='editor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='__kindof UIView * _Nullable' type='@'/>
</method>
<method selector='viewControllerForKey:'>
<arg declared_type='UITransitionContextViewControllerKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='__kindof UIViewController * _Nullable' type='@'/>
</method>
<method class_method='true' selector='viewControllerWithRestorationIdentifierPath:coder:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='identifierComponents' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='viewForKey:'>
<arg declared_type='UITransitionContextViewKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='__kindof UIView * _Nullable' type='@'/>
</method>
<method selector='viewForZoomingInScrollView:'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='viewWillTransitionToSize:withTransitionCoordinator:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='id _Nonnull' index='1' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='visibleSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='wantsInteractiveStart'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='webView:didFailLoadWithError:'>
<arg declared_type='UIWebView * _Nonnull' index='0' name='webView' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webView:shouldStartLoadWithRequest:navigationType:'>
<arg declared_type='UIWebView * _Nonnull' index='0' name='webView' type='@'/>
<arg declared_type='NSURLRequest * _Nonnull' index='1' name='request' type='@'/>
<arg declared_type='UIWebViewNavigationType' index='2' name='navigationType' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='webViewDidFinishLoad:'>
<arg declared_type='UIWebView * _Nonnull' index='0' name='webView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webViewDidStartLoad:'>
<arg declared_type='UIWebView * _Nonnull' index='0' name='webView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willDismissSearchController:'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willMoveToView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willPresentActionSheet:'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willPresentAlertView:'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willPresentSearchController:'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willTransitionToTraitCollection:withTransitionCoordinator:'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='newCollection' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window'>
<retval declared_type='UIWindow * _Nullable' type='@'/>
</method>
</class>
<class name='NSParagraphStyle'>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type='NSWritingDirection' type='i' type64='q'/>
</method>
<method class_method='true' selector='defaultParagraphStyle'>
<retval declared_type='NSParagraphStyle * _Nonnull' type='@'/>
</method>
<method selector='defaultTabInterval'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='defaultWritingDirectionForLanguage:'>
<arg declared_type='NSString * _Nullable' index='0' name='languageName' type='@'/>
<retval declared_type='NSWritingDirection' type='i' type64='q'/>
</method>
<method selector='firstLineHeadIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='headIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='i' type64='q'/>
</method>
<method selector='lineHeightMultiple'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='lineSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='maximumLineHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumLineHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tabStops'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tailIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSShadow'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='setShadowBlurRadius:'>
<arg declared_type='CGFloat' index='0' name='shadowBlurRadius' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type='id _Nullable' index='0' name='shadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowOffset:'>
<arg declared_type='CGSize' index='0' name='shadowOffset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowBlurRadius'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='shadowColor'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='shadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSString'>
<method selector='boundingRectWithSize:options:attributes:context:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='attributes' type='@'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='3' name='context' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='1' name='width' type='f' type64='d'/>
<arg declared_type='UIFont*' index='2' name='font' type='@'/>
<arg declared_type='CGFloat' index='3' name='fontSize' type='f' type64='d'/>
<arg declared_type='NSLineBreakMode' index='4' name='lineBreakMode' type='i' type64='q'/>
<arg declared_type='UIBaselineAdjustment' index='5' name='baselineAdjustment' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='drawAtPoint:forWidth:withFont:lineBreakMode:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='1' name='width' type='f' type64='d'/>
<arg declared_type='UIFont*' index='2' name='font' type='@'/>
<arg declared_type='NSLineBreakMode' index='3' name='lineBreakMode' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='1' name='width' type='f' type64='d'/>
<arg declared_type='UIFont*' index='2' name='font' type='@'/>
<arg declared_type='CGFloat' index='3' name='minFontSize' type='f' type64='d'/>
<arg declared_type='CGFloat*' index='4' name='actualFontSize' type='^f' type64='^d'/>
<arg declared_type='NSLineBreakMode' index='5' name='lineBreakMode' type='i' type64='q'/>
<arg declared_type='UIBaselineAdjustment' index='6' name='baselineAdjustment' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='drawAtPoint:withAttributes:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='attrs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawAtPoint:withFont:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UIFont*' index='1' name='font' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='drawInRect:withAttributes:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='attrs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:withFont:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIFont*' index='1' name='font' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='drawInRect:withFont:lineBreakMode:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIFont*' index='1' name='font' type='@'/>
<arg declared_type='NSLineBreakMode' index='2' name='lineBreakMode' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='drawInRect:withFont:lineBreakMode:alignment:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIFont*' index='1' name='font' type='@'/>
<arg declared_type='NSLineBreakMode' index='2' name='lineBreakMode' type='i' type64='q'/>
<arg declared_type='NSTextAlignment' index='3' name='alignment' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='drawWithRect:options:attributes:context:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='attributes' type='@'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='3' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeWithAttributes:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='attrs' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sizeWithFont:'>
<arg declared_type='UIFont*' index='0' name='font' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sizeWithFont:constrainedToSize:'>
<arg declared_type='UIFont*' index='0' name='font' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sizeWithFont:constrainedToSize:lineBreakMode:'>
<arg declared_type='UIFont*' index='0' name='font' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSLineBreakMode' index='2' name='lineBreakMode' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sizeWithFont:forWidth:lineBreakMode:'>
<arg declared_type='UIFont*' index='0' name='font' type='@'/>
<arg declared_type='CGFloat' index='1' name='width' type='f' type64='d'/>
<arg declared_type='NSLineBreakMode' index='2' name='lineBreakMode' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:'>
<arg declared_type='UIFont*' index='0' name='font' type='@'/>
<arg declared_type='CGFloat' index='1' name='minFontSize' type='f' type64='d'/>
<arg declared_type='CGFloat*' index='2' name='actualFontSize' type='^f' type64='^d'/>
<arg declared_type='CGFloat' index='3' name='width' type='f' type64='d'/>
<arg declared_type='NSLineBreakMode' index='4' name='lineBreakMode' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSStringDrawingContext'>
<method selector='actualScaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='actualTrackingAdjustment'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumScaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumTrackingAdjustment'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setMinimumScaleFactor:'>
<arg declared_type='CGFloat' index='0' name='minimumScaleFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumTrackingAdjustment:'>
<arg declared_type='CGFloat' index='0' name='minimumTrackingAdjustment' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='totalBounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSTextAttachment'>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contents'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='fileType'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fileWrapper'>
<retval declared_type='NSFileWrapper * _Nullable' type='@'/>
</method>
<method selector='image'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='initWithData:ofType:'>
<arg declared_type='NSData * _Nullable' index='0' name='contentData' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='uti' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContents:'>
<arg declared_type='NSData * _Nullable' index='0' name='contents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileType:'>
<arg declared_type='NSString * _Nullable' index='0' name='fileType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileWrapper:'>
<arg declared_type='NSFileWrapper * _Nullable' index='0' name='fileWrapper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSTextContainer'>
<method selector='exclusionPaths'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='heightTracksTextView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isSimpleRectangularTextContainer'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager'>
<retval declared_type='NSLayoutManager * _Nullable' type='@'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='i' type64='q'/>
</method>
<method selector='lineFragmentPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:'>
<arg declared_type='CGRect' index='0' name='proposedRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSUInteger' index='1' name='characterIndex' type='I' type64='Q'/>
<arg declared_type='NSWritingDirection' index='2' name='baseWritingDirection' type='i' type64='q'/>
<arg declared_type='CGRect * _Nullable' index='3' name='remainingRect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='maximumNumberOfLines'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='replaceLayoutManager:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='newLayoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExclusionPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='exclusionPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightTracksTextView:'>
<arg declared_type='BOOL' index='0' name='heightTracksTextView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayoutManager:'>
<arg declared_type='NSLayoutManager * _Nullable' index='0' name='layoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type='NSLineBreakMode' index='0' name='lineBreakMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineFragmentPadding:'>
<arg declared_type='CGFloat' index='0' name='lineFragmentPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfLines:'>
<arg declared_type='NSUInteger' index='0' name='maximumNumberOfLines' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidthTracksTextView:'>
<arg declared_type='BOOL' index='0' name='widthTracksTextView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='widthTracksTextView'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSTextStorage'>
<method selector='addLayoutManager:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='aLayoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeInLength'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='edited:range:changeInLength:'>
<arg declared_type='NSTextStorageEditActions' index='0' name='editedMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='1' name='editedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='2' name='delta' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='editedMask'>
<retval declared_type='NSTextStorageEditActions' type='I' type64='Q'/>
</method>
<method selector='editedRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='ensureAttributesAreFixedInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fixesAttributesLazily'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='invalidateAttributesInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutManagers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='processEditing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLayoutManager:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='aLayoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSTextTab'>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</method>
<method class_method='true' selector='columnTerminatorsForLocale:'>
<arg declared_type='NSLocale * _Nullable' index='0' name='aLocale' type='@'/>
<retval declared_type='NSCharacterSet * _Nonnull' type='@'/>
</method>
<method selector='initWithTextAlignment:location:options:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='i' type64='q'/>
<arg declared_type='CGFloat' index='1' name='loc' type='f' type64='d'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='options' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='location'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='options'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
</class>
<class name='NSValue'>
<method selector='CGAffineTransformValue'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='CGPointValue'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='CGRectValue'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='CGSizeValue'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='CGVectorValue'>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</method>
<method selector='UIEdgeInsetsValue'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='UIOffsetValue'>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</method>
<method selector='directionalEdgeInsetsValue'>
<retval declared_type='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
</method>
<method class_method='true' selector='valueWithCGAffineTransform:'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithCGPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithCGRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithCGSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithCGVector:'>
<arg declared_type='CGVector' index='0' name='vector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithDirectionalEdgeInsets:'>
<arg declared_type='NSDirectionalEdgeInsets' index='0' name='insets' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithUIEdgeInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='insets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithUIOffset:'>
<arg declared_type='UIOffset' index='0' name='insets' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
</class>
<class name='UIAcceleration'>
<method selector='timestamp'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='x'>
<retval declared_type='UIAccelerationValue' type='d'/>
</method>
<method selector='y'>
<retval declared_type='UIAccelerationValue' type='d'/>
</method>
<method selector='z'>
<retval declared_type='UIAccelerationValue' type='d'/>
</method>
</class>
<class name='UIAccelerometer'>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='updateInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedAccelerometer'>
<retval declared_type='UIAccelerometer * _Nonnull' type='@'/>
</method>
<method selector='updateInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
</class>
<class name='UIAccessibilityCustomAction'>
<method selector='attributedName'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='initWithAttributedName:target:selector:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedName' type='@'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<arg declared_type='SEL _Nonnull' index='2' name='selector' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:target:selector:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<arg declared_type='SEL _Nonnull' index='2' name='selector' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='selector'>
<retval declared_type='SEL _Nonnull' type=':'/>
</method>
<method selector='setAttributedName:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelector:'>
<arg declared_type='SEL _Nonnull' index='0' name='selector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='UIAccessibilityCustomRotor'>
<method selector='attributedName'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='initWithAttributedName:itemSearchBlock:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedName' type='@'/>
<arg declared_type='UIAccessibilityCustomRotorSearch _Nonnull' function_pointer='true' index='1' name='itemSearchBlock' type='@?'>
<arg declared_type='UIAccessibilityCustomRotorSearchPredicate * _Nonnull' type='@'/>
<retval declared_type='UIAccessibilityCustomRotorItemResult * _Nullable' type='@'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:itemSearchBlock:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='UIAccessibilityCustomRotorSearch _Nonnull' function_pointer='true' index='1' name='itemSearchBlock' type='@?'>
<arg declared_type='UIAccessibilityCustomRotorSearchPredicate * _Nonnull' type='@'/>
<retval declared_type='UIAccessibilityCustomRotorItemResult * _Nullable' type='@'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSystemType:itemSearchBlock:'>
<arg declared_type='UIAccessibilityCustomSystemRotorType' index='0' name='type' type='i' type64='q'/>
<arg declared_type='UIAccessibilityCustomRotorSearch _Nonnull' function_pointer='true' index='1' name='itemSearchBlock' type='@?'>
<arg declared_type='UIAccessibilityCustomRotorSearchPredicate * _Nonnull' type='@'/>
<retval declared_type='UIAccessibilityCustomRotorItemResult * _Nullable' type='@'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='itemSearchBlock'>
<retval declared_type='UIAccessibilityCustomRotorSearch _Nonnull' function_pointer='true' type='@?'>
<arg declared_type='UIAccessibilityCustomRotorSearchPredicate * _Nonnull' type='@'/>
<retval declared_type='UIAccessibilityCustomRotorItemResult * _Nullable' type='@'/>
</retval>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='setAttributedName:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemSearchBlock:'>
<arg declared_type='UIAccessibilityCustomRotorSearch _Nonnull' function_pointer='true' index='0' name='itemSearchBlock' type='@?'>
<arg declared_type='UIAccessibilityCustomRotorSearchPredicate * _Nonnull' type='@'/>
<retval declared_type='UIAccessibilityCustomRotorItemResult * _Nullable' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='systemRotorType'>
<retval declared_type='UIAccessibilityCustomSystemRotorType' type='i' type64='q'/>
</method>
</class>
<class name='UIAccessibilityCustomRotorItemResult'>
<method selector='initWithTargetElement:targetRange:'>
<arg declared_type='id _Nonnull' index='0' name='targetElement' type='@'/>
<arg declared_type='UITextRange * _Nullable' index='1' name='targetRange' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setTargetElement:'>
<arg declared_type='id _Nullable' index='0' name='targetElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetRange:'>
<arg declared_type='UITextRange * _Nullable' index='0' name='targetRange' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetElement'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='targetRange'>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
</class>
<class name='UIAccessibilityCustomRotorSearchPredicate'>
<method selector='currentItem'>
<retval declared_type='UIAccessibilityCustomRotorItemResult * _Nonnull' type='@'/>
</method>
<method selector='searchDirection'>
<retval declared_type='UIAccessibilityCustomRotorDirection' type='i' type64='q'/>
</method>
<method selector='setCurrentItem:'>
<arg declared_type='UIAccessibilityCustomRotorItemResult * _Nonnull' index='0' name='currentItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchDirection:'>
<arg declared_type='UIAccessibilityCustomRotorDirection' index='0' name='searchDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIAccessibilityElement'>
<method selector='accessibilityContainer'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityFrame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityFrameInContainerSpace'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityHint'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityLabel'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityTraits'>
<retval declared_type='UIAccessibilityTraits' type='Q'/>
</method>
<method selector='accessibilityValue'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='initWithAccessibilityContainer:'>
<arg declared_type='id _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isAccessibilityElement'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAccessibilityContainer:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityContainer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFrame:'>
<arg declared_type='CGRect' index='0' name='accessibilityFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFrameInContainerSpace:'>
<arg declared_type='CGRect' index='0' name='accessibilityFrameInContainerSpace' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHint:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityHint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityTraits:'>
<arg declared_type='UIAccessibilityTraits' index='0' name='accessibilityTraits' type='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityValue:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsAccessibilityElement:'>
<arg declared_type='BOOL' index='0' name='isAccessibilityElement' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIAccessibilityLocationDescriptor'>
<method selector='attributedName'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='initWithAttributedName:point:inView:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedName' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UIView * _Nonnull' index='2' name='view' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:point:inView:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UIView * _Nonnull' index='2' name='view' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:view:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='point'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='view'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
</class>
<class name='UIActionSheet'>
<method selector='actionSheetStyle'>
<retval declared_type='UIActionSheetStyle' type='i' type64='q'/>
</method>
<method selector='addButtonWithTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='buttonTitleAtIndex:'>
<arg declared_type='NSInteger' index='0' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='cancelButtonIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='destructiveButtonIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='dismissWithClickedButtonIndex:animated:'>
<arg declared_type='NSInteger' index='0' name='buttonIndex' type='i' type64='q'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstOtherButtonIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithTitle:delegate:cancelButtonTitle:destructiveButtonTitle:otherButtonTitles:' sentinel='0' variadic='true'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='id _Nullable' index='1' name='delegate' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='cancelButtonTitle' type='@'/>
<arg declared_type='NSString * _Nullable' index='3' name='destructiveButtonTitle' type='@'/>
<arg declared_type='NSString * _Nullable' index='4' name='otherButtonTitles' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='numberOfButtons'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setActionSheetStyle:'>
<arg declared_type='UIActionSheetStyle' index='0' name='actionSheetStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCancelButtonIndex:'>
<arg declared_type='NSInteger' index='0' name='cancelButtonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestructiveButtonIndex:'>
<arg declared_type='NSInteger' index='0' name='destructiveButtonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showFromBarButtonItem:animated:'>
<arg declared_type='UIBarButtonItem * _Nonnull' index='0' name='item' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showFromRect:inView:animated:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showFromTabBar:'>
<arg declared_type='UITabBar * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showFromToolbar:'>
<arg declared_type='UIToolbar * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showInView:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='UIActivity'>
<method class_method='true' selector='activityCategory'>
<retval declared_type='UIActivityCategory' type='i' type64='q'/>
</method>
<method selector='activityDidFinish:'>
<arg declared_type='BOOL' index='0' name='completed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='activityImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='activityTitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='activityType'>
<retval declared_type='UIActivityType _Nullable' type='@'/>
</method>
<method selector='activityViewController'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='canPerformWithActivityItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='activityItems' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performActivity'>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareWithActivityItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='activityItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIActivityIndicatorView'>
<method selector='activityIndicatorViewStyle'>
<retval declared_type='UIActivityIndicatorViewStyle' type='i' type64='q'/>
</method>
<method selector='color'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='hidesWhenStopped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithActivityIndicatorStyle:'>
<arg declared_type='UIActivityIndicatorViewStyle' index='0' name='style' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActivityIndicatorViewStyle:'>
<arg declared_type='UIActivityIndicatorViewStyle' index='0' name='activityIndicatorViewStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesWhenStopped:'>
<arg declared_type='BOOL' index='0' name='hidesWhenStopped' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimating'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimating'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIActivityItemProvider'>
<method selector='activityType'>
<retval declared_type='UIActivityType _Nullable' type='@'/>
</method>
<method selector='initWithPlaceholderItem:'>
<arg declared_type='id _Nonnull' index='0' name='placeholderItem' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='item'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='placeholderItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='UIActivityViewController'>
<method selector='completionHandler'>
<retval declared_type='UIActivityViewControllerCompletionHandler _Nullable' function_pointer='true' type='@?'>
<arg declared_type='UIActivityType _Nullable' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='completionWithItemsHandler'>
<retval declared_type='UIActivityViewControllerCompletionWithItemsHandler _Nullable' function_pointer='true' type='@?'>
<arg declared_type='UIActivityType _Nullable' type='@'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSArray * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='excludedActivityTypes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='initWithActivityItems:applicationActivities:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='activityItems' type='@'/>
<arg declared_type='NSArray * _Nullable' index='1' name='applicationActivities' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setCompletionHandler:'>
<arg declared_type='UIActivityViewControllerCompletionHandler _Nullable' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='UIActivityType _Nullable' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionWithItemsHandler:'>
<arg declared_type='UIActivityViewControllerCompletionWithItemsHandler _Nullable' function_pointer='true' index='0' name='completionWithItemsHandler' type='@?'>
<arg declared_type='UIActivityType _Nullable' type='@'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSArray * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExcludedActivityTypes:'>
<arg declared_type='NSArray * _Nullable' index='0' name='excludedActivityTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIAlertAction'>
<method class_method='true' selector='actionWithTitle:style:handler:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='UIAlertActionStyle' index='1' name='style' type='i' type64='q'/>
<arg declared_type='void (^ _Nullable)(UIAlertAction * _Nonnull)' function_pointer='true' index='2' name='handler' type='@?'>
<arg declared_type='UIAlertAction * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='style'>
<retval declared_type='UIAlertActionStyle' type='i' type64='q'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='UIAlertController'>
<method selector='actions'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='addAction:'>
<arg declared_type='UIAlertAction * _Nonnull' index='0' name='action' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTextFieldWithConfigurationHandler:'>
<arg declared_type='void (^ _Nullable)(UITextField * _Nonnull)' function_pointer='true' index='0' name='configurationHandler' type='@?'>
<arg declared_type='UITextField * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='alertControllerWithTitle:message:preferredStyle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='message' type='@'/>
<arg declared_type='UIAlertControllerStyle' index='2' name='preferredStyle' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='message'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='preferredAction'>
<retval declared_type='UIAlertAction * _Nullable' type='@'/>
</method>
<method selector='preferredStyle'>
<retval declared_type='UIAlertControllerStyle' type='i' type64='q'/>
</method>
<method selector='setMessage:'>
<arg declared_type='NSString * _Nullable' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredAction:'>
<arg declared_type='UIAlertAction * _Nullable' index='0' name='preferredAction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textFields'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='UIAlertView'>
<method selector='addButtonWithTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='alertViewStyle'>
<retval declared_type='UIAlertViewStyle' type='i' type64='q'/>
</method>
<method selector='buttonTitleAtIndex:'>
<arg declared_type='NSInteger' index='0' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='cancelButtonIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dismissWithClickedButtonIndex:animated:'>
<arg declared_type='NSInteger' index='0' name='buttonIndex' type='i' type64='q'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstOtherButtonIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:' sentinel='0' variadic='true'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='message' type='@'/>
<arg declared_type='id _Nullable' index='2' name='delegate' type='@'/>
<arg declared_type='NSString * _Nullable' index='3' name='cancelButtonTitle' type='@'/>
<arg declared_type='NSString * _Nullable' index='4' name='otherButtonTitles' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='message'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='numberOfButtons'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAlertViewStyle:'>
<arg declared_type='UIAlertViewStyle' index='0' name='alertViewStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCancelButtonIndex:'>
<arg declared_type='NSInteger' index='0' name='cancelButtonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessage:'>
<arg declared_type='NSString * _Nullable' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='show'>
<retval declared_type='void' type='v'/>
</method>
<method selector='textFieldAtIndex:'>
<arg declared_type='NSInteger' index='0' name='textFieldIndex' type='i' type64='q'/>
<retval declared_type='UITextField * _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='UIApplication'>
<method selector='alternateIconName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='applicationIconBadgeNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='applicationState'>
<retval declared_type='UIApplicationState' type='i' type64='q'/>
</method>
<method selector='applicationSupportsShakeToEdit'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundRefreshStatus'>
<retval declared_type='UIBackgroundRefreshStatus' type='i' type64='q'/>
</method>
<method selector='backgroundTimeRemaining'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='beginBackgroundTaskWithExpirationHandler:'>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='0' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='UIBackgroundTaskIdentifier' type='I' type64='Q'/>
</method>
<method selector='beginBackgroundTaskWithName:expirationHandler:'>
<arg declared_type='NSString * _Nullable' index='0' name='taskName' type='@'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='1' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='UIBackgroundTaskIdentifier' type='I' type64='Q'/>
</method>
<method selector='beginIgnoringInteractionEvents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginReceivingRemoteControlEvents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='canOpenURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelAllLocalNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelLocalNotification:'>
<arg declared_type='UILocalNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearKeepAliveTimeout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='completeStateRestoration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentUserNotificationSettings'>
<retval declared_type='UIUserNotificationSettings * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='enabledRemoteNotificationTypes'>
<retval declared_type='UIRemoteNotificationType' type='I' type64='Q'/>
</method>
<method selector='endBackgroundTask:'>
<arg declared_type='UIBackgroundTaskIdentifier' index='0' name='identifier' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endIgnoringInteractionEvents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endReceivingRemoteControlEvents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='extendStateRestoration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='ignoreSnapshotOnNextApplicationLaunch'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isIdleTimerDisabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isIgnoringInteractionEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isProtectedDataAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isProximitySensingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRegisteredForRemoteNotifications'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isStatusBarHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyWindow'>
<retval declared_type='UIWindow * _Nullable' type='@'/>
</method>
<method selector='openURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openURL:options:completionHandler:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='preferredContentSizeCategory'>
<retval declared_type='UIContentSizeCategory _Nonnull' type='@'/>
</method>
<method selector='presentLocalNotificationNow:'>
<arg declared_type='UILocalNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerForRemoteNotificationTypes:'>
<arg declared_type='UIRemoteNotificationType' index='0' name='types' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerForRemoteNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='registerObjectForStateRestoration:restorationIdentifier:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='restorationIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerUserNotificationSettings:'>
<arg declared_type='UIUserNotificationSettings * _Nonnull' index='0' name='notificationSettings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleLocalNotification:'>
<arg declared_type='UILocalNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduledLocalNotifications'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='sendAction:to:from:forEvent:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<arg declared_type='id _Nullable' index='2' name='sender' type='@'/>
<arg declared_type='UIEvent * _Nullable' index='3' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sendEvent:'>
<arg declared_type='UIEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternateIconName:completionHandler:'>
<arg declared_type='NSString * _Nullable' index='0' name='alternateIconName' type='@'/>
<arg declared_type='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setApplicationIconBadgeNumber:'>
<arg declared_type='NSInteger' index='0' name='applicationIconBadgeNumber' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setApplicationSupportsShakeToEdit:'>
<arg declared_type='BOOL' index='0' name='applicationSupportsShakeToEdit' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdleTimerDisabled:'>
<arg declared_type='BOOL' index='0' name='idleTimerDisabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeepAliveTimeout:handler:'>
<arg declared_type='NSTimeInterval' index='0' name='timeout' type='d'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='1' name='keepAliveHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setMinimumBackgroundFetchInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='minimumBackgroundFetchInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNetworkActivityIndicatorVisible:'>
<arg declared_type='BOOL' index='0' name='networkActivityIndicatorVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNewsstandIconImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProximitySensingEnabled:'>
<arg declared_type='BOOL' index='0' name='proximitySensingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScheduledLocalNotifications:'>
<arg declared_type='NSArray * _Nullable' index='0' name='scheduledLocalNotifications' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShortcutItems:'>
<arg declared_type='NSArray * _Nullable' index='0' name='shortcutItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatusBarHidden:'>
<arg declared_type='BOOL' index='0' name='statusBarHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatusBarHidden:animated:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatusBarHidden:withAnimation:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<arg declared_type='UIStatusBarAnimation' index='1' name='animation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatusBarOrientation:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='statusBarOrientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatusBarOrientation:animated:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='interfaceOrientation' type='i' type64='q'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatusBarStyle:'>
<arg declared_type='UIStatusBarStyle' index='0' name='statusBarStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatusBarStyle:animated:'>
<arg declared_type='UIStatusBarStyle' index='0' name='statusBarStyle' type='i' type64='q'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedApplication'>
<retval declared_type='UIApplication * _Nonnull' type='@'/>
</method>
<method selector='shortcutItems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='statusBarFrame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='statusBarOrientation'>
<retval declared_type='UIInterfaceOrientation' type='i' type64='q'/>
</method>
<method selector='statusBarOrientationAnimationDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='statusBarStyle'>
<retval declared_type='UIStatusBarStyle' type='i' type64='q'/>
</method>
<method selector='supportedInterfaceOrientationsForWindow:'>
<arg declared_type='UIWindow * _Nullable' index='0' name='window' type='@'/>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
<method selector='supportsAlternateIcons'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unregisterForRemoteNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type='UIUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
<method selector='windows'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='UIApplicationShortcutIcon'>
<method class_method='true' selector='iconWithTemplateImageName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='templateImageName' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='iconWithType:'>
<arg declared_type='UIApplicationShortcutIconType' index='0' name='type' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UIApplicationShortcutItem'>
<method selector='icon'>
<retval declared_type='UIApplicationShortcutIcon * _Nullable' type='@'/>
</method>
<method selector='initWithType:localizedTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='type' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='localizedTitle' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithType:localizedTitle:localizedSubtitle:icon:userInfo:'>
<arg declared_type='NSString * _Nonnull' index='0' name='type' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='localizedTitle' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='localizedSubtitle' type='@'/>
<arg declared_type='UIApplicationShortcutIcon * _Nullable' index='3' name='icon' type='@'/>
<arg declared_type='NSDictionary&gt; * _Nullable' index='4' name='userInfo' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='localizedSubtitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='localizedTitle'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='type'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary&gt; * _Nullable' type='@'/>
</method>
</class>
<class name='UIAttachmentBehavior'>
<method selector='anchorPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='attachedBehaviorType'>
<retval declared_type='UIAttachmentBehaviorType' type='i' type64='q'/>
</method>
<method selector='attachmentRange'>
<retval declared_type='UIFloatRange' type='{_UIFloatRange=ff}' type64='{_UIFloatRange=dd}'/>
</method>
<method selector='damping'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='fixedAttachmentWithItem:attachedToItem:attachmentAnchor:'>
<arg declared_type='id _Nonnull' index='0' name='item1' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item2' type='@'/>
<arg declared_type='CGPoint' index='2' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='frequency'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='frictionTorque'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='initWithItem:attachedToAnchor:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithItem:attachedToItem:'>
<arg declared_type='id _Nonnull' index='0' name='item1' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item2' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithItem:offsetFromCenter:attachedToAnchor:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<arg declared_type='UIOffset' index='1' name='offset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<arg declared_type='CGPoint' index='2' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:'>
<arg declared_type='id _Nonnull' index='0' name='item1' type='@'/>
<arg declared_type='UIOffset' index='1' name='offset1' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<arg declared_type='id _Nonnull' index='2' name='item2' type='@'/>
<arg declared_type='UIOffset' index='3' name='offset2' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='items'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='length'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='limitAttachmentWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:'>
<arg declared_type='id _Nonnull' index='0' name='item1' type='@'/>
<arg declared_type='UIOffset' index='1' name='offset1' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<arg declared_type='id _Nonnull' index='2' name='item2' type='@'/>
<arg declared_type='UIOffset' index='3' name='offset2' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='pinAttachmentWithItem:attachedToItem:attachmentAnchor:'>
<arg declared_type='id _Nonnull' index='0' name='item1' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item2' type='@'/>
<arg declared_type='CGPoint' index='2' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAnchorPoint:'>
<arg declared_type='CGPoint' index='0' name='anchorPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttachmentRange:'>
<arg declared_type='UIFloatRange' index='0' name='attachmentRange' type='{_UIFloatRange=ff}' type64='{_UIFloatRange=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDamping:'>
<arg declared_type='CGFloat' index='0' name='damping' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrequency:'>
<arg declared_type='CGFloat' index='0' name='frequency' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrictionTorque:'>
<arg declared_type='CGFloat' index='0' name='frictionTorque' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLength:'>
<arg declared_type='CGFloat' index='0' name='length' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='slidingAttachmentWithItem:attachedToItem:attachmentAnchor:axisOfTranslation:'>
<arg declared_type='id _Nonnull' index='0' name='item1' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item2' type='@'/>
<arg declared_type='CGPoint' index='2' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGVector' index='3' name='axis' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='slidingAttachmentWithItem:attachmentAnchor:axisOfTranslation:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGVector' index='2' name='axis' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UIBarButtonItem'>
<method selector='action'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='backButtonBackgroundImageForState:barMetrics:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:'>
<arg declared_type='UIBarMetrics' index='0' name='barMetrics' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='backButtonTitlePositionAdjustmentForBarMetrics:'>
<arg declared_type='UIBarMetrics' index='0' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</method>
<method selector='backgroundImageForState:barMetrics:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='backgroundImageForState:style:barMetrics:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='UIBarButtonItemStyle' index='1' name='style' type='i' type64='q'/>
<arg declared_type='UIBarMetrics' index='2' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='backgroundVerticalPositionAdjustmentForBarMetrics:'>
<arg declared_type='UIBarMetrics' index='0' name='barMetrics' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='buttonGroup'>
<retval declared_type='UIBarButtonItemGroup * _Nullable' type='@'/>
</method>
<method selector='customView'>
<retval declared_type='__kindof UIView * _Nullable' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithBarButtonSystemItem:target:action:'>
<arg declared_type='UIBarButtonSystemItem' index='0' name='systemItem' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='2' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithCustomView:'>
<arg declared_type='UIView * _Nonnull' index='0' name='customView' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithImage:landscapeImagePhone:style:target:action:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIImage * _Nullable' index='1' name='landscapeImagePhone' type='@'/>
<arg declared_type='UIBarButtonItemStyle' index='2' name='style' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='3' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='4' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithImage:style:target:action:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIBarButtonItemStyle' index='1' name='style' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='2' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTitle:style:target:action:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='UIBarButtonItemStyle' index='1' name='style' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='2' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='possibleTitles'>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nullable' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackButtonBackgroundImage:forState:barMetrics:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIBarMetrics' index='2' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackButtonBackgroundVerticalPositionAdjustment:forBarMetrics:'>
<arg declared_type='CGFloat' index='0' name='adjustment' type='f' type64='d'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackButtonTitlePositionAdjustment:forBarMetrics:'>
<arg declared_type='UIOffset' index='0' name='adjustment' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImage:forState:barMetrics:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIBarMetrics' index='2' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImage:forState:style:barMetrics:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIBarButtonItemStyle' index='2' name='style' type='i' type64='q'/>
<arg declared_type='UIBarMetrics' index='3' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundVerticalPositionAdjustment:forBarMetrics:'>
<arg declared_type='CGFloat' index='0' name='adjustment' type='f' type64='d'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomView:'>
<arg declared_type='__kindof UIView * _Nullable' index='0' name='customView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPossibleTitles:'>
<arg declared_type='NSSet * _Nullable' index='0' name='possibleTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyle:'>
<arg declared_type='UIBarButtonItemStyle' index='0' name='style' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitlePositionAdjustment:forBarMetrics:'>
<arg declared_type='UIOffset' index='0' name='adjustment' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='style'>
<retval declared_type='UIBarButtonItemStyle' type='i' type64='q'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='titlePositionAdjustmentForBarMetrics:'>
<arg declared_type='UIBarMetrics' index='0' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='UIBarButtonItemGroup'>
<method selector='barButtonItems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithBarButtonItems:representativeItem:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='barButtonItems' type='@'/>
<arg declared_type='UIBarButtonItem * _Nullable' index='1' name='representativeItem' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isDisplayingRepresentativeItem'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='representativeItem'>
<retval declared_type='UIBarButtonItem * _Nullable' type='@'/>
</method>
<method selector='setBarButtonItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='barButtonItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentativeItem:'>
<arg declared_type='UIBarButtonItem * _Nullable' index='0' name='representativeItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIBarItem'>
<method selector='image'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='imageInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='landscapeImagePhone'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='landscapeImagePhoneInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='largeContentSizeImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='largeContentSizeImageInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='imageInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLandscapeImagePhone:'>
<arg declared_type='UIImage * _Nullable' index='0' name='landscapeImagePhone' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLandscapeImagePhoneInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='landscapeImagePhoneInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLargeContentSizeImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='largeContentSizeImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLargeContentSizeImageInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='largeContentSizeImageInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleTextAttributes:forState:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='attributes' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='titleTextAttributesForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
</class>
<class name='UIBezierPath'>
<method selector='CGPath'>
<retval declared_type='CGPathRef _Nonnull' type='^{CGPath=}'/>
</method>
<method selector='addArcWithCenter:radius:startAngle:endAngle:clockwise:'>
<arg declared_type='CGPoint' index='0' name='center' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='1' name='radius' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='startAngle' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='endAngle' type='f' type64='d'/>
<arg declared_type='BOOL' index='4' name='clockwise' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addClip'>
<retval declared_type='void' type='v'/>
</method>
<method selector='addCurveToPoint:controlPoint1:controlPoint2:'>
<arg declared_type='CGPoint' index='0' name='endPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='controlPoint1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='2' name='controlPoint2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addLineToPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addQuadCurveToPoint:controlPoint:'>
<arg declared_type='CGPoint' index='0' name='endPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='controlPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPath:'>
<arg declared_type='UIBezierPath * _Nonnull' index='0' name='bezierPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyTransform:'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bezierPath'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='bezierPathByReversingPath'>
<retval declared_type='UIBezierPath * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:'>
<arg declared_type='CGPoint' index='0' name='center' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='1' name='radius' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='startAngle' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='endAngle' type='f' type64='d'/>
<arg declared_type='BOOL' index='4' name='clockwise' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithCGPath:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='CGPath' type='^{CGPath=}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithOvalInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIRectCorner' index='1' name='corners' type='I' type64='Q'/>
<arg declared_type='CGSize' index='2' name='cornerRadii' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithRoundedRect:cornerRadius:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat' index='1' name='cornerRadius' type='f' type64='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='closePath'>
<retval declared_type='void' type='v'/>
</method>
<method selector='containsPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='fill'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillWithBlendMode:alpha:'>
<arg declared_type='CGBlendMode' index='0' name='blendMode' type='i'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flatness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='getLineDash:count:phase:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='pattern' type='^f' type64='^d'/>
<arg declared_type='NSInteger * _Nullable' index='1' name='count' type='^i' type64='^q'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='phase' type='^f' type64='^d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lineCapStyle'>
<retval declared_type='CGLineCap' type='i'/>
</method>
<method selector='lineJoinStyle'>
<retval declared_type='CGLineJoin' type='i'/>
</method>
<method selector='lineWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='miterLimit'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='moveToPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllPoints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCGPath:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='CGPath' type='^{CGPath=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlatness:'>
<arg declared_type='CGFloat' index='0' name='flatness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineCapStyle:'>
<arg declared_type='CGLineCap' index='0' name='lineCapStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineDash:count:phase:'>
<arg const='true' declared_type='CGFloat * _Nullable' index='0' name='pattern' type='^f' type64='^d'/>
<arg declared_type='NSInteger' index='1' name='count' type='i' type64='q'/>
<arg declared_type='CGFloat' index='2' name='phase' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineJoinStyle:'>
<arg declared_type='CGLineJoin' index='0' name='lineJoinStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type='CGFloat' index='0' name='lineWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiterLimit:'>
<arg declared_type='CGFloat' index='0' name='miterLimit' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesEvenOddFillRule:'>
<arg declared_type='BOOL' index='0' name='usesEvenOddFillRule' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stroke'>
<retval declared_type='void' type='v'/>
</method>
<method selector='strokeWithBlendMode:alpha:'>
<arg declared_type='CGBlendMode' index='0' name='blendMode' type='i'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesEvenOddFillRule'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIBlurEffect'>
<method class_method='true' selector='effectWithStyle:'>
<arg declared_type='UIBlurEffectStyle' index='0' name='style' type='i' type64='q'/>
<retval declared_type='UIBlurEffect * _Nonnull' type='@'/>
</method>
</class>
<class name='UIButton'>
<method selector='adjustsImageWhenDisabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='adjustsImageWhenHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributedTitleForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='backgroundImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='backgroundRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='buttonType'>
<retval declared_type='UIButtonType' type='i' type64='q'/>
</method>
<method class_method='true' selector='buttonWithType:'>
<arg declared_type='UIButtonType' index='0' name='buttonType' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='contentEdgeInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='contentRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='currentAttributedTitle'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='currentBackgroundImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='currentImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='currentTitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='currentTitleColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='currentTitleShadowColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='font'>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='imageEdgeInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='imageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='imageRectForContentRect:'>
<arg declared_type='CGRect' index='0' name='contentRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageView'>
<retval declared_type='UIImageView * _Nullable' type='@'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='i' type64='q'/>
</method>
<method selector='reversesTitleShadowWhenHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAdjustsImageWhenDisabled:'>
<arg declared_type='BOOL' index='0' name='adjustsImageWhenDisabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAdjustsImageWhenHighlighted:'>
<arg declared_type='BOOL' index='0' name='adjustsImageWhenHighlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedTitle:forState:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImage:forState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentEdgeInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='contentEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='UIFont * _Nonnull' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:forState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageEdgeInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='imageEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type='NSLineBreakMode' index='0' name='lineBreakMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReversesTitleShadowWhenHighlighted:'>
<arg declared_type='BOOL' index='0' name='reversesTitleShadowWhenHighlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsTouchWhenHighlighted:'>
<arg declared_type='BOOL' index='0' name='showsTouchWhenHighlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:forState:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleColor:forState:'>
<arg declared_type='UIColor * _Nullable' index='0' name='color' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleEdgeInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='titleEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleShadowColor:forState:'>
<arg declared_type='UIColor * _Nullable' index='0' name='color' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleShadowOffset:'>
<arg declared_type='CGSize' index='0' name='titleShadowOffset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsTouchWhenHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='titleColorForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='titleEdgeInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='titleForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='titleLabel'>
<retval declared_type='UILabel * _Nullable' type='@'/>
</method>
<method selector='titleRectForContentRect:'>
<arg declared_type='CGRect' index='0' name='contentRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='titleShadowColorForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='titleShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='UICloudSharingController'>
<method selector='activityItemSource'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='availablePermissions'>
<retval declared_type='UICloudSharingPermissionOptions' type='I' type64='Q'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithPreparationHandler:'>
<arg declared_type='void (^ _Nonnull)(UICloudSharingController * _Nonnull, void (^ _Nonnull)(CKShare * _Nullable, CKContainer * _Nullable, NSError * _Nullable))' function_pointer='true' index='0' name='preparationHandler' type='@?'>
<arg declared_type='UICloudSharingController * _Nonnull' type='@'/>
<arg declared_type='void (^ _Nonnull)(CKShare * _Nullable, CKContainer * _Nullable, NSError * _Nullable)' function_pointer='true' type='@?'>
<arg declared_type='CKShare * _Nullable' type='@'/>
<arg declared_type='CKContainer * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithShare:container:'>
<arg declared_type='CKShare * _Nonnull' index='0' name='share' type='@'/>
<arg declared_type='CKContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAvailablePermissions:'>
<arg declared_type='UICloudSharingPermissionOptions' index='0' name='availablePermissions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='share'>
<retval declared_type='CKShare * _Nullable' type='@'/>
</method>
</class>
<class name='UICollectionReusableView'>
<method selector='applyLayoutAttributes:'>
<arg declared_type='UICollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didTransitionFromLayout:toLayout:'>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='0' name='oldLayout' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='newLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preferredLayoutAttributesFittingAttributes:'>
<arg declared_type='UICollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nonnull' type='@'/>
</method>
<method selector='prepareForReuse'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reuseIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='willTransitionFromLayout:toLayout:'>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='0' name='oldLayout' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='newLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UICollectionView'>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='beginInteractiveMovementForItemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelInteractiveMovement'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelInteractiveTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cellForItemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='UICollectionViewCell * _Nullable' type='@'/>
</method>
<method selector='collectionViewLayout'>
<retval declared_type='UICollectionViewLayout * _Nonnull' type='@'/>
</method>
<method selector='dataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deleteItemsAtIndexPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteSections:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='sections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dequeueReusableCellWithReuseIdentifier:forIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='__kindof UICollectionViewCell * _Nonnull' type='@'/>
</method>
<method selector='dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='identifier' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='__kindof UICollectionReusableView * _Nonnull' type='@'/>
</method>
<method selector='deselectItemAtIndexPath:animated:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dragInteractionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dropDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='endInteractiveMovement'>
<retval declared_type='void' type='v'/>
</method>
<method selector='finishInteractiveTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasActiveDrag'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasActiveDrop'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasUncommittedUpdates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='indexPathForCell:'>
<arg declared_type='UICollectionViewCell * _Nonnull' index='0' name='cell' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexPathForItemAtPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexPathsForSelectedItems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='indexPathsForVisibleItems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='indexPathsForVisibleSupplementaryElementsOfKind:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:collectionViewLayout:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='layout' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertItemsAtIndexPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertSections:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='sections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isPrefetchingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutAttributesForItemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='kind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='moveItemAtIndexPath:toIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='newIndexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveSection:toSection:'>
<arg declared_type='NSInteger' index='0' name='section' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='newSection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfItemsInSection:'>
<arg declared_type='NSInteger' index='0' name='section' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfSections'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='performBatchUpdates:completion:'>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='0' name='updates' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='prefetchDataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='registerClass:forCellWithReuseIdentifier:'>
<arg declared_type='Class _Nullable' index='0' name='cellClass' type='#'/>
<arg declared_type='NSString * _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerClass:forSupplementaryViewOfKind:withReuseIdentifier:'>
<arg declared_type='Class _Nullable' index='0' name='viewClass' type='#'/>
<arg declared_type='NSString * _Nonnull' index='1' name='elementKind' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerNib:forCellWithReuseIdentifier:'>
<arg declared_type='UINib * _Nullable' index='0' name='nib' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerNib:forSupplementaryViewOfKind:withReuseIdentifier:'>
<arg declared_type='UINib * _Nullable' index='0' name='nib' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='kind' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadItemsAtIndexPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadSections:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='sections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='remembersLastFocusedIndexPath'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reorderingCadence'>
<retval declared_type='UICollectionViewReorderingCadence' type='i' type64='q'/>
</method>
<method selector='scrollToItemAtIndexPath:atScrollPosition:animated:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<arg declared_type='UICollectionViewScrollPosition' index='1' name='scrollPosition' type='I' type64='Q'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItemAtIndexPath:animated:scrollPosition:'>
<arg declared_type='NSIndexPath * _Nullable' index='0' name='indexPath' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='UICollectionViewScrollPosition' index='2' name='scrollPosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type='BOOL' index='0' name='allowsMultipleSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsSelection:'>
<arg declared_type='BOOL' index='0' name='allowsSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='UIView * _Nullable' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollectionViewLayout:'>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='0' name='collectionViewLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollectionViewLayout:animated:'>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='0' name='layout' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollectionViewLayout:animated:completion:'>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='0' name='layout' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id _Nullable' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDragDelegate:'>
<arg declared_type='id _Nullable' index='0' name='dragDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDragInteractionEnabled:'>
<arg declared_type='BOOL' index='0' name='dragInteractionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDropDelegate:'>
<arg declared_type='id _Nullable' index='0' name='dropDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrefetchDataSource:'>
<arg declared_type='id _Nullable' index='0' name='prefetchDataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrefetchingEnabled:'>
<arg declared_type='BOOL' index='0' name='prefetchingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemembersLastFocusedIndexPath:'>
<arg declared_type='BOOL' index='0' name='remembersLastFocusedIndexPath' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReorderingCadence:'>
<arg declared_type='UICollectionViewReorderingCadence' index='0' name='reorderingCadence' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startInteractiveTransitionToCollectionViewLayout:completion:'>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='0' name='layout' type='@'/>
<arg declared_type='UICollectionViewLayoutInteractiveTransitionCompletion _Nullable' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='UICollectionViewTransitionLayout * _Nonnull' type='@'/>
</method>
<method selector='supplementaryViewForElementKind:atIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UICollectionReusableView * _Nullable' type='@'/>
</method>
<method selector='updateInteractiveMovementTargetPosition:'>
<arg declared_type='CGPoint' index='0' name='targetPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='visibleCells'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='visibleSupplementaryViewsOfKind:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='UICollectionViewCell'>
<method selector='backgroundView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='contentView'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='dragStateDidChange:'>
<arg declared_type='UICollectionViewCellDragState' index='0' name='dragState' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectedBackgroundView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='UIView * _Nullable' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type='BOOL' index='0' name='highlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type='BOOL' index='0' name='selected' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedBackgroundView:'>
<arg declared_type='UIView * _Nullable' index='0' name='selectedBackgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UICollectionViewController'>
<method selector='clearsSelectionOnViewWillAppear'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView'>
<retval declared_type='__kindof UICollectionView * _Nonnull' type='@'/>
</method>
<method selector='collectionViewLayout'>
<retval declared_type='UICollectionViewLayout * _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithCollectionViewLayout:'>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='0' name='layout' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg declared_type='NSString * _Nullable' index='0' name='nibNameOrNil' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='nibBundleOrNil' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='installsStandardGestureForInteractiveMovement'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setClearsSelectionOnViewWillAppear:'>
<arg declared_type='BOOL' index='0' name='clearsSelectionOnViewWillAppear' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollectionView:'>
<arg declared_type='__kindof UICollectionView * _Nullable' index='0' name='collectionView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInstallsStandardGestureForInteractiveMovement:'>
<arg declared_type='BOOL' index='0' name='installsStandardGestureForInteractiveMovement' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseLayoutToLayoutNavigationTransitions:'>
<arg declared_type='BOOL' index='0' name='useLayoutToLayoutNavigationTransitions' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useLayoutToLayoutNavigationTransitions'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UICollectionViewDropPlaceholder'>
<method selector='previewParametersProvider'>
<retval declared_type='UIDragPreviewParameters * _Nullable (^ _Nullable)(__kindof UICollectionViewCell * _Nonnull)' function_pointer='true' type='@?'>
<arg declared_type='__kindof UICollectionViewCell * _Nonnull' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</retval>
</method>
<method selector='setPreviewParametersProvider:'>
<arg declared_type='UIDragPreviewParameters * _Nullable (^ _Nullable)(__kindof UICollectionViewCell * _Nonnull)' function_pointer='true' index='0' name='previewParametersProvider' type='@?'>
<arg declared_type='__kindof UICollectionViewCell * _Nonnull' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UICollectionViewDropProposal'>
<method selector='initWithDropOperation:intent:'>
<arg declared_type='UIDropOperation' index='0' name='operation' type='I' type64='Q'/>
<arg declared_type='UICollectionViewDropIntent' index='1' name='intent' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='intent'>
<retval declared_type='UICollectionViewDropIntent' type='i' type64='q'/>
</method>
</class>
<class name='UICollectionViewFlowLayout'>
<method selector='estimatedItemSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='footerReferenceSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='headerReferenceSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='itemSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='minimumInteritemSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumLineSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='scrollDirection'>
<retval declared_type='UICollectionViewScrollDirection' type='i' type64='q'/>
</method>
<method selector='sectionFootersPinToVisibleBounds'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sectionHeadersPinToVisibleBounds'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sectionInset'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='sectionInsetReference'>
<retval declared_type='UICollectionViewFlowLayoutSectionInsetReference' type='i' type64='q'/>
</method>
<method selector='setEstimatedItemSize:'>
<arg declared_type='CGSize' index='0' name='estimatedItemSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFooterReferenceSize:'>
<arg declared_type='CGSize' index='0' name='footerReferenceSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeaderReferenceSize:'>
<arg declared_type='CGSize' index='0' name='headerReferenceSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemSize:'>
<arg declared_type='CGSize' index='0' name='itemSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumInteritemSpacing:'>
<arg declared_type='CGFloat' index='0' name='minimumInteritemSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumLineSpacing:'>
<arg declared_type='CGFloat' index='0' name='minimumLineSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollDirection:'>
<arg declared_type='UICollectionViewScrollDirection' index='0' name='scrollDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionFootersPinToVisibleBounds:'>
<arg declared_type='BOOL' index='0' name='sectionFootersPinToVisibleBounds' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionHeadersPinToVisibleBounds:'>
<arg declared_type='BOOL' index='0' name='sectionHeadersPinToVisibleBounds' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionInset:'>
<arg declared_type='UIEdgeInsets' index='0' name='sectionInset' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionInsetReference:'>
<arg declared_type='UICollectionViewFlowLayoutSectionInsetReference' index='0' name='sectionInsetReference' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UICollectionViewFlowLayoutInvalidationContext'>
<method selector='invalidateFlowLayoutAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='invalidateFlowLayoutDelegateMetrics'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setInvalidateFlowLayoutAttributes:'>
<arg declared_type='BOOL' index='0' name='invalidateFlowLayoutAttributes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInvalidateFlowLayoutDelegateMetrics:'>
<arg declared_type='BOOL' index='0' name='invalidateFlowLayoutDelegateMetrics' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UICollectionViewFocusUpdateContext'>
<method selector='nextFocusedIndexPath'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='previouslyFocusedIndexPath'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
</class>
<class name='UICollectionViewLayout'>
<method selector='collectionView'>
<retval declared_type='UICollectionView * _Nullable' type='@'/>
</method>
<method selector='collectionViewContentSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='developmentLayoutDirection'>
<retval declared_type='UIUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
<method selector='finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='decorationIndexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='finalLayoutAttributesForDisappearingItemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='itemIndexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='elementIndexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='finalizeAnimatedBoundsChange'>
<retval declared_type='void' type='v'/>
</method>
<method selector='finalizeCollectionViewUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='finalizeLayoutTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='flipsHorizontallyInOppositeLayoutDirection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='indexPathsToDeleteForDecorationViewOfKind:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='indexPathsToDeleteForSupplementaryViewOfKind:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='indexPathsToInsertForDecorationViewOfKind:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='indexPathsToInsertForSupplementaryViewOfKind:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='decorationIndexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingItemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='itemIndexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='elementIndexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='invalidateLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateLayoutWithContext:'>
<arg declared_type='UICollectionViewLayoutInvalidationContext * _Nonnull' index='0' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='invalidationContextClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='invalidationContextForBoundsChange:'>
<arg declared_type='CGRect' index='0' name='newBounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='UICollectionViewLayoutInvalidationContext * _Nonnull' type='@'/>
</method>
<method selector='invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths:previousIndexPaths:movementCancelled:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='previousIndexPaths' type='@'/>
<arg declared_type='BOOL' index='2' name='movementCancelled' type='B'/>
<retval declared_type='UICollectionViewLayoutInvalidationContext * _Nonnull' type='@'/>
</method>
<method selector='invalidationContextForInteractivelyMovingItems:withTargetPosition:previousIndexPaths:previousPosition:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='targetIndexPaths' type='@'/>
<arg declared_type='CGPoint' index='1' name='targetPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='previousIndexPaths' type='@'/>
<arg declared_type='CGPoint' index='3' name='previousPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='UICollectionViewLayoutInvalidationContext * _Nonnull' type='@'/>
</method>
<method selector='invalidationContextForPreferredLayoutAttributes:withOriginalAttributes:'>
<arg declared_type='UICollectionViewLayoutAttributes * _Nonnull' index='0' name='preferredAttributes' type='@'/>
<arg declared_type='UICollectionViewLayoutAttributes * _Nonnull' index='1' name='originalAttributes' type='@'/>
<retval declared_type='UICollectionViewLayoutInvalidationContext * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='layoutAttributesClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='layoutAttributesForDecorationViewOfKind:atIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForElementsInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForInteractivelyMovingItemAtIndexPath:withTargetPosition:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<arg declared_type='CGPoint' index='1' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nonnull' type='@'/>
</method>
<method selector='layoutAttributesForItemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForSupplementaryViewOfKind:atIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='prepareForAnimatedBoundsChange:'>
<arg declared_type='CGRect' index='0' name='oldBounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForCollectionViewUpdates:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='updateItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForTransitionFromLayout:'>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='0' name='oldLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForTransitionToLayout:'>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='0' name='newLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerClass:forDecorationViewOfKind:'>
<arg declared_type='Class _Nullable' index='0' name='viewClass' type='#'/>
<arg declared_type='NSString * _Nonnull' index='1' name='elementKind' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerNib:forDecorationViewOfKind:'>
<arg declared_type='UINib * _Nullable' index='0' name='nib' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='elementKind' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldInvalidateLayoutForBoundsChange:'>
<arg declared_type='CGRect' index='0' name='newBounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldInvalidateLayoutForPreferredLayoutAttributes:withOriginalAttributes:'>
<arg declared_type='UICollectionViewLayoutAttributes * _Nonnull' index='0' name='preferredAttributes' type='@'/>
<arg declared_type='UICollectionViewLayoutAttributes * _Nonnull' index='1' name='originalAttributes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='targetContentOffsetForProposedContentOffset:'>
<arg declared_type='CGPoint' index='0' name='proposedContentOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='targetContentOffsetForProposedContentOffset:withScrollingVelocity:'>
<arg declared_type='CGPoint' index='0' name='proposedContentOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='velocity' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='targetIndexPathForInteractivelyMovingItem:withPosition:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='previousIndexPath' type='@'/>
<arg declared_type='CGPoint' index='1' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSIndexPath * _Nonnull' type='@'/>
</method>
</class>
<class name='UICollectionViewLayoutAttributes'>
<method selector='alpha'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='center'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='frame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='indexPath'>
<retval declared_type='NSIndexPath * _Nonnull' type='@'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='layoutAttributesForCellWithIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='layoutAttributesForDecorationViewOfKind:withIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='decorationViewKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='layoutAttributesForSupplementaryViewOfKind:withIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='representedElementCategory'>
<retval declared_type='UICollectionElementCategory' type='I' type64='Q'/>
</method>
<method selector='representedElementKind'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setAlpha:'>
<arg declared_type='CGFloat' index='0' name='alpha' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenter:'>
<arg declared_type='CGPoint' index='0' name='center' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform3D:'>
<arg declared_type='CATransform3D' index='0' name='transform3D' type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZIndex:'>
<arg declared_type='NSInteger' index='0' name='zIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='transform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='transform3D'>
<retval declared_type='CATransform3D' type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}'/>
</method>
<method selector='zIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='UICollectionViewLayoutInvalidationContext'>
<method selector='contentOffsetAdjustment'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='contentSizeAdjustment'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='interactiveMovementTarget'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='invalidateDataSourceCounts'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='invalidateDecorationElementsOfKind:atIndexPaths:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateEverything'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='invalidateItemsAtIndexPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateSupplementaryElementsOfKind:atIndexPaths:'>
<arg declared_type='NSString * _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidatedDecorationIndexPaths'>
<retval declared_type='NSDictionary *&gt; * _Nullable' type='@'/>
</method>
<method selector='invalidatedItemIndexPaths'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='invalidatedSupplementaryIndexPaths'>
<retval declared_type='NSDictionary *&gt; * _Nullable' type='@'/>
</method>
<method selector='previousIndexPathsForInteractivelyMovingItems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setContentOffsetAdjustment:'>
<arg declared_type='CGPoint' index='0' name='contentOffsetAdjustment' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentSizeAdjustment:'>
<arg declared_type='CGSize' index='0' name='contentSizeAdjustment' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetIndexPathsForInteractivelyMovingItems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='UICollectionViewPlaceholder'>
<method selector='cellUpdateHandler'>
<retval declared_type='void (^ _Nullable)(__kindof UICollectionViewCell * _Nonnull)' function_pointer='true' type='@?'>
<arg declared_type='__kindof UICollectionViewCell * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='initWithInsertionIndexPath:reuseIdentifier:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='insertionIndexPath' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='reuseIdentifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setCellUpdateHandler:'>
<arg declared_type='void (^ _Nullable)(__kindof UICollectionViewCell * _Nonnull)' function_pointer='true' index='0' name='cellUpdateHandler' type='@?'>
<arg declared_type='__kindof UICollectionViewCell * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UICollectionViewTransitionLayout'>
<method selector='currentLayout'>
<retval declared_type='UICollectionViewLayout * _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithCurrentLayout:nextLayout:'>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='0' name='currentLayout' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='newLayout' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='nextLayout'>
<retval declared_type='UICollectionViewLayout * _Nonnull' type='@'/>
</method>
<method selector='setTransitionProgress:'>
<arg declared_type='CGFloat' index='0' name='transitionProgress' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transitionProgress'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='updateValue:forAnimatedKey:'>
<arg declared_type='CGFloat' index='0' name='value' type='f' type64='d'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueForAnimatedKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='UICollectionViewUpdateItem'>
<method selector='indexPathAfterUpdate'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexPathBeforeUpdate'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='updateAction'>
<retval declared_type='UICollectionUpdateAction' type='i' type64='q'/>
</method>
</class>
<class name='UICollisionBehavior'>
<method selector='addBoundaryWithIdentifier:forPath:'>
<arg declared_type='id _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='UIBezierPath * _Nonnull' index='1' name='bezierPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addBoundaryWithIdentifier:fromPoint:toPoint:'>
<arg declared_type='id _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='CGPoint' index='1' name='p1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='2' name='p2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='boundaryIdentifiers'>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='boundaryWithIdentifier:'>
<arg declared_type='id _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='UIBezierPath * _Nullable' type='@'/>
</method>
<method selector='collisionDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='collisionMode'>
<retval declared_type='UICollisionBehaviorMode' type='I' type64='Q'/>
</method>
<method selector='initWithItems:'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='items' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='items'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='removeAllBoundaries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeBoundaryWithIdentifier:'>
<arg declared_type='id _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollisionDelegate:'>
<arg declared_type='id _Nullable' index='0' name='collisionDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollisionMode:'>
<arg declared_type='UICollisionBehaviorMode' index='0' name='collisionMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTranslatesReferenceBoundsIntoBoundary:'>
<arg declared_type='BOOL' index='0' name='translatesReferenceBoundsIntoBoundary' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTranslatesReferenceBoundsIntoBoundaryWithInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='insets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='translatesReferenceBoundsIntoBoundary'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIColor'>
<method selector='CGColor'>
<retval declared_type='CGColorRef _Nonnull' type='^{CGColor=}'/>
</method>
<method selector='CIColor'>
<retval declared_type='CIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='blackColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='blueColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='brownColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='clearColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method class_method='true' selector='colorNamed:inBundle:compatibleWithTraitCollection:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='bundle' type='@'/>
<arg declared_type='UITraitCollection * _Nullable' index='2' name='traitCollection' type='@'/>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='colorWithAlphaComponent:'>
<arg declared_type='CGFloat' index='0' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithCGColor:'>
<arg declared_type='CGColorRef _Nonnull' index='0' name='cgColor' type='^{CGColor=}'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithCIColor:'>
<arg declared_type='CIColor * _Nonnull' index='0' name='ciColor' type='@'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithDisplayP3Red:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='displayP3Red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat' index='0' name='hue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='saturation' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='brightness' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithPatternImage:'>
<arg declared_type='UIImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithWhite:alpha:'>
<arg declared_type='CGFloat' index='0' name='white' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='cyanColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='darkGrayColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='darkTextColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='getHue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='hue' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='saturation' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='brightness' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='3' name='alpha' type='^f' type64='^d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getRed:green:blue:alpha:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='red' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='green' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='blue' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='3' name='alpha' type='^f' type64='^d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getWhite:alpha:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='white' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='alpha' type='^f' type64='^d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='grayColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='greenColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='groupTableViewBackgroundColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithCGColor:'>
<arg declared_type='CGColorRef _Nonnull' index='0' name='cgColor' type='^{CGColor=}'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithCIColor:'>
<arg declared_type='CIColor * _Nonnull' index='0' name='ciColor' type='@'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithDisplayP3Red:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='displayP3Red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithHue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat' index='0' name='hue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='saturation' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='brightness' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithPatternImage:'>
<arg declared_type='UIImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithWhite:alpha:'>
<arg declared_type='CGFloat' index='0' name='white' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f' type64='d'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='lightGrayColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='lightTextColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='magentaColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='orangeColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='purpleColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='redColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scrollViewTexturedBackgroundColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='set'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStroke'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='underPageBackgroundColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='viewFlipsideBackgroundColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='whiteColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='yellowColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
</class>
<class name='UIContextualAction'>
<method selector='backgroundColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='contextualActionWithStyle:title:handler:'>
<arg declared_type='UIContextualActionStyle' index='0' name='style' type='i' type64='q'/>
<arg declared_type='NSString * _Nullable' index='1' name='title' type='@'/>
<arg declared_type='UIContextualActionHandler _Nonnull' function_pointer='true' index='2' name='handler' type='@?'>
<arg declared_type='UIContextualAction * _Nonnull' type='@'/>
<arg declared_type='__kindof UIView * _Nonnull' type='@'/>
<arg declared_type='void (^ _Nonnull)(BOOL)' function_pointer='true' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='handler'>
<retval declared_type='UIContextualActionHandler _Nonnull' function_pointer='true' type='@?'>
<arg declared_type='UIContextualAction * _Nonnull' type='@'/>
<arg declared_type='__kindof UIView * _Nonnull' type='@'/>
<arg declared_type='void (^ _Nonnull)(BOOL)' function_pointer='true' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='image'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='style'>
<retval declared_type='UIContextualActionStyle' type='i' type64='q'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='UIControl'>
<method selector='actionsForTarget:forControlEvent:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<arg declared_type='UIControlEvents' index='1' name='controlEvent' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='addTarget:action:forControlEvents:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<arg declared_type='UIControlEvents' index='2' name='controlEvents' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allControlEvents'>
<retval declared_type='UIControlEvents' type='I' type64='Q'/>
</method>
<method selector='allTargets'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='beginTrackingWithTouch:withEvent:'>
<arg declared_type='UITouch * _Nonnull' index='0' name='touch' type='@'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelTrackingWithEvent:'>
<arg declared_type='UIEvent * _Nullable' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentHorizontalAlignment'>
<retval declared_type='UIControlContentHorizontalAlignment' type='i' type64='q'/>
</method>
<method selector='contentVerticalAlignment'>
<retval declared_type='UIControlContentVerticalAlignment' type='i' type64='q'/>
</method>
<method selector='continueTrackingWithTouch:withEvent:'>
<arg declared_type='UITouch * _Nonnull' index='0' name='touch' type='@'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='effectiveContentHorizontalAlignment'>
<retval declared_type='UIControlContentHorizontalAlignment' type='i' type64='q'/>
</method>
<method selector='endTrackingWithTouch:withEvent:'>
<arg declared_type='UITouch * _Nullable' index='0' name='touch' type='@'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTouchInside'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTracking'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeTarget:action:forControlEvents:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='action' type=':'/>
<arg declared_type='UIControlEvents' index='2' name='controlEvents' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendAction:to:forEvent:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<arg declared_type='UIEvent * _Nullable' index='2' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendActionsForControlEvents:'>
<arg declared_type='UIControlEvents' index='0' name='controlEvents' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentHorizontalAlignment:'>
<arg declared_type='UIControlContentHorizontalAlignment' index='0' name='contentHorizontalAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentVerticalAlignment:'>
<arg declared_type='UIControlContentVerticalAlignment' index='0' name='contentVerticalAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type='BOOL' index='0' name='highlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type='BOOL' index='0' name='selected' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='UIControlState' type='I' type64='Q'/>
</method>
</class>
<class name='UICubicTimingParameters'>
<method selector='animationCurve'>
<retval declared_type='UIViewAnimationCurve' type='i' type64='q'/>
</method>
<method selector='controlPoint1'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='controlPoint2'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithAnimationCurve:'>
<arg declared_type='UIViewAnimationCurve' index='0' name='curve' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithControlPoint1:controlPoint2:'>
<arg declared_type='CGPoint' index='0' name='point1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='point2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UIDatePicker'>
<method selector='calendar'>
<retval declared_type='NSCalendar * _Nonnull' type='@'/>
</method>
<method selector='countDownDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='date'>
<retval declared_type='NSDate * _Nonnull' type='@'/>
</method>
<method selector='datePickerMode'>
<retval declared_type='UIDatePickerMode' type='i' type64='q'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale * _Nullable' type='@'/>
</method>
<method selector='maximumDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='minimumDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='minuteInterval'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setCalendar:'>
<arg declared_type='NSCalendar * _Nullable' index='0' name='calendar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCountDownDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='countDownDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDate:'>
<arg declared_type='NSDate * _Nonnull' index='0' name='date' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDate:animated:'>
<arg declared_type='NSDate * _Nonnull' index='0' name='date' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDatePickerMode:'>
<arg declared_type='UIDatePickerMode' index='0' name='datePickerMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg declared_type='NSLocale * _Nullable' index='0' name='locale' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='maximumDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='minimumDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinuteInterval:'>
<arg declared_type='NSInteger' index='0' name='minuteInterval' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg declared_type='NSTimeZone * _Nullable' index='0' name='timeZone' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone * _Nullable' type='@'/>
</method>
</class>
<class name='UIDevice'>
<method selector='batteryLevel'>
<retval declared_type='float' type='f'/>
</method>
<method selector='batteryState'>
<retval declared_type='UIDeviceBatteryState' type='i' type64='q'/>
</method>
<method selector='beginGeneratingDeviceOrientationNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='currentDevice'>
<retval declared_type='UIDevice * _Nonnull' type='@'/>
</method>
<method selector='endGeneratingDeviceOrientationNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method selector='identifierForVendor'>
<retval declared_type='NSUUID * _Nullable' type='@'/>
</method>
<method selector='isBatteryMonitoringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isGeneratingDeviceOrientationNotifications'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMultitaskingSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isProximityMonitoringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localizedModel'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='model'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='orientation'>
<retval declared_type='UIDeviceOrientation' type='i' type64='q'/>
</method>
<method selector='playInputClick'>
<retval declared_type='void' type='v'/>
</method>
<method selector='proximityState'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBatteryMonitoringEnabled:'>
<arg declared_type='BOOL' index='0' name='batteryMonitoringEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProximityMonitoringEnabled:'>
<arg declared_type='BOOL' index='0' name='proximityMonitoringEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='systemName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='systemVersion'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='userInterfaceIdiom'>
<retval declared_type='UIUserInterfaceIdiom' type='i' type64='q'/>
</method>
</class>
<class name='UIDictationPhrase'>
<method selector='alternativeInterpretations'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='text'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='UIDocument'>
<method selector='autosaveWithCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeCountTokenForSaveOperation:'>
<arg declared_type='UIDocumentSaveOperation' index='0' name='saveOperation' type='i' type64='q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='closeWithCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentsForType:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='disableEditing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentState'>
<retval declared_type='UIDocumentState' type='I' type64='Q'/>
</method>
<method selector='enableEditing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fileAttributesToWriteToURL:forSaveOperation:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='UIDocumentSaveOperation' index='1' name='saveOperation' type='i' type64='q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='fileModificationDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='fileNameExtensionForType:saveOperation:'>
<arg declared_type='NSString * _Nullable' index='0' name='typeName' type='@'/>
<arg declared_type='UIDocumentSaveOperation' index='1' name='saveOperation' type='i' type64='q'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='fileType'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fileURL'>
<retval declared_type='NSURL * _Nonnull' type='@'/>
</method>
<method selector='finishedHandlingError:recovered:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<arg declared_type='BOOL' index='1' name='recovered' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleError:userInteractionPermitted:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<arg declared_type='BOOL' index='1' name='userInteractionPermitted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithFileURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='loadFromContents:ofType:error:'>
<arg declared_type='id _Nonnull' index='0' name='contents' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localizedName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='openWithCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='performAsynchronousFileAccessUsingBlock:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='progress'>
<retval declared_type='NSProgress * _Nullable' type='@'/>
</method>
<method selector='readFromURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='restoreUserActivityState:'>
<arg declared_type='NSUserActivity * _Nonnull' index='0' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='revertToContentsOfURL:completionHandler:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveToURL:forSaveOperation:completionHandler:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='UIDocumentSaveOperation' index='1' name='saveOperation' type='i' type64='q'/>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='savingFileType'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setFileModificationDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='fileModificationDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUndoManager:'>
<arg declared_type='NSUndoManager * _Nullable' index='0' name='undoManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserActivity:'>
<arg declared_type='NSUserActivity * _Nullable' index='0' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='undoManager'>
<retval declared_type='NSUndoManager * _Nonnull' type='@'/>
</method>
<method selector='updateChangeCount:'>
<arg declared_type='UIDocumentChangeKind' index='0' name='change' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateChangeCountWithToken:forSaveOperation:'>
<arg declared_type='id _Nonnull' index='0' name='changeCountToken' type='@'/>
<arg declared_type='UIDocumentSaveOperation' index='1' name='saveOperation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateUserActivityState:'>
<arg declared_type='NSUserActivity * _Nonnull' index='0' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userActivity'>
<retval declared_type='NSUserActivity * _Nullable' type='@'/>
</method>
<method selector='userInteractionNoLongerPermittedForError:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeContents:andAttributes:safelyToURL:forSaveOperation:error:'>
<arg declared_type='id _Nonnull' index='0' name='contents' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='additionalFileAttributes' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='2' name='url' type='@'/>
<arg declared_type='UIDocumentSaveOperation' index='3' name='saveOperation' type='i' type64='q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeContents:toURL:forSaveOperation:originalContentsURL:error:'>
<arg declared_type='id _Nonnull' index='0' name='contents' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<arg declared_type='UIDocumentSaveOperation' index='2' name='saveOperation' type='i' type64='q'/>
<arg declared_type='NSURL * _Nullable' index='3' name='originalContentsURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIDocumentBrowserAction'>
<method selector='availability'>
<retval declared_type='UIDocumentBrowserActionAvailability' type='i' type64='q'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='image'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='initWithIdentifier:localizedTitle:availability:handler:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='localizedTitle' type='@'/>
<arg declared_type='UIDocumentBrowserActionAvailability' index='2' name='availability' type='i' type64='q'/>
<arg declared_type='void (^ _Nonnull)(NSArray * _Nonnull)' function_pointer='true' index='3' name='handler' type='@?'>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='localizedTitle'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='setImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSupportedContentTypes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='supportedContentTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSupportsMultipleItems:'>
<arg declared_type='BOOL' index='0' name='supportsMultipleItems' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supportedContentTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='supportsMultipleItems'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIDocumentBrowserTransitionController'>
<method selector='loadingProgress'>
<retval declared_type='NSProgress * _Nullable' type='@'/>
</method>
<method selector='setLoadingProgress:'>
<arg declared_type='NSProgress * _Nullable' index='0' name='loadingProgress' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetView:'>
<arg declared_type='UIView * _Nullable' index='0' name='targetView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
</class>
<class name='UIDocumentBrowserViewController'>
<method selector='additionalLeadingNavigationBarButtonItems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='additionalTrailingNavigationBarButtonItems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='allowedContentTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='allowsDocumentCreation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsPickingMultipleItems'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browserUserInterfaceStyle'>
<retval declared_type='UIDocumentBrowserUserInterfaceStyle' type='I' type64='Q'/>
</method>
<method selector='customActions'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='importDocumentAtURL:nextToDocumentAtURL:mode:completionHandler:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='documentURL' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='neighbourURL' type='@'/>
<arg declared_type='UIDocumentBrowserImportMode' index='2' name='importMode' type='I' type64='Q'/>
<arg declared_type='void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable)' function_pointer='true' index='3' name='completion' type='@?'>
<arg declared_type='NSURL * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initForOpeningFilesWithContentTypes:'>
<arg declared_type='NSArray * _Nullable' index='0' name='allowedContentTypes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='revealDocumentAtURL:importIfNeeded:completion:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='BOOL' index='1' name='importIfNeeded' type='B'/>
<arg declared_type='void (^ _Nullable)(NSURL * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='NSURL * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAdditionalLeadingNavigationBarButtonItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='additionalLeadingNavigationBarButtonItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAdditionalTrailingNavigationBarButtonItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='additionalTrailingNavigationBarButtonItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsDocumentCreation:'>
<arg declared_type='BOOL' index='0' name='allowsDocumentCreation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsPickingMultipleItems:'>
<arg declared_type='BOOL' index='0' name='allowsPickingMultipleItems' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBrowserUserInterfaceStyle:'>
<arg declared_type='UIDocumentBrowserUserInterfaceStyle' index='0' name='browserUserInterfaceStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomActions:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='customActions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transitionControllerForDocumentAtURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='documentURL' type='@'/>
<retval declared_type='UIDocumentBrowserTransitionController * _Nonnull' type='@'/>
</method>
<method selector='transitionControllerForDocumentURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='documentURL' type='@'/>
<retval declared_type='UIDocumentBrowserTransitionController * _Nonnull' type='@'/>
</method>
</class>
<class name='UIDocumentInteractionController'>
<method selector='URL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='UTI'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='annotation'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dismissMenuAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dismissPreviewAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='gestureRecognizers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='icons'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='interactionControllerWithURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='UIDocumentInteractionController * _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='presentOpenInMenuFromBarButtonItem:animated:'>
<arg declared_type='UIBarButtonItem * _Nonnull' index='0' name='item' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentOpenInMenuFromRect:inView:animated:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentOptionsMenuFromBarButtonItem:animated:'>
<arg declared_type='UIBarButtonItem * _Nonnull' index='0' name='item' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentOptionsMenuFromRect:inView:animated:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentPreviewAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAnnotation:'>
<arg declared_type='id _Nullable' index='0' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='URL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUTI:'>
<arg declared_type='NSString * _Nullable' index='0' name='UTI' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIDocumentMenuViewController'>
<method selector='addOptionWithTitle:image:order:handler:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='UIImage * _Nullable' index='1' name='image' type='@'/>
<arg declared_type='UIDocumentMenuOrder' index='2' name='order' type='I' type64='Q'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithDocumentTypes:inMode:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='allowedUTIs' type='@'/>
<arg declared_type='UIDocumentPickerMode' index='1' name='mode' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithURL:inMode:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='UIDocumentPickerMode' index='1' name='mode' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIDocumentPickerExtensionViewController'>
<method selector='dismissGrantingAccessToURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentPickerMode'>
<retval declared_type='UIDocumentPickerMode' type='I' type64='Q'/>
</method>
<method selector='documentStorageURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='originalURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='prepareForPresentationInMode:'>
<arg declared_type='UIDocumentPickerMode' index='0' name='mode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='providerIdentifier'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='validTypes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='UIDocumentPickerViewController'>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='documentPickerMode'>
<retval declared_type='UIDocumentPickerMode' type='I' type64='Q'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithDocumentTypes:inMode:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='allowedUTIs' type='@'/>
<arg declared_type='UIDocumentPickerMode' index='1' name='mode' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithURL:inMode:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='UIDocumentPickerMode' index='1' name='mode' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithURLs:inMode:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='urls' type='@'/>
<arg declared_type='UIDocumentPickerMode' index='1' name='mode' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type='BOOL' index='0' name='allowsMultipleSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIDragInteraction'>
<method selector='allowsSimultaneousRecognitionDuringLift'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithDelegate:'>
<arg declared_type='id _Nonnull' index='0' name='delegate' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isEnabledByDefault'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAllowsSimultaneousRecognitionDuringLift:'>
<arg declared_type='BOOL' index='0' name='allowsSimultaneousRecognitionDuringLift' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIDragItem'>
<method selector='initWithItemProvider:'>
<arg declared_type='NSItemProvider * _Nonnull' index='0' name='itemProvider' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='itemProvider'>
<retval declared_type='__kindof NSItemProvider * _Nonnull' type='@'/>
</method>
<method selector='localObject'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='previewProvider'>
<retval declared_type='UIDragPreview * _Nullable (^ _Nullable)(void)' function_pointer='true' type='@?'>
<retval declared_type='UIDragPreview * _Nullable' type='@'/>
</retval>
</method>
<method selector='setLocalObject:'>
<arg declared_type='id _Nullable' index='0' name='localObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreviewProvider:'>
<arg declared_type='UIDragPreview * _Nullable (^ _Nullable)(void)' function_pointer='true' index='0' name='previewProvider' type='@?'>
<retval declared_type='UIDragPreview * _Nullable' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIDragPreview'>
<method selector='initWithView:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithView:parameters:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='UIDragPreviewParameters * _Nonnull' index='1' name='parameters' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='parameters'>
<retval declared_type='UIDragPreviewParameters * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='previewForURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='previewForURL:title:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='title' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='view'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
</class>
<class name='UIDragPreviewParameters'>
<method selector='backgroundColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTextLineRects:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textLineRects' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisiblePath:'>
<arg declared_type='UIBezierPath * _Nullable' index='0' name='visiblePath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='visiblePath'>
<retval declared_type='UIBezierPath * _Nullable' type='@'/>
</method>
</class>
<class name='UIDragPreviewTarget'>
<method selector='center'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='container'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='initWithContainer:center:'>
<arg declared_type='UIView * _Nonnull' index='0' name='container' type='@'/>
<arg declared_type='CGPoint' index='1' name='center' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithContainer:center:transform:'>
<arg declared_type='UIView * _Nonnull' index='0' name='container' type='@'/>
<arg declared_type='CGPoint' index='1' name='center' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGAffineTransform' index='2' name='transform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='transform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
</class>
<class name='UIDropInteraction'>
<method selector='allowsSimultaneousDropSessions'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithDelegate:'>
<arg declared_type='id _Nonnull' index='0' name='delegate' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAllowsSimultaneousDropSessions:'>
<arg declared_type='BOOL' index='0' name='allowsSimultaneousDropSessions' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIDropProposal'>
<method selector='initWithDropOperation:'>
<arg declared_type='UIDropOperation' index='0' name='operation' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isPrecise'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='operation'>
<retval declared_type='UIDropOperation' type='I' type64='Q'/>
</method>
<method selector='prefersFullSizePreview'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPrecise:'>
<arg declared_type='BOOL' index='0' name='precise' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrefersFullSizePreview:'>
<arg declared_type='BOOL' index='0' name='prefersFullSizePreview' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIDynamicAnimator'>
<method selector='addBehavior:'>
<arg declared_type='UIDynamicBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='behaviors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='elapsedTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='initWithCollectionViewLayout:'>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='0' name='layout' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithReferenceView:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemsInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='layoutAttributesForCellAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForDecorationViewOfKind:atIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='decorationViewKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForSupplementaryViewOfKind:atIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='kind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UICollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='referenceView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='removeAllBehaviors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeBehavior:'>
<arg declared_type='UIDynamicBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateItemUsingCurrentState:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIDynamicBehavior'>
<method selector='action'>
<retval declared_type='void (^ _Nullable)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='addChildBehavior:'>
<arg declared_type='UIDynamicBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='childBehaviors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='dynamicAnimator'>
<retval declared_type='UIDynamicAnimator * _Nullable' type='@'/>
</method>
<method selector='removeChildBehavior:'>
<arg declared_type='UIDynamicBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAction:'>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='0' name='action' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='willMoveToAnimator:'>
<arg declared_type='UIDynamicAnimator * _Nullable' index='0' name='dynamicAnimator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIDynamicItemBehavior'>
<method selector='addAngularVelocity:forItem:'>
<arg declared_type='CGFloat' index='0' name='velocity' type='f' type64='d'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addLinearVelocity:forItem:'>
<arg declared_type='CGPoint' index='0' name='velocity' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowsRotation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='angularResistance'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='angularVelocityForItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='charge'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='density'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='elasticity'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='friction'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='initWithItems:'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='items' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isAnchored'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='items'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='linearVelocityForItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='removeItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resistance'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setAllowsRotation:'>
<arg declared_type='BOOL' index='0' name='allowsRotation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchored:'>
<arg declared_type='BOOL' index='0' name='anchored' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngularResistance:'>
<arg declared_type='CGFloat' index='0' name='angularResistance' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCharge:'>
<arg declared_type='CGFloat' index='0' name='charge' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDensity:'>
<arg declared_type='CGFloat' index='0' name='density' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setElasticity:'>
<arg declared_type='CGFloat' index='0' name='elasticity' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFriction:'>
<arg declared_type='CGFloat' index='0' name='friction' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResistance:'>
<arg declared_type='CGFloat' index='0' name='resistance' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIDynamicItemGroup'>
<method selector='initWithItems:'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='items' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='items'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
</class>
<class name='UIEvent'>
<method selector='allTouches'>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method selector='coalescedTouchesForTouch:'>
<arg declared_type='UITouch * _Nonnull' index='0' name='touch' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='predictedTouchesForTouch:'>
<arg declared_type='UITouch * _Nonnull' index='0' name='touch' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='subtype'>
<retval declared_type='UIEventSubtype' type='i' type64='q'/>
</method>
<method selector='timestamp'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='touchesForGestureRecognizer:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gesture' type='@'/>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method selector='touchesForView:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method selector='touchesForWindow:'>
<arg declared_type='UIWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method selector='type'>
<retval declared_type='UIEventType' type='i' type64='q'/>
</method>
</class>
<class name='UIFeedbackGenerator'>
<method selector='prepare'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIFieldBehavior'>
<method selector='addItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationSpeed'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='direction'>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</method>
<method class_method='true' selector='dragField'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='electricField'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='falloff'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='fieldWithEvaluationBlock:'>
<arg declared_type='CGVector (^ _Nonnull)(UIFieldBehavior * _Nonnull, CGPoint, CGVector, CGFloat, CGFloat, NSTimeInterval)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='UIFieldBehavior * _Nonnull' type='@'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<arg declared_type='CGFloat' type='f' type64='d'/>
<arg declared_type='CGFloat' type='f' type64='d'/>
<arg declared_type='NSTimeInterval' type='d'/>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='items'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='linearGravityFieldWithVector:'>
<arg declared_type='CGVector' index='0' name='direction' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='magneticField'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='minimumRadius'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='noiseFieldWithSmoothness:animationSpeed:'>
<arg declared_type='CGFloat' index='0' name='smoothness' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='speed' type='f' type64='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='radialGravityFieldWithPosition:'>
<arg declared_type='CGPoint' index='0' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='region'>
<retval declared_type='UIRegion * _Nonnull' type='@'/>
</method>
<method selector='removeItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationSpeed:'>
<arg declared_type='CGFloat' index='0' name='animationSpeed' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirection:'>
<arg declared_type='CGVector' index='0' name='direction' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFalloff:'>
<arg declared_type='CGFloat' index='0' name='falloff' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumRadius:'>
<arg declared_type='CGFloat' index='0' name='minimumRadius' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg declared_type='CGPoint' index='0' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRegion:'>
<arg declared_type='UIRegion * _Nonnull' index='0' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSmoothness:'>
<arg declared_type='CGFloat' index='0' name='smoothness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrength:'>
<arg declared_type='CGFloat' index='0' name='strength' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='smoothness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='springField'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='strength'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='turbulenceFieldWithSmoothness:animationSpeed:'>
<arg declared_type='CGFloat' index='0' name='smoothness' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='speed' type='f' type64='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='velocityFieldWithVector:'>
<arg declared_type='CGVector' index='0' name='direction' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='vortexField'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UIFocusAnimationCoordinator'>
<method selector='addCoordinatedAnimations:completion:'>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='0' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='1' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addCoordinatedFocusingAnimations:completion:'>
<arg declared_type='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='0' name='animations' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='1' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addCoordinatedUnfocusingAnimations:completion:'>
<arg declared_type='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='0' name='animations' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='1' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIFocusDebugger'>
<method class_method='true' selector='checkFocusabilityForItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method class_method='true' selector='help'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method class_method='true' selector='simulateFocusUpdateRequestFromEnvironment:'>
<arg declared_type='id _Nonnull' index='0' name='environment' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method class_method='true' selector='status'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
</class>
<class name='UIFocusGuide'>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preferredFocusEnvironments'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='preferredFocusedView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredFocusEnvironments:'>
<arg declared_type='NSArray&gt; * _Nullable' index='0' name='preferredFocusEnvironments' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredFocusedView:'>
<arg declared_type='UIView * _Nullable' index='0' name='preferredFocusedView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIFocusMovementHint'>
<method selector='interactionTransform'>
<retval declared_type='CATransform3D' type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}'/>
</method>
<method selector='movementDirection'>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</method>
<method selector='perspectiveTransform'>
<retval declared_type='CATransform3D' type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}'/>
</method>
<method selector='rotation'>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</method>
<method selector='translation'>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</method>
</class>
<class name='UIFocusSystem'>
<method class_method='true' selector='environment:containsEnvironment:'>
<arg declared_type='id _Nonnull' index='0' name='environment' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='otherEnvironment' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='focusSystemForEnvironment:'>
<arg declared_type='id _Nonnull' index='0' name='environment' type='@'/>
<retval declared_type='UIFocusSystem * _Nullable' type='@'/>
</method>
<method selector='focusedItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='requestFocusUpdateToEnvironment:'>
<arg declared_type='id _Nonnull' index='0' name='environment' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateFocusIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIFocusUpdateContext'>
<method selector='focusHeading'>
<retval declared_type='UIFocusHeading' type='I' type64='Q'/>
</method>
<method selector='nextFocusedItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='nextFocusedView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='previouslyFocusedItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='previouslyFocusedView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
</class>
<class name='UIFont'>
<method selector='ascender'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='boldSystemFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='buttonFontSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='capHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='descender'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='familyName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='familyNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptor'>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontNamesForFamilyName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='familyName' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontWithDescriptor:size:'>
<arg declared_type='UIFontDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='CGFloat' index='1' name='pointSize' type='f' type64='d'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontWithName:size:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fontName' type='@'/>
<arg declared_type='CGFloat' index='1' name='fontSize' type='f' type64='d'/>
<retval declared_type='UIFont * _Nullable' type='@'/>
</method>
<method selector='fontWithSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='italicSystemFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='labelFontSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='leading'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='lineHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='monospacedDigitSystemFontOfSize:weight:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<arg declared_type='UIFontWeight' index='1' name='weight' type='f' type64='d'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='pointSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='preferredFontForTextStyle:'>
<arg declared_type='UIFontTextStyle _Nonnull' index='0' name='style' type='@'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='preferredFontForTextStyle:compatibleWithTraitCollection:'>
<arg declared_type='UIFontTextStyle _Nonnull' index='0' name='style' type='@'/>
<arg declared_type='UITraitCollection * _Nullable' index='1' name='traitCollection' type='@'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='smallSystemFontSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='systemFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemFontOfSize:weight:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<arg declared_type='UIFontWeight' index='1' name='weight' type='f' type64='d'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemFontSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='xHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='UIFontDescriptor'>
<method selector='fontAttributes'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorByAddingAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributes' type='@'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithFace:'>
<arg declared_type='NSString * _Nonnull' index='0' name='newFace' type='@'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithFamily:'>
<arg declared_type='NSString * _Nonnull' index='0' name='newFamily' type='@'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithFontAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributes' type='@'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithMatrix:'>
<arg declared_type='CGAffineTransform' index='0' name='matrix' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithName:matrix:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fontName' type='@'/>
<arg declared_type='CGAffineTransform' index='1' name='matrix' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithName:size:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fontName' type='@'/>
<arg declared_type='CGFloat' index='1' name='size' type='f' type64='d'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithSize:'>
<arg declared_type='CGFloat' index='0' name='newPointSize' type='f' type64='d'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithSymbolicTraits:'>
<arg declared_type='UIFontDescriptorSymbolicTraits' index='0' name='symbolicTraits' type='I'/>
<retval declared_type='UIFontDescriptor * _Nullable' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFontAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='matchingFontDescriptorsWithMandatoryKeys:'>
<arg declared_type='NSSet * _Nullable' index='0' name='mandatoryKeys' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='matrix'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='objectForKey:'>
<arg declared_type='UIFontDescriptorAttributeName _Nonnull' index='0' name='anAttribute' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='pointSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='postscriptName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='preferredFontDescriptorWithTextStyle:'>
<arg declared_type='UIFontTextStyle _Nonnull' index='0' name='style' type='@'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:'>
<arg declared_type='UIFontTextStyle _Nonnull' index='0' name='style' type='@'/>
<arg declared_type='UITraitCollection * _Nullable' index='1' name='traitCollection' type='@'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='symbolicTraits'>
<retval declared_type='UIFontDescriptorSymbolicTraits' type='I'/>
</method>
</class>
<class name='UIFontMetrics'>
<method class_method='true' selector='defaultMetrics'>
<retval declared_type='UIFontMetrics * _Nonnull' type='@'/>
</method>
<method selector='initForTextStyle:'>
<arg declared_type='UIFontTextStyle _Nonnull' index='0' name='textStyle' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='metricsForTextStyle:'>
<arg declared_type='UIFontTextStyle _Nonnull' index='0' name='textStyle' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='scaledFontForFont:'>
<arg declared_type='UIFont * _Nonnull' index='0' name='font' type='@'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='scaledFontForFont:compatibleWithTraitCollection:'>
<arg declared_type='UIFont * _Nonnull' index='0' name='font' type='@'/>
<arg declared_type='UITraitCollection * _Nullable' index='1' name='traitCollection' type='@'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='scaledFontForFont:maximumPointSize:'>
<arg declared_type='UIFont * _Nonnull' index='0' name='font' type='@'/>
<arg declared_type='CGFloat' index='1' name='maximumPointSize' type='f' type64='d'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='scaledFontForFont:maximumPointSize:compatibleWithTraitCollection:'>
<arg declared_type='UIFont * _Nonnull' index='0' name='font' type='@'/>
<arg declared_type='CGFloat' index='1' name='maximumPointSize' type='f' type64='d'/>
<arg declared_type='UITraitCollection * _Nullable' index='2' name='traitCollection' type='@'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='scaledValueForValue:'>
<arg declared_type='CGFloat' index='0' name='value' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='scaledValueForValue:compatibleWithTraitCollection:'>
<arg declared_type='CGFloat' index='0' name='value' type='f' type64='d'/>
<arg declared_type='UITraitCollection * _Nullable' index='1' name='traitCollection' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='UIGestureRecognizer'>
<method selector='addTarget:action:'>
<arg declared_type='id _Nonnull' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowedPressTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='allowedTouchTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='canBePreventedByGestureRecognizer:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='preventingGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canPreventGestureRecognizer:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='preventedGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelsTouchesInView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delaysTouchesBegan'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delaysTouchesEnded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='ignorePress:forEvent:'>
<arg declared_type='UIPress * _Nonnull' index='0' name='button' type='@'/>
<arg declared_type='UIPressesEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ignoreTouch:forEvent:'>
<arg declared_type='UITouch * _Nonnull' index='0' name='touch' type='@'/>
<arg declared_type='UIEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTarget:action:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locationInView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='locationOfTouch:inView:'>
<arg declared_type='NSUInteger' index='0' name='touchIndex' type='I' type64='Q'/>
<arg declared_type='UIView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='numberOfTouches'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='pressesBegan:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='presses' type='@'/>
<arg declared_type='UIPressesEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pressesCancelled:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='presses' type='@'/>
<arg declared_type='UIPressesEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pressesChanged:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='presses' type='@'/>
<arg declared_type='UIPressesEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pressesEnded:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='presses' type='@'/>
<arg declared_type='UIPressesEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTarget:action:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requireGestureRecognizerToFail:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='otherGestureRecognizer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requiresExclusiveTouchType'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowedPressTypes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='allowedPressTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowedTouchTypes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='allowedTouchTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCancelsTouchesInView:'>
<arg declared_type='BOOL' index='0' name='cancelsTouchesInView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelaysTouchesBegan:'>
<arg declared_type='BOOL' index='0' name='delaysTouchesBegan' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelaysTouchesEnded:'>
<arg declared_type='BOOL' index='0' name='delaysTouchesEnded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequiresExclusiveTouchType:'>
<arg declared_type='BOOL' index='0' name='requiresExclusiveTouchType' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setState:'>
<arg declared_type='UIGestureRecognizerState' index='0' name='state' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldBeRequiredToFailByGestureRecognizer:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldRequireFailureOfGestureRecognizer:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='state'>
<retval declared_type='UIGestureRecognizerState' type='i' type64='q'/>
</method>
<method selector='touchesBegan:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='touches' type='@'/>
<arg declared_type='UIEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesCancelled:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='touches' type='@'/>
<arg declared_type='UIEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesEnded:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='touches' type='@'/>
<arg declared_type='UIEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesEstimatedPropertiesUpdated:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='touches' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesMoved:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='touches' type='@'/>
<arg declared_type='UIEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
</class>
<class name='UIGraphicsImageRenderer'>
<method selector='JPEGDataWithCompressionQuality:actions:'>
<arg declared_type='CGFloat' index='0' name='compressionQuality' type='f' type64='d'/>
<arg declared_type='UIGraphicsImageDrawingActions _Nonnull' function_pointer='true' index='1' name='actions' type='@?'>
<arg declared_type='UIGraphicsImageRendererContext * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='PNGDataWithActions:'>
<arg declared_type='UIGraphicsImageDrawingActions _Nonnull' function_pointer='true' index='0' name='actions' type='@?'>
<arg declared_type='UIGraphicsImageRendererContext * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='imageWithActions:'>
<arg declared_type='UIGraphicsImageDrawingActions _Nonnull' function_pointer='true' index='0' name='actions' type='@?'>
<arg declared_type='UIGraphicsImageRendererContext * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='initWithBounds:format:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIGraphicsImageRendererFormat * _Nonnull' index='1' name='format' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSize:format:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='UIGraphicsImageRendererFormat * _Nonnull' index='1' name='format' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UIGraphicsImageRendererContext'>
<method selector='currentImage'>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
</class>
<class name='UIGraphicsImageRendererFormat'>
<method class_method='true' selector='formatForTraitCollection:'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='traitCollection' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='opaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preferredRange'>
<retval declared_type='UIGraphicsImageRendererFormatRange' type='i' type64='q'/>
</method>
<method selector='prefersExtendedRange'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setOpaque:'>
<arg declared_type='BOOL' index='0' name='opaque' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredRange:'>
<arg declared_type='UIGraphicsImageRendererFormatRange' index='0' name='preferredRange' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrefersExtendedRange:'>
<arg declared_type='BOOL' index='0' name='prefersExtendedRange' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScale:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIGraphicsPDFRenderer'>
<method selector='PDFDataWithActions:'>
<arg declared_type='UIGraphicsPDFDrawingActions _Nonnull' function_pointer='true' index='0' name='actions' type='@?'>
<arg declared_type='UIGraphicsPDFRendererContext * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='initWithBounds:format:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIGraphicsPDFRendererFormat * _Nonnull' index='1' name='format' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='writePDFToURL:withActions:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='UIGraphicsPDFDrawingActions _Nonnull' function_pointer='true' index='1' name='actions' type='@?'>
<arg declared_type='UIGraphicsPDFRendererContext * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIGraphicsPDFRendererContext'>
<method selector='addDestinationWithName:atPoint:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginPageWithBounds:pageInfo:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='pageInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pdfContextBounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setDestinationWithName:forRect:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='CGRect' index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:forRect:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='CGRect' index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIGraphicsPDFRendererFormat'>
<method selector='documentInfo'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='setDocumentInfo:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='documentInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIGraphicsRenderer'>
<method selector='allowsImageOutput'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='contextWithFormat:'>
<arg declared_type='UIGraphicsRendererFormat * _Nonnull' index='0' name='format' type='@'/>
<retval declared_type='CGContextRef _Nullable' type='^{CGContext=}'/>
</method>
<method selector='format'>
<retval declared_type='__kindof UIGraphicsRendererFormat * _Nonnull' type='@'/>
</method>
<method selector='initWithBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithBounds:format:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIGraphicsRendererFormat * _Nonnull' index='1' name='format' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='prepareCGContext:withRendererContext:'>
<arg declared_type='CGContextRef _Nonnull' index='0' name='context' type='^{CGContext=}'/>
<arg declared_type='UIGraphicsRendererContext * _Nonnull' index='1' name='rendererContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='rendererContextClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='runDrawingActions:completionActions:error:'>
<arg declared_type='UIGraphicsDrawingActions _Nonnull' function_pointer='true' index='0' name='drawingActions' type='@?'>
<arg declared_type='__kindof UIGraphicsRendererContext * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='UIGraphicsDrawingActions _Nullable' function_pointer='true' index='1' name='completionActions' type='@?'>
<arg declared_type='__kindof UIGraphicsRendererContext * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIGraphicsRendererContext'>
<method selector='CGContext'>
<retval declared_type='CGContextRef _Nonnull' type='^{CGContext=}'/>
</method>
<method selector='clipToRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillRect:blendMode:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGBlendMode' index='1' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='format'>
<retval declared_type='__kindof UIGraphicsRendererFormat * _Nonnull' type='@'/>
</method>
<method selector='strokeRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='strokeRect:blendMode:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGBlendMode' index='1' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIGraphicsRendererFormat'>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='defaultFormat'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='preferredFormat'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UIGravityBehavior'>
<method selector='addItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='angle'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='gravityDirection'>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</method>
<method selector='initWithItems:'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='items' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='items'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='magnitude'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='removeItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngle:'>
<arg declared_type='CGFloat' index='0' name='angle' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngle:magnitude:'>
<arg declared_type='CGFloat' index='0' name='angle' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='magnitude' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGravityDirection:'>
<arg declared_type='CGVector' index='0' name='gravityDirection' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMagnitude:'>
<arg declared_type='CGFloat' index='0' name='magnitude' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIImage'>
<method selector='CGImage'>
<retval declared_type='CGImageRef _Nullable' type='^{CGImage=}'/>
</method>
<method selector='CIImage'>
<retval declared_type='CIImage * _Nullable' type='@'/>
</method>
<method selector='alignmentRectInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method class_method='true' selector='animatedImageNamed:duration:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='animatedImageWithImages:duration:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='images' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='animatedResizableImageNamed:capInsets:duration:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='UIEdgeInsets' index='1' name='capInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='animatedResizableImageNamed:capInsets:resizingMode:duration:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='UIEdgeInsets' index='1' name='capInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<arg declared_type='UIImageResizingMode' index='2' name='resizingMode' type='i' type64='q'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='capInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='drawAsPatternInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawAtPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawAtPoint:blendMode:alpha:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGBlendMode' index='1' name='blendMode' type='i'/>
<arg declared_type='CGFloat' index='2' name='alpha' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:blendMode:alpha:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGBlendMode' index='1' name='blendMode' type='i'/>
<arg declared_type='CGFloat' index='2' name='alpha' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='flipsForRightToLeftLayoutDirection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageAsset'>
<retval declared_type='UIImageAsset * _Nullable' type='@'/>
</method>
<method selector='imageFlippedForRightToLeftLayoutDirection'>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageNamed:inBundle:compatibleWithTraitCollection:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='bundle' type='@'/>
<arg declared_type='UITraitCollection * _Nullable' index='2' name='traitCollection' type='@'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='imageOrientation'>
<retval declared_type='UIImageOrientation' type='i' type64='q'/>
</method>
<method selector='imageRendererFormat'>
<retval declared_type='UIGraphicsImageRendererFormat * _Nonnull' type='@'/>
</method>
<method selector='imageWithAlignmentRectInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='alignmentInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageWithCGImage:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='cgImage' type='^{CGImage=}'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageWithCGImage:scale:orientation:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='cgImage' type='^{CGImage=}'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f' type64='d'/>
<arg declared_type='UIImageOrientation' index='2' name='orientation' type='i' type64='q'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageWithCIImage:'>
<arg declared_type='CIImage * _Nonnull' index='0' name='ciImage' type='@'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageWithCIImage:scale:orientation:'>
<arg declared_type='CIImage * _Nonnull' index='0' name='ciImage' type='@'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f' type64='d'/>
<arg declared_type='UIImageOrientation' index='2' name='orientation' type='i' type64='q'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageWithContentsOfFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageWithData:scale:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f' type64='d'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='imageWithHorizontallyFlippedOrientation'>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='imageWithRenderingMode:'>
<arg declared_type='UIImageRenderingMode' index='0' name='renderingMode' type='i' type64='q'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='images'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='initWithCGImage:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='cgImage' type='^{CGImage=}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCGImage:scale:orientation:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='cgImage' type='^{CGImage=}'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f' type64='d'/>
<arg declared_type='UIImageOrientation' index='2' name='orientation' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCIImage:'>
<arg declared_type='CIImage * _Nonnull' index='0' name='ciImage' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCIImage:scale:orientation:'>
<arg declared_type='CIImage * _Nonnull' index='0' name='ciImage' type='@'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f' type64='d'/>
<arg declared_type='UIImageOrientation' index='2' name='orientation' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:scale:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f' type64='d'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='leftCapWidth'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='renderingMode'>
<retval declared_type='UIImageRenderingMode' type='i' type64='q'/>
</method>
<method selector='resizableImageWithCapInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='capInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='resizableImageWithCapInsets:resizingMode:'>
<arg declared_type='UIEdgeInsets' index='0' name='capInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<arg declared_type='UIImageResizingMode' index='1' name='resizingMode' type='i' type64='q'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='resizingMode'>
<retval declared_type='UIImageResizingMode' type='i' type64='q'/>
</method>
<method selector='scale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='stretchableImageWithLeftCapWidth:topCapHeight:'>
<arg declared_type='NSInteger' index='0' name='leftCapWidth' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='topCapHeight' type='i' type64='q'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='topCapHeight'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='traitCollection'>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
</class>
<class name='UIImageAsset'>
<method selector='imageWithTraitCollection:'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='traitCollection' type='@'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='registerImage:withTraitCollection:'>
<arg declared_type='UIImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='UITraitCollection * _Nonnull' index='1' name='traitCollection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unregisterImageWithTraitCollection:'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='traitCollection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIImagePickerController'>
<method selector='allowsEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsImageEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='availableCaptureModesForCameraDevice:'>
<arg declared_type='UIImagePickerControllerCameraDevice' index='0' name='cameraDevice' type='i' type64='q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='availableMediaTypesForSourceType:'>
<arg declared_type='UIImagePickerControllerSourceType' index='0' name='sourceType' type='i' type64='q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='cameraCaptureMode'>
<retval declared_type='UIImagePickerControllerCameraCaptureMode' type='i' type64='q'/>
</method>
<method selector='cameraDevice'>
<retval declared_type='UIImagePickerControllerCameraDevice' type='i' type64='q'/>
</method>
<method selector='cameraFlashMode'>
<retval declared_type='UIImagePickerControllerCameraFlashMode' type='i' type64='q'/>
</method>
<method selector='cameraOverlayView'>
<retval declared_type='__kindof UIView * _Nullable' type='@'/>
</method>
<method selector='cameraViewTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='imageExportPreset'>
<retval declared_type='UIImagePickerControllerImageURLExportPreset' type='i' type64='q'/>
</method>
<method class_method='true' selector='isCameraDeviceAvailable:'>
<arg declared_type='UIImagePickerControllerCameraDevice' index='0' name='cameraDevice' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isFlashAvailableForCameraDevice:'>
<arg declared_type='UIImagePickerControllerCameraDevice' index='0' name='cameraDevice' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isSourceTypeAvailable:'>
<arg declared_type='UIImagePickerControllerSourceType' index='0' name='sourceType' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mediaTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setAllowsEditing:'>
<arg declared_type='BOOL' index='0' name='allowsEditing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsImageEditing:'>
<arg declared_type='BOOL' index='0' name='allowsImageEditing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraCaptureMode:'>
<arg declared_type='UIImagePickerControllerCameraCaptureMode' index='0' name='cameraCaptureMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraDevice:'>
<arg declared_type='UIImagePickerControllerCameraDevice' index='0' name='cameraDevice' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraFlashMode:'>
<arg declared_type='UIImagePickerControllerCameraFlashMode' index='0' name='cameraFlashMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraOverlayView:'>
<arg declared_type='__kindof UIView * _Nullable' index='0' name='cameraOverlayView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraViewTransform:'>
<arg declared_type='CGAffineTransform' index='0' name='cameraViewTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageExportPreset:'>
<arg declared_type='UIImagePickerControllerImageURLExportPreset' index='0' name='imageExportPreset' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMediaTypes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='mediaTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsCameraControls:'>
<arg declared_type='BOOL' index='0' name='showsCameraControls' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceType:'>
<arg declared_type='UIImagePickerControllerSourceType' index='0' name='sourceType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoExportPreset:'>
<arg declared_type='NSString * _Nonnull' index='0' name='videoExportPreset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoMaximumDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='videoMaximumDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoQuality:'>
<arg declared_type='UIImagePickerControllerQualityType' index='0' name='videoQuality' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsCameraControls'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sourceType'>
<retval declared_type='UIImagePickerControllerSourceType' type='i' type64='q'/>
</method>
<method selector='startVideoCapture'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stopVideoCapture'>
<retval declared_type='void' type='v'/>
</method>
<method selector='takePicture'>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoExportPreset'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='videoMaximumDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='videoQuality'>
<retval declared_type='UIImagePickerControllerQualityType' type='i' type64='q'/>
</method>
</class>
<class name='UIImageView'>
<method selector='animationDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='animationImages'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='animationRepeatCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='highlightedAnimationImages'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='highlightedImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='image'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='initWithImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithImage:highlightedImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIImage * _Nullable' index='1' name='highlightedImage' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUserInteractionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAnimationDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='animationDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationImages:'>
<arg declared_type='NSArray * _Nullable' index='0' name='animationImages' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationRepeatCount:'>
<arg declared_type='NSInteger' index='0' name='animationRepeatCount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type='BOOL' index='0' name='highlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedAnimationImages:'>
<arg declared_type='NSArray * _Nullable' index='0' name='highlightedAnimationImages' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='highlightedImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInteractionEnabled:'>
<arg declared_type='BOOL' index='0' name='userInteractionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimating'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimating'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
</class>
<class name='UIImpactFeedbackGenerator'>
<method selector='impactOccurred'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithStyle:'>
<arg declared_type='UIImpactFeedbackStyle' index='0' name='style' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UIInputView'>
<method selector='allowsSelfSizing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:inputViewStyle:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIInputViewStyle' index='1' name='inputViewStyle' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='inputViewStyle'>
<retval declared_type='UIInputViewStyle' type='i' type64='q'/>
</method>
<method selector='setAllowsSelfSizing:'>
<arg declared_type='BOOL' index='0' name='allowsSelfSizing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIInputViewController'>
<method selector='advanceToNextInputMode'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dismissKeyboard'>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleInputModeListFromView:withEvent:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='UIEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasDictationKey'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasFullAccess'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inputView'>
<retval declared_type='UIInputView * _Nullable' type='@'/>
</method>
<method selector='needsInputModeSwitchKey'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='primaryLanguage'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='requestSupplementaryLexiconWithCompletion:'>
<arg declared_type='void (^ _Nonnull)(UILexicon * _Nonnull)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='UILexicon * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasDictationKey:'>
<arg declared_type='BOOL' index='0' name='hasDictationKey' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputView:'>
<arg declared_type='UIInputView * _Nullable' index='0' name='inputView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrimaryLanguage:'>
<arg declared_type='NSString * _Nullable' index='0' name='primaryLanguage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDocumentProxy'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
</class>
<class name='UIInterpolatingMotionEffect'>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithKeyPath:type:'>
<arg declared_type='NSString * _Nonnull' index='0' name='keyPath' type='@'/>
<arg declared_type='UIInterpolatingMotionEffectType' index='1' name='type' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='maximumRelativeValue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='minimumRelativeValue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setMaximumRelativeValue:'>
<arg declared_type='id _Nullable' index='0' name='maximumRelativeValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumRelativeValue:'>
<arg declared_type='id _Nullable' index='0' name='minimumRelativeValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='type'>
<retval declared_type='UIInterpolatingMotionEffectType' type='i' type64='q'/>
</method>
</class>
<class name='UIKeyCommand'>
<method selector='discoverabilityTitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='input'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method class_method='true' selector='keyCommandWithInput:modifierFlags:action:'>
<arg declared_type='NSString * _Nonnull' index='0' name='input' type='@'/>
<arg declared_type='UIKeyModifierFlags' index='1' name='modifierFlags' type='i' type64='q'/>
<arg declared_type='SEL _Nonnull' index='2' name='action' type=':'/>
<retval declared_type='UIKeyCommand * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='keyCommandWithInput:modifierFlags:action:discoverabilityTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='input' type='@'/>
<arg declared_type='UIKeyModifierFlags' index='1' name='modifierFlags' type='i' type64='q'/>
<arg declared_type='SEL _Nonnull' index='2' name='action' type=':'/>
<arg declared_type='NSString * _Nonnull' index='3' name='discoverabilityTitle' type='@'/>
<retval declared_type='UIKeyCommand * _Nonnull' type='@'/>
</method>
<method selector='modifierFlags'>
<retval declared_type='UIKeyModifierFlags' type='i' type64='q'/>
</method>
<method selector='setDiscoverabilityTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='discoverabilityTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UILabel'>
<method selector='adjustsFontSizeToFitWidth'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='adjustsLetterSpacingToFitWidth'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributedText'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='baselineAdjustment'>
<retval declared_type='UIBaselineAdjustment' type='i' type64='q'/>
</method>
<method selector='drawTextInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='font'>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='highlightedTextColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUserInteractionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='i' type64='q'/>
</method>
<method selector='minimumFontSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumScaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='numberOfLines'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='preferredMaxLayoutWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setAdjustsFontSizeToFitWidth:'>
<arg declared_type='BOOL' index='0' name='adjustsFontSizeToFitWidth' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAdjustsLetterSpacingToFitWidth:'>
<arg declared_type='BOOL' index='0' name='adjustsLetterSpacingToFitWidth' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsDefaultTighteningForTruncation:'>
<arg declared_type='BOOL' index='0' name='allowsDefaultTighteningForTruncation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedText:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaselineAdjustment:'>
<arg declared_type='UIBaselineAdjustment' index='0' name='baselineAdjustment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='UIFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type='BOOL' index='0' name='highlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTextColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='highlightedTextColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type='NSLineBreakMode' index='0' name='lineBreakMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumFontSize:'>
<arg declared_type='CGFloat' index='0' name='minimumFontSize' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumScaleFactor:'>
<arg declared_type='CGFloat' index='0' name='minimumScaleFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfLines:'>
<arg declared_type='NSInteger' index='0' name='numberOfLines' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredMaxLayoutWidth:'>
<arg declared_type='CGFloat' index='0' name='preferredMaxLayoutWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='shadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowOffset:'>
<arg declared_type='CGSize' index='0' name='shadowOffset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:'>
<arg declared_type='NSString * _Nullable' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='textAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInteractionEnabled:'>
<arg declared_type='BOOL' index='0' name='userInteractionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='shadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='text'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='textAlignment'>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='textRectForBounds:limitedToNumberOfLines:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSInteger' index='1' name='numberOfLines' type='i' type64='q'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='UILayoutGuide'>
<method selector='bottomAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='centerXAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='centerYAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='constraintsAffectingLayoutForAxis:'>
<arg declared_type='UILayoutConstraintAxis' index='0' name='axis' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='hasAmbiguousLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='heightAnchor'>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='layoutFrame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='leadingAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='leftAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='owningView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='rightAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOwningView:'>
<arg declared_type='UIView * _Nullable' index='0' name='owningView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='topAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='trailingAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='widthAnchor'>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
</class>
<class name='UILexicon'>
<method selector='entries'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='UILexiconEntry'>
<method selector='documentText'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='userInput'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='UILocalNotification'>
<method selector='alertAction'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='alertBody'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='alertLaunchImage'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='alertTitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='applicationIconBadgeNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='category'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fireDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='hasAction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='region'>
<retval declared_type='CLRegion * _Nullable' type='@'/>
</method>
<method selector='regionTriggersOnce'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='repeatCalendar'>
<retval declared_type='NSCalendar * _Nullable' type='@'/>
</method>
<method selector='repeatInterval'>
<retval declared_type='NSCalendarUnit' type='I' type64='Q'/>
</method>
<method selector='setAlertAction:'>
<arg declared_type='NSString * _Nullable' index='0' name='alertAction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlertBody:'>
<arg declared_type='NSString * _Nullable' index='0' name='alertBody' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlertLaunchImage:'>
<arg declared_type='NSString * _Nullable' index='0' name='alertLaunchImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlertTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='alertTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setApplicationIconBadgeNumber:'>
<arg declared_type='NSInteger' index='0' name='applicationIconBadgeNumber' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCategory:'>
<arg declared_type='NSString * _Nullable' index='0' name='category' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFireDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='fireDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasAction:'>
<arg declared_type='BOOL' index='0' name='hasAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRegion:'>
<arg declared_type='CLRegion * _Nullable' index='0' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRegionTriggersOnce:'>
<arg declared_type='BOOL' index='0' name='regionTriggersOnce' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepeatCalendar:'>
<arg declared_type='NSCalendar * _Nullable' index='0' name='repeatCalendar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepeatInterval:'>
<arg declared_type='NSCalendarUnit' index='0' name='repeatInterval' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSoundName:'>
<arg declared_type='NSString * _Nullable' index='0' name='soundName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg declared_type='NSTimeZone * _Nullable' index='0' name='timeZone' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='soundName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone * _Nullable' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
</class>
<class name='UILocalizedIndexedCollation'>
<method class_method='true' selector='currentCollation'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='sectionForObject:collationStringSelector:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='selector' type=':'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='sectionForSectionIndexTitleAtIndex:'>
<arg declared_type='NSInteger' index='0' name='indexTitleIndex' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='sectionIndexTitles'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='sectionTitles'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='sortedArrayFromArray:collationStringSelector:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='array' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='selector' type=':'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='UILongPressGestureRecognizer'>
<method selector='allowableMovement'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumPressDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='numberOfTapsRequired'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setAllowableMovement:'>
<arg declared_type='CGFloat' index='0' name='allowableMovement' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumPressDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='minimumPressDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTapsRequired:'>
<arg declared_type='NSUInteger' index='0' name='numberOfTapsRequired' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg declared_type='NSUInteger' index='0' name='numberOfTouchesRequired' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIManagedDocument'>
<method selector='additionalContentForURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='absoluteURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='storeURL' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='fileType' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='configuration' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='3' name='storeOptions' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext * _Nonnull' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel * _Nonnull' type='@'/>
</method>
<method selector='modelConfiguration'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method class_method='true' selector='persistentStoreName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='persistentStoreOptions'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='persistentStoreTypeForFileType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileType' type='@'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='readAdditionalContentFromURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='absoluteURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setModelConfiguration:'>
<arg declared_type='NSString * _Nullable' index='0' name='modelConfiguration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStoreOptions:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='persistentStoreOptions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeAdditionalContent:toURL:originalContentsURL:error:'>
<arg declared_type='id _Nonnull' index='0' name='content' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='absoluteURL' type='@'/>
<arg declared_type='NSURL * _Nullable' index='2' name='absoluteOriginalContentsURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIMarkupTextPrintFormatter'>
<method selector='initWithMarkupText:'>
<arg declared_type='NSString * _Nonnull' index='0' name='markupText' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='markupText'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setMarkupText:'>
<arg declared_type='NSString * _Nullable' index='0' name='markupText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIMenuController'>
<method selector='arrowDirection'>
<retval declared_type='UIMenuControllerArrowDirection' type='i' type64='q'/>
</method>
<method selector='isMenuVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='menuFrame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='menuItems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setArrowDirection:'>
<arg declared_type='UIMenuControllerArrowDirection' index='0' name='arrowDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenuItems:'>
<arg declared_type='NSArray * _Nullable' index='0' name='menuItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenuVisible:'>
<arg declared_type='BOOL' index='0' name='menuVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenuVisible:animated:'>
<arg declared_type='BOOL' index='0' name='menuVisible' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetRect:inView:'>
<arg declared_type='CGRect' index='0' name='targetRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull' index='1' name='targetView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedMenuController'>
<retval declared_type='UIMenuController * _Nonnull' type='@'/>
</method>
<method selector='update'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIMenuItem'>
<method selector='action'>
<retval declared_type='SEL _Nonnull' type=':'/>
</method>
<method selector='initWithTitle:action:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='UIMotionEffect'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='keyPathsAndRelativeValuesForViewerOffset:'>
<arg declared_type='UIOffset' index='0' name='viewerOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
</class>
<class name='UIMotionEffectGroup'>
<method selector='motionEffects'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setMotionEffects:'>
<arg declared_type='NSArray * _Nullable' index='0' name='motionEffects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIMutableApplicationShortcutItem'>
<method selector='icon'>
<retval declared_type='UIApplicationShortcutIcon * _Nullable' type='@'/>
</method>
<method selector='localizedSubtitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='localizedTitle'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='setIcon:'>
<arg declared_type='UIApplicationShortcutIcon * _Nullable' index='0' name='icon' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalizedSubtitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='localizedSubtitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalizedTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='localizedTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary&gt; * _Nullable' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='type'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary&gt; * _Nullable' type='@'/>
</method>
</class>
<class name='UIMutableUserNotificationAction'>
<method selector='activationMode'>
<retval declared_type='UIUserNotificationActivationMode' type='I' type64='Q'/>
</method>
<method selector='behavior'>
<retval declared_type='UIUserNotificationActionBehavior' type='I' type64='Q'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='isAuthenticationRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDestructive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parameters'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='setActivationMode:'>
<arg declared_type='UIUserNotificationActivationMode' index='0' name='activationMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationRequired:'>
<arg declared_type='BOOL' index='0' name='authenticationRequired' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBehavior:'>
<arg declared_type='UIUserNotificationActionBehavior' index='0' name='behavior' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestructive:'>
<arg declared_type='BOOL' index='0' name='destructive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParameters:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='parameters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='UIMutableUserNotificationCategory'>
<method selector='identifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setActions:forContext:'>
<arg declared_type='NSArray * _Nullable' index='0' name='actions' type='@'/>
<arg declared_type='UIUserNotificationActionContext' index='1' name='context' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UINavigationBar'>
<method selector='backIndicatorImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='backIndicatorTransitionMaskImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='backItem'>
<retval declared_type='UINavigationItem * _Nullable' type='@'/>
</method>
<method selector='backgroundImageForBarMetrics:'>
<arg declared_type='UIBarMetrics' index='0' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='backgroundImageForBarPosition:barMetrics:'>
<arg declared_type='UIBarPosition' index='0' name='barPosition' type='i' type64='q'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='barStyle'>
<retval declared_type='UIBarStyle' type='i' type64='q'/>
</method>
<method selector='barTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='isTranslucent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='items'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='largeTitleTextAttributes'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='popNavigationItemAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='UINavigationItem * _Nullable' type='@'/>
</method>
<method selector='prefersLargeTitles'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pushNavigationItem:animated:'>
<arg declared_type='UINavigationItem * _Nonnull' index='0' name='item' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackIndicatorImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backIndicatorImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackIndicatorTransitionMaskImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backIndicatorTransitionMaskImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImage:forBarMetrics:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImage:forBarPosition:barMetrics:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<arg declared_type='UIBarPosition' index='1' name='barPosition' type='i' type64='q'/>
<arg declared_type='UIBarMetrics' index='2' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarStyle:'>
<arg declared_type='UIBarStyle' index='0' name='barStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='barTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItems:'>
<arg declared_type='NSArray * _Nullable' index='0' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItems:animated:'>
<arg declared_type='NSArray * _Nullable' index='0' name='items' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLargeTitleTextAttributes:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='largeTitleTextAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrefersLargeTitles:'>
<arg declared_type='BOOL' index='0' name='prefersLargeTitles' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='shadowImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleTextAttributes:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='titleTextAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleVerticalPositionAdjustment:forBarMetrics:'>
<arg declared_type='CGFloat' index='0' name='adjustment' type='f' type64='d'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTranslucent:'>
<arg declared_type='BOOL' index='0' name='translucent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='titleTextAttributes'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='titleVerticalPositionAdjustmentForBarMetrics:'>
<arg declared_type='UIBarMetrics' index='0' name='barMetrics' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='topItem'>
<retval declared_type='UINavigationItem * _Nullable' type='@'/>
</method>
</class>
<class name='UINavigationController'>
<method selector='barHideOnSwipeGestureRecognizer'>
<retval declared_type='UIPanGestureRecognizer * _Nonnull' type='@'/>
</method>
<method selector='barHideOnTapGestureRecognizer'>
<retval declared_type='UITapGestureRecognizer * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='hidesBarsOnSwipe'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hidesBarsOnTap'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hidesBarsWhenKeyboardAppears'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hidesBarsWhenVerticallyCompact'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithNavigationBarClass:toolbarClass:'>
<arg declared_type='Class _Nullable' index='0' name='navigationBarClass' type='#'/>
<arg declared_type='Class _Nullable' index='1' name='toolbarClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithRootViewController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='rootViewController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='interactivePopGestureRecognizer'>
<retval declared_type='UIGestureRecognizer * _Nullable' type='@'/>
</method>
<method selector='isNavigationBarHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isToolbarHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='navigationBar'>
<retval declared_type='UINavigationBar * _Nonnull' type='@'/>
</method>
<method selector='popToRootViewControllerAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='popToViewController:animated:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='viewController' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='popViewControllerAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='pushViewController:animated:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='viewController' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesBarsOnSwipe:'>
<arg declared_type='BOOL' index='0' name='hidesBarsOnSwipe' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesBarsOnTap:'>
<arg declared_type='BOOL' index='0' name='hidesBarsOnTap' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesBarsWhenKeyboardAppears:'>
<arg declared_type='BOOL' index='0' name='hidesBarsWhenKeyboardAppears' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesBarsWhenVerticallyCompact:'>
<arg declared_type='BOOL' index='0' name='hidesBarsWhenVerticallyCompact' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNavigationBarHidden:'>
<arg declared_type='BOOL' index='0' name='navigationBarHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNavigationBarHidden:animated:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolbarHidden:'>
<arg declared_type='BOOL' index='0' name='toolbarHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolbarHidden:animated:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewControllers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='viewControllers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewControllers:animated:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='viewControllers' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showViewController:sender:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='vc' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toolbar'>
<retval declared_type='UIToolbar * _Nonnull' type='@'/>
</method>
<method selector='topViewController'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='viewControllers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='visibleViewController'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
</class>
<class name='UINavigationItem'>
<method selector='backBarButtonItem'>
<retval declared_type='UIBarButtonItem * _Nullable' type='@'/>
</method>
<method selector='hidesBackButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hidesSearchBarWhenScrolling'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='largeTitleDisplayMode'>
<retval declared_type='UINavigationItemLargeTitleDisplayMode' type='i' type64='q'/>
</method>
<method selector='leftBarButtonItem'>
<retval declared_type='UIBarButtonItem * _Nullable' type='@'/>
</method>
<method selector='leftBarButtonItems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='leftItemsSupplementBackButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prompt'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='rightBarButtonItem'>
<retval declared_type='UIBarButtonItem * _Nullable' type='@'/>
</method>
<method selector='rightBarButtonItems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='searchController'>
<retval declared_type='UISearchController * _Nullable' type='@'/>
</method>
<method selector='setBackBarButtonItem:'>
<arg declared_type='UIBarButtonItem * _Nullable' index='0' name='backBarButtonItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesBackButton:'>
<arg declared_type='BOOL' index='0' name='hidesBackButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesBackButton:animated:'>
<arg declared_type='BOOL' index='0' name='hidesBackButton' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesSearchBarWhenScrolling:'>
<arg declared_type='BOOL' index='0' name='hidesSearchBarWhenScrolling' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLargeTitleDisplayMode:'>
<arg declared_type='UINavigationItemLargeTitleDisplayMode' index='0' name='largeTitleDisplayMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftBarButtonItem:'>
<arg declared_type='UIBarButtonItem * _Nullable' index='0' name='leftBarButtonItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftBarButtonItem:animated:'>
<arg declared_type='UIBarButtonItem * _Nullable' index='0' name='item' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftBarButtonItems:'>
<arg declared_type='NSArray * _Nullable' index='0' name='leftBarButtonItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftBarButtonItems:animated:'>
<arg declared_type='NSArray * _Nullable' index='0' name='items' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftItemsSupplementBackButton:'>
<arg declared_type='BOOL' index='0' name='leftItemsSupplementBackButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrompt:'>
<arg declared_type='NSString * _Nullable' index='0' name='prompt' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightBarButtonItem:'>
<arg declared_type='UIBarButtonItem * _Nullable' index='0' name='rightBarButtonItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightBarButtonItem:animated:'>
<arg declared_type='UIBarButtonItem * _Nullable' index='0' name='item' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightBarButtonItems:'>
<arg declared_type='NSArray * _Nullable' index='0' name='rightBarButtonItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightBarButtonItems:animated:'>
<arg declared_type='NSArray * _Nullable' index='0' name='items' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchController:'>
<arg declared_type='UISearchController * _Nullable' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleView:'>
<arg declared_type='UIView * _Nullable' index='0' name='titleView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='titleView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
</class>
<class name='UINib'>
<method selector='instantiateWithOwner:options:'>
<arg declared_type='id _Nullable' index='0' name='ownerOrNil' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='optionsOrNil' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='nibWithData:bundle:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='bundleOrNil' type='@'/>
<retval declared_type='UINib * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='nibWithNibName:bundle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='bundleOrNil' type='@'/>
<retval declared_type='UINib * _Nonnull' type='@'/>
</method>
</class>
<class name='UINotificationFeedbackGenerator'>
<method selector='notificationOccurred:'>
<arg declared_type='UINotificationFeedbackType' index='0' name='notificationType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIPageControl'>
<method selector='currentPage'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='currentPageIndicatorTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='defersCurrentPageDisplay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hidesForSinglePage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='numberOfPages'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='pageIndicatorTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='setCurrentPage:'>
<arg declared_type='NSInteger' index='0' name='currentPage' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentPageIndicatorTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='currentPageIndicatorTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefersCurrentPageDisplay:'>
<arg declared_type='BOOL' index='0' name='defersCurrentPageDisplay' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesForSinglePage:'>
<arg declared_type='BOOL' index='0' name='hidesForSinglePage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfPages:'>
<arg declared_type='NSInteger' index='0' name='numberOfPages' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPageIndicatorTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='pageIndicatorTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeForNumberOfPages:'>
<arg declared_type='NSInteger' index='0' name='pageCount' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='updateCurrentPageDisplay'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIPageViewController'>
<method selector='dataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='gestureRecognizers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithTransitionStyle:navigationOrientation:options:'>
<arg declared_type='UIPageViewControllerTransitionStyle' index='0' name='style' type='i' type64='q'/>
<arg declared_type='UIPageViewControllerNavigationOrientation' index='1' name='navigationOrientation' type='i' type64='q'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='options' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isDoubleSided'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='navigationOrientation'>
<retval declared_type='UIPageViewControllerNavigationOrientation' type='i' type64='q'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id _Nullable' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleSided:'>
<arg declared_type='BOOL' index='0' name='doubleSided' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewControllers:direction:animated:completion:'>
<arg declared_type='NSArray * _Nullable' index='0' name='viewControllers' type='@'/>
<arg declared_type='UIPageViewControllerNavigationDirection' index='1' name='direction' type='i' type64='q'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='3' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='spineLocation'>
<retval declared_type='UIPageViewControllerSpineLocation' type='i' type64='q'/>
</method>
<method selector='transitionStyle'>
<retval declared_type='UIPageViewControllerTransitionStyle' type='i' type64='q'/>
</method>
<method selector='viewControllers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='UIPanGestureRecognizer'>
<method selector='maximumNumberOfTouches'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minimumNumberOfTouches'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setMaximumNumberOfTouches:'>
<arg declared_type='NSUInteger' index='0' name='maximumNumberOfTouches' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumNumberOfTouches:'>
<arg declared_type='NSUInteger' index='0' name='minimumNumberOfTouches' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTranslation:inView:'>
<arg declared_type='CGPoint' index='0' name='translation' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UIView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='translationInView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='velocityInView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='UIPasteConfiguration'>
<method selector='acceptableTypeIdentifiers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='addAcceptableTypeIdentifiers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='acceptableTypeIdentifiers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTypeIdentifiersForAcceptingClass:'>
<arg declared_type='Class _Nonnull' index='0' name='aClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithAcceptableTypeIdentifiers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='acceptableTypeIdentifiers' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTypeIdentifiersForAcceptingClass:'>
<arg declared_type='Class _Nonnull' index='0' name='aClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAcceptableTypeIdentifiers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='acceptableTypeIdentifiers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIPasteboard'>
<method selector='URL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='URLs'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='addItems:'>
<arg declared_type='NSArray *&gt; * _Nonnull' index='0' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='color'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='colors'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='containsPasteboardTypes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='pasteboardTypes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsPasteboardTypes:inItemSet:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='pasteboardTypes' type='@'/>
<arg declared_type='NSIndexSet * _Nullable' index='1' name='itemSet' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataForPasteboardType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='pasteboardType' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='dataForPasteboardType:inItemSet:'>
<arg declared_type='NSString * _Nonnull' index='0' name='pasteboardType' type='@'/>
<arg declared_type='NSIndexSet * _Nullable' index='1' name='itemSet' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='generalPasteboard'>
<retval declared_type='UIPasteboard * _Nonnull' type='@'/>
</method>
<method selector='hasColors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasImages'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasStrings'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasURLs'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='image'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='images'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='isPersistent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemProviders'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='itemSetWithPasteboardTypes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='pasteboardTypes' type='@'/>
<retval declared_type='NSIndexSet * _Nullable' type='@'/>
</method>
<method selector='items'>
<retval declared_type='NSArray *&gt; * _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='UIPasteboardName _Nonnull' type='@'/>
</method>
<method selector='numberOfItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='pasteboardTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='pasteboardTypesForItemSet:'>
<arg declared_type='NSIndexSet * _Nullable' index='0' name='itemSet' type='@'/>
<retval declared_type='NSArray *&gt; * _Nullable' type='@'/>
</method>
<method class_method='true' selector='pasteboardWithName:create:'>
<arg declared_type='UIPasteboardName _Nonnull' index='0' name='pasteboardName' type='@'/>
<arg declared_type='BOOL' index='1' name='create' type='B'/>
<retval declared_type='UIPasteboard * _Nullable' type='@'/>
</method>
<method class_method='true' selector='pasteboardWithUniqueName'>
<retval declared_type='UIPasteboard * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='removePasteboardWithName:'>
<arg declared_type='UIPasteboardName _Nonnull' index='0' name='pasteboardName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColors:'>
<arg declared_type='NSArray * _Nullable' index='0' name='colors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setData:forPasteboardType:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='pasteboardType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImages:'>
<arg declared_type='NSArray * _Nullable' index='0' name='images' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemProviders:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='itemProviders' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemProviders:localOnly:expirationDate:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='itemProviders' type='@'/>
<arg declared_type='BOOL' index='1' name='localOnly' type='B'/>
<arg declared_type='NSDate * _Nullable' index='2' name='expirationDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItems:'>
<arg declared_type='NSArray *&gt; * _Nonnull' index='0' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItems:options:'>
<arg declared_type='NSArray *&gt; * _Nonnull' index='0' name='items' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjects:'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='objects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjects:localOnly:expirationDate:'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='objects' type='@'/>
<arg declared_type='BOOL' index='1' name='localOnly' type='B'/>
<arg declared_type='NSDate * _Nullable' index='2' name='expirationDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistent:'>
<arg declared_type='BOOL' index='0' name='persistent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg declared_type='NSString * _Nullable' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrings:'>
<arg declared_type='NSArray * _Nullable' index='0' name='strings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='URL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURLs:'>
<arg declared_type='NSArray * _Nullable' index='0' name='URLs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forPasteboardType:'>
<arg declared_type='id _Nonnull' index='0' name='value' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='pasteboardType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='strings'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='valueForPasteboardType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='pasteboardType' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='valuesForPasteboardType:inItemSet:'>
<arg declared_type='NSString * _Nonnull' index='0' name='pasteboardType' type='@'/>
<arg declared_type='NSIndexSet * _Nullable' index='1' name='itemSet' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='UIPencilInteraction'>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='preferredTapAction'>
<retval declared_type='UIPencilPreferredAction' type='i' type64='q'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIPercentDrivenInteractiveTransition'>
<method selector='cancelInteractiveTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='completionCurve'>
<retval declared_type='UIViewAnimationCurve' type='i' type64='q'/>
</method>
<method selector='completionSpeed'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='duration'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='finishInteractiveTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pauseInteractiveTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='percentComplete'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setCompletionCurve:'>
<arg declared_type='UIViewAnimationCurve' index='0' name='completionCurve' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionSpeed:'>
<arg declared_type='CGFloat' index='0' name='completionSpeed' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimingCurve:'>
<arg declared_type='id _Nullable' index='0' name='timingCurve' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWantsInteractiveStart:'>
<arg declared_type='BOOL' index='0' name='wantsInteractiveStart' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timingCurve'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='updateInteractiveTransition:'>
<arg declared_type='CGFloat' index='0' name='percentComplete' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='wantsInteractiveStart'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIPickerView'>
<method selector='dataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='numberOfComponents'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfRowsInComponent:'>
<arg declared_type='NSInteger' index='0' name='component' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='reloadAllComponents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadComponent:'>
<arg declared_type='NSInteger' index='0' name='component' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rowSizeForComponent:'>
<arg declared_type='NSInteger' index='0' name='component' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='selectRow:inComponent:animated:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedRowInComponent:'>
<arg declared_type='NSInteger' index='0' name='component' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id _Nullable' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsSelectionIndicator:'>
<arg declared_type='BOOL' index='0' name='showsSelectionIndicator' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsSelectionIndicator'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='viewForRow:forComponent:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
</class>
<class name='UIPinchGestureRecognizer'>
<method selector='scale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setScale:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='velocity'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='UIPopoverBackgroundView'>
<method selector='arrowDirection'>
<retval declared_type='UIPopoverArrowDirection' type='I' type64='Q'/>
</method>
<method selector='arrowOffset'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setArrowDirection:'>
<arg declared_type='UIPopoverArrowDirection' index='0' name='arrowDirection' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArrowOffset:'>
<arg declared_type='CGFloat' index='0' name='arrowOffset' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='wantsDefaultContentAppearance'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIPopoverController'>
<method selector='backgroundColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='contentViewController'>
<retval declared_type='UIViewController * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dismissPopoverAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithContentViewController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isPopoverVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='passthroughViews'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='popoverArrowDirection'>
<retval declared_type='UIPopoverArrowDirection' type='I' type64='Q'/>
</method>
<method selector='popoverBackgroundViewClass'>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method selector='popoverContentSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='popoverLayoutMargins'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='presentPopoverFromBarButtonItem:permittedArrowDirections:animated:'>
<arg declared_type='UIBarButtonItem * _Nonnull' index='0' name='item' type='@'/>
<arg declared_type='UIPopoverArrowDirection' index='1' name='arrowDirections' type='I' type64='Q'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentPopoverFromRect:inView:permittedArrowDirections:animated:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='UIPopoverArrowDirection' index='2' name='arrowDirections' type='I' type64='Q'/>
<arg declared_type='BOOL' index='3' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='contentViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewController:animated:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='viewController' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassthroughViews:'>
<arg declared_type='NSArray * _Nullable' index='0' name='passthroughViews' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPopoverBackgroundViewClass:'>
<arg declared_type='Class _Nullable' index='0' name='popoverBackgroundViewClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPopoverContentSize:'>
<arg declared_type='CGSize' index='0' name='popoverContentSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPopoverContentSize:animated:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPopoverLayoutMargins:'>
<arg declared_type='UIEdgeInsets' index='0' name='popoverLayoutMargins' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIPopoverPresentationController'>
<method selector='arrowDirection'>
<retval declared_type='UIPopoverArrowDirection' type='I' type64='Q'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='barButtonItem'>
<retval declared_type='UIBarButtonItem * _Nullable' type='@'/>
</method>
<method selector='canOverlapSourceViewRect'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='passthroughViews'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='permittedArrowDirections'>
<retval declared_type='UIPopoverArrowDirection' type='I' type64='Q'/>
</method>
<method selector='popoverBackgroundViewClass'>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method selector='popoverLayoutMargins'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarButtonItem:'>
<arg declared_type='UIBarButtonItem * _Nullable' index='0' name='barButtonItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanOverlapSourceViewRect:'>
<arg declared_type='BOOL' index='0' name='canOverlapSourceViewRect' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassthroughViews:'>
<arg declared_type='NSArray * _Nullable' index='0' name='passthroughViews' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPermittedArrowDirections:'>
<arg declared_type='UIPopoverArrowDirection' index='0' name='permittedArrowDirections' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPopoverBackgroundViewClass:'>
<arg declared_type='Class _Nullable' index='0' name='popoverBackgroundViewClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPopoverLayoutMargins:'>
<arg declared_type='UIEdgeInsets' index='0' name='popoverLayoutMargins' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceRect:'>
<arg declared_type='CGRect' index='0' name='sourceRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceView:'>
<arg declared_type='UIView * _Nullable' index='0' name='sourceView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sourceView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
</class>
<class name='UIPresentationController'>
<method selector='adaptivePresentationStyle'>
<retval declared_type='UIModalPresentationStyle' type='i' type64='q'/>
</method>
<method selector='adaptivePresentationStyleForTraitCollection:'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='traitCollection' type='@'/>
<retval declared_type='UIModalPresentationStyle' type='i' type64='q'/>
</method>
<method selector='containerView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='containerViewDidLayoutSubviews'>
<retval declared_type='void' type='v'/>
</method>
<method selector='containerViewWillLayoutSubviews'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dismissalTransitionDidEnd:'>
<arg declared_type='BOOL' index='0' name='completed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dismissalTransitionWillBegin'>
<retval declared_type='void' type='v'/>
</method>
<method selector='frameOfPresentedViewInContainerView'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initWithPresentedViewController:presentingViewController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='presentedViewController' type='@'/>
<arg declared_type='UIViewController * _Nullable' index='1' name='presentingViewController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='overrideTraitCollection'>
<retval declared_type='UITraitCollection * _Nullable' type='@'/>
</method>
<method selector='presentationStyle'>
<retval declared_type='UIModalPresentationStyle' type='i' type64='q'/>
</method>
<method selector='presentationTransitionDidEnd:'>
<arg declared_type='BOOL' index='0' name='completed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentationTransitionWillBegin'>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentedView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='presentedViewController'>
<retval declared_type='UIViewController * _Nonnull' type='@'/>
</method>
<method selector='presentingViewController'>
<retval declared_type='UIViewController * _Nonnull' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOverrideTraitCollection:'>
<arg declared_type='UITraitCollection * _Nullable' index='0' name='overrideTraitCollection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldPresentInFullscreen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldRemovePresentersView'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIPress'>
<method selector='force'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='gestureRecognizers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='phase'>
<retval declared_type='UIPressPhase' type='i' type64='q'/>
</method>
<method selector='responder'>
<retval declared_type='UIResponder * _Nullable' type='@'/>
</method>
<method selector='timestamp'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='type'>
<retval declared_type='UIPressType' type='i' type64='q'/>
</method>
<method selector='window'>
<retval declared_type='UIWindow * _Nullable' type='@'/>
</method>
</class>
<class name='UIPressesEvent'>
<method selector='allPresses'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='pressesForGestureRecognizer:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gesture' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
</class>
<class name='UIPreviewAction'>
<method class_method='true' selector='actionWithTitle:style:handler:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='UIPreviewActionStyle' index='1' name='style' type='i' type64='q'/>
<arg declared_type='void (^ _Nonnull)(UIPreviewAction * _Nonnull, UIViewController * _Nonnull)' function_pointer='true' index='2' name='handler' type='@?'>
<arg declared_type='UIPreviewAction * _Nonnull' type='@'/>
<arg declared_type='UIViewController * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='handler'>
<retval declared_type='void (^ _Nonnull)(id _Nonnull, UIViewController * _Nonnull)' function_pointer='true' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<arg declared_type='UIViewController * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
</class>
<class name='UIPreviewActionGroup'>
<method class_method='true' selector='actionGroupWithTitle:style:actions:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='UIPreviewActionStyle' index='1' name='style' type='i' type64='q'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='actions' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UIPreviewInteraction'>
<method selector='cancelInteraction'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithView:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='locationInCoordinateSpace:'>
<arg declared_type='id _Nullable' index='0' name='coordinateSpace' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
</class>
<class name='UIPrintFormatter'>
<method selector='contentInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='drawInRect:forPageAtIndex:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSInteger' index='1' name='pageIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='maximumContentHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='maximumContentWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='pageCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='perPageContentInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='printPageRenderer'>
<retval declared_type='UIPrintPageRenderer * _Nullable' type='@'/>
</method>
<method selector='rectForPageAtIndex:'>
<arg declared_type='NSInteger' index='0' name='pageIndex' type='i' type64='q'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='removeFromPrintPageRenderer'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='contentInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumContentHeight:'>
<arg declared_type='CGFloat' index='0' name='maximumContentHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumContentWidth:'>
<arg declared_type='CGFloat' index='0' name='maximumContentWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerPageContentInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='perPageContentInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartPage:'>
<arg declared_type='NSInteger' index='0' name='startPage' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startPage'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='UIPrintInfo'>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='duplex'>
<retval declared_type='UIPrintInfoDuplex' type='i' type64='q'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='jobName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='orientation'>
<retval declared_type='UIPrintInfoOrientation' type='i' type64='q'/>
</method>
<method selector='outputType'>
<retval declared_type='UIPrintInfoOutputType' type='i' type64='q'/>
</method>
<method class_method='true' selector='printInfo'>
<retval declared_type='UIPrintInfo * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='printInfoWithDictionary:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='dictionary' type='@'/>
<retval declared_type='UIPrintInfo * _Nonnull' type='@'/>
</method>
<method selector='printerID'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setDuplex:'>
<arg declared_type='UIPrintInfoDuplex' index='0' name='duplex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setJobName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='jobName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type='UIPrintInfoOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputType:'>
<arg declared_type='UIPrintInfoOutputType' index='0' name='outputType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrinterID:'>
<arg declared_type='NSString * _Nullable' index='0' name='printerID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIPrintInteractionController'>
<method class_method='true' selector='canPrintData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='canPrintURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dismissAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='isPrintingAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentAnimated:completionHandler:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='UIPrintInteractionCompletionHandler _Nullable' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='UIPrintInteractionController * _Nonnull' type='@'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentFromBarButtonItem:animated:completionHandler:'>
<arg declared_type='UIBarButtonItem * _Nonnull' index='0' name='item' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='UIPrintInteractionCompletionHandler _Nullable' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='UIPrintInteractionController * _Nonnull' type='@'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentFromRect:inView:animated:completionHandler:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<arg declared_type='UIPrintInteractionCompletionHandler _Nullable' function_pointer='true' index='3' name='completion' type='@?'>
<arg declared_type='UIPrintInteractionController * _Nonnull' type='@'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='printFormatter'>
<retval declared_type='UIPrintFormatter * _Nullable' type='@'/>
</method>
<method selector='printInfo'>
<retval declared_type='UIPrintInfo * _Nullable' type='@'/>
</method>
<method selector='printPageRenderer'>
<retval declared_type='UIPrintPageRenderer * _Nullable' type='@'/>
</method>
<method selector='printPaper'>
<retval declared_type='UIPrintPaper * _Nullable' type='@'/>
</method>
<method selector='printToPrinter:completionHandler:'>
<arg declared_type='UIPrinter * _Nonnull' index='0' name='printer' type='@'/>
<arg declared_type='UIPrintInteractionCompletionHandler _Nullable' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='UIPrintInteractionController * _Nonnull' type='@'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='printableUTIs'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='printingItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='printingItems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrintFormatter:'>
<arg declared_type='UIPrintFormatter * _Nullable' index='0' name='printFormatter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrintInfo:'>
<arg declared_type='UIPrintInfo * _Nullable' index='0' name='printInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrintPageRenderer:'>
<arg declared_type='UIPrintPageRenderer * _Nullable' index='0' name='printPageRenderer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrintingItem:'>
<arg declared_type='id _Nullable' index='0' name='printingItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrintingItems:'>
<arg declared_type='NSArray * _Nullable' index='0' name='printingItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsNumberOfCopies:'>
<arg declared_type='BOOL' index='0' name='showsNumberOfCopies' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsPageRange:'>
<arg declared_type='BOOL' index='0' name='showsPageRange' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsPaperSelectionForLoadedPapers:'>
<arg declared_type='BOOL' index='0' name='showsPaperSelectionForLoadedPapers' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedPrintController'>
<retval declared_type='UIPrintInteractionController * _Nonnull' type='@'/>
</method>
<method selector='showsNumberOfCopies'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsPageRange'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsPaperSelectionForLoadedPapers'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIPrintPageRenderer'>
<method selector='addPrintFormatter:startingAtPageAtIndex:'>
<arg declared_type='UIPrintFormatter * _Nonnull' index='0' name='formatter' type='@'/>
<arg declared_type='NSInteger' index='1' name='pageIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawContentForPageAtIndex:inRect:'>
<arg declared_type='NSInteger' index='0' name='pageIndex' type='i' type64='q'/>
<arg declared_type='CGRect' index='1' name='contentRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawFooterForPageAtIndex:inRect:'>
<arg declared_type='NSInteger' index='0' name='pageIndex' type='i' type64='q'/>
<arg declared_type='CGRect' index='1' name='footerRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawHeaderForPageAtIndex:inRect:'>
<arg declared_type='NSInteger' index='0' name='pageIndex' type='i' type64='q'/>
<arg declared_type='CGRect' index='1' name='headerRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPageAtIndex:inRect:'>
<arg declared_type='NSInteger' index='0' name='pageIndex' type='i' type64='q'/>
<arg declared_type='CGRect' index='1' name='printableRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPrintFormatter:forPageAtIndex:'>
<arg declared_type='UIPrintFormatter * _Nonnull' index='0' name='printFormatter' type='@'/>
<arg declared_type='NSInteger' index='1' name='pageIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='footerHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='headerHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='numberOfPages'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='paperRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='prepareForDrawingPages:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printFormatters'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='printFormattersForPageAtIndex:'>
<arg declared_type='NSInteger' index='0' name='pageIndex' type='i' type64='q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='printableRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setFooterHeight:'>
<arg declared_type='CGFloat' index='0' name='footerHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeaderHeight:'>
<arg declared_type='CGFloat' index='0' name='headerHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrintFormatters:'>
<arg declared_type='NSArray * _Nullable' index='0' name='printFormatters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIPrintPaper'>
<method class_method='true' selector='bestPaperForPageSize:withPapersFromArray:'>
<arg declared_type='CGSize' index='0' name='contentSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='paperList' type='@'/>
<retval declared_type='UIPrintPaper * _Nonnull' type='@'/>
</method>
<method selector='paperSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='printRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='printableRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='UIPrinter'>
<method selector='URL'>
<retval declared_type='NSURL * _Nonnull' type='@'/>
</method>
<method selector='contactPrinter:'>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayLocation'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='displayName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='makeAndModel'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method class_method='true' selector='printerWithURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='UIPrinter * _Nonnull' type='@'/>
</method>
<method selector='supportedJobTypes'>
<retval declared_type='UIPrinterJobTypes' type='i' type64='q'/>
</method>
<method selector='supportsColor'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsDuplex'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIPrinterPickerController'>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dismissAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentAnimated:completionHandler:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='UIPrinterPickerCompletionHandler _Nullable' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='UIPrinterPickerController * _Nonnull' type='@'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentFromBarButtonItem:animated:completionHandler:'>
<arg declared_type='UIBarButtonItem * _Nonnull' index='0' name='item' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='UIPrinterPickerCompletionHandler _Nullable' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='UIPrinterPickerController * _Nonnull' type='@'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentFromRect:inView:animated:completionHandler:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<arg declared_type='UIPrinterPickerCompletionHandler _Nullable' function_pointer='true' index='3' name='completion' type='@?'>
<arg declared_type='UIPrinterPickerController * _Nonnull' type='@'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='printerPickerControllerWithInitiallySelectedPrinter:'>
<arg declared_type='UIPrinter * _Nullable' index='0' name='printer' type='@'/>
<retval declared_type='UIPrinterPickerController * _Nonnull' type='@'/>
</method>
<method selector='selectedPrinter'>
<retval declared_type='UIPrinter * _Nullable' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIProgressView'>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithProgressViewStyle:'>
<arg declared_type='UIProgressViewStyle' index='0' name='style' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='observedProgress'>
<retval declared_type='NSProgress * _Nullable' type='@'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progressImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='progressTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='progressViewStyle'>
<retval declared_type='UIProgressViewStyle' type='i' type64='q'/>
</method>
<method selector='setObservedProgress:'>
<arg declared_type='NSProgress * _Nullable' index='0' name='observedProgress' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:animated:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='progressImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='progressTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressViewStyle:'>
<arg declared_type='UIProgressViewStyle' index='0' name='progressViewStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrackImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='trackImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrackTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='trackTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='trackTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
</class>
<class name='UIPushBehavior'>
<method selector='active'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='angle'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='initWithItems:mode:'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='items' type='@'/>
<arg declared_type='UIPushBehaviorMode' index='1' name='mode' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='items'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='magnitude'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='mode'>
<retval declared_type='UIPushBehaviorMode' type='i' type64='q'/>
</method>
<method selector='pushDirection'>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</method>
<method selector='removeItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActive:'>
<arg declared_type='BOOL' index='0' name='active' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngle:'>
<arg declared_type='CGFloat' index='0' name='angle' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngle:magnitude:'>
<arg declared_type='CGFloat' index='0' name='angle' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='magnitude' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMagnitude:'>
<arg declared_type='CGFloat' index='0' name='magnitude' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPushDirection:'>
<arg declared_type='CGVector' index='0' name='pushDirection' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetOffsetFromCenter:forItem:'>
<arg declared_type='UIOffset' index='0' name='o' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetOffsetFromCenterForItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</method>
</class>
<class name='UIReferenceLibraryViewController'>
<method class_method='true' selector='dictionaryHasDefinitionForTerm:'>
<arg declared_type='NSString * _Nonnull' index='0' name='term' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTerm:'>
<arg declared_type='NSString * _Nonnull' index='0' name='term' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UIRefreshControl'>
<method selector='attributedTitle'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='beginRefreshing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endRefreshing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isRefreshing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
</class>
<class name='UIRegion'>
<method selector='containsPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='infiniteRegion'>
<retval declared_type='UIRegion * _Nonnull' type='@'/>
</method>
<method selector='initWithRadius:'>
<arg declared_type='CGFloat' index='0' name='radius' type='f' type64='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='inverseRegion'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='regionByDifferenceFromRegion:'>
<arg declared_type='UIRegion * _Nonnull' index='0' name='region' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='regionByIntersectionWithRegion:'>
<arg declared_type='UIRegion * _Nonnull' index='0' name='region' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='regionByUnionWithRegion:'>
<arg declared_type='UIRegion * _Nonnull' index='0' name='region' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UIResponder'>
<method selector='becomeFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canBecomeFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canPerformAction:withSender:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canResignFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='clearTextInputContextIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inputAccessoryView'>
<retval declared_type='__kindof UIView * _Nullable' type='@'/>
</method>
<method selector='inputAccessoryViewController'>
<retval declared_type='UIInputViewController * _Nullable' type='@'/>
</method>
<method selector='inputAssistantItem'>
<retval declared_type='UITextInputAssistantItem * _Nonnull' type='@'/>
</method>
<method selector='inputView'>
<retval declared_type='__kindof UIView * _Nullable' type='@'/>
</method>
<method selector='inputViewController'>
<retval declared_type='UIInputViewController * _Nullable' type='@'/>
</method>
<method selector='isFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyCommands'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='motionBegan:withEvent:'>
<arg declared_type='UIEventSubtype' index='0' name='motion' type='i' type64='q'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='motionCancelled:withEvent:'>
<arg declared_type='UIEventSubtype' index='0' name='motion' type='i' type64='q'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='motionEnded:withEvent:'>
<arg declared_type='UIEventSubtype' index='0' name='motion' type='i' type64='q'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='nextResponder'>
<retval declared_type='UIResponder * _Nullable' type='@'/>
</method>
<method selector='pressesBegan:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='presses' type='@'/>
<arg declared_type='UIPressesEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pressesCancelled:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='presses' type='@'/>
<arg declared_type='UIPressesEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pressesChanged:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='presses' type='@'/>
<arg declared_type='UIPressesEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pressesEnded:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='presses' type='@'/>
<arg declared_type='UIPressesEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadInputViews'>
<retval declared_type='void' type='v'/>
</method>
<method selector='remoteControlReceivedWithEvent:'>
<arg declared_type='UIEvent * _Nullable' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resignFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='restoreUserActivityState:'>
<arg declared_type='NSUserActivity * _Nonnull' index='0' name='activity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserActivity:'>
<arg declared_type='NSUserActivity * _Nullable' index='0' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetForAction:withSender:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='textInputContextIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='textInputMode'>
<retval declared_type='UITextInputMode * _Nullable' type='@'/>
</method>
<method selector='touchesBegan:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='touches' type='@'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesCancelled:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='touches' type='@'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesEnded:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='touches' type='@'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesEstimatedPropertiesUpdated:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='touches' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesMoved:withEvent:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='touches' type='@'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='undoManager'>
<retval declared_type='NSUndoManager * _Nullable' type='@'/>
</method>
<method selector='updateUserActivityState:'>
<arg declared_type='NSUserActivity * _Nonnull' index='0' name='activity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userActivity'>
<retval declared_type='NSUserActivity * _Nullable' type='@'/>
</method>
</class>
<class name='UIRotationGestureRecognizer'>
<method selector='rotation'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setRotation:'>
<arg declared_type='CGFloat' index='0' name='rotation' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='velocity'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='UIScreen'>
<method selector='applicationFrame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='availableModes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='brightness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='coordinateSpace'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='currentMode'>
<retval declared_type='UIScreenMode * _Nullable' type='@'/>
</method>
<method selector='displayLinkWithTarget:selector:'>
<arg declared_type='id _Nonnull' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='sel' type=':'/>
<retval declared_type='CADisplayLink * _Nullable' type='@'/>
</method>
<method selector='fixedCoordinateSpace'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='focusedItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='focusedView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='isCaptured'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='mainScreen'>
<retval declared_type='UIScreen * _Nonnull' type='@'/>
</method>
<method selector='maximumFramesPerSecond'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='mirroredScreen'>
<retval declared_type='UIScreen * _Nullable' type='@'/>
</method>
<method selector='nativeBounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='nativeScale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='overscanCompensation'>
<retval declared_type='UIScreenOverscanCompensation' type='i' type64='q'/>
</method>
<method selector='overscanCompensationInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='preferredMode'>
<retval declared_type='UIScreenMode * _Nullable' type='@'/>
</method>
<method selector='scale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='screens'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setBrightness:'>
<arg declared_type='CGFloat' index='0' name='brightness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentMode:'>
<arg declared_type='UIScreenMode * _Nullable' index='0' name='currentMode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOverscanCompensation:'>
<arg declared_type='UIScreenOverscanCompensation' index='0' name='overscanCompensation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWantsSoftwareDimming:'>
<arg declared_type='BOOL' index='0' name='wantsSoftwareDimming' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='snapshotViewAfterScreenUpdates:'>
<arg declared_type='BOOL' index='0' name='afterUpdates' type='B'/>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='supportsFocus'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsSoftwareDimming'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIScreenEdgePanGestureRecognizer'>
<method selector='edges'>
<retval declared_type='UIRectEdge' type='I' type64='Q'/>
</method>
<method selector='setEdges:'>
<arg declared_type='UIRectEdge' index='0' name='edges' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIScreenMode'>
<method selector='pixelAspectRatio'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='UIScrollView'>
<method selector='adjustedContentInset'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='adjustedContentInsetDidChange'>
<retval declared_type='void' type='v'/>
</method>
<method selector='alwaysBounceHorizontal'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alwaysBounceVertical'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bounces'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bouncesZoom'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canCancelContentTouches'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentInset'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='contentInsetAdjustmentBehavior'>
<retval declared_type='UIScrollViewContentInsetAdjustmentBehavior' type='i' type64='q'/>
</method>
<method selector='contentLayoutGuide'>
<retval declared_type='UILayoutGuide * _Nonnull' type='@'/>
</method>
<method selector='contentOffset'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='contentSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='decelerationRate'>
<retval declared_type='UIScrollViewDecelerationRate' type='f' type64='d'/>
</method>
<method selector='delaysContentTouches'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='directionalPressGestureRecognizer'>
<retval declared_type='UIGestureRecognizer * _Nonnull' type='@'/>
</method>
<method selector='flashScrollIndicators'>
<retval declared_type='void' type='v'/>
</method>
<method selector='frameLayoutGuide'>
<retval declared_type='UILayoutGuide * _Nonnull' type='@'/>
</method>
<method selector='indexDisplayMode'>
<retval declared_type='UIScrollViewIndexDisplayMode' type='i' type64='q'/>
</method>
<method selector='indicatorStyle'>
<retval declared_type='UIScrollViewIndicatorStyle' type='i' type64='q'/>
</method>
<method selector='isDecelerating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDirectionalLockEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDragging'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPagingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isScrollEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTracking'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isZoomBouncing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isZooming'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyboardDismissMode'>
<retval declared_type='UIScrollViewKeyboardDismissMode' type='i' type64='q'/>
</method>
<method selector='maximumZoomScale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumZoomScale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='panGestureRecognizer'>
<retval declared_type='UIPanGestureRecognizer * _Nonnull' type='@'/>
</method>
<method selector='pinchGestureRecognizer'>
<retval declared_type='UIPinchGestureRecognizer * _Nullable' type='@'/>
</method>
<method selector='refreshControl'>
<retval declared_type='UIRefreshControl * _Nullable' type='@'/>
</method>
<method selector='scrollIndicatorInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='scrollRectToVisible:animated:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollsToTop'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAlwaysBounceHorizontal:'>
<arg declared_type='BOOL' index='0' name='alwaysBounceHorizontal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlwaysBounceVertical:'>
<arg declared_type='BOOL' index='0' name='alwaysBounceVertical' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounces:'>
<arg declared_type='BOOL' index='0' name='bounces' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBouncesZoom:'>
<arg declared_type='BOOL' index='0' name='bouncesZoom' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanCancelContentTouches:'>
<arg declared_type='BOOL' index='0' name='canCancelContentTouches' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentInset:'>
<arg declared_type='UIEdgeInsets' index='0' name='contentInset' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentInsetAdjustmentBehavior:'>
<arg declared_type='UIScrollViewContentInsetAdjustmentBehavior' index='0' name='contentInsetAdjustmentBehavior' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentOffset:'>
<arg declared_type='CGPoint' index='0' name='contentOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentOffset:animated:'>
<arg declared_type='CGPoint' index='0' name='contentOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentSize:'>
<arg declared_type='CGSize' index='0' name='contentSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDecelerationRate:'>
<arg declared_type='UIScrollViewDecelerationRate' index='0' name='decelerationRate' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelaysContentTouches:'>
<arg declared_type='BOOL' index='0' name='delaysContentTouches' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirectionalLockEnabled:'>
<arg declared_type='BOOL' index='0' name='directionalLockEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndexDisplayMode:'>
<arg declared_type='UIScrollViewIndexDisplayMode' index='0' name='indexDisplayMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndicatorStyle:'>
<arg declared_type='UIScrollViewIndicatorStyle' index='0' name='indicatorStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyboardDismissMode:'>
<arg declared_type='UIScrollViewKeyboardDismissMode' index='0' name='keyboardDismissMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumZoomScale:'>
<arg declared_type='CGFloat' index='0' name='maximumZoomScale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumZoomScale:'>
<arg declared_type='CGFloat' index='0' name='minimumZoomScale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPagingEnabled:'>
<arg declared_type='BOOL' index='0' name='pagingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRefreshControl:'>
<arg declared_type='UIRefreshControl * _Nullable' index='0' name='refreshControl' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollEnabled:'>
<arg declared_type='BOOL' index='0' name='scrollEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollIndicatorInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='scrollIndicatorInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollsToTop:'>
<arg declared_type='BOOL' index='0' name='scrollsToTop' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsHorizontalScrollIndicator:'>
<arg declared_type='BOOL' index='0' name='showsHorizontalScrollIndicator' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsVerticalScrollIndicator:'>
<arg declared_type='BOOL' index='0' name='showsVerticalScrollIndicator' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoomScale:'>
<arg declared_type='CGFloat' index='0' name='zoomScale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoomScale:animated:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f' type64='d'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsHorizontalScrollIndicator'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsVerticalScrollIndicator'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='touchesShouldBegin:withEvent:inContentView:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='touches' type='@'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<arg declared_type='UIView * _Nonnull' index='2' name='view' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='touchesShouldCancelInContentView:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='zoomScale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='zoomToRect:animated:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UISearchBar'>
<method selector='backgroundImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='backgroundImageForBarPosition:barMetrics:'>
<arg declared_type='UIBarPosition' index='0' name='barPosition' type='i' type64='q'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='barStyle'>
<retval declared_type='UIBarStyle' type='i' type64='q'/>
</method>
<method selector='barTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='imageForSearchBarIcon:state:'>
<arg declared_type='UISearchBarIcon' index='0' name='icon' type='i' type64='q'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='inputAccessoryView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='inputAssistantItem'>
<retval declared_type='UITextInputAssistantItem * _Nonnull' type='@'/>
</method>
<method selector='isSearchResultsButtonSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTranslucent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='placeholder'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='positionAdjustmentForSearchBarIcon:'>
<arg declared_type='UISearchBarIcon' index='0' name='icon' type='i' type64='q'/>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</method>
<method selector='prompt'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='scopeBarBackgroundImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='scopeBarButtonBackgroundImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='scopeBarButtonDividerImageForLeftSegmentState:rightSegmentState:'>
<arg declared_type='UIControlState' index='0' name='leftState' type='I' type64='Q'/>
<arg declared_type='UIControlState' index='1' name='rightState' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='scopeBarButtonTitleTextAttributesForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='scopeButtonTitles'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='searchBarStyle'>
<retval declared_type='UISearchBarStyle' type='I' type64='Q'/>
</method>
<method selector='searchFieldBackgroundImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='searchFieldBackgroundPositionAdjustment'>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</method>
<method selector='searchTextPositionAdjustment'>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</method>
<method selector='selectedScopeButtonIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setBackgroundImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImage:forBarPosition:barMetrics:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<arg declared_type='UIBarPosition' index='1' name='barPosition' type='i' type64='q'/>
<arg declared_type='UIBarMetrics' index='2' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarStyle:'>
<arg declared_type='UIBarStyle' index='0' name='barStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='barTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:forSearchBarIcon:state:'>
<arg declared_type='UIImage * _Nullable' index='0' name='iconImage' type='@'/>
<arg declared_type='UISearchBarIcon' index='1' name='icon' type='i' type64='q'/>
<arg declared_type='UIControlState' index='2' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputAccessoryView:'>
<arg declared_type='UIView * _Nullable' index='0' name='inputAccessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholder:'>
<arg declared_type='NSString * _Nullable' index='0' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositionAdjustment:forSearchBarIcon:'>
<arg declared_type='UIOffset' index='0' name='adjustment' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<arg declared_type='UISearchBarIcon' index='1' name='icon' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrompt:'>
<arg declared_type='NSString * _Nullable' index='0' name='prompt' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScopeBarBackgroundImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='scopeBarBackgroundImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScopeBarButtonBackgroundImage:forState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScopeBarButtonDividerImage:forLeftSegmentState:rightSegmentState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='dividerImage' type='@'/>
<arg declared_type='UIControlState' index='1' name='leftState' type='I' type64='Q'/>
<arg declared_type='UIControlState' index='2' name='rightState' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScopeBarButtonTitleTextAttributes:forState:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='attributes' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScopeButtonTitles:'>
<arg declared_type='NSArray * _Nullable' index='0' name='scopeButtonTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchBarStyle:'>
<arg declared_type='UISearchBarStyle' index='0' name='searchBarStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchFieldBackgroundImage:forState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchFieldBackgroundPositionAdjustment:'>
<arg declared_type='UIOffset' index='0' name='searchFieldBackgroundPositionAdjustment' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchResultsButtonSelected:'>
<arg declared_type='BOOL' index='0' name='searchResultsButtonSelected' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchTextPositionAdjustment:'>
<arg declared_type='UIOffset' index='0' name='searchTextPositionAdjustment' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedScopeButtonIndex:'>
<arg declared_type='NSInteger' index='0' name='selectedScopeButtonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsBookmarkButton:'>
<arg declared_type='BOOL' index='0' name='showsBookmarkButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsCancelButton:'>
<arg declared_type='BOOL' index='0' name='showsCancelButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsCancelButton:animated:'>
<arg declared_type='BOOL' index='0' name='showsCancelButton' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsScopeBar:'>
<arg declared_type='BOOL' index='0' name='showsScopeBar' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsSearchResultsButton:'>
<arg declared_type='BOOL' index='0' name='showsSearchResultsButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:'>
<arg declared_type='NSString * _Nullable' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTranslucent:'>
<arg declared_type='BOOL' index='0' name='translucent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsBookmarkButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsCancelButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsScopeBar'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsSearchResultsButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='text'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
</class>
<class name='UISearchContainerViewController'>
<method selector='initWithSearchController:'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='searchController'>
<retval declared_type='UISearchController * _Nonnull' type='@'/>
</method>
</class>
<class name='UISearchController'>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dimsBackgroundDuringPresentation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hidesNavigationBarDuringPresentation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithSearchResultsController:'>
<arg declared_type='UIViewController * _Nullable' index='0' name='searchResultsController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='obscuresBackgroundDuringPresentation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchBar'>
<retval declared_type='UISearchBar * _Nonnull' type='@'/>
</method>
<method selector='searchResultsController'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='searchResultsUpdater'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setActive:'>
<arg declared_type='BOOL' index='0' name='active' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDimsBackgroundDuringPresentation:'>
<arg declared_type='BOOL' index='0' name='dimsBackgroundDuringPresentation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesNavigationBarDuringPresentation:'>
<arg declared_type='BOOL' index='0' name='hidesNavigationBarDuringPresentation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObscuresBackgroundDuringPresentation:'>
<arg declared_type='BOOL' index='0' name='obscuresBackgroundDuringPresentation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchResultsUpdater:'>
<arg declared_type='id _Nullable' index='0' name='searchResultsUpdater' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UISearchDisplayController'>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='displaysSearchBarInNavigationBar'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithSearchBar:contentsController:'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='navigationItem'>
<retval declared_type='UINavigationItem * _Nullable' type='@'/>
</method>
<method selector='searchBar'>
<retval declared_type='UISearchBar * _Nonnull' type='@'/>
</method>
<method selector='searchContentsController'>
<retval declared_type='UIViewController * _Nonnull' type='@'/>
</method>
<method selector='searchResultsDataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='searchResultsDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='searchResultsTableView'>
<retval declared_type='UITableView * _Nonnull' type='@'/>
</method>
<method selector='searchResultsTitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setActive:'>
<arg declared_type='BOOL' index='0' name='active' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActive:animated:'>
<arg declared_type='BOOL' index='0' name='visible' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysSearchBarInNavigationBar:'>
<arg declared_type='BOOL' index='0' name='displaysSearchBarInNavigationBar' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchResultsDataSource:'>
<arg declared_type='id _Nullable' index='0' name='searchResultsDataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchResultsDelegate:'>
<arg declared_type='id _Nullable' index='0' name='searchResultsDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchResultsTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='searchResultsTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UISegmentedControl'>
<method selector='apportionsSegmentWidthsByContent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundImageForState:barMetrics:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='contentOffsetForSegmentAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='segment' type='I' type64='Q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='contentPositionAdjustmentForSegmentType:barMetrics:'>
<arg declared_type='UISegmentedControlSegment' index='0' name='leftCenterRightOrAlone' type='i' type64='q'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</method>
<method selector='dividerImageForLeftSegmentState:rightSegmentState:barMetrics:'>
<arg declared_type='UIControlState' index='0' name='leftState' type='I' type64='Q'/>
<arg declared_type='UIControlState' index='1' name='rightState' type='I' type64='Q'/>
<arg declared_type='UIBarMetrics' index='2' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='imageForSegmentAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='segment' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='initWithItems:'>
<arg declared_type='NSArray * _Nullable' index='0' name='items' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertSegmentWithImage:atIndex:animated:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='NSUInteger' index='1' name='segment' type='I' type64='Q'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertSegmentWithTitle:atIndex:animated:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='NSUInteger' index='1' name='segment' type='I' type64='Q'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabledForSegmentAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='segment' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMomentary'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='numberOfSegments'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='removeAllSegments'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSegmentAtIndex:animated:'>
<arg declared_type='NSUInteger' index='0' name='segment' type='I' type64='Q'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='segmentedControlStyle'>
<retval declared_type='UISegmentedControlStyle' type='i' type64='q'/>
</method>
<method selector='selectedSegmentIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setApportionsSegmentWidthsByContent:'>
<arg declared_type='BOOL' index='0' name='apportionsSegmentWidthsByContent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImage:forState:barMetrics:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIBarMetrics' index='2' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentOffset:forSegmentAtIndex:'>
<arg declared_type='CGSize' index='0' name='offset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSUInteger' index='1' name='segment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentPositionAdjustment:forSegmentType:barMetrics:'>
<arg declared_type='UIOffset' index='0' name='adjustment' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<arg declared_type='UISegmentedControlSegment' index='1' name='leftCenterRightOrAlone' type='i' type64='q'/>
<arg declared_type='UIBarMetrics' index='2' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDividerImage:forLeftSegmentState:rightSegmentState:barMetrics:'>
<arg declared_type='UIImage * _Nullable' index='0' name='dividerImage' type='@'/>
<arg declared_type='UIControlState' index='1' name='leftState' type='I' type64='Q'/>
<arg declared_type='UIControlState' index='2' name='rightState' type='I' type64='Q'/>
<arg declared_type='UIBarMetrics' index='3' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:forSegmentAtIndex:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<arg declared_type='NSUInteger' index='1' name='segment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:forSegmentAtIndex:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='NSUInteger' index='1' name='segment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMomentary:'>
<arg declared_type='BOOL' index='0' name='momentary' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSegmentedControlStyle:'>
<arg declared_type='UISegmentedControlStyle' index='0' name='segmentedControlStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedSegmentIndex:'>
<arg declared_type='NSInteger' index='0' name='selectedSegmentIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:forSegmentAtIndex:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='NSUInteger' index='1' name='segment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleTextAttributes:forState:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='attributes' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:forSegmentAtIndex:'>
<arg declared_type='CGFloat' index='0' name='width' type='f' type64='d'/>
<arg declared_type='NSUInteger' index='1' name='segment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='titleForSegmentAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='segment' type='I' type64='Q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='titleTextAttributesForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='widthForSegmentAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='segment' type='I' type64='Q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='UISelectionFeedbackGenerator'>
<method selector='selectionChanged'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UISimpleTextPrintFormatter'>
<method selector='attributedText'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='color'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='font'>
<retval declared_type='UIFont * _Nullable' type='@'/>
</method>
<method selector='initWithAttributedText:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedText' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithText:'>
<arg declared_type='NSString * _Nonnull' index='0' name='text' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAttributedText:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='UIFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:'>
<arg declared_type='NSString * _Nullable' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='textAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='text'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='textAlignment'>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</method>
</class>
<class name='UISlider'>
<method selector='currentMaximumTrackImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='currentMinimumTrackImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='currentThumbImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='isContinuous'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumTrackImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='maximumTrackTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='maximumValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='maximumValueImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='maximumValueImageRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='minimumTrackImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='minimumTrackTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='minimumValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minimumValueImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='minimumValueImageRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setContinuous:'>
<arg declared_type='BOOL' index='0' name='continuous' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumTrackImage:forState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumTrackTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='maximumTrackTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumValue:'>
<arg declared_type='float' index='0' name='maximumValue' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumValueImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='maximumValueImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumTrackImage:forState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumTrackTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='minimumTrackTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumValue:'>
<arg declared_type='float' index='0' name='minimumValue' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumValueImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='minimumValueImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setThumbImage:forState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setThumbTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='thumbTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg declared_type='float' index='0' name='value' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:animated:'>
<arg declared_type='float' index='0' name='value' type='f'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='thumbImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='thumbRectForBounds:trackRect:value:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGRect' index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='float' index='2' name='value' type='f'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='thumbTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='trackRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='value'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='UISnapBehavior'>
<method selector='damping'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='initWithItem:snapToPoint:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setDamping:'>
<arg declared_type='CGFloat' index='0' name='damping' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSnapPoint:'>
<arg declared_type='CGPoint' index='0' name='snapPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='snapPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='UISplitViewController'>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='displayMode'>
<retval declared_type='UISplitViewControllerDisplayMode' type='i' type64='q'/>
</method>
<method selector='displayModeButtonItem'>
<retval declared_type='UIBarButtonItem * _Nonnull' type='@'/>
</method>
<method selector='isCollapsed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumPrimaryColumnWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumPrimaryColumnWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='preferredDisplayMode'>
<retval declared_type='UISplitViewControllerDisplayMode' type='i' type64='q'/>
</method>
<method selector='preferredPrimaryColumnWidthFraction'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='presentsWithGesture'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='primaryColumnWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='primaryEdge'>
<retval declared_type='UISplitViewControllerPrimaryEdge' type='i' type64='q'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumPrimaryColumnWidth:'>
<arg declared_type='CGFloat' index='0' name='maximumPrimaryColumnWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumPrimaryColumnWidth:'>
<arg declared_type='CGFloat' index='0' name='minimumPrimaryColumnWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredDisplayMode:'>
<arg declared_type='UISplitViewControllerDisplayMode' index='0' name='preferredDisplayMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredPrimaryColumnWidthFraction:'>
<arg declared_type='CGFloat' index='0' name='preferredPrimaryColumnWidthFraction' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPresentsWithGesture:'>
<arg declared_type='BOOL' index='0' name='presentsWithGesture' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrimaryEdge:'>
<arg declared_type='UISplitViewControllerPrimaryEdge' index='0' name='primaryEdge' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewControllers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='viewControllers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showDetailViewController:sender:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='vc' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showViewController:sender:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='vc' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewControllers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='UISpringLoadedInteraction'>
<method selector='initWithActivationHandler:'>
<arg declared_type='void (^ _Nonnull)(UISpringLoadedInteraction * _Nonnull, id _Nonnull)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='UISpringLoadedInteraction * _Nonnull' type='@'/>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithInteractionBehavior:interactionEffect:activationHandler:'>
<arg declared_type='id _Nullable' index='0' name='interactionBehavior' type='@'/>
<arg declared_type='id _Nullable' index='1' name='interactionEffect' type='@'/>
<arg declared_type='void (^ _Nonnull)(UISpringLoadedInteraction * _Nonnull, id _Nonnull)' function_pointer='true' index='2' name='handler' type='@?'>
<arg declared_type='UISpringLoadedInteraction * _Nonnull' type='@'/>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='interactionBehavior'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='interactionEffect'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
</class>
<class name='UISpringTimingParameters'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithDampingRatio:'>
<arg declared_type='CGFloat' index='0' name='ratio' type='f' type64='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithDampingRatio:initialVelocity:'>
<arg declared_type='CGFloat' index='0' name='ratio' type='f' type64='d'/>
<arg declared_type='CGVector' index='1' name='velocity' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithMass:stiffness:damping:initialVelocity:'>
<arg declared_type='CGFloat' index='0' name='mass' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='stiffness' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='damping' type='f' type64='d'/>
<arg declared_type='CGVector' index='3' name='velocity' type='{CGVector=ff}' type64='{CGVector=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initialVelocity'>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</method>
</class>
<class name='UIStackView'>
<method selector='addArrangedSubview:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignment'>
<retval declared_type='UIStackViewAlignment' type='i' type64='q'/>
</method>
<method selector='arrangedSubviews'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='axis'>
<retval declared_type='UILayoutConstraintAxis' type='i' type64='q'/>
</method>
<method selector='customSpacingAfterView:'>
<arg declared_type='UIView * _Nonnull' index='0' name='arrangedSubview' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='distribution'>
<retval declared_type='UIStackViewDistribution' type='i' type64='q'/>
</method>
<method selector='initWithArrangedSubviews:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='views' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertArrangedSubview:atIndex:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSUInteger' index='1' name='stackIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isBaselineRelativeArrangement'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLayoutMarginsRelativeArrangement'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeArrangedSubview:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type='UIStackViewAlignment' index='0' name='alignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxis:'>
<arg declared_type='UILayoutConstraintAxis' index='0' name='axis' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaselineRelativeArrangement:'>
<arg declared_type='BOOL' index='0' name='baselineRelativeArrangement' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomSpacing:afterView:'>
<arg declared_type='CGFloat' index='0' name='spacing' type='f' type64='d'/>
<arg declared_type='UIView * _Nonnull' index='1' name='arrangedSubview' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDistribution:'>
<arg declared_type='UIStackViewDistribution' index='0' name='distribution' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayoutMarginsRelativeArrangement:'>
<arg declared_type='BOOL' index='0' name='layoutMarginsRelativeArrangement' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpacing:'>
<arg declared_type='CGFloat' index='0' name='spacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='UIStepper'>
<method selector='autorepeat'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='decrementImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='dividerImageForLeftSegmentState:rightSegmentState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='incrementImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='isContinuous'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='minimumValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='setAutorepeat:'>
<arg declared_type='BOOL' index='0' name='autorepeat' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImage:forState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContinuous:'>
<arg declared_type='BOOL' index='0' name='continuous' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDecrementImage:forState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDividerImage:forLeftSegmentState:rightSegmentState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='leftState' type='I' type64='Q'/>
<arg declared_type='UIControlState' index='2' name='rightState' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncrementImage:forState:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumValue:'>
<arg declared_type='double' index='0' name='maximumValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumValue:'>
<arg declared_type='double' index='0' name='minimumValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStepValue:'>
<arg declared_type='double' index='0' name='stepValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg declared_type='double' index='0' name='value' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWraps:'>
<arg declared_type='BOOL' index='0' name='wraps' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stepValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='value'>
<retval declared_type='double' type='d'/>
</method>
<method selector='wraps'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIStoryboard'>
<method selector='instantiateInitialViewController'>
<retval declared_type='__kindof UIViewController * _Nullable' type='@'/>
</method>
<method selector='instantiateViewControllerWithIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='__kindof UIViewController * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='storyboardWithName:bundle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='storyboardBundleOrNil' type='@'/>
<retval declared_type='UIStoryboard * _Nonnull' type='@'/>
</method>
</class>
<class name='UIStoryboardPopoverSegue'>
<method selector='popoverController'>
<retval declared_type='UIPopoverController * _Nonnull' type='@'/>
</method>
</class>
<class name='UIStoryboardSegue'>
<method selector='destinationViewController'>
<retval declared_type='__kindof UIViewController * _Nonnull' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='initWithIdentifier:source:destination:'>
<arg declared_type='NSString * _Nullable' index='0' name='identifier' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='source' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='destination' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='perform'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='segueWithIdentifier:source:destination:performHandler:'>
<arg declared_type='NSString * _Nullable' index='0' name='identifier' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='source' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='destination' type='@'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='performHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='sourceViewController'>
<retval declared_type='__kindof UIViewController * _Nonnull' type='@'/>
</method>
</class>
<class name='UIStoryboardUnwindSegueSource'>
<method selector='sender'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='sourceViewController'>
<retval declared_type='UIViewController * _Nonnull' type='@'/>
</method>
<method selector='unwindAction'>
<retval declared_type='SEL _Nonnull' type=':'/>
</method>
</class>
<class name='UISwipeActionsConfiguration'>
<method selector='actions'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='configurationWithActions:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='actions' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='performsFirstActionWithFullSwipe'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPerformsFirstActionWithFullSwipe:'>
<arg declared_type='BOOL' index='0' name='performsFirstActionWithFullSwipe' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UISwipeGestureRecognizer'>
<method selector='direction'>
<retval declared_type='UISwipeGestureRecognizerDirection' type='I' type64='Q'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setDirection:'>
<arg declared_type='UISwipeGestureRecognizerDirection' index='0' name='direction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg declared_type='NSUInteger' index='0' name='numberOfTouchesRequired' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UISwitch'>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isOn'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='offImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='onImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='onTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='setOffImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='offImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOn:'>
<arg declared_type='BOOL' index='0' name='on' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOn:animated:'>
<arg declared_type='BOOL' index='0' name='on' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='onImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='onTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setThumbTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='thumbTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='thumbTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
</class>
<class name='UITabBar'>
<method selector='backgroundImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='barStyle'>
<retval declared_type='UIBarStyle' type='i' type64='q'/>
</method>
<method selector='barTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='beginCustomizingItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='endCustomizingAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isCustomizing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTranslucent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemPositioning'>
<retval declared_type='UITabBarItemPositioning' type='i' type64='q'/>
</method>
<method selector='itemSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='itemWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='items'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='selectedImageTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='selectedItem'>
<retval declared_type='UITabBarItem * _Nullable' type='@'/>
</method>
<method selector='selectionIndicatorImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='setBackgroundImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarStyle:'>
<arg declared_type='UIBarStyle' index='0' name='barStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='barTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemPositioning:'>
<arg declared_type='UITabBarItemPositioning' index='0' name='itemPositioning' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemSpacing:'>
<arg declared_type='CGFloat' index='0' name='itemSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemWidth:'>
<arg declared_type='CGFloat' index='0' name='itemWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItems:'>
<arg declared_type='NSArray * _Nullable' index='0' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItems:animated:'>
<arg declared_type='NSArray * _Nullable' index='0' name='items' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedImageTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='selectedImageTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedItem:'>
<arg declared_type='UITabBarItem * _Nullable' index='0' name='selectedItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionIndicatorImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='selectionIndicatorImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='shadowImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTranslucent:'>
<arg declared_type='BOOL' index='0' name='translucent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnselectedItemTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='unselectedItemTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='unselectedItemTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
</class>
<class name='UITabBarController'>
<method selector='customizableViewControllers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='moreNavigationController'>
<retval declared_type='UINavigationController * _Nonnull' type='@'/>
</method>
<method selector='selectedIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='selectedViewController'>
<retval declared_type='__kindof UIViewController * _Nullable' type='@'/>
</method>
<method selector='setCustomizableViewControllers:'>
<arg declared_type='NSArray * _Nullable' index='0' name='customizableViewControllers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedIndex:'>
<arg declared_type='NSUInteger' index='0' name='selectedIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedViewController:'>
<arg declared_type='__kindof UIViewController * _Nullable' index='0' name='selectedViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewControllers:'>
<arg declared_type='NSArray * _Nullable' index='0' name='viewControllers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewControllers:animated:'>
<arg declared_type='NSArray * _Nullable' index='0' name='viewControllers' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBar'>
<retval declared_type='UITabBar * _Nonnull' type='@'/>
</method>
<method selector='viewControllers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='UITabBarItem'>
<method selector='badgeColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='badgeTextAttributesForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='badgeValue'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='finishedSelectedImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='finishedUnselectedImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithTabBarSystemItem:tag:'>
<arg declared_type='UITabBarSystemItem' index='0' name='systemItem' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='tag' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTitle:image:selectedImage:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='UIImage * _Nullable' index='1' name='image' type='@'/>
<arg declared_type='UIImage * _Nullable' index='2' name='selectedImage' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTitle:image:tag:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='UIImage * _Nullable' index='1' name='image' type='@'/>
<arg declared_type='NSInteger' index='2' name='tag' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='selectedImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='setBadgeColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='badgeColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeTextAttributes:forState:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='textAttributes' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeValue:'>
<arg declared_type='NSString * _Nullable' index='0' name='badgeValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFinishedSelectedImage:withFinishedUnselectedImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='selectedImage' type='@'/>
<arg declared_type='UIImage * _Nullable' index='1' name='unselectedImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='selectedImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitlePositionAdjustment:'>
<arg declared_type='UIOffset' index='0' name='titlePositionAdjustment' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='titlePositionAdjustment'>
<retval declared_type='UIOffset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
</method>
</class>
<class name='UITableView'>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsMultipleSelectionDuringEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsSelectionDuringEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='beginUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cellForRowAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='__kindof UITableViewCell * _Nullable' type='@'/>
</method>
<method selector='cellLayoutMarginsFollowReadableWidth'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deleteRowsAtIndexPaths:withRowAnimation:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<arg declared_type='UITableViewRowAnimation' index='1' name='animation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteSections:withRowAnimation:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='sections' type='@'/>
<arg declared_type='UITableViewRowAnimation' index='1' name='animation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dequeueReusableCellWithIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='__kindof UITableViewCell * _Nullable' type='@'/>
</method>
<method selector='dequeueReusableCellWithIdentifier:forIndexPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='__kindof UITableViewCell * _Nonnull' type='@'/>
</method>
<method selector='dequeueReusableHeaderFooterViewWithIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='__kindof UITableViewHeaderFooterView * _Nullable' type='@'/>
</method>
<method selector='deselectRowAtIndexPath:animated:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dragInteractionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dropDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='endUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='estimatedRowHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='estimatedSectionFooterHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='estimatedSectionHeaderHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='footerViewForSection:'>
<arg declared_type='NSInteger' index='0' name='section' type='i' type64='q'/>
<retval declared_type='UITableViewHeaderFooterView * _Nullable' type='@'/>
</method>
<method selector='hasActiveDrag'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasActiveDrop'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasUncommittedUpdates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='headerViewForSection:'>
<arg declared_type='NSInteger' index='0' name='section' type='i' type64='q'/>
<retval declared_type='UITableViewHeaderFooterView * _Nullable' type='@'/>
</method>
<method selector='indexPathForCell:'>
<arg declared_type='UITableViewCell * _Nonnull' index='0' name='cell' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexPathForRowAtPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexPathForSelectedRow'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexPathsForRowsInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='indexPathsForSelectedRows'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='indexPathsForVisibleRows'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:style:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UITableViewStyle' index='1' name='style' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertRowsAtIndexPaths:withRowAnimation:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<arg declared_type='UITableViewRowAnimation' index='1' name='animation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertSections:withRowAnimation:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='sections' type='@'/>
<arg declared_type='UITableViewRowAnimation' index='1' name='animation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insetsContentViewsToSafeArea'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='moveRowAtIndexPath:toIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='newIndexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveSection:toSection:'>
<arg declared_type='NSInteger' index='0' name='section' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='newSection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfRowsInSection:'>
<arg declared_type='NSInteger' index='0' name='section' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfSections'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='performBatchUpdates:completion:'>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='0' name='updates' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='prefetchDataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='rectForFooterInSection:'>
<arg declared_type='NSInteger' index='0' name='section' type='i' type64='q'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForHeaderInSection:'>
<arg declared_type='NSInteger' index='0' name='section' type='i' type64='q'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForRowAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForSection:'>
<arg declared_type='NSInteger' index='0' name='section' type='i' type64='q'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='registerClass:forCellReuseIdentifier:'>
<arg declared_type='Class _Nullable' index='0' name='cellClass' type='#'/>
<arg declared_type='NSString * _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerClass:forHeaderFooterViewReuseIdentifier:'>
<arg declared_type='Class _Nullable' index='0' name='aClass' type='#'/>
<arg declared_type='NSString * _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerNib:forCellReuseIdentifier:'>
<arg declared_type='UINib * _Nullable' index='0' name='nib' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerNib:forHeaderFooterViewReuseIdentifier:'>
<arg declared_type='UINib * _Nullable' index='0' name='nib' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadRowsAtIndexPaths:withRowAnimation:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<arg declared_type='UITableViewRowAnimation' index='1' name='animation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadSectionIndexTitles'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadSections:withRowAnimation:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='sections' type='@'/>
<arg declared_type='UITableViewRowAnimation' index='1' name='animation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='remembersLastFocusedIndexPath'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rowHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='scrollToNearestSelectedRowAtScrollPosition:animated:'>
<arg declared_type='UITableViewScrollPosition' index='0' name='scrollPosition' type='i' type64='q'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollToRowAtIndexPath:atScrollPosition:animated:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<arg declared_type='UITableViewScrollPosition' index='1' name='scrollPosition' type='i' type64='q'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sectionFooterHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='sectionHeaderHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='sectionIndexBackgroundColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='sectionIndexColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='sectionIndexMinimumDisplayRowCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='sectionIndexTrackingBackgroundColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='selectRowAtIndexPath:animated:scrollPosition:'>
<arg declared_type='NSIndexPath * _Nullable' index='0' name='indexPath' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='UITableViewScrollPosition' index='2' name='scrollPosition' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='separatorColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='separatorEffect'>
<retval declared_type='UIVisualEffect * _Nullable' type='@'/>
</method>
<method selector='separatorInset'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='separatorInsetReference'>
<retval declared_type='UITableViewSeparatorInsetReference' type='i' type64='q'/>
</method>
<method selector='separatorStyle'>
<retval declared_type='UITableViewCellSeparatorStyle' type='i' type64='q'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type='BOOL' index='0' name='allowsMultipleSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsMultipleSelectionDuringEditing:'>
<arg declared_type='BOOL' index='0' name='allowsMultipleSelectionDuringEditing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsSelection:'>
<arg declared_type='BOOL' index='0' name='allowsSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsSelectionDuringEditing:'>
<arg declared_type='BOOL' index='0' name='allowsSelectionDuringEditing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='UIView * _Nullable' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellLayoutMarginsFollowReadableWidth:'>
<arg declared_type='BOOL' index='0' name='cellLayoutMarginsFollowReadableWidth' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id _Nullable' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDragDelegate:'>
<arg declared_type='id _Nullable' index='0' name='dragDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDragInteractionEnabled:'>
<arg declared_type='BOOL' index='0' name='dragInteractionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDropDelegate:'>
<arg declared_type='id _Nullable' index='0' name='dropDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditing:'>
<arg declared_type='BOOL' index='0' name='editing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditing:animated:'>
<arg declared_type='BOOL' index='0' name='editing' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEstimatedRowHeight:'>
<arg declared_type='CGFloat' index='0' name='estimatedRowHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEstimatedSectionFooterHeight:'>
<arg declared_type='CGFloat' index='0' name='estimatedSectionFooterHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEstimatedSectionHeaderHeight:'>
<arg declared_type='CGFloat' index='0' name='estimatedSectionHeaderHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInsetsContentViewsToSafeArea:'>
<arg declared_type='BOOL' index='0' name='insetsContentViewsToSafeArea' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrefetchDataSource:'>
<arg declared_type='id _Nullable' index='0' name='prefetchDataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemembersLastFocusedIndexPath:'>
<arg declared_type='BOOL' index='0' name='remembersLastFocusedIndexPath' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowHeight:'>
<arg declared_type='CGFloat' index='0' name='rowHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionFooterHeight:'>
<arg declared_type='CGFloat' index='0' name='sectionFooterHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionHeaderHeight:'>
<arg declared_type='CGFloat' index='0' name='sectionHeaderHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionIndexBackgroundColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='sectionIndexBackgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionIndexColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='sectionIndexColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionIndexMinimumDisplayRowCount:'>
<arg declared_type='NSInteger' index='0' name='sectionIndexMinimumDisplayRowCount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionIndexTrackingBackgroundColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='sectionIndexTrackingBackgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparatorColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='separatorColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparatorEffect:'>
<arg declared_type='UIVisualEffect * _Nullable' index='0' name='separatorEffect' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparatorInset:'>
<arg declared_type='UIEdgeInsets' index='0' name='separatorInset' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparatorInsetReference:'>
<arg declared_type='UITableViewSeparatorInsetReference' index='0' name='separatorInsetReference' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparatorStyle:'>
<arg declared_type='UITableViewCellSeparatorStyle' index='0' name='separatorStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTableFooterView:'>
<arg declared_type='UIView * _Nullable' index='0' name='tableFooterView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTableHeaderView:'>
<arg declared_type='UIView * _Nullable' index='0' name='tableHeaderView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='style'>
<retval declared_type='UITableViewStyle' type='i' type64='q'/>
</method>
<method selector='tableFooterView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='tableHeaderView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='visibleCells'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='UITableViewCell'>
<method selector='accessoryAction'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='accessoryType'>
<retval declared_type='UITableViewCellAccessoryType' type='i' type64='q'/>
</method>
<method selector='accessoryView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='backgroundView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='contentView'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='detailTextLabel'>
<retval declared_type='UILabel * _Nullable' type='@'/>
</method>
<method selector='didTransitionToState:'>
<arg declared_type='UITableViewCellStateMask' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragStateDidChange:'>
<arg declared_type='UITableViewCellDragState' index='0' name='dragState' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='editAction'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='editingAccessoryType'>
<retval declared_type='UITableViewCellAccessoryType' type='i' type64='q'/>
</method>
<method selector='editingAccessoryView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='editingStyle'>
<retval declared_type='UITableViewCellEditingStyle' type='i' type64='q'/>
</method>
<method selector='focusStyle'>
<retval declared_type='UITableViewCellFocusStyle' type='i' type64='q'/>
</method>
<method selector='font'>
<retval declared_type='UIFont * _Nullable' type='@'/>
</method>
<method selector='hidesAccessoryWhenEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='image'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='imageView'>
<retval declared_type='UIImageView * _Nullable' type='@'/>
</method>
<method selector='indentationLevel'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indentationWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:reuseIdentifier:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSString * _Nullable' index='1' name='reuseIdentifier' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='initWithStyle:reuseIdentifier:'>
<arg declared_type='UITableViewCellStyle' index='0' name='style' type='i' type64='q'/>
<arg declared_type='NSString * _Nullable' index='1' name='reuseIdentifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='i' type64='q'/>
</method>
<method selector='multipleSelectionBackgroundView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='prepareForReuse'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reuseIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='selectedBackgroundView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='selectedImage'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='selectedTextColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='selectionStyle'>
<retval declared_type='UITableViewCellSelectionStyle' type='i' type64='q'/>
</method>
<method selector='separatorInset'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='setAccessoryAction:'>
<arg declared_type='SEL _Nullable' index='0' name='accessoryAction' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessoryType:'>
<arg declared_type='UITableViewCellAccessoryType' index='0' name='accessoryType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type='UIView * _Nullable' index='0' name='accessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='UIView * _Nullable' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditAction:'>
<arg declared_type='SEL _Nullable' index='0' name='editAction' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditing:'>
<arg declared_type='BOOL' index='0' name='editing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditing:animated:'>
<arg declared_type='BOOL' index='0' name='editing' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditingAccessoryType:'>
<arg declared_type='UITableViewCellAccessoryType' index='0' name='editingAccessoryType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditingAccessoryView:'>
<arg declared_type='UIView * _Nullable' index='0' name='editingAccessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocusStyle:'>
<arg declared_type='UITableViewCellFocusStyle' index='0' name='focusStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='UIFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesAccessoryWhenEditing:'>
<arg declared_type='BOOL' index='0' name='hidesAccessoryWhenEditing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type='BOOL' index='0' name='highlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:animated:'>
<arg declared_type='BOOL' index='0' name='highlighted' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndentationLevel:'>
<arg declared_type='NSInteger' index='0' name='indentationLevel' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndentationWidth:'>
<arg declared_type='CGFloat' index='0' name='indentationWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type='NSLineBreakMode' index='0' name='lineBreakMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMultipleSelectionBackgroundView:'>
<arg declared_type='UIView * _Nullable' index='0' name='multipleSelectionBackgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type='BOOL' index='0' name='selected' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelected:animated:'>
<arg declared_type='BOOL' index='0' name='selected' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedBackgroundView:'>
<arg declared_type='UIView * _Nullable' index='0' name='selectedBackgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedImage:'>
<arg declared_type='UIImage * _Nullable' index='0' name='selectedImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedTextColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='selectedTextColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionStyle:'>
<arg declared_type='UITableViewCellSelectionStyle' index='0' name='selectionStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparatorInset:'>
<arg declared_type='UIEdgeInsets' index='0' name='separatorInset' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldIndentWhileEditing:'>
<arg declared_type='BOOL' index='0' name='shouldIndentWhileEditing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsReorderControl:'>
<arg declared_type='BOOL' index='0' name='showsReorderControl' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:'>
<arg declared_type='NSString * _Nullable' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='textAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInteractionEnabledWhileDragging:'>
<arg declared_type='BOOL' index='0' name='userInteractionEnabledWhileDragging' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldIndentWhileEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showingDeleteConfirmation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsReorderControl'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='text'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='textAlignment'>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='textLabel'>
<retval declared_type='UILabel * _Nullable' type='@'/>
</method>
<method selector='userInteractionEnabledWhileDragging'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='willTransitionToState:'>
<arg declared_type='UITableViewCellStateMask' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UITableViewController'>
<method selector='clearsSelectionOnViewWillAppear'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg declared_type='NSString * _Nullable' index='0' name='nibNameOrNil' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='nibBundleOrNil' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithStyle:'>
<arg declared_type='UITableViewStyle' index='0' name='style' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='refreshControl'>
<retval declared_type='UIRefreshControl * _Nullable' type='@'/>
</method>
<method selector='setClearsSelectionOnViewWillAppear:'>
<arg declared_type='BOOL' index='0' name='clearsSelectionOnViewWillAppear' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRefreshControl:'>
<arg declared_type='UIRefreshControl * _Nullable' index='0' name='refreshControl' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTableView:'>
<arg declared_type='UITableView * _Nullable' index='0' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView'>
<retval declared_type='UITableView * _Nonnull' type='@'/>
</method>
</class>
<class name='UITableViewDropPlaceholder'>
<method selector='previewParametersProvider'>
<retval declared_type='UIDragPreviewParameters * _Nullable (^ _Nullable)(__kindof UITableViewCell * _Nonnull)' function_pointer='true' type='@?'>
<arg declared_type='__kindof UITableViewCell * _Nonnull' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</retval>
</method>
<method selector='setPreviewParametersProvider:'>
<arg declared_type='UIDragPreviewParameters * _Nullable (^ _Nullable)(__kindof UITableViewCell * _Nonnull)' function_pointer='true' index='0' name='previewParametersProvider' type='@?'>
<arg declared_type='__kindof UITableViewCell * _Nonnull' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UITableViewDropProposal'>
<method selector='initWithDropOperation:intent:'>
<arg declared_type='UIDropOperation' index='0' name='operation' type='I' type64='Q'/>
<arg declared_type='UITableViewDropIntent' index='1' name='intent' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='intent'>
<retval declared_type='UITableViewDropIntent' type='i' type64='q'/>
</method>
</class>
<class name='UITableViewFocusUpdateContext'>
<method selector='nextFocusedIndexPath'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='previouslyFocusedIndexPath'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
</class>
<class name='UITableViewHeaderFooterView'>
<method selector='backgroundView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='contentView'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='detailTextLabel'>
<retval declared_type='UILabel * _Nullable' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithReuseIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='reuseIdentifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='prepareForReuse'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reuseIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='UIView * _Nullable' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textLabel'>
<retval declared_type='UILabel * _Nullable' type='@'/>
</method>
</class>
<class name='UITableViewPlaceholder'>
<method selector='cellUpdateHandler'>
<retval declared_type='void (^ _Nullable)(__kindof UITableViewCell * _Nonnull)' function_pointer='true' type='@?'>
<arg declared_type='__kindof UITableViewCell * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='initWithInsertionIndexPath:reuseIdentifier:rowHeight:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='insertionIndexPath' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='reuseIdentifier' type='@'/>
<arg declared_type='CGFloat' index='2' name='rowHeight' type='f' type64='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setCellUpdateHandler:'>
<arg declared_type='void (^ _Nullable)(__kindof UITableViewCell * _Nonnull)' function_pointer='true' index='0' name='cellUpdateHandler' type='@?'>
<arg declared_type='__kindof UITableViewCell * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UITableViewRowAction'>
<method selector='backgroundColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='backgroundEffect'>
<retval declared_type='UIVisualEffect * _Nullable' type='@'/>
</method>
<method class_method='true' selector='rowActionWithStyle:title:handler:'>
<arg declared_type='UITableViewRowActionStyle' index='0' name='style' type='i' type64='q'/>
<arg declared_type='NSString * _Nullable' index='1' name='title' type='@'/>
<arg declared_type='void (^ _Nonnull)(UITableViewRowAction * _Nonnull, NSIndexPath * _Nonnull)' function_pointer='true' index='2' name='handler' type='@?'>
<arg declared_type='UITableViewRowAction * _Nonnull' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundEffect:'>
<arg declared_type='UIVisualEffect * _Nullable' index='0' name='backgroundEffect' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='style'>
<retval declared_type='UITableViewRowActionStyle' type='i' type64='q'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='UITapGestureRecognizer'>
<method selector='numberOfTapsRequired'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setNumberOfTapsRequired:'>
<arg declared_type='NSUInteger' index='0' name='numberOfTapsRequired' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg declared_type='NSUInteger' index='0' name='numberOfTouchesRequired' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UITargetedDragPreview'>
<method selector='initWithView:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithView:parameters:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='UIDragPreviewParameters * _Nonnull' index='1' name='parameters' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithView:parameters:target:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='UIDragPreviewParameters * _Nonnull' index='1' name='parameters' type='@'/>
<arg declared_type='UIDragPreviewTarget * _Nonnull' index='2' name='target' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='parameters'>
<retval declared_type='UIDragPreviewParameters * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='previewForURL:target:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='UIDragPreviewTarget * _Nonnull' index='1' name='target' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='previewForURL:title:target:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='title' type='@'/>
<arg declared_type='UIDragPreviewTarget * _Nonnull' index='2' name='target' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='retargetedPreviewWithTarget:'>
<arg declared_type='UIDragPreviewTarget * _Nonnull' index='0' name='newTarget' type='@'/>
<retval declared_type='UITargetedDragPreview * _Nonnull' type='@'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='target'>
<retval declared_type='UIDragPreviewTarget * _Nonnull' type='@'/>
</method>
<method selector='view'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
</class>
<class name='UITextChecker'>
<method class_method='true' selector='availableLanguages'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='completionsForPartialWordRange:inString:language:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='language' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='guessesForWordRange:inString:language:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='language' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='hasLearnedWord:'>
<arg declared_type='NSString * _Nonnull' index='0' name='word' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ignoreWord:'>
<arg declared_type='NSString * _Nonnull' index='0' name='wordToIgnore' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ignoredWords'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='learnWord:'>
<arg declared_type='NSString * _Nonnull' index='0' name='word' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rangeOfMisspelledWordInString:range:startingAt:wrap:language:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringToCheck' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='2' name='startingOffset' type='i' type64='q'/>
<arg declared_type='BOOL' index='3' name='wrapFlag' type='B'/>
<arg declared_type='NSString * _Nonnull' index='4' name='language' type='@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='setIgnoredWords:'>
<arg declared_type='NSArray * _Nullable' index='0' name='ignoredWords' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='unlearnWord:'>
<arg declared_type='NSString * _Nonnull' index='0' name='word' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UITextDragPreviewRenderer'>
<method selector='adjustFirstLineRect:bodyRect:lastLineRect:textOrigin:'>
<arg declared_type='CGRect * _Nonnull' index='0' name='firstLineRect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGRect * _Nonnull' index='1' name='bodyRect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGRect * _Nonnull' index='2' name='lastLineRect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGPoint' index='3' name='origin' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bodyRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='firstLineRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='image'>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='initWithLayoutManager:range:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithLayoutManager:range:unifyRects:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='BOOL' index='2' name='unifyRects' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='lastLineRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='layoutManager'>
<retval declared_type='NSLayoutManager * _Nonnull' type='@'/>
</method>
</class>
<class name='UITextDropProposal'>
<method selector='dropAction'>
<retval declared_type='UITextDropAction' type='I' type64='Q'/>
</method>
<method selector='dropPerformer'>
<retval declared_type='UITextDropPerformer' type='I' type64='Q'/>
</method>
<method selector='dropProgressMode'>
<retval declared_type='UITextDropProgressMode' type='I' type64='Q'/>
</method>
<method selector='setDropAction:'>
<arg declared_type='UITextDropAction' index='0' name='dropAction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDropPerformer:'>
<arg declared_type='UITextDropPerformer' index='0' name='dropPerformer' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDropProgressMode:'>
<arg declared_type='UITextDropProgressMode' index='0' name='dropProgressMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseFastSameViewOperations:'>
<arg declared_type='BOOL' index='0' name='useFastSameViewOperations' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useFastSameViewOperations'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UITextField'>
<method selector='adjustsFontSizeToFitWidth'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsEditingTextAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributedPlaceholder'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='attributedText'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='background'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='borderRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='borderStyle'>
<retval declared_type='UITextBorderStyle' type='i' type64='q'/>
</method>
<method selector='clearButtonMode'>
<retval declared_type='UITextFieldViewMode' type='i' type64='q'/>
</method>
<method selector='clearButtonRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='clearsOnBeginEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearsOnInsertion'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='defaultTextAttributes'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='disabledBackground'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='drawPlaceholderInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawTextInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='editingRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='font'>
<retval declared_type='UIFont * _Nullable' type='@'/>
</method>
<method selector='inputAccessoryView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='inputView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='isEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='leftView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='leftViewMode'>
<retval declared_type='UITextFieldViewMode' type='i' type64='q'/>
</method>
<method selector='leftViewRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='minimumFontSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='placeholder'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='placeholderRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rightView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='rightViewMode'>
<retval declared_type='UITextFieldViewMode' type='i' type64='q'/>
</method>
<method selector='rightViewRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAdjustsFontSizeToFitWidth:'>
<arg declared_type='BOOL' index='0' name='adjustsFontSizeToFitWidth' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg declared_type='BOOL' index='0' name='allowsEditingTextAttributes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedPlaceholder:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedPlaceholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedText:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackground:'>
<arg declared_type='UIImage * _Nullable' index='0' name='background' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderStyle:'>
<arg declared_type='UITextBorderStyle' index='0' name='borderStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClearButtonMode:'>
<arg declared_type='UITextFieldViewMode' index='0' name='clearButtonMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClearsOnBeginEditing:'>
<arg declared_type='BOOL' index='0' name='clearsOnBeginEditing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClearsOnInsertion:'>
<arg declared_type='BOOL' index='0' name='clearsOnInsertion' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultTextAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='defaultTextAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisabledBackground:'>
<arg declared_type='UIImage * _Nullable' index='0' name='disabledBackground' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='UIFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputAccessoryView:'>
<arg declared_type='UIView * _Nullable' index='0' name='inputAccessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputView:'>
<arg declared_type='UIView * _Nullable' index='0' name='inputView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftView:'>
<arg declared_type='UIView * _Nullable' index='0' name='leftView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftViewMode:'>
<arg declared_type='UITextFieldViewMode' index='0' name='leftViewMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumFontSize:'>
<arg declared_type='CGFloat' index='0' name='minimumFontSize' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholder:'>
<arg declared_type='NSString * _Nullable' index='0' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightView:'>
<arg declared_type='UIView * _Nullable' index='0' name='rightView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightViewMode:'>
<arg declared_type='UITextFieldViewMode' index='0' name='rightViewMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:'>
<arg declared_type='NSString * _Nullable' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='textAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTypingAttributes:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='typingAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='text'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='textAlignment'>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='textRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='typingAttributes'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
</class>
<class name='UITextInputAssistantItem'>
<method selector='allowsHidingShortcuts'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='leadingBarButtonGroups'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setAllowsHidingShortcuts:'>
<arg declared_type='BOOL' index='0' name='allowsHidingShortcuts' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeadingBarButtonGroups:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='leadingBarButtonGroups' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrailingBarButtonGroups:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='trailingBarButtonGroups' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trailingBarButtonGroups'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='UITextInputMode'>
<method class_method='true' selector='activeInputModes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='currentInputMode'>
<retval declared_type='UITextInputMode * _Nullable' type='@'/>
</method>
<method selector='primaryLanguage'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='UITextInputPasswordRules'>
<method selector='passwordRulesDescriptor'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='passwordRulesWithDescriptor:'>
<arg declared_type='NSString * _Nonnull' index='0' name='passwordRulesDescriptor' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UITextInputStringTokenizer'>
<method selector='initWithTextInput:'>
<arg declared_type='UIResponder * _Nonnull' index='0' name='textInput' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='UITextRange'>
<method selector='end'>
<retval declared_type='UITextPosition * _Nonnull' type='@'/>
</method>
<method selector='isEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='start'>
<retval declared_type='UITextPosition * _Nonnull' type='@'/>
</method>
</class>
<class name='UITextSelectionRect'>
<method selector='containsEnd'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsStart'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVertical'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='writingDirection'>
<retval declared_type='UITextWritingDirection' type='i' type64='q'/>
</method>
</class>
<class name='UITextView'>
<method selector='allowsEditingTextAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributedText'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='clearsOnInsertion'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataDetectorTypes'>
<retval declared_type='UIDataDetectorTypes' type='I' type64='Q'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='font'>
<retval declared_type='UIFont * _Nullable' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:textContainer:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nullable' index='1' name='textContainer' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='inputAccessoryView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='inputView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager'>
<retval declared_type='NSLayoutManager * _Nonnull' type='@'/>
</method>
<method selector='linkTextAttributes'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='scrollRangeToVisible:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg declared_type='BOOL' index='0' name='allowsEditingTextAttributes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedText:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClearsOnInsertion:'>
<arg declared_type='BOOL' index='0' name='clearsOnInsertion' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataDetectorTypes:'>
<arg declared_type='UIDataDetectorTypes' index='0' name='dataDetectorTypes' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='UIFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputAccessoryView:'>
<arg declared_type='UIView * _Nullable' index='0' name='inputAccessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputView:'>
<arg declared_type='UIView * _Nullable' index='0' name='inputView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLinkTextAttributes:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='linkTextAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type='BOOL' index='0' name='selectable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedRange:'>
<arg declared_type='NSRange' index='0' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:'>
<arg declared_type='NSString * _Nullable' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='textAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextContainerInset:'>
<arg declared_type='UIEdgeInsets' index='0' name='textContainerInset' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTypingAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='typingAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='text'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='textAlignment'>
<retval declared_type='NSTextAlignment' type='i' type64='q'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='textContainer'>
<retval declared_type='NSTextContainer * _Nonnull' type='@'/>
</method>
<method selector='textContainerInset'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='textStorage'>
<retval declared_type='NSTextStorage * _Nonnull' type='@'/>
</method>
<method selector='typingAttributes'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
</class>
<class name='UIToolbar'>
<method selector='backgroundImageForToolbarPosition:barMetrics:'>
<arg declared_type='UIBarPosition' index='0' name='topOrBottom' type='i' type64='q'/>
<arg declared_type='UIBarMetrics' index='1' name='barMetrics' type='i' type64='q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='barStyle'>
<retval declared_type='UIBarStyle' type='i' type64='q'/>
</method>
<method selector='barTintColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='isTranslucent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='items'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setBackgroundImage:forToolbarPosition:barMetrics:'>
<arg declared_type='UIImage * _Nullable' index='0' name='backgroundImage' type='@'/>
<arg declared_type='UIBarPosition' index='1' name='topOrBottom' type='i' type64='q'/>
<arg declared_type='UIBarMetrics' index='2' name='barMetrics' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarStyle:'>
<arg declared_type='UIBarStyle' index='0' name='barStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='barTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItems:'>
<arg declared_type='NSArray * _Nullable' index='0' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItems:animated:'>
<arg declared_type='NSArray * _Nullable' index='0' name='items' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowImage:forToolbarPosition:'>
<arg declared_type='UIImage * _Nullable' index='0' name='shadowImage' type='@'/>
<arg declared_type='UIBarPosition' index='1' name='topOrBottom' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTranslucent:'>
<arg declared_type='BOOL' index='0' name='translucent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowImageForToolbarPosition:'>
<arg declared_type='UIBarPosition' index='0' name='topOrBottom' type='i' type64='q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
</class>
<class name='UITouch'>
<method selector='altitudeAngle'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='azimuthAngleInView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='azimuthUnitVectorInView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='CGVector' type='{CGVector=ff}' type64='{CGVector=dd}'/>
</method>
<method selector='estimatedProperties'>
<retval declared_type='UITouchProperties' type='i' type64='q'/>
</method>
<method selector='estimatedPropertiesExpectingUpdates'>
<retval declared_type='UITouchProperties' type='i' type64='q'/>
</method>
<method selector='estimationUpdateIndex'>
<retval declared_type='NSNumber * _Nullable' type='@'/>
</method>
<method selector='force'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='gestureRecognizers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='locationInView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='majorRadius'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='majorRadiusTolerance'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='maximumPossibleForce'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='phase'>
<retval declared_type='UITouchPhase' type='i' type64='q'/>
</method>
<method selector='preciseLocationInView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='precisePreviousLocationInView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='previousLocationInView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='tapCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='timestamp'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='type'>
<retval declared_type='UITouchType' type='i' type64='q'/>
</method>
<method selector='view'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='window'>
<retval declared_type='UIWindow * _Nullable' type='@'/>
</method>
</class>
<class name='UITraitCollection'>
<method selector='containsTraitsInCollection:'>
<arg declared_type='UITraitCollection * _Nullable' index='0' name='trait' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displayGamut'>
<retval declared_type='UIDisplayGamut' type='i' type64='q'/>
</method>
<method selector='displayScale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='forceTouchCapability'>
<retval declared_type='UIForceTouchCapability' type='i' type64='q'/>
</method>
<method selector='horizontalSizeClass'>
<retval declared_type='UIUserInterfaceSizeClass' type='i' type64='q'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='layoutDirection'>
<retval declared_type='UITraitEnvironmentLayoutDirection' type='i' type64='q'/>
</method>
<method selector='preferredContentSizeCategory'>
<retval declared_type='UIContentSizeCategory _Nonnull' type='@'/>
</method>
<method class_method='true' selector='traitCollectionWithDisplayGamut:'>
<arg declared_type='UIDisplayGamut' index='0' name='displayGamut' type='i' type64='q'/>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='traitCollectionWithDisplayScale:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f' type64='d'/>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='traitCollectionWithForceTouchCapability:'>
<arg declared_type='UIForceTouchCapability' index='0' name='capability' type='i' type64='q'/>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='traitCollectionWithHorizontalSizeClass:'>
<arg declared_type='UIUserInterfaceSizeClass' index='0' name='horizontalSizeClass' type='i' type64='q'/>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='traitCollectionWithLayoutDirection:'>
<arg declared_type='UITraitEnvironmentLayoutDirection' index='0' name='layoutDirection' type='i' type64='q'/>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='traitCollectionWithPreferredContentSizeCategory:'>
<arg declared_type='UIContentSizeCategory _Nonnull' index='0' name='preferredContentSizeCategory' type='@'/>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='traitCollectionWithTraitsFromCollections:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='traitCollections' type='@'/>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='traitCollectionWithUserInterfaceIdiom:'>
<arg declared_type='UIUserInterfaceIdiom' index='0' name='idiom' type='i' type64='q'/>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='traitCollectionWithUserInterfaceStyle:'>
<arg declared_type='UIUserInterfaceStyle' index='0' name='userInterfaceStyle' type='i' type64='q'/>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='traitCollectionWithVerticalSizeClass:'>
<arg declared_type='UIUserInterfaceSizeClass' index='0' name='verticalSizeClass' type='i' type64='q'/>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method selector='userInterfaceIdiom'>
<retval declared_type='UIUserInterfaceIdiom' type='i' type64='q'/>
</method>
<method selector='userInterfaceStyle'>
<retval declared_type='UIUserInterfaceStyle' type='i' type64='q'/>
</method>
<method selector='verticalSizeClass'>
<retval declared_type='UIUserInterfaceSizeClass' type='i' type64='q'/>
</method>
</class>
<class name='UIUserNotificationAction'>
<method selector='activationMode'>
<retval declared_type='UIUserNotificationActivationMode' type='I' type64='Q'/>
</method>
<method selector='behavior'>
<retval declared_type='UIUserNotificationActionBehavior' type='I' type64='Q'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isAuthenticationRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDestructive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parameters'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='UIUserNotificationCategory'>
<method selector='actionsForContext:'>
<arg declared_type='UIUserNotificationActionContext' index='0' name='context' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
</class>
<class name='UIUserNotificationSettings'>
<method selector='categories'>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method class_method='true' selector='settingsForTypes:categories:'>
<arg declared_type='UIUserNotificationType' index='0' name='types' type='I' type64='Q'/>
<arg declared_type='NSSet * _Nullable' index='1' name='categories' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='types'>
<retval declared_type='UIUserNotificationType' type='I' type64='Q'/>
</method>
</class>
<class name='UIVibrancyEffect'>
<method class_method='true' selector='effectForBlurEffect:'>
<arg declared_type='UIBlurEffect * _Nonnull' index='0' name='blurEffect' type='@'/>
<retval declared_type='UIVibrancyEffect * _Nonnull' type='@'/>
</method>
</class>
<class name='UIVideoEditorController'>
<method class_method='true' selector='canEditVideoAtPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='videoPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoMaximumDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='videoMaximumDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='videoPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoQuality:'>
<arg declared_type='UIImagePickerControllerQualityType' index='0' name='videoQuality' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoMaximumDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='videoPath'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='videoQuality'>
<retval declared_type='UIImagePickerControllerQualityType' type='i' type64='q'/>
</method>
</class>
<class name='UIView'>
<method selector='accessibilityIgnoresInvertColors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addConstraint:'>
<arg declared_type='NSLayoutConstraint * _Nonnull' index='0' name='constraint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addConstraints:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='constraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addGestureRecognizer:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addInteraction:'>
<arg declared_type='id _Nonnull' index='0' name='interaction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addKeyframeWithRelativeStartTime:relativeDuration:animations:'>
<arg declared_type='double' index='0' name='frameStartTime' type='d'/>
<arg declared_type='double' index='1' name='frameDuration' type='d'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='2' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addLayoutGuide:'>
<arg declared_type='UILayoutGuide * _Nonnull' index='0' name='layoutGuide' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addMotionEffect:'>
<arg declared_type='UIMotionEffect * _Nonnull' index='0' name='effect' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSubview:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignmentRectForFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='alignmentRectInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='alpha'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='animateKeyframesWithDuration:delay:options:animations:completion:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<arg declared_type='UIViewKeyframeAnimationOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='4' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='animateWithDuration:animations:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='animateWithDuration:animations:completion:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='animateWithDuration:delay:options:animations:completion:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<arg declared_type='UIViewAnimationOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='4' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<arg declared_type='CGFloat' index='2' name='dampingRatio' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='velocity' type='f' type64='d'/>
<arg declared_type='UIViewAnimationOptions' index='4' name='options' type='I' type64='Q'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='5' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='6' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='areAnimationsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autoresizesSubviews'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autoresizingMask'>
<retval declared_type='UIViewAutoresizing' type='I' type64='Q'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method class_method='true' selector='beginAnimations:context:'>
<arg declared_type='NSString * _Nullable' index='0' name='animationID' type='@'/>
<arg declared_type='void * _Nullable' index='1' name='context' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bottomAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='bringSubviewToFront:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canBecomeFocused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='center'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='centerXAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='centerYAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='clearsContextBeforeDrawing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clipsToBounds'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='commitAnimations'>
<retval declared_type='void' type='v'/>
</method>
<method selector='constraints'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='constraintsAffectingLayoutForAxis:'>
<arg declared_type='UILayoutConstraintAxis' index='0' name='axis' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='contentCompressionResistancePriorityForAxis:'>
<arg declared_type='UILayoutConstraintAxis' index='0' name='axis' type='i' type64='q'/>
<retval declared_type='UILayoutPriority' type='f'/>
</method>
<method selector='contentHuggingPriorityForAxis:'>
<arg declared_type='UILayoutConstraintAxis' index='0' name='axis' type='i' type64='q'/>
<retval declared_type='UILayoutPriority' type='f'/>
</method>
<method selector='contentMode'>
<retval declared_type='UIViewContentMode' type='i' type64='q'/>
</method>
<method selector='contentScaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='contentStretch'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertPoint:fromView:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UIView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toView:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UIView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromView:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toView:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='decodeRestorableStateWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didAddSubview:'>
<arg declared_type='UIView * _Nonnull' index='0' name='subview' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didMoveToSuperview'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didMoveToWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='directionalLayoutMargins'>
<retval declared_type='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
</method>
<method selector='drawRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawRect:forViewPrintFormatter:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIViewPrintFormatter * _Nonnull' index='1' name='formatter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawViewHierarchyInRect:afterScreenUpdates:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='afterUpdates' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='effectiveUserInterfaceLayoutDirection'>
<retval declared_type='UIUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endEditing:'>
<arg declared_type='BOOL' index='0' name='force' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='exchangeSubviewAtIndex:withSubviewAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index1' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='index2' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='exerciseAmbiguityInLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstBaselineAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='frame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameForAlignmentRect:'>
<arg declared_type='CGRect' index='0' name='alignmentRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='gestureRecognizerShouldBegin:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='hasAmbiguousLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='heightAnchor'>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
<method selector='hitTest:withEvent:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method class_method='true' selector='inheritedAnimationDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertSubview:aboveSubview:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='siblingSubview' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertSubview:atIndex:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertSubview:belowSubview:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='siblingSubview' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insetsLayoutMarginsFromSafeArea'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='interactions'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='intrinsicContentSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='invalidateIntrinsicContentSize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isDescendantOfView:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExclusiveTouch'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFocused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMultipleTouchEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUserInteractionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastBaselineAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='layer'>
<retval declared_type='CALayer * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='layerClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='layoutGuides'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='layoutIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutMargins'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='layoutMarginsDidChange'>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutMarginsGuide'>
<retval declared_type='UILayoutGuide * _Nonnull' type='@'/>
</method>
<method selector='layoutSubviews'>
<retval declared_type='void' type='v'/>
</method>
<method selector='leadingAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='leftAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='maskView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='motionEffects'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='needsUpdateConstraints'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='performSystemAnimation:onViews:options:animations:completion:'>
<arg declared_type='UISystemAnimation' index='0' name='animation' type='I' type64='Q'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='views' type='@'/>
<arg declared_type='UIViewAnimationOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='3' name='parallelAnimations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='4' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='performWithoutAnimation:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='actionsWithoutAnimation' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='pointInside:withEvent:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UIEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preservesSuperviewLayoutMargins'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readableContentGuide'>
<retval declared_type='UILayoutGuide * _Nonnull' type='@'/>
</method>
<method selector='removeConstraint:'>
<arg declared_type='NSLayoutConstraint * _Nonnull' index='0' name='constraint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeConstraints:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='constraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromSuperview'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeGestureRecognizer:'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeInteraction:'>
<arg declared_type='id _Nonnull' index='0' name='interaction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLayoutGuide:'>
<arg declared_type='UILayoutGuide * _Nonnull' index='0' name='layoutGuide' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeMotionEffect:'>
<arg declared_type='UIMotionEffect * _Nonnull' index='0' name='effect' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='requiresConstraintBasedLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='afterUpdates' type='B'/>
<arg declared_type='UIEdgeInsets' index='2' name='capInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='restorationIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='rightAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='safeAreaInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='safeAreaInsetsDidChange'>
<retval declared_type='void' type='v'/>
</method>
<method selector='safeAreaLayoutGuide'>
<retval declared_type='UILayoutGuide * _Nonnull' type='@'/>
</method>
<method selector='semanticContentAttribute'>
<retval declared_type='UISemanticContentAttribute' type='i' type64='q'/>
</method>
<method selector='sendSubviewToBack:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityIgnoresInvertColors:'>
<arg declared_type='BOOL' index='0' name='accessibilityIgnoresInvertColors' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlpha:'>
<arg declared_type='CGFloat' index='0' name='alpha' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationBeginsFromCurrentState:'>
<arg declared_type='BOOL' index='0' name='fromCurrentState' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationCurve:'>
<arg declared_type='UIViewAnimationCurve' index='0' name='curve' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationDidStopSelector:'>
<arg declared_type='SEL _Nullable' index='0' name='selector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationRepeatAutoreverses:'>
<arg declared_type='BOOL' index='0' name='repeatAutoreverses' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationRepeatCount:'>
<arg declared_type='float' index='0' name='repeatCount' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationStartDate:'>
<arg declared_type='NSDate * _Nonnull' index='0' name='startDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationTransition:forView:cache:'>
<arg declared_type='UIViewAnimationTransition' index='0' name='transition' type='i' type64='q'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='BOOL' index='2' name='cache' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationWillStartSelector:'>
<arg declared_type='SEL _Nullable' index='0' name='selector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationsEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoresizesSubviews:'>
<arg declared_type='BOOL' index='0' name='autoresizesSubviews' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoresizingMask:'>
<arg declared_type='UIViewAutoresizing' index='0' name='autoresizingMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenter:'>
<arg declared_type='CGPoint' index='0' name='center' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClearsContextBeforeDrawing:'>
<arg declared_type='BOOL' index='0' name='clearsContextBeforeDrawing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClipsToBounds:'>
<arg declared_type='BOOL' index='0' name='clipsToBounds' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentCompressionResistancePriority:forAxis:'>
<arg declared_type='UILayoutPriority' index='0' name='priority' type='f'/>
<arg declared_type='UILayoutConstraintAxis' index='1' name='axis' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentHuggingPriority:forAxis:'>
<arg declared_type='UILayoutPriority' index='0' name='priority' type='f'/>
<arg declared_type='UILayoutConstraintAxis' index='1' name='axis' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentMode:'>
<arg declared_type='UIViewContentMode' index='0' name='contentMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentScaleFactor:'>
<arg declared_type='CGFloat' index='0' name='contentScaleFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentStretch:'>
<arg declared_type='CGRect' index='0' name='contentStretch' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirectionalLayoutMargins:'>
<arg declared_type='NSDirectionalEdgeInsets' index='0' name='directionalLayoutMargins' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExclusiveTouch:'>
<arg declared_type='BOOL' index='0' name='exclusiveTouch' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGestureRecognizers:'>
<arg declared_type='NSArray * _Nullable' index='0' name='gestureRecognizers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInsetsLayoutMarginsFromSafeArea:'>
<arg declared_type='BOOL' index='0' name='insetsLayoutMarginsFromSafeArea' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInteractions:'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='interactions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayoutMargins:'>
<arg declared_type='UIEdgeInsets' index='0' name='layoutMargins' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaskView:'>
<arg declared_type='UIView * _Nullable' index='0' name='maskView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMotionEffects:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='motionEffects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMultipleTouchEnabled:'>
<arg declared_type='BOOL' index='0' name='multipleTouchEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsDisplay'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsDisplayInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsUpdateConstraints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpaque:'>
<arg declared_type='BOOL' index='0' name='opaque' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreservesSuperviewLayoutMargins:'>
<arg declared_type='BOOL' index='0' name='preservesSuperviewLayoutMargins' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestorationIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='restorationIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSemanticContentAttribute:'>
<arg declared_type='UISemanticContentAttribute' index='0' name='semanticContentAttribute' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintAdjustmentMode:'>
<arg declared_type='UIViewTintAdjustmentMode' index='0' name='tintAdjustmentMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='tintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTranslatesAutoresizingMaskIntoConstraints:'>
<arg declared_type='BOOL' index='0' name='translatesAutoresizingMaskIntoConstraints' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInteractionEnabled:'>
<arg declared_type='BOOL' index='0' name='userInteractionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeThatFits:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sizeToFit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='snapshotViewAfterScreenUpdates:'>
<arg declared_type='BOOL' index='0' name='afterUpdates' type='B'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='subviews'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='superview'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='systemLayoutSizeFittingSize:'>
<arg declared_type='CGSize' index='0' name='targetSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:'>
<arg declared_type='CGSize' index='0' name='targetSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='UILayoutPriority' index='1' name='horizontalFittingPriority' type='f'/>
<arg declared_type='UILayoutPriority' index='2' name='verticalFittingPriority' type='f'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tintAdjustmentMode'>
<retval declared_type='UIViewTintAdjustmentMode' type='i' type64='q'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='tintColorDidChange'>
<retval declared_type='void' type='v'/>
</method>
<method selector='topAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='trailingAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='transform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method class_method='true' selector='transitionFromView:toView:duration:options:completion:'>
<arg declared_type='UIView * _Nonnull' index='0' name='fromView' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='toView' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<arg declared_type='UIViewAnimationOptions' index='3' name='options' type='I' type64='Q'/>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='4' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='transitionWithView:duration:options:animations:completion:'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<arg declared_type='UIViewAnimationOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='3' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='4' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='translatesAutoresizingMaskIntoConstraints'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateConstraints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateConstraintsIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='userInterfaceLayoutDirectionForSemanticContentAttribute:'>
<arg declared_type='UISemanticContentAttribute' index='0' name='attribute' type='i' type64='q'/>
<retval declared_type='UIUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
<method class_method='true' selector='userInterfaceLayoutDirectionForSemanticContentAttribute:relativeToLayoutDirection:'>
<arg declared_type='UISemanticContentAttribute' index='0' name='semanticContentAttribute' type='i' type64='q'/>
<arg declared_type='UIUserInterfaceLayoutDirection' index='1' name='layoutDirection' type='i' type64='q'/>
<retval declared_type='UIUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
<method selector='viewForBaselineLayout'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='viewForFirstBaselineLayout'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='viewForLastBaselineLayout'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='viewPrintFormatter'>
<retval declared_type='UIViewPrintFormatter * _Nonnull' type='@'/>
</method>
<method selector='viewWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='__kindof UIView * _Nullable' type='@'/>
</method>
<method selector='widthAnchor'>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
<method selector='willMoveToSuperview:'>
<arg declared_type='UIView * _Nullable' index='0' name='newSuperview' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willMoveToWindow:'>
<arg declared_type='UIWindow * _Nullable' index='0' name='newWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willRemoveSubview:'>
<arg declared_type='UIView * _Nonnull' index='0' name='subview' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window'>
<retval declared_type='UIWindow * _Nullable' type='@'/>
</method>
</class>
<class name='UIViewController'>
<method selector='addChildViewController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='childController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addKeyCommand:'>
<arg declared_type='UIKeyCommand * _Nonnull' index='0' name='keyCommand' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='additionalSafeAreaInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='allowedChildViewControllersForUnwindingFromSource:'>
<arg declared_type='UIStoryboardUnwindSegueSource * _Nonnull' index='0' name='source' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='applicationFinishedRestoringState'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='attemptRotationToDeviceOrientation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='automaticallyAdjustsScrollViewInsets'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginAppearanceTransition:animated:'>
<arg declared_type='BOOL' index='0' name='isAppearing' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bottomLayoutGuide'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='canPerformUnwindSegueAction:fromViewController:withSender:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='fromViewController' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='childViewControllerContainingSegueSource:'>
<arg declared_type='UIStoryboardUnwindSegueSource * _Nonnull' index='0' name='source' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='childViewControllerForHomeIndicatorAutoHidden'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='childViewControllerForScreenEdgesDeferringSystemGestures'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='childViewControllerForStatusBarHidden'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='childViewControllerForStatusBarStyle'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='childViewControllers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='collapseSecondaryViewController:forSplitViewController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='secondaryViewController' type='@'/>
<arg declared_type='UISplitViewController * _Nonnull' index='1' name='splitViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentSizeForViewInPopover'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='decodeRestorableStateWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='definesPresentationContext'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='didAnimateFirstHalfOfRotationToInterfaceOrientation:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='toInterfaceOrientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didMoveToParentViewController:'>
<arg declared_type='UIViewController * _Nullable' index='0' name='parent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didReceiveMemoryWarning'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didRotateFromInterfaceOrientation:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='fromInterfaceOrientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disablesAutomaticKeyboardDismissal'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dismissModalViewControllerAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dismissViewControllerAnimated:completion:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='1' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='edgesForExtendedLayout'>
<retval declared_type='UIRectEdge' type='I' type64='Q'/>
</method>
<method selector='editButtonItem'>
<retval declared_type='UIBarButtonItem * _Nonnull' type='@'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endAppearanceTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='extendedLayoutIncludesOpaqueBars'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='extensionContext'>
<retval declared_type='NSExtensionContext * _Nullable' type='@'/>
</method>
<method selector='hidesBottomBarWhenPushed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg declared_type='NSString * _Nullable' index='0' name='nibNameOrNil' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='nibBundleOrNil' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='interfaceOrientation'>
<retval declared_type='UIInterfaceOrientation' type='i' type64='q'/>
</method>
<method selector='isBeingDismissed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isBeingPresented'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isModalInPopover'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMovingFromParentViewController'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMovingToParentViewController'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isViewLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadView'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadViewIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='modalPresentationCapturesStatusBarAppearance'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='modalPresentationStyle'>
<retval declared_type='UIModalPresentationStyle' type='i' type64='q'/>
</method>
<method selector='modalTransitionStyle'>
<retval declared_type='UIModalTransitionStyle' type='i' type64='q'/>
</method>
<method selector='modalViewController'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='navigationController'>
<retval declared_type='UINavigationController * _Nullable' type='@'/>
</method>
<method selector='navigationItem'>
<retval declared_type='UINavigationItem * _Nonnull' type='@'/>
</method>
<method selector='nibBundle'>
<retval declared_type='NSBundle * _Nullable' type='@'/>
</method>
<method selector='nibName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='overrideTraitCollectionForChildViewController:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='childViewController' type='@'/>
<retval declared_type='UITraitCollection * _Nullable' type='@'/>
</method>
<method selector='parentViewController'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='performSegueWithIdentifier:sender:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverPresentationController'>
<retval declared_type='UIPopoverPresentationController * _Nullable' type='@'/>
</method>
<method selector='preferredContentSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='preferredInterfaceOrientationForPresentation'>
<retval declared_type='UIInterfaceOrientation' type='i' type64='q'/>
</method>
<method selector='preferredScreenEdgesDeferringSystemGestures'>
<retval declared_type='UIRectEdge' type='I' type64='Q'/>
</method>
<method selector='preferredStatusBarStyle'>
<retval declared_type='UIStatusBarStyle' type='i' type64='q'/>
</method>
<method selector='preferredStatusBarUpdateAnimation'>
<retval declared_type='UIStatusBarAnimation' type='i' type64='q'/>
</method>
<method selector='prefersHomeIndicatorAutoHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prefersStatusBarHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareForSegue:sender:'>
<arg declared_type='UIStoryboardSegue * _Nonnull' index='0' name='segue' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentModalViewController:animated:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='modalViewController' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentViewController:animated:completion:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='viewControllerToPresent' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='2' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentationController'>
<retval declared_type='UIPresentationController * _Nullable' type='@'/>
</method>
<method selector='presentedViewController'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='presentingViewController'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='previewActionItems'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='providesPresentationContextTransitionStyle'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='registerForPreviewingWithDelegate:sourceView:'>
<arg declared_type='id _Nonnull' index='0' name='delegate' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='sourceView' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='removeFromParentViewController'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeKeyCommand:'>
<arg declared_type='UIKeyCommand * _Nonnull' index='0' name='keyCommand' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restorationClass'>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method selector='restorationIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='restoresFocusAfterTransition'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rotatingFooterView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='rotatingHeaderView'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='searchDisplayController'>
<retval declared_type='UISearchDisplayController * _Nullable' type='@'/>
</method>
<method selector='segueForUnwindingToViewController:fromViewController:identifier:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='toViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='fromViewController' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='identifier' type='@'/>
<retval declared_type='UIStoryboardSegue * _Nullable' type='@'/>
</method>
<method selector='separateSecondaryViewControllerForSplitViewController:'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='setAdditionalSafeAreaInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='additionalSafeAreaInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticallyAdjustsScrollViewInsets:'>
<arg declared_type='BOOL' index='0' name='automaticallyAdjustsScrollViewInsets' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentSizeForViewInPopover:'>
<arg declared_type='CGSize' index='0' name='contentSizeForViewInPopover' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefinesPresentationContext:'>
<arg declared_type='BOOL' index='0' name='definesPresentationContext' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEdgesForExtendedLayout:'>
<arg declared_type='UIRectEdge' index='0' name='edgesForExtendedLayout' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditing:'>
<arg declared_type='BOOL' index='0' name='editing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditing:animated:'>
<arg declared_type='BOOL' index='0' name='editing' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExtendedLayoutIncludesOpaqueBars:'>
<arg declared_type='BOOL' index='0' name='extendedLayoutIncludesOpaqueBars' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesBottomBarWhenPushed:'>
<arg declared_type='BOOL' index='0' name='hidesBottomBarWhenPushed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModalInPopover:'>
<arg declared_type='BOOL' index='0' name='modalInPopover' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModalPresentationCapturesStatusBarAppearance:'>
<arg declared_type='BOOL' index='0' name='modalPresentationCapturesStatusBarAppearance' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModalPresentationStyle:'>
<arg declared_type='UIModalPresentationStyle' index='0' name='modalPresentationStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModalTransitionStyle:'>
<arg declared_type='UIModalTransitionStyle' index='0' name='modalTransitionStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsStatusBarAppearanceUpdate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsUpdateOfHomeIndicatorAutoHidden'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsUpdateOfScreenEdgesDeferringSystemGestures'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOverrideTraitCollection:forChildViewController:'>
<arg declared_type='UITraitCollection * _Nullable' index='0' name='collection' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='childViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredContentSize:'>
<arg declared_type='CGSize' index='0' name='preferredContentSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProvidesPresentationContextTransitionStyle:'>
<arg declared_type='BOOL' index='0' name='providesPresentationContextTransitionStyle' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestorationClass:'>
<arg declared_type='Class _Nullable' index='0' name='restorationClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestorationIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='restorationIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestoresFocusAfterTransition:'>
<arg declared_type='BOOL' index='0' name='restoresFocusAfterTransition' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabBarItem:'>
<arg declared_type='UITabBarItem * _Nullable' index='0' name='tabBarItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolbarItems:'>
<arg declared_type='NSArray * _Nullable' index='0' name='toolbarItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolbarItems:animated:'>
<arg declared_type='NSArray * _Nullable' index='0' name='toolbarItems' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransitioningDelegate:'>
<arg declared_type='id _Nullable' index='0' name='transitioningDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewRespectsSystemMinimumLayoutMargins:'>
<arg declared_type='BOOL' index='0' name='viewRespectsSystemMinimumLayoutMargins' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWantsFullScreenLayout:'>
<arg declared_type='BOOL' index='0' name='wantsFullScreenLayout' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldAutomaticallyForwardAppearanceMethods'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldAutomaticallyForwardRotationMethods'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldAutorotate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldAutorotateToInterfaceOrientation:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='toInterfaceOrientation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldPerformSegueWithIdentifier:sender:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showDetailViewController:sender:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='vc' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showViewController:sender:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='vc' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitViewController'>
<retval declared_type='UISplitViewController * _Nullable' type='@'/>
</method>
<method selector='storyboard'>
<retval declared_type='UIStoryboard * _Nullable' type='@'/>
</method>
<method selector='supportedInterfaceOrientations'>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
<method selector='systemMinimumLayoutMargins'>
<retval declared_type='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=ffff}' type64='{NSDirectionalEdgeInsets=dddd}'/>
</method>
<method selector='tabBarController'>
<retval declared_type='UITabBarController * _Nullable' type='@'/>
</method>
<method selector='tabBarItem'>
<retval declared_type='UITabBarItem * _Nonnull' type='@'/>
</method>
<method selector='targetViewControllerForAction:sender:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='toolbarItems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='topLayoutGuide'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='transitionCoordinator'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='transitionFromViewController:toViewController:duration:options:animations:completion:'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='fromViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='toViewController' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<arg declared_type='UIViewAnimationOptions' index='3' name='options' type='I' type64='Q'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='4' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='5' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='transitioningDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='unregisterForPreviewingWithContext:'>
<arg declared_type='id _Nonnull' index='0' name='previewing' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unwindForSegue:towardsViewController:'>
<arg declared_type='UIStoryboardSegue * _Nonnull' index='0' name='unwindSegue' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='subsequentVC' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateViewConstraints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='viewControllerForUnwindSegueAction:fromViewController:withSender:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='fromViewController' type='@'/>
<arg declared_type='id _Nullable' index='2' name='sender' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='viewDidAppear:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidDisappear:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidLayoutSubviews'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidUnload'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewIfLoaded'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='viewLayoutMarginsDidChange'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewRespectsSystemMinimumLayoutMargins'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='viewSafeAreaInsetsDidChange'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillAppear:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillDisappear:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillLayoutSubviews'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillUnload'>
<retval declared_type='void' type='v'/>
</method>
<method selector='wantsFullScreenLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='toInterfaceOrientation' type='i' type64='q'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willAnimateRotationToInterfaceOrientation:duration:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='toInterfaceOrientation' type='i' type64='q'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='fromInterfaceOrientation' type='i' type64='q'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willMoveToParentViewController:'>
<arg declared_type='UIViewController * _Nullable' index='0' name='parent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willRotateToInterfaceOrientation:duration:'>
<arg declared_type='UIInterfaceOrientation' index='0' name='toInterfaceOrientation' type='i' type64='q'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIViewPrintFormatter'>
<method selector='view'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
</class>
<class name='UIViewPropertyAnimator'>
<method selector='addAnimations:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='animation' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnimations:delayFactor:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='animation' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CGFloat' index='1' name='delayFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addCompletion:'>
<arg declared_type='void (^ _Nonnull)(UIViewAnimatingPosition)' function_pointer='true' index='0' name='completion' type='@?'>
<arg declared_type='UIViewAnimatingPosition' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='continueAnimationWithTimingParameters:durationFactor:'>
<arg declared_type='id _Nullable' index='0' name='parameters' type='@'/>
<arg declared_type='CGFloat' index='1' name='durationFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='initWithDuration:controlPoint1:controlPoint2:animations:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='CGPoint' index='1' name='point1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='2' name='point2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='3' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithDuration:curve:animations:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='UIViewAnimationCurve' index='1' name='curve' type='i' type64='q'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='2' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithDuration:dampingRatio:animations:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='CGFloat' index='1' name='ratio' type='f' type64='d'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='2' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithDuration:timingParameters:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='id _Nonnull' index='1' name='parameters' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isInterruptible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isManualHitTestingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUserInteractionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pausesOnCompletion'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='runningPropertyAnimatorWithDuration:delay:options:animations:completion:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<arg declared_type='UIViewAnimationOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(UIViewAnimatingPosition)' function_pointer='true' index='4' name='completion' type='@?'>
<arg declared_type='UIViewAnimatingPosition' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='scrubsLinearly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setInterruptible:'>
<arg declared_type='BOOL' index='0' name='interruptible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManualHitTestingEnabled:'>
<arg declared_type='BOOL' index='0' name='manualHitTestingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPausesOnCompletion:'>
<arg declared_type='BOOL' index='0' name='pausesOnCompletion' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrubsLinearly:'>
<arg declared_type='BOOL' index='0' name='scrubsLinearly' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInteractionEnabled:'>
<arg declared_type='BOOL' index='0' name='userInteractionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timingParameters'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='UIVisualEffectView'>
<method selector='contentView'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='effect'>
<retval declared_type='UIVisualEffect * _Nullable' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithEffect:'>
<arg declared_type='UIVisualEffect * _Nullable' index='0' name='effect' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setEffect:'>
<arg declared_type='UIVisualEffect * _Nullable' index='0' name='effect' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIWebView'>
<method selector='allowsInlineMediaPlayback'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsLinkPreview'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsPictureInPictureMediaPlayback'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canGoBack'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canGoForward'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataDetectorTypes'>
<retval declared_type='UIDataDetectorTypes' type='I' type64='Q'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='detectsPhoneNumbers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gapBetweenPages'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='goBack'>
<retval declared_type='void' type='v'/>
</method>
<method selector='goForward'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isLoading'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyboardDisplayRequiresUserAction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadData:MIMEType:textEncodingName:baseURL:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='MIMEType' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='textEncodingName' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='3' name='baseURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadHTMLString:baseURL:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='NSURL * _Nullable' index='1' name='baseURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadRequest:'>
<arg declared_type='NSURLRequest * _Nonnull' index='0' name='request' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mediaPlaybackAllowsAirPlay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mediaPlaybackRequiresUserAction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pageCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='pageLength'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paginationBreakingMode'>
<retval declared_type='UIWebPaginationBreakingMode' type='i' type64='q'/>
</method>
<method selector='paginationMode'>
<retval declared_type='UIWebPaginationMode' type='i' type64='q'/>
</method>
<method selector='reload'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest * _Nullable' type='@'/>
</method>
<method selector='scalesPageToFit'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scrollView'>
<retval declared_type='UIScrollView * _Nonnull' type='@'/>
</method>
<method selector='setAllowsInlineMediaPlayback:'>
<arg declared_type='BOOL' index='0' name='allowsInlineMediaPlayback' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsLinkPreview:'>
<arg declared_type='BOOL' index='0' name='allowsLinkPreview' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsPictureInPictureMediaPlayback:'>
<arg declared_type='BOOL' index='0' name='allowsPictureInPictureMediaPlayback' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataDetectorTypes:'>
<arg declared_type='UIDataDetectorTypes' index='0' name='dataDetectorTypes' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetectsPhoneNumbers:'>
<arg declared_type='BOOL' index='0' name='detectsPhoneNumbers' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGapBetweenPages:'>
<arg declared_type='CGFloat' index='0' name='gapBetweenPages' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyboardDisplayRequiresUserAction:'>
<arg declared_type='BOOL' index='0' name='keyboardDisplayRequiresUserAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMediaPlaybackAllowsAirPlay:'>
<arg declared_type='BOOL' index='0' name='mediaPlaybackAllowsAirPlay' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMediaPlaybackRequiresUserAction:'>
<arg declared_type='BOOL' index='0' name='mediaPlaybackRequiresUserAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPageLength:'>
<arg declared_type='CGFloat' index='0' name='pageLength' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaginationBreakingMode:'>
<arg declared_type='UIWebPaginationBreakingMode' index='0' name='paginationBreakingMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaginationMode:'>
<arg declared_type='UIWebPaginationMode' index='0' name='paginationMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScalesPageToFit:'>
<arg declared_type='BOOL' index='0' name='scalesPageToFit' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuppressesIncrementalRendering:'>
<arg declared_type='BOOL' index='0' name='suppressesIncrementalRendering' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopLoading'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringByEvaluatingJavaScriptFromString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='script' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='suppressesIncrementalRendering'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIWindow'>
<method selector='becomeKeyWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='convertPoint:fromWindow:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UIWindow * _Nullable' index='1' name='window' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toWindow:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UIWindow * _Nullable' index='1' name='window' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromWindow:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIWindow * _Nullable' index='1' name='window' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toWindow:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIWindow * _Nullable' index='1' name='window' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='isKeyWindow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='makeKeyAndVisible'>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeKeyWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resignKeyWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rootViewController'>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='screen'>
<retval declared_type='UIScreen * _Nonnull' type='@'/>
</method>
<method selector='sendEvent:'>
<arg declared_type='UIEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRootViewController:'>
<arg declared_type='UIViewController * _Nullable' index='0' name='rootViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScreen:'>
<arg declared_type='UIScreen * _Nonnull' index='0' name='screen' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWindowLevel:'>
<arg declared_type='UIWindowLevel' index='0' name='windowLevel' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowLevel'>
<retval declared_type='UIWindowLevel' type='f' type64='d'/>
</method>
</class>
<informal_protocol name='NSLayoutManagerDelegate'>
<method selector='layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:' type='{CGRect={CGPoint=ff}{CGSize=ff}}48@0:4@8I12@16{CGRect={CGPoint=ff}{CGSize=ff}}20{CGPoint=ff}36I44' type64='{CGRect={CGPoint=dd}{CGSize=dd}}96@0:8@16Q24@32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGPoint=dd}72Q88'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='textContainer' type='@'/>
<arg declared_type='CGRect' index='3' name='proposedRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGPoint' index='4' name='glyphPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='5' name='charIndex' type='I' type64='Q'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:' type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSTextContainer * _Nullable' index='1' name='textContainer' type='@'/>
<arg declared_type='BOOL' index='2' name='layoutFinishedFlag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:' type='f32@0:4@8I12{CGRect={CGPoint=ff}{CGSize=ff}}16' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='CGRect' index='2' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:' type='f32@0:4@8I12{CGRect={CGPoint=ff}{CGSize=ff}}16' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='CGRect' index='2' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:' type='f32@0:4@8I12{CGRect={CGPoint=ff}{CGSize=ff}}16' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='CGRect' index='2' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:' type='B16@0:4@8I12' type64='B32@0:8@16Q24'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:' type='B16@0:4@8I12' type64='B32@0:8@16Q24'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:' type='I36@0:4@8r^S12r^i16r^I20@24{_NSRange=II}28' type64='Q72@0:8@16r^S24r^q32r^Q40@48{_NSRange=QQ}56'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg const='true' declared_type='CGGlyph * _Nonnull' index='1' name='glyphs' type='^S'/>
<arg const='true' declared_type='NSGlyphProperty * _Nonnull' index='2' name='props' type='^i' type64='^q'/>
<arg const='true' declared_type='NSUInteger * _Nonnull' index='3' name='charIndexes' type='^I' type64='^Q'/>
<arg declared_type='UIFont * _Nonnull' index='4' name='aFont' type='@'/>
<arg declared_type='NSRange' index='5' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:' type='B36@0:4@8N^{CGRect={CGPoint=ff}{CGSize=ff}}12N^{CGRect={CGPoint=ff}{CGSize=ff}}16N^f20@24{_NSRange=II}28' type64='B72@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^{CGRect={CGPoint=dd}{CGSize=dd}}32N^d40@48{_NSRange=QQ}56'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='CGRect * _Nonnull' index='1' name='lineFragmentRect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGRect * _Nonnull' index='2' name='lineFragmentUsedRect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat * _Nonnull' index='3' name='baselineOffset' type='^f' type64='^d'/>
<arg declared_type='NSTextContainer * _Nonnull' index='4' name='textContainer' type='@'/>
<arg declared_type='NSRange' index='5' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldUseAction:forControlCharacterAtIndex:' type='i20@0:4@8i12I16' type64='q40@0:8@16q24Q32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSControlCharacterAction' index='1' name='action' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSControlCharacterAction' type='i' type64='q'/>
</method>
<method selector='layoutManager:textContainer:didChangeGeometryFromSize:' type='v24@0:4@8@12{CGSize=ff}16' type64='v48@0:8@16@24{CGSize=dd}32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='textContainer' type='@'/>
<arg declared_type='CGSize' index='2' name='oldSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutManagerDidInvalidateLayout:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextAttachmentContainer'>
<method selector='attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:' type='{CGRect={CGPoint=ff}{CGSize=ff}}40@0:4@8{CGRect={CGPoint=ff}{CGSize=ff}}12{CGPoint=ff}28I36' type64='{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGPoint=dd}56Q72'>
<arg declared_type='NSTextContainer * _Nullable' index='0' name='textContainer' type='@'/>
<arg declared_type='CGRect' index='1' name='lineFrag' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGPoint' index='2' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageForBounds:textContainer:characterIndex:' type='@32@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8@24I28' type64='@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56'>
<arg declared_type='CGRect' index='0' name='imageBounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nullable' index='1' name='textContainer' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextLayoutOrientationProvider'>
<method selector='layoutOrientation' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSTextLayoutOrientation' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextStorageDelegate'>
<method selector='textStorage:didProcessEditing:range:changeInLength:' type='v28@0:4@8I12{_NSRange=II}16i24' type64='v56@0:8@16Q24{_NSRange=QQ}32q48'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='textStorage' type='@'/>
<arg declared_type='NSTextStorageEditActions' index='1' name='editedMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='editedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='3' name='delta' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textStorage:willProcessEditing:range:changeInLength:' type='v28@0:4@8I12{_NSRange=II}16i24' type64='v56@0:8@16Q24{_NSRange=QQ}32q48'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='textStorage' type='@'/>
<arg declared_type='NSTextStorageEditActions' index='1' name='editedMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='editedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='3' name='delta' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccelerometerDelegate'>
<method selector='accelerometer:didAccelerate:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIAccelerometer * _Nonnull' index='0' name='accelerometer' type='@'/>
<arg declared_type='UIAcceleration * _Nonnull' index='1' name='acceleration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibility'>
<method selector='accessibilityActivationPoint' type='{CGPoint=ff}8@0:4' type64='{CGPoint=dd}16@0:8'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityAttributedHint' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributedLabel' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributedValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityElementsHidden' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityHint' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityLabel' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityLanguage' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityNavigationStyle' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UIAccessibilityNavigationStyle' type='i' type64='q'/>
</method>
<method selector='accessibilityPath' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIBezierPath * _Nullable' type='@'/>
</method>
<method selector='accessibilityTraits' type='Q8@0:4' type64='Q16@0:8'>
<retval declared_type='UIAccessibilityTraits' type='Q'/>
</method>
<method selector='accessibilityValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityViewIsModal' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityElement' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAccessibilityActivationPoint:' type='v16@0:4{CGPoint=ff}8' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type='CGPoint' index='0' name='accessibilityActivationPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityAttributedHint:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='accessibilityAttributedHint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityAttributedLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='accessibilityAttributedLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityAttributedValue:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='accessibilityAttributedValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityElementsHidden:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityElementsHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFrame:' type='v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8' type64='v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16'>
<arg declared_type='CGRect' index='0' name='accessibilityFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHint:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityHint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLanguage:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityLanguage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityNavigationStyle:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UIAccessibilityNavigationStyle' index='0' name='accessibilityNavigationStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityPath:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIBezierPath * _Nullable' index='0' name='accessibilityPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityTraits:' type='v16@0:4Q8' type64='v24@0:8Q16'>
<arg declared_type='UIAccessibilityTraits' index='0' name='accessibilityTraits' type='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityValue:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityViewIsModal:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityViewIsModal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsAccessibilityElement:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='isAccessibilityElement' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldGroupAccessibilityChildren:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='shouldGroupAccessibilityChildren' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldGroupAccessibilityChildren' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityAction'>
<method selector='accessibilityActivate' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityCustomActions' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityDecrement' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityIncrement' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityPerformEscape' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformMagicTap' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityScroll:' type='B12@0:4i8' type64='B24@0:8q16'>
<arg declared_type='UIAccessibilityScrollDirection' index='0' name='direction' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAccessibilityCustomActions:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityCustomActions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityContainer'>
<method selector='accessibilityContainerType' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UIAccessibilityContainerType' type='i' type64='q'/>
</method>
<method selector='accessibilityElementAtIndex:' type='@12@0:4i8' type64='@24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityElementCount' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityElements' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='indexOfAccessibilityElement:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='element' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAccessibilityContainerType:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UIAccessibilityContainerType' index='0' name='accessibilityContainerType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityElements:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityContainerDataTable'>
<method selector='accessibilityColumnCount' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='accessibilityDataTableCellElementForRow:column:' type='@16@0:4I8I12' type64='@32@0:8Q16Q24'>
<arg declared_type='NSUInteger' index='0' name='row' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='column' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityHeaderElementsForColumn:' type='@12@0:4I8' type64='@24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='column' type='I' type64='Q'/>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='accessibilityHeaderElementsForRow:' type='@12@0:4I8' type64='@24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='row' type='I' type64='Q'/>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='accessibilityRowCount' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityContainerDataTableCell'>
<method selector='accessibilityColumnRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRowRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityContentSizeCategoryImageAdjusting'>
<method selector='adjustsImageSizeForAccessibilityContentSizeCategory' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAdjustsImageSizeForAccessibilityContentSizeCategory:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='adjustsImageSizeForAccessibilityContentSizeCategory' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityCustomRotor'>
<method selector='accessibilityCustomRotors' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setAccessibilityCustomRotors:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityCustomRotors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityDragging'>
<method selector='accessibilityDragSourceDescriptors' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityDropPointDescriptors' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setAccessibilityDragSourceDescriptors:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityDragSourceDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDropPointDescriptors:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityDropPointDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityFocus'>
<method selector='accessibilityAssistiveTechnologyFocusedIdentifiers' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method selector='accessibilityElementDidBecomeFocused' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityElementDidLoseFocus' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityElementIsFocused' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityIdentification'>
<method selector='accessibilityIdentifier' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setAccessibilityIdentifier:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityReadingContent'>
<method selector='accessibilityAttributedContentForLineNumber:' type='@12@0:4i8' type64='@24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='lineNumber' type='i' type64='q'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributedPageContent' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityContentForLineNumber:' type='@12@0:4i8' type64='@24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='lineNumber' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityFrameForLineNumber:' type='{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4i8' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='lineNumber' type='i' type64='q'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityLineNumberForPoint:' type='i16@0:4{CGPoint=ff}8' type64='q32@0:8{CGPoint=dd}16'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityPageContent' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIActionSheetDelegate'>
<method selector='actionSheet:clickedButtonAtIndex:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='actionSheet:didDismissWithButtonIndex:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='actionSheet:willDismissWithButtonIndex:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='actionSheetCancel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didPresentActionSheet:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willPresentActionSheet:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIActionSheet * _Nonnull' index='0' name='actionSheet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIActivityItemSource'>
<method selector='activityViewController:dataTypeIdentifierForActivityType:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type='@'/>
<arg declared_type='UIActivityType _Nullable' index='1' name='activityType' type='@'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='activityViewController:itemForActivityType:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type='@'/>
<arg declared_type='UIActivityType _Nullable' index='1' name='activityType' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='activityViewController:subjectForActivityType:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type='@'/>
<arg declared_type='UIActivityType _Nullable' index='1' name='activityType' type='@'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='activityViewController:thumbnailImageForActivityType:suggestedSize:' type='@24@0:4@8@12{CGSize=ff}16' type64='@48@0:8@16@24{CGSize=dd}32'>
<arg declared_type='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type='@'/>
<arg declared_type='UIActivityType _Nullable' index='1' name='activityType' type='@'/>
<arg declared_type='CGSize' index='2' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='activityViewControllerPlaceholderItem:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIAdaptivePresentationControllerDelegate'>
<method selector='adaptivePresentationStyleForPresentationController:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='UIPresentationController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='UIModalPresentationStyle' type='i' type64='q'/>
</method>
<method selector='adaptivePresentationStyleForPresentationController:traitCollection:' type='i16@0:4@8@12' type64='q32@0:8@16@24'>
<arg declared_type='UIPresentationController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITraitCollection * _Nonnull' index='1' name='traitCollection' type='@'/>
<retval declared_type='UIModalPresentationStyle' type='i' type64='q'/>
</method>
<method selector='presentationController:viewControllerForAdaptivePresentationStyle:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UIPresentationController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UIModalPresentationStyle' index='1' name='style' type='i' type64='q'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:' type='v20@0:4@8i12@16' type64='v40@0:8@16q24@32'>
<arg declared_type='UIPresentationController * _Nonnull' index='0' name='presentationController' type='@'/>
<arg declared_type='UIModalPresentationStyle' index='1' name='style' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='2' name='transitionCoordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAlertViewDelegate'>
<method selector='alertView:clickedButtonAtIndex:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alertView:didDismissWithButtonIndex:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alertView:willDismissWithButtonIndex:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<arg declared_type='NSInteger' index='1' name='buttonIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alertViewCancel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alertViewShouldEnableFirstOtherButton:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='didPresentAlertView:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willPresentAlertView:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIAlertView * _Nonnull' index='0' name='alertView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAppearance'>
<method class_method='true' selector='appearance' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='appearanceForTraitCollection:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='trait' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='appearanceForTraitCollection:whenContainedIn:' sentinel='0' type='@16@0:4@8#12' type64='@32@0:8@16#24' variadic='true'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='trait' type='@'/>
<arg declared_type='Class _Nullable' index='1' name='ContainerClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='appearanceForTraitCollection:whenContainedInInstancesOfClasses:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='trait' type='@'/>
<arg declared_type='NSArray&gt; * _Nonnull' index='1' name='containerTypes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='appearanceWhenContainedIn:' sentinel='0' type='@12@0:4#8' type64='@24@0:8#16' variadic='true'>
<arg declared_type='Class _Nullable' index='0' name='ContainerClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='appearanceWhenContainedInInstancesOfClasses:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='containerTypes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIApplicationDelegate'>
<method selector='application:continueUserActivity:restorationHandler:' type='B20@0:4@8@12@?16' type64='B40@0:8@16@24@?32'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSUserActivity * _Nonnull' index='1' name='userActivity' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSArray&gt; * _Nullable)' function_pointer='true' index='2' name='restorationHandler' type='@?'>
<arg declared_type='NSArray&gt; * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:didChangeStatusBarFrame:' type='v28@0:4@8{CGRect={CGPoint=ff}{CGSize=ff}}12' type64='v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='CGRect' index='1' name='oldStatusBarFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didChangeStatusBarOrientation:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIInterfaceOrientation' index='1' name='oldStatusBarOrientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didDecodeRestorableStateWithCoder:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didFailToContinueUserActivityWithType:error:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='userActivityType' type='@'/>
<arg declared_type='NSError * _Nonnull' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didFailToRegisterForRemoteNotificationsWithError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didFinishLaunchingWithOptions:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='launchOptions' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:didReceiveLocalNotification:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UILocalNotification * _Nonnull' index='1' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didReceiveRemoteNotification:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didReceiveRemoteNotification:fetchCompletionHandler:' type='v20@0:4@8@12@?16' type64='v40@0:8@16@24@?32'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='userInfo' type='@'/>
<arg declared_type='void (^ _Nonnull)(UIBackgroundFetchResult)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='UIBackgroundFetchResult' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didRegisterForRemoteNotificationsWithDeviceToken:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSData * _Nonnull' index='1' name='deviceToken' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didRegisterUserNotificationSettings:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIUserNotificationSettings * _Nonnull' index='1' name='notificationSettings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didUpdateUserActivity:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSUserActivity * _Nonnull' index='1' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleActionWithIdentifier:forLocalNotification:completionHandler:' type='v24@0:4@8@12@16@?20' type64='v48@0:8@16@24@32@?40'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='identifier' type='@'/>
<arg declared_type='UILocalNotification * _Nonnull' index='2' name='notification' type='@'/>
<arg declared_type='void (^ _Nonnull)()' function_pointer='true' index='3' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:' type='v28@0:4@8@12@16@20@?24' type64='v56@0:8@16@24@32@40@?48'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='identifier' type='@'/>
<arg declared_type='UILocalNotification * _Nonnull' index='2' name='notification' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='responseInfo' type='@'/>
<arg declared_type='void (^ _Nonnull)()' function_pointer='true' index='4' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleActionWithIdentifier:forRemoteNotification:completionHandler:' type='v24@0:4@8@12@16@?20' type64='v48@0:8@16@24@32@?40'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='identifier' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='userInfo' type='@'/>
<arg declared_type='void (^ _Nonnull)()' function_pointer='true' index='3' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:' type='v28@0:4@8@12@16@20@?24' type64='v56@0:8@16@24@32@40@?48'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='identifier' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='userInfo' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='responseInfo' type='@'/>
<arg declared_type='void (^ _Nonnull)()' function_pointer='true' index='4' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleEventsForBackgroundURLSession:completionHandler:' type='v20@0:4@8@12@?16' type64='v40@0:8@16@24@?32'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='identifier' type='@'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleIntent:completionHandler:' type='v20@0:4@8@12@?16' type64='v40@0:8@16@24@?32'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='INIntent * _Nonnull' index='1' name='intent' type='@'/>
<arg declared_type='void (^ _Nonnull)(INIntentResponse * _Nonnull)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='INIntentResponse * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:handleOpenURL:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:handleWatchKitExtensionRequest:reply:' type='v20@0:4@8@12@?16' type64='v40@0:8@16@24@?32'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='userInfo' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSDictionary * _Nullable)' function_pointer='true' index='2' name='reply' type='@?'>
<arg declared_type='NSDictionary * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:openURL:options:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='app' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='options' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:openURL:sourceApplication:annotation:' type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='sourceApplication' type='@'/>
<arg declared_type='id _Nonnull' index='3' name='annotation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:performActionForShortcutItem:completionHandler:' type='v20@0:4@8@12@?16' type64='v40@0:8@16@24@?32'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIApplicationShortcutItem * _Nonnull' index='1' name='shortcutItem' type='@'/>
<arg declared_type='void (^ _Nonnull)(BOOL)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:performFetchWithCompletionHandler:' type='v16@0:4@8@?12' type64='v32@0:8@16@?24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='void (^ _Nonnull)(UIBackgroundFetchResult)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='UIBackgroundFetchResult' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:shouldAllowExtensionPointIdentifier:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIApplicationExtensionPointIdentifier _Nonnull' index='1' name='extensionPointIdentifier' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:shouldRestoreApplicationState:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:shouldSaveApplicationState:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:supportedInterfaceOrientationsForWindow:' type='I16@0:4@8@12' type64='Q32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIWindow * _Nullable' index='1' name='window' type='@'/>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
<method selector='application:userDidAcceptCloudKitShareWithMetadata:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='CKShareMetadata * _Nonnull' index='1' name='cloudKitShareMetadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:viewControllerWithRestorationIdentifierPath:coder:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='identifierComponents' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='2' name='coder' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='application:willChangeStatusBarFrame:' type='v28@0:4@8{CGRect={CGPoint=ff}{CGSize=ff}}12' type64='v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='CGRect' index='1' name='newStatusBarFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:willChangeStatusBarOrientation:duration:' type='v24@0:4@8i12d16' type64='v40@0:8@16q24d32'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='UIInterfaceOrientation' index='1' name='newStatusBarOrientation' type='i' type64='q'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:willContinueUserActivityWithType:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='userActivityType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:willEncodeRestorableStateWithCoder:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:willFinishLaunchingWithOptions:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='launchOptions' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationDidBecomeActive:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidEnterBackground:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidFinishLaunching:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidReceiveMemoryWarning:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationProtectedDataDidBecomeAvailable:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationProtectedDataWillBecomeUnavailable:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationShouldRequestHealthAuthorization:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationSignificantTimeChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillEnterForeground:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillResignActive:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillTerminate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIApplication * _Nonnull' index='0' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWindow:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIWindow * _Nullable' index='0' name='window' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIWindow * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIBarPositioning'>
<method selector='barPosition' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UIBarPosition' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UIBarPositioningDelegate'>
<method selector='positionForBar:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='bar' type='@'/>
<retval declared_type='UIBarPosition' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UICloudSharingControllerDelegate'>
<method selector='cloudSharingController:failedToSaveShareWithError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cloudSharingControllerDidSaveShare:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cloudSharingControllerDidStopSharing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='itemThumbnailDataForCloudSharingController:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='itemTitleForCloudSharingController:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='itemTypeForCloudSharingController:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UICloudSharingController * _Nonnull' index='0' name='csc' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDataSource'>
<method selector='collectionView:canMoveItemAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:cellForItemAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='__kindof UICollectionViewCell * _Nonnull' type='@'/>
</method>
<method selector='collectionView:indexPathForIndexTitle:atIndex:' type='@20@0:4@8@12i16' type64='@40@0:8@16@24q32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='title' type='@'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<retval declared_type='NSIndexPath * _Nonnull' type='@'/>
</method>
<method selector='collectionView:moveItemAtIndexPath:toIndexPath:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='destinationIndexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:numberOfItemsInSection:' type='i16@0:4@8i12' type64='q32@0:8@16q24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='collectionView:viewForSupplementaryElementOfKind:atIndexPath:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='kind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='UICollectionReusableView * _Nonnull' type='@'/>
</method>
<method selector='indexTitlesForCollectionView:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='numberOfSectionsInCollectionView:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDataSourcePrefetching'>
<method selector='collectionView:cancelPrefetchingForItemsAtIndexPaths:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:prefetchItemsAtIndexPaths:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDelegate'>
<method selector='collectionView:canFocusItemAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:canPerformAction:forItemAtIndexPath:withSender:' type='B24@0:4@8:12@16@20' type64='B48@0:8@16:24@32@40'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='id _Nullable' index='3' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:didDeselectItemAtIndexPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didEndDisplayingCell:forItemAtIndexPath:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionReusableView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='3' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didHighlightItemAtIndexPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didSelectItemAtIndexPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didUnhighlightItemAtIndexPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didUpdateFocusInContext:withAnimationCoordinator:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewFocusUpdateContext * _Nonnull' index='1' name='context' type='@'/>
<arg declared_type='UIFocusAnimationCoordinator * _Nonnull' index='2' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:performAction:forItemAtIndexPath:withSender:' type='v24@0:4@8:12@16@20' type64='v48@0:8@16:24@32@40'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='id _Nullable' index='3' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:shouldDeselectItemAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:shouldHighlightItemAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:shouldSelectItemAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:shouldShowMenuForItemAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:shouldSpringLoadItemAtIndexPath:withContext:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:shouldUpdateFocusInContext:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewFocusUpdateContext * _Nonnull' index='1' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:targetContentOffsetForProposedContentOffset:' type='{CGPoint=ff}20@0:4@8{CGPoint=ff}12' type64='{CGPoint=dd}40@0:8@16{CGPoint=dd}24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='CGPoint' index='1' name='proposedContentOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='originalIndexPath' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='proposedIndexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nonnull' type='@'/>
</method>
<method selector='collectionView:transitionLayoutForOldLayout:newLayout:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='fromLayout' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='2' name='toLayout' type='@'/>
<retval declared_type='UICollectionViewTransitionLayout * _Nonnull' type='@'/>
</method>
<method selector='collectionView:willDisplayCell:forItemAtIndexPath:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionReusableView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='3' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='indexPathForPreferredFocusedViewInCollectionView:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDelegateFlowLayout'>
<method selector='collectionView:layout:insetForSectionAtIndex:' type='{UIEdgeInsets=ffff}20@0:4@8@12i16' type64='{UIEdgeInsets=dddd}40@0:8@16@24q32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='collectionView:layout:minimumInteritemSpacingForSectionAtIndex:' type='f20@0:4@8@12i16' type64='d40@0:8@16@24q32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='collectionView:layout:minimumLineSpacingForSectionAtIndex:' type='f20@0:4@8@12i16' type64='d40@0:8@16@24q32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='collectionView:layout:referenceSizeForFooterInSection:' type='{CGSize=ff}20@0:4@8@12i16' type64='{CGSize=dd}40@0:8@16@24q32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:referenceSizeForHeaderInSection:' type='{CGSize=ff}20@0:4@8@12i16' type64='{CGSize=dd}40@0:8@16@24q32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:sizeForItemAtIndexPath:' type='{CGSize=ff}20@0:4@8@12@16' type64='{CGSize=dd}40@0:8@16@24@32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDragDelegate'>
<method selector='collectionView:dragPreviewParametersForItemAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</method>
<method selector='collectionView:dragSessionAllowsMoveOperation:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:dragSessionDidEnd:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:dragSessionIsRestrictedToDraggingApplication:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:dragSessionWillBegin:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:itemsForAddingToDragSession:atIndexPath:point:' type='@28@0:4@8@12@16{CGPoint=ff}20' type64='@56@0:8@16@24@32{CGPoint=dd}40'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='CGPoint' index='3' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='collectionView:itemsForBeginningDragSession:atIndexPath:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDropCoordinator'>
<method selector='destinationIndexPath' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='dropItem:intoItemAtIndexPath:rect:' type='@32@0:4@8@12{CGRect={CGPoint=ff}{CGSize=ff}}16' type64='@64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<arg declared_type='CGRect' index='2' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropItem:toItemAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropItem:toPlaceholder:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='UITableViewDropPlaceholder * _Nonnull' index='1' name='placeholder' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropItem:toTarget:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='UIDragPreviewTarget * _Nonnull' index='1' name='target' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='items' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='proposal' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITableViewDropProposal * _Nonnull' type='@'/>
</method>
<method selector='session' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDropDelegate'>
<method selector='collectionView:canHandleDropSession:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:dropPreviewParametersForItemAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</method>
<method selector='collectionView:dropSessionDidEnd:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:dropSessionDidEnter:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:dropSessionDidExit:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:dropSessionDidUpdate:withDestinationIndexPath:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nullable' index='2' name='destinationIndexPath' type='@'/>
<retval declared_type='UICollectionViewDropProposal * _Nonnull' type='@'/>
</method>
<method selector='collectionView:performDropWithCoordinator:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UICollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDropItem'>
<method selector='dragItem' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIDragItem * _Nonnull' type='@'/>
</method>
<method selector='previewSize' type='{CGSize=ff}8@0:4' type64='{CGSize=dd}16@0:8'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sourceIndexPath' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDropPlaceholderContext'>
<method selector='commitInsertionWithDataSourceUpdates:' type='B12@0:4@?8' type64='B24@0:8@?16'>
<arg declared_type='void (^ _Nonnull)(NSIndexPath * _Nonnull)' function_pointer='true' index='0' name='dataSourceUpdates' type='@?'>
<arg declared_type='NSIndexPath * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='deletePlaceholder' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dragItem' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIDragItem * _Nonnull' type='@'/>
</method>
<method selector='setNeedsCellUpdate' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UICollisionBehaviorDelegate'>
<method selector='collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:' type='v28@0:4@8@12@16{CGPoint=ff}20' type64='v56@0:8@16@24@32{CGPoint=dd}40'>
<arg declared_type='UICollisionBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nullable' index='2' name='identifier' type='@'/>
<arg declared_type='CGPoint' index='3' name='p' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collisionBehavior:beganContactForItem:withItem:atPoint:' type='v28@0:4@8@12@16{CGPoint=ff}20' type64='v56@0:8@16@24@32{CGPoint=dd}40'>
<arg declared_type='UICollisionBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item1' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item2' type='@'/>
<arg declared_type='CGPoint' index='3' name='p' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collisionBehavior:endedContactForItem:withBoundaryIdentifier:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UICollisionBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nullable' index='2' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collisionBehavior:endedContactForItem:withItem:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UICollisionBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item1' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIContentContainer'>
<method selector='preferredContentSize' type='{CGSize=ff}8@0:4' type64='{CGSize=dd}16@0:8'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='preferredContentSizeDidChangeForChildContentContainer:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeForChildContentContainer:withParentContainerSize:' type='{CGSize=ff}20@0:4@8{CGSize=ff}12' type64='{CGSize=dd}40@0:8@16{CGSize=dd}24'>
<arg declared_type='id _Nonnull' index='0' name='container' type='@'/>
<arg declared_type='CGSize' index='1' name='parentSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='systemLayoutFittingSizeDidChangeForChildContentContainer:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillTransitionToSize:withTransitionCoordinator:' type='v20@0:4{CGSize=ff}8@16' type64='v40@0:8{CGSize=dd}16@32'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='id _Nonnull' index='1' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willTransitionToTraitCollection:withTransitionCoordinator:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITraitCollection * _Nonnull' index='0' name='newCollection' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIContentSizeCategoryAdjusting'>
<method selector='adjustsFontForContentSizeCategory' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAdjustsFontForContentSizeCategory:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='adjustsFontForContentSizeCategory' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UICoordinateSpace'>
<method selector='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertPoint:fromCoordinateSpace:' type='{CGPoint=ff}20@0:4{CGPoint=ff}8@16' type64='{CGPoint=dd}40@0:8{CGPoint=dd}16@32'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='id _Nonnull' index='1' name='coordinateSpace' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toCoordinateSpace:' type='{CGPoint=ff}20@0:4{CGPoint=ff}8@16' type64='{CGPoint=dd}40@0:8{CGPoint=dd}16@32'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='id _Nonnull' index='1' name='coordinateSpace' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromCoordinateSpace:' type='{CGRect={CGPoint=ff}{CGSize=ff}}28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8@24' type64='{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='id _Nonnull' index='1' name='coordinateSpace' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toCoordinateSpace:' type='{CGRect={CGPoint=ff}{CGSize=ff}}28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8@24' type64='{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='id _Nonnull' index='1' name='coordinateSpace' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</informal_protocol>
<informal_protocol name='UIDataSourceModelAssociation'>
<method selector='indexPathForElementWithModelIdentifier:inView:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='modelIdentifierForElementAtIndexPath:inView:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='idx' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIDataSourceTranslating'>
<method selector='dataSourceIndexPathForPresentationIndexPath:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSIndexPath * _Nullable' index='0' name='presentationIndexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='dataSourceSectionIndexForPresentationSectionIndex:' type='i12@0:4i8' type64='q24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='presentationSectionIndex' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='performUsingPresentationValues:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='actionsToTranslate' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentationIndexPathForDataSourceIndexPath:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSIndexPath * _Nullable' index='0' name='dataSourceIndexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='presentationSectionIndexForDataSourceSectionIndex:' type='i12@0:4i8' type64='q24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='dataSourceSectionIndex' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UIDocumentBrowserViewControllerDelegate'>
<method selector='documentBrowser:applicationActivitiesForDocumentURLs:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='documentURLs' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='documentBrowser:didImportDocumentAtURL:toDestinationURL:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='sourceURL' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='2' name='destinationURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentBrowser:didPickDocumentURLs:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='documentURLs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentBrowser:didPickDocumentsAtURLs:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='documentURLs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentBrowser:didRequestDocumentCreationWithHandler:' type='v16@0:4@8@?12' type64='v32@0:8@16@?24'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSURL * _Nullable, UIDocumentBrowserImportMode)' function_pointer='true' index='1' name='importHandler' type='@?'>
<arg declared_type='NSURL * _Nullable' type='@'/>
<arg declared_type='UIDocumentBrowserImportMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentBrowser:failedToImportDocumentAtURL:error:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='documentURL' type='@'/>
<arg declared_type='NSError * _Nullable' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentBrowser:willPresentActivityViewController:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDocumentBrowserViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UIActivityViewController * _Nonnull' index='1' name='activityViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIDocumentInteractionControllerDelegate'>
<method selector='documentInteractionController:canPerformAction:' type='B16@0:4@8:12' type64='B32@0:8@16:24'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='action' type=':'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='documentInteractionController:didEndSendingToApplication:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionController:performAction:' type='B16@0:4@8:12' type64='B32@0:8@16:24'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='action' type=':'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='documentInteractionController:willBeginSendingToApplication:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='application' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerDidDismissOpenInMenu:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerDidDismissOptionsMenu:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerDidEndPreview:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerRectForPreview:' type='{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4@8' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='documentInteractionControllerViewControllerForPreview:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='UIViewController * _Nonnull' type='@'/>
</method>
<method selector='documentInteractionControllerViewForPreview:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='documentInteractionControllerWillBeginPreview:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerWillPresentOpenInMenu:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentInteractionControllerWillPresentOptionsMenu:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIDocumentInteractionController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIDocumentMenuDelegate'>
<method selector='documentMenu:didPickDocumentPicker:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDocumentMenuViewController * _Nonnull' index='0' name='documentMenu' type='@'/>
<arg declared_type='UIDocumentPickerViewController * _Nonnull' index='1' name='documentPicker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentMenuWasCancelled:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIDocumentMenuViewController * _Nonnull' index='0' name='documentMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIDocumentPickerDelegate'>
<method selector='documentPicker:didPickDocumentAtURL:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDocumentPickerViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentPicker:didPickDocumentsAtURLs:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDocumentPickerViewController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='urls' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentPickerWasCancelled:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIDocumentPickerViewController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIDragAnimating'>
<method selector='addAnimations:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='animation' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addCompletion:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='void (^ _Nonnull)(UIViewAnimatingPosition)' function_pointer='true' index='0' name='completion' type='@?'>
<arg declared_type='UIViewAnimatingPosition' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIDragDropSession'>
<method selector='allowsMoveOperation' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canLoadObjectsOfClass:' type='B12@0:4#8' type64='B24@0:8#16'>
<arg declared_type='Class _Nonnull' index='0' name='aClass' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasItemsConformingToTypeIdentifiers:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSArray * _Nonnull' index='0' name='typeIdentifiers' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRestrictedToDraggingApplication' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='items' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='locationInView:' type='{CGPoint=ff}12@0:4@8' type64='{CGPoint=dd}24@0:8@16'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='UIDragInteractionDelegate'>
<method selector='dragInteraction:item:willAnimateCancelWithAnimator:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='animator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:itemsForAddingToSession:withTouchAtPoint:' type='@24@0:4@8@12{CGPoint=ff}16' type64='@48@0:8@16@24{CGPoint=dd}32'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='CGPoint' index='2' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='dragInteraction:itemsForBeginningSession:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='dragInteraction:prefersFullSizePreviewsForSession:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dragInteraction:previewForCancellingItem:withDefault:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='UITargetedDragPreview * _Nonnull' index='2' name='defaultPreview' type='@'/>
<retval declared_type='UITargetedDragPreview * _Nullable' type='@'/>
</method>
<method selector='dragInteraction:previewForLiftingItem:session:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='session' type='@'/>
<retval declared_type='UITargetedDragPreview * _Nullable' type='@'/>
</method>
<method selector='dragInteraction:session:didEndWithOperation:' type='v20@0:4@8@12I16' type64='v40@0:8@16@24Q32'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='UIDropOperation' index='2' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:session:willAddItems:forInteraction:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='items' type='@'/>
<arg declared_type='UIDragInteraction * _Nonnull' index='3' name='addingInteraction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:session:willEndWithOperation:' type='v20@0:4@8@12I16' type64='v40@0:8@16@24Q32'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='UIDropOperation' index='2' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:sessionAllowsMoveOperation:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dragInteraction:sessionDidMove:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:sessionDidTransferItems:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:sessionForAddingItems:withTouchAtPoint:' type='@24@0:4@8@12{CGPoint=ff}16' type64='@48@0:8@16@24{CGPoint=dd}32'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='NSArray&gt; * _Nonnull' index='1' name='sessions' type='@'/>
<arg declared_type='CGPoint' index='2' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dragInteraction:sessionIsRestrictedToDraggingApplication:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dragInteraction:sessionWillBegin:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInteraction:willAnimateLiftWithAnimator:session:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UIDragInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='animator' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIDragSession'>
<method selector='localContext' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setLocalContext:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='localContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIDropInteractionDelegate'>
<method selector='dropInteraction:canHandleSession:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dropInteraction:concludeDrop:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:item:willAnimateDropWithAnimator:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='animator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:performDrop:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:previewForDroppingItem:withDefault:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='UITargetedDragPreview * _Nonnull' index='2' name='defaultPreview' type='@'/>
<retval declared_type='UITargetedDragPreview * _Nullable' type='@'/>
</method>
<method selector='dropInteraction:sessionDidEnd:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:sessionDidEnter:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:sessionDidExit:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropInteraction:sessionDidUpdate:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIDropInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='UIDropProposal * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIDropSession'>
<method selector='loadObjectsOfClass:completion:' type='@16@0:4#8@?12' type64='@32@0:8#16@?24'>
<arg declared_type='Class _Nonnull' index='0' name='aClass' type='#'/>
<arg declared_type='void (^ _Nonnull)(NSArray&gt; * _Nonnull)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='NSArray&gt; * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSProgress * _Nonnull' type='@'/>
</method>
<method selector='localDragSession' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='progressIndicatorStyle' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='UIDropSessionProgressIndicatorStyle' type='I' type64='Q'/>
</method>
<method selector='setProgressIndicatorStyle:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='UIDropSessionProgressIndicatorStyle' index='0' name='progressIndicatorStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIDynamicAnimatorDelegate'>
<method selector='dynamicAnimatorDidPause:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIDynamicAnimator * _Nonnull' index='0' name='animator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dynamicAnimatorWillResume:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIDynamicAnimator * _Nonnull' index='0' name='animator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIDynamicItem'>
<method selector='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='center' type='{CGPoint=ff}8@0:4' type64='{CGPoint=dd}16@0:8'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='collisionBoundingPath' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIBezierPath * _Nonnull' type='@'/>
</method>
<method selector='collisionBoundsType' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='UIDynamicItemCollisionBoundsType' type='I' type64='Q'/>
</method>
<method selector='setCenter:' type='v16@0:4{CGPoint=ff}8' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type='CGPoint' index='0' name='center' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:' type='v32@0:4{CGAffineTransform=ffffff}8' type64='v64@0:8{CGAffineTransform=dddddd}16'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transform' type='{CGAffineTransform=ffffff}8@0:4' type64='{CGAffineTransform=dddddd}16@0:8'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
</informal_protocol>
<informal_protocol name='UIFocusAnimationContext'>
<method selector='duration' type='d8@0:4' type64='d16@0:8'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
</informal_protocol>
<informal_protocol name='UIFocusEnvironment'>
<method selector='didUpdateFocusInContext:withAnimationCoordinator:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIFocusUpdateContext * _Nonnull' index='0' name='context' type='@'/>
<arg declared_type='UIFocusAnimationCoordinator * _Nonnull' index='1' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='focusItemContainer' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='parentFocusEnvironment' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='preferredFocusEnvironments' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='preferredFocusedView' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='setNeedsFocusUpdate' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUpdateFocusInContext:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UIFocusUpdateContext * _Nonnull' index='0' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateFocusIfNeeded' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIFocusItem'>
<method selector='canBecomeFocused' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='didHintFocusMovement:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIFocusMovementHint * _Nonnull' index='0' name='hint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</informal_protocol>
<informal_protocol name='UIFocusItemContainer'>
<method selector='coordinateSpace' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='focusItemsInRect:' type='@24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8' type64='@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIFocusItemScrollableContainer'>
<method selector='contentOffset' type='{CGPoint=ff}8@0:4' type64='{CGPoint=dd}16@0:8'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='contentSize' type='{CGSize=ff}8@0:4' type64='{CGSize=dd}16@0:8'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='setContentOffset:' type='v16@0:4{CGPoint=ff}8' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type='CGPoint' index='0' name='contentOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='visibleSize' type='{CGSize=ff}8@0:4' type64='{CGSize=dd}16@0:8'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='UIGestureRecognizerDelegate'>
<method selector='gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldReceivePress:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='UIPress * _Nonnull' index='1' name='press' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldReceiveTouch:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='UITouch * _Nonnull' index='1' name='touch' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldRequireFailureOfGestureRecognizer:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizerShouldBegin:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIGuidedAccessRestrictionDelegate'>
<method selector='detailTextForGuidedAccessRestrictionWithIdentifier:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSString * _Nonnull' index='0' name='restrictionIdentifier' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='guidedAccessRestrictionIdentifiers' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='guidedAccessRestrictionWithIdentifier:didChangeState:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='NSString * _Nonnull' index='0' name='restrictionIdentifier' type='@'/>
<arg declared_type='UIGuidedAccessRestrictionState' index='1' name='newRestrictionState' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textForGuidedAccessRestrictionWithIdentifier:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSString * _Nonnull' index='0' name='restrictionIdentifier' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIImagePickerControllerDelegate'>
<method selector='imagePickerController:didFinishPickingImage:editingInfo:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UIImagePickerController * _Nonnull' index='0' name='picker' type='@'/>
<arg declared_type='UIImage * _Nonnull' index='1' name='image' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='editingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imagePickerController:didFinishPickingMediaWithInfo:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIImagePickerController * _Nonnull' index='0' name='picker' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='info' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imagePickerControllerDidCancel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIImagePickerController * _Nonnull' index='0' name='picker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIInputViewAudioFeedback'>
<method selector='enableInputClicksWhenVisible' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIInteraction'>
<method selector='didMoveToView:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='__kindof UIView * _Nullable' type='@'/>
</method>
<method selector='willMoveToView:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIItemProviderPresentationSizeProviding'>
<method selector='preferredPresentationSizeForItemProvider' type='{CGSize=ff}8@0:4' type64='{CGSize=dd}16@0:8'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='UIKeyInput'>
<method selector='deleteBackward' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasText' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='insertText:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nonnull' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UILayoutSupport'>
<method selector='bottomAnchor' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='heightAnchor' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
<method selector='length' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='topAnchor' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UINavigationBarDelegate'>
<method selector='navigationBar:didPopItem:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UINavigationBar * _Nonnull' index='0' name='navigationBar' type='@'/>
<arg declared_type='UINavigationItem * _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='navigationBar:didPushItem:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UINavigationBar * _Nonnull' index='0' name='navigationBar' type='@'/>
<arg declared_type='UINavigationItem * _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='navigationBar:shouldPopItem:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UINavigationBar * _Nonnull' index='0' name='navigationBar' type='@'/>
<arg declared_type='UINavigationItem * _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='navigationBar:shouldPushItem:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UINavigationBar * _Nonnull' index='0' name='navigationBar' type='@'/>
<arg declared_type='UINavigationItem * _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UINavigationControllerDelegate'>
<method selector='navigationController:animationControllerForOperation:fromViewController:toViewController:' type='@24@0:4@8i12@16@20' type64='@48@0:8@16q24@32@40'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<arg declared_type='UINavigationControllerOperation' index='1' name='operation' type='i' type64='q'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='fromVC' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='3' name='toVC' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='navigationController:didShowViewController:animated:' type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='navigationController:interactionControllerForAnimationController:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='animationController' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='navigationController:willShowViewController:animated:' type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='navigationControllerPreferredInterfaceOrientationForPresentation:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<retval declared_type='UIInterfaceOrientation' type='i' type64='q'/>
</method>
<method selector='navigationControllerSupportedInterfaceOrientations:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='UINavigationController * _Nonnull' index='0' name='navigationController' type='@'/>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='UINibLoadingAdditions'>
<method selector='awakeFromNib' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForInterfaceBuilder' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIObjectRestoration'>
<method class_method='true' selector='objectWithRestorationIdentifierPath:coder:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSArray * _Nonnull' index='0' name='identifierComponents' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIPageViewControllerDataSource'>
<method selector='pageViewController:viewControllerAfterViewController:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='pageViewController:viewControllerBeforeViewController:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='presentationCountForPageViewController:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='presentationIndexForPageViewController:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UIPageViewControllerDelegate'>
<method selector='pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:' type='v24@0:4@8B12@16B20' type64='v40@0:8@16B24@28B36'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<arg declared_type='BOOL' index='1' name='finished' type='B'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='previousViewControllers' type='@'/>
<arg declared_type='BOOL' index='3' name='completed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageViewController:spineLocationForInterfaceOrientation:' type='i16@0:4@8i12' type64='q32@0:8@16q24'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<arg declared_type='UIInterfaceOrientation' index='1' name='orientation' type='i' type64='q'/>
<retval declared_type='UIPageViewControllerSpineLocation' type='i' type64='q'/>
</method>
<method selector='pageViewController:willTransitionToViewControllers:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='pendingViewControllers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageViewControllerPreferredInterfaceOrientationForPresentation:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<retval declared_type='UIInterfaceOrientation' type='i' type64='q'/>
</method>
<method selector='pageViewControllerSupportedInterfaceOrientations:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='UIPageViewController * _Nonnull' index='0' name='pageViewController' type='@'/>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='UIPasteConfigurationSupporting'>
<method selector='canPasteItemProviders:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSArray * _Nonnull' index='0' name='itemProviders' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pasteConfiguration' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIPasteConfiguration * _Nullable' type='@'/>
</method>
<method selector='pasteItemProviders:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nonnull' index='0' name='itemProviders' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPasteConfiguration:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPasteConfiguration * _Nullable' index='0' name='pasteConfiguration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIPencilInteractionDelegate'>
<method selector='pencilInteractionDidTap:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPencilInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIPickerViewAccessibilityDelegate'>
<method selector='pickerView:accessibilityAttributedHintForComponent:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='pickerView:accessibilityAttributedLabelForComponent:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='pickerView:accessibilityHintForComponent:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='pickerView:accessibilityLabelForComponent:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIPickerViewDataSource'>
<method selector='numberOfComponentsInPickerView:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='pickerView:numberOfRowsInComponent:' type='i16@0:4@8i12' type64='q32@0:8@16q24'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UIPickerViewDelegate'>
<method selector='pickerView:attributedTitleForRow:forComponent:' type='@20@0:4@8i12i16' type64='@40@0:8@16q24q32'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='component' type='i' type64='q'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='pickerView:didSelectRow:inComponent:' type='v20@0:4@8i12i16' type64='v40@0:8@16q24q32'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='component' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pickerView:rowHeightForComponent:' type='f16@0:4@8i12' type64='d32@0:8@16q24'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='pickerView:titleForRow:forComponent:' type='@20@0:4@8i12i16' type64='@40@0:8@16q24q32'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='component' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='pickerView:viewForRow:forComponent:reusingView:' type='@24@0:4@8i12i16@20' type64='@48@0:8@16q24q32@40'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='component' type='i' type64='q'/>
<arg declared_type='UIView * _Nullable' index='3' name='view' type='@'/>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='pickerView:widthForComponent:' type='f16@0:4@8i12' type64='d32@0:8@16q24'>
<arg declared_type='UIPickerView * _Nonnull' index='0' name='pickerView' type='@'/>
<arg declared_type='NSInteger' index='1' name='component' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</informal_protocol>
<informal_protocol name='UIPopoverBackgroundViewMethods'>
<method class_method='true' selector='arrowBase' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='arrowHeight' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='contentViewInsets' type='{UIEdgeInsets=ffff}8@0:4' type64='{UIEdgeInsets=dddd}16@0:8'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
</informal_protocol>
<informal_protocol name='UIPopoverControllerDelegate'>
<method selector='popoverController:willRepositionPopoverToRect:inView:' type='v20@0:4@8N^{CGRect={CGPoint=ff}{CGSize=ff}}12N^@16' type64='v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32'>
<arg declared_type='UIPopoverController * _Nonnull' index='0' name='popoverController' type='@'/>
<arg declared_type='CGRect * _Nonnull' index='1' name='rect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull * _Nonnull' index='2' name='view' type='^@' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverControllerDidDismissPopover:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPopoverController * _Nonnull' index='0' name='popoverController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverControllerShouldDismissPopover:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UIPopoverController * _Nonnull' index='0' name='popoverController' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIPopoverPresentationControllerDelegate'>
<method selector='popoverPresentationController:willRepositionPopoverToRect:inView:' type='v20@0:4@8N^{CGRect={CGPoint=ff}{CGSize=ff}}12N^@16' type64='v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32'>
<arg declared_type='UIPopoverPresentationController * _Nonnull' index='0' name='popoverPresentationController' type='@'/>
<arg declared_type='CGRect * _Nonnull' index='1' name='rect' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView * _Nonnull * _Nonnull' index='2' name='view' type='^@' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverPresentationControllerDidDismissPopover:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPopoverPresentationController * _Nonnull' index='0' name='popoverPresentationController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverPresentationControllerShouldDismissPopover:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UIPopoverPresentationController * _Nonnull' index='0' name='popoverPresentationController' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareForPopoverPresentation:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPopoverPresentationController * _Nonnull' index='0' name='popoverPresentationController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIPreviewActionItem'>
<method selector='title' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIPreviewInteractionDelegate'>
<method selector='previewInteraction:didUpdateCommitTransition:ended:' type='v20@0:4@8f12B16' type64='v36@0:8@16d24B32'>
<arg declared_type='UIPreviewInteraction * _Nonnull' index='0' name='previewInteraction' type='@'/>
<arg declared_type='CGFloat' index='1' name='transitionProgress' type='f' type64='d'/>
<arg declared_type='BOOL' index='2' name='ended' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='previewInteraction:didUpdatePreviewTransition:ended:' type='v20@0:4@8f12B16' type64='v36@0:8@16d24B32'>
<arg declared_type='UIPreviewInteraction * _Nonnull' index='0' name='previewInteraction' type='@'/>
<arg declared_type='CGFloat' index='1' name='transitionProgress' type='f' type64='d'/>
<arg declared_type='BOOL' index='2' name='ended' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='previewInteractionDidCancel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPreviewInteraction * _Nonnull' index='0' name='previewInteraction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='previewInteractionShouldBegin:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UIPreviewInteraction * _Nonnull' index='0' name='previewInteraction' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIPrintInteractionControllerDelegate'>
<method selector='printInteractionController:chooseCutterBehavior:' type='i16@0:4@8@12' type64='q32@0:8@16@24'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='availableBehaviors' type='@'/>
<retval declared_type='UIPrinterCutterBehavior' type='i' type64='q'/>
</method>
<method selector='printInteractionController:choosePaper:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='paperList' type='@'/>
<retval declared_type='UIPrintPaper * _Nonnull' type='@'/>
</method>
<method selector='printInteractionController:cutLengthForPaper:' type='f16@0:4@8@12' type64='d32@0:8@16@24'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<arg declared_type='UIPrintPaper * _Nonnull' index='1' name='paper' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='printInteractionControllerDidDismissPrinterOptions:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printInteractionControllerDidFinishJob:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printInteractionControllerDidPresentPrinterOptions:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printInteractionControllerParentViewController:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='printInteractionControllerWillDismissPrinterOptions:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printInteractionControllerWillPresentPrinterOptions:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printInteractionControllerWillStartJob:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPrintInteractionController * _Nonnull' index='0' name='printInteractionController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIPrinterPickerControllerDelegate'>
<method selector='printerPickerController:shouldShowPrinter:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<arg declared_type='UIPrinter * _Nonnull' index='1' name='printer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='printerPickerControllerDidDismiss:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printerPickerControllerDidPresent:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printerPickerControllerDidSelectPrinter:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printerPickerControllerParentViewController:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='printerPickerControllerWillDismiss:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printerPickerControllerWillPresent:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIPrinterPickerController * _Nonnull' index='0' name='printerPickerController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIResponderStandardEditActions'>
<method selector='copy:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cut:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='decreaseSize:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delete:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='increaseSize:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeTextWritingDirectionLeftToRight:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeTextWritingDirectionRightToLeft:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='paste:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='select:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectAll:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleBoldface:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleItalics:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleUnderline:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIScrollViewAccessibilityDelegate'>
<method selector='accessibilityAttributedScrollStatusForScrollView:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityScrollStatusForScrollView:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIScrollViewDelegate'>
<method selector='scrollViewDidChangeAdjustedContentInset:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidEndDecelerating:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidEndDragging:willDecelerate:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<arg declared_type='BOOL' index='1' name='decelerate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidEndScrollingAnimation:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidEndZooming:withView:atScale:' type='v20@0:4@8@12f16' type64='v40@0:8@16@24d32'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<arg declared_type='UIView * _Nullable' index='1' name='view' type='@'/>
<arg declared_type='CGFloat' index='2' name='scale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidScroll:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidScrollToTop:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewDidZoom:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewShouldScrollToTop:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scrollViewWillBeginDecelerating:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewWillBeginDragging:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewWillBeginZooming:withView:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<arg declared_type='UIView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViewWillEndDragging:withVelocity:targetContentOffset:' type='v24@0:4@8{CGPoint=ff}12N^{CGPoint=ff}20' type64='v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<arg declared_type='CGPoint' index='1' name='velocity' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint * _Nonnull' index='2' name='targetContentOffset' type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewForZoomingInScrollView:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UIScrollView * _Nonnull' index='0' name='scrollView' type='@'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UISearchBarDelegate'>
<method selector='searchBar:selectedScopeButtonIndexDidChange:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<arg declared_type='NSInteger' index='1' name='selectedScope' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBar:shouldChangeTextInRange:replacementText:' type='B24@0:4@8{_NSRange=II}12@20' type64='B48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='2' name='text' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchBar:textDidChange:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='searchText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarBookmarkButtonClicked:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarCancelButtonClicked:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarResultsListButtonClicked:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarSearchButtonClicked:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarShouldBeginEditing:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchBarShouldEndEditing:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchBarTextDidBeginEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchBarTextDidEndEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchBar * _Nonnull' index='0' name='searchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UISearchControllerDelegate'>
<method selector='didDismissSearchController:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didPresentSearchController:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentSearchController:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willDismissSearchController:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willPresentSearchController:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UISearchDisplayDelegate'>
<method selector='searchDisplayController:didHideSearchResultsTableView:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayController:didLoadSearchResultsTableView:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayController:didShowSearchResultsTableView:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayController:shouldReloadTableForSearchScope:' type='B16@0:4@8i12' type64='B32@0:8@16q24'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSInteger' index='1' name='searchOption' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchDisplayController:shouldReloadTableForSearchString:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='searchString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchDisplayController:willHideSearchResultsTableView:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayController:willShowSearchResultsTableView:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayController:willUnloadSearchResultsTableView:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<arg declared_type='UITableView * _Nonnull' index='1' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayControllerDidBeginSearch:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayControllerDidEndSearch:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayControllerWillBeginSearch:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchDisplayControllerWillEndSearch:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchDisplayController * _Nonnull' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UISearchResultsUpdating'>
<method selector='updateSearchResultsForSearchController:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISearchController * _Nonnull' index='0' name='searchController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UISplitViewControllerDelegate'>
<method selector='primaryViewControllerForCollapsingSplitViewController:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='primaryViewControllerForExpandingSplitViewController:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='splitViewController:collapseSecondaryViewController:ontoPrimaryViewController:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='secondaryViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='primaryViewController' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitViewController:popoverController:willPresentViewController:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<arg declared_type='UIPopoverController * _Nonnull' index='1' name='pc' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='aViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitViewController:separateSecondaryViewControllerFromPrimaryViewController:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='primaryViewController' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
<method selector='splitViewController:shouldHideViewController:inOrientation:' type='B20@0:4@8@12i16' type64='B40@0:8@16@24q32'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='vc' type='@'/>
<arg declared_type='UIInterfaceOrientation' index='2' name='orientation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitViewController:showDetailViewController:sender:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='vc' type='@'/>
<arg declared_type='id _Nullable' index='2' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitViewController:showViewController:sender:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='vc' type='@'/>
<arg declared_type='id _Nullable' index='2' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitViewController:willChangeToDisplayMode:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<arg declared_type='UISplitViewControllerDisplayMode' index='1' name='displayMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitViewController:willHideViewController:withBarButtonItem:forPopoverController:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='aViewController' type='@'/>
<arg declared_type='UIBarButtonItem * _Nonnull' index='2' name='barButtonItem' type='@'/>
<arg declared_type='UIPopoverController * _Nonnull' index='3' name='pc' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitViewController:willShowViewController:invalidatingBarButtonItem:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='aViewController' type='@'/>
<arg declared_type='UIBarButtonItem * _Nonnull' index='2' name='barButtonItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitViewControllerPreferredInterfaceOrientationForPresentation:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<retval declared_type='UIInterfaceOrientation' type='i' type64='q'/>
</method>
<method selector='splitViewControllerSupportedInterfaceOrientations:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='splitViewController' type='@'/>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
<method selector='targetDisplayModeForActionInSplitViewController:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='UISplitViewController * _Nonnull' index='0' name='svc' type='@'/>
<retval declared_type='UISplitViewControllerDisplayMode' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UISpringLoadedInteractionBehavior'>
<method selector='interactionDidFinish:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UISpringLoadedInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldAllowInteraction:withContext:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UISpringLoadedInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UISpringLoadedInteractionContext'>
<method selector='locationInView:' type='{CGPoint=ff}12@0:4@8' type64='{CGPoint=dd}24@0:8@16'>
<arg declared_type='UIView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='setTargetItem:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='targetItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetView:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIView * _Nullable' index='0' name='targetView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='state' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UISpringLoadedInteractionEffectState' type='i' type64='q'/>
</method>
<method selector='targetItem' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='targetView' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UISpringLoadedInteractionEffect'>
<method selector='interaction:didChangeWithContext:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UISpringLoadedInteraction * _Nonnull' index='0' name='interaction' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UISpringLoadedInteractionSupporting'>
<method selector='isSpringLoaded' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSpringLoaded:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='springLoaded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIStateRestoring'>
<method selector='applicationFinishedRestoringState' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='decodeRestorableStateWithCoder:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeRestorableStateWithCoder:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectRestorationClass' type='#8@0:4' type64='#16@0:8'>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method selector='restorationParent' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITabBarControllerDelegate'>
<method selector='tabBarController:animationControllerForTransitionFromViewController:toViewController:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='fromVC' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='toVC' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tabBarController:didEndCustomizingViewControllers:changed:' type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='viewControllers' type='@'/>
<arg declared_type='BOOL' index='2' name='changed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBarController:didSelectViewController:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBarController:interactionControllerForAnimationController:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='animationController' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tabBarController:shouldSelectViewController:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewController' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tabBarController:willBeginCustomizingViewControllers:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='viewControllers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBarController:willEndCustomizingViewControllers:changed:' type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='viewControllers' type='@'/>
<arg declared_type='BOOL' index='2' name='changed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBarControllerPreferredInterfaceOrientationForPresentation:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<retval declared_type='UIInterfaceOrientation' type='i' type64='q'/>
</method>
<method selector='tabBarControllerSupportedInterfaceOrientations:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='UITabBarController * _Nonnull' index='0' name='tabBarController' type='@'/>
<retval declared_type='UIInterfaceOrientationMask' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='UITabBarDelegate'>
<method selector='tabBar:didBeginCustomizingItems:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITabBar * _Nonnull' index='0' name='tabBar' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBar:didEndCustomizingItems:changed:' type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32'>
<arg declared_type='UITabBar * _Nonnull' index='0' name='tabBar' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='BOOL' index='2' name='changed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBar:didSelectItem:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITabBar * _Nonnull' index='0' name='tabBar' type='@'/>
<arg declared_type='UITabBarItem * _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBar:willBeginCustomizingItems:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITabBar * _Nonnull' index='0' name='tabBar' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabBar:willEndCustomizingItems:changed:' type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32'>
<arg declared_type='UITabBar * _Nonnull' index='0' name='tabBar' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='BOOL' index='2' name='changed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDataSource'>
<method selector='numberOfSectionsInTableView:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='sectionIndexTitlesForTableView:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='tableView:canEditRowAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:canMoveRowAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:cellForRowAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UITableViewCell * _Nonnull' type='@'/>
</method>
<method selector='tableView:commitEditingStyle:forRowAtIndexPath:' type='v20@0:4@8i12@16' type64='v40@0:8@16q24@32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UITableViewCellEditingStyle' index='1' name='editingStyle' type='i' type64='q'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:moveRowAtIndexPath:toIndexPath:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='destinationIndexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:numberOfRowsInSection:' type='i16@0:4@8i12' type64='q32@0:8@16q24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tableView:sectionForSectionIndexTitle:atIndex:' type='i20@0:4@8@12i16' type64='q40@0:8@16@24q32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='title' type='@'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tableView:titleForFooterInSection:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tableView:titleForHeaderInSection:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDataSourcePrefetching'>
<method selector='tableView:cancelPrefetchingForRowsAtIndexPaths:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:prefetchRowsAtIndexPaths:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDelegate'>
<method selector='indexPathForPreferredFocusedViewInTableView:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='tableView:accessoryButtonTappedForRowWithIndexPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:accessoryTypeForRowWithIndexPath:' type='i16@0:4@8@12' type64='q32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UITableViewCellAccessoryType' type='i' type64='q'/>
</method>
<method selector='tableView:canFocusRowAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:canPerformAction:forRowAtIndexPath:withSender:' type='B24@0:4@8:12@16@20' type64='B48@0:8@16:24@32@40'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='id _Nullable' index='3' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:didDeselectRowAtIndexPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didEndDisplayingCell:forRowAtIndexPath:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UITableViewCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didEndDisplayingFooterView:forSection:' type='v20@0:4@8@12i16' type64='v40@0:8@16@24q32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didEndDisplayingHeaderView:forSection:' type='v20@0:4@8@12i16' type64='v40@0:8@16@24q32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didEndEditingRowAtIndexPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nullable' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didHighlightRowAtIndexPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didSelectRowAtIndexPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didUnhighlightRowAtIndexPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didUpdateFocusInContext:withAnimationCoordinator:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UITableViewFocusUpdateContext * _Nonnull' index='1' name='context' type='@'/>
<arg declared_type='UIFocusAnimationCoordinator * _Nonnull' index='2' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:editActionsForRowAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='tableView:editingStyleForRowAtIndexPath:' type='i16@0:4@8@12' type64='q32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UITableViewCellEditingStyle' type='i' type64='q'/>
</method>
<method selector='tableView:estimatedHeightForFooterInSection:' type='f16@0:4@8i12' type64='d32@0:8@16q24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:estimatedHeightForHeaderInSection:' type='f16@0:4@8i12' type64='d32@0:8@16q24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:estimatedHeightForRowAtIndexPath:' type='f16@0:4@8@12' type64='d32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:heightForFooterInSection:' type='f16@0:4@8i12' type64='d32@0:8@16q24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:heightForHeaderInSection:' type='f16@0:4@8i12' type64='d32@0:8@16q24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:heightForRowAtIndexPath:' type='f16@0:4@8@12' type64='d32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:indentationLevelForRowAtIndexPath:' type='i16@0:4@8@12' type64='q32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UISwipeActionsConfiguration * _Nullable' type='@'/>
</method>
<method selector='tableView:performAction:forRowAtIndexPath:withSender:' type='v24@0:4@8:12@16@20' type64='v48@0:8@16:24@32@40'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='id _Nullable' index='3' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:shouldHighlightRowAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldIndentWhileEditingRowAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldShowMenuForRowAtIndexPath:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldSpringLoadRowAtIndexPath:withContext:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldUpdateFocusInContext:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UITableViewFocusUpdateContext * _Nonnull' index='1' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='proposedDestinationIndexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nonnull' type='@'/>
</method>
<method selector='tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UISwipeActionsConfiguration * _Nullable' type='@'/>
</method>
<method selector='tableView:viewForFooterInSection:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='tableView:viewForHeaderInSection:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='UIView * _Nullable' type='@'/>
</method>
<method selector='tableView:willBeginEditingRowAtIndexPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:willDeselectRowAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='tableView:willDisplayCell:forRowAtIndexPath:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UITableViewCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:willDisplayFooterView:forSection:' type='v20@0:4@8@12i16' type64='v40@0:8@16@24q32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:willDisplayHeaderView:forSection:' type='v20@0:4@8@12i16' type64='v40@0:8@16@24q32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='UIView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:willSelectRowAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDragDelegate'>
<method selector='tableView:dragPreviewParametersForRowAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</method>
<method selector='tableView:dragSessionAllowsMoveOperation:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:dragSessionDidEnd:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:dragSessionIsRestrictedToDraggingApplication:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:dragSessionWillBegin:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:itemsForAddingToDragSession:atIndexPath:point:' type='@28@0:4@8@12@16{CGPoint=ff}20' type64='@56@0:8@16@24@32{CGPoint=dd}40'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='CGPoint' index='3' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tableView:itemsForBeginningDragSession:atIndexPath:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDropCoordinator'>
<method selector='destinationIndexPath' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='dropItem:intoRowAtIndexPath:rect:' type='@32@0:4@8@12{CGRect={CGPoint=ff}{CGSize=ff}}16' type64='@64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<arg declared_type='CGRect' index='2' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropItem:toPlaceholder:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='UITableViewDropPlaceholder * _Nonnull' index='1' name='placeholder' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropItem:toRowAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dropItem:toTarget:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIDragItem * _Nonnull' index='0' name='dragItem' type='@'/>
<arg declared_type='UIDragPreviewTarget * _Nonnull' index='1' name='target' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='items' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method selector='proposal' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITableViewDropProposal * _Nonnull' type='@'/>
</method>
<method selector='session' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDropDelegate'>
<method selector='tableView:canHandleDropSession:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:dropPreviewParametersForRowAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='UIDragPreviewParameters * _Nullable' type='@'/>
</method>
<method selector='tableView:dropSessionDidEnd:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:dropSessionDidEnter:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:dropSessionDidExit:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:dropSessionDidUpdate:withDestinationIndexPath:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSIndexPath * _Nullable' index='2' name='destinationIndexPath' type='@'/>
<retval declared_type='UITableViewDropProposal * _Nonnull' type='@'/>
</method>
<method selector='tableView:performDropWithCoordinator:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='coordinator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDropItem'>
<method selector='dragItem' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIDragItem * _Nonnull' type='@'/>
</method>
<method selector='previewSize' type='{CGSize=ff}8@0:4' type64='{CGSize=dd}16@0:8'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sourceIndexPath' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDropPlaceholderContext'>
<method selector='commitInsertionWithDataSourceUpdates:' type='B12@0:4@?8' type64='B24@0:8@?16'>
<arg declared_type='void (^ _Nonnull)(NSIndexPath * _Nonnull)' function_pointer='true' index='0' name='dataSourceUpdates' type='@?'>
<arg declared_type='NSIndexPath * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='deletePlaceholder' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dragItem' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIDragItem * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITextDocumentProxy'>
<method selector='adjustTextPositionByCharacterOffset:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='offset' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentContextAfterInput' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='documentContextBeforeInput' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='documentIdentifier' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSUUID * _Nonnull' type='@'/>
</method>
<method selector='documentInputMode' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITextInputMode * _Nullable' type='@'/>
</method>
<method selector='selectedText' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITextDragDelegate'>
<method selector='textDraggableView:dragPreviewForLiftingItem:session:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDraggableView' type='@'/>
<arg declared_type='UIDragItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='session' type='@'/>
<retval declared_type='UITargetedDragPreview * _Nullable' type='@'/>
</method>
<method selector='textDraggableView:dragSessionDidEnd:withOperation:' type='v20@0:4@8@12I16' type64='v40@0:8@16@24Q32'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDraggableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='UIDropOperation' index='2' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDraggableView:dragSessionWillBegin:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDraggableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDraggableView:itemsForDrag:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDraggableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='dragRequest' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textDraggableView:willAnimateLiftWithAnimator:session:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDraggableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='animator' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITextDragRequest'>
<method selector='dragRange' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITextRange * _Nonnull' type='@'/>
</method>
<method selector='dragSession' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='existingItems' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='isSelected' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='suggestedItems' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITextDraggable'>
<method selector='isTextDragActive' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setTextDragDelegate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='textDragDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextDragOptions:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UITextDragOptions' index='0' name='textDragOptions' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDragDelegate' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='textDragInteraction' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIDragInteraction * _Nullable' type='@'/>
</method>
<method selector='textDragOptions' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UITextDragOptions' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UITextDropDelegate'>
<method selector='textDroppableView:dropSessionDidEnd:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDroppableView:dropSessionDidEnter:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDroppableView:dropSessionDidExit:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDroppableView:dropSessionDidUpdate:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDroppableView:previewForDroppingAllItemsWithDefault:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='UITargetedDragPreview * _Nonnull' index='1' name='defaultPreview' type='@'/>
<retval declared_type='UITargetedDragPreview * _Nullable' type='@'/>
</method>
<method selector='textDroppableView:proposalForDrop:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='drop' type='@'/>
<retval declared_type='UITextDropProposal * _Nonnull' type='@'/>
</method>
<method selector='textDroppableView:willBecomeEditableForDrop:' type='I16@0:4@8@12' type64='Q32@0:8@16@24'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='drop' type='@'/>
<retval declared_type='UITextDropEditability' type='I' type64='Q'/>
</method>
<method selector='textDroppableView:willPerformDrop:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIView * _Nonnull' index='0' name='textDroppableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='drop' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITextDropRequest'>
<method selector='dropPosition' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITextPosition * _Nonnull' type='@'/>
</method>
<method selector='dropSession' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='isSameView' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='suggestedProposal' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITextDropProposal * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITextDroppable'>
<method selector='isTextDropActive' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='_Bool' type='B'/>
</method>
<method selector='setTextDropDelegate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='textDropDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDropDelegate' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='textDropInteraction' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIDropInteraction * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITextFieldDelegate'>
<method selector='textField:shouldChangeCharactersInRange:replacementString:' type='B24@0:4@8{_NSRange=II}12@20' type64='B48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='2' name='string' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textFieldDidBeginEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textFieldDidEndEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textFieldDidEndEditing:reason:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<arg declared_type='UITextFieldDidEndEditingReason' index='1' name='reason' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textFieldShouldBeginEditing:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textFieldShouldClear:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textFieldShouldEndEditing:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textFieldShouldReturn:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UITextField * _Nonnull' index='0' name='textField' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInput'>
<method selector='baseWritingDirectionForPosition:inDirection:' type='i16@0:4@8i12' type64='q32@0:8@16q24'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextStorageDirection' index='1' name='direction' type='i' type64='q'/>
<retval declared_type='UITextWritingDirection' type='i' type64='q'/>
</method>
<method selector='beginFloatingCursorAtPoint:' type='v16@0:4{CGPoint=ff}8' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginningOfDocument' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITextPosition * _Nonnull' type='@'/>
</method>
<method selector='caretRectForPosition:' type='{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4@8' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='characterOffsetOfPosition:withinRange:' type='i16@0:4@8@12' type64='q32@0:8@16@24'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextRange * _Nonnull' index='1' name='range' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='characterRangeAtPoint:' type='@16@0:4{CGPoint=ff}8' type64='@32@0:8{CGPoint=dd}16'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
<method selector='characterRangeByExtendingPosition:inDirection:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextLayoutDirection' index='1' name='direction' type='i' type64='q'/>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
<method selector='closestPositionToPoint:' type='@16@0:4{CGPoint=ff}8' type64='@32@0:8{CGPoint=dd}16'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='closestPositionToPoint:withinRange:' type='@20@0:4{CGPoint=ff}8@16' type64='@40@0:8{CGPoint=dd}16@32'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UITextRange * _Nonnull' index='1' name='range' type='@'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='comparePosition:toPosition:' type='i16@0:4@8@12' type64='q32@0:8@16@24'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextPosition * _Nonnull' index='1' name='other' type='@'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='dictationRecognitionFailed' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dictationRecordingDidEnd' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endFloatingCursor' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endOfDocument' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITextPosition * _Nonnull' type='@'/>
</method>
<method selector='firstRectForRange:' type='{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4@8' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameForDictationResultPlaceholder:' type='{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4@8' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='placeholder' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='inputDelegate' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='insertDictationResult:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nonnull' index='0' name='dictationResult' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertDictationResultPlaceholder' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='markedTextRange' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
<method selector='markedTextStyle' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='offsetFromPosition:toPosition:' type='i16@0:4@8@12' type64='q32@0:8@16@24'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='from' type='@'/>
<arg declared_type='UITextPosition * _Nonnull' index='1' name='toPosition' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='positionFromPosition:inDirection:offset:' type='@20@0:4@8i12i16' type64='@40@0:8@16q24q32'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextLayoutDirection' index='1' name='direction' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='offset' type='i' type64='q'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='positionFromPosition:offset:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='NSInteger' index='1' name='offset' type='i' type64='q'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='positionWithinRange:atCharacterOffset:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<arg declared_type='NSInteger' index='1' name='offset' type='i' type64='q'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='positionWithinRange:farthestInDirection:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<arg declared_type='UITextLayoutDirection' index='1' name='direction' type='i' type64='q'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='removeDictationResultPlaceholder:willInsertResult:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='id _Nonnull' index='0' name='placeholder' type='@'/>
<arg declared_type='BOOL' index='1' name='willInsertResult' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceRange:withText:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedTextRange' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
<method selector='selectionAffinity' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UITextStorageDirection' type='i' type64='q'/>
</method>
<method selector='selectionRectsForRange:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setBaseWritingDirection:forRange:' type='v16@0:4i8@12' type64='v32@0:8q16@24'>
<arg declared_type='UITextWritingDirection' index='0' name='writingDirection' type='i' type64='q'/>
<arg declared_type='UITextRange * _Nonnull' index='1' name='range' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputDelegate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='inputDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMarkedText:selectedRange:' type='v20@0:4@8{_NSRange=II}12' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type='NSString * _Nullable' index='0' name='markedText' type='@'/>
<arg declared_type='NSRange' index='1' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMarkedTextStyle:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='markedTextStyle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedTextRange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UITextRange * _Nullable' index='0' name='selectedTextRange' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionAffinity:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UITextStorageDirection' index='0' name='selectionAffinity' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldChangeTextInRange:replacementText:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='text' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textInRange:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UITextRange * _Nonnull' index='0' name='range' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='textInputView' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='__kindof UIView * _Nonnull' type='@'/>
</method>
<method selector='textRangeFromPosition:toPosition:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='fromPosition' type='@'/>
<arg declared_type='UITextPosition * _Nonnull' index='1' name='toPosition' type='@'/>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
<method selector='textStylingAtPosition:inDirection:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextStorageDirection' index='1' name='direction' type='i' type64='q'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='tokenizer' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='unmarkText' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateFloatingCursorAtPoint:' type='v16@0:4{CGPoint=ff}8' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInputDelegate'>
<method selector='selectionDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='textInput' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectionWillChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='textInput' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='textInput' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textWillChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='textInput' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInputTokenizer'>
<method selector='isPosition:atBoundary:inDirection:' type='B20@0:4@8i12i16' type64='B40@0:8@16q24q32'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextGranularity' index='1' name='granularity' type='i' type64='q'/>
<arg declared_type='UITextDirection' index='2' name='direction' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPosition:withinTextUnit:inDirection:' type='B20@0:4@8i12i16' type64='B40@0:8@16q24q32'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextGranularity' index='1' name='granularity' type='i' type64='q'/>
<arg declared_type='UITextDirection' index='2' name='direction' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='positionFromPosition:toBoundary:inDirection:' type='@20@0:4@8i12i16' type64='@40@0:8@16q24q32'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextGranularity' index='1' name='granularity' type='i' type64='q'/>
<arg declared_type='UITextDirection' index='2' name='direction' type='i' type64='q'/>
<retval declared_type='UITextPosition * _Nullable' type='@'/>
</method>
<method selector='rangeEnclosingPosition:withGranularity:inDirection:' type='@20@0:4@8i12i16' type64='@40@0:8@16q24q32'>
<arg declared_type='UITextPosition * _Nonnull' index='0' name='position' type='@'/>
<arg declared_type='UITextGranularity' index='1' name='granularity' type='i' type64='q'/>
<arg declared_type='UITextDirection' index='2' name='direction' type='i' type64='q'/>
<retval declared_type='UITextRange * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInputTraits'>
<method selector='autocapitalizationType' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UITextAutocapitalizationType' type='i' type64='q'/>
</method>
<method selector='autocorrectionType' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UITextAutocorrectionType' type='i' type64='q'/>
</method>
<method selector='enablesReturnKeyAutomatically' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSecureTextEntry' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyboardAppearance' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UIKeyboardAppearance' type='i' type64='q'/>
</method>
<method selector='keyboardType' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UIKeyboardType' type='i' type64='q'/>
</method>
<method selector='passwordRules' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITextInputPasswordRules * _Nullable' type='@'/>
</method>
<method selector='returnKeyType' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UIReturnKeyType' type='i' type64='q'/>
</method>
<method selector='setAutocapitalizationType:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UITextAutocapitalizationType' index='0' name='autocapitalizationType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutocorrectionType:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UITextAutocorrectionType' index='0' name='autocorrectionType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnablesReturnKeyAutomatically:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='enablesReturnKeyAutomatically' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyboardAppearance:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UIKeyboardAppearance' index='0' name='keyboardAppearance' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyboardType:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UIKeyboardType' index='0' name='keyboardType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPasswordRules:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UITextInputPasswordRules * _Nullable' index='0' name='passwordRules' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReturnKeyType:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UIReturnKeyType' index='0' name='returnKeyType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecureTextEntry:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='secureTextEntry' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSmartDashesType:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UITextSmartDashesType' index='0' name='smartDashesType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSmartInsertDeleteType:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UITextSmartInsertDeleteType' index='0' name='smartInsertDeleteType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSmartQuotesType:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UITextSmartQuotesType' index='0' name='smartQuotesType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpellCheckingType:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UITextSpellCheckingType' index='0' name='spellCheckingType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextContentType:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UITextContentType _Null_unspecified' index='0' name='textContentType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='smartDashesType' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UITextSmartDashesType' type='i' type64='q'/>
</method>
<method selector='smartInsertDeleteType' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UITextSmartInsertDeleteType' type='i' type64='q'/>
</method>
<method selector='smartQuotesType' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UITextSmartQuotesType' type='i' type64='q'/>
</method>
<method selector='spellCheckingType' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UITextSpellCheckingType' type='i' type64='q'/>
</method>
<method selector='textContentType' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITextContentType _Null_unspecified' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITextPasteConfigurationSupporting'>
<method selector='pasteDelegate' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setPasteDelegate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='pasteDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITextPasteDelegate'>
<method selector='textPasteConfigurationSupporting:combineItemAttributedStrings:forRange:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='id _Nonnull' index='0' name='textPasteConfigurationSupporting' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='itemStrings' type='@'/>
<arg declared_type='UITextRange * _Nonnull' index='2' name='textRange' type='@'/>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='textPasteConfigurationSupporting:performPasteOfAttributedString:toRange:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='id _Nonnull' index='0' name='textPasteConfigurationSupporting' type='@'/>
<arg declared_type='NSAttributedString * _Nonnull' index='1' name='attributedString' type='@'/>
<arg declared_type='UITextRange * _Nonnull' index='2' name='textRange' type='@'/>
<retval declared_type='UITextRange * _Nonnull' type='@'/>
</method>
<method selector='textPasteConfigurationSupporting:shouldAnimatePasteOfAttributedString:toRange:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='id _Nonnull' index='0' name='textPasteConfigurationSupporting' type='@'/>
<arg declared_type='NSAttributedString * _Nonnull' index='1' name='attributedString' type='@'/>
<arg declared_type='UITextRange * _Nonnull' index='2' name='textRange' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textPasteConfigurationSupporting:transformPasteItem:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='id _Nonnull' index='0' name='textPasteConfigurationSupporting' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITextPasteItem'>
<method selector='defaultAttributes' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='itemProvider' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='__kindof NSItemProvider * _Nonnull' type='@'/>
</method>
<method selector='localObject' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setAttachmentResult:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSTextAttachment * _Nonnull' index='0' name='textAttachment' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedStringResult:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultResult' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNoResult' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringResult:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITextViewDelegate'>
<method selector='textView:shouldChangeTextInRange:replacementText:' type='B24@0:4@8{_NSRange=II}12@20' type64='B48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='2' name='text' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldInteractWithTextAttachment:inRange:' type='B24@0:4@8@12{_NSRange=II}16' type64='B48@0:8@16@24{_NSRange=QQ}32'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSTextAttachment * _Nonnull' index='1' name='textAttachment' type='@'/>
<arg declared_type='NSRange' index='2' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldInteractWithTextAttachment:inRange:interaction:' type='B28@0:4@8@12{_NSRange=II}16i24' type64='B56@0:8@16@24{_NSRange=QQ}32q48'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSTextAttachment * _Nonnull' index='1' name='textAttachment' type='@'/>
<arg declared_type='NSRange' index='2' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='UITextItemInteraction' index='3' name='interaction' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldInteractWithURL:inRange:' type='B24@0:4@8@12{_NSRange=II}16' type64='B48@0:8@16@24{_NSRange=QQ}32'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='URL' type='@'/>
<arg declared_type='NSRange' index='2' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldInteractWithURL:inRange:interaction:' type='B28@0:4@8@12{_NSRange=II}16i24' type64='B56@0:8@16@24{_NSRange=QQ}32q48'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='URL' type='@'/>
<arg declared_type='NSRange' index='2' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='UITextItemInteraction' index='3' name='interaction' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textViewDidBeginEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textViewDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textViewDidChangeSelection:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textViewDidEndEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textViewShouldBeginEditing:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textViewShouldEndEditing:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='UITextView * _Nonnull' index='0' name='textView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UITimingCurveProvider'>
<method selector='cubicTimingParameters' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UICubicTimingParameters * _Nullable' type='@'/>
</method>
<method selector='springTimingParameters' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UISpringTimingParameters * _Nullable' type='@'/>
</method>
<method selector='timingCurveType' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UITimingCurveType' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UITraitEnvironment'>
<method selector='traitCollection' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UITraitCollection * _Nonnull' type='@'/>
</method>
<method selector='traitCollectionDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UITraitCollection * _Nullable' index='0' name='previousTraitCollection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIUserActivityRestoring'>
<method selector='restoreUserActivityState:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSUserActivity * _Nonnull' index='0' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIVideoEditorControllerDelegate'>
<method selector='videoEditorController:didFailWithError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIVideoEditorController * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoEditorController:didSaveEditedVideoToPath:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIVideoEditorController * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='editedVideoPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoEditorControllerDidCancel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIVideoEditorController * _Nonnull' index='0' name='editor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewAnimating'>
<method selector='finishAnimationAtPosition:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='UIViewAnimatingPosition' index='0' name='finalPosition' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fractionComplete' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='isReversed' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRunning' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pauseAnimation' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFractionComplete:' type='v12@0:4f8' type64='v24@0:8d16'>
<arg declared_type='CGFloat' index='0' name='fractionComplete' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReversed:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='reversed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimation' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimationAfterDelay:' type='v16@0:4d8' type64='v24@0:8d16'>
<arg declared_type='NSTimeInterval' index='0' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='state' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UISpringLoadedInteractionEffectState' type='i' type64='q'/>
</method>
<method selector='stopAnimation:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='withoutFinishing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerAnimatedTransitioning'>
<method selector='animateTransition:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='transitionContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationEnded:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='transitionCompleted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='interruptibleAnimatorForTransition:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='transitionContext' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='transitionDuration:' type='d12@0:4@8' type64='d24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='transitionContext' type='@'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerContextTransitioning'>
<method selector='cancelInteractiveTransition' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='completeTransition:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='didComplete' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='containerView' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='finalFrameForViewController:' type='{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4@8' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='vc' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='finishInteractiveTransition' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initialFrameForViewController:' type='{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4@8' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='vc' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='isAnimated' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInteractive' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pauseInteractiveTransition' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentationStyle' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UIModalPresentationStyle' type='i' type64='q'/>
</method>
<method selector='targetTransform' type='{CGAffineTransform=ffffff}8@0:4' type64='{CGAffineTransform=dddddd}16@0:8'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='transitionWasCancelled' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateInteractiveTransition:' type='v12@0:4f8' type64='v24@0:8d16'>
<arg declared_type='CGFloat' index='0' name='percentComplete' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewControllerForKey:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UITransitionContextViewControllerKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='__kindof UIViewController * _Nullable' type='@'/>
</method>
<method selector='viewForKey:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UITransitionContextViewKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='__kindof UIView * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerInteractiveTransitioning'>
<method selector='completionCurve' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UIViewAnimationCurve' type='i' type64='q'/>
</method>
<method selector='completionSpeed' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='startInteractiveTransition:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='transitionContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='wantsInteractiveStart' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerPreviewing'>
<method selector='delegate' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='previewingGestureRecognizerForFailureRelationship' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIGestureRecognizer * _Nonnull' type='@'/>
</method>
<method selector='setSourceRect:' type='v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8' type64='v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16'>
<arg declared_type='CGRect' index='0' name='sourceRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sourceView' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerPreviewingDelegate'>
<method selector='previewingContext:commitViewController:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='id _Nonnull' index='0' name='previewingContext' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='viewControllerToCommit' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='previewingContext:viewControllerForLocation:' type='@20@0:4@8{CGPoint=ff}12' type64='@40@0:8@16{CGPoint=dd}24'>
<arg declared_type='id _Nonnull' index='0' name='previewingContext' type='@'/>
<arg declared_type='CGPoint' index='1' name='location' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerRestoration'>
<method class_method='true' selector='viewControllerWithRestorationIdentifierPath:coder:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSArray * _Nonnull' index='0' name='identifierComponents' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='UIViewController * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerTransitionCoordinator'>
<method selector='animateAlongsideTransition:completion:' type='B16@0:4@?8@?12' type64='B32@0:8@?16@?24'>
<arg declared_type='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='0' name='animation' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='animateAlongsideTransitionInView:animation:completion:' type='B20@0:4@8@?12@?16' type64='B40@0:8@16@?24@?32'>
<arg declared_type='UIView * _Nullable' index='0' name='view' type='@'/>
<arg declared_type='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='1' name='animation' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notifyWhenInteractionChangesUsingBlock:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='void (^ _Nonnull)(id _Nonnull)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='notifyWhenInteractionEndsUsingBlock:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='void (^ _Nonnull)(id _Nonnull)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerTransitionCoordinatorContext'>
<method selector='completionCurve' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UIViewAnimationCurve' type='i' type64='q'/>
</method>
<method selector='completionVelocity' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='containerView' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIView * _Nonnull' type='@'/>
</method>
<method selector='initiallyInteractive' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAnimated' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isCancelled' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInteractive' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInterruptible' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='percentComplete' type='f8@0:4' type64='d16@0:8'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='presentationStyle' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='UIModalPresentationStyle' type='i' type64='q'/>
</method>
<method selector='targetTransform' type='{CGAffineTransform=ffffff}8@0:4' type64='{CGAffineTransform=dddddd}16@0:8'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='transitionDuration' type='d8@0:4' type64='d16@0:8'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='viewControllerForKey:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UITransitionContextViewControllerKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='__kindof UIViewController * _Nullable' type='@'/>
</method>
<method selector='viewForKey:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UITransitionContextViewKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='__kindof UIView * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerTransitioningDelegate'>
<method selector='animationControllerForDismissedController:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='dismissed' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='animationControllerForPresentedController:presentingController:sourceController:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='presented' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='1' name='presenting' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='source' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='interactionControllerForDismissal:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='animator' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='interactionControllerForPresentation:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='animator' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='presentationControllerForPresentedViewController:presentingViewController:sourceViewController:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='UIViewController * _Nonnull' index='0' name='presented' type='@'/>
<arg declared_type='UIViewController * _Nullable' index='1' name='presenting' type='@'/>
<arg declared_type='UIViewController * _Nonnull' index='2' name='source' type='@'/>
<retval declared_type='UIPresentationController * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewImplicitlyAnimating'>
<method selector='addAnimations:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='animation' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnimations:delayFactor:' type='v16@0:4@?8f12' type64='v32@0:8@?16d24'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='animation' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CGFloat' index='1' name='delayFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addCompletion:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='void (^ _Nonnull)(UIViewAnimatingPosition)' function_pointer='true' index='0' name='completion' type='@?'>
<arg declared_type='UIViewAnimatingPosition' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='continueAnimationWithTimingParameters:durationFactor:' type='v16@0:4@8f12' type64='v32@0:8@16d24'>
<arg declared_type='id _Nullable' index='0' name='parameters' type='@'/>
<arg declared_type='CGFloat' index='1' name='durationFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIWebViewDelegate'>
<method selector='webView:didFailLoadWithError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIWebView * _Nonnull' index='0' name='webView' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webView:shouldStartLoadWithRequest:navigationType:' type='B20@0:4@8@12i16' type64='B40@0:8@16@24q32'>
<arg declared_type='UIWebView * _Nonnull' index='0' name='webView' type='@'/>
<arg declared_type='NSURLRequest * _Nonnull' index='1' name='request' type='@'/>
<arg declared_type='UIWebViewNavigationType' index='2' name='navigationType' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='webViewDidFinishLoad:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIWebView * _Nonnull' index='0' name='webView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webViewDidStartLoad:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='UIWebView * _Nonnull' index='0' name='webView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
