<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NFCErrorDomain' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NFCISO15693TagResponseErrorKey' type64='@'/>
<enum name='NFCReaderErrorSecurityViolation' value64='2'/>
<enum name='NFCReaderErrorUnsupportedFeature' value64='1'/>
<enum name='NFCReaderSessionInvalidationErrorFirstNDEFTagRead' value64='204'/>
<enum name='NFCReaderSessionInvalidationErrorSessionTerminatedUnexpectedly' value64='202'/>
<enum name='NFCReaderSessionInvalidationErrorSessionTimeout' value64='201'/>
<enum name='NFCReaderSessionInvalidationErrorSystemIsBusy' value64='203'/>
<enum name='NFCReaderSessionInvalidationErrorUserCanceled' value64='200'/>
<enum name='NFCReaderTransceiveErrorRetryExceeded' value64='101'/>
<enum name='NFCReaderTransceiveErrorTagConnectionLost' value64='100'/>
<enum name='NFCReaderTransceiveErrorTagResponseError' value64='102'/>
<enum name='NFCTagCommandConfigurationErrorInvalidParameters' value64='300'/>
<enum name='NFCTagTypeISO15693' value64='1'/>
<enum name='NFCTypeNameFormatAbsoluteURI' value64='3'/>
<enum name='NFCTypeNameFormatEmpty' value64='0'/>
<enum name='NFCTypeNameFormatMedia' value64='2'/>
<enum name='NFCTypeNameFormatNFCExternal' value64='4'/>
<enum name='NFCTypeNameFormatNFCWellKnown' value64='1'/>
<enum name='NFCTypeNameFormatUnchanged' value64='6'/>
<enum name='NFCTypeNameFormatUnknown' value64='5'/>
<class name='NFCISO15693CustomCommandConfiguration'>
<method selector='customCommandCode'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='initWithManufacturerCode:customCommandCode:requestParameters:'>
<arg declared_type64='NSUInteger' index='0' name='manufacturerCode' type64='Q'/>
<arg declared_type64='NSUInteger' index='1' name='customCommandCode' type64='Q'/>
<arg declared_type64='NSData * _Nullable' index='2' name='requestParameters' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithManufacturerCode:customCommandCode:requestParameters:maximumRetries:retryInterval:'>
<arg declared_type64='NSUInteger' index='0' name='manufacturerCode' type64='Q'/>
<arg declared_type64='NSUInteger' index='1' name='customCommandCode' type64='Q'/>
<arg declared_type64='NSData * _Nullable' index='2' name='requestParameters' type64='@'/>
<arg declared_type64='NSUInteger' index='3' name='maximumRetries' type64='Q'/>
<arg declared_type64='NSTimeInterval' index='4' name='retryInterval' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='manufacturerCode'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='requestParameters'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='setCustomCommandCode:'>
<arg declared_type64='NSUInteger' index='0' name='customCommandCode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setManufacturerCode:'>
<arg declared_type64='NSUInteger' index='0' name='manufacturerCode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRequestParameters:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='requestParameters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NFCISO15693ReadMultipleBlocksConfiguration'>
<method selector='chunkSize'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='initWithRange:chunkSize:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSUInteger' index='1' name='chunkSize' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithRange:chunkSize:maximumRetries:retryInterval:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSUInteger' index='1' name='chunkSize' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='maximumRetries' type64='Q'/>
<arg declared_type64='NSTimeInterval' index='3' name='retryInterval' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='range'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='setChunkSize:'>
<arg declared_type64='NSUInteger' index='0' name='chunkSize' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NFCISO15693ReaderSession'>
<method selector='initWithDelegate:queue:'>
<arg declared_type64='id _Nonnull' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='queue' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='readingAvailable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='restartPolling'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NFCNDEFMessage'>
<method selector='records'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setRecords:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='records' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NFCNDEFPayload'>
<method selector='identifier'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='payload'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPayload:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='payload' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setType:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTypeNameFormat:'>
<arg declared_type64='NFCTypeNameFormat' index='0' name='typeNameFormat' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='type'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='typeNameFormat'>
<retval declared_type64='NFCTypeNameFormat' type64='C'/>
</method>
</class>
<class name='NFCNDEFReaderSession'>
<method selector='initWithDelegate:queue:invalidateAfterFirstRead:'>
<arg declared_type64='id _Nonnull' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='queue' type64='@'/>
<arg declared_type64='BOOL' index='2' name='invalidateAfterFirstRead' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='readingAvailable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NFCReaderSession'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='sessionQueue'>
<retval declared_type64='dispatch_queue_t _Nonnull' type64='@'/>
</method>
</class>
<class name='NFCTagCommandConfiguration'>
<method selector='maximumRetries'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='retryInterval'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='setMaximumRetries:'>
<arg declared_type64='NSUInteger' index='0' name='maximumRetries' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRetryInterval:'>
<arg declared_type64='NSTimeInterval' index='0' name='retryInterval' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='alertMessage'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='beginSession'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='icManufacturerCode'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='icSerialNumber'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='invalidateSession'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isAvailable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isReady'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readMultipleBlocksWithConfiguration:completionHandler:'>
<arg declared_type64='NFCISO15693ReadMultipleBlocksConfiguration * _Nonnull' index='0' name='readConfiguration' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSData * _Nonnull, NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSData * _Nonnull' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readerSession:didDetectNDEFs:'>
<arg declared_type64='NFCNDEFReaderSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='messages' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readerSession:didDetectTags:'>
<arg declared_type64='NFCReaderSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSArray&gt; * _Nonnull' index='1' name='tags' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readerSession:didInvalidateWithError:'>
<arg declared_type64='NFCNDEFReaderSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readerSessionDidBecomeActive:'>
<arg declared_type64='NFCReaderSession * _Nonnull' index='0' name='session' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendCustomCommandWithConfiguration:completionHandler:'>
<arg declared_type64='NFCISO15693CustomCommandConfiguration * _Nonnull' index='0' name='commandConfiguration' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSData * _Nonnull, NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSData * _Nonnull' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='session'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setAlertMessage:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='alertMessage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='type'>
<retval declared_type64='NFCTagType' type64='Q'/>
</method>
</class>
<informal_protocol name='NFCISO15693Tag'>
<method selector='icManufacturerCode' type64='Q16@0:8'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='icSerialNumber' type64='@16@0:8'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='identifier' type64='@16@0:8'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='readMultipleBlocksWithConfiguration:completionHandler:' type64='v32@0:8@16@?24'>
<arg declared_type64='NFCISO15693ReadMultipleBlocksConfiguration * _Nonnull' index='0' name='readConfiguration' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSData * _Nonnull, NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSData * _Nonnull' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendCustomCommandWithConfiguration:completionHandler:' type64='v32@0:8@16@?24'>
<arg declared_type64='NFCISO15693CustomCommandConfiguration * _Nonnull' index='0' name='commandConfiguration' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSData * _Nonnull, NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSData * _Nonnull' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NFCNDEFReaderSessionDelegate'>
<method selector='readerSession:didDetectNDEFs:' type64='v32@0:8@16@24'>
<arg declared_type64='NFCNDEFReaderSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='messages' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readerSession:didInvalidateWithError:' type64='v32@0:8@16@24'>
<arg declared_type64='NFCNDEFReaderSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NFCReaderSession'>
<method selector='alertMessage' type64='@16@0:8'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='beginSession' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateSession' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isReady' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAlertMessage:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='alertMessage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NFCReaderSessionDelegate'>
<method selector='readerSession:didDetectTags:' type64='v32@0:8@16@24'>
<arg declared_type64='NFCReaderSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSArray&gt; * _Nonnull' index='1' name='tags' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readerSession:didInvalidateWithError:' type64='v32@0:8@16@24'>
<arg declared_type64='NFCNDEFReaderSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readerSessionDidBecomeActive:' type64='v24@0:8@16'>
<arg declared_type64='NFCReaderSession * _Nonnull' index='0' name='session' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NFCTag'>
<method selector='isAvailable' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='session' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='type' type64='Q16@0:8'>
<retval declared_type64='NFCTagType' type64='Q'/>
</method>
</informal_protocol>
</signatures>
