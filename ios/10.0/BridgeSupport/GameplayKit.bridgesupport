<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/SpriteKit.framework'/>
<depends_on path='/System/Library/Frameworks/UIKit.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='GKBox' type='{GKBox=&quot;boxMin&quot;{_vector_float3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;boxMax&quot;{_vector_float3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}'>
<field declared_type='vector_float3' name='boxMin' type='{_vector_float3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field declared_type='vector_float3' name='boxMax' type='{_vector_float3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
</struct>
<struct name='GKQuad' type='{GKQuad=&quot;quadMin&quot;{_vector_float2=&quot;x&quot;f&quot;y&quot;f}&quot;quadMax&quot;{_vector_float2=&quot;x&quot;f&quot;y&quot;f}}'>
<field declared_type='vector_float2' name='quadMin' type='{_vector_float2=&quot;x&quot;f&quot;y&quot;f}'/>
<field declared_type='vector_float2' name='quadMax' type='{_vector_float2=&quot;x&quot;f&quot;y&quot;f}'/>
</struct>
<struct name='GKTriangle' type='{GKTriangle=&quot;points&quot;[3{?=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}]}'>
<field declared_type='vector_float3*' name='points' type='[3{?=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}]'/>
</struct>
<struct name='vector_float2' type='{_vector_float2=&quot;x&quot;f&quot;y&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
</struct>
<struct name='vector_float3' type='{_vector_float3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
</struct>
<struct name='vector_float4' type='{_vector_float4=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
<field declared_type='float' name='w' type='f'/>
</struct>
<struct name='vector_int2' type='{_vector_int2=&quot;x&quot;i&quot;y&quot;i}'>
<field declared_type='int' name='x' type='i'/>
<field declared_type='int' name='y' type='i'/>
</struct>
<struct name='vector_int4' type='{_vector_int4=&quot;x&quot;i&quot;y&quot;i&quot;z&quot;i&quot;w&quot;i}'>
<field declared_type='int' name='x' type='i'/>
<field declared_type='int' name='y' type='i'/>
<field declared_type='int' name='z' type='i'/>
<field declared_type='int' name='w' type='i'/>
</struct>
<struct name='vector_uint2' type='{_vector_uint2=&quot;x&quot;I&quot;y&quot;I}'>
<field declared_type='unsigned int' name='x' type='I'/>
<field declared_type='unsigned int' name='y' type='I'/>
</struct>
<struct name='vector_uint3' type='{_vector_uint3=&quot;x&quot;I&quot;y&quot;I&quot;z&quot;I}'>
<field declared_type='unsigned int' name='x' type='I'/>
<field declared_type='unsigned int' name='y' type='I'/>
<field declared_type='unsigned int' name='z' type='I'/>
</struct>
<constant const='true' declared_type='NSInteger' name='GKGameModelMaxScore' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='GKGameModelMinScore' type='i' type64='q'/>
<enum name='GKMeshGraphTriangulationModeCenters' value='2'/>
<enum name='GKMeshGraphTriangulationModeEdgeMidpoints' value='4'/>
<enum name='GKMeshGraphTriangulationModeVertices' value='1'/>
<enum name='GKRTreeSplitStrategyHalve' value='0'/>
<enum name='GKRTreeSplitStrategyLinear' value='1'/>
<enum name='GKRTreeSplitStrategyQuadratic' value='2'/>
<enum name='GKRTreeSplitStrategyReduceOverlap' value='3'/>
<enum name='GK_VERSION' value='65000000'/>
<class name='GKARC4RandomSource'>
<method selector='dropValuesWithCount:'>
<arg declared_type='NSUInteger' index='0' name='count' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSeed:'>
<arg declared_type='NSData * _Nonnull' index='0' name='seed' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='seed'>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='setSeed:'>
<arg declared_type='NSData * _Nonnull' index='0' name='seed' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKAgent'>
<method selector='behavior'>
<retval declared_type='GKBehavior * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='mass'>
<retval declared_type='float' type='f'/>
</method>
<method selector='maxAcceleration'>
<retval declared_type='float' type='f'/>
</method>
<method selector='maxSpeed'>
<retval declared_type='float' type='f'/>
</method>
<method selector='radius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setBehavior:'>
<arg declared_type='GKBehavior * _Nullable' index='0' name='behavior' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMass:'>
<arg declared_type='float' index='0' name='mass' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxAcceleration:'>
<arg declared_type='float' index='0' name='maxAcceleration' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxSpeed:'>
<arg declared_type='float' index='0' name='maxSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type='float' index='0' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type='float' index='0' name='speed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speed'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='GKAgent2D'>
<method selector='position'>
<retval declared_type='vector_float2' type='{_vector_float2=ff}'/>
</method>
<method selector='rotation'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPosition:'>
<arg declared_type='vector_float2' index='0' name='position' type='{_vector_float2=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg declared_type='float' index='0' name='rotation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type='NSTimeInterval' index='0' name='seconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='velocity'>
<retval declared_type='vector_float2' type='{_vector_float2=ff}'/>
</method>
</class>
<class name='GKAgent3D'>
<method selector='position'>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
<method selector='rightHanded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rotation'>
<retval declared_type='matrix_float3x3' type='{_matrix_float3x3=[3{?=fff}]}'/>
</method>
<method selector='setPosition:'>
<arg declared_type='vector_float3' index='0' name='position' type='{_vector_float3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightHanded:'>
<arg declared_type='BOOL' index='0' name='rightHanded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg declared_type='matrix_float3x3' index='0' name='rotation' type='{_matrix_float3x3=[3{?=fff}]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type='NSTimeInterval' index='0' name='seconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='velocity'>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
</class>
<class name='GKBehavior'>
<method class_method='true' selector='behaviorWithGoal:weight:'>
<arg declared_type='GKGoal * _Nonnull' index='0' name='goal' type='@'/>
<arg declared_type='float' index='1' name='weight' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='behaviorWithGoals:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='goals' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='behaviorWithGoals:andWeights:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='goals' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='weights' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='behaviorWithWeightedGoals:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='weightedGoals' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='goalCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='NSUInteger' index='0' name='idx' type='I' type64='Q'/>
<retval declared_type='GKGoal * _Nonnull' type='@'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type='GKGoal * _Nonnull' index='0' name='goal' type='@'/>
<retval declared_type='NSNumber * _Nullable' type='@'/>
</method>
<method selector='removeAllGoals'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeGoal:'>
<arg declared_type='GKGoal * _Nonnull' index='0' name='goal' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObject:forKeyedSubscript:'>
<arg declared_type='NSNumber * _Nonnull' index='0' name='weight' type='@'/>
<arg declared_type='GKGoal * _Nonnull' index='1' name='goal' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWeight:forGoal:'>
<arg declared_type='float' index='0' name='weight' type='f'/>
<arg declared_type='GKGoal * _Nonnull' index='1' name='goal' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='weightForGoal:'>
<arg declared_type='GKGoal * _Nonnull' index='0' name='goal' type='@'/>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='GKBillowNoiseSource'>
<method class_method='true' selector='billowNoiseSourceWithFrequency:octaveCount:persistence:lacunarity:seed:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<arg declared_type='NSInteger' index='1' name='octaveCount' type='i' type64='q'/>
<arg declared_type='double' index='2' name='persistence' type='d'/>
<arg declared_type='double' index='3' name='lacunarity' type='d'/>
<arg declared_type='int32_t' index='4' name='seed' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithFrequency:octaveCount:persistence:lacunarity:seed:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<arg declared_type='NSInteger' index='1' name='octaveCount' type='i' type64='q'/>
<arg declared_type='double' index='2' name='persistence' type='d'/>
<arg declared_type='double' index='3' name='lacunarity' type='d'/>
<arg declared_type='int32_t' index='4' name='seed' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='persistence'>
<retval declared_type='double' type='d'/>
</method>
<method selector='setPersistence:'>
<arg declared_type='double' index='0' name='persistence' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKCheckerboardNoiseSource'>
<method class_method='true' selector='checkerboardNoiseWithSquareSize:'>
<arg declared_type='double' index='0' name='squareSize' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSquareSize:'>
<arg declared_type='double' index='0' name='squareSize' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setSquareSize:'>
<arg declared_type='double' index='0' name='squareSize' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='squareSize'>
<retval declared_type='double' type='d'/>
</method>
</class>
<class name='GKCircleObstacle'>
<method selector='initWithRadius:'>
<arg declared_type='float' index='0' name='radius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='obstacleWithRadius:'>
<arg declared_type='float' index='0' name='radius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='position'>
<retval declared_type='vector_float2' type='{_vector_float2=ff}'/>
</method>
<method selector='radius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPosition:'>
<arg declared_type='vector_float2' index='0' name='position' type='{_vector_float2=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type='float' index='0' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKCoherentNoiseSource'>
<method selector='frequency'>
<retval declared_type='double' type='d'/>
</method>
<method selector='lacunarity'>
<retval declared_type='double' type='d'/>
</method>
<method selector='octaveCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='seed'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='setFrequency:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLacunarity:'>
<arg declared_type='double' index='0' name='lacunarity' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOctaveCount:'>
<arg declared_type='NSInteger' index='0' name='octaveCount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeed:'>
<arg declared_type='int32_t' index='0' name='seed' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKComponent'>
<method selector='didAddToEntity'>
<retval declared_type='void' type='v'/>
</method>
<method selector='entity'>
<retval declared_type='GKEntity * _Nullable' type='@'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type='NSTimeInterval' index='0' name='seconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willRemoveFromEntity'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKComponentSystem'>
<method selector='addComponent:'>
<arg declared_type='ComponentType _Nonnull' index='0' name='component' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addComponentWithEntity:'>
<arg declared_type='GKEntity * _Nonnull' index='0' name='entity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='classForGenericArgumentAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='componentClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='components'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithComponentClass:'>
<arg declared_type='Class _Nonnull' index='0' name='cls' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='NSUInteger' index='0' name='idx' type='I' type64='Q'/>
<retval declared_type='ComponentType _Nonnull' type='@'/>
</method>
<method selector='removeComponent:'>
<arg declared_type='ComponentType _Nonnull' index='0' name='component' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeComponentWithEntity:'>
<arg declared_type='GKEntity * _Nonnull' index='0' name='entity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type='NSTimeInterval' index='0' name='seconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKCompositeBehavior'>
<method selector='behaviorCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='behaviorWithBehaviors:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='behaviors' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='behaviorWithBehaviors:andWeights:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='behaviors' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='weights' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='NSUInteger' index='0' name='idx' type='I' type64='Q'/>
<retval declared_type='GKBehavior * _Nonnull' type='@'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type='GKBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<retval declared_type='NSNumber * _Nonnull' type='@'/>
</method>
<method selector='removeAllBehaviors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeBehavior:'>
<arg declared_type='GKBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObject:forKeyedSubscript:'>
<arg declared_type='NSNumber * _Nonnull' index='0' name='weight' type='@'/>
<arg declared_type='GKBehavior * _Nonnull' index='1' name='behavior' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWeight:forBehavior:'>
<arg declared_type='float' index='0' name='weight' type='f'/>
<arg declared_type='GKBehavior * _Nonnull' index='1' name='behavior' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='weightForBehavior:'>
<arg declared_type='GKBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='GKConstantNoiseSource'>
<method class_method='true' selector='constantNoiseWithValue:'>
<arg declared_type='double' index='0' name='value' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithValue:'>
<arg declared_type='double' index='0' name='value' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setValue:'>
<arg declared_type='double' index='0' name='value' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='value'>
<retval declared_type='double' type='d'/>
</method>
</class>
<class name='GKCylindersNoiseSource'>
<method class_method='true' selector='cylindersNoiseWithFrequency:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='frequency'>
<retval declared_type='double' type='d'/>
</method>
<method selector='initWithFrequency:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setFrequency:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKDecisionNode'>
<method selector='createBranchWithPredicate:attribute:'>
<arg declared_type='NSPredicate * _Nonnull' index='0' name='predicate' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='attribute' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='createBranchWithValue:attribute:'>
<arg declared_type='NSNumber * _Nonnull' index='0' name='value' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='attribute' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='createBranchWithWeight:attribute:'>
<arg declared_type='NSInteger' index='0' name='weight' type='i' type64='q'/>
<arg declared_type='id _Nonnull' index='1' name='attribute' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='GKDecisionTree'>
<method selector='findActionForAnswers:'>
<arg declared_type='NSDictionary,id&gt; * _Nonnull' index='0' name='answers' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithAttribute:'>
<arg declared_type='id _Nonnull' index='0' name='attribute' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithExamples:actions:attributes:'>
<arg declared_type='NSArray&gt; *&gt; * _Nonnull' index='0' name='examples' type='@'/>
<arg declared_type='NSArray&gt; * _Nonnull' index='1' name='actions' type='@'/>
<arg declared_type='NSArray&gt; * _Nonnull' index='2' name='attributes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='randomSource'>
<retval declared_type='GKRandomSource * _Nonnull' type='@'/>
</method>
<method selector='rootNode'>
<retval declared_type='GKDecisionNode * _Nullable' type='@'/>
</method>
<method selector='setRandomSource:'>
<arg declared_type='GKRandomSource * _Nonnull' index='0' name='randomSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKEntity'>
<method selector='addComponent:'>
<arg declared_type='GKComponent * _Nonnull' index='0' name='component' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='componentForClass:'>
<arg declared_type='Class _Nonnull' index='0' name='componentClass' type='#'/>
<retval declared_type='GKComponent * _Nullable' type='@'/>
</method>
<method selector='components'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='entity'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='removeComponentForClass:'>
<arg declared_type='Class _Nonnull' index='0' name='componentClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type='NSTimeInterval' index='0' name='seconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKGaussianDistribution'>
<method selector='deviation'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithRandomSource:lowestValue:highestValue:'>
<arg declared_type='id _Nonnull' index='0' name='source' type='@'/>
<arg declared_type='NSInteger' index='1' name='lowestInclusive' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='highestInclusive' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithRandomSource:mean:deviation:'>
<arg declared_type='id _Nonnull' index='0' name='source' type='@'/>
<arg declared_type='float' index='1' name='mean' type='f'/>
<arg declared_type='float' index='2' name='deviation' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='mean'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='GKGoal'>
<method class_method='true' selector='goalToAlignWithAgents:maxDistance:maxAngle:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='agents' type='@'/>
<arg declared_type='float' index='1' name='maxDistance' type='f'/>
<arg declared_type='float' index='2' name='maxAngle' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='goalToAvoidAgents:maxPredictionTime:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='agents' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='maxPredictionTime' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='goalToAvoidObstacles:maxPredictionTime:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='obstacles' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='maxPredictionTime' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='goalToCohereWithAgents:maxDistance:maxAngle:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='agents' type='@'/>
<arg declared_type='float' index='1' name='maxDistance' type='f'/>
<arg declared_type='float' index='2' name='maxAngle' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='goalToFleeAgent:'>
<arg declared_type='GKAgent * _Nonnull' index='0' name='agent' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='goalToFollowPath:maxPredictionTime:forward:'>
<arg declared_type='GKPath * _Nonnull' index='0' name='path' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='maxPredictionTime' type='d'/>
<arg declared_type='BOOL' index='2' name='forward' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='goalToInterceptAgent:maxPredictionTime:'>
<arg declared_type='GKAgent * _Nonnull' index='0' name='target' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='maxPredictionTime' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='goalToReachTargetSpeed:'>
<arg declared_type='float' index='0' name='targetSpeed' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='goalToSeekAgent:'>
<arg declared_type='GKAgent * _Nonnull' index='0' name='agent' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='goalToSeparateFromAgents:maxDistance:maxAngle:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='agents' type='@'/>
<arg declared_type='float' index='1' name='maxDistance' type='f'/>
<arg declared_type='float' index='2' name='maxAngle' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='goalToStayOnPath:maxPredictionTime:'>
<arg declared_type='GKPath * _Nonnull' index='0' name='path' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='maxPredictionTime' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='goalToWander:'>
<arg declared_type='float' index='0' name='speed' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='GKGraph'>
<method selector='addNodes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='nodes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectNodeToLowestCostNode:bidirectional:'>
<arg declared_type='GKGraphNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='BOOL' index='1' name='bidirectional' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='findPathFromNode:toNode:'>
<arg declared_type='GKGraphNode * _Nonnull' index='0' name='startNode' type='@'/>
<arg declared_type='GKGraphNode * _Nonnull' index='1' name='endNode' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='graphWithNodes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='nodes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithNodes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='nodes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='nodes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='removeNodes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='nodes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKGraphNode'>
<method selector='addConnectionsToNodes:bidirectional:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='nodes' type='@'/>
<arg declared_type='BOOL' index='1' name='bidirectional' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectedNodes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='costToNode:'>
<arg declared_type='GKGraphNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='estimatedCostToNode:'>
<arg declared_type='GKGraphNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='findPathFromNode:'>
<arg declared_type='GKGraphNode * _Nonnull' index='0' name='startNode' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='findPathToNode:'>
<arg declared_type='GKGraphNode * _Nonnull' index='0' name='goalNode' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='removeConnectionsToNodes:bidirectional:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='nodes' type='@'/>
<arg declared_type='BOOL' index='1' name='bidirectional' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKGraphNode2D'>
<method selector='initWithPoint:'>
<arg declared_type='vector_float2' index='0' name='point' type='{_vector_float2=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='nodeWithPoint:'>
<arg declared_type='vector_float2' index='0' name='point' type='{_vector_float2=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='position'>
<retval declared_type='vector_float2' type='{_vector_float2=ff}'/>
</method>
<method selector='setPosition:'>
<arg declared_type='vector_float2' index='0' name='position' type='{_vector_float2=ff}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKGraphNode3D'>
<method selector='initWithPoint:'>
<arg declared_type='vector_float3' index='0' name='point' type='{_vector_float3=fff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='nodeWithPoint:'>
<arg declared_type='vector_float3' index='0' name='point' type='{_vector_float3=fff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='position'>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
<method selector='setPosition:'>
<arg declared_type='vector_float3' index='0' name='position' type='{_vector_float3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKGridGraph'>
<method selector='classForGenericArgumentAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='connectNodeToAdjacentNodes:'>
<arg declared_type='GKGridGraphNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='diagonalsAllowed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='graphFromGridStartingAt:width:height:diagonalsAllowed:'>
<arg declared_type='vector_int2' index='0' name='position' type='{_vector_int2=ii}'/>
<arg declared_type='int' index='1' name='width' type='i'/>
<arg declared_type='int' index='2' name='height' type='i'/>
<arg declared_type='BOOL' index='3' name='diagonalsAllowed' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='graphFromGridStartingAt:width:height:diagonalsAllowed:nodeClass:'>
<arg declared_type='vector_int2' index='0' name='position' type='{_vector_int2=ii}'/>
<arg declared_type='int' index='1' name='width' type='i'/>
<arg declared_type='int' index='2' name='height' type='i'/>
<arg declared_type='BOOL' index='3' name='diagonalsAllowed' type='B'/>
<arg declared_type='Class _Nonnull' index='4' name='nodeClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='gridHeight'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='gridOrigin'>
<retval declared_type='vector_int2' type='{_vector_int2=ii}'/>
</method>
<method selector='gridWidth'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initFromGridStartingAt:width:height:diagonalsAllowed:'>
<arg declared_type='vector_int2' index='0' name='position' type='{_vector_int2=ii}'/>
<arg declared_type='int' index='1' name='width' type='i'/>
<arg declared_type='int' index='2' name='height' type='i'/>
<arg declared_type='BOOL' index='3' name='diagonalsAllowed' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initFromGridStartingAt:width:height:diagonalsAllowed:nodeClass:'>
<arg declared_type='vector_int2' index='0' name='position' type='{_vector_int2=ii}'/>
<arg declared_type='int' index='1' name='width' type='i'/>
<arg declared_type='int' index='2' name='height' type='i'/>
<arg declared_type='BOOL' index='3' name='diagonalsAllowed' type='B'/>
<arg declared_type='Class _Nonnull' index='4' name='nodeClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='nodeAtGridPosition:'>
<arg declared_type='vector_int2' index='0' name='position' type='{_vector_int2=ii}'/>
<retval declared_type='NodeType _Nullable' type='@'/>
</method>
</class>
<class name='GKGridGraphNode'>
<method selector='gridPosition'>
<retval declared_type='vector_int2' type='{_vector_int2=ii}'/>
</method>
<method selector='initWithGridPosition:'>
<arg declared_type='vector_int2' index='0' name='gridPosition' type='{_vector_int2=ii}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='nodeWithGridPosition:'>
<arg declared_type='vector_int2' index='0' name='gridPosition' type='{_vector_int2=ii}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='GKLinearCongruentialRandomSource'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSeed:'>
<arg declared_type='uint64_t' index='0' name='seed' type='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='seed'>
<retval declared_type='uint64_t' type='Q'/>
</method>
<method selector='setSeed:'>
<arg declared_type='uint64_t' index='0' name='seed' type='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKMersenneTwisterRandomSource'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSeed:'>
<arg declared_type='uint64_t' index='0' name='seed' type='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='seed'>
<retval declared_type='uint64_t' type='Q'/>
</method>
<method selector='setSeed:'>
<arg declared_type='uint64_t' index='0' name='seed' type='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKMeshGraph'>
<method selector='addObstacles:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='obstacles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bufferRadius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='classForGenericArgumentAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='connectNodeUsingObstacles:'>
<arg declared_type='NodeType _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='graphWithBufferRadius:minCoordinate:maxCoordinate:'>
<arg declared_type='float' index='0' name='bufferRadius' type='f'/>
<arg declared_type='vector_float2' index='1' name='min' type='{_vector_float2=ff}'/>
<arg declared_type='vector_float2' index='2' name='max' type='{_vector_float2=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='graphWithBufferRadius:minCoordinate:maxCoordinate:nodeClass:'>
<arg declared_type='float' index='0' name='bufferRadius' type='f'/>
<arg declared_type='vector_float2' index='1' name='min' type='{_vector_float2=ff}'/>
<arg declared_type='vector_float2' index='2' name='max' type='{_vector_float2=ff}'/>
<arg declared_type='Class _Nonnull' index='3' name='nodeClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithBufferRadius:minCoordinate:maxCoordinate:'>
<arg declared_type='float' index='0' name='bufferRadius' type='f'/>
<arg declared_type='vector_float2' index='1' name='min' type='{_vector_float2=ff}'/>
<arg declared_type='vector_float2' index='2' name='max' type='{_vector_float2=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithBufferRadius:minCoordinate:maxCoordinate:nodeClass:'>
<arg declared_type='float' index='0' name='bufferRadius' type='f'/>
<arg declared_type='vector_float2' index='1' name='min' type='{_vector_float2=ff}'/>
<arg declared_type='vector_float2' index='2' name='max' type='{_vector_float2=ff}'/>
<arg declared_type='Class _Nonnull' index='3' name='nodeClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='obstacles'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='removeObstacles:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='obstacles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTriangulationMode:'>
<arg declared_type='GKMeshGraphTriangulationMode' index='0' name='triangulationMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='triangleAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='GKTriangle' type='{GKTriangle=[3{?=fff}]}'/>
</method>
<method selector='triangleCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='triangulate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='triangulationMode'>
<retval declared_type='GKMeshGraphTriangulationMode' type='I' type64='Q'/>
</method>
</class>
<class name='GKMinmaxStrategist'>
<method selector='bestMoveForPlayer:'>
<arg declared_type='id _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='maxLookAheadDepth'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='randomMoveForPlayer:fromNumberOfBestMoves:'>
<arg declared_type='id _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSInteger' index='1' name='numMovesToConsider' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setMaxLookAheadDepth:'>
<arg declared_type='NSInteger' index='0' name='maxLookAheadDepth' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKMonteCarloStrategist'>
<method selector='budget'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='explorationParameter'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setBudget:'>
<arg declared_type='NSUInteger' index='0' name='budget' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExplorationParameter:'>
<arg declared_type='NSUInteger' index='0' name='explorationParameter' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKNSPredicateRule'>
<method selector='evaluatePredicateWithSystem:'>
<arg declared_type='GKRuleSystem * _Nonnull' index='0' name='system' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithPredicate:'>
<arg declared_type='NSPredicate * _Nonnull' index='0' name='predicate' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='predicate'>
<retval declared_type='NSPredicate * _Nonnull' type='@'/>
</method>
</class>
<class name='GKNoise'>
<method selector='addWithNoise:'>
<arg declared_type='GKNoise * _Nonnull' index='0' name='noise' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyAbsoluteValue'>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyTurbulenceWithFrequency:power:roughness:seed:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<arg declared_type='double' index='1' name='power' type='d'/>
<arg declared_type='int' index='2' name='roughness' type='i'/>
<arg declared_type='int32_t' index='3' name='seed' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clampWithLowerBound:upperBound:'>
<arg declared_type='double' index='0' name='lowerBound' type='d'/>
<arg declared_type='double' index='1' name='upperBound' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='displaceXWithNoise:yWithNoise:zWithNoise:'>
<arg declared_type='GKNoise * _Nonnull' index='0' name='xDisplacementNoise' type='@'/>
<arg declared_type='GKNoise * _Nonnull' index='1' name='yDisplacementNoise' type='@'/>
<arg declared_type='GKNoise * _Nonnull' index='2' name='zDisplacementNoise' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='gradientColors'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithNoiseSource:'>
<arg declared_type='GKNoiseSource * _Nonnull' index='0' name='noiseSource' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithNoiseSource:gradientColors:'>
<arg declared_type='GKNoiseSource * _Nonnull' index='0' name='noiseSource' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='gradientColors' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='invert'>
<retval declared_type='void' type='v'/>
</method>
<method selector='maximumWithNoise:'>
<arg declared_type='GKNoise * _Nonnull' index='0' name='noise' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='minimumWithNoise:'>
<arg declared_type='GKNoise * _Nonnull' index='0' name='noise' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveBy:'>
<arg declared_type='vector_double3' index='0' name='delta' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method selector='multiplyWithNoise:'>
<arg declared_type='GKNoise * _Nonnull' index='0' name='noise' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='noiseWithComponentNoises:selectionNoise:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='noises' type='@'/>
<arg declared_type='GKNoise * _Nonnull' index='1' name='selectionNoise' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='noiseWithComponentNoises:selectionNoise:componentBoundaries:boundaryBlendDistances:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='noises' type='@'/>
<arg declared_type='GKNoise * _Nonnull' index='1' name='selectionNoise' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='componentBoundaries' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='3' name='blendDistances' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='noiseWithNoiseSource:'>
<arg declared_type='GKNoiseSource * _Nonnull' index='0' name='noiseSource' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='noiseWithNoiseSource:gradientColors:'>
<arg declared_type='GKNoiseSource * _Nonnull' index='0' name='noiseSource' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='gradientColors' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='raiseToPower:'>
<arg declared_type='double' index='0' name='power' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='raiseToPowerWithNoise:'>
<arg declared_type='GKNoise * _Nonnull' index='0' name='noise' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='remapValuesToCurveWithControlPoints:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='controlPoints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='remapValuesToTerracesWithPeaks:terracesInverted:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='peakInputValues' type='@'/>
<arg declared_type='BOOL' index='1' name='inverted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotateBy:'>
<arg declared_type='vector_double3' index='0' name='radians' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scaleBy:'>
<arg declared_type='vector_double3' index='0' name='factor' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGradientColors:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='gradientColors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueAtPosition:'>
<arg declared_type='vector_float2' index='0' name='position' type='{_vector_float2=ff}'/>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='GKNoiseMap'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithNoise:'>
<arg declared_type='GKNoise * _Nonnull' index='0' name='noise' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithNoise:size:origin:sampleCount:seamless:'>
<arg declared_type='GKNoise * _Nonnull' index='0' name='noise' type='@'/>
<arg declared_type='vector_double2' index='1' name='size' type=''/>
<arg declared_type='vector_double2' index='2' name='origin' type=''/>
<arg declared_type='vector_int2' index='3' name='sampleCount' type='{_vector_int2=ii}'/>
<arg declared_type='BOOL' index='4' name='seamless' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='interpolatedValueAtPosition:'>
<arg declared_type='vector_float2' index='0' name='position' type='{_vector_float2=ff}'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='isSeamless'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='noiseMapWithNoise:'>
<arg declared_type='GKNoise * _Nonnull' index='0' name='noise' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='noiseMapWithNoise:size:origin:sampleCount:seamless:'>
<arg declared_type='GKNoise * _Nonnull' index='0' name='noise' type='@'/>
<arg declared_type='vector_double2' index='1' name='size' type=''/>
<arg declared_type='vector_double2' index='2' name='origin' type=''/>
<arg declared_type='vector_int2' index='3' name='sampleCount' type='{_vector_int2=ii}'/>
<arg declared_type='BOOL' index='4' name='seamless' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='origin'>
<retval declared_type='vector_double2' type=''/>
</method>
<method selector='sampleCount'>
<retval declared_type='vector_int2' type='{_vector_int2=ii}'/>
</method>
<method selector='setValue:atPosition:'>
<arg declared_type='float' index='0' name='value' type='f'/>
<arg declared_type='vector_int2' index='1' name='position' type='{_vector_int2=ii}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='vector_double2' type=''/>
</method>
<method selector='valueAtPosition:'>
<arg declared_type='vector_int2' index='0' name='position' type='{_vector_int2=ii}'/>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='GKObstacleGraph'>
<method selector='addObstacles:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='obstacles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bufferRadius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='classForGenericArgumentAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='connectNodeUsingObstacles:'>
<arg declared_type='NodeType _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectNodeUsingObstacles:ignoringBufferRadiusOfObstacles:'>
<arg declared_type='NodeType _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='obstaclesBufferRadiusToIgnore' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectNodeUsingObstacles:ignoringObstacles:'>
<arg declared_type='NodeType _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='obstaclesToIgnore' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='graphWithObstacles:bufferRadius:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='obstacles' type='@'/>
<arg declared_type='float' index='1' name='bufferRadius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='graphWithObstacles:bufferRadius:nodeClass:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='obstacles' type='@'/>
<arg declared_type='float' index='1' name='bufferRadius' type='f'/>
<arg declared_type='Class _Nonnull' index='2' name='nodeClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithObstacles:bufferRadius:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='obstacles' type='@'/>
<arg declared_type='float' index='1' name='bufferRadius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithObstacles:bufferRadius:nodeClass:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='obstacles' type='@'/>
<arg declared_type='float' index='1' name='bufferRadius' type='f'/>
<arg declared_type='Class _Nonnull' index='2' name='nodeClass' type='#'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isConnectionLockedFromNode:toNode:'>
<arg declared_type='NodeType _Nonnull' index='0' name='startNode' type='@'/>
<arg declared_type='NodeType _Nonnull' index='1' name='endNode' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lockConnectionFromNode:toNode:'>
<arg declared_type='NodeType _Nonnull' index='0' name='startNode' type='@'/>
<arg declared_type='NodeType _Nonnull' index='1' name='endNode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='nodesForObstacle:'>
<arg declared_type='GKPolygonObstacle * _Nonnull' index='0' name='obstacle' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='obstacles'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='removeAllObstacles'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObstacles:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='obstacles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockConnectionFromNode:toNode:'>
<arg declared_type='NodeType _Nonnull' index='0' name='startNode' type='@'/>
<arg declared_type='NodeType _Nonnull' index='1' name='endNode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKOctree'>
<method selector='addElement:withBox:'>
<arg declared_type='ElementType _Nonnull' index='0' name='element' type='@'/>
<arg declared_type='GKBox' index='1' name='box' type='{GKBox={_vector_float3=fff}{_vector_float3=fff}}'/>
<retval declared_type='GKOctreeNode * _Nonnull' type='@'/>
</method>
<method selector='addElement:withPoint:'>
<arg declared_type='ElementType _Nonnull' index='0' name='element' type='@'/>
<arg declared_type='vector_float3' index='1' name='point' type='{_vector_float3=fff}'/>
<retval declared_type='GKOctreeNode * _Nonnull' type='@'/>
</method>
<method selector='elementsAtPoint:'>
<arg declared_type='vector_float3' index='0' name='point' type='{_vector_float3=fff}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='elementsInBox:'>
<arg declared_type='GKBox' index='0' name='box' type='{GKBox={_vector_float3=fff}{_vector_float3=fff}}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithBoundingBox:minimumCellSize:'>
<arg declared_type='GKBox' index='0' name='box' type='{GKBox={_vector_float3=fff}{_vector_float3=fff}}'/>
<arg declared_type='float' index='1' name='minCellSize' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='octreeWithBoundingBox:minimumCellSize:'>
<arg declared_type='GKBox' index='0' name='box' type='{GKBox={_vector_float3=fff}{_vector_float3=fff}}'/>
<arg declared_type='float' index='1' name='minCellSize' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='removeElement:'>
<arg declared_type='ElementType _Nonnull' index='0' name='element' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeElement:withNode:'>
<arg declared_type='ElementType _Nonnull' index='0' name='element' type='@'/>
<arg declared_type='GKOctreeNode * _Nonnull' index='1' name='node' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='GKOctreeNode'>
<method selector='box'>
<retval declared_type='struct GKBox' type='{GKBox={?=fff}{?=fff}}'/>
</method>
</class>
<class name='GKPath'>
<method selector='float2AtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='vector_float2' type='{_vector_float2=ff}'/>
</method>
<method selector='float3AtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
<method selector='initWithFloat3Points:count:radius:cyclical:'>
<arg declared_type='vector_float3 * _Nonnull' index='0' name='points' type='^{_vector_float3=fff}'/>
<arg declared_type='size_t' index='1' name='count' type='L' type64='Q'/>
<arg declared_type='float' index='2' name='radius' type='f'/>
<arg declared_type='BOOL' index='3' name='cyclical' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithGraphNodes:radius:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='graphNodes' type='@'/>
<arg declared_type='float' index='1' name='radius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithPoints:count:radius:cyclical:'>
<arg declared_type='vector_float2 * _Nonnull' index='0' name='points' type='^{_vector_float2=ff}'/>
<arg declared_type='size_t' index='1' name='count' type='L' type64='Q'/>
<arg declared_type='float' index='2' name='radius' type='f'/>
<arg declared_type='BOOL' index='3' name='cyclical' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isCyclical'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='numPoints'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='pathWithFloat3Points:count:radius:cyclical:'>
<arg declared_type='vector_float3 * _Nonnull' index='0' name='points' type='^{_vector_float3=fff}'/>
<arg declared_type='size_t' index='1' name='count' type='L' type64='Q'/>
<arg declared_type='float' index='2' name='radius' type='f'/>
<arg declared_type='BOOL' index='3' name='cyclical' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='pathWithGraphNodes:radius:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='graphNodes' type='@'/>
<arg declared_type='float' index='1' name='radius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='pathWithPoints:count:radius:cyclical:'>
<arg declared_type='vector_float2 * _Nonnull' index='0' name='points' type='^{_vector_float2=ff}'/>
<arg declared_type='size_t' index='1' name='count' type='L' type64='Q'/>
<arg declared_type='float' index='2' name='radius' type='f'/>
<arg declared_type='BOOL' index='3' name='cyclical' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='pointAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='vector_float2' type='{_vector_float2=ff}'/>
</method>
<method selector='radius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setCyclical:'>
<arg declared_type='BOOL' index='0' name='cyclical' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type='float' index='0' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKPerlinNoiseSource'>
<method selector='initWithFrequency:octaveCount:persistence:lacunarity:seed:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<arg declared_type='NSInteger' index='1' name='octaveCount' type='i' type64='q'/>
<arg declared_type='double' index='2' name='persistence' type='d'/>
<arg declared_type='double' index='3' name='lacunarity' type='d'/>
<arg declared_type='int32_t' index='4' name='seed' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='perlinNoiseSourceWithFrequency:octaveCount:persistence:lacunarity:seed:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<arg declared_type='NSInteger' index='1' name='octaveCount' type='i' type64='q'/>
<arg declared_type='double' index='2' name='persistence' type='d'/>
<arg declared_type='double' index='3' name='lacunarity' type='d'/>
<arg declared_type='int32_t' index='4' name='seed' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='persistence'>
<retval declared_type='double' type='d'/>
</method>
<method selector='setPersistence:'>
<arg declared_type='double' index='0' name='persistence' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKPolygonObstacle'>
<method selector='initWithPoints:count:'>
<arg declared_type='vector_float2 * _Nonnull' index='0' name='points' type='^{_vector_float2=ff}'/>
<arg declared_type='size_t' index='1' name='numPoints' type='L' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='obstacleWithPoints:count:'>
<arg declared_type='vector_float2 * _Nonnull' index='0' name='points' type='^{_vector_float2=ff}'/>
<arg declared_type='size_t' index='1' name='numPoints' type='L' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='vertexAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='vector_float2' type='{_vector_float2=ff}'/>
</method>
<method selector='vertexCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='GKQuadtree'>
<method selector='addElement:withPoint:'>
<arg declared_type='ElementType _Nonnull' index='0' name='element' type='@'/>
<arg declared_type='vector_float2' index='1' name='point' type='{_vector_float2=ff}'/>
<retval declared_type='GKQuadtreeNode * _Nonnull' type='@'/>
</method>
<method selector='addElement:withQuad:'>
<arg declared_type='ElementType _Nonnull' index='0' name='element' type='@'/>
<arg declared_type='GKQuad' index='1' name='quad' type='{GKQuad={_vector_float2=ff}{_vector_float2=ff}}'/>
<retval declared_type='GKQuadtreeNode * _Nonnull' type='@'/>
</method>
<method selector='elementsAtPoint:'>
<arg declared_type='vector_float2' index='0' name='point' type='{_vector_float2=ff}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='elementsInQuad:'>
<arg declared_type='GKQuad' index='0' name='quad' type='{GKQuad={_vector_float2=ff}{_vector_float2=ff}}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithBoundingQuad:minimumCellSize:'>
<arg declared_type='GKQuad' index='0' name='quad' type='{GKQuad={_vector_float2=ff}{_vector_float2=ff}}'/>
<arg declared_type='float' index='1' name='minCellSize' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='quadtreeWithBoundingQuad:minimumCellSize:'>
<arg declared_type='GKQuad' index='0' name='quad' type='{GKQuad={_vector_float2=ff}{_vector_float2=ff}}'/>
<arg declared_type='float' index='1' name='minCellSize' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='removeElement:'>
<arg declared_type='ElementType _Nonnull' index='0' name='element' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeElement:withNode:'>
<arg declared_type='ElementType _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='GKQuadtreeNode * _Nonnull' index='1' name='node' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='GKQuadtreeNode'>
<method selector='quad'>
<retval declared_type='GKQuad' type='{GKQuad={_vector_float2=ff}{_vector_float2=ff}}'/>
</method>
</class>
<class name='GKRTree'>
<method selector='addElement:boundingRectMin:boundingRectMax:splitStrategy:'>
<arg declared_type='ElementType _Nonnull' index='0' name='element' type='@'/>
<arg declared_type='vector_float2' index='1' name='boundingRectMin' type='{_vector_float2=ff}'/>
<arg declared_type='vector_float2' index='2' name='boundingRectMax' type='{_vector_float2=ff}'/>
<arg declared_type='GKRTreeSplitStrategy' index='3' name='splitStrategy' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='elementsInBoundingRectMin:rectMax:'>
<arg declared_type='vector_float2' index='0' name='rectMin' type='{_vector_float2=ff}'/>
<arg declared_type='vector_float2' index='1' name='rectMax' type='{_vector_float2=ff}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithMaxNumberOfChildren:'>
<arg declared_type='NSUInteger' index='0' name='maxNumberOfChildren' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='queryReserve'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='removeElement:boundingRectMin:boundingRectMax:'>
<arg declared_type='ElementType _Nonnull' index='0' name='element' type='@'/>
<arg declared_type='vector_float2' index='1' name='boundingRectMin' type='{_vector_float2=ff}'/>
<arg declared_type='vector_float2' index='2' name='boundingRectMax' type='{_vector_float2=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueryReserve:'>
<arg declared_type='NSUInteger' index='0' name='queryReserve' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='treeWithMaxNumberOfChildren:'>
<arg declared_type='NSUInteger' index='0' name='maxNumberOfChildren' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='GKRandomDistribution'>
<method class_method='true' selector='d20'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='d6'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='distributionForDieWithSideCount:'>
<arg declared_type='NSInteger' index='0' name='sideCount' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='distributionWithLowestValue:highestValue:'>
<arg declared_type='NSInteger' index='0' name='lowestInclusive' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='highestInclusive' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='highestValue'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithRandomSource:lowestValue:highestValue:'>
<arg declared_type='id _Nonnull' index='0' name='source' type='@'/>
<arg declared_type='NSInteger' index='1' name='lowestInclusive' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='highestInclusive' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='lowestValue'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='nextBool'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nextInt'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='nextIntWithUpperBound:'>
<arg declared_type='NSUInteger' index='0' name='upperBound' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='nextUniform'>
<retval declared_type='float' type='f'/>
</method>
<method selector='numberOfPossibleOutcomes'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='GKRandomSource'>
<method selector='arrayByShufflingObjectsInArray:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='array' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='sharedRandom'>
<retval declared_type='GKRandomSource * _Nonnull' type='@'/>
</method>
</class>
<class name='GKRidgedNoiseSource'>
<method selector='initWithFrequency:octaveCount:lacunarity:seed:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<arg declared_type='NSInteger' index='1' name='octaveCount' type='i' type64='q'/>
<arg declared_type='double' index='2' name='lacunarity' type='d'/>
<arg declared_type='int32_t' index='3' name='seed' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='ridgedNoiseSourceWithFrequency:octaveCount:lacunarity:seed:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<arg declared_type='NSInteger' index='1' name='octaveCount' type='i' type64='q'/>
<arg declared_type='double' index='2' name='lacunarity' type='d'/>
<arg declared_type='int32_t' index='3' name='seed' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='GKRule'>
<method selector='evaluatePredicateWithSystem:'>
<arg declared_type='GKRuleSystem * _Nonnull' index='0' name='system' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performActionWithSystem:'>
<arg declared_type='GKRuleSystem * _Nonnull' index='0' name='system' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='ruleWithBlockPredicate:action:'>
<arg declared_type='BOOL (^ _Nonnull)(GKRuleSystem * _Nonnull)' function_pointer='true' index='0' name='predicate' type='@?'>
<arg declared_type='GKRuleSystem * _Nonnull' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<arg declared_type='void (^ _Nonnull)(GKRuleSystem * _Nonnull)' function_pointer='true' index='1' name='action' type='@?'>
<arg declared_type='GKRuleSystem * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='ruleWithPredicate:assertingFact:grade:'>
<arg declared_type='NSPredicate * _Nonnull' index='0' name='predicate' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='fact' type='@'/>
<arg declared_type='float' index='2' name='grade' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='ruleWithPredicate:retractingFact:grade:'>
<arg declared_type='NSPredicate * _Nonnull' index='0' name='predicate' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='fact' type='@'/>
<arg declared_type='float' index='2' name='grade' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='salience'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setSalience:'>
<arg declared_type='NSInteger' index='0' name='salience' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKRuleSystem'>
<method selector='addRule:'>
<arg declared_type='GKRule * _Nonnull' index='0' name='rule' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRulesFromArray:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='rules' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='agenda'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='assertFact:'>
<arg declared_type='id _Nonnull' index='0' name='fact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assertFact:grade:'>
<arg declared_type='id _Nonnull' index='0' name='fact' type='@'/>
<arg declared_type='float' index='1' name='grade' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='evaluate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='executed'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='facts'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='gradeForFact:'>
<arg declared_type='id _Nonnull' index='0' name='fact' type='@'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maximumGradeForFacts:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='facts' type='@'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='minimumGradeForFacts:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='facts' type='@'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='removeAllRules'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='retractFact:'>
<arg declared_type='id _Nonnull' index='0' name='fact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='retractFact:grade:'>
<arg declared_type='id _Nonnull' index='0' name='fact' type='@'/>
<arg declared_type='float' index='1' name='grade' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rules'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='state'>
<retval declared_type='NSMutableDictionary * _Nonnull' type='@'/>
</method>
</class>
<class name='GKSKNodeComponent'>
<method class_method='true' selector='componentWithNode:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithNode:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='node'>
<retval declared_type='SKNode * _Nonnull' type='@'/>
</method>
<method selector='setNode:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKScene'>
<method selector='addEntity:'>
<arg declared_type='GKEntity * _Nonnull' index='0' name='entity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addGraph:name:'>
<arg declared_type='GKGraph * _Nonnull' index='0' name='graph' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='entities'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='graphs'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='removeEntity:'>
<arg declared_type='GKEntity * _Nonnull' index='0' name='entity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeGraph:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rootNode'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='sceneWithFileNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='filename' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='setRootNode:'>
<arg declared_type='id _Nullable' index='0' name='rootNode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKSphereObstacle'>
<method selector='initWithRadius:'>
<arg declared_type='float' index='0' name='radius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='obstacleWithRadius:'>
<arg declared_type='float' index='0' name='radius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='position'>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
<method selector='radius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPosition:'>
<arg declared_type='vector_float3' index='0' name='position' type='{_vector_float3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type='float' index='0' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKSpheresNoiseSource'>
<method selector='frequency'>
<retval declared_type='double' type='d'/>
</method>
<method selector='initWithFrequency:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setFrequency:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='spheresNoiseWithFrequency:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='GKState'>
<method selector='didEnterWithPreviousState:'>
<arg declared_type='GKState * _Nullable' index='0' name='previousState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isValidNextState:'>
<arg declared_type='Class _Nonnull' index='0' name='stateClass' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='state'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='stateMachine'>
<retval declared_type='GKStateMachine * _Nullable' type='@'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type='NSTimeInterval' index='0' name='seconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willExitWithNextState:'>
<arg declared_type='GKState * _Nonnull' index='0' name='nextState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKStateMachine'>
<method selector='canEnterState:'>
<arg declared_type='Class _Nonnull' index='0' name='stateClass' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentState'>
<retval declared_type='GKState * _Nullable' type='@'/>
</method>
<method selector='enterState:'>
<arg declared_type='Class _Nonnull' index='0' name='stateClass' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithStates:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='states' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='stateForClass:'>
<arg declared_type='Class _Nonnull' index='0' name='stateClass' type='#'/>
<retval declared_type='GKState * _Nullable' type='@'/>
</method>
<method class_method='true' selector='stateMachineWithStates:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='states' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GKVoronoiNoiseSource'>
<method selector='displacement'>
<retval declared_type='double' type='d'/>
</method>
<method selector='frequency'>
<retval declared_type='double' type='d'/>
</method>
<method selector='initWithFrequency:displacement:distanceEnabled:seed:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<arg declared_type='double' index='1' name='displacement' type='d'/>
<arg declared_type='BOOL' index='2' name='distanceEnabled' type='B'/>
<arg declared_type='int32_t' index='3' name='seed' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isDistanceEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='seed'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='setDisplacement:'>
<arg declared_type='double' index='0' name='displacement' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDistanceEnabled:'>
<arg declared_type='BOOL' index='0' name='distanceEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrequency:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeed:'>
<arg declared_type='int32_t' index='0' name='seed' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='voronoiNoiseWithFrequency:displacement:distanceEnabled:seed:'>
<arg declared_type='double' index='0' name='frequency' type='d'/>
<arg declared_type='double' index='1' name='displacement' type='d'/>
<arg declared_type='BOOL' index='2' name='distanceEnabled' type='B'/>
<arg declared_type='int32_t' index='3' name='seed' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='NSArray'>
<method selector='shuffledArray'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='shuffledArrayWithRandomSource:'>
<arg declared_type='GKRandomSource * _Nonnull' index='0' name='randomSource' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='activePlayer'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='agentDidUpdate:'>
<arg declared_type='GKAgent * _Nonnull' index='0' name='agent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='agentWillUpdate:'>
<arg declared_type='GKAgent * _Nonnull' index='0' name='agent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyGameModelUpdate:'>
<arg declared_type='id _Nonnull' index='0' name='gameModelUpdate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bestMoveForActivePlayer'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='gameModel'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='gameModelUpdatesForPlayer:'>
<arg declared_type='id _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='isLossForPlayer:'>
<arg declared_type='id _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isWinForPlayer:'>
<arg declared_type='id _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nextBool'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nextInt'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='nextIntWithUpperBound:'>
<arg declared_type='NSUInteger' index='0' name='upperBound' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='nextUniform'>
<retval declared_type='float' type='f'/>
</method>
<method selector='playerId'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='players'>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='randomSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='scoreForPlayer:'>
<arg declared_type='id _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setGameModel:'>
<arg declared_type='id _Nullable' index='0' name='gameModel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRandomSource:'>
<arg declared_type='id _Nullable' index='0' name='randomSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg declared_type='NSInteger' index='0' name='value' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unapplyGameModelUpdate:'>
<arg declared_type='id _Nonnull' index='0' name='gameModelUpdate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='value'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='SKNode'>
<method selector='entity'>
<retval declared_type='GKEntity * _Nullable' type='@'/>
</method>
<method class_method='true' selector='obstaclesFromNodeBounds:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='nodes' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='obstaclesFromNodePhysicsBodies:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='nodes' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='obstaclesFromSpriteTextures:accuracy:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='sprites' type='@'/>
<arg declared_type='float' index='1' name='accuracy' type='f'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setEntity:'>
<arg declared_type='GKEntity * _Nullable' index='0' name='entity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SKTexture'>
<method class_method='true' selector='textureWithNoiseMap:'>
<arg declared_type='GKNoiseMap * _Nonnull' index='0' name='noiseMap' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SKTileMapNode'>
<method class_method='true' selector='tileMapNodesWithTileSet:columns:rows:tileSize:fromNoiseMap:tileTypeNoiseMapThresholds:'>
<arg declared_type='SKTileSet * _Nonnull' index='0' name='tileSet' type='@'/>
<arg declared_type='NSUInteger' index='1' name='columns' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='rows' type='I' type64='Q'/>
<arg declared_type='CGSize' index='3' name='tileSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='GKNoiseMap * _Nonnull' index='4' name='noiseMap' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='5' name='thresholds' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<informal_protocol name='GKAgentDelegate'>
<method selector='agentDidUpdate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='GKAgent * _Nonnull' index='0' name='agent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='agentWillUpdate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='GKAgent * _Nonnull' index='0' name='agent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='GKGameModel'>
<method selector='activePlayer' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='applyGameModelUpdate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='gameModelUpdate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='gameModelUpdatesForPlayer:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='isLossForPlayer:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isWinForPlayer:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='players' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='scoreForPlayer:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setGameModel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='gameModel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unapplyGameModelUpdate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='gameModelUpdate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='GKGameModelPlayer'>
<method selector='playerId' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='GKGameModelUpdate'>
<method selector='setValue:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='value' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='value' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='GKRandom'>
<method selector='nextBool' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nextInt' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='nextIntWithUpperBound:' type='I12@0:4I8' type64='Q24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='upperBound' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='nextUniform' type='f8@0:4' type64='f16@0:8'>
<retval declared_type='float' type='f'/>
</method>
</informal_protocol>
<informal_protocol name='GKStrategist'>
<method selector='bestMoveForActivePlayer' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='gameModel' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='randomSource' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setGameModel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='gameModel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRandomSource:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='randomSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
