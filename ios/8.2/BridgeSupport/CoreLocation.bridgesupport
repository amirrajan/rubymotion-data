<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/CoreBluetooth.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<struct name='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=&quot;latitude&quot;d&quot;longitude&quot;d}'>
<field declared_type='CLLocationDegrees' name='latitude' type='d'/>
<field declared_type='CLLocationDegrees' name='longitude' type='d'/>
</struct>
<constant const='true' declared_type='CLLocationDistance' name='CLLocationDistanceMax' type='d'/>
<constant const='true' declared_type='NSTimeInterval' name='CLTimeIntervalMax' type='d'/>
<constant const='true' declared_type='CLLocationDistance' name='kCLDistanceFilterNone' type='d'/>
<constant const='true' declared_type='NSString*' name='kCLErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='kCLErrorUserInfoAlternateRegionKey' type='@'/>
<constant const='true' declared_type='CLLocationDegrees' name='kCLHeadingFilterNone' type='d'/>
<constant const='true' declared_type='CLLocationAccuracy' name='kCLLocationAccuracyBest' type='d'/>
<constant const='true' declared_type='CLLocationAccuracy' name='kCLLocationAccuracyBestForNavigation' type='d'/>
<constant const='true' declared_type='CLLocationAccuracy' name='kCLLocationAccuracyHundredMeters' type='d'/>
<constant const='true' declared_type='CLLocationAccuracy' name='kCLLocationAccuracyKilometer' type='d'/>
<constant const='true' declared_type='CLLocationAccuracy' name='kCLLocationAccuracyNearestTenMeters' type='d'/>
<constant const='true' declared_type='CLLocationAccuracy' name='kCLLocationAccuracyThreeKilometers' type='d'/>
<constant const='true' declared_type='CLLocationCoordinate2D' name='kCLLocationCoordinate2DInvalid' type='{_CLLocationCoordinate2D=dd}'/>
<enum name='CLActivityTypeAutomotiveNavigation' value='2'/>
<enum name='CLActivityTypeFitness' value='3'/>
<enum name='CLActivityTypeOther' value='1'/>
<enum name='CLActivityTypeOtherNavigation' value='4'/>
<enum name='CLDeviceOrientationFaceDown' value='6'/>
<enum name='CLDeviceOrientationFaceUp' value='5'/>
<enum name='CLDeviceOrientationLandscapeLeft' value='3'/>
<enum name='CLDeviceOrientationLandscapeRight' value='4'/>
<enum name='CLDeviceOrientationPortrait' value='1'/>
<enum name='CLDeviceOrientationPortraitUpsideDown' value='2'/>
<enum name='CLDeviceOrientationUnknown' value='0'/>
<enum name='CLProximityFar' value='3'/>
<enum name='CLProximityImmediate' value='1'/>
<enum name='CLProximityNear' value='2'/>
<enum name='CLProximityUnknown' value='0'/>
<enum name='CLRegionStateInside' value='1'/>
<enum name='CLRegionStateOutside' value='2'/>
<enum name='CLRegionStateUnknown' value='0'/>
<enum name='kCLAuthorizationStatusAuthorized' value='3'/>
<enum name='kCLAuthorizationStatusAuthorizedAlways' value='3'/>
<enum name='kCLAuthorizationStatusAuthorizedWhenInUse' value='4'/>
<enum name='kCLAuthorizationStatusDenied' value='2'/>
<enum name='kCLAuthorizationStatusNotDetermined' value='0'/>
<enum name='kCLAuthorizationStatusRestricted' value='1'/>
<enum name='kCLErrorDeferredAccuracyTooLow' value='13'/>
<enum name='kCLErrorDeferredCanceled' value='15'/>
<enum name='kCLErrorDeferredDistanceFiltered' value='14'/>
<enum name='kCLErrorDeferredFailed' value='11'/>
<enum name='kCLErrorDeferredNotUpdatingLocation' value='12'/>
<enum name='kCLErrorDenied' value='1'/>
<enum name='kCLErrorGeocodeCanceled' value='10'/>
<enum name='kCLErrorGeocodeFoundNoResult' value='8'/>
<enum name='kCLErrorGeocodeFoundPartialResult' value='9'/>
<enum name='kCLErrorHeadingFailure' value='3'/>
<enum name='kCLErrorLocationUnknown' value='0'/>
<enum name='kCLErrorNetwork' value='2'/>
<enum name='kCLErrorRangingFailure' value='17'/>
<enum name='kCLErrorRangingUnavailable' value='16'/>
<enum name='kCLErrorRegionMonitoringDenied' value='4'/>
<enum name='kCLErrorRegionMonitoringFailure' value='5'/>
<enum name='kCLErrorRegionMonitoringResponseDelayed' value='7'/>
<enum name='kCLErrorRegionMonitoringSetupDelayed' value='6'/>
<function name='CLLocationCoordinate2DIsValid'>
<arg declared_type='CLLocationCoordinate2D' name='coord' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='CLLocationCoordinate2DMake'>
<arg declared_type='CLLocationDegrees' name='latitude' type='d'/>
<arg declared_type='CLLocationDegrees' name='longitude' type='d'/>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</function>
<class name='CLBeacon'>
<method selector='accuracy'>
<retval declared_type='CLLocationAccuracy' type='d'/>
</method>
<method selector='major'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='minor'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='proximity'>
<retval declared_type='CLProximity' type='i' type64='q'/>
</method>
<method selector='proximityUUID'>
<retval declared_type='NSUUID*' type='@'/>
</method>
<method selector='rssi'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='CLBeaconRegion'>
<method selector='initWithProximityUUID:identifier:'>
<arg declared_type='NSUUID*' index='0' name='proximityUUID' type='@'/>
<arg declared_type='NSString*' index='1' name='identifier' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='initWithProximityUUID:major:identifier:'>
<arg declared_type='NSUUID*' index='0' name='proximityUUID' type='@'/>
<arg declared_type='CLBeaconMajorValue' index='1' name='major' type='S'/>
<arg declared_type='NSString*' index='2' name='identifier' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='initWithProximityUUID:major:minor:identifier:'>
<arg declared_type='NSUUID*' index='0' name='proximityUUID' type='@'/>
<arg declared_type='CLBeaconMajorValue' index='1' name='major' type='S'/>
<arg declared_type='CLBeaconMinorValue' index='2' name='minor' type='S'/>
<arg declared_type='NSString*' index='3' name='identifier' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='major'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='minor'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='notifyEntryStateOnDisplay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='peripheralDataWithMeasuredPower:'>
<arg declared_type='NSNumber*' index='0' name='measuredPower' type='@'/>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='proximityUUID'>
<retval declared_type='NSUUID*' type='@'/>
</method>
<method selector='setNotifyEntryStateOnDisplay:'>
<arg declared_type='BOOL' index='0' name='notifyEntryStateOnDisplay' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CLCircularRegion'>
<method selector='center'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='containsCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCenter:radius:identifier:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='center' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationDistance' index='1' name='radius' type='d'/>
<arg declared_type='NSString*' index='2' name='identifier' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='radius'>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
</class>
<class name='CLFloor'>
<method selector='level'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='CLGeocoder'>
<method selector='cancelGeocode'>
<retval declared_type='void' type='v'/>
</method>
<method selector='geocodeAddressDictionary:completionHandler:'>
<arg declared_type='NSDictionary*' index='0' name='addressDictionary' type='@'/>
<arg declared_type='CLGeocodeCompletionHandler' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='geocodeAddressString:completionHandler:'>
<arg declared_type='NSString*' index='0' name='addressString' type='@'/>
<arg declared_type='CLGeocodeCompletionHandler' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='geocodeAddressString:inRegion:completionHandler:'>
<arg declared_type='NSString*' index='0' name='addressString' type='@'/>
<arg declared_type='CLRegion*' index='1' name='region' type='@'/>
<arg declared_type='CLGeocodeCompletionHandler' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='isGeocoding'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reverseGeocodeLocation:completionHandler:'>
<arg declared_type='CLLocation*' index='0' name='location' type='@'/>
<arg declared_type='CLGeocodeCompletionHandler' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CLHeading'>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='headingAccuracy'>
<retval declared_type='CLLocationDirection' type='d'/>
</method>
<method selector='magneticHeading'>
<retval declared_type='CLLocationDirection' type='d'/>
</method>
<method selector='timestamp'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='trueHeading'>
<retval declared_type='CLLocationDirection' type='d'/>
</method>
<method selector='x'>
<retval declared_type='CLHeadingComponentValue' type='d'/>
</method>
<method selector='y'>
<retval declared_type='CLHeadingComponentValue' type='d'/>
</method>
<method selector='z'>
<retval declared_type='CLHeadingComponentValue' type='d'/>
</method>
</class>
<class name='CLLocation'>
<method selector='altitude'>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='coordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='course'>
<retval declared_type='CLLocationDirection' type='d'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='distanceFromLocation:'>
<arg const='true' declared_type='CLLocation*' index='0' name='location' type='@'/>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='floor'>
<retval declared_type='CLFloor*' type='@'/>
</method>
<method selector='getDistanceFrom:'>
<arg const='true' declared_type='CLLocation*' index='0' name='location' type='@'/>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='horizontalAccuracy'>
<retval declared_type='CLLocationAccuracy' type='d'/>
</method>
<method selector='initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationDistance' index='1' name='altitude' type='d'/>
<arg declared_type='CLLocationAccuracy' index='2' name='hAccuracy' type='d'/>
<arg declared_type='CLLocationAccuracy' index='3' name='vAccuracy' type='d'/>
<arg declared_type='CLLocationDirection' index='4' name='course' type='d'/>
<arg declared_type='CLLocationSpeed' index='5' name='speed' type='d'/>
<arg declared_type='NSDate*' index='6' name='timestamp' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationDistance' index='1' name='altitude' type='d'/>
<arg declared_type='CLLocationAccuracy' index='2' name='hAccuracy' type='d'/>
<arg declared_type='CLLocationAccuracy' index='3' name='vAccuracy' type='d'/>
<arg declared_type='NSDate*' index='4' name='timestamp' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='initWithLatitude:longitude:'>
<arg declared_type='CLLocationDegrees' index='0' name='latitude' type='d'/>
<arg declared_type='CLLocationDegrees' index='1' name='longitude' type='d'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='speed'>
<retval declared_type='CLLocationSpeed' type='d'/>
</method>
<method selector='timestamp'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='verticalAccuracy'>
<retval declared_type='CLLocationAccuracy' type='d'/>
</method>
</class>
<class name='CLLocationManager'>
<method selector='activityType'>
<retval declared_type='CLActivityType' type='i' type64='q'/>
</method>
<method selector='allowDeferredLocationUpdatesUntilTraveled:timeout:'>
<arg declared_type='CLLocationDistance' index='0' name='distance' type='d'/>
<arg declared_type='NSTimeInterval' index='1' name='timeout' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='authorizationStatus'>
<retval declared_type='CLAuthorizationStatus' type='i'/>
</method>
<method class_method='true' selector='deferredLocationUpdatesAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='desiredAccuracy'>
<retval declared_type='CLLocationAccuracy' type='d'/>
</method>
<method selector='disallowDeferredLocationUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dismissHeadingCalibrationDisplay'>
<retval declared_type='void' type='v'/>
</method>
<method selector='distanceFilter'>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='heading'>
<retval declared_type='CLHeading*' type='@'/>
</method>
<method class_method='true' selector='headingAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='headingAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='headingFilter'>
<retval declared_type='CLLocationDegrees' type='d'/>
</method>
<method selector='headingOrientation'>
<retval declared_type='CLDeviceOrientation' type='i'/>
</method>
<method class_method='true' selector='isMonitoringAvailableForClass:'>
<arg declared_type='Class' index='0' name='regionClass' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isRangingAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='location'>
<retval declared_type='CLLocation*' type='@'/>
</method>
<method class_method='true' selector='locationServicesEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locationServicesEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumRegionMonitoringDistance'>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='monitoredRegions'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='pausesLocationUpdatesAutomatically'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='purpose'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rangedRegions'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='regionMonitoringAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='regionMonitoringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestAlwaysAuthorization'>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestStateForRegion:'>
<arg declared_type='CLRegion*' index='0' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestWhenInUseAuthorization'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActivityType:'>
<arg declared_type='CLActivityType' index='0' name='activityType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDesiredAccuracy:'>
<arg declared_type='CLLocationAccuracy' index='0' name='desiredAccuracy' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDistanceFilter:'>
<arg declared_type='CLLocationDistance' index='0' name='distanceFilter' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeadingFilter:'>
<arg declared_type='CLLocationDegrees' index='0' name='headingFilter' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeadingOrientation:'>
<arg declared_type='CLDeviceOrientation' index='0' name='headingOrientation' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPausesLocationUpdatesAutomatically:'>
<arg declared_type='BOOL' index='0' name='pausesLocationUpdatesAutomatically' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurpose:'>
<arg declared_type='NSString*' index='0' name='purpose' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='significantLocationChangeMonitoringAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startMonitoringForRegion:'>
<arg declared_type='CLRegion*' index='0' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startMonitoringForRegion:desiredAccuracy:'>
<arg declared_type='CLRegion*' index='0' name='region' type='@'/>
<arg declared_type='CLLocationAccuracy' index='1' name='accuracy' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startMonitoringSignificantLocationChanges'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startMonitoringVisits'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startRangingBeaconsInRegion:'>
<arg declared_type='CLBeaconRegion*' index='0' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startUpdatingHeading'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startUpdatingLocation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopMonitoringForRegion:'>
<arg declared_type='CLRegion*' index='0' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopMonitoringSignificantLocationChanges'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopMonitoringVisits'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopRangingBeaconsInRegion:'>
<arg declared_type='CLBeaconRegion*' index='0' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopUpdatingHeading'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopUpdatingLocation'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CLPlacemark'>
<method selector='ISOcountryCode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addressDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='administrativeArea'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='areasOfInterest'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='country'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithPlacemark:'>
<arg declared_type='CLPlacemark*' index='0' name='placemark' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='inlandWater'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='locality'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='location'>
<retval declared_type='CLLocation*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='ocean'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='postalCode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='region'>
<retval declared_type='CLRegion*' type='@'/>
</method>
<method selector='subAdministrativeArea'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='subLocality'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='subThoroughfare'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='thoroughfare'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CLRegion'>
<method selector='center'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='containsCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initCircularRegionWithCenter:radius:identifier:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='center' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationDistance' index='1' name='radius' type='d'/>
<arg declared_type='NSString*' index='2' name='identifier' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='notifyOnEntry'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notifyOnExit'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='radius'>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='setNotifyOnEntry:'>
<arg declared_type='BOOL' index='0' name='notifyOnEntry' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotifyOnExit:'>
<arg declared_type='BOOL' index='0' name='notifyOnExit' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CLVisit'>
<method selector='arrivalDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='coordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='departureDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='horizontalAccuracy'>
<retval declared_type='CLLocationAccuracy' type='d'/>
</method>
</class>
<class name='NSObject'>
<method selector='locationManager:didChangeAuthorizationStatus:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLAuthorizationStatus' index='1' name='status' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didDetermineState:forRegion:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLRegionState' index='1' name='state' type='i' type64='q'/>
<arg declared_type='CLRegion*' index='2' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didEnterRegion:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLRegion*' index='1' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didExitRegion:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLRegion*' index='1' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didFailWithError:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didFinishDeferredUpdatesWithError:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didRangeBeacons:inRegion:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='NSArray*' index='1' name='beacons' type='@'/>
<arg declared_type='CLBeaconRegion*' index='2' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didStartMonitoringForRegion:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLRegion*' index='1' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didUpdateHeading:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLHeading*' index='1' name='newHeading' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didUpdateLocations:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='NSArray*' index='1' name='locations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didUpdateToLocation:fromLocation:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLLocation*' index='1' name='newLocation' type='@'/>
<arg declared_type='CLLocation*' index='2' name='oldLocation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didVisit:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLVisit*' index='1' name='visit' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:monitoringDidFailForRegion:withError:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLRegion*' index='1' name='region' type='@'/>
<arg declared_type='NSError*' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:rangingBeaconsDidFailForRegion:withError:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLBeaconRegion*' index='1' name='region' type='@'/>
<arg declared_type='NSError*' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManagerDidPauseLocationUpdates:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManagerDidResumeLocationUpdates:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManagerShouldDisplayHeadingCalibration:'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<informal_protocol name='CLLocationManagerDelegate'>
<method selector='locationManager:didChangeAuthorizationStatus:' type='v16@0:4@8i12' type64='v28@0:8@16i24'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLAuthorizationStatus' index='1' name='status' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didDetermineState:forRegion:' type='v20@0:4@8i12@16' type64='v40@0:8@16q24@32'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLRegionState' index='1' name='state' type='i' type64='q'/>
<arg declared_type='CLRegion*' index='2' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didEnterRegion:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLRegion*' index='1' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didExitRegion:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLRegion*' index='1' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didFailWithError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didFinishDeferredUpdatesWithError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didRangeBeacons:inRegion:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='NSArray*' index='1' name='beacons' type='@'/>
<arg declared_type='CLBeaconRegion*' index='2' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didStartMonitoringForRegion:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLRegion*' index='1' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didUpdateHeading:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLHeading*' index='1' name='newHeading' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didUpdateLocations:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='NSArray*' index='1' name='locations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didUpdateToLocation:fromLocation:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLLocation*' index='1' name='newLocation' type='@'/>
<arg declared_type='CLLocation*' index='2' name='oldLocation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:didVisit:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLVisit*' index='1' name='visit' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:monitoringDidFailForRegion:withError:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLRegion*' index='1' name='region' type='@'/>
<arg declared_type='NSError*' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManager:rangingBeaconsDidFailForRegion:withError:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<arg declared_type='CLBeaconRegion*' index='1' name='region' type='@'/>
<arg declared_type='NSError*' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManagerDidPauseLocationUpdates:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManagerDidResumeLocationUpdates:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationManagerShouldDisplayHeadingCalibration:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='CLLocationManager*' index='0' name='manager' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
</signatures>
