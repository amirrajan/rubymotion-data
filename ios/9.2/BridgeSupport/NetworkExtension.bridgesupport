<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NEAppProxyErrorDomain' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NEFilterConfigurationDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NEFilterErrorDomain' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NEFilterProviderRemediationMapRemediationButtonTexts' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NEFilterProviderRemediationMapRemediationURLs' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NETunnelProviderErrorDomain' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NEVPNConfigurationChangeNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NEVPNConnectionStartOptionPassword' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NEVPNConnectionStartOptionUsername' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NEVPNErrorDomain' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NEVPNStatusDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='kNEHotspotHelperOptionDisplayName' type='@'/>
<string_constant name='NEFilterProviderRemediationURLFlowURL' nsstring='true' value='NE_FLOW_URL'/>
<string_constant name='NEFilterProviderRemediationURLFlowURLHostname' nsstring='true' value='NE_FLOW_HOSTNAME'/>
<string_constant name='NEFilterProviderRemediationURLOrganization' nsstring='true' value='NE_ORGANIZATION'/>
<string_constant name='NEFilterProviderRemediationURLUsername' nsstring='true' value='NE_USERNAME'/>
<enum name='NEAppProxyFlowErrorAborted' value='5'/>
<enum name='NEAppProxyFlowErrorHostUnreachable' value='3'/>
<enum name='NEAppProxyFlowErrorInternal' value='8'/>
<enum name='NEAppProxyFlowErrorInvalidArgument' value='4'/>
<enum name='NEAppProxyFlowErrorNotConnected' value='1'/>
<enum name='NEAppProxyFlowErrorPeerReset' value='2'/>
<enum name='NEAppProxyFlowErrorRefused' value='6'/>
<enum name='NEAppProxyFlowErrorTimedOut' value='7'/>
<enum name='NEEvaluateConnectionRuleActionConnectIfNeeded' value='1'/>
<enum name='NEEvaluateConnectionRuleActionNeverConnect' value='2'/>
<enum name='NEFilterFlowBytesMax' value='18446744073709551615'/>
<enum name='NEFilterManagerErrorConfigurationCannotBeRemoved' value='4'/>
<enum name='NEFilterManagerErrorConfigurationDisabled' value='2'/>
<enum name='NEFilterManagerErrorConfigurationInvalid' value='1'/>
<enum name='NEFilterManagerErrorConfigurationStale' value='3'/>
<enum name='NEOnDemandRuleActionConnect' value='1'/>
<enum name='NEOnDemandRuleActionDisconnect' value='2'/>
<enum name='NEOnDemandRuleActionEvaluateConnection' value='3'/>
<enum name='NEOnDemandRuleActionIgnore' value='4'/>
<enum name='NEOnDemandRuleInterfaceTypeAny' value='0'/>
<enum name='NEOnDemandRuleInterfaceTypeCellular' value='3'/>
<enum name='NEOnDemandRuleInterfaceTypeEthernet' value='1'/>
<enum name='NEOnDemandRuleInterfaceTypeWiFi' value='2'/>
<enum name='NEProviderStopReasonAuthenticationCanceled' value='6'/>
<enum name='NEProviderStopReasonConfigurationDisabled' value='9'/>
<enum name='NEProviderStopReasonConfigurationFailed' value='7'/>
<enum name='NEProviderStopReasonConfigurationRemoved' value='10'/>
<enum name='NEProviderStopReasonConnectionFailed' value='14'/>
<enum name='NEProviderStopReasonIdleTimeout' value='8'/>
<enum name='NEProviderStopReasonNoNetworkAvailable' value='3'/>
<enum name='NEProviderStopReasonNone' value='0'/>
<enum name='NEProviderStopReasonProviderDisabled' value='5'/>
<enum name='NEProviderStopReasonProviderFailed' value='2'/>
<enum name='NEProviderStopReasonSuperceded' value='11'/>
<enum name='NEProviderStopReasonUnrecoverableNetworkChange' value='4'/>
<enum name='NEProviderStopReasonUserInitiated' value='1'/>
<enum name='NEProviderStopReasonUserLogout' value='12'/>
<enum name='NEProviderStopReasonUserSwitch' value='13'/>
<enum name='NETunnelProviderErrorNetworkSettingsCanceled' value='2'/>
<enum name='NETunnelProviderErrorNetworkSettingsFailed' value='3'/>
<enum name='NETunnelProviderErrorNetworkSettingsInvalid' value='1'/>
<enum name='NETunnelProviderRoutingMethodDestinationIP' value='1'/>
<enum name='NETunnelProviderRoutingMethodSourceApplication' value='2'/>
<enum name='NEVPNErrorConfigurationDisabled' value='2'/>
<enum name='NEVPNErrorConfigurationInvalid' value='1'/>
<enum name='NEVPNErrorConfigurationReadWriteFailed' value='5'/>
<enum name='NEVPNErrorConfigurationStale' value='4'/>
<enum name='NEVPNErrorConfigurationUnknown' value='6'/>
<enum name='NEVPNErrorConnectionFailed' value='3'/>
<enum name='NEVPNIKEAuthenticationMethodCertificate' value='1'/>
<enum name='NEVPNIKEAuthenticationMethodNone' value='0'/>
<enum name='NEVPNIKEAuthenticationMethodSharedSecret' value='2'/>
<enum name='NEVPNIKEv2CertificateTypeECDSA256' value='2'/>
<enum name='NEVPNIKEv2CertificateTypeECDSA384' value='3'/>
<enum name='NEVPNIKEv2CertificateTypeECDSA521' value='4'/>
<enum name='NEVPNIKEv2CertificateTypeRSA' value='1'/>
<enum name='NEVPNIKEv2DeadPeerDetectionRateHigh' value='3'/>
<enum name='NEVPNIKEv2DeadPeerDetectionRateLow' value='1'/>
<enum name='NEVPNIKEv2DeadPeerDetectionRateMedium' value='2'/>
<enum name='NEVPNIKEv2DeadPeerDetectionRateNone' value='0'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup0' value='0'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup1' value='1'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup14' value='14'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup15' value='15'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup16' value='16'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup17' value='17'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup18' value='18'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup19' value='19'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup2' value='2'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup20' value='20'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup21' value='21'/>
<enum name='NEVPNIKEv2DiffieHellmanGroup5' value='5'/>
<enum name='NEVPNIKEv2EncryptionAlgorithm3DES' value='2'/>
<enum name='NEVPNIKEv2EncryptionAlgorithmAES128' value='3'/>
<enum name='NEVPNIKEv2EncryptionAlgorithmAES128GCM' value='5'/>
<enum name='NEVPNIKEv2EncryptionAlgorithmAES256' value='4'/>
<enum name='NEVPNIKEv2EncryptionAlgorithmAES256GCM' value='6'/>
<enum name='NEVPNIKEv2EncryptionAlgorithmDES' value='1'/>
<enum name='NEVPNIKEv2IntegrityAlgorithmSHA160' value='2'/>
<enum name='NEVPNIKEv2IntegrityAlgorithmSHA256' value='3'/>
<enum name='NEVPNIKEv2IntegrityAlgorithmSHA384' value='4'/>
<enum name='NEVPNIKEv2IntegrityAlgorithmSHA512' value='5'/>
<enum name='NEVPNIKEv2IntegrityAlgorithmSHA96' value='1'/>
<enum name='NEVPNStatusConnected' value='3'/>
<enum name='NEVPNStatusConnecting' value='2'/>
<enum name='NEVPNStatusDisconnected' value='1'/>
<enum name='NEVPNStatusDisconnecting' value='5'/>
<enum name='NEVPNStatusInvalid' value='0'/>
<enum name='NEVPNStatusReasserting' value='4'/>
<enum name='NWPathStatusInvalid' value='0'/>
<enum name='NWPathStatusSatisfiable' value='3'/>
<enum name='NWPathStatusSatisfied' value='1'/>
<enum name='NWPathStatusUnsatisfied' value='2'/>
<enum name='NWTCPConnectionStateCancelled' value='5'/>
<enum name='NWTCPConnectionStateConnected' value='3'/>
<enum name='NWTCPConnectionStateConnecting' value='1'/>
<enum name='NWTCPConnectionStateDisconnected' value='4'/>
<enum name='NWTCPConnectionStateInvalid' value='0'/>
<enum name='NWTCPConnectionStateWaiting' value='2'/>
<enum name='NWUDPSessionStateCancelled' value='5'/>
<enum name='NWUDPSessionStateFailed' value='4'/>
<enum name='NWUDPSessionStateInvalid' value='0'/>
<enum name='NWUDPSessionStatePreparing' value='2'/>
<enum name='NWUDPSessionStateReady' value='3'/>
<enum name='NWUDPSessionStateWaiting' value='1'/>
<enum name='kNEHotspotHelperCommandTypeAuthenticate' value='3'/>
<enum name='kNEHotspotHelperCommandTypeEvaluate' value='2'/>
<enum name='kNEHotspotHelperCommandTypeFilterScanList' value='1'/>
<enum name='kNEHotspotHelperCommandTypeLogoff' value='6'/>
<enum name='kNEHotspotHelperCommandTypeMaintain' value='5'/>
<enum name='kNEHotspotHelperCommandTypeNone' value='0'/>
<enum name='kNEHotspotHelperCommandTypePresentUI' value='4'/>
<enum name='kNEHotspotHelperConfidenceHigh' value='2'/>
<enum name='kNEHotspotHelperConfidenceLow' value='1'/>
<enum name='kNEHotspotHelperConfidenceNone' value='0'/>
<enum name='kNEHotspotHelperResultAuthenticationRequired' value='4'/>
<enum name='kNEHotspotHelperResultCommandNotRecognized' value='3'/>
<enum name='kNEHotspotHelperResultFailure' value='1'/>
<enum name='kNEHotspotHelperResultSuccess' value='0'/>
<enum name='kNEHotspotHelperResultTemporaryFailure' value='6'/>
<enum name='kNEHotspotHelperResultUIRequired' value='2'/>
<enum name='kNEHotspotHelperResultUnsupportedNetwork' value='5'/>
<class name='NEAppProxyFlow'>
<method selector='closeReadWithError:'>
<arg declared_type='NSError * _Nullable' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='closeWriteWithError:'>
<arg declared_type='NSError * _Nullable' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='metaData'>
<retval declared_type='NEFlowMetaData * _Nonnull' type='@'/>
</method>
<method selector='openWithLocalEndpoint:completionHandler:'>
<arg declared_type='NWHostEndpoint * _Nullable' index='0' name='localEndpoint' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEAppProxyProvider'>
<method selector='cancelProxyWithError:'>
<arg declared_type='NSError * _Nullable' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleNewFlow:'>
<arg declared_type='NEAppProxyFlow * _Nonnull' index='0' name='flow' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startProxyWithOptions:completionHandler:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='options' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopProxyWithReason:completionHandler:'>
<arg declared_type='NEProviderStopReason' index='0' name='reason' type='i' type64='q'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEAppProxyProviderManager'>
<method class_method='true' selector='loadAllFromPreferencesWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSArray * _Nullable, NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSArray * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEAppProxyTCPFlow'>
<method selector='readDataWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSData * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='remoteEndpoint'>
<retval declared_type='NWEndpoint * _Nonnull' type='@'/>
</method>
<method selector='writeData:withCompletionHandler:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEAppProxyUDPFlow'>
<method selector='localEndpoint'>
<retval declared_type='NWEndpoint * _Nullable' type='@'/>
</method>
<method selector='readDatagramsWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSArray * _Nullable, NSArray * _Nullable, NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSArray * _Nullable' type='@'/>
<arg declared_type='NSArray * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeDatagrams:sentByEndpoints:completionHandler:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='datagrams' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='remoteEndpoints' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEAppRule'>
<method selector='initWithSigningIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='signingIdentifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='matchDomains'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='matchSigningIdentifier'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='setMatchDomains:'>
<arg declared_type='NSArray * _Nullable' index='0' name='matchDomains' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEDNSSettings'>
<method selector='domainName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='initWithServers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='servers' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='matchDomains'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='matchDomainsNoSearch'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searchDomains'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='servers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setDomainName:'>
<arg declared_type='NSString * _Nullable' index='0' name='domainName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchDomains:'>
<arg declared_type='NSArray * _Nullable' index='0' name='matchDomains' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchDomainsNoSearch:'>
<arg declared_type='BOOL' index='0' name='matchDomainsNoSearch' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchDomains:'>
<arg declared_type='NSArray * _Nullable' index='0' name='searchDomains' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEEvaluateConnectionRule'>
<method selector='action'>
<retval declared_type='NEEvaluateConnectionRuleAction' type='i' type64='q'/>
</method>
<method selector='initWithMatchDomains:andAction:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='domains' type='@'/>
<arg declared_type='NEEvaluateConnectionRuleAction' index='1' name='action' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='matchDomains'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='probeURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='setProbeURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='probeURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseDNSServers:'>
<arg declared_type='NSArray * _Nullable' index='0' name='useDNSServers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useDNSServers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='NEFilterBrowserFlow'>
<method selector='parentURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest * _Nonnull' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse * _Nullable' type='@'/>
</method>
</class>
<class name='NEFilterControlProvider'>
<method selector='URLAppendStringMap'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='handleNewFlow:completionHandler:'>
<arg declared_type='NEFilterFlow * _Nonnull' index='0' name='flow' type='@'/>
<arg declared_type='void (^ _Nonnull)(NEFilterControlVerdict * _Nonnull)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NEFilterControlVerdict * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleRemediationForFlow:completionHandler:'>
<arg declared_type='NEFilterFlow * _Nonnull' index='0' name='flow' type='@'/>
<arg declared_type='void (^ _Nonnull)(NEFilterControlVerdict * _Nonnull)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NEFilterControlVerdict * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='notifyRulesChanged'>
<retval declared_type='void' type='v'/>
</method>
<method selector='remediationMap'>
<retval declared_type='NSDictionary *&gt; * _Nullable' type='@'/>
</method>
<method selector='setRemediationMap:'>
<arg declared_type='NSDictionary *&gt; * _Nullable' index='0' name='remediationMap' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURLAppendStringMap:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='URLAppendStringMap' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEFilterControlVerdict'>
<method class_method='true' selector='allowVerdictWithUpdateRules:'>
<arg declared_type='BOOL' index='0' name='updateRules' type='B'/>
<retval declared_type='NEFilterControlVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='dropVerdictWithUpdateRules:'>
<arg declared_type='BOOL' index='0' name='updateRules' type='B'/>
<retval declared_type='NEFilterControlVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='updateRules'>
<retval declared_type='NEFilterControlVerdict * _Nonnull' type='@'/>
</method>
</class>
<class name='NEFilterDataProvider'>
<method selector='handleInboundDataCompleteForFlow:'>
<arg declared_type='NEFilterFlow * _Nonnull' index='0' name='flow' type='@'/>
<retval declared_type='NEFilterDataVerdict * _Nonnull' type='@'/>
</method>
<method selector='handleInboundDataFromFlow:readBytesStartOffset:readBytes:'>
<arg declared_type='NEFilterFlow * _Nonnull' index='0' name='flow' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSData * _Nonnull' index='2' name='readBytes' type='@'/>
<retval declared_type='NEFilterDataVerdict * _Nonnull' type='@'/>
</method>
<method selector='handleNewFlow:'>
<arg declared_type='NEFilterFlow * _Nonnull' index='0' name='flow' type='@'/>
<retval declared_type='NEFilterNewFlowVerdict * _Nonnull' type='@'/>
</method>
<method selector='handleOutboundDataCompleteForFlow:'>
<arg declared_type='NEFilterFlow * _Nonnull' index='0' name='flow' type='@'/>
<retval declared_type='NEFilterDataVerdict * _Nonnull' type='@'/>
</method>
<method selector='handleOutboundDataFromFlow:readBytesStartOffset:readBytes:'>
<arg declared_type='NEFilterFlow * _Nonnull' index='0' name='flow' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSData * _Nonnull' index='2' name='readBytes' type='@'/>
<retval declared_type='NEFilterDataVerdict * _Nonnull' type='@'/>
</method>
<method selector='handleRemediationForFlow:'>
<arg declared_type='NEFilterFlow * _Nonnull' index='0' name='flow' type='@'/>
<retval declared_type='NEFilterRemediationVerdict * _Nonnull' type='@'/>
</method>
<method selector='handleRulesChanged'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEFilterDataVerdict'>
<method class_method='true' selector='allowVerdict'>
<retval declared_type='NEFilterDataVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='dataVerdictWithPassBytes:peekBytes:'>
<arg declared_type='NSUInteger' index='0' name='passBytes' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='peekBytes' type='I' type64='Q'/>
<retval declared_type='NEFilterDataVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='dropVerdict'>
<retval declared_type='NEFilterDataVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='needRulesVerdict'>
<retval declared_type='NEFilterDataVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='remediateVerdictWithRemediationURLMapKey:remediationButtonTextMapKey:'>
<arg declared_type='NSString * _Nullable' index='0' name='remediationURLMapKey' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='remediationButtonTextMapKey' type='@'/>
<retval declared_type='NEFilterDataVerdict * _Nonnull' type='@'/>
</method>
</class>
<class name='NEFilterFlow'>
<method selector='URL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
</class>
<class name='NEFilterManager'>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadFromPreferencesWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='localizedDescription'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='providerConfiguration'>
<retval declared_type='NEFilterProviderConfiguration * _Nullable' type='@'/>
</method>
<method selector='removeFromPreferencesWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveToPreferencesWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalizedDescription:'>
<arg declared_type='NSString * _Nullable' index='0' name='localizedDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProviderConfiguration:'>
<arg declared_type='NEFilterProviderConfiguration * _Nullable' index='0' name='providerConfiguration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='NEFilterManager * _Nonnull' type='@'/>
</method>
</class>
<class name='NEFilterNewFlowVerdict'>
<method class_method='true' selector='URLAppendStringVerdictWithMapKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='urlAppendMapKey' type='@'/>
<retval declared_type='NEFilterNewFlowVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='allowVerdict'>
<retval declared_type='NEFilterNewFlowVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='dropVerdict'>
<retval declared_type='NEFilterNewFlowVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='filterDataVerdictWithFilterInbound:peekInboundBytes:filterOutbound:peekOutboundBytes:'>
<arg declared_type='BOOL' index='0' name='filterInbound' type='B'/>
<arg declared_type='NSUInteger' index='1' name='peekInboundBytes' type='I' type64='Q'/>
<arg declared_type='BOOL' index='2' name='filterOutbound' type='B'/>
<arg declared_type='NSUInteger' index='3' name='peekOutboundBytes' type='I' type64='Q'/>
<retval declared_type='NEFilterNewFlowVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='needRulesVerdict'>
<retval declared_type='NEFilterNewFlowVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='remediateVerdictWithRemediationURLMapKey:remediationButtonTextMapKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='remediationURLMapKey' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='remediationButtonTextMapKey' type='@'/>
<retval declared_type='NEFilterNewFlowVerdict * _Nonnull' type='@'/>
</method>
</class>
<class name='NEFilterProvider'>
<method selector='filterConfiguration'>
<retval declared_type='NEFilterProviderConfiguration * _Nonnull' type='@'/>
</method>
<method selector='startFilterWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopFilterWithReason:completionHandler:'>
<arg declared_type='NEProviderStopReason' index='0' name='reason' type='i' type64='q'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEFilterProviderConfiguration'>
<method selector='filterBrowsers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='filterSockets'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='identityReference'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='organization'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='passwordReference'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='serverAddress'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setFilterBrowsers:'>
<arg declared_type='BOOL' index='0' name='filterBrowsers' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterSockets:'>
<arg declared_type='BOOL' index='0' name='filterSockets' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentityReference:'>
<arg declared_type='NSData * _Nullable' index='0' name='identityReference' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrganization:'>
<arg declared_type='NSString * _Nullable' index='0' name='organization' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPasswordReference:'>
<arg declared_type='NSData * _Nullable' index='0' name='passwordReference' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServerAddress:'>
<arg declared_type='NSString * _Nullable' index='0' name='serverAddress' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg declared_type='NSString * _Nullable' index='0' name='username' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVendorConfiguration:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='vendorConfiguration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='username'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='vendorConfiguration'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
</class>
<class name='NEFilterRemediationVerdict'>
<method class_method='true' selector='allowVerdict'>
<retval declared_type='NEFilterRemediationVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='dropVerdict'>
<retval declared_type='NEFilterRemediationVerdict * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='needRulesVerdict'>
<retval declared_type='NEFilterRemediationVerdict * _Nonnull' type='@'/>
</method>
</class>
<class name='NEFilterSocketFlow'>
<method selector='localEndpoint'>
<retval declared_type='NWEndpoint * _Nonnull' type='@'/>
</method>
<method selector='remoteEndpoint'>
<retval declared_type='NWEndpoint * _Nonnull' type='@'/>
</method>
<method selector='setSocketFamily:'>
<arg declared_type='int' index='0' name='socketFamily' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSocketProtocol:'>
<arg declared_type='int' index='0' name='socketProtocol' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSocketType:'>
<arg declared_type='int' index='0' name='socketType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='socketFamily'>
<retval declared_type='int' type='i'/>
</method>
<method selector='socketProtocol'>
<retval declared_type='int' type='i'/>
</method>
<method selector='socketType'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='NEFlowMetaData'>
<method selector='sourceAppSigningIdentifier'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='sourceAppUniqueIdentifier'>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
</class>
<class name='NEHotspotHelper'>
<method class_method='true' selector='logoff:'>
<arg declared_type='NEHotspotNetwork * _Nonnull' index='0' name='network' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='registerWithOptions:queue:handler:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='options' type='@'/>
<arg declared_type='dispatch_queue_t _Nonnull' index='1' name='queue' type='@'/>
<arg declared_type='NEHotspotHelperHandler _Nonnull' function_pointer='true' index='2' name='handler' type='@?'>
<arg declared_type='NEHotspotHelperCommand * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='supportedNetworkInterfaces'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NEHotspotHelperCommand'>
<method selector='commandType'>
<retval declared_type='NEHotspotHelperCommandType' type='i' type64='q'/>
</method>
<method selector='createResponse:'>
<arg declared_type='NEHotspotHelperResult' index='0' name='result' type='i' type64='q'/>
<retval declared_type='NEHotspotHelperResponse * _Nonnull' type='@'/>
</method>
<method selector='createTCPConnection:'>
<arg declared_type='NWEndpoint * _Nonnull' index='0' name='endpoint' type='@'/>
<retval declared_type='NWTCPConnection * _Nonnull' type='@'/>
</method>
<method selector='createUDPSession:'>
<arg declared_type='NWEndpoint * _Nonnull' index='0' name='endpoint' type='@'/>
<retval declared_type='NWUDPSession * _Nonnull' type='@'/>
</method>
<method selector='network'>
<retval declared_type='NEHotspotNetwork * _Nullable' type='@'/>
</method>
<method selector='networkList'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='NEHotspotHelperResponse'>
<method selector='deliver'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNetwork:'>
<arg declared_type='NEHotspotNetwork * _Nonnull' index='0' name='network' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNetworkList:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='networkList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEHotspotNetwork'>
<method selector='BSSID'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='SSID'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='didAutoJoin'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='didJustJoin'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isChosenHelper'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSecure'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setConfidence:'>
<arg declared_type='NEHotspotHelperConfidence' index='0' name='confidence' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassword:'>
<arg declared_type='NSString * _Nonnull' index='0' name='password' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='signalStrength'>
<retval declared_type='double' type='d'/>
</method>
</class>
<class name='NEIPv4Route'>
<method class_method='true' selector='defaultRoute'>
<retval const='true' declared_type='NEIPv4Route * _Nonnull' type='@'/>
</method>
<method selector='destinationAddress'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='destinationSubnetMask'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='gatewayAddress'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='initWithDestinationAddress:subnetMask:'>
<arg declared_type='NSString * _Nonnull' index='0' name='address' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='subnetMask' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setGatewayAddress:'>
<arg declared_type='NSString * _Nullable' index='0' name='gatewayAddress' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEIPv4Settings'>
<method selector='addresses'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='excludedRoutes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='includedRoutes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='initWithAddresses:subnetMasks:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='addresses' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='subnetMasks' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setExcludedRoutes:'>
<arg declared_type='NSArray * _Nullable' index='0' name='excludedRoutes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludedRoutes:'>
<arg declared_type='NSArray * _Nullable' index='0' name='includedRoutes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subnetMasks'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NEIPv6Route'>
<method class_method='true' selector='defaultRoute'>
<retval const='true' declared_type='NEIPv6Route * _Nonnull' type='@'/>
</method>
<method selector='destinationAddress'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='destinationNetworkPrefixLength'>
<retval declared_type='NSNumber * _Nonnull' type='@'/>
</method>
<method selector='gatewayAddress'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='initWithDestinationAddress:networkPrefixLength:'>
<arg declared_type='NSString * _Nonnull' index='0' name='address' type='@'/>
<arg declared_type='NSNumber * _Nonnull' index='1' name='networkPrefixLength' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setGatewayAddress:'>
<arg declared_type='NSString * _Nullable' index='0' name='gatewayAddress' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEIPv6Settings'>
<method selector='addresses'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='excludedRoutes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='includedRoutes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='initWithAddresses:networkPrefixLengths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='addresses' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='networkPrefixLengths' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='networkPrefixLengths'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setExcludedRoutes:'>
<arg declared_type='NSArray * _Nullable' index='0' name='excludedRoutes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludedRoutes:'>
<arg declared_type='NSArray * _Nullable' index='0' name='includedRoutes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEOnDemandRule'>
<method selector='DNSSearchDomainMatch'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='DNSServerAddressMatch'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='SSIDMatch'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='action'>
<retval declared_type='NEOnDemandRuleAction' type='i' type64='q'/>
</method>
<method selector='interfaceTypeMatch'>
<retval declared_type='NEOnDemandRuleInterfaceType' type='i' type64='q'/>
</method>
<method selector='probeURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='setDNSSearchDomainMatch:'>
<arg declared_type='NSArray * _Nullable' index='0' name='DNSSearchDomainMatch' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDNSServerAddressMatch:'>
<arg declared_type='NSArray * _Nullable' index='0' name='DNSServerAddressMatch' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInterfaceTypeMatch:'>
<arg declared_type='NEOnDemandRuleInterfaceType' index='0' name='interfaceTypeMatch' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProbeURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='probeURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSSIDMatch:'>
<arg declared_type='NSArray * _Nullable' index='0' name='SSIDMatch' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEOnDemandRuleEvaluateConnection'>
<method selector='connectionRules'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setConnectionRules:'>
<arg declared_type='NSArray * _Nullable' index='0' name='connectionRules' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEPacketTunnelFlow'>
<method selector='readPacketsWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSArray * _Nonnull, NSArray * _Nonnull)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='writePackets:withProtocols:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='packets' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='protocols' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NEPacketTunnelNetworkSettings'>
<method selector='IPv4Settings'>
<retval declared_type='NEIPv4Settings * _Nullable' type='@'/>
</method>
<method selector='IPv6Settings'>
<retval declared_type='NEIPv6Settings * _Nullable' type='@'/>
</method>
<method selector='MTU'>
<retval declared_type='NSNumber * _Nullable' type='@'/>
</method>
<method selector='setIPv4Settings:'>
<arg declared_type='NEIPv4Settings * _Nullable' index='0' name='IPv4Settings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIPv6Settings:'>
<arg declared_type='NEIPv6Settings * _Nullable' index='0' name='IPv6Settings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMTU:'>
<arg declared_type='NSNumber * _Nullable' index='0' name='MTU' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTunnelOverheadBytes:'>
<arg declared_type='NSNumber * _Nullable' index='0' name='tunnelOverheadBytes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tunnelOverheadBytes'>
<retval declared_type='NSNumber * _Nullable' type='@'/>
</method>
</class>
<class name='NEPacketTunnelProvider'>
<method selector='cancelTunnelWithError:'>
<arg declared_type='NSError * _Nullable' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='createTCPConnectionThroughTunnelToEndpoint:enableTLS:TLSParameters:delegate:'>
<arg declared_type='NWEndpoint * _Nonnull' index='0' name='remoteEndpoint' type='@'/>
<arg declared_type='BOOL' index='1' name='enableTLS' type='B'/>
<arg declared_type='NWTLSParameters * _Nullable' index='2' name='TLSParameters' type='@'/>
<arg declared_type='id _Nullable' index='3' name='delegate' type='@'/>
<retval declared_type='NWTCPConnection * _Nonnull' type='@'/>
</method>
<method selector='createUDPSessionThroughTunnelToEndpoint:fromEndpoint:'>
<arg declared_type='NWEndpoint * _Nonnull' index='0' name='remoteEndpoint' type='@'/>
<arg declared_type='NWHostEndpoint * _Nullable' index='1' name='localEndpoint' type='@'/>
<retval declared_type='NWUDPSession * _Nonnull' type='@'/>
</method>
<method selector='packetFlow'>
<retval declared_type='NEPacketTunnelFlow * _Nonnull' type='@'/>
</method>
<method selector='startTunnelWithOptions:completionHandler:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='options' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopTunnelWithReason:completionHandler:'>
<arg declared_type='NEProviderStopReason' index='0' name='reason' type='i' type64='q'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEProvider'>
<method selector='createTCPConnectionToEndpoint:enableTLS:TLSParameters:delegate:'>
<arg declared_type='NWEndpoint * _Nonnull' index='0' name='remoteEndpoint' type='@'/>
<arg declared_type='BOOL' index='1' name='enableTLS' type='B'/>
<arg declared_type='NWTLSParameters * _Nullable' index='2' name='TLSParameters' type='@'/>
<arg declared_type='id _Nullable' index='3' name='delegate' type='@'/>
<retval declared_type='NWTCPConnection * _Nonnull' type='@'/>
</method>
<method selector='createUDPSessionToEndpoint:fromEndpoint:'>
<arg declared_type='NWEndpoint * _Nonnull' index='0' name='remoteEndpoint' type='@'/>
<arg declared_type='NWHostEndpoint * _Nullable' index='1' name='localEndpoint' type='@'/>
<retval declared_type='NWUDPSession * _Nonnull' type='@'/>
</method>
<method selector='defaultPath'>
<retval declared_type='NWPath * _Nullable' type='@'/>
</method>
<method selector='sleepWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='wake'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEProxyServer'>
<method selector='address'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='authenticationRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithAddress:port:'>
<arg declared_type='NSString * _Nonnull' index='0' name='address' type='@'/>
<arg declared_type='NSInteger' index='1' name='port' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='password'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='port'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAuthenticationRequired:'>
<arg declared_type='BOOL' index='0' name='authenticationRequired' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassword:'>
<arg declared_type='NSString * _Nullable' index='0' name='password' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg declared_type='NSString * _Nullable' index='0' name='username' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='username'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='NEProxySettings'>
<method selector='HTTPEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='HTTPSEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='HTTPSServer'>
<retval declared_type='NEProxyServer * _Nullable' type='@'/>
</method>
<method selector='HTTPServer'>
<retval declared_type='NEProxyServer * _Nullable' type='@'/>
</method>
<method selector='autoProxyConfigurationEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='exceptionList'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='excludeSimpleHostnames'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchDomains'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='proxyAutoConfigurationJavaScript'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='proxyAutoConfigurationURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='setAutoProxyConfigurationEnabled:'>
<arg declared_type='BOOL' index='0' name='autoProxyConfigurationEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExceptionList:'>
<arg declared_type='NSArray * _Nullable' index='0' name='exceptionList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExcludeSimpleHostnames:'>
<arg declared_type='BOOL' index='0' name='excludeSimpleHostnames' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPEnabled:'>
<arg declared_type='BOOL' index='0' name='HTTPEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPSEnabled:'>
<arg declared_type='BOOL' index='0' name='HTTPSEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPSServer:'>
<arg declared_type='NEProxyServer * _Nullable' index='0' name='HTTPSServer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPServer:'>
<arg declared_type='NEProxyServer * _Nullable' index='0' name='HTTPServer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchDomains:'>
<arg declared_type='NSArray * _Nullable' index='0' name='matchDomains' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxyAutoConfigurationJavaScript:'>
<arg declared_type='NSString * _Nullable' index='0' name='proxyAutoConfigurationJavaScript' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxyAutoConfigurationURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='proxyAutoConfigurationURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NETunnelNetworkSettings'>
<method selector='DNSSettings'>
<retval declared_type='NEDNSSettings * _Nullable' type='@'/>
</method>
<method selector='initWithTunnelRemoteAddress:'>
<arg declared_type='NSString * _Nonnull' index='0' name='address' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='proxySettings'>
<retval declared_type='NEProxySettings * _Nullable' type='@'/>
</method>
<method selector='setDNSSettings:'>
<arg declared_type='NEDNSSettings * _Nullable' index='0' name='DNSSettings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxySettings:'>
<arg declared_type='NEProxySettings * _Nullable' index='0' name='proxySettings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tunnelRemoteAddress'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NETunnelProvider'>
<method selector='appRules'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='handleAppMessage:completionHandler:'>
<arg declared_type='NSData * _Nonnull' index='0' name='messageData' type='@'/>
<arg declared_type='void (^ _Nullable)(NSData * _Nullable)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSData * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='protocolConfiguration'>
<retval declared_type='NEVPNProtocol * _Nonnull' type='@'/>
</method>
<method selector='reasserting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='routingMethod'>
<retval declared_type='NETunnelProviderRoutingMethod' type='i' type64='q'/>
</method>
<method selector='setReasserting:'>
<arg declared_type='BOOL' index='0' name='reasserting' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTunnelNetworkSettings:completionHandler:'>
<arg declared_type='NETunnelNetworkSettings * _Nullable' index='0' name='tunnelNetworkSettings' type='@'/>
<arg declared_type='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NETunnelProviderManager'>
<method selector='copyAppRules'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='loadAllFromPreferencesWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSArray * _Nullable, NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSArray * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='routingMethod'>
<retval declared_type='NETunnelProviderRoutingMethod' type='i' type64='q'/>
</method>
</class>
<class name='NETunnelProviderProtocol'>
<method selector='providerBundleIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='providerConfiguration'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='setProviderBundleIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='providerBundleIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProviderConfiguration:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='providerConfiguration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NETunnelProviderSession'>
<method selector='sendProviderMessage:returnError:responseHandler:'>
<arg declared_type='NSData * _Nonnull' index='0' name='messageData' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<arg declared_type='void (^ _Nullable)(NSData * _Nullable)' function_pointer='true' index='2' name='responseHandler' type='@?'>
<arg declared_type='NSData * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startTunnelWithOptions:andReturnError:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='options' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stopTunnel'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEVPNConnection'>
<method selector='connectedDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='startVPNTunnelAndReturnError:'>
<arg declared_type='NSError * _Nullable * _Nullable' index='0' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startVPNTunnelWithOptions:andReturnError:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='options' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='status'>
<retval declared_type='NEVPNStatus' type='i' type64='q'/>
</method>
<method selector='stopVPNTunnel'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEVPNIKEv2SecurityAssociationParameters'>
<method selector='diffieHellmanGroup'>
<retval declared_type='NEVPNIKEv2DiffieHellmanGroup' type='i' type64='q'/>
</method>
<method selector='encryptionAlgorithm'>
<retval declared_type='NEVPNIKEv2EncryptionAlgorithm' type='i' type64='q'/>
</method>
<method selector='integrityAlgorithm'>
<retval declared_type='NEVPNIKEv2IntegrityAlgorithm' type='i' type64='q'/>
</method>
<method selector='lifetimeMinutes'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='setDiffieHellmanGroup:'>
<arg declared_type='NEVPNIKEv2DiffieHellmanGroup' index='0' name='diffieHellmanGroup' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEncryptionAlgorithm:'>
<arg declared_type='NEVPNIKEv2EncryptionAlgorithm' index='0' name='encryptionAlgorithm' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntegrityAlgorithm:'>
<arg declared_type='NEVPNIKEv2IntegrityAlgorithm' index='0' name='integrityAlgorithm' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLifetimeMinutes:'>
<arg declared_type='int32_t' index='0' name='lifetimeMinutes' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NEVPNManager'>
<method selector='connection'>
<retval declared_type='NEVPNConnection * _Nonnull' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOnDemandEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadFromPreferencesWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='localizedDescription'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='onDemandRules'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='protocol'>
<retval declared_type='NEVPNProtocol * _Nullable' type='@'/>
</method>
<method selector='protocolConfiguration'>
<retval declared_type='NEVPNProtocol * _Nullable' type='@'/>
</method>
<method selector='removeFromPreferencesWithCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveToPreferencesWithCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalizedDescription:'>
<arg declared_type='NSString * _Nullable' index='0' name='localizedDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnDemandEnabled:'>
<arg declared_type='BOOL' index='0' name='onDemandEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnDemandRules:'>
<arg declared_type='NSArray * _Nullable' index='0' name='onDemandRules' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProtocol:'>
<arg declared_type='NEVPNProtocol * _Nullable' index='0' name='protocol' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProtocolConfiguration:'>
<arg declared_type='NEVPNProtocol * _Nullable' index='0' name='protocolConfiguration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='NEVPNManager * _Nonnull' type='@'/>
</method>
</class>
<class name='NEVPNProtocol'>
<method selector='disconnectOnSleep'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='identityData'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='identityDataPassword'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='identityReference'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='passwordReference'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='proxySettings'>
<retval declared_type='NEProxySettings * _Nullable' type='@'/>
</method>
<method selector='serverAddress'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setDisconnectOnSleep:'>
<arg declared_type='BOOL' index='0' name='disconnectOnSleep' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentityData:'>
<arg declared_type='NSData * _Nullable' index='0' name='identityData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentityDataPassword:'>
<arg declared_type='NSString * _Nullable' index='0' name='identityDataPassword' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentityReference:'>
<arg declared_type='NSData * _Nullable' index='0' name='identityReference' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPasswordReference:'>
<arg declared_type='NSData * _Nullable' index='0' name='passwordReference' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProxySettings:'>
<arg declared_type='NEProxySettings * _Nullable' index='0' name='proxySettings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServerAddress:'>
<arg declared_type='NSString * _Nullable' index='0' name='serverAddress' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg declared_type='NSString * _Nullable' index='0' name='username' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='username'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='NEVPNProtocolIKEv2'>
<method selector='IKESecurityAssociationParameters'>
<retval declared_type='NEVPNIKEv2SecurityAssociationParameters * _Nonnull' type='@'/>
</method>
<method selector='certificateType'>
<retval declared_type='NEVPNIKEv2CertificateType' type='i' type64='q'/>
</method>
<method selector='childSecurityAssociationParameters'>
<retval declared_type='NEVPNIKEv2SecurityAssociationParameters * _Nonnull' type='@'/>
</method>
<method selector='deadPeerDetectionRate'>
<retval declared_type='NEVPNIKEv2DeadPeerDetectionRate' type='i' type64='q'/>
</method>
<method selector='disableMOBIKE'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='disableRedirect'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enablePFS'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableRevocationCheck'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='serverCertificateCommonName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='serverCertificateIssuerCommonName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setCertificateType:'>
<arg declared_type='NEVPNIKEv2CertificateType' index='0' name='certificateType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeadPeerDetectionRate:'>
<arg declared_type='NEVPNIKEv2DeadPeerDetectionRate' index='0' name='deadPeerDetectionRate' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisableMOBIKE:'>
<arg declared_type='BOOL' index='0' name='disableMOBIKE' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisableRedirect:'>
<arg declared_type='BOOL' index='0' name='disableRedirect' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnablePFS:'>
<arg declared_type='BOOL' index='0' name='enablePFS' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableRevocationCheck:'>
<arg declared_type='BOOL' index='0' name='enableRevocationCheck' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServerCertificateCommonName:'>
<arg declared_type='NSString * _Nullable' index='0' name='serverCertificateCommonName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServerCertificateIssuerCommonName:'>
<arg declared_type='NSString * _Nullable' index='0' name='serverCertificateIssuerCommonName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrictRevocationCheck:'>
<arg declared_type='BOOL' index='0' name='strictRevocationCheck' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseConfigurationAttributeInternalIPSubnet:'>
<arg declared_type='BOOL' index='0' name='useConfigurationAttributeInternalIPSubnet' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='strictRevocationCheck'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='useConfigurationAttributeInternalIPSubnet'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NEVPNProtocolIPSec'>
<method selector='authenticationMethod'>
<retval declared_type='NEVPNIKEAuthenticationMethod' type='i' type64='q'/>
</method>
<method selector='localIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='remoteIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setAuthenticationMethod:'>
<arg declared_type='NEVPNIKEAuthenticationMethod' index='0' name='authenticationMethod' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='localIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemoteIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='remoteIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSharedSecretReference:'>
<arg declared_type='NSData * _Nullable' index='0' name='sharedSecretReference' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseExtendedAuthentication:'>
<arg declared_type='BOOL' index='0' name='useExtendedAuthentication' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedSecretReference'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='useExtendedAuthentication'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSMutableURLRequest'>
<method selector='bindToHotspotHelperCommand:'>
<arg declared_type='NEHotspotHelperCommand * _Nonnull' index='0' name='command' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='evaluateTrustForConnection:peerCertificateChain:completionHandler:'>
<arg declared_type='NWTCPConnection * _Nonnull' index='0' name='connection' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='peerCertificateChain' type='@'/>
<arg declared_type='void (^ _Nonnull)(SecTrustRef _Nonnull)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='SecTrustRef _Nonnull' type='^{__SecTrust=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='provideIdentityForConnection:completionHandler:'>
<arg declared_type='NWTCPConnection * _Nonnull' index='0' name='connection' type='@'/>
<arg declared_type='void (^ _Nonnull)(SecIdentityRef _Nonnull, NSArray * _Nonnull)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='SecIdentityRef _Nonnull' type='^{__SecIdentity=}'/>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldEvaluateTrustForConnection:'>
<arg declared_type='NWTCPConnection * _Nonnull' index='0' name='connection' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldProvideIdentityForConnection:'>
<arg declared_type='NWTCPConnection * _Nonnull' index='0' name='connection' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NWBonjourServiceEndpoint'>
<method selector='domain'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='endpointWithName:type:domain:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='type' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='domain' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='type'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NWHostEndpoint'>
<method class_method='true' selector='endpointWithHostname:port:'>
<arg declared_type='NSString * _Nonnull' index='0' name='hostname' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='port' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='hostname'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='port'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NWPath'>
<method selector='isEqualToPath:'>
<arg declared_type='NWPath * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExpensive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='status'>
<retval declared_type='NWPathStatus' type='i' type64='q'/>
</method>
</class>
<class name='NWTCPConnection'>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectedPath'>
<retval declared_type='NWPath * _Nullable' type='@'/>
</method>
<method selector='endpoint'>
<retval declared_type='NWEndpoint * _Nonnull' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError * _Nullable' type='@'/>
</method>
<method selector='hasBetterPath'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithUpgradeForConnection:'>
<arg declared_type='NWTCPConnection * _Nonnull' index='0' name='connection' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isViable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localAddress'>
<retval declared_type='NWEndpoint * _Nullable' type='@'/>
</method>
<method selector='readLength:completionHandler:'>
<arg declared_type='NSUInteger' index='0' name='length' type='I' type64='Q'/>
<arg declared_type='void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='NSData * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='readMinimumLength:maximumLength:completionHandler:'>
<arg declared_type='NSUInteger' index='0' name='minimum' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='maximum' type='I' type64='Q'/>
<arg declared_type='void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='NSData * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='remoteAddress'>
<retval declared_type='NWEndpoint * _Nullable' type='@'/>
</method>
<method selector='state'>
<retval declared_type='NWTCPConnectionState' type='i' type64='q'/>
</method>
<method selector='txtRecord'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='write:completionHandler:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeClose'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NWTLSParameters'>
<method selector='SSLCipherSuites'>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method selector='TLSSessionID'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='maximumSSLProtocolVersion'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minimumSSLProtocolVersion'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setMaximumSSLProtocolVersion:'>
<arg declared_type='NSUInteger' index='0' name='maximumSSLProtocolVersion' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumSSLProtocolVersion:'>
<arg declared_type='NSUInteger' index='0' name='minimumSSLProtocolVersion' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSSLCipherSuites:'>
<arg declared_type='NSSet * _Nullable' index='0' name='SSLCipherSuites' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTLSSessionID:'>
<arg declared_type='NSData * _Nullable' index='0' name='TLSSessionID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NWUDPSession'>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentPath'>
<retval declared_type='NWPath * _Nullable' type='@'/>
</method>
<method selector='endpoint'>
<retval declared_type='NWEndpoint * _Nonnull' type='@'/>
</method>
<method selector='hasBetterPath'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithUpgradeForSession:'>
<arg declared_type='NWUDPSession * _Nonnull' index='0' name='session' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isViable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumDatagramLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='resolvedEndpoint'>
<retval declared_type='NWEndpoint * _Nullable' type='@'/>
</method>
<method selector='setReadHandler:maxDatagrams:'>
<arg declared_type='void (^ _Nonnull)(NSArray * _Nullable, NSError * _Nullable)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='NSArray * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSUInteger' index='1' name='maxDatagrams' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='NWUDPSessionState' type='i' type64='q'/>
</method>
<method selector='tryNextResolvedEndpoint'>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeDatagram:completionHandler:'>
<arg declared_type='NSData * _Nonnull' index='0' name='datagram' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeMultipleDatagrams:completionHandler:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='datagramArray' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='NWTCPConnectionAuthenticationDelegate'>
<method selector='evaluateTrustForConnection:peerCertificateChain:completionHandler:' type='v20@0:4@8@12@?16' type64='v40@0:8@16@24@?32'>
<arg declared_type='NWTCPConnection * _Nonnull' index='0' name='connection' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='peerCertificateChain' type='@'/>
<arg declared_type='void (^ _Nonnull)(SecTrustRef _Nonnull)' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='SecTrustRef _Nonnull' type='^{__SecTrust=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='provideIdentityForConnection:completionHandler:' type='v16@0:4@8@?12' type64='v32@0:8@16@?24'>
<arg declared_type='NWTCPConnection * _Nonnull' index='0' name='connection' type='@'/>
<arg declared_type='void (^ _Nonnull)(SecIdentityRef _Nonnull, NSArray * _Nonnull)' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='SecIdentityRef _Nonnull' type='^{__SecIdentity=}'/>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldEvaluateTrustForConnection:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NWTCPConnection * _Nonnull' index='0' name='connection' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldProvideIdentityForConnection:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NWTCPConnection * _Nonnull' index='0' name='connection' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
</signatures>
