<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='CDStruct_11f37819' type='{_CDStruct_11f37819=&quot;_field1&quot;L&quot;_field2&quot;^@&quot;_field3&quot;^L&quot;_field4&quot;[5L]}' type64='{_CDStruct_11f37819=&quot;_field1&quot;Q&quot;_field2&quot;^@&quot;_field3&quot;^Q&quot;_field4&quot;[5Q]}'>
<field declared_type='unsigned long' name='_field1' type='L' type64='Q'/>
<field declared_type='id*' name='_field2' type='^@'/>
<field declared_type='unsigned long*' name='_field3' type='^L' type64='^Q'/>
<field declared_type='unsigned long*' name='_field4' type='[5L]' type64='[5Q]'/>
</struct>
<struct name='CDStruct_c27b2f7b' type='{_CDStruct_c27b2f7b=&quot;_field1&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;_field2&quot;f&quot;_field3&quot;f&quot;_field4&quot;C}' type64='{_CDStruct_c27b2f7b=&quot;_field1&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;_field2&quot;f&quot;_field3&quot;f&quot;_field4&quot;C}'>
<field declared_type='struct CGPoint' name='_field1' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
<field declared_type='float' name='_field2' type='f'/>
<field declared_type='float' name='_field3' type='f'/>
<field declared_type='unsigned char' name='_field4' type='C'/>
</struct>
<class name='NSArray'>
<method selector='_uiaUniqueIndexOfObject:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='NSObject'>
<method selector='ancestry'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='axError'>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='axuiElementRef'>
<retval declared_type='struct __AXUIElement*' type='^{__AXUIElement=}'/>
</method>
<method selector='centerPoint'>
<retval declared_type='NSValue*' type='@'/>
</method>
<method selector='checkIsValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='childWithTestingTrait:'>
<arg declared_type='NSString*' index='0' name='arg1' type='@'/>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='children'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='descendantWithTestingTrait:'>
<arg declared_type='NSString*' index='0' name='arg1' type='@'/>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='descendants'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='descendantsWithAttributes:traits:'>
<arg declared_type='NSDictionary*' index='0' name='arg1' type='@'/>
<arg declared_type='unsigned long long' index='1' name='arg2' type='Q'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='firstElementOfAttribute:withValue:forAttribute:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='NSInteger' index='2' name='arg3' type='i' type64='q'/>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='focusedElement'>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='hitpoint'>
<retval declared_type='NSValue*' type='@'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parent'>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='performAXAction:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performAXAction:withValue:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pid'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='rect'>
<retval declared_type='NSValue*' type='@'/>
</method>
<method class_method='true' selector='registerObserver:forAXNotification:'>
<arg declared_type='struct __AXObserver*' index='0' name='arg1' type='^{__AXObserver=}'/>
<arg declared_type='NSInteger' index='1' name='arg2' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='registerObserver:forAXNotifications:'>
<arg declared_type='struct __AXObserver*' index='0' name='arg1' type='^{__AXObserver=}'/>
<arg declared_type='BOOL' index='1' name='arg2' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='responder'>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='setValue:forAttribute:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='NSInteger' index='1' name='arg2' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='stringForAXError:'>
<arg declared_type='long' index='0' name='arg1' type='l' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringForAXNotification:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringForAllKnownAttributes'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringForAttributes:'>
<arg declared_type='NSArray*' index='0' name='arg1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringForTraits:'>
<arg declared_type='unsigned long long' index='0' name='arg1' type='Q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='traits'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='traitsNumber'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='uiaxAccessibilityUIServerElement'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxApplicationAtPosition:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxElementAtPosition:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxElementWithAXUIElementRef:'>
<arg declared_type='struct __AXUIElement*' index='0' name='arg1' type='^{__AXUIElement=}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxFocusedApplicationElement'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxFocusedApplicationsElementArray'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='uiaxSpringBoardElement'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxSystemApplicationElement'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxSystemWideElement'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='unregisterObserver:forAXNotification:'>
<arg declared_type='struct __AXObserver*' index='0' name='arg1' type='^{__AXObserver=}'/>
<arg declared_type='NSInteger' index='1' name='arg2' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='valueForAttribute:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForAttribute:parameter:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valuesForAllKnownAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='valuesForAttributes:'>
<arg declared_type='NSArray*' index='0' name='arg1' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSValue'>
<method selector='height'>
<retval declared_type='id' type='@'/>
</method>
<method selector='origin'>
<retval declared_type='id' type='@'/>
</method>
<method selector='size'>
<retval declared_type='id' type='@'/>
</method>
<method selector='width'>
<retval declared_type='id' type='@'/>
</method>
<method selector='x'>
<retval declared_type='id' type='@'/>
</method>
<method selector='y'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAActionSheet'>
<method class_method='true' selector='_classForSimpleUIAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='cancelButton'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toOneRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAActivityView'>
<method selector='cancelButton'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toOneRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAAlert'>
<method class_method='true' selector='_classForSimpleUIAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='_moreToOneRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_nameFromChildForAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='buttons'>
<retval declared_type='id' type='@'/>
</method>
<method selector='cancelButton'>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultButton'>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toOneRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAApplication'>
<method selector='_axBundle'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_axBundlePath'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_axMainWindow'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_bundle'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_bundleID'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_bundlePath'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_invalidate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_isSystemApplication'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_name'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_scrollViewWithElementType:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_state'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='actionSheet'>
<retval declared_type='id' type='@'/>
</method>
<method selector='activityView'>
<retval declared_type='id' type='@'/>
</method>
<method selector='alert'>
<retval declared_type='id' type='@'/>
</method>
<method selector='appIconScrollView'>
<retval declared_type='id' type='@'/>
</method>
<method selector='appItemScrollView'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='attributeKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bundleID'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bundlePath'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bundleVersion'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='editingMenu'>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='interfaceOrientation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isCameraIrisOpen'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isVisible'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyWindow'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyboard'>
<retval declared_type='id' type='@'/>
</method>
<method selector='localizedStringForKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='localizedStringForKey:withOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mainWindow'>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='id' type='@'/>
</method>
<method selector='navigationBar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='preferencesValueForKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingSynonymStrings'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPreferencesValue:forKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sideAppDivider'>
<retval declared_type='id' type='@'/>
</method>
<method selector='stateDescription'>
<retval declared_type='id' type='@'/>
</method>
<method selector='statusBar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tabBar'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toManyRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toOneRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='toolbar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='version'>
<retval declared_type='id' type='@'/>
</method>
<method selector='windows'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAButton'>
<method selector='scriptingActionExpressionShouldFavorTapOffset'>
<retval declared_type='id' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIACollectionCell'>
<method selector='name'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingActionExpressionShouldFavorTapOffset'>
<retval declared_type='id' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIACollectionView'>
<method class_method='true' selector='_classForSimpleUIAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='_emptyCaches'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_moreToManyRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='cells'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollItemCount'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollItemIndex'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toManyRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
<method selector='visibleCells'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAElement'>
<method class_method='true' selector='_classForSimpleUIAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='_convertPointFromCurrentInterfaceOrientation:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='_convertPointToCurrentInterfaceOrientation:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='_convertRectFromCurrentInterfaceOrientation:'>
<arg declared_type='CGRect' index='0' name='arg1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='_convertRectToCurrentInterfaceOrientation:'>
<arg declared_type='CGRect' index='0' name='arg1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='_countsString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_createdTime'>
<retval declared_type='double' type='d'/>
</method>
<method selector='_delayForAnimationsInProgress'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_delayForTimeInterval:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_dragInsideWithOptions:withFlick:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='BOOL' index='1' name='arg2' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_elementAtPosition:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_elementForSimpleUIAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_elementForUIAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_elementWithUIAXElement:parent:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_elementsForUIAXElements:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_elementsForUIAXElements:axFilter:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='SEL' index='1' name='arg2' type=':'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_elementsOfClass:forSelector:'>
<arg declared_type='Class' index='0' name='arg1' type='#'/>
<arg declared_type='SEL' index='1' name='arg2' type=':'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_emptyCaches'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_hitPointForObject:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_hitPointFromDictionary:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_hitpoint'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_initWithUIAXElement:parent:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_inspectConfirmElement:forAXAncestry:index:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='NSUInteger*' index='2' name='arg3' type='^I' type64='^Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_inspectedElementForAXAncestry:index:triedKeys:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='NSUInteger*' index='1' name='arg2' type='^I' type64='^Q'/>
<arg declared_type='id' index='2' name='arg3' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_inspectedToManyRelationship:forAXAncestry:index:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='NSUInteger*' index='2' name='arg3' type='^I' type64='^Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_inspectedToOneRelationship:forAXAncestry:index:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='NSUInteger*' index='2' name='arg3' type='^I' type64='^Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_invalidate'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_invocationForInvoker:selector:arguments:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='SEL' index='1' name='arg2' type=':'/>
<arg declared_type='char*' index='2' name='arg3' type='*'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsEscapedStringForString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsMethodCallStringForInvoker:selector:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='SEL' index='1' name='arg2' type=':'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsMethodNameForSelector:'>
<arg declared_type='SEL' index='0' name='arg1' type=':'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsStringForDictionary:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsStringForInvocation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsStringForInvocationPath:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsStringForObject:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsStringForPoint:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsStringForRect:'>
<arg declared_type='CGRect' index='0' name='arg1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsStringForString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsStringForUIAElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_jsStringForValue:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_lastAccessedTime'>
<retval declared_type='double' type='d'/>
</method>
<method class_method='true' selector='_liveCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='_logInfo'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_logInfoWithChildren'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_logVerbosity:format:'>
<arg declared_type='NSUInteger' index='0' name='arg1' type='I' type64='Q'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_maxCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='_nameForAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_objectWithPatienceInvocationFromUIAObject:selector:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='SEL' index='1' name='arg2' type=':'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_patienceForAttribute:value:'>
<arg declared_type='SEL' index='0' name='arg1' type=':'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_patienceInvocationPathForUIAObject:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_patienceRetryInterval'>
<retval declared_type='double' type='d'/>
</method>
<method class_method='true' selector='_performInvocationPath:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_predicateForPredicateOrString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_prepareForAction:'>
<arg declared_type='SEL' index='0' name='arg1' type=':'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='_rectFromDictionary:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_rotateWithOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_scriptingSynonymsForSubElement:maxCount:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_selfPatienceInvocation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_setLastAccessedTime:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_setPatienceInvocation:forUIAObject:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_setPatienceRetryInterval:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setSelfPatienceInvocation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_shouldAllowSettingValue'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_synonymToManyRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_transformToRotateFromInterfaceOrientation:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method class_method='true' selector='_transformToRotateToInterfaceOrientation:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method class_method='true' selector='_uiaClassForClassName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='_uiaHitpoint'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_uiaRect'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_valueForAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_waitForInvocationPath:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionSheet'>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionSheets'>
<retval declared_type='id' type='@'/>
</method>
<method selector='activityIndicators'>
<retval declared_type='id' type='@'/>
</method>
<method selector='activityView'>
<retval declared_type='id' type='@'/>
</method>
<method selector='activityViews'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='allKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='allKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='ancestry'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='attributeKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='attributeKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='attributes'>
<retval declared_type='id' type='@'/>
</method>
<method selector='buttons'>
<retval declared_type='id' type='@'/>
</method>
<method selector='checkIsValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='chopPatience'>
<retval declared_type='void' type='v'/>
</method>
<method selector='className'>
<retval declared_type='id' type='@'/>
</method>
<method selector='collectionViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='copyWithZone:'>
<arg declared_type='struct _NSZone*' index='0' name='arg1' type='^{_NSZone=}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dom'>
<retval declared_type='id' type='@'/>
</method>
<method selector='doubleTap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInsideWithOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='editingMenus'>
<retval declared_type='id' type='@'/>
</method>
<method selector='elementAtPoint:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementAtPosition:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementForUIAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='elements'>
<retval declared_type='id' type='@'/>
</method>
<method selector='flickInsideWithOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='focusedElement'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hasKeyboardFocus'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hasRemoteFocus'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hash'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='hint'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hitpoint'>
<retval declared_type='id' type='@'/>
</method>
<method selector='horizontalSizeClass'>
<retval declared_type='id' type='@'/>
</method>
<method selector='images'>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='initialize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqual:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelected'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isStarkElement'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVisible'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyboard'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyboards'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='label'>
<retval declared_type='id' type='@'/>
</method>
<method selector='links'>
<retval declared_type='id' type='@'/>
</method>
<method selector='logAXInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='logAXTree'>
<retval declared_type='void' type='v'/>
</method>
<method selector='logElement'>
<retval declared_type='void' type='v'/>
</method>
<method selector='logElementTree'>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='id' type='@'/>
</method>
<method selector='navigationBar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='navigationBars'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pageIndicators'>
<retval declared_type='id' type='@'/>
</method>
<method selector='parentElement'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='patience'>
<retval declared_type='double' type='d'/>
</method>
<method selector='pickers'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pid'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='popPatience'>
<retval declared_type='double' type='d'/>
</method>
<method selector='popover'>
<retval declared_type='id' type='@'/>
</method>
<method selector='popovers'>
<retval declared_type='id' type='@'/>
</method>
<method selector='progressIndicators'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='pushPatience:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rect'>
<retval declared_type='id' type='@'/>
</method>
<method selector='redo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='responder'>
<retval declared_type='id' type='@'/>
</method>
<method selector='rotateWithOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scriptingActionExpressionShouldFavorTapOffset'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingFavoredSynonymString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingInvocationFullExpressionString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingInvocationString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingSynonymFullExpressionString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingSynonymStrings'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingSynonyms'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollDown'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollLeft'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollRight'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollToElementWithName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollToElementWithPredicate:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollToElementWithValue:forKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollToVisible'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollUp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='searchBars'>
<retval declared_type='id' type='@'/>
</method>
<method selector='secureTextFields'>
<retval declared_type='id' type='@'/>
</method>
<method selector='segmentedControls'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='setPatience:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sliders'>
<retval declared_type='id' type='@'/>
</method>
<method selector='staticTexts'>
<retval declared_type='id' type='@'/>
</method>
<method selector='switches'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tabBar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tabBars'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tableViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tapWithOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='id' type='@'/>
</method>
<method selector='textFields'>
<retval declared_type='id' type='@'/>
</method>
<method selector='textViews'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toManyRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='toManyRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='toManyRelationships'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toOneRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='toOneRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='toOneRelationships'>
<retval declared_type='id' type='@'/>
</method>
<method selector='toolbar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='toolbars'>
<retval declared_type='id' type='@'/>
</method>
<method selector='touchAndHold:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchWithOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='twoFingerTap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='type'>
<retval declared_type='id' type='@'/>
</method>
<method selector='uiaxElement'>
<retval declared_type='id' type='@'/>
</method>
<method selector='undo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='id' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForUndefinedKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='verticalSizeClass'>
<retval declared_type='id' type='@'/>
</method>
<method selector='waitForInvalid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='webViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='withName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='withPredicate:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='withValue:forKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAElementArray'>
<method class_method='true' selector='_arrayWithArray:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_cacheArray:atPtr:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id*' index='1' name='arg2' type='^@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_cachedArrayAtPtr:'>
<arg declared_type='id*' index='0' name='arg1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_initWithArray:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_isStillFreshAtTime:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_lastAccessedTime'>
<retval declared_type='double' type='d'/>
</method>
<method class_method='true' selector='_liveCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='_logLocalizedStringHintForKey:testValue:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_maxCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='_objectWithPatienceInvocationFromUIAObject:selector:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='SEL' index='1' name='arg2' type=':'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_refreshedTime'>
<retval declared_type='double' type='d'/>
</method>
<method class_method='true' selector='_removeCachedArrayAtPtr:'>
<arg declared_type='id*' index='0' name='arg1' type='^@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_scriptingIndexSynonymsForElement:maxCount:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_selfPatienceInvocation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_setArray:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setLastAccessedTime:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setSelfPatienceInvocation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_withClass:'>
<arg declared_type='Class' index='0' name='arg1' type='#'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_withName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_withPredicate:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_withValue:forKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='id' type='@'/>
</method>
<method selector='elementOfClass:atIndex:'>
<arg declared_type='Class' index='0' name='arg1' type='#'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='firstWithName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='firstWithPredicate:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='firstWithValue:forKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='hash'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='initialize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEqual:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToArray:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logElementTrees'>
<retval declared_type='void' type='v'/>
</method>
<method selector='logElements'>
<retval declared_type='void' type='v'/>
</method>
<method selector='nsArray'>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='arg1' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingFavoredIndexSynonymForElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingIndexSynonymsForElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingInvocationFullExpressionString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingInvocationString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='withClass:'>
<arg declared_type='Class' index='0' name='arg1' type='#'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='withName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='withPredicate:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='withValue:forKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAElementNil'>
<method class_method='true' selector='_elementNilWithInvocation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_elementNilWithPatienceInvocation:'>
<arg declared_type='SEL' index='0' name='arg1' type=':'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_initWithInvocation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_isStillFreshAtTime:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_lastAccessedTime'>
<retval declared_type='double' type='d'/>
</method>
<method class_method='true' selector='_liveCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='_logInfoWithChildren'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_maxCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='_objectWithPatienceInvocationFromUIAObject:selector:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='SEL' index='1' name='arg2' type=':'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_raiseInvalidElementAction'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_refreshedTime'>
<retval declared_type='double' type='d'/>
</method>
<method selector='_selfPatienceInvocation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_setLastAccessedTime:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setSelfPatienceInvocation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityUI'>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionSheet'>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionSheets'>
<retval declared_type='id' type='@'/>
</method>
<method selector='activityIndicators'>
<retval declared_type='id' type='@'/>
</method>
<method selector='activityView'>
<retval declared_type='id' type='@'/>
</method>
<method selector='activityViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='alert'>
<retval declared_type='id' type='@'/>
</method>
<method selector='ancestry'>
<retval declared_type='id' type='@'/>
</method>
<method selector='appIconScrollView'>
<retval declared_type='id' type='@'/>
</method>
<method selector='appItemScrollView'>
<retval declared_type='id' type='@'/>
</method>
<method selector='architecture'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bundleID'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bundlePath'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bundleVersion'>
<retval declared_type='id' type='@'/>
</method>
<method selector='buttons'>
<retval declared_type='id' type='@'/>
</method>
<method selector='cancelButton'>
<retval declared_type='id' type='@'/>
</method>
<method selector='cells'>
<retval declared_type='id' type='@'/>
</method>
<method selector='checkIsValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='containsObject:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentArea'>
<retval declared_type='id' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='countByEnumeratingWithState:objects:count:'>
<arg declared_type='CDStruct_11f37819*' index='0' name='arg1' type='^{_CDStruct_11f37819=L^@^L[5L]}' type64='^{_CDStruct_11f37819=Q^@^Q[5Q]}'/>
<arg declared_type='id*' index='1' name='arg2' type='^@'/>
<arg declared_type='NSUInteger' index='2' name='arg3' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultButton'>
<retval declared_type='id' type='@'/>
</method>
<method selector='depth'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dismiss'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dom'>
<retval declared_type='id' type='@'/>
</method>
<method selector='doubleTap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragInsideWithOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragToValue:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='editingMenu'>
<retval declared_type='id' type='@'/>
</method>
<method selector='editingMenus'>
<retval declared_type='id' type='@'/>
</method>
<method selector='elementOfClass:atIndex:'>
<arg declared_type='Class' index='0' name='arg1' type='#'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='elements'>
<retval declared_type='id' type='@'/>
</method>
<method selector='firstWithName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='firstWithPredicate:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='firstWithValue:forKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='flickInsideWithOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='focusedElement'>
<retval declared_type='id' type='@'/>
</method>
<method selector='goToNextPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='goToPreviousPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='groups'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hasKeyboardFocus'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hasOpenMenu'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hasRemoteFocus'>
<retval declared_type='id' type='@'/>
</method>
<method selector='headers'>
<retval declared_type='id' type='@'/>
</method>
<method selector='helpTag'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hint'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hitpoint'>
<retval declared_type='id' type='@'/>
</method>
<method selector='horizontalSizeClass'>
<retval declared_type='id' type='@'/>
</method>
<method selector='images'>
<retval declared_type='id' type='@'/>
</method>
<method selector='indexOfObject:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='inputMode'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isBackgroundApp'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isCameraIrisOpen'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFront'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isSelected'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isSeparatorItem'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isStarkElement'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVisible'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyEquivalent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyEquivalentModifiers'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyWindow'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyboard'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyboards'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='label'>
<retval declared_type='id' type='@'/>
</method>
<method selector='leftButton'>
<retval declared_type='id' type='@'/>
</method>
<method selector='links'>
<retval declared_type='id' type='@'/>
</method>
<method selector='localizations'>
<retval declared_type='id' type='@'/>
</method>
<method selector='localizedStringForKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='localizedStringForKey:value:table:bundlePath:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='id' index='2' name='arg3' type='@'/>
<arg declared_type='id' index='3' name='arg4' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='localizedStringForKey:withOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logAXInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='logAXTree'>
<retval declared_type='void' type='v'/>
</method>
<method selector='logElement'>
<retval declared_type='void' type='v'/>
</method>
<method selector='logElementTree'>
<retval declared_type='void' type='v'/>
</method>
<method selector='mainWindow'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='maxValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='minValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='id' type='@'/>
</method>
<method selector='navigationBar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='navigationBars'>
<retval declared_type='id' type='@'/>
</method>
<method selector='nsArray'>
<retval declared_type='id' type='@'/>
</method>
<method selector='numberOfCells'>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='arg1' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectEnumerator'>
<retval declared_type='id' type='@'/>
</method>
<method selector='orientation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pageCount'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pageIndex'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pageIndicators'>
<retval declared_type='id' type='@'/>
</method>
<method selector='parentElement'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pickers'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pid'>
<retval declared_type='id' type='@'/>
</method>
<method selector='popover'>
<retval declared_type='id' type='@'/>
</method>
<method selector='popovers'>
<retval declared_type='id' type='@'/>
</method>
<method selector='progressIndicators'>
<retval declared_type='id' type='@'/>
</method>
<method selector='rect'>
<retval declared_type='id' type='@'/>
</method>
<method selector='responder'>
<retval declared_type='id' type='@'/>
</method>
<method selector='reverseObjectEnumerator'>
<retval declared_type='id' type='@'/>
</method>
<method selector='rightButton'>
<retval declared_type='id' type='@'/>
</method>
<method selector='rotateWithOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scriptingInvocationFullExpressionString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingInvocationString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollDown'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollLeft'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollRight'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollToElementWithName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollToElementWithPredicate:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollToElementWithValue:forKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollToVisible'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scrollUp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='searchBars'>
<retval declared_type='id' type='@'/>
</method>
<method selector='secureTextFields'>
<retval declared_type='id' type='@'/>
</method>
<method selector='segmentedControls'>
<retval declared_type='id' type='@'/>
</method>
<method selector='selectPage:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectValue:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedButton'>
<retval declared_type='id' type='@'/>
</method>
<method selector='selectedValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setValue:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sideAppDivider'>
<retval declared_type='id' type='@'/>
</method>
<method selector='sliders'>
<retval declared_type='id' type='@'/>
</method>
<method selector='stateDescription'>
<retval declared_type='id' type='@'/>
</method>
<method selector='staticTexts'>
<retval declared_type='id' type='@'/>
</method>
<method selector='statusBar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='switches'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tabBar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tabBars'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tableViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tapWithOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='id' type='@'/>
</method>
<method selector='textFields'>
<retval declared_type='id' type='@'/>
</method>
<method selector='textLength'>
<retval declared_type='id' type='@'/>
</method>
<method selector='textViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='toolbar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='toolbars'>
<retval declared_type='id' type='@'/>
</method>
<method selector='touchAndHold:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='triggerDictationFromAudioInputPath:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='twoFingerTap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='typeString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='uiaxElement'>
<retval declared_type='id' type='@'/>
</method>
<method selector='url'>
<retval declared_type='id' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
<method selector='values'>
<retval declared_type='id' type='@'/>
</method>
<method selector='version'>
<retval declared_type='id' type='@'/>
</method>
<method selector='verticalSizeClass'>
<retval declared_type='id' type='@'/>
</method>
<method selector='visibleCells'>
<retval declared_type='id' type='@'/>
</method>
<method selector='visibleFrame'>
<retval declared_type='id' type='@'/>
</method>
<method selector='visibleGroups'>
<retval declared_type='id' type='@'/>
</method>
<method selector='waitForInvalid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='webViews'>
<retval declared_type='id' type='@'/>
</method>
<method selector='wheels'>
<retval declared_type='id' type='@'/>
</method>
<method selector='windows'>
<retval declared_type='id' type='@'/>
</method>
<method selector='withName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='withPredicate:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='withValue:forKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAElementSynonym'>
<method class_method='true' selector='_setAssociatedStringExpressions:forSynonymString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='associatedStringExpressionsForSynonymString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithRelationship:attribute:value:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='id' index='2' name='arg3' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='relationship'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringForScriptingLanguage:withOptions:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='synonymForRelationship:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='synonymForRelationship:attribute:value:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='id' index='2' name='arg3' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAHardwareKeyboard'>
<method selector='capsLockKeyDown'>
<retval declared_type='void' type='v'/>
</method>
<method selector='capsLockKeyUp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='commandKeyDown'>
<retval declared_type='void' type='v'/>
</method>
<method selector='commandKeyUp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='controlKeyDown'>
<retval declared_type='void' type='v'/>
</method>
<method selector='controlKeyUp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteBackwardKeyCode'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deleteForwardKeyCode'>
<retval declared_type='id' type='@'/>
</method>
<method selector='downArrowKeyCode'>
<retval declared_type='id' type='@'/>
</method>
<method selector='enterKeyCode'>
<retval declared_type='id' type='@'/>
</method>
<method selector='eventGenerator'>
<retval declared_type='UIASyntheticEvents*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyDownWithKeyCode:'>
<arg declared_type='NSUInteger' index='0' name='arg1' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyDownWithString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyUpWithKeyCode:'>
<arg declared_type='NSUInteger' index='0' name='arg1' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyUpWithString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='leftArrowKeyCode'>
<retval declared_type='id' type='@'/>
</method>
<method selector='modifierState'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='optionKeyDown'>
<retval declared_type='void' type='v'/>
</method>
<method selector='optionKeyUp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pressKeyWithKeyCode:'>
<arg declared_type='NSUInteger' index='0' name='arg1' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pressKeyWithString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightArrowKeyCode'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setModifierState:'>
<arg declared_type='unsigned int' index='0' name='modifierState' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedHardwareKeyboard'>
<retval declared_type='id' type='@'/>
</method>
<method selector='shiftKeyDown'>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftKeyUp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='upArrowKeyCode'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAHost'>
<method selector='performTaskWithPath:arguments:timeout:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='id' index='2' name='arg3' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAKey'>
<method selector='_delayForAnimationsInProgress'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scriptingActionExpressionShouldFavorTapOffset'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAKeyboard'>
<method selector='_delayForTyping'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_typeKeyForString:keyLayout:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputMode'>
<retval declared_type='id' type='@'/>
</method>
<method selector='interKeyDelay'>
<retval declared_type='double' type='d'/>
</method>
<method selector='interKeyDelayVariance'>
<retval declared_type='double' type='d'/>
</method>
<method selector='setInterKeyDelay:'>
<arg declared_type='double' index='0' name='interKeyDelay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInterKeyDelayVariance:'>
<arg declared_type='double' index='0' name='interKeyDelayVariance' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='triggerDictationFromAudioInputPath:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='typeString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIALink'>
<method selector='scriptingActionExpressionShouldFavorTapOffset'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIALocalizedValue'>
<method selector='_jsVariableExpressionString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_jsVariableName'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bundleID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bundlePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithAXAttributedString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='tableName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='UIANavigationBar'>
<method class_method='true' selector='_moreToOneRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_navBarShouldAcceptAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='elements'>
<retval declared_type='id' type='@'/>
</method>
<method selector='leftButton'>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='id' type='@'/>
</method>
<method selector='rightButton'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toOneRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAPageIndicator'>
<method selector='_flipPages:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='goToNextPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='goToPreviousPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageCount'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pageIndex'>
<retval declared_type='id' type='@'/>
</method>
<method selector='selectPage:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIAPicker'>
<method class_method='true' selector='_moreToManyRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toManyRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='wheels'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAPickerWheel'>
<method selector='_spinWheel:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='elements'>
<retval declared_type='id' type='@'/>
</method>
<method selector='selectValue:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='values'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAPopover'>
<method selector='dismiss'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIARecorder'>
<method selector='_handEnded:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_handStarted:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_releaseEvents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_scriptingStringForOffsetWithScreenPoint:inRect:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGRect' index='1' name='arg2' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_scriptingStringForPoint:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='currentAction'>
<retval declared_type='UIARecorderAction*' type='@'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultRecorder'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='expressionFlushTimer'>
<retval declared_type='NSTimer*' type='@'/>
</method>
<method selector='flushDragExpressions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flushKeystrokes:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flushTapExpression:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleAXEventRepresentation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleAlert'>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleOrientationChange'>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isRecording'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keystrokeFlushTimer'>
<retval declared_type='NSTimer*' type='@'/>
</method>
<method selector='keystrokes'>
<retval declared_type='NSMutableString*' type='@'/>
</method>
<method selector='lastActionTime'>
<retval declared_type='double' type='d'/>
</method>
<method selector='markNewActionAndLog:'>
<arg declared_type='BOOL' index='0' name='arg1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pendingDragExpressions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pendingTapExpression'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='postElementNotFoundAtPoint:description:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postMutlitouchGestureDetected'>
<retval declared_type='void' type='v'/>
</method>
<method selector='postRecordedExpression:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postStaleEventMessage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='previousAXElement'>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='releaseTimeForMostRecentEvent'>
<retval declared_type='double' type='d'/>
</method>
<method selector='setCurrentAction:'>
<arg declared_type='UIARecorderAction*' index='0' name='currentAction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpressionFlushTimer:'>
<arg declared_type='NSTimer*' index='0' name='expressionFlushTimer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsRecording:'>
<arg declared_type='BOOL' index='0' name='isRecording' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeystrokeFlushTimer:'>
<arg declared_type='NSTimer*' index='0' name='keystrokeFlushTimer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastActionTime:'>
<arg declared_type='double' index='0' name='lastActionTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPendingDragExpressions:'>
<arg declared_type='NSArray*' index='0' name='pendingDragExpressions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPendingTapExpression:'>
<arg declared_type='NSArray*' index='0' name='pendingTapExpression' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreviousAXElement:'>
<arg declared_type='UIAXElement*' index='0' name='previousAXElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReleaseTimeForMostRecentEvent:'>
<arg declared_type='double' index='0' name='releaseTimeForMostRecentEvent' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTapCount:'>
<arg declared_type='unsigned int' index='0' name='tapCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUiaTarget:'>
<arg declared_type='UIATarget*' index='0' name='uiaTarget' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='start'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tapCount'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='uiaTarget'>
<retval declared_type='UIATarget*' type='@'/>
</method>
</class>
<class name='UIARecorderAction'>
<method class_method='true' selector='_elementCanScroll:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_initWithAXEventRepresentation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionType'>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='actionWithAXEventRepresentation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='axElement'>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='duration'>
<retval declared_type='double' type='d'/>
</method>
<method selector='element'>
<retval declared_type='UIAElement*' type='@'/>
</method>
<method selector='elementCanScroll'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='endLocation'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='expression'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='expressionForElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='lastUpdateTime'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='points'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setActionType:'>
<arg declared_type='int' index='0' name='actionType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxElement:'>
<arg declared_type='UIAXElement*' index='0' name='axElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setElement:'>
<arg declared_type='UIAElement*' index='0' name='element' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setElementCanScroll:'>
<arg declared_type='BOOL' index='0' name='elementCanScroll' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndLocation:'>
<arg declared_type='CGPoint' index='0' name='endLocation' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpression:'>
<arg declared_type='NSArray*' index='0' name='expression' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyName:'>
<arg declared_type='NSString*' index='0' name='keyName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastUpdateTime:'>
<arg declared_type='long long' index='0' name='lastUpdateTime' type='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPoints:'>
<arg declared_type='NSArray*' index='0' name='points' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartLocation:'>
<arg declared_type='CGPoint' index='0' name='startLocation' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartTime:'>
<arg declared_type='long long' index='0' name='startTime' type='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTouchCount:'>
<arg declared_type='unsigned int' index='0' name='touchCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startLocation'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='startTime'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='touchCount'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='updateWithAXEventRepresentation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIARemote'>
<method selector='clickDown'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickLeft'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickMenu'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickMicrophone'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickPlayPause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickRight'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickSelect'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickUp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='eventGenerator'>
<retval declared_type='UIASyntheticEvents*' type='@'/>
</method>
<method selector='holdDown:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdLeft:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdMenu:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdMicrophone:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdPlayPause:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdRight:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdSelect:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdUp:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='sharedRemote'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAScreen'>
<method selector='_initWithUIScreen:parent:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_uiScreen'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_uiaApplicationFrame'>
<retval declared_type='id' type='@'/>
</method>
<method selector='applicationFrame'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='attributeKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bounds'>
<retval declared_type='id' type='@'/>
</method>
<method selector='brightness'>
<retval declared_type='id' type='@'/>
</method>
<method selector='copyWithZone:'>
<arg declared_type='struct _NSZone*' index='0' name='arg1' type='^{_NSZone=}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scale'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBrightness:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='uiScreen'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIASegmentedControl'>
<method selector='selectedButton'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIASlider'>
<method selector='dragToValue:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='elements'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAStaticText'>
<method selector='_shouldAllowSettingValue'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIASwitch'>
<method selector='elements'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setValue:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIASyntheticEvents'>
<method selector='_UIACreateIOHIDEventType:'>
<arg declared_type='NSUInteger' index='0' name='arg1' type='I' type64='Q'/>
<retval declared_type='struct __IOHIDEvent*' type='^{__IOHIDEvent=}'/>
</method>
<method selector='_initScreenProperties'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_isEdgePoint:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_moveLastTouchPoint:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_normalizePoint:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='_sendHIDEvent:'>
<arg declared_type='struct __IOHIDEvent*' index='0' name='arg1' type='^{__IOHIDEvent=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_sendHIDKeyboardEventPage:usage:duration:'>
<arg declared_type='NSUInteger' index='0' name='arg1' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='2' name='arg3' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_sendHIDScrollEventX:Y:Z:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<arg declared_type='double' index='1' name='arg2' type='d'/>
<arg declared_type='double' index='2' name='arg3' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_sendHIDVendorDefinedEvent:usage:data:dataLength:'>
<arg declared_type='NSUInteger' index='0' name='arg1' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<arg declared_type='char*' index='2' name='arg3' type='*'/>
<arg declared_type='NSUInteger' index='3' name='arg4' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_sendSimpleEvent:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_sendTap:withPressure:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='double' index='1' name='arg2' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setMajorRadiusForAllPoints:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setPressureForAllPoints:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_updateTouchPoints:count:'>
<arg declared_type='CGPoint*' index='0' name='arg1' type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='activePointCount'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='activePoints'>
<retval declared_type='CDStruct_c27b2f7b*' type='^{_CDStruct_c27b2f7b={CGPoint=ff}ffC}' type64='^{_CDStruct_c27b2f7b={CGPoint=dd}ffC}'/>
</method>
<method selector='clickLock'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickMenu'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickVolumeDown'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickVolumeUp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='gsScreenScale'>
<retval declared_type='float' type='f'/>
</method>
<method selector='gsScreenSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='holdLock:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdMenu:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdVolumeDown:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdVolumeUp:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='ioSystemClient'>
<retval declared_type='struct __IOHIDEventSystemClient*' type='^{__IOHIDEventSystemClient=}'/>
</method>
<method selector='liftUp:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='liftUp:touchCount:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='liftUpAtPoints:touchCount:'>
<arg declared_type='CGPoint*' index='0' name='arg1' type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lockDevice'>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToPoints:touchCount:duration:'>
<arg declared_type='CGPoint*' index='0' name='arg1' type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='2' name='arg3' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='onScreenRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='postKeyboardEventWithKeyCode:orCharacters:originalCharacters:modifierState:isKeyDown:'>
<arg declared_type='unsigned short' index='0' name='arg1' type='S'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='id' index='2' name='arg3' type='@'/>
<arg declared_type='NSUInteger' index='3' name='arg4' type='I' type64='Q'/>
<arg declared_type='BOOL' index='4' name='arg5' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postKeyboardEventsForModifiers:isKeyDown:'>
<arg declared_type='NSUInteger' index='0' name='arg1' type='I' type64='Q'/>
<arg declared_type='BOOL' index='1' name='arg2' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='screen'>
<retval declared_type='UIScreen*' type='@'/>
</method>
<method selector='screenSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sendAccelerometerX:Y:Z:'>
<arg declared_type='CGFloat' index='0' name='arg1' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='arg2' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='arg3' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendAccelerometerX:Y:Z:duration:'>
<arg declared_type='CGFloat' index='0' name='arg1' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='arg2' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='arg3' type='f' type64='d'/>
<arg declared_type='NSTimeInterval' index='3' name='arg4' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendDoubleFingerTap:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendDoubleTap:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendDragWithStartPoint:endPoint:duration:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='arg2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTimeInterval' index='2' name='arg3' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendDragWithStartPoint:endPoint:duration:withFlick:inRect:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='arg2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTimeInterval' index='2' name='arg3' type='d'/>
<arg declared_type='BOOL' index='3' name='arg4' type='B'/>
<arg declared_type='CGRect' index='4' name='arg5' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendFlickWithStartPoint:endPoint:duration:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='arg2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTimeInterval' index='2' name='arg3' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendMultifingerDragWithPointArray:numPoints:duration:numFingers:'>
<arg declared_type='CGPoint*' index='0' name='arg1' type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSInteger' index='1' name='arg2' type='i' type64='q'/>
<arg declared_type='NSTimeInterval' index='2' name='arg3' type='d'/>
<arg declared_type='NSInteger' index='3' name='arg4' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendPinchCloseWithStartPoint:endPoint:duration:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='arg2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTimeInterval' index='2' name='arg3' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendPinchCloseWithStartPoint:endPoint:duration:inRect:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='arg2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTimeInterval' index='2' name='arg3' type='d'/>
<arg declared_type='CGRect' index='3' name='arg4' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendPinchOpenWithStartPoint:endPoint:duration:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='arg2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTimeInterval' index='2' name='arg3' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendPinchOpenWithStartPoint:endPoint:duration:inRect:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='arg2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTimeInterval' index='2' name='arg3' type='d'/>
<arg declared_type='CGRect' index='3' name='arg4' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendRotate:withRadius:rotation:duration:touchCount:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='1' name='arg2' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='arg3' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='arg4' type='f' type64='d'/>
<arg declared_type='NSUInteger' index='4' name='arg5' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendTap:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendTaps:location:withNumberOfTouches:inRect:'>
<arg declared_type='int' index='0' name='arg1' type='i'/>
<arg declared_type='CGPoint' index='1' name='arg2' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='int' index='2' name='arg3' type='i'/>
<arg declared_type='CGRect' index='3' name='arg4' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActivePointCount:'>
<arg declared_type='unsigned int' index='0' name='activePointCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActivePoints:'>
<arg declared_type='CDStruct_c27b2f7b*' index='0' name='activePoints' type='^{_CDStruct_c27b2f7b={CGPoint=ff}ffC}' type64='^{_CDStruct_c27b2f7b={CGPoint=dd}ffC}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGsScreenScale:'>
<arg declared_type='float' index='0' name='gsScreenScale' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGsScreenSize:'>
<arg declared_type='CGSize' index='0' name='gsScreenSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnScreenRect:'>
<arg declared_type='CGRect' index='0' name='onScreenRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type='int' index='0' name='arg1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRinger:'>
<arg declared_type='BOOL' index='0' name='arg1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScreen:'>
<arg declared_type='UIScreen*' index='0' name='screen' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScreenSize:'>
<arg declared_type='CGSize' index='0' name='screenSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVoiceOverStyleTouchEventsEnabled:'>
<arg declared_type='BOOL' index='0' name='voiceOverStyleTouchEventsEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shake'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedEventGenerator'>
<retval declared_type='id' type='@'/>
</method>
<method selector='touchDown:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchDown:touchCount:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchDownAtPoints:touchCount:'>
<arg declared_type='CGPoint*' index='0' name='arg1' type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='voiceOverStyleTouchEventsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIASyntheticStarkEvents'>
<method selector='_enableStarkModeWithDisplayUUID:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_initScreenProperties'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_moveLastTouchPoint:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_submitHIDReportAtLocation:ofType:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSInteger' index='1' name='arg2' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='_updateTouchPoints:count:'>
<arg declared_type='CGPoint*' index='0' name='arg1' type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='liftUpAtPoints:touchCount:'>
<arg declared_type='CGPoint*' index='0' name='arg1' type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedEventGenerator'>
<retval declared_type='id' type='@'/>
</method>
<method selector='starkDeviceProperties'>
<retval declared_type='struct __CFDictionary*' type='^{__CFDictionary=}'/>
</method>
<method selector='starkDigitizerDescriptorData'>
<retval declared_type='struct __CFData*' type='^{__CFData=}'/>
</method>
<method selector='starkDisplayUUID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='syntheticStarkDevice'>
<retval declared_type='struct __IOHIDUserDevice*' type='^{__IOHIDUserDevice=}'/>
</method>
<method selector='touchDownAtPoints:touchCount:'>
<arg declared_type='CGPoint*' index='0' name='arg1' type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='1' name='arg2' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIATabBar'>
<method selector='selectedButton'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIATableCell'>
<method class_method='true' selector='_classForSimpleUIAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='name'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingActionExpressionShouldFavorTapOffset'>
<retval declared_type='id' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIATableGroup'>
<method class_method='true' selector='_classForSimpleUIAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='name'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIATableView'>
<method class_method='true' selector='_classForSimpleUIAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='_emptyCaches'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_moreToManyRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='cellCount'>
<retval declared_type='id' type='@'/>
</method>
<method selector='cells'>
<retval declared_type='id' type='@'/>
</method>
<method selector='firstVisibleCellIndex'>
<retval declared_type='id' type='@'/>
</method>
<method selector='groups'>
<retval declared_type='id' type='@'/>
</method>
<method selector='lastVisibleCellIndex'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toManyRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
<method selector='visibleCells'>
<retval declared_type='id' type='@'/>
</method>
<method selector='visibleGroups'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIATarget'>
<method selector='_applicationAtPosition:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_dragFrom:to:forDuration:withTouchCount:withFlick:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='arg3' type='d'/>
<arg declared_type='NSInteger' index='3' name='arg4' type='i' type64='q'/>
<arg declared_type='BOOL' index='4' name='arg5' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_enterPasscode:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_handleAlert'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_handleAnnouncement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_interfaceOrientation'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='_invalidate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_lastAnimationEndedTime'>
<retval declared_type='double' type='d'/>
</method>
<method class_method='true' selector='_locationForObject:withOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_lockScreenScrollView'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_setLastAnimationEndedTime:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_slideToCamera:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_slideToHandoff:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_slideToUnlock:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_systemVersionDictionary'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_tapOptionalObject:tapCount:touchCount:tapOffset:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='double' index='1' name='arg2' type='d'/>
<arg declared_type='double' index='2' name='arg3' type='d'/>
<arg declared_type='id' index='3' name='arg4' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_tapPictureFrame:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_tapRequiredObject:tapCount:touchCount:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='double' index='1' name='arg2' type='d'/>
<arg declared_type='double' index='2' name='arg3' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_touch:withOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_trackValueChanges:'>
<arg declared_type='BOOL' index='0' name='arg1' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_updateInterfaceOrientation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityUI'>
<retval declared_type='id' type='@'/>
</method>
<method selector='applicationAtPoint:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='applications'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='attributeKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='captureRect:onScreen:withName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='id' index='2' name='arg3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureRect:withName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureScreenWithName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureStarkRect:withName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureStarkScreenWithName:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='checkIsValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clickLock'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickMenu'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickVolumeDown'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickVolumeUp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deactivateApp'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='deactivateAppForDuration:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delayForTimeInterval:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deviceOrientation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='doubleTap:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragFrom:to:forDuration:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='id' index='2' name='arg3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='elements'>
<retval declared_type='id' type='@'/>
</method>
<method selector='eventGenerator'>
<retval declared_type='UIASyntheticEvents*' type='@'/>
</method>
<method selector='flickFrom:to:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='foregroundApps'>
<retval declared_type='id' type='@'/>
</method>
<method selector='frontMostApp'>
<retval declared_type='id' type='@'/>
</method>
<method selector='handlesAlerts'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hardwareKeyboard'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hash'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='holdLock:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdMenu:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdVolumeDown:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdVolumeUp:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='host'>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageFromRect:'>
<arg declared_type='CGRect' index='0' name='arg1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqual:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLocked'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isScreenOff'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='languageID'>
<retval declared_type='id' type='@'/>
</method>
<method selector='languageName'>
<retval declared_type='id' type='@'/>
</method>
<method selector='lastCommandTime'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='localTarget'>
<retval declared_type='id' type='@'/>
</method>
<method selector='localeID'>
<retval declared_type='id' type='@'/>
</method>
<method selector='localeName'>
<retval declared_type='id' type='@'/>
</method>
<method selector='localizedStringForKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='localizedStringForKey:value:table:bundlePath:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='id' index='2' name='arg3' type='@'/>
<arg declared_type='id' index='3' name='arg4' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='localizedStringForKey:withOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lock'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lockForDuration:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logElementTakesScreenshot'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mainScreen'>
<retval declared_type='id' type='@'/>
</method>
<method selector='model'>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='id' type='@'/>
</method>
<method selector='patience'>
<retval declared_type='double' type='d'/>
</method>
<method selector='pinchCloseFrom:to:forDuration:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='id' index='2' name='arg3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pinchOpenFrom:to:forDuration:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='id' index='2' name='arg3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popPatience'>
<retval declared_type='double' type='d'/>
</method>
<method selector='pushPatience:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reactivateApp'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rect'>
<retval declared_type='id' type='@'/>
</method>
<method selector='remote'>
<retval declared_type='id' type='@'/>
</method>
<method selector='rotate:withOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scriptingFavoredSynonymString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingSynonymStrings'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingSynonyms'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeviceOrientation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setHandlesAlerts:'>
<arg declared_type='BOOL' index='0' name='handlesAlerts' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocation:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setLocation:withOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setLogElementTakesScreenshot:'>
<arg declared_type='BOOL' index='0' name='logElementTakesScreenshot' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassiveEventListeningMode:withDelay:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPatience:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRinger:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetClipboard:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextViewValueMaxLength:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueChangedCount:'>
<arg declared_type='unsigned int' index='0' name='valueChangedCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerboseOptions:'>
<arg declared_type='NSUInteger' index='0' name='arg1' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shake'>
<retval declared_type='void' type='v'/>
</method>
<method selector='springboard'>
<retval declared_type='id' type='@'/>
</method>
<method selector='starkEventGenerator'>
<retval declared_type='UIASyntheticStarkEvents*' type='@'/>
</method>
<method selector='startupDate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='systemApp'>
<retval declared_type='id' type='@'/>
</method>
<method selector='systemBuild'>
<retval declared_type='id' type='@'/>
</method>
<method selector='systemName'>
<retval declared_type='id' type='@'/>
</method>
<method selector='systemVersion'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tap:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tap:withOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetClipboard'>
<retval declared_type='id' type='@'/>
</method>
<method selector='textViewValueMaxLength'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='toManyRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='toOneRelationshipKeys'>
<retval declared_type='id' type='@'/>
</method>
<method selector='touch:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touch:andHold:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touch:withOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='twoFingerTap:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='uiaxSpringBoardElement'>
<retval declared_type='id' type='@'/>
</method>
<method selector='uiaxSystemAppElement'>
<retval declared_type='id' type='@'/>
</method>
<method selector='uiaxSystemWideElement'>
<retval declared_type='id' type='@'/>
</method>
<method selector='uniqueIdentifier'>
<retval declared_type='id' type='@'/>
</method>
<method selector='unlock'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unlockWithOptions:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='upTime'>
<retval declared_type='double' type='d'/>
</method>
<method selector='valueChangedCount'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='verboseOptions'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='UIATextField'>
<method selector='_textFieldShouldAcceptAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='elements'>
<retval declared_type='id' type='@'/>
</method>
<method selector='scriptingActionExpressionShouldFavorTapOffset'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAWindow'>
<method selector='_uiaContentArea'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_windowShouldAcceptAXElement:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentArea'>
<retval declared_type='id' type='@'/>
</method>
<method selector='elements'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIAXElement'>
<method class_method='true' selector='_attributeForString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='_convertHostedCoordinates:forContextID:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='_convertHostedViewFrame:forContextID:'>
<arg declared_type='CGRect' index='0' name='arg1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='_convertPointFromDeviceToScreen:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='_convertPointFromScreenToDevice:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='_convertRectFromDeviceToScreen:'>
<arg declared_type='CGRect' index='0' name='arg1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='_convertRectFromScreenToDevice:'>
<arg declared_type='CGRect' index='0' name='arg1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='_copyTraitsNumber'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_creationTime'>
<retval declared_type='double' type='d'/>
</method>
<method selector='_hasNonzeroFrame'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_initWithAXUIElementRef:'>
<arg declared_type='struct __AXUIElement*' index='0' name='arg1' type='^{__AXUIElement=}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_invalidate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_isVisibleAtPoint:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_lastAccessedTime'>
<retval declared_type='double' type='d'/>
</method>
<method class_method='true' selector='_objectForCFTypeRef:'>
<arg declared_type='void*' index='0' name='arg1' type='^v'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_parameterizedAttributeForString:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='_parameterizedAttributeNumbers'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_parameterizedAttributeStrings'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_parameterizedAttributesForStringsDictionary'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_raiseAXErrorAPIDisabled'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_raiseIfAXErrorAPIDisabled:'>
<arg declared_type='long' index='0' name='arg1' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_regularAttributeNumbers'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_regularAttributeStrings'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_regularAttributesForStringsDictionary'>
<retval declared_type='id' type='@'/>
</method>
<method selector='_setLastAccessedTime:'>
<arg declared_type='double' index='0' name='arg1' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setValidForAXError:'>
<arg declared_type='long' index='0' name='arg1' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_stringForAttribute:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_stringForParameterizedAttribute:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_stringsForParameterizedAttributesDictionary'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_stringsForRegularAttributesDictionary'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_stringsForTraitsDictionary'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_traitNumbers'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='_traitStrings'>
<retval declared_type='id' type='@'/>
</method>
<method selector='ancestry'>
<retval declared_type='id' type='@'/>
</method>
<method selector='axError'>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='axuiElementRef'>
<retval declared_type='struct __AXUIElement*' type='^{__AXUIElement=}'/>
</method>
<method selector='centerPoint'>
<retval declared_type='id' type='@'/>
</method>
<method selector='checkIsValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='childWithTestingTrait:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='children'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dealloc'>
<retval declared_type='void' type='v'/>
</method>
<method selector='descendantWithTestingTrait:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='descendants'>
<retval declared_type='id' type='@'/>
</method>
<method selector='descendantsWithAttributes:traits:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='unsigned long long' index='1' name='arg2' type='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='description'>
<retval declared_type='id' type='@'/>
</method>
<method selector='finalize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstElementOfAttribute:withValue:forAttribute:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='NSInteger' index='2' name='arg3' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='focusedElement'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hash'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='hitpoint'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='initialize'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='initializeAccessibility'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEqual:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logAXAncestry'>
<retval declared_type='void' type='v'/>
</method>
<method selector='logAXInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='logAXTree'>
<retval declared_type='void' type='v'/>
</method>
<method selector='parent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='performAXAction:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performAXAction:withValue:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pid'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='rect'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='registerObserver:forAXNotification:'>
<arg declared_type='struct __AXObserver*' index='0' name='arg1' type='^{__AXObserver=}'/>
<arg declared_type='NSInteger' index='1' name='arg2' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='registerObserver:forAXNotifications:'>
<arg declared_type='struct __AXObserver*' index='0' name='arg1' type='^{__AXObserver=}'/>
<arg declared_type='BOOL' index='1' name='arg2' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='responder'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setValue:forAttribute:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='NSInteger' index='1' name='arg2' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='stringForAXError:'>
<arg declared_type='long' index='0' name='arg1' type='l' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringForAXNotification:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringForAllKnownAttributes'>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringForAttributes:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringForTraits:'>
<arg declared_type='unsigned long long' index='0' name='arg1' type='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='traits'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='traitsNumber'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxAccessibilityUIServerElement'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxApplicationAtPosition:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='uiaxElementAtCenterPoint'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxElementAtPosition:'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxElementWithAXUIElementRef:'>
<arg declared_type='struct __AXUIElement*' index='0' name='arg1' type='^{__AXUIElement=}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxFocusedApplicationElement'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxFocusedApplicationsElementArray'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxSpringBoardElement'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxSystemApplicationElement'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxSystemWideElement'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='unregisterObserver:forAXNotification:'>
<arg declared_type='struct __AXObserver*' index='0' name='arg1' type='^{__AXObserver=}'/>
<arg declared_type='NSInteger' index='1' name='arg2' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='valueForAttribute:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForAttribute:parameter:'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForUndefinedKey:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valuesForAllKnownAttributes'>
<retval declared_type='id' type='@'/>
</method>
<method selector='valuesForAttributes:'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<informal_protocol name='UIAXElement'>
<method selector='ancestry' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='axError' type='l8@0:4' type64='q16@0:8'>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='axuiElementRef' type='^{__AXUIElement=}8@0:4' type64='^{__AXUIElement=}16@0:8'>
<retval declared_type='struct __AXUIElement*' type='^{__AXUIElement=}'/>
</method>
<method selector='centerPoint' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSValue*' type='@'/>
</method>
<method selector='checkIsValid' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='childWithTestingTrait:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSString*' index='0' name='arg1' type='@'/>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='children' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='descendantWithTestingTrait:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSString*' index='0' name='arg1' type='@'/>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='descendants' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='descendantsWithAttributes:traits:' type='@20@0:4@8Q12' type64='@32@0:8@16Q24'>
<arg declared_type='NSDictionary*' index='0' name='arg1' type='@'/>
<arg declared_type='unsigned long long' index='1' name='arg2' type='Q'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='firstElementOfAttribute:withValue:forAttribute:' type='@20@0:4i8@12i16' type64='@40@0:8q16@24q32'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<arg declared_type='NSInteger' index='2' name='arg3' type='i' type64='q'/>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='focusedElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='hitpoint' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSValue*' type='@'/>
</method>
<method selector='isValid' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parent' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='performAXAction:' type='B12@0:4i8' type64='B24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performAXAction:withValue:' type='B16@0:4i8@12' type64='B32@0:8q16@24'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pid' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='rect' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSValue*' type='@'/>
</method>
<method class_method='true' selector='registerObserver:forAXNotification:' type='B16@0:4^{__AXObserver=}8i12' type64='B32@0:8^{__AXObserver=}16q24'>
<arg declared_type='struct __AXObserver*' index='0' name='arg1' type='^{__AXObserver=}'/>
<arg declared_type='NSInteger' index='1' name='arg2' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='registerObserver:forAXNotifications:' type='B16@0:4^{__AXObserver=}8B12' type64='B28@0:8^{__AXObserver=}16B24'>
<arg declared_type='struct __AXObserver*' index='0' name='arg1' type='^{__AXObserver=}'/>
<arg declared_type='BOOL' index='1' name='arg2' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='responder' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='UIAXElement*' type='@'/>
</method>
<method selector='setValue:forAttribute:' type='B16@0:4@8i12' type64='B32@0:8@16q24'>
<arg declared_type='id' index='0' name='arg1' type='@'/>
<arg declared_type='NSInteger' index='1' name='arg2' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='stringForAXError:' type='@12@0:4l8' type64='@24@0:8q16'>
<arg declared_type='long' index='0' name='arg1' type='l' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringForAXNotification:' type='@12@0:4i8' type64='@24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringForAllKnownAttributes' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringForAttributes:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSArray*' index='0' name='arg1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringForTraits:' type='@16@0:4Q8' type64='@24@0:8Q16'>
<arg declared_type='unsigned long long' index='0' name='arg1' type='Q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='traits' type='Q8@0:4' type64='Q16@0:8'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='traitsNumber' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='uiaxAccessibilityUIServerElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxApplicationAtPosition:' type='@16@0:4{CGPoint=ff}8' type64='@32@0:8{CGPoint=dd}16'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxElementAtPosition:' type='@16@0:4{CGPoint=ff}8' type64='@32@0:8{CGPoint=dd}16'>
<arg declared_type='CGPoint' index='0' name='arg1' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxElementWithAXUIElementRef:' type='@12@0:4^{__AXUIElement=}8' type64='@24@0:8^{__AXUIElement=}16'>
<arg declared_type='struct __AXUIElement*' index='0' name='arg1' type='^{__AXUIElement=}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxFocusedApplicationElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxFocusedApplicationsElementArray' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='uiaxSpringBoardElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxSystemApplicationElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='uiaxSystemWideElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='unregisterObserver:forAXNotification:' type='B16@0:4^{__AXObserver=}8i12' type64='B32@0:8^{__AXObserver=}16q24'>
<arg declared_type='struct __AXObserver*' index='0' name='arg1' type='^{__AXObserver=}'/>
<arg declared_type='NSInteger' index='1' name='arg2' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='valueForAttribute:' type='@12@0:4i8' type64='@24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForAttribute:parameter:' type='@16@0:4i8@12' type64='@32@0:8q16@24'>
<arg declared_type='NSInteger' index='0' name='arg1' type='i' type64='q'/>
<arg declared_type='id' index='1' name='arg2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valuesForAllKnownAttributes' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='valuesForAttributes:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSArray*' index='0' name='arg1' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</informal_protocol>
</signatures>
