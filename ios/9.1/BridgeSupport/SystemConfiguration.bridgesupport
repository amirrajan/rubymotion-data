<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='SCDynamicStoreContext' type='{_SCDynamicStoreContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type64='{_SCDynamicStoreContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void * _Nullable' name='info' type='^v'/>
<field const='true' declared_type='void * _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='retain' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval const='true' declared_type='void * _Nonnull' type='^v'/>
</field>
<field declared_type='void (* _Nullable)( void * _Nonnull)' function_pointer='true' name='release' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFStringRef _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='copyDescription' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval declared_type='CFStringRef _Nonnull' type='^{__CFString=}'/>
</field>
</struct>
<struct name='SCNetworkConnectionContext' type='{_SCNetworkConnectionContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type64='{_SCNetworkConnectionContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void * _Nullable' name='info' type='^v'/>
<field const='true' declared_type='void * _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='retain' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval const='true' declared_type='void * _Nonnull' type='^v'/>
</field>
<field declared_type='void (* _Nullable)( void * _Nonnull)' function_pointer='true' name='release' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFStringRef _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='copyDescription' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval declared_type='CFStringRef _Nonnull' type='^{__CFString=}'/>
</field>
</struct>
<struct name='SCNetworkReachabilityContext' type='{_SCNetworkReachabilityContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type64='{_SCNetworkReachabilityContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void * _Nullable' name='info' type='^v'/>
<field const='true' declared_type='void * _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='retain' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval const='true' declared_type='void * _Nonnull' type='^v'/>
</field>
<field declared_type='void (* _Nullable)( void * _Nonnull)' function_pointer='true' name='release' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFStringRef _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='copyDescription' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval declared_type='CFStringRef _Nonnull' type='^{__CFString=}'/>
</field>
</struct>
<struct name='SCPreferencesContext' type='{_SCPreferencesContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type64='{_SCPreferencesContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void * _Nullable' name='info' type='^v'/>
<field const='true' declared_type='void * _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='retain' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval const='true' declared_type='void * _Nonnull' type='^v'/>
</field>
<field declared_type='void (* _Nullable)( void * _Nonnull)' function_pointer='true' name='release' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFStringRef _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='copyDescription' type='^?'>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<retval declared_type='CFStringRef _Nonnull' type='^{__CFString=}'/>
</field>
</struct>
<cftype gettypeid_func='SCNetworkReachabilityGetTypeID' name='SCNetworkReachabilityRef' tollfree='__NSCFType' type='^{__SCNetworkReachability=}'/>
<cftype name='AuthorizationRef' type='^{AuthorizationOpaqueRef=}'/>
<cftype name='SCBondStatusRef' type='^{__SCBondStatus=}'/>
<cftype name='SCDynamicStoreRef' type='^{__SCDynamicStore=}'/>
<cftype name='SCNetworkConnectionRef' type='^{__SCNetworkConnection=}'/>
<cftype name='SCNetworkInterfaceRef' type='^{__SCNetworkInterface=}'/>
<cftype name='SCNetworkProtocolRef' type='^{__SCNetworkProtocol=}'/>
<cftype name='SCNetworkServiceRef' type='^{__SCNetworkService=}'/>
<cftype name='SCNetworkSetRef' type='^{__SCNetworkSet=}'/>
<cftype name='SCPreferencesRef' type='^{__SCPreferences=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kCFErrorDomainSystemConfiguration' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kCNNetworkInfoKeyBSSID' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kCNNetworkInfoKeySSID' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kCNNetworkInfoKeySSIDData' type='^{__CFString=}'/>
<string_constant name='CN_DEPRECATION_NOTICE' value='For captive network applications, this has been completely replaced by &lt;NetworkExtension/NEHotspotHelper.h&gt;. For other applications, there is no direct replacement. Please file a bug describing your use of this API to that we can consider your requirements as this situation evolves.'/>
<string_constant name='kSCNetworkConnectionBytesIn' nsstring='true' value='BytesIn'/>
<string_constant name='kSCNetworkConnectionBytesOut' nsstring='true' value='BytesOut'/>
<string_constant name='kSCNetworkConnectionErrorsIn' nsstring='true' value='ErrorsIn'/>
<string_constant name='kSCNetworkConnectionErrorsOut' nsstring='true' value='ErrorsOut'/>
<string_constant name='kSCNetworkConnectionPacketsIn' nsstring='true' value='PacketsIn'/>
<string_constant name='kSCNetworkConnectionPacketsOut' nsstring='true' value='PacketsOut'/>
<string_constant name='kSCNetworkConnectionSelectionOptionOnDemandHostName' nsstring='true' value='OnDemandHostName'/>
<string_constant name='kSCNetworkConnectionSelectionOptionOnDemandRetry' nsstring='true' value='OnDemandRetry'/>
<enum name='kSCBondStatusLinkInvalid' value='1'/>
<enum name='kSCBondStatusNoPartner' value='2'/>
<enum name='kSCBondStatusNotInActiveGroup' value='3'/>
<enum name='kSCBondStatusOK' value='0'/>
<enum name='kSCBondStatusUnknown' value='999'/>
<enum name='kSCNetworkConnectionConnected' value='2'/>
<enum name='kSCNetworkConnectionConnecting' value='1'/>
<enum name='kSCNetworkConnectionDisconnected' value='0'/>
<enum name='kSCNetworkConnectionDisconnecting' value='3'/>
<enum name='kSCNetworkConnectionInvalid' value='-1'/>
<enum name='kSCNetworkConnectionPPPAuthenticating' value='5'/>
<enum name='kSCNetworkConnectionPPPConnected' value='8'/>
<enum name='kSCNetworkConnectionPPPConnectingLink' value='2'/>
<enum name='kSCNetworkConnectionPPPDialOnTraffic' value='3'/>
<enum name='kSCNetworkConnectionPPPDisconnected' value='0'/>
<enum name='kSCNetworkConnectionPPPDisconnectingLink' value='10'/>
<enum name='kSCNetworkConnectionPPPHoldingLinkOff' value='11'/>
<enum name='kSCNetworkConnectionPPPInitializing' value='1'/>
<enum name='kSCNetworkConnectionPPPNegotiatingLink' value='4'/>
<enum name='kSCNetworkConnectionPPPNegotiatingNetwork' value='7'/>
<enum name='kSCNetworkConnectionPPPSuspended' value='12'/>
<enum name='kSCNetworkConnectionPPPTerminating' value='9'/>
<enum name='kSCNetworkConnectionPPPWaitingForCallBack' value='6'/>
<enum name='kSCNetworkConnectionPPPWaitingForRedial' value='13'/>
<enum name='kSCNetworkFlagsConnectionAutomatic' value='8'/>
<enum name='kSCNetworkFlagsConnectionRequired' value='4'/>
<enum name='kSCNetworkFlagsInterventionRequired' value='16'/>
<enum name='kSCNetworkFlagsIsDirect' value='131072'/>
<enum name='kSCNetworkFlagsIsLocalAddress' value='65536'/>
<enum name='kSCNetworkFlagsReachable' value='2'/>
<enum name='kSCNetworkFlagsTransientConnection' value='1'/>
<enum name='kSCNetworkReachabilityFlagsConnectionAutomatic' value='8'/>
<enum name='kSCNetworkReachabilityFlagsConnectionOnDemand' value='32'/>
<enum name='kSCNetworkReachabilityFlagsConnectionOnTraffic' value='8'/>
<enum name='kSCNetworkReachabilityFlagsConnectionRequired' value='4'/>
<enum name='kSCNetworkReachabilityFlagsInterventionRequired' value='16'/>
<enum name='kSCNetworkReachabilityFlagsIsDirect' value='131072'/>
<enum name='kSCNetworkReachabilityFlagsIsLocalAddress' value='65536'/>
<enum name='kSCNetworkReachabilityFlagsIsWWAN' value='262144'/>
<enum name='kSCNetworkReachabilityFlagsReachable' value='2'/>
<enum name='kSCNetworkReachabilityFlagsTransientConnection' value='1'/>
<enum name='kSCPreferencesNotificationApply' value='2'/>
<enum name='kSCPreferencesNotificationCommit' value='1'/>
<enum name='kSCStatusAccessError' value='1003'/>
<enum name='kSCStatusConnectionIgnore' value='5002'/>
<enum name='kSCStatusConnectionNoService' value='5001'/>
<enum name='kSCStatusFailed' value='1001'/>
<enum name='kSCStatusInvalidArgument' value='1002'/>
<enum name='kSCStatusKeyExists' value='1005'/>
<enum name='kSCStatusLocked' value='1006'/>
<enum name='kSCStatusMaxLink' value='3006'/>
<enum name='kSCStatusNeedLock' value='1007'/>
<enum name='kSCStatusNoConfigFile' value='3003'/>
<enum name='kSCStatusNoKey' value='1004'/>
<enum name='kSCStatusNoLink' value='3004'/>
<enum name='kSCStatusNoPrefsSession' value='3001'/>
<enum name='kSCStatusNoStoreServer' value='2002'/>
<enum name='kSCStatusNoStoreSession' value='2001'/>
<enum name='kSCStatusNotifierActive' value='2003'/>
<enum name='kSCStatusOK' value='0'/>
<enum name='kSCStatusPrefsBusy' value='3002'/>
<enum name='kSCStatusReachabilityUnknown' value='4001'/>
<enum name='kSCStatusStale' value='3005'/>
<function name='CNCopyCurrentNetworkInfo'>
<arg declared_type='CFStringRef _Nonnull' name='interfaceName' type='^{__CFString=}'/>
<retval declared_type='CFDictionaryRef _Nullable' type='^{__CFDictionary=}'/>
</function>
<function name='CNCopySupportedInterfaces'>
<retval declared_type='CFArrayRef _Nullable' type='^{__CFArray=}'/>
</function>
<function name='CNMarkPortalOffline'>
<arg declared_type='CFStringRef _Nonnull' name='interfaceName' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CNMarkPortalOnline'>
<arg declared_type='CFStringRef _Nonnull' name='interfaceName' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CNSetSupportedSSIDs'>
<arg declared_type='CFArrayRef _Nonnull' name='ssidArray' type='^{__CFArray=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCCopyLastError'>
<retval declared_type='CFErrorRef _Nonnull' type='^{__CFError=}'/>
</function>
<function name='SCError'>
<retval declared_type='int' type='i'/>
</function>
<function name='SCErrorString'>
<arg declared_type='int' name='status' type='i'/>
<retval const='true' declared_type='char * _Nonnull' type='*'/>
</function>
<function name='SCNetworkReachabilityCreateWithAddress'>
<arg declared_type='CFAllocatorRef _Nullable' name='allocator' type='^{__CFAllocator=}'/>
<arg const='true' declared_type='struct sockaddr * _Nonnull' name='address' type='^{sockaddr=CC[14c]}'/>
<retval declared_type='SCNetworkReachabilityRef _Nullable' type='^{__SCNetworkReachability=}'/>
</function>
<function name='SCNetworkReachabilityCreateWithAddressPair'>
<arg declared_type='CFAllocatorRef _Nullable' name='allocator' type='^{__CFAllocator=}'/>
<arg const='true' declared_type='struct sockaddr * _Nullable' name='localAddress' type='^{sockaddr=CC[14c]}'/>
<arg const='true' declared_type='struct sockaddr * _Nullable' name='remoteAddress' type='^{sockaddr=CC[14c]}'/>
<retval declared_type='SCNetworkReachabilityRef _Nullable' type='^{__SCNetworkReachability=}'/>
</function>
<function name='SCNetworkReachabilityCreateWithName'>
<arg declared_type='CFAllocatorRef _Nullable' name='allocator' type='^{__CFAllocator=}'/>
<arg const='true' declared_type='char * _Nonnull' name='nodename' type='*'/>
<retval declared_type='SCNetworkReachabilityRef _Nullable' type='^{__SCNetworkReachability=}'/>
</function>
<function name='SCNetworkReachabilityGetFlags'>
<arg declared_type='SCNetworkReachabilityRef _Nonnull' name='target' type='^{__SCNetworkReachability=}'/>
<arg declared_type='SCNetworkReachabilityFlags * _Nonnull' name='flags' type='^I'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkReachabilityGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SCNetworkReachabilityScheduleWithRunLoop'>
<arg declared_type='SCNetworkReachabilityRef _Nonnull' name='target' type='^{__SCNetworkReachability=}'/>
<arg declared_type='CFRunLoopRef _Nonnull' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef _Nonnull' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkReachabilitySetCallback'>
<arg declared_type='SCNetworkReachabilityRef _Nonnull' name='target' type='^{__SCNetworkReachability=}'/>
<arg declared_type='SCNetworkReachabilityCallBack _Nullable' function_pointer='true' name='callout' type='^?'>
<arg declared_type='SCNetworkReachabilityRef _Nonnull' type='^{__SCNetworkReachability=}'/>
<arg declared_type='SCNetworkReachabilityFlags' type='I'/>
<arg declared_type='void * _Nullable' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='SCNetworkReachabilityContext * _Nullable' name='context' type='^{_SCNetworkReachabilityContext=i^v^?^?^?}' type64='^{_SCNetworkReachabilityContext=q^v^?^?^?}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkReachabilitySetDispatchQueue'>
<arg declared_type='SCNetworkReachabilityRef _Nonnull' name='target' type='^{__SCNetworkReachability=}'/>
<arg declared_type='dispatch_queue_t _Nullable' name='queue' type='@'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SCNetworkReachabilityUnscheduleFromRunLoop'>
<arg declared_type='SCNetworkReachabilityRef _Nonnull' name='target' type='^{__SCNetworkReachability=}'/>
<arg declared_type='CFRunLoopRef _Nonnull' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef _Nonnull' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
</signatures>
