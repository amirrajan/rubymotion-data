<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<cftype gettypeid_func='SSLContextGetTypeID' name='SSLContextRef' tollfree='__NSCFType' type='^{SSLContext=}'/>
<cftype gettypeid_func='SecAccessControlGetTypeID' name='SecAccessControlRef' tollfree='__NSCFType' type='^{__SecAccessControl=}'/>
<cftype gettypeid_func='SecCertificateGetTypeID' name='SecCertificateRef' tollfree='__NSCFType' type='^{__SecCertificate=}'/>
<cftype gettypeid_func='SecIdentityGetTypeID' name='SecIdentityRef' tollfree='__NSCFType' type='^{__SecIdentity=}'/>
<cftype gettypeid_func='SecKeyGetTypeID' name='SecKeyRef' tollfree='__NSCFType' type='^{__SecKey=}'/>
<cftype gettypeid_func='SecPolicyGetTypeID' name='SecPolicyRef' tollfree='__NSCFType' type='^{__SecPolicy=}'/>
<cftype gettypeid_func='SecTrustGetTypeID' name='SecTrustRef' tollfree='__NSCFType' type='^{__SecTrust=}'/>
<cftype name='SSLConnectionRef' type='^v'/>
<cftype name='SecRandomRef' type='^{__SecRandom=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAccessControl' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAccessGroup' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAccessible' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAccessibleAfterFirstUnlock' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAccessibleAlways' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAccessibleAlwaysThisDeviceOnly' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAccessibleWhenPasscodeSetThisDeviceOnly' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAccessibleWhenUnlocked' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAccessibleWhenUnlockedThisDeviceOnly' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAccount' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrApplicationLabel' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrApplicationTag' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAuthenticationType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeDPA' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeDefault' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeHTMLForm' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeHTTPBasic' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeHTTPDigest' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeMSN' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeNTLM' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrAuthenticationTypeRPA' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrCanDecrypt' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrCanDerive' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrCanEncrypt' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrCanSign' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrCanUnwrap' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrCanVerify' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrCanWrap' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrCertificateEncoding' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrCertificateType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrComment' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrCreationDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrCreator' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrDescription' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrEffectiveKeySize' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrGeneric' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrIsInvisible' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrIsNegative' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrIsPermanent' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrIssuer' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrKeyClass' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrKeyClassPrivate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrKeyClassPublic' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrKeyClassSymmetric' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrKeySizeInBits' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrKeyType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrKeyTypeEC' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrKeyTypeRSA' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrLabel' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrModificationDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrPath' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrPort' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocol' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolAFP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolAppleTalk' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolDAAP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolEPPC' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolFTP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolFTPAccount' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolFTPProxy' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolFTPS' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolHTTP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolHTTPProxy' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolHTTPS' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolHTTPSProxy' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolIMAP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolIMAPS' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolIPP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolIRC' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolIRCS' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolLDAP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolLDAPS' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolNNTP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolNNTPS' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolPOP3' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolPOP3S' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolRTSP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolRTSPProxy' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolSMB' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolSMTP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolSOCKS' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolSSH' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolTelnet' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrProtocolTelnetS' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrPublicKeyHash' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrSecurityDomain' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrSerialNumber' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrServer' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrService' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrSubject' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrSubjectKeyID' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrSyncViewHint' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrSynchronizable' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrSynchronizableAny' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrTokenID' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrTokenIDSecureEnclave' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecAttrType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecClass' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecClassCertificate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecClassGenericPassword' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecClassIdentity' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecClassInternetPassword' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecClassKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecImportExportPassphrase' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecImportItemCertChain' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecImportItemIdentity' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecImportItemKeyID' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecImportItemLabel' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecImportItemTrust' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchCaseInsensitive' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchEmailAddressIfPresent' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchIssuers' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchItemList' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchLimit' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchLimitAll' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchLimitOne' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchPolicy' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchSearchList' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchSubjectContains' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchTrustedOnly' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecMatchValidOnDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyAppleCodeSigning' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyAppleEAP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyAppleIDValidation' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyAppleIPsec' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyApplePayIssuerEncryption' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyAppleRevocation' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyAppleSMIME' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyAppleSSL' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyAppleTimeStamping' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyAppleX509Basic' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyClient' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyMacAppStoreReceipt' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyName' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyOid' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPolicyRevocationFlags' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPrivateKeyAttrs' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPropertyTypeError' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPropertyTypeTitle' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecPublicKeyAttrs' type='^{__CFString=}'/>
<constant const='true' declared_type='SecRandomRef _Nonnull' name='kSecRandomDefault' type='^{__SecRandom=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecReturnAttributes' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecReturnData' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecReturnPersistentRef' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecReturnRef' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecSharedPassword' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecTrustCertificateTransparency' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecTrustEvaluationDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecTrustExtendedValidation' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecTrustOrganizationName' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecTrustResultValue' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecTrustRevocationChecked' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecTrustRevocationValidUntilDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecUseAuthenticationContext' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecUseAuthenticationUI' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecUseAuthenticationUIAllow' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecUseAuthenticationUIFail' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecUseAuthenticationUISkip' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecUseItemList' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecUseNoAuthenticationUI' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecUseOperationPrompt' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecValueData' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecValuePersistentRef' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef _Nonnull' name='kSecValueRef' type='^{__CFString=}'/>
<enum name='SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA' value='17'/>
<enum name='SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA' value='19'/>
<enum name='SSL_DHE_DSS_WITH_DES_CBC_SHA' value='18'/>
<enum name='SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA' value='20'/>
<enum name='SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA' value='22'/>
<enum name='SSL_DHE_RSA_WITH_DES_CBC_SHA' value='21'/>
<enum name='SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA' value='11'/>
<enum name='SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA' value='13'/>
<enum name='SSL_DH_DSS_WITH_DES_CBC_SHA' value='12'/>
<enum name='SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA' value='14'/>
<enum name='SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA' value='16'/>
<enum name='SSL_DH_RSA_WITH_DES_CBC_SHA' value='15'/>
<enum name='SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA' value='25'/>
<enum name='SSL_DH_anon_EXPORT_WITH_RC4_40_MD5' value='23'/>
<enum name='SSL_DH_anon_WITH_3DES_EDE_CBC_SHA' value='27'/>
<enum name='SSL_DH_anon_WITH_DES_CBC_SHA' value='26'/>
<enum name='SSL_DH_anon_WITH_RC4_128_MD5' value='24'/>
<enum name='SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA' value='29'/>
<enum name='SSL_FORTEZZA_DMS_WITH_NULL_SHA' value='28'/>
<enum name='SSL_NO_SUCH_CIPHERSUITE' value='65535'/>
<enum name='SSL_NULL_WITH_NULL_NULL' value='0'/>
<enum name='SSL_RSA_EXPORT_WITH_DES40_CBC_SHA' value='8'/>
<enum name='SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5' value='6'/>
<enum name='SSL_RSA_EXPORT_WITH_RC4_40_MD5' value='3'/>
<enum name='SSL_RSA_WITH_3DES_EDE_CBC_MD5' value='65411'/>
<enum name='SSL_RSA_WITH_3DES_EDE_CBC_SHA' value='10'/>
<enum name='SSL_RSA_WITH_DES_CBC_MD5' value='65410'/>
<enum name='SSL_RSA_WITH_DES_CBC_SHA' value='9'/>
<enum name='SSL_RSA_WITH_IDEA_CBC_MD5' value='65409'/>
<enum name='SSL_RSA_WITH_IDEA_CBC_SHA' value='7'/>
<enum name='SSL_RSA_WITH_NULL_MD5' value='1'/>
<enum name='SSL_RSA_WITH_NULL_SHA' value='2'/>
<enum name='SSL_RSA_WITH_RC2_CBC_MD5' value='65408'/>
<enum name='SSL_RSA_WITH_RC4_128_MD5' value='4'/>
<enum name='SSL_RSA_WITH_RC4_128_SHA' value='5'/>
<enum name='TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA' value='19'/>
<enum name='TLS_DHE_DSS_WITH_AES_128_CBC_SHA' value='50'/>
<enum name='TLS_DHE_DSS_WITH_AES_128_CBC_SHA256' value='64'/>
<enum name='TLS_DHE_DSS_WITH_AES_128_GCM_SHA256' value='162'/>
<enum name='TLS_DHE_DSS_WITH_AES_256_CBC_SHA' value='56'/>
<enum name='TLS_DHE_DSS_WITH_AES_256_CBC_SHA256' value='106'/>
<enum name='TLS_DHE_DSS_WITH_AES_256_GCM_SHA384' value='163'/>
<enum name='TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA' value='143'/>
<enum name='TLS_DHE_PSK_WITH_AES_128_CBC_SHA' value='144'/>
<enum name='TLS_DHE_PSK_WITH_AES_128_CBC_SHA256' value='178'/>
<enum name='TLS_DHE_PSK_WITH_AES_128_GCM_SHA256' value='170'/>
<enum name='TLS_DHE_PSK_WITH_AES_256_CBC_SHA' value='145'/>
<enum name='TLS_DHE_PSK_WITH_AES_256_CBC_SHA384' value='179'/>
<enum name='TLS_DHE_PSK_WITH_AES_256_GCM_SHA384' value='171'/>
<enum name='TLS_DHE_PSK_WITH_NULL_SHA' value='45'/>
<enum name='TLS_DHE_PSK_WITH_NULL_SHA256' value='180'/>
<enum name='TLS_DHE_PSK_WITH_NULL_SHA384' value='181'/>
<enum name='TLS_DHE_PSK_WITH_RC4_128_SHA' value='142'/>
<enum name='TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA' value='22'/>
<enum name='TLS_DHE_RSA_WITH_AES_128_CBC_SHA' value='51'/>
<enum name='TLS_DHE_RSA_WITH_AES_128_CBC_SHA256' value='103'/>
<enum name='TLS_DHE_RSA_WITH_AES_128_GCM_SHA256' value='158'/>
<enum name='TLS_DHE_RSA_WITH_AES_256_CBC_SHA' value='57'/>
<enum name='TLS_DHE_RSA_WITH_AES_256_CBC_SHA256' value='107'/>
<enum name='TLS_DHE_RSA_WITH_AES_256_GCM_SHA384' value='159'/>
<enum name='TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA' value='13'/>
<enum name='TLS_DH_DSS_WITH_AES_128_CBC_SHA' value='48'/>
<enum name='TLS_DH_DSS_WITH_AES_128_CBC_SHA256' value='62'/>
<enum name='TLS_DH_DSS_WITH_AES_128_GCM_SHA256' value='164'/>
<enum name='TLS_DH_DSS_WITH_AES_256_CBC_SHA' value='54'/>
<enum name='TLS_DH_DSS_WITH_AES_256_CBC_SHA256' value='104'/>
<enum name='TLS_DH_DSS_WITH_AES_256_GCM_SHA384' value='165'/>
<enum name='TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA' value='16'/>
<enum name='TLS_DH_RSA_WITH_AES_128_CBC_SHA' value='49'/>
<enum name='TLS_DH_RSA_WITH_AES_128_CBC_SHA256' value='63'/>
<enum name='TLS_DH_RSA_WITH_AES_128_GCM_SHA256' value='160'/>
<enum name='TLS_DH_RSA_WITH_AES_256_CBC_SHA' value='55'/>
<enum name='TLS_DH_RSA_WITH_AES_256_CBC_SHA256' value='105'/>
<enum name='TLS_DH_RSA_WITH_AES_256_GCM_SHA384' value='161'/>
<enum name='TLS_DH_anon_WITH_3DES_EDE_CBC_SHA' value='27'/>
<enum name='TLS_DH_anon_WITH_AES_128_CBC_SHA' value='52'/>
<enum name='TLS_DH_anon_WITH_AES_128_CBC_SHA256' value='108'/>
<enum name='TLS_DH_anon_WITH_AES_128_GCM_SHA256' value='166'/>
<enum name='TLS_DH_anon_WITH_AES_256_CBC_SHA' value='58'/>
<enum name='TLS_DH_anon_WITH_AES_256_CBC_SHA256' value='109'/>
<enum name='TLS_DH_anon_WITH_AES_256_GCM_SHA384' value='167'/>
<enum name='TLS_DH_anon_WITH_RC4_128_MD5' value='24'/>
<enum name='TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA' value='49160'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA' value='49161'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256' value='49187'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256' value='49195'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA' value='49162'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384' value='49188'/>
<enum name='TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384' value='49196'/>
<enum name='TLS_ECDHE_ECDSA_WITH_NULL_SHA' value='49158'/>
<enum name='TLS_ECDHE_ECDSA_WITH_RC4_128_SHA' value='49159'/>
<enum name='TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA' value='49170'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA' value='49171'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256' value='49191'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256' value='49199'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA' value='49172'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384' value='49192'/>
<enum name='TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384' value='49200'/>
<enum name='TLS_ECDHE_RSA_WITH_NULL_SHA' value='49168'/>
<enum name='TLS_ECDHE_RSA_WITH_RC4_128_SHA' value='49169'/>
<enum name='TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA' value='49155'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA' value='49156'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256' value='49189'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256' value='49197'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA' value='49157'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384' value='49190'/>
<enum name='TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384' value='49198'/>
<enum name='TLS_ECDH_ECDSA_WITH_NULL_SHA' value='49153'/>
<enum name='TLS_ECDH_ECDSA_WITH_RC4_128_SHA' value='49154'/>
<enum name='TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA' value='49165'/>
<enum name='TLS_ECDH_RSA_WITH_AES_128_CBC_SHA' value='49166'/>
<enum name='TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256' value='49193'/>
<enum name='TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256' value='49201'/>
<enum name='TLS_ECDH_RSA_WITH_AES_256_CBC_SHA' value='49167'/>
<enum name='TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384' value='49194'/>
<enum name='TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384' value='49202'/>
<enum name='TLS_ECDH_RSA_WITH_NULL_SHA' value='49163'/>
<enum name='TLS_ECDH_RSA_WITH_RC4_128_SHA' value='49164'/>
<enum name='TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA' value='49175'/>
<enum name='TLS_ECDH_anon_WITH_AES_128_CBC_SHA' value='49176'/>
<enum name='TLS_ECDH_anon_WITH_AES_256_CBC_SHA' value='49177'/>
<enum name='TLS_ECDH_anon_WITH_NULL_SHA' value='49173'/>
<enum name='TLS_ECDH_anon_WITH_RC4_128_SHA' value='49174'/>
<enum name='TLS_EMPTY_RENEGOTIATION_INFO_SCSV' value='255'/>
<enum name='TLS_NULL_WITH_NULL_NULL' value='0'/>
<enum name='TLS_PSK_WITH_3DES_EDE_CBC_SHA' value='139'/>
<enum name='TLS_PSK_WITH_AES_128_CBC_SHA' value='140'/>
<enum name='TLS_PSK_WITH_AES_128_CBC_SHA256' value='174'/>
<enum name='TLS_PSK_WITH_AES_128_GCM_SHA256' value='168'/>
<enum name='TLS_PSK_WITH_AES_256_CBC_SHA' value='141'/>
<enum name='TLS_PSK_WITH_AES_256_CBC_SHA384' value='175'/>
<enum name='TLS_PSK_WITH_AES_256_GCM_SHA384' value='169'/>
<enum name='TLS_PSK_WITH_NULL_SHA' value='44'/>
<enum name='TLS_PSK_WITH_NULL_SHA256' value='176'/>
<enum name='TLS_PSK_WITH_NULL_SHA384' value='177'/>
<enum name='TLS_PSK_WITH_RC4_128_SHA' value='138'/>
<enum name='TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA' value='147'/>
<enum name='TLS_RSA_PSK_WITH_AES_128_CBC_SHA' value='148'/>
<enum name='TLS_RSA_PSK_WITH_AES_128_CBC_SHA256' value='182'/>
<enum name='TLS_RSA_PSK_WITH_AES_128_GCM_SHA256' value='172'/>
<enum name='TLS_RSA_PSK_WITH_AES_256_CBC_SHA' value='149'/>
<enum name='TLS_RSA_PSK_WITH_AES_256_CBC_SHA384' value='183'/>
<enum name='TLS_RSA_PSK_WITH_AES_256_GCM_SHA384' value='173'/>
<enum name='TLS_RSA_PSK_WITH_NULL_SHA' value='46'/>
<enum name='TLS_RSA_PSK_WITH_NULL_SHA256' value='184'/>
<enum name='TLS_RSA_PSK_WITH_NULL_SHA384' value='185'/>
<enum name='TLS_RSA_PSK_WITH_RC4_128_SHA' value='146'/>
<enum name='TLS_RSA_WITH_3DES_EDE_CBC_SHA' value='10'/>
<enum name='TLS_RSA_WITH_AES_128_CBC_SHA' value='47'/>
<enum name='TLS_RSA_WITH_AES_128_CBC_SHA256' value='60'/>
<enum name='TLS_RSA_WITH_AES_128_GCM_SHA256' value='156'/>
<enum name='TLS_RSA_WITH_AES_256_CBC_SHA' value='53'/>
<enum name='TLS_RSA_WITH_AES_256_CBC_SHA256' value='61'/>
<enum name='TLS_RSA_WITH_AES_256_GCM_SHA384' value='157'/>
<enum name='TLS_RSA_WITH_NULL_MD5' value='1'/>
<enum name='TLS_RSA_WITH_NULL_SHA' value='2'/>
<enum name='TLS_RSA_WITH_NULL_SHA256' value='59'/>
<enum name='TLS_RSA_WITH_RC4_128_MD5' value='4'/>
<enum name='TLS_RSA_WITH_RC4_128_SHA' value='5'/>
<enum name='errSSLBadCert' value='-9808'/>
<enum name='errSSLBadCipherSuite' value='-9818'/>
<enum name='errSSLBadConfiguration' value='-9848'/>
<enum name='errSSLBadRecordMac' value='-9846'/>
<enum name='errSSLBufferOverflow' value='-9817'/>
<enum name='errSSLCertExpired' value='-9814'/>
<enum name='errSSLCertNotYetValid' value='-9815'/>
<enum name='errSSLClientAuthCompleted' value='-9841'/>
<enum name='errSSLClientCertRequested' value='-9842'/>
<enum name='errSSLClientHelloReceived' value='-9851'/>
<enum name='errSSLClosedAbort' value='-9806'/>
<enum name='errSSLClosedGraceful' value='-9805'/>
<enum name='errSSLClosedNoNotify' value='-9816'/>
<enum name='errSSLConnectionRefused' value='-9844'/>
<enum name='errSSLCrypto' value='-9809'/>
<enum name='errSSLDecryptionFail' value='-9845'/>
<enum name='errSSLFatalAlert' value='-9802'/>
<enum name='errSSLHostNameMismatch' value='-9843'/>
<enum name='errSSLIllegalParam' value='-9830'/>
<enum name='errSSLInternal' value='-9810'/>
<enum name='errSSLLast' value='-9849'/>
<enum name='errSSLModuleAttach' value='-9811'/>
<enum name='errSSLNegotiation' value='-9801'/>
<enum name='errSSLNoRootCert' value='-9813'/>
<enum name='errSSLPeerAccessDenied' value='-9832'/>
<enum name='errSSLPeerAuthCompleted' value='-9841'/>
<enum name='errSSLPeerBadCert' value='-9825'/>
<enum name='errSSLPeerBadRecordMac' value='-9820'/>
<enum name='errSSLPeerCertExpired' value='-9828'/>
<enum name='errSSLPeerCertRevoked' value='-9827'/>
<enum name='errSSLPeerCertUnknown' value='-9829'/>
<enum name='errSSLPeerDecodeError' value='-9833'/>
<enum name='errSSLPeerDecompressFail' value='-9823'/>
<enum name='errSSLPeerDecryptError' value='-9834'/>
<enum name='errSSLPeerDecryptionFail' value='-9821'/>
<enum name='errSSLPeerExportRestriction' value='-9835'/>
<enum name='errSSLPeerHandshakeFail' value='-9824'/>
<enum name='errSSLPeerInsufficientSecurity' value='-9837'/>
<enum name='errSSLPeerInternalError' value='-9838'/>
<enum name='errSSLPeerNoRenegotiation' value='-9840'/>
<enum name='errSSLPeerProtocolVersion' value='-9836'/>
<enum name='errSSLPeerRecordOverflow' value='-9822'/>
<enum name='errSSLPeerUnexpectedMsg' value='-9819'/>
<enum name='errSSLPeerUnknownCA' value='-9831'/>
<enum name='errSSLPeerUnsupportedCert' value='-9826'/>
<enum name='errSSLPeerUserCancelled' value='-9839'/>
<enum name='errSSLProtocol' value='-9800'/>
<enum name='errSSLRecordOverflow' value='-9847'/>
<enum name='errSSLServerAuthCompleted' value='-9841'/>
<enum name='errSSLSessionNotFound' value='-9804'/>
<enum name='errSSLUnexpectedRecord' value='-9849'/>
<enum name='errSSLUnknownRootCert' value='-9812'/>
<enum name='errSSLWeakPeerEphemeralDHKey' value='-9850'/>
<enum name='errSSLWouldBlock' value='-9803'/>
<enum name='errSSLXCertChainInvalid' value='-9807'/>
<enum name='errSecAllocate' value='-108'/>
<enum name='errSecAuthFailed' value='-25293'/>
<enum name='errSecBadReq' value='-909'/>
<enum name='errSecDecode' value='-26275'/>
<enum name='errSecDuplicateItem' value='-25299'/>
<enum name='errSecIO' value='-36'/>
<enum name='errSecInteractionNotAllowed' value='-25308'/>
<enum name='errSecInternalComponent' value='-2070'/>
<enum name='errSecItemNotFound' value='-25300'/>
<enum name='errSecNotAvailable' value='-25291'/>
<enum name='errSecOpWr' value='-49'/>
<enum name='errSecParam' value='-50'/>
<enum name='errSecSuccess' value='0'/>
<enum name='errSecUnimplemented' value='-4'/>
<enum name='errSecUserCanceled' value='-128'/>
<enum name='kAlwaysAuthenticate' value='1'/>
<enum name='kDTLSProtocol1' value='9'/>
<enum name='kNeverAuthenticate' value='0'/>
<enum name='kSSLAborted' value='4'/>
<enum name='kSSLClientCertNone' value='0'/>
<enum name='kSSLClientCertRejected' value='3'/>
<enum name='kSSLClientCertRequested' value='1'/>
<enum name='kSSLClientCertSent' value='2'/>
<enum name='kSSLClientSide' value='1'/>
<enum name='kSSLClosed' value='3'/>
<enum name='kSSLConnected' value='2'/>
<enum name='kSSLDatagramType' value='1'/>
<enum name='kSSLHandshake' value='1'/>
<enum name='kSSLIdle' value='0'/>
<enum name='kSSLProtocol2' value='1'/>
<enum name='kSSLProtocol3' value='2'/>
<enum name='kSSLProtocol3Only' value='3'/>
<enum name='kSSLProtocolAll' value='6'/>
<enum name='kSSLProtocolUnknown' value='0'/>
<enum name='kSSLServerSide' value='0'/>
<enum name='kSSLSessionOptionAllowServerIdentityChange' value='5'/>
<enum name='kSSLSessionOptionBreakOnCertRequested' value='1'/>
<enum name='kSSLSessionOptionBreakOnClientAuth' value='2'/>
<enum name='kSSLSessionOptionBreakOnClientHello' value='7'/>
<enum name='kSSLSessionOptionBreakOnServerAuth' value='0'/>
<enum name='kSSLSessionOptionFallback' value='6'/>
<enum name='kSSLSessionOptionFalseStart' value='3'/>
<enum name='kSSLSessionOptionSendOneByteRecord' value='4'/>
<enum name='kSSLSessionStrengthPolicyATSv1' value='1'/>
<enum name='kSSLSessionStrengthPolicyDefault' value='0'/>
<enum name='kSSLStreamType' value='0'/>
<enum name='kSecAccessControlAnd' value='32768'/>
<enum name='kSecAccessControlApplicationPassword' value='-2147483648'/>
<enum name='kSecAccessControlDevicePasscode' value='16'/>
<enum name='kSecAccessControlOr' value='16384'/>
<enum name='kSecAccessControlPrivateKeyUsage' value='1073741824'/>
<enum name='kSecAccessControlTouchIDAny' value='2'/>
<enum name='kSecAccessControlTouchIDCurrentSet' value='8'/>
<enum name='kSecAccessControlUserPresence' value='1'/>
<enum name='kSecPaddingNone' value='0'/>
<enum name='kSecPaddingOAEP' value='2'/>
<enum name='kSecPaddingPKCS1' value='1'/>
<enum name='kSecPaddingPKCS1MD2' value='32768'/>
<enum name='kSecPaddingPKCS1MD5' value='32769'/>
<enum name='kSecPaddingPKCS1SHA1' value='32770'/>
<enum name='kSecPaddingPKCS1SHA224' value='32771'/>
<enum name='kSecPaddingPKCS1SHA256' value='32772'/>
<enum name='kSecPaddingPKCS1SHA384' value='32773'/>
<enum name='kSecPaddingPKCS1SHA512' value='32774'/>
<enum name='kSecPaddingSigRaw' value='16384'/>
<enum name='kSecRevocationCRLMethod' value='2'/>
<enum name='kSecRevocationNetworkAccessDisabled' value='16'/>
<enum name='kSecRevocationOCSPMethod' value='1'/>
<enum name='kSecRevocationPreferCRL' value='4'/>
<enum name='kSecRevocationRequirePositiveResponse' value='8'/>
<enum name='kSecRevocationUseAnyAvailableMethod' value='3'/>
<enum name='kSecTrustResultConfirm' value='2'/>
<enum name='kSecTrustResultDeny' value='3'/>
<enum name='kSecTrustResultFatalTrustFailure' value='6'/>
<enum name='kSecTrustResultInvalid' value='0'/>
<enum name='kSecTrustResultOtherError' value='7'/>
<enum name='kSecTrustResultProceed' value='1'/>
<enum name='kSecTrustResultRecoverableTrustFailure' value='5'/>
<enum name='kSecTrustResultUnspecified' value='4'/>
<enum name='kTLSProtocol1' value='4'/>
<enum name='kTLSProtocol11' value='7'/>
<enum name='kTLSProtocol12' value='8'/>
<enum name='kTLSProtocol1Only' value='5'/>
<enum name='kTryAuthenticate' value='2'/>
<function name='SSLAddDistinguishedName'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg const='true' declared_type='void * _Nullable' name='derDN' type='^v'/>
<arg declared_type='size_t' name='derDNLen' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLClose'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLContextGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SSLCopyDistinguishedNames'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='CFArrayRef _Nullable * _Nonnull' name='names' type='^^{__CFArray}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLCopyPeerTrust'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SecTrustRef _Nullable * _Nonnull' name='trust' type='^^{__SecTrust}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLCreateContext'>
<arg declared_type='CFAllocatorRef _Nullable' name='alloc' type='^{__CFAllocator=}'/>
<arg declared_type='SSLProtocolSide' name='protocolSide' type='i'/>
<arg declared_type='SSLConnectionType' name='connectionType' type='i'/>
<retval declared_type='SSLContextRef _Nullable' type='^{SSLContext=}'/>
</function>
<function name='SSLGetBufferedReadSize'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='size_t * _Nonnull' name='bufSize' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetClientCertificateState'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLClientCertificateState * _Nonnull' name='clientState' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetConnection'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLConnectionRef _Nullable * _Nonnull' name='connection' type='^^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetDatagramWriteSize'>
<arg declared_type='SSLContextRef _Nonnull' name='dtlsContext' type='^{SSLContext=}'/>
<arg declared_type='size_t * _Nonnull' name='bufSize' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetEnabledCiphers'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLCipherSuite * _Nonnull' name='ciphers' type='^S'/>
<arg declared_type='size_t * _Nonnull' name='numCiphers' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetMaxDatagramRecordSize'>
<arg declared_type='SSLContextRef _Nonnull' name='dtlsContext' type='^{SSLContext=}'/>
<arg declared_type='size_t * _Nonnull' name='maxSize' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetNegotiatedCipher'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLCipherSuite * _Nonnull' name='cipherSuite' type='^S'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetNegotiatedProtocolVersion'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLProtocol * _Nonnull' name='protocol' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetNumberEnabledCiphers'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='size_t * _Nonnull' name='numCiphers' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetNumberSupportedCiphers'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='size_t * _Nonnull' name='numCiphers' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetPeerDomainName'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='char * _Nonnull' name='peerName' type='*'/>
<arg declared_type='size_t * _Nonnull' name='peerNameLen' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetPeerDomainNameLength'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='size_t * _Nonnull' name='peerNameLen' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetPeerID'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg const='true' declared_type='void * _Nullable * _Nonnull' name='peerID' type='^^v'/>
<arg declared_type='size_t * _Nonnull' name='peerIDLen' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetProtocolVersionMax'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLProtocol * _Nonnull' name='maxVersion' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetProtocolVersionMin'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLProtocol * _Nonnull' name='minVersion' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetSessionOption'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLSessionOption' name='option' type='i'/>
<arg declared_type='Boolean * _Nonnull' name='value' type='^B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetSessionState'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLSessionState * _Nonnull' name='state' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLGetSupportedCiphers'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLCipherSuite * _Nonnull' name='ciphers' type='^S'/>
<arg declared_type='size_t * _Nonnull' name='numCiphers' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLHandshake'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLRead'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='void * _Nonnull' name='data' type='^v'/>
<arg declared_type='size_t' name='dataLength' type='L' type64='Q'/>
<arg declared_type='size_t * _Nonnull' name='processed' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetCertificate'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='CFArrayRef _Nonnull' name='certRefs' type='^{__CFArray=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetClientSideAuthenticate'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLAuthenticate' name='auth' type='i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetConnection'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLConnectionRef _Nullable' name='connection' type='@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetDatagramHelloCookie'>
<arg declared_type='SSLContextRef _Nonnull' name='dtlsContext' type='^{SSLContext=}'/>
<arg const='true' declared_type='void * _Nullable' name='cookie' type='^v'/>
<arg declared_type='size_t' name='cookieLen' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetEnabledCiphers'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg const='true' declared_type='SSLCipherSuite * _Nonnull' name='ciphers' type='^S'/>
<arg declared_type='size_t' name='numCiphers' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetEncryptionCertificate'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='CFArrayRef _Nonnull' name='certRefs' type='^{__CFArray=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetIOFuncs'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLReadFunc _Nonnull' function_pointer='true' name='readFunc' type='^?'>
<arg declared_type='SSLConnectionRef _Nonnull' type='@'/>
<arg declared_type='void * _Nonnull' type='^v'/>
<arg declared_type='size_t * _Nonnull' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<arg declared_type='SSLWriteFunc _Nonnull' function_pointer='true' name='writeFunc' type='^?'>
<arg declared_type='SSLConnectionRef _Nonnull' type='@'/>
<arg const='true' declared_type='void * _Nonnull' type='^v'/>
<arg declared_type='size_t * _Nonnull' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetMaxDatagramRecordSize'>
<arg declared_type='SSLContextRef _Nonnull' name='dtlsContext' type='^{SSLContext=}'/>
<arg declared_type='size_t' name='maxSize' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetPeerDomainName'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg const='true' declared_type='char * _Nullable' name='peerName' type='*'/>
<arg declared_type='size_t' name='peerNameLen' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetPeerID'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg const='true' declared_type='void * _Nullable' name='peerID' type='^v'/>
<arg declared_type='size_t' name='peerIDLen' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetProtocolVersionMax'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLProtocol' name='maxVersion' type='i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetProtocolVersionMin'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLProtocol' name='minVersion' type='i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetSessionOption'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLSessionOption' name='option' type='i'/>
<arg declared_type='Boolean' name='value' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLSetSessionStrengthPolicy'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg declared_type='SSLSessionStrengthPolicy' name='policyStrength' type='i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SSLWrite'>
<arg declared_type='SSLContextRef _Nonnull' name='context' type='^{SSLContext=}'/>
<arg const='true' declared_type='void * _Nullable' name='data' type='^v'/>
<arg declared_type='size_t' name='dataLength' type='L' type64='Q'/>
<arg declared_type='size_t * _Nonnull' name='processed' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecAccessControlCreateWithFlags'>
<arg declared_type='CFAllocatorRef _Nullable' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFTypeRef _Nonnull' name='protection' type='@'/>
<arg declared_type='SecAccessControlCreateFlags' name='flags' type='l' type64='q'/>
<arg declared_type='CFErrorRef _Nullable * _Nullable' name='error' type='^^{__CFError}'/>
<retval declared_type='SecAccessControlRef _Nullable' type='^{__SecAccessControl=}'/>
</function>
<function name='SecAccessControlGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SecAddSharedWebCredential'>
<arg declared_type='CFStringRef _Nonnull' name='fqdn' type='^{__CFString=}'/>
<arg declared_type='CFStringRef _Nonnull' name='account' type='^{__CFString=}'/>
<arg declared_type='CFStringRef _Nullable' name='password' type='^{__CFString=}'/>
<arg declared_type='void (^ _Nonnull)(CFErrorRef _Nullable)' function_pointer='true' name='completionHandler' type='@?'>
<arg declared_type='CFErrorRef _Nullable' type='^{__CFError=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='SecCertificateCopyData'>
<arg declared_type='SecCertificateRef _Nonnull' name='certificate' type='^{__SecCertificate=}'/>
<retval declared_type='CFDataRef _Nonnull' type='^{__CFData=}'/>
</function>
<function name='SecCertificateCopySubjectSummary'>
<arg declared_type='SecCertificateRef _Nonnull' name='certificate' type='^{__SecCertificate=}'/>
<retval declared_type='CFStringRef _Nonnull' type='^{__CFString=}'/>
</function>
<function name='SecCertificateCreateWithData'>
<arg declared_type='CFAllocatorRef _Nullable' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFDataRef _Nonnull' name='data' type='^{__CFData=}'/>
<retval declared_type='SecCertificateRef _Nullable' type='^{__SecCertificate=}'/>
</function>
<function name='SecCertificateGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SecCreateSharedWebCredentialPassword'>
<retval declared_type='CFStringRef _Nullable' type='^{__CFString=}'/>
</function>
<function name='SecIdentityCopyCertificate'>
<arg declared_type='SecIdentityRef _Nonnull' name='identityRef' type='^{__SecIdentity=}'/>
<arg declared_type='SecCertificateRef _Nullable * _Nonnull' name='certificateRef' type='^^{__SecCertificate}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecIdentityCopyPrivateKey'>
<arg declared_type='SecIdentityRef _Nonnull' name='identityRef' type='^{__SecIdentity=}'/>
<arg declared_type='SecKeyRef _Nullable * _Nonnull' name='privateKeyRef' type='^^{__SecKey}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecIdentityGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SecItemAdd'>
<arg declared_type='CFDictionaryRef _Nonnull' name='attributes' type='^{__CFDictionary=}'/>
<arg declared_type='CFTypeRef _Nullable * _Nullable' name='result' type='^^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecItemCopyMatching'>
<arg declared_type='CFDictionaryRef _Nonnull' name='query' type='^{__CFDictionary=}'/>
<arg declared_type='CFTypeRef _Nullable * _Nullable' name='result' type='^^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecItemDelete'>
<arg declared_type='CFDictionaryRef _Nonnull' name='query' type='^{__CFDictionary=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecItemUpdate'>
<arg declared_type='CFDictionaryRef _Nonnull' name='query' type='^{__CFDictionary=}'/>
<arg declared_type='CFDictionaryRef _Nonnull' name='attributesToUpdate' type='^{__CFDictionary=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecKeyDecrypt'>
<arg declared_type='SecKeyRef _Nonnull' name='key' type='^{__SecKey=}'/>
<arg declared_type='SecPadding' name='padding' type='I'/>
<arg const='true' declared_type='uint8_t * _Nonnull' name='cipherText' type='*'/>
<arg declared_type='size_t' name='cipherTextLen' type='L' type64='Q'/>
<arg declared_type='uint8_t * _Nonnull' name='plainText' type='*'/>
<arg declared_type='size_t * _Nonnull' name='plainTextLen' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecKeyEncrypt'>
<arg declared_type='SecKeyRef _Nonnull' name='key' type='^{__SecKey=}'/>
<arg declared_type='SecPadding' name='padding' type='I'/>
<arg const='true' declared_type='uint8_t * _Nonnull' name='plainText' type='*'/>
<arg declared_type='size_t' name='plainTextLen' type='L' type64='Q'/>
<arg declared_type='uint8_t * _Nonnull' name='cipherText' type='*'/>
<arg declared_type='size_t * _Nonnull' name='cipherTextLen' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecKeyGeneratePair'>
<arg declared_type='CFDictionaryRef _Nonnull' name='parameters' type='^{__CFDictionary=}'/>
<arg declared_type='SecKeyRef _Nullable * _Nullable' name='publicKey' type='^^{__SecKey}'/>
<arg declared_type='SecKeyRef _Nullable * _Nullable' name='privateKey' type='^^{__SecKey}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecKeyGetBlockSize'>
<arg declared_type='SecKeyRef _Nonnull' name='key' type='^{__SecKey=}'/>
<retval declared_type='size_t' type='L' type64='Q'/>
</function>
<function name='SecKeyGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SecKeyRawSign'>
<arg declared_type='SecKeyRef _Nonnull' name='key' type='^{__SecKey=}'/>
<arg declared_type='SecPadding' name='padding' type='I'/>
<arg const='true' declared_type='uint8_t * _Nonnull' name='dataToSign' type='*'/>
<arg declared_type='size_t' name='dataToSignLen' type='L' type64='Q'/>
<arg declared_type='uint8_t * _Nonnull' name='sig' type='*'/>
<arg declared_type='size_t * _Nonnull' name='sigLen' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecKeyRawVerify'>
<arg declared_type='SecKeyRef _Nonnull' name='key' type='^{__SecKey=}'/>
<arg declared_type='SecPadding' name='padding' type='I'/>
<arg const='true' declared_type='uint8_t * _Nonnull' name='signedData' type='*'/>
<arg declared_type='size_t' name='signedDataLen' type='L' type64='Q'/>
<arg const='true' declared_type='uint8_t * _Nonnull' name='sig' type='*'/>
<arg declared_type='size_t' name='sigLen' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecPKCS12Import'>
<arg declared_type='CFDataRef _Nonnull' name='pkcs12_data' type='^{__CFData=}'/>
<arg declared_type='CFDictionaryRef _Nonnull' name='options' type='^{__CFDictionary=}'/>
<arg declared_type='CFArrayRef _Nullable * _Nonnull' name='items' type='^^{__CFArray}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecPolicyCopyProperties'>
<arg declared_type='SecPolicyRef _Nonnull' name='policyRef' type='^{__SecPolicy=}'/>
<retval declared_type='CFDictionaryRef _Nonnull' type='^{__CFDictionary=}'/>
</function>
<function name='SecPolicyCreateBasicX509'>
<retval declared_type='SecPolicyRef _Nonnull' type='^{__SecPolicy=}'/>
</function>
<function name='SecPolicyCreateRevocation'>
<arg declared_type='CFOptionFlags' name='revocationFlags' type='L' type64='Q'/>
<retval declared_type='SecPolicyRef _Nonnull' type='^{__SecPolicy=}'/>
</function>
<function name='SecPolicyCreateSSL'>
<arg declared_type='Boolean' name='server' type='B'/>
<arg declared_type='CFStringRef _Nullable' name='hostname' type='^{__CFString=}'/>
<retval declared_type='SecPolicyRef _Nonnull' type='^{__SecPolicy=}'/>
</function>
<function name='SecPolicyCreateWithProperties'>
<arg declared_type='CFTypeRef _Nonnull' name='policyIdentifier' type='@'/>
<arg declared_type='CFDictionaryRef _Nullable' name='properties' type='^{__CFDictionary=}'/>
<retval declared_type='SecPolicyRef _Nonnull' type='^{__SecPolicy=}'/>
</function>
<function name='SecPolicyGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SecRandomCopyBytes'>
<arg declared_type='SecRandomRef _Nullable' name='rnd' type='^{__SecRandom=}'/>
<arg declared_type='size_t' name='count' type='L' type64='Q'/>
<arg declared_type='uint8_t * _Nonnull' name='bytes' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='SecRequestSharedWebCredential'>
<arg declared_type='CFStringRef _Nullable' name='fqdn' type='^{__CFString=}'/>
<arg declared_type='CFStringRef _Nullable' name='account' type='^{__CFString=}'/>
<arg declared_type='void (^ _Nonnull)(CFArrayRef _Nullable, CFErrorRef _Nullable)' function_pointer='true' name='completionHandler' type='@?'>
<arg declared_type='CFArrayRef _Nullable' type='^{__CFArray=}'/>
<arg declared_type='CFErrorRef _Nullable' type='^{__CFError=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='SecTrustCopyCustomAnchorCertificates'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='CFArrayRef _Nullable * _Nonnull' name='anchors' type='^^{__CFArray}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustCopyExceptions'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<retval declared_type='CFDataRef _Nonnull' type='^{__CFData=}'/>
</function>
<function name='SecTrustCopyPolicies'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='CFArrayRef _Nullable * _Nonnull' name='policies' type='^^{__CFArray}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustCopyProperties'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<retval declared_type='CFArrayRef _Nullable' type='^{__CFArray=}'/>
</function>
<function name='SecTrustCopyPublicKey'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<retval declared_type='SecKeyRef _Nullable' type='^{__SecKey=}'/>
</function>
<function name='SecTrustCopyResult'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<retval declared_type='CFDictionaryRef _Nullable' type='^{__CFDictionary=}'/>
</function>
<function name='SecTrustCreateWithCertificates'>
<arg declared_type='CFTypeRef _Nonnull' name='certificates' type='@'/>
<arg declared_type='CFTypeRef _Nullable' name='policies' type='@'/>
<arg declared_type='SecTrustRef _Nullable * _Nonnull' name='trust' type='^^{__SecTrust}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustEvaluate'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='SecTrustResultType * _Nullable' name='result' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustEvaluateAsync'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='dispatch_queue_t _Nullable' name='queue' type='@'/>
<arg declared_type='SecTrustCallback _Nonnull' function_pointer='true' name='result' type='@?'>
<arg declared_type='SecTrustRef _Nonnull' type='^{__SecTrust=}'/>
<arg declared_type='SecTrustResultType' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustGetCertificateAtIndex'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='CFIndex' name='ix' type='l' type64='q'/>
<retval declared_type='SecCertificateRef _Nullable' type='^{__SecCertificate=}'/>
</function>
<function name='SecTrustGetCertificateCount'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SecTrustGetNetworkFetchAllowed'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='Boolean * _Nonnull' name='allowFetch' type='^B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustGetTrustResult'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='SecTrustResultType * _Nonnull' name='result' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SecTrustGetVerifyTime'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<retval declared_type='CFAbsoluteTime' type='d'/>
</function>
<function name='SecTrustSetAnchorCertificates'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='CFArrayRef _Nonnull' name='anchorCertificates' type='^{__CFArray=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustSetAnchorCertificatesOnly'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='Boolean' name='anchorCertificatesOnly' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustSetExceptions'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='CFDataRef _Nonnull' name='exceptions' type='^{__CFData=}'/>
<retval declared_type='_Bool' type='B'/>
</function>
<function name='SecTrustSetNetworkFetchAllowed'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='Boolean' name='allowFetch' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustSetOCSPResponse'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='CFTypeRef _Nullable' name='responseData' type='@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustSetPolicies'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='CFTypeRef _Nonnull' name='policies' type='@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SecTrustSetVerifyDate'>
<arg declared_type='SecTrustRef _Nonnull' name='trust' type='^{__SecTrust=}'/>
<arg declared_type='CFDateRef _Nonnull' name='verifyDate' type='^{__CFDate=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
</signatures>
