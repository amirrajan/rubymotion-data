<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreMedia.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/CoreAudio.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<struct name='AUChannelInfo' type64='{AUChannelInfo=&quot;inChannels&quot;s&quot;outChannels&quot;s}'>
<field declared_type64='SInt16' name='inChannels' type64='s'/>
<field declared_type64='SInt16' name='outChannels' type64='s'/>
</struct>
<struct name='AUDependentParameter' type64='{AUDependentParameter=&quot;mScope&quot;I&quot;mParameterID&quot;I}'>
<field declared_type64='AudioUnitScope' name='mScope' type64='I'/>
<field declared_type64='AudioUnitParameterID' name='mParameterID' type64='I'/>
</struct>
<struct name='AUInputSamplesInOutputCallbackStruct' type64='{AUInputSamplesInOutputCallbackStruct=&quot;inputToOutputCallback&quot;^?&quot;userData&quot;^v}'>
<field declared_type64='AUInputSamplesInOutputCallback _Nonnull' function_pointer='true' name='inputToOutputCallback' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='Float64' type64='d'/>
<arg declared_type64='Float64' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void * _Nullable' name='userData' type64='^v'/>
</struct>
<struct name='AUMIDIEvent' type64='{AUMIDIEvent=&quot;next&quot;^(AURenderEvent)&quot;eventSampleTime&quot;q&quot;eventType&quot;C&quot;reserved&quot;C&quot;length&quot;S&quot;cable&quot;C&quot;data&quot;[3C]}'>
<field declared_type64='union AURenderEvent * _Nullable' name='next' type64='^(AURenderEvent={AURenderEventHeader=^(AURenderEvent)qCC}{AUParameterEvent=^(AURenderEvent)qC[3C]IQf}{AUMIDIEvent=^(AURenderEvent)qCCSC[3C]})'/>
<field declared_type64='AUEventSampleTime' name='eventSampleTime' type64='q'/>
<field declared_type64='AURenderEventType' name='eventType' type64='C'/>
<field declared_type64='uint8_t' name='reserved' type64='C'/>
<field declared_type64='uint16_t' name='length' type64='S'/>
<field declared_type64='uint8_t' name='cable' type64='C'/>
<field declared_type64='uint8_t*' name='data' type64='[3C]'/>
</struct>
<struct name='AUMIDIOutputCallbackStruct' type64='{AUMIDIOutputCallbackStruct=&quot;midiOutputCallback&quot;^?&quot;userData&quot;^v}'>
<field declared_type64='AUMIDIOutputCallback _Nonnull' function_pointer='true' name='midiOutputCallback' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='struct MIDIPacketList * _Nonnull' type64='^{MIDIPacketList=I[1{MIDIPacket=QS[256C]}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='void * _Nullable' name='userData' type64='^v'/>
</struct>
<struct name='AUNodeConnection' type64='{AudioUnitNodeConnection=&quot;sourceNode&quot;i&quot;sourceOutputNumber&quot;I&quot;destNode&quot;i&quot;destInputNumber&quot;I}'>
<field declared_type64='AUNode' name='sourceNode' type64='i'/>
<field declared_type64='UInt32' name='sourceOutputNumber' type64='I'/>
<field declared_type64='AUNode' name='destNode' type64='i'/>
<field declared_type64='UInt32' name='destInputNumber' type64='I'/>
</struct>
<struct name='AUNodeInteraction' type64='{AUNodeInteraction=&quot;nodeInteractionType&quot;I&quot;nodeInteraction&quot;(?=&quot;connection&quot;{AudioUnitNodeConnection=&quot;sourceNode&quot;i&quot;sourceOutputNumber&quot;I&quot;destNode&quot;i&quot;destInputNumber&quot;I}&quot;inputCallback&quot;{AUNodeRenderCallback=&quot;destNode&quot;i&quot;destInputNumber&quot;I&quot;cback&quot;{AURenderCallbackStruct=&quot;inputProc&quot;^?&quot;inputProcRefCon&quot;^v}})}'>
<field declared_type64='UInt32' name='nodeInteractionType' type64='I'/>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator14.3.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AUGraph.h:333:2)' name='nodeInteraction' type64='(?=&quot;connection&quot;{AudioUnitNodeConnection=&quot;sourceNode&quot;i&quot;sourceOutputNumber&quot;I&quot;destNode&quot;i&quot;destInputNumber&quot;I}&quot;inputCallback&quot;{AUNodeRenderCallback=&quot;destNode&quot;i&quot;destInputNumber&quot;I&quot;cback&quot;{AURenderCallbackStruct=&quot;inputProc&quot;^?&quot;inputProcRefCon&quot;^v}})'/>
</struct>
<struct name='AUNodeRenderCallback' type64='{AUNodeRenderCallback=&quot;destNode&quot;i&quot;destInputNumber&quot;I&quot;cback&quot;{AURenderCallbackStruct=&quot;inputProc&quot;^?&quot;inputProcRefCon&quot;^v}}'>
<field declared_type64='AUNode' name='destNode' type64='i'/>
<field declared_type64='AudioUnitElement' name='destInputNumber' type64='I'/>
<field declared_type64='AURenderCallbackStruct' name='cback' type64='{AURenderCallbackStruct=&quot;inputProc&quot;^?&quot;inputProcRefCon&quot;^v}'/>
</struct>
<struct name='AUParameterAutomationEvent' type64='{AUParameterAutomationEvent=&quot;hostTime&quot;Q&quot;address&quot;Q&quot;value&quot;f&quot;eventType&quot;I&quot;reserved&quot;Q}'>
<field declared_type64='uint64_t' name='hostTime' type64='Q'/>
<field declared_type64='AUParameterAddress' name='address' type64='Q'/>
<field declared_type64='AUValue' name='value' type64='f'/>
<field declared_type64='AUParameterAutomationEventType' name='eventType' type64='I'/>
<field declared_type64='uint64_t' name='reserved' type64='Q'/>
</struct>
<struct name='AUParameterEvent' type64='{AUParameterEvent=&quot;next&quot;^(AURenderEvent)&quot;eventSampleTime&quot;q&quot;eventType&quot;C&quot;reserved&quot;[3C]&quot;rampDurationSampleFrames&quot;I&quot;parameterAddress&quot;Q&quot;value&quot;f}'>
<field declared_type64='union AURenderEvent * _Nullable' name='next' type64='^(AURenderEvent={AURenderEventHeader=^(AURenderEvent)qCC}{AUParameterEvent=^(AURenderEvent)qC[3C]IQf}{AUMIDIEvent=^(AURenderEvent)qCCSC[3C]})'/>
<field declared_type64='AUEventSampleTime' name='eventSampleTime' type64='q'/>
<field declared_type64='AURenderEventType' name='eventType' type64='C'/>
<field declared_type64='uint8_t*' name='reserved' type64='[3C]'/>
<field declared_type64='AUAudioFrameCount' name='rampDurationSampleFrames' type64='I'/>
<field declared_type64='AUParameterAddress' name='parameterAddress' type64='Q'/>
<field declared_type64='AUValue' name='value' type64='f'/>
</struct>
<struct name='AUPreset' type64='{AUPreset=&quot;presetNumber&quot;i&quot;presetName&quot;^{__CFString}}'>
<field declared_type64='SInt32' name='presetNumber' type64='i'/>
<field declared_type64='CFStringRef _Nullable' name='presetName' type64='^{__CFString=}'/>
</struct>
<struct name='AUPresetEvent' type64='{AUPresetEvent=&quot;scope&quot;I&quot;element&quot;I&quot;preset&quot;^v}'>
<field declared_type64='AudioUnitScope' name='scope' type64='I'/>
<field declared_type64='AudioUnitElement' name='element' type64='I'/>
<field declared_type64='CFPropertyListRef _Nonnull' name='preset' type64='@'/>
</struct>
<struct name='AURecordedParameterEvent' type64='{AURecordedParameterEvent=&quot;hostTime&quot;Q&quot;address&quot;Q&quot;value&quot;f}'>
<field declared_type64='uint64_t' name='hostTime' type64='Q'/>
<field declared_type64='AUParameterAddress' name='address' type64='Q'/>
<field declared_type64='AUValue' name='value' type64='f'/>
</struct>
<struct name='AURenderCallbackStruct' type64='{AURenderCallbackStruct=&quot;inputProc&quot;^?&quot;inputProcRefCon&quot;^v}'>
<field declared_type64='AURenderCallback _Nullable' function_pointer='true' name='inputProc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='AudioBufferList * _Nullable' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='void * _Nullable' name='inputProcRefCon' type64='^v'/>
</struct>
<struct name='AURenderEventHeader' type64='{AURenderEventHeader=&quot;next&quot;^(AURenderEvent)&quot;eventSampleTime&quot;q&quot;eventType&quot;C&quot;reserved&quot;C}'>
<field declared_type64='union AURenderEvent * _Nullable' name='next' type64='^(AURenderEvent={AURenderEventHeader=^(AURenderEvent)qCC}{AUParameterEvent=^(AURenderEvent)qC[3C]IQf}{AUMIDIEvent=^(AURenderEvent)qCCSC[3C]})'/>
<field declared_type64='AUEventSampleTime' name='eventSampleTime' type64='q'/>
<field declared_type64='AURenderEventType' name='eventType' type64='C'/>
<field declared_type64='uint8_t' name='reserved' type64='C'/>
</struct>
<struct name='AUSamplerBankPresetData' type64='{AUSamplerBankPresetData=&quot;bankURL&quot;^{__CFURL}&quot;bankMSB&quot;C&quot;bankLSB&quot;C&quot;presetID&quot;C&quot;reserved&quot;C}'>
<field declared_type64='CFURLRef _Nonnull' name='bankURL' type64='^{__CFURL=}'/>
<field declared_type64='UInt8' name='bankMSB' type64='C'/>
<field declared_type64='UInt8' name='bankLSB' type64='C'/>
<field declared_type64='UInt8' name='presetID' type64='C'/>
<field declared_type64='UInt8' name='reserved' type64='C'/>
</struct>
<struct name='AUSamplerInstrumentData' type64='{AUSamplerInstrumentData=&quot;fileURL&quot;^{__CFURL}&quot;instrumentType&quot;C&quot;bankMSB&quot;C&quot;bankLSB&quot;C&quot;presetID&quot;C}'>
<field declared_type64='CFURLRef _Nonnull' name='fileURL' type64='^{__CFURL=}'/>
<field declared_type64='UInt8' name='instrumentType' type64='C'/>
<field declared_type64='UInt8' name='bankMSB' type64='C'/>
<field declared_type64='UInt8' name='bankLSB' type64='C'/>
<field declared_type64='UInt8' name='presetID' type64='C'/>
</struct>
<struct name='AudioBalanceFade' type64='{AudioBalanceFade=&quot;mLeftRightBalance&quot;f&quot;mBackFrontFade&quot;f&quot;mType&quot;I&quot;mChannelLayout&quot;^{AudioChannelLayout}}'>
<field declared_type64='Float32' name='mLeftRightBalance' type64='f'/>
<field declared_type64='Float32' name='mBackFrontFade' type64='f'/>
<field declared_type64='AudioBalanceFadeType' name='mType' type64='I'/>
<field const='true' declared_type64='AudioChannelLayout * _Nonnull' name='mChannelLayout' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
</struct>
<struct name='AudioBytePacketTranslation' type64='{AudioBytePacketTranslation=&quot;mByte&quot;q&quot;mPacket&quot;q&quot;mByteOffsetInPacket&quot;I&quot;mFlags&quot;I}'>
<field declared_type64='SInt64' name='mByte' type64='q'/>
<field declared_type64='SInt64' name='mPacket' type64='q'/>
<field declared_type64='UInt32' name='mByteOffsetInPacket' type64='I'/>
<field declared_type64='AudioBytePacketTranslationFlags' name='mFlags' type64='I'/>
</struct>
<struct name='AudioCodecMagicCookieInfo' type64='{AudioCodecMagicCookieInfo=&quot;mMagicCookieSize&quot;I&quot;mMagicCookie&quot;^v}'>
<field declared_type64='UInt32' name='mMagicCookieSize' type64='I'/>
<field const='true' declared_type64='void * _Nullable' name='mMagicCookie' type64='^v'/>
</struct>
<struct name='AudioCodecPrimeInfo' type64='{AudioCodecPrimeInfo=&quot;leadingFrames&quot;I&quot;trailingFrames&quot;I}'>
<field declared_type64='UInt32' name='leadingFrames' type64='I'/>
<field declared_type64='UInt32' name='trailingFrames' type64='I'/>
</struct>
<struct name='AudioComponentDescription' type64='{AudioComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}'>
<field declared_type64='OSType' name='componentType' type64='I'/>
<field declared_type64='OSType' name='componentSubType' type64='I'/>
<field declared_type64='OSType' name='componentManufacturer' type64='I'/>
<field declared_type64='UInt32' name='componentFlags' type64='I'/>
<field declared_type64='UInt32' name='componentFlagsMask' type64='I'/>
</struct>
<struct name='AudioComponentPlugInInterface' type64='{AudioComponentPlugInInterface=&quot;Open&quot;^?&quot;Close&quot;^?&quot;Lookup&quot;^?&quot;reserved&quot;^v}'>
<field declared_type64='OSStatus (* _Nonnull)(void * _Nonnull, AudioComponentInstance _Nonnull)' function_pointer='true' name='Open' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='AudioComponentInstance _Nonnull' type64='^{OpaqueAudioComponentInstance=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='OSStatus (* _Nonnull)(void * _Nonnull)' function_pointer='true' name='Close' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='AudioComponentMethod _Nullable (* _Nonnull)(SInt16)' function_pointer='true' name='Lookup' type64='^?'>
<arg declared_type64='SInt16' type64='s'/>
<retval declared_type64='AudioComponentMethod _Nullable' function_pointer='true' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</retval>
</field>
<field declared_type64='void * _Nullable' name='reserved' type64='^v'/>
</struct>
<struct name='AudioConverterPrimeInfo' type64='{AudioConverterPrimeInfo=&quot;leadingFrames&quot;I&quot;trailingFrames&quot;I}'>
<field declared_type64='UInt32' name='leadingFrames' type64='I'/>
<field declared_type64='UInt32' name='trailingFrames' type64='I'/>
</struct>
<struct name='AudioFileMarker' type64='{AudioFileMarker=&quot;mFramePosition&quot;d&quot;mName&quot;^{__CFString}&quot;mMarkerID&quot;i&quot;mSMPTETime&quot;{AudioFile_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;C&quot;mSeconds&quot;C&quot;mFrames&quot;C&quot;mSubFrameSampleOffset&quot;I}&quot;mType&quot;I&quot;mReserved&quot;S&quot;mChannel&quot;S}'>
<field declared_type64='Float64' name='mFramePosition' type64='d'/>
<field declared_type64='CFStringRef _Nullable' name='mName' type64='^{__CFString=}'/>
<field declared_type64='SInt32' name='mMarkerID' type64='i'/>
<field declared_type64='AudioFile_SMPTE_Time' name='mSMPTETime' type64='{AudioFile_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;C&quot;mSeconds&quot;C&quot;mFrames&quot;C&quot;mSubFrameSampleOffset&quot;I}'/>
<field declared_type64='UInt32' name='mType' type64='I'/>
<field declared_type64='UInt16' name='mReserved' type64='S'/>
<field declared_type64='UInt16' name='mChannel' type64='S'/>
</struct>
<struct name='AudioFileMarkerList' type64='{AudioFileMarkerList=&quot;mSMPTE_TimeType&quot;I&quot;mNumberMarkers&quot;I&quot;mMarkers&quot;[1{AudioFileMarker=&quot;mFramePosition&quot;d&quot;mName&quot;^{__CFString}&quot;mMarkerID&quot;i&quot;mSMPTETime&quot;{AudioFile_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;C&quot;mSeconds&quot;C&quot;mFrames&quot;C&quot;mSubFrameSampleOffset&quot;I}&quot;mType&quot;I&quot;mReserved&quot;S&quot;mChannel&quot;S}]}'>
<field declared_type64='UInt32' name='mSMPTE_TimeType' type64='I'/>
<field declared_type64='UInt32' name='mNumberMarkers' type64='I'/>
<field declared_type64='AudioFileMarker*' name='mMarkers' type64='[1{AudioFileMarker=&quot;mFramePosition&quot;d&quot;mName&quot;^{__CFString}&quot;mMarkerID&quot;i&quot;mSMPTETime&quot;{AudioFile_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;C&quot;mSeconds&quot;C&quot;mFrames&quot;C&quot;mSubFrameSampleOffset&quot;I}&quot;mType&quot;I&quot;mReserved&quot;S&quot;mChannel&quot;S}]'/>
</struct>
<struct name='AudioFilePacketTableInfo' type64='{AudioFilePacketTableInfo=&quot;mNumberValidFrames&quot;q&quot;mPrimingFrames&quot;i&quot;mRemainderFrames&quot;i}'>
<field declared_type64='SInt64' name='mNumberValidFrames' type64='q'/>
<field declared_type64='SInt32' name='mPrimingFrames' type64='i'/>
<field declared_type64='SInt32' name='mRemainderFrames' type64='i'/>
</struct>
<struct name='AudioFileRegion' type64='{AudioFileRegion=&quot;mRegionID&quot;I&quot;mName&quot;^{__CFString}&quot;mFlags&quot;I&quot;mNumberMarkers&quot;I&quot;mMarkers&quot;[1{AudioFileMarker=&quot;mFramePosition&quot;d&quot;mName&quot;^{__CFString}&quot;mMarkerID&quot;i&quot;mSMPTETime&quot;{AudioFile_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;C&quot;mSeconds&quot;C&quot;mFrames&quot;C&quot;mSubFrameSampleOffset&quot;I}&quot;mType&quot;I&quot;mReserved&quot;S&quot;mChannel&quot;S}]}'>
<field declared_type64='UInt32' name='mRegionID' type64='I'/>
<field declared_type64='CFStringRef _Nonnull' name='mName' type64='^{__CFString=}'/>
<field declared_type64='AudioFileRegionFlags' name='mFlags' type64='I'/>
<field declared_type64='UInt32' name='mNumberMarkers' type64='I'/>
<field declared_type64='AudioFileMarker*' name='mMarkers' type64='[1{AudioFileMarker=&quot;mFramePosition&quot;d&quot;mName&quot;^{__CFString}&quot;mMarkerID&quot;i&quot;mSMPTETime&quot;{AudioFile_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;C&quot;mSeconds&quot;C&quot;mFrames&quot;C&quot;mSubFrameSampleOffset&quot;I}&quot;mType&quot;I&quot;mReserved&quot;S&quot;mChannel&quot;S}]'/>
</struct>
<struct name='AudioFileRegionList' type64='{AudioFileRegionList=&quot;mSMPTE_TimeType&quot;I&quot;mNumberRegions&quot;I&quot;mRegions&quot;[1{AudioFileRegion=&quot;mRegionID&quot;I&quot;mName&quot;^{__CFString}&quot;mFlags&quot;I&quot;mNumberMarkers&quot;I&quot;mMarkers&quot;[1{AudioFileMarker=&quot;mFramePosition&quot;d&quot;mName&quot;^{__CFString}&quot;mMarkerID&quot;i&quot;mSMPTETime&quot;{AudioFile_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;C&quot;mSeconds&quot;C&quot;mFrames&quot;C&quot;mSubFrameSampleOffset&quot;I}&quot;mType&quot;I&quot;mReserved&quot;S&quot;mChannel&quot;S}]}]}'>
<field declared_type64='UInt32' name='mSMPTE_TimeType' type64='I'/>
<field declared_type64='UInt32' name='mNumberRegions' type64='I'/>
<field declared_type64='AudioFileRegion*' name='mRegions' type64='[1{AudioFileRegion=&quot;mRegionID&quot;I&quot;mName&quot;^{__CFString}&quot;mFlags&quot;I&quot;mNumberMarkers&quot;I&quot;mMarkers&quot;[1{AudioFileMarker=&quot;mFramePosition&quot;d&quot;mName&quot;^{__CFString}&quot;mMarkerID&quot;i&quot;mSMPTETime&quot;{AudioFile_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;C&quot;mSeconds&quot;C&quot;mFrames&quot;C&quot;mSubFrameSampleOffset&quot;I}&quot;mType&quot;I&quot;mReserved&quot;S&quot;mChannel&quot;S}]}]'/>
</struct>
<struct name='AudioFileTypeAndFormatID' type64='{AudioFileTypeAndFormatID=&quot;mFileType&quot;I&quot;mFormatID&quot;I}'>
<field declared_type64='AudioFileTypeID' name='mFileType' type64='I'/>
<field declared_type64='UInt32' name='mFormatID' type64='I'/>
</struct>
<struct name='AudioFile_SMPTE_Time' type64='{AudioFile_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;C&quot;mSeconds&quot;C&quot;mFrames&quot;C&quot;mSubFrameSampleOffset&quot;I}'>
<field declared_type64='SInt8' name='mHours' type64='c'/>
<field declared_type64='UInt8' name='mMinutes' type64='C'/>
<field declared_type64='UInt8' name='mSeconds' type64='C'/>
<field declared_type64='UInt8' name='mFrames' type64='C'/>
<field declared_type64='UInt32' name='mSubFrameSampleOffset' type64='I'/>
</struct>
<struct name='AudioFormatInfo' type64='{AudioFormatInfo=&quot;mASBD&quot;{AudioStreamBasicDescription=&quot;mSampleRate&quot;d&quot;mFormatID&quot;I&quot;mFormatFlags&quot;I&quot;mBytesPerPacket&quot;I&quot;mFramesPerPacket&quot;I&quot;mBytesPerFrame&quot;I&quot;mChannelsPerFrame&quot;I&quot;mBitsPerChannel&quot;I&quot;mReserved&quot;I}&quot;mMagicCookie&quot;^v&quot;mMagicCookieSize&quot;I}'>
<field declared_type64='AudioStreamBasicDescription' name='mASBD' type64='{AudioStreamBasicDescription=&quot;mSampleRate&quot;d&quot;mFormatID&quot;I&quot;mFormatFlags&quot;I&quot;mBytesPerPacket&quot;I&quot;mFramesPerPacket&quot;I&quot;mBytesPerFrame&quot;I&quot;mChannelsPerFrame&quot;I&quot;mBitsPerChannel&quot;I&quot;mReserved&quot;I}'/>
<field const='true' declared_type64='void * _Nonnull' name='mMagicCookie' type64='^v'/>
<field declared_type64='UInt32' name='mMagicCookieSize' type64='I'/>
</struct>
<struct name='AudioFramePacketTranslation' type64='{AudioFramePacketTranslation=&quot;mFrame&quot;q&quot;mPacket&quot;q&quot;mFrameOffsetInPacket&quot;I}'>
<field declared_type64='SInt64' name='mFrame' type64='q'/>
<field declared_type64='SInt64' name='mPacket' type64='q'/>
<field declared_type64='UInt32' name='mFrameOffsetInPacket' type64='I'/>
</struct>
<struct name='AudioIndependentPacketTranslation' type64='{AudioIndependentPacketTranslation=&quot;mPacket&quot;q&quot;mIndependentlyDecodablePacket&quot;q}'>
<field declared_type64='SInt64' name='mPacket' type64='q'/>
<field declared_type64='SInt64' name='mIndependentlyDecodablePacket' type64='q'/>
</struct>
<struct name='AudioOutputUnitMIDICallbacks' type64='{AudioOutputUnitMIDICallbacks=&quot;userData&quot;^v&quot;MIDIEventProc&quot;^?&quot;MIDISysExProc&quot;^?}'>
<field declared_type64='void * _Nullable' name='userData' type64='^v'/>
<field declared_type64='void (* _Nonnull)(void * _Nullable, UInt32, UInt32, UInt32, UInt32)' function_pointer='true' name='MIDIEventProc' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (* _Nonnull)(void * _Nullable, UInt8 * _Nonnull, UInt32)' function_pointer='true' name='MIDISysExProc' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg const='true' declared_type64='UInt8 * _Nonnull' type64='*'/>
<arg declared_type64='UInt32' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='AudioOutputUnitStartAtTimeParams' type64='{AudioOutputUnitStartAtTimeParams=&quot;mTimestamp&quot;{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}&quot;mFlags&quot;I}'>
<field declared_type64='AudioTimeStamp' name='mTimestamp' type64='{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}'/>
<field declared_type64='UInt32' name='mFlags' type64='I'/>
</struct>
<struct name='AudioPacketDependencyInfoTranslation' type64='{AudioPacketDependencyInfoTranslation=&quot;mPacket&quot;q&quot;mIsIndependentlyDecodable&quot;I&quot;mNumberPrerollPackets&quot;I}'>
<field declared_type64='SInt64' name='mPacket' type64='q'/>
<field declared_type64='UInt32' name='mIsIndependentlyDecodable' type64='I'/>
<field declared_type64='UInt32' name='mNumberPrerollPackets' type64='I'/>
</struct>
<struct name='AudioPacketRangeByteCountTranslation' type64='{AudioPacketRangeByteCountTranslation=&quot;mPacket&quot;q&quot;mPacketCount&quot;q&quot;mByteCountUpperBound&quot;q}'>
<field declared_type64='SInt64' name='mPacket' type64='q'/>
<field declared_type64='SInt64' name='mPacketCount' type64='q'/>
<field declared_type64='SInt64' name='mByteCountUpperBound' type64='q'/>
</struct>
<struct name='AudioPacketRollDistanceTranslation' type64='{AudioPacketRollDistanceTranslation=&quot;mPacket&quot;q&quot;mRollDistance&quot;q}'>
<field declared_type64='SInt64' name='mPacket' type64='q'/>
<field declared_type64='SInt64' name='mRollDistance' type64='q'/>
</struct>
<struct name='AudioPanningInfo' type64='{AudioPanningInfo=&quot;mPanningMode&quot;I&quot;mCoordinateFlags&quot;I&quot;mCoordinates&quot;[3f]&quot;mGainScale&quot;f&quot;mOutputChannelMap&quot;^{AudioChannelLayout}}'>
<field declared_type64='AudioPanningMode' name='mPanningMode' type64='I'/>
<field declared_type64='UInt32' name='mCoordinateFlags' type64='I'/>
<field declared_type64='Float32*' name='mCoordinates' type64='[3f]'/>
<field declared_type64='Float32' name='mGainScale' type64='f'/>
<field const='true' declared_type64='AudioChannelLayout * _Nonnull' name='mOutputChannelMap' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
</struct>
<struct name='AudioQueueBuffer' type64='{AudioQueueBuffer=&quot;mAudioDataBytesCapacity&quot;I&quot;mAudioData&quot;^v&quot;mAudioDataByteSize&quot;I&quot;mUserData&quot;^v&quot;mPacketDescriptionCapacity&quot;I&quot;mPacketDescriptions&quot;^{AudioStreamPacketDescription}&quot;mPacketDescriptionCount&quot;I}'>
<field const='true' declared_type64='UInt32' name='mAudioDataBytesCapacity' type64='I'/>
<field const='true' declared_type64='void * _Nonnull' name='mAudioData' type64='^v'/>
<field declared_type64='UInt32' name='mAudioDataByteSize' type64='I'/>
<field declared_type64='void * _Nullable' name='mUserData' type64='^v'/>
<field const='true' declared_type64='UInt32' name='mPacketDescriptionCapacity' type64='I'/>
<field const='true' declared_type64='AudioStreamPacketDescription * _Nullable' name='mPacketDescriptions' type64='^{AudioStreamPacketDescription=qII}'/>
<field declared_type64='UInt32' name='mPacketDescriptionCount' type64='I'/>
</struct>
<struct name='AudioQueueChannelAssignment' type64='{AudioQueueChannelAssignment=&quot;mDeviceUID&quot;^{__CFString}&quot;mChannelNumber&quot;I}'>
<field declared_type64='CFStringRef _Nonnull' name='mDeviceUID' type64='^{__CFString=}'/>
<field declared_type64='UInt32' name='mChannelNumber' type64='I'/>
</struct>
<struct name='AudioQueueLevelMeterState' type64='{AudioQueueLevelMeterState=&quot;mAveragePower&quot;f&quot;mPeakPower&quot;f}'>
<field declared_type64='Float32' name='mAveragePower' type64='f'/>
<field declared_type64='Float32' name='mPeakPower' type64='f'/>
</struct>
<struct name='AudioQueueParameterEvent' type64='{AudioQueueParameterEvent=&quot;mID&quot;I&quot;mValue&quot;f}'>
<field declared_type64='AudioQueueParameterID' name='mID' type64='I'/>
<field declared_type64='AudioQueueParameterValue' name='mValue' type64='f'/>
</struct>
<struct name='AudioUnitConnection' type64='{AudioUnitConnection=&quot;sourceAudioUnit&quot;^{OpaqueAudioComponentInstance}&quot;sourceOutputNumber&quot;I&quot;destInputNumber&quot;I}'>
<field declared_type64='AudioUnit _Nullable' name='sourceAudioUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<field declared_type64='UInt32' name='sourceOutputNumber' type64='I'/>
<field declared_type64='UInt32' name='destInputNumber' type64='I'/>
</struct>
<struct name='AudioUnitExternalBuffer' type64='{AudioUnitExternalBuffer=&quot;buffer&quot;*&quot;size&quot;I}'>
<field declared_type64='Byte * _Nonnull' name='buffer' type64='*'/>
<field declared_type64='UInt32' name='size' type64='I'/>
</struct>
<struct name='AudioUnitFrequencyResponseBin' type64='{AudioUnitFrequencyResponseBin=&quot;mFrequency&quot;d&quot;mMagnitude&quot;d}'>
<field declared_type64='Float64' name='mFrequency' type64='d'/>
<field declared_type64='Float64' name='mMagnitude' type64='d'/>
</struct>
<struct name='AudioUnitMeterClipping' type64='{AudioUnitMeterClipping=&quot;peakValueSinceLastCall&quot;f&quot;sawInfinity&quot;B&quot;sawNotANumber&quot;B}'>
<field declared_type64='Float32' name='peakValueSinceLastCall' type64='f'/>
<field declared_type64='Boolean' name='sawInfinity' type64='B'/>
<field declared_type64='Boolean' name='sawNotANumber' type64='B'/>
</struct>
<struct name='AudioUnitNodeConnection' type64='{AudioUnitNodeConnection=&quot;sourceNode&quot;i&quot;sourceOutputNumber&quot;I&quot;destNode&quot;i&quot;destInputNumber&quot;I}'>
<field declared_type64='AUNode' name='sourceNode' type64='i'/>
<field declared_type64='UInt32' name='sourceOutputNumber' type64='I'/>
<field declared_type64='AUNode' name='destNode' type64='i'/>
<field declared_type64='UInt32' name='destInputNumber' type64='I'/>
</struct>
<struct name='AudioUnitParameter' type64='{AudioUnitParameter=&quot;mAudioUnit&quot;^{OpaqueAudioComponentInstance}&quot;mParameterID&quot;I&quot;mScope&quot;I&quot;mElement&quot;I}'>
<field declared_type64='AudioUnit _Nonnull' name='mAudioUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<field declared_type64='AudioUnitParameterID' name='mParameterID' type64='I'/>
<field declared_type64='AudioUnitScope' name='mScope' type64='I'/>
<field declared_type64='AudioUnitElement' name='mElement' type64='I'/>
</struct>
<struct name='AudioUnitParameterEvent' type64='{AudioUnitParameterEvent=&quot;scope&quot;I&quot;element&quot;I&quot;parameter&quot;I&quot;eventType&quot;I&quot;eventValues&quot;(?=&quot;ramp&quot;{?=&quot;startBufferOffset&quot;i&quot;durationInFrames&quot;I&quot;startValue&quot;f&quot;endValue&quot;f}&quot;immediate&quot;{?=&quot;bufferOffset&quot;I&quot;value&quot;f})}'>
<field declared_type64='AudioUnitScope' name='scope' type64='I'/>
<field declared_type64='AudioUnitElement' name='element' type64='I'/>
<field declared_type64='AudioUnitParameterID' name='parameter' type64='I'/>
<field declared_type64='AUParameterEventType' name='eventType' type64='I'/>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator14.3.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AUComponent.h:938:2)' name='eventValues' type64='(?=&quot;ramp&quot;{?=&quot;startBufferOffset&quot;i&quot;durationInFrames&quot;I&quot;startValue&quot;f&quot;endValue&quot;f}&quot;immediate&quot;{?=&quot;bufferOffset&quot;I&quot;value&quot;f})'/>
</struct>
<struct name='AudioUnitParameterHistoryInfo' type64='{AudioUnitParameterHistoryInfo=&quot;updatesPerSecond&quot;f&quot;historyDurationInSeconds&quot;f}'>
<field declared_type64='Float32' name='updatesPerSecond' type64='f'/>
<field declared_type64='Float32' name='historyDurationInSeconds' type64='f'/>
</struct>
<struct name='AudioUnitParameterIDName' type64='{AudioUnitParameterNameInfo=&quot;inID&quot;I&quot;inDesiredLength&quot;i&quot;outName&quot;^{__CFString}}'>
<field declared_type64='AudioUnitParameterID' name='inID' type64='I'/>
<field declared_type64='SInt32' name='inDesiredLength' type64='i'/>
<field declared_type64='CFStringRef _Nullable' name='outName' type64='^{__CFString=}'/>
</struct>
<struct name='AudioUnitParameterInfo' type64='{AudioUnitParameterInfo=&quot;name&quot;[52c]&quot;unitName&quot;^{__CFString}&quot;clumpID&quot;I&quot;cfNameString&quot;^{__CFString}&quot;unit&quot;I&quot;minValue&quot;f&quot;maxValue&quot;f&quot;defaultValue&quot;f&quot;flags&quot;I}'>
<field declared_type64='char*' name='name' type64='[52c]'/>
<field declared_type64='CFStringRef _Nullable' name='unitName' type64='^{__CFString=}'/>
<field declared_type64='UInt32' name='clumpID' type64='I'/>
<field declared_type64='CFStringRef _Nullable' name='cfNameString' type64='^{__CFString=}'/>
<field declared_type64='AudioUnitParameterUnit' name='unit' type64='I'/>
<field declared_type64='AudioUnitParameterValue' name='minValue' type64='f'/>
<field declared_type64='AudioUnitParameterValue' name='maxValue' type64='f'/>
<field declared_type64='AudioUnitParameterValue' name='defaultValue' type64='f'/>
<field declared_type64='AudioUnitParameterOptions' name='flags' type64='I'/>
</struct>
<struct name='AudioUnitParameterNameInfo' type64='{AudioUnitParameterNameInfo=&quot;inID&quot;I&quot;inDesiredLength&quot;i&quot;outName&quot;^{__CFString}}'>
<field declared_type64='AudioUnitParameterID' name='inID' type64='I'/>
<field declared_type64='SInt32' name='inDesiredLength' type64='i'/>
<field declared_type64='CFStringRef _Nullable' name='outName' type64='^{__CFString=}'/>
</struct>
<struct name='AudioUnitParameterStringFromValue' type64='{AudioUnitParameterStringFromValue=&quot;inParamID&quot;I&quot;inValue&quot;^f&quot;outString&quot;^{__CFString}}'>
<field declared_type64='AudioUnitParameterID' name='inParamID' type64='I'/>
<field const='true' declared_type64='AudioUnitParameterValue * _Nonnull' name='inValue' type64='^f'/>
<field declared_type64='CFStringRef _Nullable' name='outString' type64='^{__CFString=}'/>
</struct>
<struct name='AudioUnitParameterValueFromString' type64='{AudioUnitParameterValueFromString=&quot;inParamID&quot;I&quot;inString&quot;^{__CFString}&quot;outValue&quot;f}'>
<field declared_type64='AudioUnitParameterID' name='inParamID' type64='I'/>
<field declared_type64='CFStringRef _Nonnull' name='inString' type64='^{__CFString=}'/>
<field declared_type64='AudioUnitParameterValue' name='outValue' type64='f'/>
</struct>
<struct name='AudioUnitProperty' type64='{AudioUnitProperty=&quot;mAudioUnit&quot;^{OpaqueAudioComponentInstance}&quot;mPropertyID&quot;I&quot;mScope&quot;I&quot;mElement&quot;I}'>
<field declared_type64='AudioUnit _Nonnull' name='mAudioUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<field declared_type64='AudioUnitPropertyID' name='mPropertyID' type64='I'/>
<field declared_type64='AudioUnitScope' name='mScope' type64='I'/>
<field declared_type64='AudioUnitElement' name='mElement' type64='I'/>
</struct>
<struct name='AudioUnitRenderContext' type64='{AudioUnitRenderContext=&quot;workgroup&quot;@&quot;OS_os_workgroup&quot;&quot;reserved&quot;[6I]}'>
<field declared_type64='os_workgroup_t _Nullable' name='workgroup' type64='@&quot;OS_os_workgroup&quot;'/>
<field declared_type64='uint32_t*' name='reserved' type64='[6I]'/>
</struct>
<struct name='CABarBeatTime' type64='{CABarBeatTime=&quot;bar&quot;i&quot;beat&quot;S&quot;subbeat&quot;S&quot;subbeatDivisor&quot;S&quot;reserved&quot;S}'>
<field declared_type64='SInt32' name='bar' type64='i'/>
<field declared_type64='UInt16' name='beat' type64='S'/>
<field declared_type64='UInt16' name='subbeat' type64='S'/>
<field declared_type64='UInt16' name='subbeatDivisor' type64='S'/>
<field declared_type64='UInt16' name='reserved' type64='S'/>
</struct>
<struct name='CAFAudioDescription' type64='{CAFAudioDescription=&quot;mSampleRate&quot;d&quot;mFormatID&quot;I&quot;mFormatFlags&quot;I&quot;mBytesPerPacket&quot;I&quot;mFramesPerPacket&quot;I&quot;mChannelsPerFrame&quot;I&quot;mBitsPerChannel&quot;I}'>
<field declared_type64='Float64' name='mSampleRate' type64='d'/>
<field declared_type64='UInt32' name='mFormatID' type64='I'/>
<field declared_type64='CAFFormatFlags' name='mFormatFlags' type64='I'/>
<field declared_type64='UInt32' name='mBytesPerPacket' type64='I'/>
<field declared_type64='UInt32' name='mFramesPerPacket' type64='I'/>
<field declared_type64='UInt32' name='mChannelsPerFrame' type64='I'/>
<field declared_type64='UInt32' name='mBitsPerChannel' type64='I'/>
</struct>
<struct name='CAFAudioFormatListItem' type64='{CAFAudioFormatListItem=&quot;mFormat&quot;{CAFAudioDescription=&quot;mSampleRate&quot;d&quot;mFormatID&quot;I&quot;mFormatFlags&quot;I&quot;mBytesPerPacket&quot;I&quot;mFramesPerPacket&quot;I&quot;mChannelsPerFrame&quot;I&quot;mBitsPerChannel&quot;I}&quot;mChannelLayoutTag&quot;I}'>
<field declared_type64='CAFAudioDescription' name='mFormat' type64='{CAFAudioDescription=&quot;mSampleRate&quot;d&quot;mFormatID&quot;I&quot;mFormatFlags&quot;I&quot;mBytesPerPacket&quot;I&quot;mFramesPerPacket&quot;I&quot;mChannelsPerFrame&quot;I&quot;mBitsPerChannel&quot;I}'/>
<field declared_type64='UInt32' name='mChannelLayoutTag' type64='I'/>
</struct>
<struct name='CAFChunkHeader' type64='{CAFChunkHeader=&quot;mChunkType&quot;I&quot;mChunkSize&quot;q}'>
<field declared_type64='UInt32' name='mChunkType' type64='I'/>
<field declared_type64='SInt64' name='mChunkSize' type64='q'/>
</struct>
<struct name='CAFDataChunk' type64='{CAFDataChunk=&quot;mEditCount&quot;I&quot;mData&quot;[1C]}'>
<field declared_type64='UInt32' name='mEditCount' type64='I'/>
<field declared_type64='UInt8*' name='mData' type64='[1C]'/>
</struct>
<struct name='CAFFileHeader' type64='{CAFFileHeader=&quot;mFileType&quot;I&quot;mFileVersion&quot;S&quot;mFileFlags&quot;S}'>
<field declared_type64='UInt32' name='mFileType' type64='I'/>
<field declared_type64='UInt16' name='mFileVersion' type64='S'/>
<field declared_type64='UInt16' name='mFileFlags' type64='S'/>
</struct>
<struct name='CAFInfoStrings' type64='{CAFInfoStrings=&quot;mNumEntries&quot;I}'>
<field declared_type64='UInt32' name='mNumEntries' type64='I'/>
</struct>
<struct name='CAFInstrumentChunk' type64='{CAFInstrumentChunk=&quot;mBaseNote&quot;f&quot;mMIDILowNote&quot;C&quot;mMIDIHighNote&quot;C&quot;mMIDILowVelocity&quot;C&quot;mMIDIHighVelocity&quot;C&quot;mdBGain&quot;f&quot;mStartRegionID&quot;I&quot;mSustainRegionID&quot;I&quot;mReleaseRegionID&quot;I&quot;mInstrumentID&quot;I}'>
<field declared_type64='Float32' name='mBaseNote' type64='f'/>
<field declared_type64='UInt8' name='mMIDILowNote' type64='C'/>
<field declared_type64='UInt8' name='mMIDIHighNote' type64='C'/>
<field declared_type64='UInt8' name='mMIDILowVelocity' type64='C'/>
<field declared_type64='UInt8' name='mMIDIHighVelocity' type64='C'/>
<field declared_type64='Float32' name='mdBGain' type64='f'/>
<field declared_type64='UInt32' name='mStartRegionID' type64='I'/>
<field declared_type64='UInt32' name='mSustainRegionID' type64='I'/>
<field declared_type64='UInt32' name='mReleaseRegionID' type64='I'/>
<field declared_type64='UInt32' name='mInstrumentID' type64='I'/>
</struct>
<struct name='CAFMarker' type64='{CAFMarker=&quot;mType&quot;I&quot;mFramePosition&quot;d&quot;mMarkerID&quot;I&quot;mSMPTETime&quot;{CAF_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;c&quot;mSeconds&quot;c&quot;mFrames&quot;c&quot;mSubFrameSampleOffset&quot;I}&quot;mChannel&quot;I}'>
<field declared_type64='UInt32' name='mType' type64='I'/>
<field declared_type64='Float64' name='mFramePosition' type64='d'/>
<field declared_type64='UInt32' name='mMarkerID' type64='I'/>
<field declared_type64='CAF_SMPTE_Time' name='mSMPTETime' type64='{CAF_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;c&quot;mSeconds&quot;c&quot;mFrames&quot;c&quot;mSubFrameSampleOffset&quot;I}'/>
<field declared_type64='UInt32' name='mChannel' type64='I'/>
</struct>
<struct name='CAFMarkerChunk' type64='{CAFMarkerChunk=&quot;mSMPTE_TimeType&quot;I&quot;mNumberMarkers&quot;I&quot;mMarkers&quot;[1{CAFMarker=&quot;mType&quot;I&quot;mFramePosition&quot;d&quot;mMarkerID&quot;I&quot;mSMPTETime&quot;{CAF_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;c&quot;mSeconds&quot;c&quot;mFrames&quot;c&quot;mSubFrameSampleOffset&quot;I}&quot;mChannel&quot;I}]}'>
<field declared_type64='UInt32' name='mSMPTE_TimeType' type64='I'/>
<field declared_type64='UInt32' name='mNumberMarkers' type64='I'/>
<field declared_type64='CAFMarker*' name='mMarkers' type64='[1{CAFMarker=&quot;mType&quot;I&quot;mFramePosition&quot;d&quot;mMarkerID&quot;I&quot;mSMPTETime&quot;{CAF_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;c&quot;mSeconds&quot;c&quot;mFrames&quot;c&quot;mSubFrameSampleOffset&quot;I}&quot;mChannel&quot;I}]'/>
</struct>
<struct name='CAFOverviewChunk' type64='{CAFOverviewChunk=&quot;mEditCount&quot;I&quot;mNumFramesPerOVWSample&quot;I&quot;mData&quot;[1{CAFOverviewSample=&quot;mMinValue&quot;s&quot;mMaxValue&quot;s}]}'>
<field declared_type64='UInt32' name='mEditCount' type64='I'/>
<field declared_type64='UInt32' name='mNumFramesPerOVWSample' type64='I'/>
<field declared_type64='CAFOverviewSample*' name='mData' type64='[1{CAFOverviewSample=&quot;mMinValue&quot;s&quot;mMaxValue&quot;s}]'/>
</struct>
<struct name='CAFOverviewSample' type64='{CAFOverviewSample=&quot;mMinValue&quot;s&quot;mMaxValue&quot;s}'>
<field declared_type64='SInt16' name='mMinValue' type64='s'/>
<field declared_type64='SInt16' name='mMaxValue' type64='s'/>
</struct>
<struct name='CAFPacketTableHeader' type64='{CAFPacketTableHeader=&quot;mNumberPackets&quot;q&quot;mNumberValidFrames&quot;q&quot;mPrimingFrames&quot;i&quot;mRemainderFrames&quot;i&quot;mPacketDescriptions&quot;[1C]}'>
<field declared_type64='SInt64' name='mNumberPackets' type64='q'/>
<field declared_type64='SInt64' name='mNumberValidFrames' type64='q'/>
<field declared_type64='SInt32' name='mPrimingFrames' type64='i'/>
<field declared_type64='SInt32' name='mRemainderFrames' type64='i'/>
<field declared_type64='UInt8*' name='mPacketDescriptions' type64='[1C]'/>
</struct>
<struct name='CAFPeakChunk' type64='{CAFPeakChunk=&quot;mEditCount&quot;I&quot;mPeaks&quot;[1{CAFPositionPeak=&quot;mValue&quot;f&quot;mFrameNumber&quot;Q}]}'>
<field declared_type64='UInt32' name='mEditCount' type64='I'/>
<field declared_type64='CAFPositionPeak*' name='mPeaks' type64='[1{CAFPositionPeak=&quot;mValue&quot;f&quot;mFrameNumber&quot;Q}]'/>
</struct>
<struct name='CAFPositionPeak' type64='{CAFPositionPeak=&quot;mValue&quot;f&quot;mFrameNumber&quot;Q}'>
<field declared_type64='Float32' name='mValue' type64='f'/>
<field declared_type64='UInt64' name='mFrameNumber' type64='Q'/>
</struct>
<struct name='CAFRegion' type64='{CAFRegion=&quot;mRegionID&quot;I&quot;mFlags&quot;I&quot;mNumberMarkers&quot;I&quot;mMarkers&quot;[1{CAFMarker=&quot;mType&quot;I&quot;mFramePosition&quot;d&quot;mMarkerID&quot;I&quot;mSMPTETime&quot;{CAF_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;c&quot;mSeconds&quot;c&quot;mFrames&quot;c&quot;mSubFrameSampleOffset&quot;I}&quot;mChannel&quot;I}]}'>
<field declared_type64='UInt32' name='mRegionID' type64='I'/>
<field declared_type64='CAFRegionFlags' name='mFlags' type64='I'/>
<field declared_type64='UInt32' name='mNumberMarkers' type64='I'/>
<field declared_type64='CAFMarker*' name='mMarkers' type64='[1{CAFMarker=&quot;mType&quot;I&quot;mFramePosition&quot;d&quot;mMarkerID&quot;I&quot;mSMPTETime&quot;{CAF_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;c&quot;mSeconds&quot;c&quot;mFrames&quot;c&quot;mSubFrameSampleOffset&quot;I}&quot;mChannel&quot;I}]'/>
</struct>
<struct name='CAFRegionChunk' type64='{CAFRegionChunk=&quot;mSMPTE_TimeType&quot;I&quot;mNumberRegions&quot;I&quot;mRegions&quot;[1{CAFRegion=&quot;mRegionID&quot;I&quot;mFlags&quot;I&quot;mNumberMarkers&quot;I&quot;mMarkers&quot;[1{CAFMarker=&quot;mType&quot;I&quot;mFramePosition&quot;d&quot;mMarkerID&quot;I&quot;mSMPTETime&quot;{CAF_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;c&quot;mSeconds&quot;c&quot;mFrames&quot;c&quot;mSubFrameSampleOffset&quot;I}&quot;mChannel&quot;I}]}]}'>
<field declared_type64='UInt32' name='mSMPTE_TimeType' type64='I'/>
<field declared_type64='UInt32' name='mNumberRegions' type64='I'/>
<field declared_type64='CAFRegion*' name='mRegions' type64='[1{CAFRegion=&quot;mRegionID&quot;I&quot;mFlags&quot;I&quot;mNumberMarkers&quot;I&quot;mMarkers&quot;[1{CAFMarker=&quot;mType&quot;I&quot;mFramePosition&quot;d&quot;mMarkerID&quot;I&quot;mSMPTETime&quot;{CAF_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;c&quot;mSeconds&quot;c&quot;mFrames&quot;c&quot;mSubFrameSampleOffset&quot;I}&quot;mChannel&quot;I}]}]'/>
</struct>
<struct name='CAFStringID' type64='{CAFStringID=&quot;mStringID&quot;I&quot;mStringStartByteOffset&quot;q}'>
<field declared_type64='UInt32' name='mStringID' type64='I'/>
<field declared_type64='SInt64' name='mStringStartByteOffset' type64='q'/>
</struct>
<struct name='CAFStrings' type64='{CAFStrings=&quot;mNumEntries&quot;I&quot;mStringsIDs&quot;[1{CAFStringID=&quot;mStringID&quot;I&quot;mStringStartByteOffset&quot;q}]}'>
<field declared_type64='UInt32' name='mNumEntries' type64='I'/>
<field declared_type64='CAFStringID*' name='mStringsIDs' type64='[1{CAFStringID=&quot;mStringID&quot;I&quot;mStringStartByteOffset&quot;q}]'/>
</struct>
<struct name='CAFUMIDChunk' type64='{CAFUMIDChunk=&quot;mBytes&quot;[64C]}'>
<field declared_type64='UInt8*' name='mBytes' type64='[64C]'/>
</struct>
<struct name='CAF_SMPTE_Time' type64='{CAF_SMPTE_Time=&quot;mHours&quot;c&quot;mMinutes&quot;c&quot;mSeconds&quot;c&quot;mFrames&quot;c&quot;mSubFrameSampleOffset&quot;I}'>
<field declared_type64='SInt8' name='mHours' type64='c'/>
<field declared_type64='SInt8' name='mMinutes' type64='c'/>
<field declared_type64='SInt8' name='mSeconds' type64='c'/>
<field declared_type64='SInt8' name='mFrames' type64='c'/>
<field declared_type64='UInt32' name='mSubFrameSampleOffset' type64='I'/>
</struct>
<struct name='CAF_UUID_ChunkHeader' type64='{CAF_UUID_ChunkHeader=&quot;mHeader&quot;{CAFChunkHeader=&quot;mChunkType&quot;I&quot;mChunkSize&quot;q}&quot;mUUID&quot;[16C]}'>
<field declared_type64='CAFChunkHeader' name='mHeader' type64='{CAFChunkHeader=&quot;mChunkType&quot;I&quot;mChunkSize&quot;q}'/>
<field declared_type64='UInt8*' name='mUUID' type64='[16C]'/>
</struct>
<struct name='ExtendedAudioFormatInfo' type64='{ExtendedAudioFormatInfo=&quot;mASBD&quot;{AudioStreamBasicDescription=&quot;mSampleRate&quot;d&quot;mFormatID&quot;I&quot;mFormatFlags&quot;I&quot;mBytesPerPacket&quot;I&quot;mFramesPerPacket&quot;I&quot;mBytesPerFrame&quot;I&quot;mChannelsPerFrame&quot;I&quot;mBitsPerChannel&quot;I&quot;mReserved&quot;I}&quot;mMagicCookie&quot;^v&quot;mMagicCookieSize&quot;I&quot;mClassDescription&quot;{AudioClassDescription=&quot;mType&quot;I&quot;mSubType&quot;I&quot;mManufacturer&quot;I}}'>
<field declared_type64='AudioStreamBasicDescription' name='mASBD' type64='{AudioStreamBasicDescription=&quot;mSampleRate&quot;d&quot;mFormatID&quot;I&quot;mFormatFlags&quot;I&quot;mBytesPerPacket&quot;I&quot;mFramesPerPacket&quot;I&quot;mBytesPerFrame&quot;I&quot;mChannelsPerFrame&quot;I&quot;mBitsPerChannel&quot;I&quot;mReserved&quot;I}'/>
<field const='true' declared_type64='void * _Nullable' name='mMagicCookie' type64='^v'/>
<field declared_type64='UInt32' name='mMagicCookieSize' type64='I'/>
<field declared_type64='AudioClassDescription' name='mClassDescription' type64='{AudioClassDescription=&quot;mType&quot;I&quot;mSubType&quot;I&quot;mManufacturer&quot;I}'/>
</struct>
<struct name='ExtendedNoteOnEvent' type64='{ExtendedNoteOnEvent=&quot;instrumentID&quot;I&quot;groupID&quot;I&quot;duration&quot;f&quot;extendedParams&quot;{MusicDeviceNoteParams=&quot;argCount&quot;I&quot;mPitch&quot;f&quot;mVelocity&quot;f&quot;mControls&quot;[1{NoteParamsControlValue=&quot;mID&quot;I&quot;mValue&quot;f}]}}'>
<field declared_type64='MusicDeviceInstrumentID' name='instrumentID' type64='I'/>
<field declared_type64='MusicDeviceGroupID' name='groupID' type64='I'/>
<field declared_type64='Float32' name='duration' type64='f'/>
<field declared_type64='MusicDeviceNoteParams' name='extendedParams' type64='{MusicDeviceNoteParams=&quot;argCount&quot;I&quot;mPitch&quot;f&quot;mVelocity&quot;f&quot;mControls&quot;[1{NoteParamsControlValue=&quot;mID&quot;I&quot;mValue&quot;f}]}'/>
</struct>
<struct name='ExtendedTempoEvent' type64='{ExtendedTempoEvent=&quot;bpm&quot;d}'>
<field declared_type64='Float64' name='bpm' type64='d'/>
</struct>
<struct name='HostCallbackInfo' type64='{HostCallbackInfo=&quot;hostUserData&quot;^v&quot;beatAndTempoProc&quot;^?&quot;musicalTimeLocationProc&quot;^?&quot;transportStateProc&quot;^?&quot;transportStateProc2&quot;^?}'>
<field declared_type64='void * _Nullable' name='hostUserData' type64='^v'/>
<field declared_type64='HostCallback_GetBeatAndTempo _Nullable' function_pointer='true' name='beatAndTempoProc' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='Float64 * _Nullable' type64='^d'/>
<arg declared_type64='Float64 * _Nullable' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='HostCallback_GetMusicalTimeLocation _Nullable' function_pointer='true' name='musicalTimeLocationProc' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='UInt32 * _Nullable' type64='^I'/>
<arg declared_type64='Float32 * _Nullable' type64='^f'/>
<arg declared_type64='UInt32 * _Nullable' type64='^I'/>
<arg declared_type64='Float64 * _Nullable' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='HostCallback_GetTransportState _Nullable' function_pointer='true' name='transportStateProc' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='Boolean * _Nullable' type64='^B'/>
<arg declared_type64='Boolean * _Nullable' type64='^B'/>
<arg declared_type64='Float64 * _Nullable' type64='^d'/>
<arg declared_type64='Boolean * _Nullable' type64='^B'/>
<arg declared_type64='Float64 * _Nullable' type64='^d'/>
<arg declared_type64='Float64 * _Nullable' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='HostCallback_GetTransportState2 _Nullable' function_pointer='true' name='transportStateProc2' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='Boolean * _Nullable' type64='^B'/>
<arg declared_type64='Boolean * _Nullable' type64='^B'/>
<arg declared_type64='Boolean * _Nullable' type64='^B'/>
<arg declared_type64='Float64 * _Nullable' type64='^d'/>
<arg declared_type64='Boolean * _Nullable' type64='^B'/>
<arg declared_type64='Float64 * _Nullable' type64='^d'/>
<arg declared_type64='Float64 * _Nullable' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
</struct>
<struct name='MIDIChannelMessage' type64='{MIDIChannelMessage=&quot;status&quot;C&quot;data1&quot;C&quot;data2&quot;C&quot;reserved&quot;C}'>
<field declared_type64='UInt8' name='status' type64='C'/>
<field declared_type64='UInt8' name='data1' type64='C'/>
<field declared_type64='UInt8' name='data2' type64='C'/>
<field declared_type64='UInt8' name='reserved' type64='C'/>
</struct>
<struct name='MIDIMetaEvent' type64='{MIDIMetaEvent=&quot;metaEventType&quot;C&quot;unused1&quot;C&quot;unused2&quot;C&quot;unused3&quot;C&quot;dataLength&quot;I&quot;data&quot;[1C]}'>
<field declared_type64='UInt8' name='metaEventType' type64='C'/>
<field declared_type64='UInt8' name='unused1' type64='C'/>
<field declared_type64='UInt8' name='unused2' type64='C'/>
<field declared_type64='UInt8' name='unused3' type64='C'/>
<field declared_type64='UInt32' name='dataLength' type64='I'/>
<field declared_type64='UInt8*' name='data' type64='[1C]'/>
</struct>
<struct name='MIDINoteMessage' type64='{MIDINoteMessage=&quot;channel&quot;C&quot;note&quot;C&quot;velocity&quot;C&quot;releaseVelocity&quot;C&quot;duration&quot;f}'>
<field declared_type64='UInt8' name='channel' type64='C'/>
<field declared_type64='UInt8' name='note' type64='C'/>
<field declared_type64='UInt8' name='velocity' type64='C'/>
<field declared_type64='UInt8' name='releaseVelocity' type64='C'/>
<field declared_type64='Float32' name='duration' type64='f'/>
</struct>
<struct name='MIDIRawData' type64='{MIDIRawData=&quot;length&quot;I&quot;data&quot;[1C]}'>
<field declared_type64='UInt32' name='length' type64='I'/>
<field declared_type64='UInt8*' name='data' type64='[1C]'/>
</struct>
<struct name='MagicCookieInfo' type64='{AudioCodecMagicCookieInfo=&quot;mMagicCookieSize&quot;I&quot;mMagicCookie&quot;^v}'>
<field declared_type64='UInt32' name='mMagicCookieSize' type64='I'/>
<field const='true' declared_type64='void * _Nullable' name='mMagicCookie' type64='^v'/>
</struct>
<struct name='MixerDistanceParams' type64='{MixerDistanceParams=&quot;mReferenceDistance&quot;f&quot;mMaxDistance&quot;f&quot;mMaxAttenuation&quot;f}'>
<field declared_type64='Float32' name='mReferenceDistance' type64='f'/>
<field declared_type64='Float32' name='mMaxDistance' type64='f'/>
<field declared_type64='Float32' name='mMaxAttenuation' type64='f'/>
</struct>
<struct name='MusicDeviceNoteParams' type64='{MusicDeviceNoteParams=&quot;argCount&quot;I&quot;mPitch&quot;f&quot;mVelocity&quot;f&quot;mControls&quot;[1{NoteParamsControlValue=&quot;mID&quot;I&quot;mValue&quot;f}]}'>
<field declared_type64='UInt32' name='argCount' type64='I'/>
<field declared_type64='Float32' name='mPitch' type64='f'/>
<field declared_type64='Float32' name='mVelocity' type64='f'/>
<field declared_type64='NoteParamsControlValue*' name='mControls' type64='[1{NoteParamsControlValue=&quot;mID&quot;I&quot;mValue&quot;f}]'/>
</struct>
<struct name='MusicDeviceStdNoteParams' type64='{MusicDeviceStdNoteParams=&quot;argCount&quot;I&quot;mPitch&quot;f&quot;mVelocity&quot;f}'>
<field declared_type64='UInt32' name='argCount' type64='I'/>
<field declared_type64='Float32' name='mPitch' type64='f'/>
<field declared_type64='Float32' name='mVelocity' type64='f'/>
</struct>
<struct name='MusicEventUserData' type64='{MusicEventUserData=&quot;length&quot;I&quot;data&quot;[1C]}'>
<field declared_type64='UInt32' name='length' type64='I'/>
<field declared_type64='UInt8*' name='data' type64='[1C]'/>
</struct>
<struct name='MusicTrackLoopInfo' type64='{MusicTrackLoopInfo=&quot;loopDuration&quot;d&quot;numberOfLoops&quot;i}'>
<field declared_type64='MusicTimeStamp' name='loopDuration' type64='d'/>
<field declared_type64='SInt32' name='numberOfLoops' type64='i'/>
</struct>
<struct name='NoteParamsControlValue' type64='{NoteParamsControlValue=&quot;mID&quot;I&quot;mValue&quot;f}'>
<field declared_type64='AudioUnitParameterID' name='mID' type64='I'/>
<field declared_type64='AudioUnitParameterValue' name='mValue' type64='f'/>
</struct>
<struct name='ParameterEvent' type64='{ParameterEvent=&quot;parameterID&quot;I&quot;scope&quot;I&quot;element&quot;I&quot;value&quot;f}'>
<field declared_type64='AudioUnitParameterID' name='parameterID' type64='I'/>
<field declared_type64='AudioUnitScope' name='scope' type64='I'/>
<field declared_type64='AudioUnitElement' name='element' type64='I'/>
<field declared_type64='AudioUnitParameterValue' name='value' type64='f'/>
</struct>
<struct name='ScheduledAudioFileRegion' type64='{ScheduledAudioFileRegion=&quot;mTimeStamp&quot;{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}&quot;mCompletionProc&quot;^?&quot;mCompletionProcUserData&quot;^v&quot;mAudioFile&quot;^{OpaqueAudioFileID}&quot;mLoopCount&quot;I&quot;mStartFrame&quot;q&quot;mFramesToPlay&quot;I}'>
<field declared_type64='AudioTimeStamp' name='mTimeStamp' type64='{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}'/>
<field declared_type64='ScheduledAudioFileRegionCompletionProc _Nullable' function_pointer='true' name='mCompletionProc' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='ScheduledAudioFileRegion * _Nonnull' type64='^{ScheduledAudioFileRegion={AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}^?^v^{OpaqueAudioFileID}IqI}'/>
<arg declared_type64='OSStatus' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void * _Nullable' name='mCompletionProcUserData' type64='^v'/>
<field declared_type64='struct OpaqueAudioFileID * _Nonnull' name='mAudioFile' type64='^{OpaqueAudioFileID=}'/>
<field declared_type64='UInt32' name='mLoopCount' type64='I'/>
<field declared_type64='SInt64' name='mStartFrame' type64='q'/>
<field declared_type64='UInt32' name='mFramesToPlay' type64='I'/>
</struct>
<struct name='ScheduledAudioSlice' type64='{ScheduledAudioSlice=&quot;mTimeStamp&quot;{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}&quot;mCompletionProc&quot;^?&quot;mCompletionProcUserData&quot;^v&quot;mFlags&quot;I&quot;mReserved&quot;I&quot;mReserved2&quot;^v&quot;mNumberFrames&quot;I&quot;mBufferList&quot;^{AudioBufferList}}'>
<field declared_type64='AudioTimeStamp' name='mTimeStamp' type64='{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}'/>
<field declared_type64='ScheduledAudioSliceCompletionProc _Nullable' function_pointer='true' name='mCompletionProc' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='ScheduledAudioSlice * _Nonnull' type64='^{ScheduledAudioSlice={AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}^?^vII^vI^{AudioBufferList}}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void * _Nonnull' name='mCompletionProcUserData' type64='^v'/>
<field declared_type64='AUScheduledAudioSliceFlags' name='mFlags' type64='I'/>
<field declared_type64='UInt32' name='mReserved' type64='I'/>
<field declared_type64='void * _Nullable' name='mReserved2' type64='^v'/>
<field declared_type64='UInt32' name='mNumberFrames' type64='I'/>
<field declared_type64='AudioBufferList * _Nonnull' name='mBufferList' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
</struct>
<opaque name='AUGraph' type64='^{OpaqueAUGraph=}'/>
<opaque name='AudioComponent' type64='^{OpaqueAudioComponent=}'/>
<opaque name='AudioComponentInstance' type64='^{OpaqueAudioComponentInstance=}'/>
<opaque name='AudioConverterRef' type64='^{OpaqueAudioConverter=}'/>
<opaque name='AudioFileID' type64='^{OpaqueAudioFileID=}'/>
<opaque name='AudioFileStreamID' type64='^{OpaqueAudioFileStreamID=}'/>
<opaque name='AudioQueueBufferRef' type64='^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}'/>
<opaque name='AudioQueueProcessingTapRef' type64='^{OpaqueAudioQueueProcessingTap=}'/>
<opaque name='AudioQueueRef' type64='^{OpaqueAudioQueue=}'/>
<opaque name='AudioQueueTimelineRef' type64='^{OpaqueAudioQueueTimeline=}'/>
<opaque name='ExtAudioFileRef' type64='^{OpaqueExtAudioFile=}'/>
<opaque name='MusicEventIterator' type64='^{OpaqueMusicEventIterator=}'/>
<opaque name='MusicPlayer' type64='^{OpaqueMusicPlayer=}'/>
<opaque name='MusicSequence' type64='^{OpaqueMusicSequence=}'/>
<opaque name='MusicTrack' type64='^{OpaqueMusicTrack=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kAudioComponentInstanceInvalidationNotification' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kAudioComponentRegistrationsChangedNotification' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionInputRoute_BluetoothHFP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionInputRoute_BuiltInMic' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionInputRoute_HeadsetMic' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionInputRoute_LineIn' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionInputRoute_USBAudio' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionOutputRoute_AirPlay' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionOutputRoute_BluetoothA2DP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionOutputRoute_BluetoothHFP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionOutputRoute_BuiltInReceiver' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionOutputRoute_BuiltInSpeaker' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionOutputRoute_HDMI' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionOutputRoute_Headphones' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionOutputRoute_LineOut' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSessionOutputRoute_USBAudio' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSession_AudioRouteChangeKey_CurrentRouteDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSession_AudioRouteChangeKey_PreviousRouteDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSession_AudioRouteKey_Inputs' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSession_AudioRouteKey_Outputs' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSession_AudioRouteKey_Type' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSession_InputSourceKey_Description' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSession_InputSourceKey_ID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSession_OutputDestinationKey_Description' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSession_OutputDestinationKey_ID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef' name='kAudioSession_RouteChangeKey_Reason' type64='^{__CFString=}'/>
<string_constant name='kAFInfoDictionary_Album' value='album'/>
<string_constant name='kAFInfoDictionary_ApproximateDurationInSeconds' value='approximate duration in seconds'/>
<string_constant name='kAFInfoDictionary_Artist' value='artist'/>
<string_constant name='kAFInfoDictionary_ChannelLayout' value='channel layout'/>
<string_constant name='kAFInfoDictionary_Comments' value='comments'/>
<string_constant name='kAFInfoDictionary_Composer' value='composer'/>
<string_constant name='kAFInfoDictionary_Copyright' value='copyright'/>
<string_constant name='kAFInfoDictionary_EncodingApplication' value='encoding application'/>
<string_constant name='kAFInfoDictionary_Genre' value='genre'/>
<string_constant name='kAFInfoDictionary_ISRC' value='ISRC'/>
<string_constant name='kAFInfoDictionary_KeySignature' value='key signature'/>
<string_constant name='kAFInfoDictionary_Lyricist' value='lyricist'/>
<string_constant name='kAFInfoDictionary_NominalBitRate' value='nominal bit rate'/>
<string_constant name='kAFInfoDictionary_RecordedDate' value='recorded date'/>
<string_constant name='kAFInfoDictionary_SourceBitDepth' value='source bit depth'/>
<string_constant name='kAFInfoDictionary_SourceEncoder' value='source encoder'/>
<string_constant name='kAFInfoDictionary_SubTitle' value='subtitle'/>
<string_constant name='kAFInfoDictionary_Tempo' value='tempo'/>
<string_constant name='kAFInfoDictionary_TimeSignature' value='time signature'/>
<string_constant name='kAFInfoDictionary_Title' value='title'/>
<string_constant name='kAFInfoDictionary_TrackNumber' value='track number'/>
<string_constant name='kAFInfoDictionary_Year' value='year'/>
<string_constant name='kAUPresetCPULoadKey' value='cpu-load'/>
<string_constant name='kAUPresetDataKey' value='data'/>
<string_constant name='kAUPresetElementNameKey' value='element-name'/>
<string_constant name='kAUPresetExternalFileRefs' value='file-references'/>
<string_constant name='kAUPresetManufacturerKey' value='manufacturer'/>
<string_constant name='kAUPresetNameKey' value='name'/>
<string_constant name='kAUPresetNumberKey' value='preset-number'/>
<string_constant name='kAUPresetPartKey' value='part'/>
<string_constant name='kAUPresetRenderQualityKey' value='render-quality'/>
<string_constant name='kAUPresetSubtypeKey' value='subtype'/>
<string_constant name='kAUPresetTypeKey' value='type'/>
<string_constant name='kAUPresetVersionKey' value='version'/>
<string_constant name='kAudioComponentConfigurationInfo_ValidationResult' value='ValidationResult'/>
<string_constant name='kAudioComponentValidationParameter_ForceValidation' value='ForceValidation'/>
<string_constant name='kAudioComponentValidationParameter_TimeOut' value='TimeOut'/>
<string_constant name='kAudioSession_AudioRouteChangeKey_OldRoute' value='OutputDeviceDidChange_OldRoute'/>
<string_constant name='kAudioSession_AudioRouteChangeKey_Reason' value='OutputDeviceDidChange_Reason'/>
<string_constant name='kAudioSettings_AvailableValues' value='available values'/>
<string_constant name='kAudioSettings_CurrentValue' value='current value'/>
<string_constant name='kAudioSettings_Hint' value='hint'/>
<string_constant name='kAudioSettings_LimitedValues' value='limited values'/>
<string_constant name='kAudioSettings_Parameters' value='parameters'/>
<string_constant name='kAudioSettings_SettingKey' value='key'/>
<string_constant name='kAudioSettings_SettingName' value='name'/>
<string_constant name='kAudioSettings_Summary' value='summary'/>
<string_constant name='kAudioSettings_TopLevelKey' value='name'/>
<string_constant name='kAudioSettings_Unit' value='unit'/>
<string_constant name='kAudioSettings_ValueType' value='value type'/>
<string_constant name='kAudioSettings_Version' value='version'/>
<string_constant name='kAudioUnitConfigurationInfo_BusCountWritable' value='BusCountWritable'/>
<string_constant name='kAudioUnitConfigurationInfo_ChannelConfigurations' value='ChannelConfigurations'/>
<string_constant name='kAudioUnitConfigurationInfo_HasCustomView' value='HasCustomView'/>
<string_constant name='kAudioUnitConfigurationInfo_IconURL' value='IconURL'/>
<string_constant name='kAudioUnitConfigurationInfo_InitialInputs' value='InitialInputs'/>
<string_constant name='kAudioUnitConfigurationInfo_InitialOutputs' value='InitialOutputs'/>
<string_constant name='kAudioUnitConfigurationInfo_SupportedChannelLayoutTags' value='SupportedChannelLayoutTags'/>
<string_constant name='kInstrumentInfoKey_LSB' value='LSB'/>
<string_constant name='kInstrumentInfoKey_MSB' value='MSB'/>
<string_constant name='kInstrumentInfoKey_Name' value='name'/>
<string_constant name='kInstrumentInfoKey_Program' value='program'/>
<enum name='AUAudioUnitBusTypeInput' value64='1'/>
<enum name='AUAudioUnitBusTypeOutput' value64='2'/>
<enum name='AUDIO_TOOLBOX_VERSION' value64='1060'/>
<enum name='AUDIO_UNIT_VERSION' value64='1070'/>
<enum name='AUEventSampleTimeImmediate' value64='-4294967296'/>
<enum name='AUHostTransportStateChanged' value64='1'/>
<enum name='AUHostTransportStateCycling' value64='8'/>
<enum name='AUHostTransportStateMoving' value64='2'/>
<enum name='AUHostTransportStateRecording' value64='4'/>
<enum name='AUParameterAutomationEventTypeRelease' value64='2'/>
<enum name='AUParameterAutomationEventTypeTouch' value64='1'/>
<enum name='AUParameterAutomationEventTypeValue' value64='0'/>
<enum name='AURenderEventMIDI' value64='8'/>
<enum name='AURenderEventMIDISysEx' value64='9'/>
<enum name='AURenderEventParameter' value64='1'/>
<enum name='AURenderEventParameterRamp' value64='2'/>
<enum name='AU_SUPPORT_INTERAPP_AUDIO' value64='1'/>
<enum name='k3DMixerAttenuationCurve_Exponential' value64='1'/>
<enum name='k3DMixerAttenuationCurve_Inverse' value64='2'/>
<enum name='k3DMixerAttenuationCurve_Linear' value64='3'/>
<enum name='k3DMixerAttenuationCurve_Power' value64='0'/>
<enum name='k3DMixerParam_Azimuth' value64='0'/>
<enum name='k3DMixerParam_BusEnable' value64='20'/>
<enum name='k3DMixerParam_Distance' value64='2'/>
<enum name='k3DMixerParam_DryWetReverbBlend' value64='23'/>
<enum name='k3DMixerParam_Elevation' value64='1'/>
<enum name='k3DMixerParam_Enable' value64='5'/>
<enum name='k3DMixerParam_Gain' value64='3'/>
<enum name='k3DMixerParam_GlobalReverbGain' value64='9'/>
<enum name='k3DMixerParam_GlobalReverbGainInDecibels' value64='24'/>
<enum name='k3DMixerParam_MaxGain' value64='7'/>
<enum name='k3DMixerParam_MaxGainInDecibels' value64='22'/>
<enum name='k3DMixerParam_MinGain' value64='6'/>
<enum name='k3DMixerParam_MinGainInDecibels' value64='21'/>
<enum name='k3DMixerParam_ObstructionAttenuation' value64='11'/>
<enum name='k3DMixerParam_ObstructionAttenuationInDecibels' value64='26'/>
<enum name='k3DMixerParam_OcclusionAttenuation' value64='10'/>
<enum name='k3DMixerParam_OcclusionAttenuationInDecibels' value64='25'/>
<enum name='k3DMixerParam_PlaybackRate' value64='4'/>
<enum name='k3DMixerParam_PostAveragePower' value64='3000'/>
<enum name='k3DMixerParam_PostPeakHoldLevel' value64='4000'/>
<enum name='k3DMixerParam_PreAveragePower' value64='1000'/>
<enum name='k3DMixerParam_PrePeakHoldLevel' value64='2000'/>
<enum name='k3DMixerParam_ReverbBlend' value64='8'/>
<enum name='k3DMixerRenderingFlags_ConstantReverbBlend' value64='64'/>
<enum name='k3DMixerRenderingFlags_DistanceAttenuation' value64='4'/>
<enum name='k3DMixerRenderingFlags_DistanceDiffusion' value64='16'/>
<enum name='k3DMixerRenderingFlags_DistanceFilter' value64='8'/>
<enum name='k3DMixerRenderingFlags_DopplerShift' value64='2'/>
<enum name='k3DMixerRenderingFlags_InterAuralDelay' value64='1'/>
<enum name='k3DMixerRenderingFlags_LinearDistanceAttenuation' value64='32'/>
<enum name='kAUGraphErr_CannotDoInCurrentContext' value64='-10863'/>
<enum name='kAUGraphErr_InvalidAudioUnit' value64='-10864'/>
<enum name='kAUGraphErr_InvalidConnection' value64='-10861'/>
<enum name='kAUGraphErr_NodeNotFound' value64='-10860'/>
<enum name='kAUGraphErr_OutputNodeErr' value64='-10862'/>
<enum name='kAUGroupParameterID_AllNotesOff' value64='123'/>
<enum name='kAUGroupParameterID_AllSoundOff' value64='120'/>
<enum name='kAUGroupParameterID_ChannelPressure' value64='208'/>
<enum name='kAUGroupParameterID_DataEntry' value64='6'/>
<enum name='kAUGroupParameterID_DataEntry_LSB' value64='38'/>
<enum name='kAUGroupParameterID_Expression' value64='11'/>
<enum name='kAUGroupParameterID_Expression_LSB' value64='43'/>
<enum name='kAUGroupParameterID_Foot' value64='4'/>
<enum name='kAUGroupParameterID_Foot_LSB' value64='36'/>
<enum name='kAUGroupParameterID_KeyPressure' value64='160'/>
<enum name='kAUGroupParameterID_KeyPressure_FirstKey' value64='256'/>
<enum name='kAUGroupParameterID_KeyPressure_LastKey' value64='383'/>
<enum name='kAUGroupParameterID_ModWheel' value64='1'/>
<enum name='kAUGroupParameterID_ModWheel_LSB' value64='33'/>
<enum name='kAUGroupParameterID_Pan' value64='10'/>
<enum name='kAUGroupParameterID_Pan_LSB' value64='42'/>
<enum name='kAUGroupParameterID_PitchBend' value64='224'/>
<enum name='kAUGroupParameterID_ResetAllControllers' value64='121'/>
<enum name='kAUGroupParameterID_Sostenuto' value64='66'/>
<enum name='kAUGroupParameterID_Sustain' value64='64'/>
<enum name='kAUGroupParameterID_Volume' value64='7'/>
<enum name='kAUGroupParameterID_Volume_LSB' value64='39'/>
<enum name='kAULowShelfParam_CutoffFrequency' value64='0'/>
<enum name='kAULowShelfParam_Gain' value64='1'/>
<enum name='kAUMIDISynthProperty_EnablePreload' value64='4119'/>
<enum name='kAUNBandEQFilterType_2ndOrderButterworthHighPass' value64='2'/>
<enum name='kAUNBandEQFilterType_2ndOrderButterworthLowPass' value64='1'/>
<enum name='kAUNBandEQFilterType_BandPass' value64='5'/>
<enum name='kAUNBandEQFilterType_BandStop' value64='6'/>
<enum name='kAUNBandEQFilterType_HighShelf' value64='8'/>
<enum name='kAUNBandEQFilterType_LowShelf' value64='7'/>
<enum name='kAUNBandEQFilterType_Parametric' value64='0'/>
<enum name='kAUNBandEQFilterType_ResonantHighPass' value64='4'/>
<enum name='kAUNBandEQFilterType_ResonantHighShelf' value64='10'/>
<enum name='kAUNBandEQFilterType_ResonantLowPass' value64='3'/>
<enum name='kAUNBandEQFilterType_ResonantLowShelf' value64='9'/>
<enum name='kAUNBandEQParam_Bandwidth' value64='5000'/>
<enum name='kAUNBandEQParam_BypassBand' value64='1000'/>
<enum name='kAUNBandEQParam_FilterType' value64='2000'/>
<enum name='kAUNBandEQParam_Frequency' value64='3000'/>
<enum name='kAUNBandEQParam_Gain' value64='4000'/>
<enum name='kAUNBandEQParam_GlobalGain' value64='0'/>
<enum name='kAUNBandEQProperty_BiquadCoefficients' value64='2203'/>
<enum name='kAUNBandEQProperty_MaxNumberOfBands' value64='2201'/>
<enum name='kAUNBandEQProperty_NumberOfBands' value64='2200'/>
<enum name='kAUNodeInteraction_Connection' value64='1'/>
<enum name='kAUNodeInteraction_InputCallback' value64='2'/>
<enum name='kAUSamplerParam_CoarseTuning' value64='901'/>
<enum name='kAUSamplerParam_FineTuning' value64='902'/>
<enum name='kAUSamplerParam_Gain' value64='900'/>
<enum name='kAUSamplerParam_Pan' value64='903'/>
<enum name='kAUSamplerProperty_BankAndPreset' value64='4100'/>
<enum name='kAUSamplerProperty_LoadAudioFiles' value64='4101'/>
<enum name='kAUSamplerProperty_LoadInstrument' value64='4102'/>
<enum name='kAUSamplerProperty_LoadPresetFromBank' value64='4100'/>
<enum name='kAUSampler_DefaultBankLSB' value64='0'/>
<enum name='kAUSampler_DefaultMelodicBankMSB' value64='121'/>
<enum name='kAUSampler_DefaultPercussionBankMSB' value64='120'/>
<enum name='kAUVoiceIOProperty_BypassVoiceProcessing' value64='2100'/>
<enum name='kAUVoiceIOProperty_DuckNonVoiceAudio' value64='2102'/>
<enum name='kAUVoiceIOProperty_MuteOutput' value64='2104'/>
<enum name='kAUVoiceIOProperty_VoiceProcessingEnableAGC' value64='2101'/>
<enum name='kAUVoiceIOProperty_VoiceProcessingQuality' value64='2103'/>
<enum name='kAppleHardwareAudioCodecManufacturer' value64='1634756727'/>
<enum name='kAppleSoftwareAudioCodecManufacturer' value64='1634758764'/>
<enum name='kAudioBalanceFadeType_EqualPower' value64='1'/>
<enum name='kAudioBalanceFadeType_MaxUnityGain' value64='0'/>
<enum name='kAudioCodecAppendInputBufferListSelect' value64='9'/>
<enum name='kAudioCodecAppendInputDataSelect' value64='6'/>
<enum name='kAudioCodecBadDataError' value64='1650549857'/>
<enum name='kAudioCodecBadPropertySizeError' value64='561211770'/>
<enum name='kAudioCodecBitRateControlMode_Constant' value64='0'/>
<enum name='kAudioCodecBitRateControlMode_LongTermAverage' value64='1'/>
<enum name='kAudioCodecBitRateControlMode_Variable' value64='3'/>
<enum name='kAudioCodecBitRateControlMode_VariableConstrained' value64='2'/>
<enum name='kAudioCodecBitRateFormat' value64='1633903206'/>
<enum name='kAudioCodecBitRateFormat_ABR' value64='1'/>
<enum name='kAudioCodecBitRateFormat_CBR' value64='0'/>
<enum name='kAudioCodecBitRateFormat_VBR' value64='2'/>
<enum name='kAudioCodecDelayMode_Compatibility' value64='0'/>
<enum name='kAudioCodecDelayMode_Minimum' value64='1'/>
<enum name='kAudioCodecDelayMode_Optimal' value64='2'/>
<enum name='kAudioCodecDoesSampleRateConversion' value64='1819112035'/>
<enum name='kAudioCodecExtendFrequencies' value64='1633903974'/>
<enum name='kAudioCodecGetPropertyInfoSelect' value64='1'/>
<enum name='kAudioCodecGetPropertySelect' value64='2'/>
<enum name='kAudioCodecIllegalOperationError' value64='1852797029'/>
<enum name='kAudioCodecInitializeSelect' value64='4'/>
<enum name='kAudioCodecInputFormatsForOutputFormat' value64='1768305775'/>
<enum name='kAudioCodecNoError' value64='0'/>
<enum name='kAudioCodecNotEnoughBufferSpaceError' value64='560100710'/>
<enum name='kAudioCodecOutputFormatsForInputFormat' value64='1868969065'/>
<enum name='kAudioCodecOutputPrecedence' value64='1869639794'/>
<enum name='kAudioCodecOutputPrecedenceBitRate' value64='1'/>
<enum name='kAudioCodecOutputPrecedenceNone' value64='0'/>
<enum name='kAudioCodecOutputPrecedenceSampleRate' value64='2'/>
<enum name='kAudioCodecPrimeMethod_None' value64='2'/>
<enum name='kAudioCodecPrimeMethod_Normal' value64='1'/>
<enum name='kAudioCodecPrimeMethod_Pre' value64='0'/>
<enum name='kAudioCodecProduceOutputBufferListSelect' value64='10'/>
<enum name='kAudioCodecProduceOutputDataSelect' value64='7'/>
<enum name='kAudioCodecProduceOutputPacketAtEOF' value64='5'/>
<enum name='kAudioCodecProduceOutputPacketFailure' value64='1'/>
<enum name='kAudioCodecProduceOutputPacketNeedsMoreInputData' value64='4'/>
<enum name='kAudioCodecProduceOutputPacketSuccess' value64='2'/>
<enum name='kAudioCodecProduceOutputPacketSuccessHasMore' value64='3'/>
<enum name='kAudioCodecPropertyAdjustLocalQuality' value64='1584488812'/>
<enum name='kAudioCodecPropertyApplicableBitRateRange' value64='1651668065'/>
<enum name='kAudioCodecPropertyApplicableInputSampleRates' value64='1769173601'/>
<enum name='kAudioCodecPropertyApplicableOutputSampleRates' value64='1869836897'/>
<enum name='kAudioCodecPropertyAvailableBitRateRange' value64='1633841780'/>
<enum name='kAudioCodecPropertyAvailableBitRates' value64='1651668003'/>
<enum name='kAudioCodecPropertyAvailableInputChannelLayoutTags' value64='1634296684'/>
<enum name='kAudioCodecPropertyAvailableInputChannelLayouts' value64='1634296684'/>
<enum name='kAudioCodecPropertyAvailableInputSampleRates' value64='1634300786'/>
<enum name='kAudioCodecPropertyAvailableNumberChannels' value64='1668116067'/>
<enum name='kAudioCodecPropertyAvailableOutputChannelLayoutTags' value64='1634689900'/>
<enum name='kAudioCodecPropertyAvailableOutputChannelLayouts' value64='1634689900'/>
<enum name='kAudioCodecPropertyAvailableOutputSampleRates' value64='1634694002'/>
<enum name='kAudioCodecPropertyBitRateControlMode' value64='1633903206'/>
<enum name='kAudioCodecPropertyBitRateForVBR' value64='1986163298'/>
<enum name='kAudioCodecPropertyCurrentInputChannelLayout' value64='1768123424'/>
<enum name='kAudioCodecPropertyCurrentInputFormat' value64='1768320372'/>
<enum name='kAudioCodecPropertyCurrentInputSampleRate' value64='1667855218'/>
<enum name='kAudioCodecPropertyCurrentOutputChannelLayout' value64='1868786720'/>
<enum name='kAudioCodecPropertyCurrentOutputFormat' value64='1868983668'/>
<enum name='kAudioCodecPropertyCurrentOutputSampleRate' value64='1668248434'/>
<enum name='kAudioCodecPropertyCurrentTargetBitRate' value64='1651663220'/>
<enum name='kAudioCodecPropertyDelayMode' value64='1684893540'/>
<enum name='kAudioCodecPropertyDoesSampleRateConversion' value64='1819112035'/>
<enum name='kAudioCodecPropertyDynamicRangeControlMode' value64='1835299427'/>
<enum name='kAudioCodecPropertyEmploysDependentPackets' value64='1685089087'/>
<enum name='kAudioCodecPropertyFormatCFString' value64='1818652530'/>
<enum name='kAudioCodecPropertyFormatInfo' value64='1633904233'/>
<enum name='kAudioCodecPropertyFormatList' value64='1633904236'/>
<enum name='kAudioCodecPropertyHasVariablePacketByteSizes' value64='1987078975'/>
<enum name='kAudioCodecPropertyInputBufferSize' value64='1952609638'/>
<enum name='kAudioCodecPropertyInputChannelLayout' value64='1768123424'/>
<enum name='kAudioCodecPropertyInputFormatsForOutputFormat' value64='1768305775'/>
<enum name='kAudioCodecPropertyIsInitialized' value64='1768843636'/>
<enum name='kAudioCodecPropertyMagicCookie' value64='1802857321'/>
<enum name='kAudioCodecPropertyManufacturerCFString' value64='1819107691'/>
<enum name='kAudioCodecPropertyMaximumPacketByteSize' value64='1885432674'/>
<enum name='kAudioCodecPropertyMinimumDelayMode' value64='1835296108'/>
<enum name='kAudioCodecPropertyMinimumNumberInputPackets' value64='1835952496'/>
<enum name='kAudioCodecPropertyMinimumNumberOutputPackets' value64='1835954032'/>
<enum name='kAudioCodecPropertyNameCFString' value64='1819173229'/>
<enum name='kAudioCodecPropertyOutputChannelLayout' value64='1868786720'/>
<enum name='kAudioCodecPropertyOutputFormatsForInputFormat' value64='1868969065'/>
<enum name='kAudioCodecPropertyPacketFrameSize' value64='1885432678'/>
<enum name='kAudioCodecPropertyPacketSizeLimitForVBR' value64='1885432684'/>
<enum name='kAudioCodecPropertyPaddedZeros' value64='1885430832'/>
<enum name='kAudioCodecPropertyPrimeInfo' value64='1886546285'/>
<enum name='kAudioCodecPropertyPrimeMethod' value64='1886547309'/>
<enum name='kAudioCodecPropertyProgramTargetLevel' value64='1886418028'/>
<enum name='kAudioCodecPropertyProgramTargetLevelConstant' value64='1886678115'/>
<enum name='kAudioCodecPropertyQualitySetting' value64='1936876401'/>
<enum name='kAudioCodecPropertyRecommendedBitRateRange' value64='1651668082'/>
<enum name='kAudioCodecPropertyRequiresPacketDescription' value64='1885432676'/>
<enum name='kAudioCodecPropertySettings' value64='1633907488'/>
<enum name='kAudioCodecPropertySoundQualityForVBR' value64='1986163313'/>
<enum name='kAudioCodecPropertySupportedInputFormats' value64='1768320291'/>
<enum name='kAudioCodecPropertySupportedOutputFormats' value64='1868983587'/>
<enum name='kAudioCodecPropertyUsedInputBufferSize' value64='1969386854'/>
<enum name='kAudioCodecPropertyZeroFramesPadded' value64='1885430832'/>
<enum name='kAudioCodecQuality_High' value64='96'/>
<enum name='kAudioCodecQuality_Low' value64='32'/>
<enum name='kAudioCodecQuality_Max' value64='127'/>
<enum name='kAudioCodecQuality_Medium' value64='64'/>
<enum name='kAudioCodecQuality_Min' value64='0'/>
<enum name='kAudioCodecResetSelect' value64='8'/>
<enum name='kAudioCodecSetPropertySelect' value64='3'/>
<enum name='kAudioCodecStateError' value64='561214580'/>
<enum name='kAudioCodecUninitializeSelect' value64='5'/>
<enum name='kAudioCodecUnknownPropertyError' value64='2003332927'/>
<enum name='kAudioCodecUnspecifiedError' value64='2003329396'/>
<enum name='kAudioCodecUnsupportedFormatError' value64='560226676'/>
<enum name='kAudioCodecUseRecommendedSampleRate' value64='1970434930'/>
<enum name='kAudioComponentErr_DuplicateDescription' value64='-66752'/>
<enum name='kAudioComponentErr_InitializationTimedOut' value64='-66747'/>
<enum name='kAudioComponentErr_InstanceInvalidated' value64='-66749'/>
<enum name='kAudioComponentErr_InstanceTimedOut' value64='-66754'/>
<enum name='kAudioComponentErr_InvalidFormat' value64='-66746'/>
<enum name='kAudioComponentErr_NotPermitted' value64='-66748'/>
<enum name='kAudioComponentErr_TooManyInstances' value64='-66750'/>
<enum name='kAudioComponentErr_UnsupportedType' value64='-66751'/>
<enum name='kAudioComponentFlag_CanLoadInProcess' value64='16'/>
<enum name='kAudioComponentFlag_IsV3AudioUnit' value64='4'/>
<enum name='kAudioComponentFlag_RequiresAsyncInstantiation' value64='8'/>
<enum name='kAudioComponentFlag_SandboxSafe' value64='2'/>
<enum name='kAudioComponentFlag_Unsearchable' value64='1'/>
<enum name='kAudioComponentInstantiation_LoadInProcess' value64='2'/>
<enum name='kAudioComponentInstantiation_LoadOutOfProcess' value64='1'/>
<enum name='kAudioComponentValidationResult_Failed' value64='2'/>
<enum name='kAudioComponentValidationResult_Passed' value64='1'/>
<enum name='kAudioComponentValidationResult_TimedOut' value64='3'/>
<enum name='kAudioComponentValidationResult_UnauthorizedError_Init' value64='5'/>
<enum name='kAudioComponentValidationResult_UnauthorizedError_Open' value64='4'/>
<enum name='kAudioComponentValidationResult_Unknown' value64='0'/>
<enum name='kAudioConverterApplicableEncodeBitRates' value64='1634034290'/>
<enum name='kAudioConverterApplicableEncodeSampleRates' value64='1634038642'/>
<enum name='kAudioConverterAvailableEncodeBitRates' value64='1986355826'/>
<enum name='kAudioConverterAvailableEncodeChannelLayoutTags' value64='1634034540'/>
<enum name='kAudioConverterAvailableEncodeSampleRates' value64='1986360178'/>
<enum name='kAudioConverterChannelMap' value64='1667788144'/>
<enum name='kAudioConverterCodecQuality' value64='1667527029'/>
<enum name='kAudioConverterCompressionMagicCookie' value64='1668114275'/>
<enum name='kAudioConverterCurrentInputStreamDescription' value64='1633904996'/>
<enum name='kAudioConverterCurrentOutputStreamDescription' value64='1633906532'/>
<enum name='kAudioConverterDecompressionMagicCookie' value64='1684891491'/>
<enum name='kAudioConverterEncodeAdjustableSampleRate' value64='1634366322'/>
<enum name='kAudioConverterEncodeBitRate' value64='1651663220'/>
<enum name='kAudioConverterErr_BadPropertySizeError' value64='561211770'/>
<enum name='kAudioConverterErr_FormatNotSupported' value64='1718449215'/>
<enum name='kAudioConverterErr_HardwareInUse' value64='1752656245'/>
<enum name='kAudioConverterErr_InputSampleRateOutOfRange' value64='560558962'/>
<enum name='kAudioConverterErr_InvalidInputSize' value64='1768846202'/>
<enum name='kAudioConverterErr_InvalidOutputSize' value64='1869902714'/>
<enum name='kAudioConverterErr_NoHardwarePermission' value64='1885696621'/>
<enum name='kAudioConverterErr_OperationNotSupported' value64='1869627199'/>
<enum name='kAudioConverterErr_OutputSampleRateOutOfRange' value64='560952178'/>
<enum name='kAudioConverterErr_PropertyNotSupported' value64='1886547824'/>
<enum name='kAudioConverterErr_RequiresPacketDescriptionsError' value64='561015652'/>
<enum name='kAudioConverterErr_UnspecifiedError' value64='2003329396'/>
<enum name='kAudioConverterInputChannelLayout' value64='1768123424'/>
<enum name='kAudioConverterOutputChannelLayout' value64='1868786720'/>
<enum name='kAudioConverterPrimeInfo' value64='1886546285'/>
<enum name='kAudioConverterPrimeMethod' value64='1886547309'/>
<enum name='kAudioConverterPropertyBitDepthHint' value64='1633903204'/>
<enum name='kAudioConverterPropertyCalculateInputBufferSize' value64='1667850867'/>
<enum name='kAudioConverterPropertyCalculateOutputBufferSize' value64='1668244083'/>
<enum name='kAudioConverterPropertyCanResumeFromInterruption' value64='1668441705'/>
<enum name='kAudioConverterPropertyFormatList' value64='1718383476'/>
<enum name='kAudioConverterPropertyInputCodecParameters' value64='1768121456'/>
<enum name='kAudioConverterPropertyMaximumInputBufferSize' value64='2020172403'/>
<enum name='kAudioConverterPropertyMaximumInputPacketSize' value64='2020175987'/>
<enum name='kAudioConverterPropertyMaximumOutputPacketSize' value64='2020569203'/>
<enum name='kAudioConverterPropertyMinimumInputBufferSize' value64='1835623027'/>
<enum name='kAudioConverterPropertyMinimumOutputBufferSize' value64='1836016243'/>
<enum name='kAudioConverterPropertyOutputCodecParameters' value64='1868784752'/>
<enum name='kAudioConverterPropertySettings' value64='1633906803'/>
<enum name='kAudioConverterQuality_High' value64='96'/>
<enum name='kAudioConverterQuality_Low' value64='32'/>
<enum name='kAudioConverterQuality_Max' value64='127'/>
<enum name='kAudioConverterQuality_Medium' value64='64'/>
<enum name='kAudioConverterQuality_Min' value64='0'/>
<enum name='kAudioConverterSampleRateConverterAlgorithm' value64='1936876393'/>
<enum name='kAudioConverterSampleRateConverterComplexity' value64='1936876385'/>
<enum name='kAudioConverterSampleRateConverterComplexity_Linear' value64='1818848869'/>
<enum name='kAudioConverterSampleRateConverterComplexity_Mastering' value64='1650553971'/>
<enum name='kAudioConverterSampleRateConverterComplexity_MinimumPhase' value64='1835626096'/>
<enum name='kAudioConverterSampleRateConverterComplexity_Normal' value64='1852797549'/>
<enum name='kAudioConverterSampleRateConverterInitialPhase' value64='1936876400'/>
<enum name='kAudioConverterSampleRateConverterQuality' value64='1936876401'/>
<enum name='kAudioDecoderComponentType' value64='1633969507'/>
<enum name='kAudioEncoderComponentType' value64='1634037347'/>
<enum name='kAudioFile3GP2Type' value64='862416946'/>
<enum name='kAudioFile3GPType' value64='862417008'/>
<enum name='kAudioFileAAC_ADTSType' value64='1633973363'/>
<enum name='kAudioFileAC3Type' value64='1633889587'/>
<enum name='kAudioFileAIFCType' value64='1095321155'/>
<enum name='kAudioFileAIFFType' value64='1095321158'/>
<enum name='kAudioFileAMRType' value64='1634562662'/>
<enum name='kAudioFileBW64Type' value64='1113011764'/>
<enum name='kAudioFileBadPropertySizeError' value64='561211770'/>
<enum name='kAudioFileCAFType' value64='1667327590'/>
<enum name='kAudioFileDoesNotAllow64BitDataSizeError' value64='1868981823'/>
<enum name='kAudioFileEndOfFileError' value64='-39'/>
<enum name='kAudioFileFLACType' value64='1718378851'/>
<enum name='kAudioFileFileNotFoundError' value64='-43'/>
<enum name='kAudioFileFlags_DontPageAlignAudioData' value64='2'/>
<enum name='kAudioFileFlags_EraseFile' value64='1'/>
<enum name='kAudioFileGlobalInfo_AllExtensions' value64='1634498676'/>
<enum name='kAudioFileGlobalInfo_AllHFSTypeCodes' value64='1634231923'/>
<enum name='kAudioFileGlobalInfo_AllMIMETypes' value64='1634560365'/>
<enum name='kAudioFileGlobalInfo_AllUTIs' value64='1635087465'/>
<enum name='kAudioFileGlobalInfo_AvailableFormatIDs' value64='1718446436'/>
<enum name='kAudioFileGlobalInfo_AvailableStreamDescriptionsForFormat' value64='1935960420'/>
<enum name='kAudioFileGlobalInfo_ExtensionsForType' value64='1717926004'/>
<enum name='kAudioFileGlobalInfo_FileTypeName' value64='1718906477'/>
<enum name='kAudioFileGlobalInfo_HFSTypeCodesForType' value64='1718118003'/>
<enum name='kAudioFileGlobalInfo_MIMETypesForType' value64='1718446445'/>
<enum name='kAudioFileGlobalInfo_ReadableTypes' value64='1634103910'/>
<enum name='kAudioFileGlobalInfo_TypesForExtension' value64='1952807028'/>
<enum name='kAudioFileGlobalInfo_TypesForHFSTypeCode' value64='1952999027'/>
<enum name='kAudioFileGlobalInfo_TypesForMIMEType' value64='1953327469'/>
<enum name='kAudioFileGlobalInfo_TypesForUTI' value64='1953854569'/>
<enum name='kAudioFileGlobalInfo_UTIsForType' value64='1718973545'/>
<enum name='kAudioFileGlobalInfo_WritableTypes' value64='1634105190'/>
<enum name='kAudioFileInvalidChunkError' value64='1667787583'/>
<enum name='kAudioFileInvalidFileError' value64='1685348671'/>
<enum name='kAudioFileInvalidPacketDependencyError' value64='1684369471'/>
<enum name='kAudioFileInvalidPacketOffsetError' value64='1885563711'/>
<enum name='kAudioFileLATMInLOASType' value64='1819238771'/>
<enum name='kAudioFileLoopDirection_Backward' value64='3'/>
<enum name='kAudioFileLoopDirection_Forward' value64='1'/>
<enum name='kAudioFileLoopDirection_ForwardAndBackward' value64='2'/>
<enum name='kAudioFileLoopDirection_NoLooping' value64='0'/>
<enum name='kAudioFileM4AType' value64='1832149350'/>
<enum name='kAudioFileM4BType' value64='1832149606'/>
<enum name='kAudioFileMP1Type' value64='1297106737'/>
<enum name='kAudioFileMP2Type' value64='1297106738'/>
<enum name='kAudioFileMP3Type' value64='1297106739'/>
<enum name='kAudioFileMPEG4Type' value64='1836069990'/>
<enum name='kAudioFileMarkerType_Generic' value64='0'/>
<enum name='kAudioFileNextType' value64='1315264596'/>
<enum name='kAudioFileNotOpenError' value64='-38'/>
<enum name='kAudioFileNotOptimizedError' value64='1869640813'/>
<enum name='kAudioFileOperationNotSupportedError' value64='1869627199'/>
<enum name='kAudioFilePermissionsError' value64='1886547263'/>
<enum name='kAudioFilePositionError' value64='-40'/>
<enum name='kAudioFilePropertyAlbumArtwork' value64='1633776244'/>
<enum name='kAudioFilePropertyAudioDataByteCount' value64='1650683508'/>
<enum name='kAudioFilePropertyAudioDataPacketCount' value64='1885564532'/>
<enum name='kAudioFilePropertyAudioTrackCount' value64='1635017588'/>
<enum name='kAudioFilePropertyBitRate' value64='1651663220'/>
<enum name='kAudioFilePropertyByteToPacket' value64='1652125803'/>
<enum name='kAudioFilePropertyChannelLayout' value64='1668112752'/>
<enum name='kAudioFilePropertyChunkIDs' value64='1667787108'/>
<enum name='kAudioFilePropertyDataFormat' value64='1684434292'/>
<enum name='kAudioFilePropertyDataFormatName' value64='1718512997'/>
<enum name='kAudioFilePropertyDataOffset' value64='1685022310'/>
<enum name='kAudioFilePropertyDeferSizeUpdates' value64='1685289589'/>
<enum name='kAudioFilePropertyEstimatedDuration' value64='1701082482'/>
<enum name='kAudioFilePropertyFileFormat' value64='1717988724'/>
<enum name='kAudioFilePropertyFormatList' value64='1718383476'/>
<enum name='kAudioFilePropertyFrameToPacket' value64='1718775915'/>
<enum name='kAudioFilePropertyID3Tag' value64='1768174452'/>
<enum name='kAudioFilePropertyID3TagOffset' value64='1768174447'/>
<enum name='kAudioFilePropertyInfoDictionary' value64='1768842863'/>
<enum name='kAudioFilePropertyIsOptimized' value64='1869640813'/>
<enum name='kAudioFilePropertyMagicCookieData' value64='1835493731'/>
<enum name='kAudioFilePropertyMarkerList' value64='1835756659'/>
<enum name='kAudioFilePropertyMaximumPacketSize' value64='1886616165'/>
<enum name='kAudioFilePropertyNextIndependentPacket' value64='1852403300'/>
<enum name='kAudioFilePropertyPacketRangeByteCountUpperBound' value64='1886549346'/>
<enum name='kAudioFilePropertyPacketSizeUpperBound' value64='1886090594'/>
<enum name='kAudioFilePropertyPacketTableInfo' value64='1886283375'/>
<enum name='kAudioFilePropertyPacketToByte' value64='1886085753'/>
<enum name='kAudioFilePropertyPacketToDependencyInfo' value64='1886086256'/>
<enum name='kAudioFilePropertyPacketToFrame' value64='1886086770'/>
<enum name='kAudioFilePropertyPacketToRollDistance' value64='1886089836'/>
<enum name='kAudioFilePropertyPreviousIndependentPacket' value64='1885957732'/>
<enum name='kAudioFilePropertyRegionList' value64='1919380595'/>
<enum name='kAudioFilePropertyReserveDuration' value64='1920168566'/>
<enum name='kAudioFilePropertyRestrictsRandomAccess' value64='1920098672'/>
<enum name='kAudioFilePropertySourceBitDepth' value64='1935832164'/>
<enum name='kAudioFilePropertyUseAudioTrack' value64='1969321067'/>
<enum name='kAudioFileRF64Type' value64='1380333108'/>
<enum name='kAudioFileReadPermission' value64='1'/>
<enum name='kAudioFileReadWritePermission' value64='3'/>
<enum name='kAudioFileRegionFlag_LoopEnable' value64='1'/>
<enum name='kAudioFileRegionFlag_PlayBackward' value64='4'/>
<enum name='kAudioFileRegionFlag_PlayForward' value64='2'/>
<enum name='kAudioFileSoundDesigner2Type' value64='1399075430'/>
<enum name='kAudioFileStreamError_BadPropertySize' value64='561211770'/>
<enum name='kAudioFileStreamError_DataUnavailable' value64='1836020325'/>
<enum name='kAudioFileStreamError_DiscontinuityCantRecover' value64='1685283617'/>
<enum name='kAudioFileStreamError_IllegalOperation' value64='1852797029'/>
<enum name='kAudioFileStreamError_InvalidFile' value64='1685348671'/>
<enum name='kAudioFileStreamError_InvalidPacketOffset' value64='1885563711'/>
<enum name='kAudioFileStreamError_NotOptimized' value64='1869640813'/>
<enum name='kAudioFileStreamError_UnspecifiedError' value64='2003334207'/>
<enum name='kAudioFileStreamError_UnsupportedDataFormat' value64='1718449215'/>
<enum name='kAudioFileStreamError_UnsupportedFileType' value64='1954115647'/>
<enum name='kAudioFileStreamError_UnsupportedProperty' value64='1886681407'/>
<enum name='kAudioFileStreamError_ValueUnknown' value64='1970170687'/>
<enum name='kAudioFileStreamParseFlag_Discontinuity' value64='1'/>
<enum name='kAudioFileStreamPropertyFlag_CacheProperty' value64='2'/>
<enum name='kAudioFileStreamPropertyFlag_PropertyIsCached' value64='1'/>
<enum name='kAudioFileStreamProperty_AudioDataByteCount' value64='1650683508'/>
<enum name='kAudioFileStreamProperty_AudioDataPacketCount' value64='1885564532'/>
<enum name='kAudioFileStreamProperty_AverageBytesPerPacket' value64='1633841264'/>
<enum name='kAudioFileStreamProperty_BitRate' value64='1651663220'/>
<enum name='kAudioFileStreamProperty_ByteToPacket' value64='1652125803'/>
<enum name='kAudioFileStreamProperty_ChannelLayout' value64='1668112752'/>
<enum name='kAudioFileStreamProperty_DataFormat' value64='1684434292'/>
<enum name='kAudioFileStreamProperty_DataOffset' value64='1685022310'/>
<enum name='kAudioFileStreamProperty_FileFormat' value64='1717988724'/>
<enum name='kAudioFileStreamProperty_FormatList' value64='1718383476'/>
<enum name='kAudioFileStreamProperty_FrameToPacket' value64='1718775915'/>
<enum name='kAudioFileStreamProperty_InfoDictionary' value64='1768842863'/>
<enum name='kAudioFileStreamProperty_MagicCookieData' value64='1835493731'/>
<enum name='kAudioFileStreamProperty_MaximumPacketSize' value64='1886616165'/>
<enum name='kAudioFileStreamProperty_NextIndependentPacket' value64='1852403300'/>
<enum name='kAudioFileStreamProperty_PacketSizeUpperBound' value64='1886090594'/>
<enum name='kAudioFileStreamProperty_PacketTableInfo' value64='1886283375'/>
<enum name='kAudioFileStreamProperty_PacketToByte' value64='1886085753'/>
<enum name='kAudioFileStreamProperty_PacketToDependencyInfo' value64='1886086256'/>
<enum name='kAudioFileStreamProperty_PacketToFrame' value64='1886086770'/>
<enum name='kAudioFileStreamProperty_PacketToRollDistance' value64='1886089836'/>
<enum name='kAudioFileStreamProperty_PreviousIndependentPacket' value64='1885957732'/>
<enum name='kAudioFileStreamProperty_ReadyToProducePackets' value64='1919247481'/>
<enum name='kAudioFileStreamProperty_RestrictsRandomAccess' value64='1920098672'/>
<enum name='kAudioFileStreamSeekFlag_OffsetIsEstimated' value64='1'/>
<enum name='kAudioFileUnspecifiedError' value64='2003334207'/>
<enum name='kAudioFileUnsupportedDataFormatError' value64='1718449215'/>
<enum name='kAudioFileUnsupportedFileTypeError' value64='1954115647'/>
<enum name='kAudioFileUnsupportedPropertyError' value64='1886681407'/>
<enum name='kAudioFileWAVEType' value64='1463899717'/>
<enum name='kAudioFileWave64Type' value64='1463170150'/>
<enum name='kAudioFileWritePermission' value64='2'/>
<enum name='kAudioFormatBadPropertySizeError' value64='561211770'/>
<enum name='kAudioFormatBadSpecifierSizeError' value64='561213539'/>
<enum name='kAudioFormatProperty_ASBDFromESDS' value64='1702064996'/>
<enum name='kAudioFormatProperty_ASBDFromMPEGPacket' value64='1633971568'/>
<enum name='kAudioFormatProperty_AreChannelLayoutsEquivalent' value64='1667786097'/>
<enum name='kAudioFormatProperty_AvailableDecodeNumberChannels' value64='1633971811'/>
<enum name='kAudioFormatProperty_AvailableEncodeBitRates' value64='1634034290'/>
<enum name='kAudioFormatProperty_AvailableEncodeChannelLayoutTags' value64='1634034540'/>
<enum name='kAudioFormatProperty_AvailableEncodeNumberChannels' value64='1635151459'/>
<enum name='kAudioFormatProperty_AvailableEncodeSampleRates' value64='1634038642'/>
<enum name='kAudioFormatProperty_BalanceFade' value64='1650551910'/>
<enum name='kAudioFormatProperty_BitmapForLayoutTag' value64='1651340391'/>
<enum name='kAudioFormatProperty_ChannelLayoutForBitmap' value64='1668116578'/>
<enum name='kAudioFormatProperty_ChannelLayoutForTag' value64='1668116588'/>
<enum name='kAudioFormatProperty_ChannelLayoutFromESDS' value64='1702060908'/>
<enum name='kAudioFormatProperty_ChannelLayoutHash' value64='1667786849'/>
<enum name='kAudioFormatProperty_ChannelLayoutName' value64='1819242093'/>
<enum name='kAudioFormatProperty_ChannelLayoutSimpleName' value64='1819504237'/>
<enum name='kAudioFormatProperty_ChannelMap' value64='1667788144'/>
<enum name='kAudioFormatProperty_ChannelName' value64='1668178285'/>
<enum name='kAudioFormatProperty_ChannelShortName' value64='1668509293'/>
<enum name='kAudioFormatProperty_DecodeFormatIDs' value64='1633904998'/>
<enum name='kAudioFormatProperty_Decoders' value64='1635148901'/>
<enum name='kAudioFormatProperty_EncodeFormatIDs' value64='1633906534'/>
<enum name='kAudioFormatProperty_Encoders' value64='1635149166'/>
<enum name='kAudioFormatProperty_FirstPlayableFormatFromList' value64='1718642284'/>
<enum name='kAudioFormatProperty_FormatEmploysDependentPackets' value64='1717855600'/>
<enum name='kAudioFormatProperty_FormatInfo' value64='1718449257'/>
<enum name='kAudioFormatProperty_FormatIsEncrypted' value64='1668446576'/>
<enum name='kAudioFormatProperty_FormatIsExternallyFramed' value64='1717925990'/>
<enum name='kAudioFormatProperty_FormatIsVBR' value64='1719034482'/>
<enum name='kAudioFormatProperty_FormatList' value64='1718383476'/>
<enum name='kAudioFormatProperty_FormatName' value64='1718509933'/>
<enum name='kAudioFormatProperty_HardwareCodecCapabilities' value64='1752654691'/>
<enum name='kAudioFormatProperty_ID3TagSize' value64='1768174451'/>
<enum name='kAudioFormatProperty_ID3TagToDictionary' value64='1768174436'/>
<enum name='kAudioFormatProperty_MatrixMixMap' value64='1835884912'/>
<enum name='kAudioFormatProperty_NumberOfChannelsForLayout' value64='1852008557'/>
<enum name='kAudioFormatProperty_OutputFormatList' value64='1868983411'/>
<enum name='kAudioFormatProperty_PanningMatrix' value64='1885433453'/>
<enum name='kAudioFormatProperty_TagForChannelLayout' value64='1668116596'/>
<enum name='kAudioFormatProperty_TagsForNumberOfChannels' value64='1952540515'/>
<enum name='kAudioFormatProperty_ValidateChannelLayout' value64='1986093932'/>
<enum name='kAudioFormatUnknownFormatError' value64='560360820'/>
<enum name='kAudioFormatUnspecifiedError' value64='2003329396'/>
<enum name='kAudioFormatUnsupportedDataFormatError' value64='1718449215'/>
<enum name='kAudioFormatUnsupportedPropertyError' value64='1886547824'/>
<enum name='kAudioOfflineUnitRenderAction_Complete' value64='128'/>
<enum name='kAudioOfflineUnitRenderAction_Preflight' value64='32'/>
<enum name='kAudioOfflineUnitRenderAction_Render' value64='64'/>
<enum name='kAudioOutputUnitProperty_ChannelMap' value64='2002'/>
<enum name='kAudioOutputUnitProperty_CurrentDevice' value64='2000'/>
<enum name='kAudioOutputUnitProperty_EnableIO' value64='2003'/>
<enum name='kAudioOutputUnitProperty_HasIO' value64='2006'/>
<enum name='kAudioOutputUnitProperty_HostReceivesRemoteControlEvents' value64='2011'/>
<enum name='kAudioOutputUnitProperty_HostTransportState' value64='2013'/>
<enum name='kAudioOutputUnitProperty_IsRunning' value64='2001'/>
<enum name='kAudioOutputUnitProperty_MIDICallbacks' value64='2010'/>
<enum name='kAudioOutputUnitProperty_NodeComponentDescription' value64='2014'/>
<enum name='kAudioOutputUnitProperty_OSWorkgroup' value64='2015'/>
<enum name='kAudioOutputUnitProperty_RemoteControlToHost' value64='2012'/>
<enum name='kAudioOutputUnitProperty_SetInputCallback' value64='2005'/>
<enum name='kAudioOutputUnitProperty_StartTime' value64='2004'/>
<enum name='kAudioOutputUnitProperty_StartTimestampsAtZero' value64='2007'/>
<enum name='kAudioOutputUnitRange' value64='512'/>
<enum name='kAudioOutputUnitStartSelect' value64='513'/>
<enum name='kAudioOutputUnitStopSelect' value64='514'/>
<enum name='kAudioQueueDeviceProperty_NumberChannels' value64='1634821219'/>
<enum name='kAudioQueueDeviceProperty_SampleRate' value64='1634825074'/>
<enum name='kAudioQueueErr_BufferEmpty' value64='-66686'/>
<enum name='kAudioQueueErr_BufferEnqueuedTwice' value64='-66666'/>
<enum name='kAudioQueueErr_BufferInQueue' value64='-66679'/>
<enum name='kAudioQueueErr_CannotStart' value64='-66681'/>
<enum name='kAudioQueueErr_CannotStartYet' value64='-66665'/>
<enum name='kAudioQueueErr_CodecNotFound' value64='-66673'/>
<enum name='kAudioQueueErr_DisposalPending' value64='-66685'/>
<enum name='kAudioQueueErr_EnqueueDuringReset' value64='-66632'/>
<enum name='kAudioQueueErr_InvalidBuffer' value64='-66687'/>
<enum name='kAudioQueueErr_InvalidCodecAccess' value64='-66672'/>
<enum name='kAudioQueueErr_InvalidDevice' value64='-66680'/>
<enum name='kAudioQueueErr_InvalidOfflineMode' value64='-66626'/>
<enum name='kAudioQueueErr_InvalidParameter' value64='-66682'/>
<enum name='kAudioQueueErr_InvalidProperty' value64='-66684'/>
<enum name='kAudioQueueErr_InvalidPropertySize' value64='-66683'/>
<enum name='kAudioQueueErr_InvalidPropertyValue' value64='-66675'/>
<enum name='kAudioQueueErr_InvalidQueueType' value64='-66677'/>
<enum name='kAudioQueueErr_InvalidRunState' value64='-66678'/>
<enum name='kAudioQueueErr_InvalidTapContext' value64='-66669'/>
<enum name='kAudioQueueErr_InvalidTapType' value64='-66667'/>
<enum name='kAudioQueueErr_Permissions' value64='-66676'/>
<enum name='kAudioQueueErr_PrimeTimedOut' value64='-66674'/>
<enum name='kAudioQueueErr_QueueInvalidated' value64='-66671'/>
<enum name='kAudioQueueErr_RecordUnderrun' value64='-66668'/>
<enum name='kAudioQueueErr_TooManyTaps' value64='-66670'/>
<enum name='kAudioQueueHardwareCodecPolicy_Default' value64='0'/>
<enum name='kAudioQueueHardwareCodecPolicy_PreferHardware' value64='4'/>
<enum name='kAudioQueueHardwareCodecPolicy_PreferSoftware' value64='3'/>
<enum name='kAudioQueueHardwareCodecPolicy_UseHardwareOnly' value64='2'/>
<enum name='kAudioQueueHardwareCodecPolicy_UseSoftwareOnly' value64='1'/>
<enum name='kAudioQueueParam_Pan' value64='13'/>
<enum name='kAudioQueueParam_Pitch' value64='3'/>
<enum name='kAudioQueueParam_PlayRate' value64='2'/>
<enum name='kAudioQueueParam_Volume' value64='1'/>
<enum name='kAudioQueueParam_VolumeRampTime' value64='4'/>
<enum name='kAudioQueueProcessingTap_EndOfStream' value64='512'/>
<enum name='kAudioQueueProcessingTap_PostEffects' value64='2'/>
<enum name='kAudioQueueProcessingTap_PreEffects' value64='1'/>
<enum name='kAudioQueueProcessingTap_Siphon' value64='4'/>
<enum name='kAudioQueueProcessingTap_StartOfStream' value64='256'/>
<enum name='kAudioQueueProperty_ChannelAssignments' value64='1634820961'/>
<enum name='kAudioQueueProperty_ChannelLayout' value64='1634820972'/>
<enum name='kAudioQueueProperty_ConverterError' value64='1902343781'/>
<enum name='kAudioQueueProperty_CurrentDevice' value64='1634820964'/>
<enum name='kAudioQueueProperty_CurrentLevelMeter' value64='1634823542'/>
<enum name='kAudioQueueProperty_CurrentLevelMeterDB' value64='1634823524'/>
<enum name='kAudioQueueProperty_DecodeBufferSizeFrames' value64='1684234854'/>
<enum name='kAudioQueueProperty_EnableLevelMetering' value64='1634823525'/>
<enum name='kAudioQueueProperty_EnableTimePitch' value64='1902081136'/>
<enum name='kAudioQueueProperty_HardwareCodecPolicy' value64='1634820976'/>
<enum name='kAudioQueueProperty_IsRunning' value64='1634824814'/>
<enum name='kAudioQueueProperty_MagicCookie' value64='1634823523'/>
<enum name='kAudioQueueProperty_MaximumOutputPacketSize' value64='2020569203'/>
<enum name='kAudioQueueProperty_StreamDescription' value64='1634821748'/>
<enum name='kAudioQueueProperty_TimePitchAlgorithm' value64='1903456353'/>
<enum name='kAudioQueueProperty_TimePitchBypass' value64='1903456354'/>
<enum name='kAudioQueueTimePitchAlgorithm_LowQualityZeroLatency' value64='1819376236'/>
<enum name='kAudioQueueTimePitchAlgorithm_Spectral' value64='1936745827'/>
<enum name='kAudioQueueTimePitchAlgorithm_TimeDomain' value64='1953064047'/>
<enum name='kAudioQueueTimePitchAlgorithm_Varispeed' value64='1987276900'/>
<enum name='kAudioServicesBadPropertySizeError' value64='561211770'/>
<enum name='kAudioServicesBadSpecifierSizeError' value64='561213539'/>
<enum name='kAudioServicesNoError' value64='0'/>
<enum name='kAudioServicesNoHardwareError' value64='1852794999'/>
<enum name='kAudioServicesPropertyCompletePlaybackIfAppDies' value64='1768318057'/>
<enum name='kAudioServicesPropertyIsUISound' value64='1769174377'/>
<enum name='kAudioServicesSystemSoundClientTimedOutError' value64='-1501'/>
<enum name='kAudioServicesSystemSoundExceededMaximumDurationError' value64='-1502'/>
<enum name='kAudioServicesSystemSoundUnspecifiedError' value64='-1500'/>
<enum name='kAudioServicesUnsupportedPropertyError' value64='1886681407'/>
<enum name='kAudioSessionAlreadyInitialized' value64='1768843636'/>
<enum name='kAudioSessionBadPropertySizeError' value64='561211770'/>
<enum name='kAudioSessionBeginInterruption' value64='1'/>
<enum name='kAudioSessionCategory_AmbientSound' value64='1634558569'/>
<enum name='kAudioSessionCategory_AudioProcessing' value64='1886547811'/>
<enum name='kAudioSessionCategory_LiveAudio' value64='1818850917'/>
<enum name='kAudioSessionCategory_MediaPlayback' value64='1835361385'/>
<enum name='kAudioSessionCategory_PlayAndRecord' value64='1886151026'/>
<enum name='kAudioSessionCategory_RecordAudio' value64='1919247201'/>
<enum name='kAudioSessionCategory_SoloAmbientSound' value64='1936682095'/>
<enum name='kAudioSessionCategory_UserInterfaceSoundEffects' value64='1969841784'/>
<enum name='kAudioSessionEndInterruption' value64='0'/>
<enum name='kAudioSessionIncompatibleCategory' value64='560161140'/>
<enum name='kAudioSessionInitializationError' value64='1768843583'/>
<enum name='kAudioSessionInterruptionType_ShouldNotResume' value64='561148781'/>
<enum name='kAudioSessionInterruptionType_ShouldResume' value64='1769108333'/>
<enum name='kAudioSessionMode_Default' value64='1684434036'/>
<enum name='kAudioSessionMode_GameChat' value64='1735222132'/>
<enum name='kAudioSessionMode_Measurement' value64='1836281204'/>
<enum name='kAudioSessionMode_VideoRecording' value64='1987208036'/>
<enum name='kAudioSessionMode_VoiceChat' value64='1986225012'/>
<enum name='kAudioSessionNoCategorySet' value64='1063477620'/>
<enum name='kAudioSessionNoError' value64='0'/>
<enum name='kAudioSessionNotActiveError' value64='560030580'/>
<enum name='kAudioSessionNotInitialized' value64='560557673'/>
<enum name='kAudioSessionOverrideAudioRoute_None' value64='0'/>
<enum name='kAudioSessionOverrideAudioRoute_Speaker' value64='1936747378'/>
<enum name='kAudioSessionProperty_AudioCategory' value64='1633902964'/>
<enum name='kAudioSessionProperty_AudioInputAvailable' value64='1634296182'/>
<enum name='kAudioSessionProperty_AudioRoute' value64='1919907188'/>
<enum name='kAudioSessionProperty_AudioRouteChange' value64='1919902568'/>
<enum name='kAudioSessionProperty_AudioRouteDescription' value64='1668440434'/>
<enum name='kAudioSessionProperty_CurrentHardwareIOBufferDuration' value64='1667785316'/>
<enum name='kAudioSessionProperty_CurrentHardwareInputLatency' value64='1667853428'/>
<enum name='kAudioSessionProperty_CurrentHardwareInputNumberChannels' value64='1667787107'/>
<enum name='kAudioSessionProperty_CurrentHardwareOutputLatency' value64='1668246644'/>
<enum name='kAudioSessionProperty_CurrentHardwareOutputNumberChannels' value64='1667788643'/>
<enum name='kAudioSessionProperty_CurrentHardwareOutputVolume' value64='1667788662'/>
<enum name='kAudioSessionProperty_CurrentHardwareSampleRate' value64='1667789682'/>
<enum name='kAudioSessionProperty_InputGainAvailable' value64='1768382838'/>
<enum name='kAudioSessionProperty_InputGainScalar' value64='1768387427'/>
<enum name='kAudioSessionProperty_InputSource' value64='1769173603'/>
<enum name='kAudioSessionProperty_InputSources' value64='1936876403'/>
<enum name='kAudioSessionProperty_InterruptionType' value64='1954115685'/>
<enum name='kAudioSessionProperty_Mode' value64='1836016741'/>
<enum name='kAudioSessionProperty_OtherAudioIsPlaying' value64='1869899890'/>
<enum name='kAudioSessionProperty_OtherMixableAudioShouldDuck' value64='1685414763'/>
<enum name='kAudioSessionProperty_OutputDestination' value64='1868854132'/>
<enum name='kAudioSessionProperty_OutputDestinations' value64='1685288051'/>
<enum name='kAudioSessionProperty_OverrideAudioRoute' value64='1870033508'/>
<enum name='kAudioSessionProperty_OverrideCategoryDefaultToSpeaker' value64='1668509803'/>
<enum name='kAudioSessionProperty_OverrideCategoryEnableBluetoothInput' value64='1667394677'/>
<enum name='kAudioSessionProperty_OverrideCategoryMixWithOthers' value64='1668114808'/>
<enum name='kAudioSessionProperty_PreferredHardwareIOBufferDuration' value64='1768907364'/>
<enum name='kAudioSessionProperty_PreferredHardwareSampleRate' value64='1752658802'/>
<enum name='kAudioSessionProperty_ServerDied' value64='1684628836'/>
<enum name='kAudioSessionRouteChangeReason_CategoryChange' value64='3'/>
<enum name='kAudioSessionRouteChangeReason_NewDeviceAvailable' value64='1'/>
<enum name='kAudioSessionRouteChangeReason_NoSuitableRouteForCategory' value64='7'/>
<enum name='kAudioSessionRouteChangeReason_OldDeviceUnavailable' value64='2'/>
<enum name='kAudioSessionRouteChangeReason_Override' value64='4'/>
<enum name='kAudioSessionRouteChangeReason_RouteConfigurationChange' value64='8'/>
<enum name='kAudioSessionRouteChangeReason_Unknown' value64='0'/>
<enum name='kAudioSessionRouteChangeReason_WakeFromSleep' value64='6'/>
<enum name='kAudioSessionSetActiveFlag_NotifyOthersOnDeactivation' value64='1'/>
<enum name='kAudioSessionUnspecifiedError' value64='2003329396'/>
<enum name='kAudioSessionUnsupportedPropertyError' value64='1886681407'/>
<enum name='kAudioSettingsFlags_ExpertParameter' value64='1'/>
<enum name='kAudioSettingsFlags_InvisibleParameter' value64='2'/>
<enum name='kAudioSettingsFlags_MetaParameter' value64='4'/>
<enum name='kAudioSettingsFlags_UserInterfaceParameter' value64='8'/>
<enum name='kAudioToolboxErr_CannotDoInCurrentContext' value64='-10863'/>
<enum name='kAudioToolboxErr_EndOfTrack' value64='-10857'/>
<enum name='kAudioToolboxErr_IllegalTrackDestination' value64='-10855'/>
<enum name='kAudioToolboxErr_InvalidEventType' value64='-10853'/>
<enum name='kAudioToolboxErr_InvalidPlayerState' value64='-10852'/>
<enum name='kAudioToolboxErr_InvalidSequenceType' value64='-10846'/>
<enum name='kAudioToolboxErr_NoSequence' value64='-10854'/>
<enum name='kAudioToolboxErr_StartOfTrack' value64='-10856'/>
<enum name='kAudioToolboxErr_TrackIndexError' value64='-10859'/>
<enum name='kAudioToolboxErr_TrackNotFound' value64='-10858'/>
<enum name='kAudioToolboxError_NoTrackDestination' value64='-66720'/>
<enum name='kAudioUnitAddPropertyListenerSelect' value64='10'/>
<enum name='kAudioUnitAddRenderNotifySelect' value64='15'/>
<enum name='kAudioUnitClumpID_System' value64='0'/>
<enum name='kAudioUnitComplexRenderSelect' value64='19'/>
<enum name='kAudioUnitErr_CannotDoInCurrentContext' value64='-10863'/>
<enum name='kAudioUnitErr_ExtensionNotFound' value64='-66744'/>
<enum name='kAudioUnitErr_FailedInitialization' value64='-10875'/>
<enum name='kAudioUnitErr_FileNotSpecified' value64='-10869'/>
<enum name='kAudioUnitErr_FormatNotSupported' value64='-10868'/>
<enum name='kAudioUnitErr_IllegalInstrument' value64='-10873'/>
<enum name='kAudioUnitErr_Initialized' value64='-10849'/>
<enum name='kAudioUnitErr_InstrumentTypeNotFound' value64='-10872'/>
<enum name='kAudioUnitErr_InvalidElement' value64='-10877'/>
<enum name='kAudioUnitErr_InvalidFile' value64='-10871'/>
<enum name='kAudioUnitErr_InvalidFilePath' value64='-66742'/>
<enum name='kAudioUnitErr_InvalidOfflineRender' value64='-10848'/>
<enum name='kAudioUnitErr_InvalidParameter' value64='-10878'/>
<enum name='kAudioUnitErr_InvalidParameterValue' value64='-66743'/>
<enum name='kAudioUnitErr_InvalidProperty' value64='-10879'/>
<enum name='kAudioUnitErr_InvalidPropertyValue' value64='-10851'/>
<enum name='kAudioUnitErr_InvalidScope' value64='-10866'/>
<enum name='kAudioUnitErr_MIDIOutputBufferFull' value64='-66753'/>
<enum name='kAudioUnitErr_MissingKey' value64='-66741'/>
<enum name='kAudioUnitErr_NoConnection' value64='-10876'/>
<enum name='kAudioUnitErr_PropertyNotInUse' value64='-10850'/>
<enum name='kAudioUnitErr_PropertyNotWritable' value64='-10865'/>
<enum name='kAudioUnitErr_RenderTimeout' value64='-66745'/>
<enum name='kAudioUnitErr_TooManyFramesToProcess' value64='-10874'/>
<enum name='kAudioUnitErr_Unauthorized' value64='-10847'/>
<enum name='kAudioUnitErr_Uninitialized' value64='-10867'/>
<enum name='kAudioUnitErr_UnknownFileType' value64='-10870'/>
<enum name='kAudioUnitGetParameterSelect' value64='6'/>
<enum name='kAudioUnitGetPropertyInfoSelect' value64='3'/>
<enum name='kAudioUnitGetPropertySelect' value64='4'/>
<enum name='kAudioUnitInitializeSelect' value64='1'/>
<enum name='kAudioUnitManufacturer_Apple' value64='1634758764'/>
<enum name='kAudioUnitParameterFlag_CFNameRelease' value64='16'/>
<enum name='kAudioUnitParameterFlag_CanRamp' value64='33554432'/>
<enum name='kAudioUnitParameterFlag_DisplayCubeRoot' value64='262144'/>
<enum name='kAudioUnitParameterFlag_DisplayCubed' value64='196608'/>
<enum name='kAudioUnitParameterFlag_DisplayExponential' value64='327680'/>
<enum name='kAudioUnitParameterFlag_DisplayLogarithmic' value64='4194304'/>
<enum name='kAudioUnitParameterFlag_DisplayMask' value64='4653056'/>
<enum name='kAudioUnitParameterFlag_DisplaySquareRoot' value64='65536'/>
<enum name='kAudioUnitParameterFlag_DisplaySquared' value64='131072'/>
<enum name='kAudioUnitParameterFlag_ExpertMode' value64='67108864'/>
<enum name='kAudioUnitParameterFlag_HasCFNameString' value64='134217728'/>
<enum name='kAudioUnitParameterFlag_HasClump' value64='1048576'/>
<enum name='kAudioUnitParameterFlag_IsElementMeta' value64='536870912'/>
<enum name='kAudioUnitParameterFlag_IsGlobalMeta' value64='268435456'/>
<enum name='kAudioUnitParameterFlag_IsHighResolution' value64='8388608'/>
<enum name='kAudioUnitParameterFlag_IsReadable' value64='1073741824'/>
<enum name='kAudioUnitParameterFlag_IsWritable' value64='2147483648'/>
<enum name='kAudioUnitParameterFlag_MeterReadOnly' value64='32768'/>
<enum name='kAudioUnitParameterFlag_NonRealTime' value64='16777216'/>
<enum name='kAudioUnitParameterFlag_OmitFromPresets' value64='8192'/>
<enum name='kAudioUnitParameterFlag_PlotHistory' value64='16384'/>
<enum name='kAudioUnitParameterFlag_ValuesHaveStrings' value64='2097152'/>
<enum name='kAudioUnitParameterName_Full' value64='-1'/>
<enum name='kAudioUnitParameterUnit_AbsoluteCents' value64='20'/>
<enum name='kAudioUnitParameterUnit_BPM' value64='22'/>
<enum name='kAudioUnitParameterUnit_Beats' value64='23'/>
<enum name='kAudioUnitParameterUnit_Boolean' value64='2'/>
<enum name='kAudioUnitParameterUnit_Cents' value64='9'/>
<enum name='kAudioUnitParameterUnit_CustomUnit' value64='26'/>
<enum name='kAudioUnitParameterUnit_Decibels' value64='13'/>
<enum name='kAudioUnitParameterUnit_Degrees' value64='15'/>
<enum name='kAudioUnitParameterUnit_EqualPowerCrossfade' value64='16'/>
<enum name='kAudioUnitParameterUnit_Generic' value64='0'/>
<enum name='kAudioUnitParameterUnit_Hertz' value64='8'/>
<enum name='kAudioUnitParameterUnit_Indexed' value64='1'/>
<enum name='kAudioUnitParameterUnit_LinearGain' value64='14'/>
<enum name='kAudioUnitParameterUnit_MIDIController' value64='12'/>
<enum name='kAudioUnitParameterUnit_MIDINoteNumber' value64='11'/>
<enum name='kAudioUnitParameterUnit_Meters' value64='19'/>
<enum name='kAudioUnitParameterUnit_Milliseconds' value64='24'/>
<enum name='kAudioUnitParameterUnit_MixerFaderCurve1' value64='17'/>
<enum name='kAudioUnitParameterUnit_Octaves' value64='21'/>
<enum name='kAudioUnitParameterUnit_Pan' value64='18'/>
<enum name='kAudioUnitParameterUnit_Percent' value64='3'/>
<enum name='kAudioUnitParameterUnit_Phase' value64='6'/>
<enum name='kAudioUnitParameterUnit_Rate' value64='7'/>
<enum name='kAudioUnitParameterUnit_Ratio' value64='25'/>
<enum name='kAudioUnitParameterUnit_RelativeSemiTones' value64='10'/>
<enum name='kAudioUnitParameterUnit_SampleFrames' value64='5'/>
<enum name='kAudioUnitParameterUnit_Seconds' value64='4'/>
<enum name='kAudioUnitProcessMultipleSelect' value64='21'/>
<enum name='kAudioUnitProcessSelect' value64='20'/>
<enum name='kAudioUnitProperty_3DMixerAttenuationCurve' value64='3013'/>
<enum name='kAudioUnitProperty_3DMixerDistanceAtten' value64='3004'/>
<enum name='kAudioUnitProperty_3DMixerDistanceParams' value64='3010'/>
<enum name='kAudioUnitProperty_3DMixerRenderingFlags' value64='3003'/>
<enum name='kAudioUnitProperty_AudioChannelLayout' value64='19'/>
<enum name='kAudioUnitProperty_BypassEffect' value64='21'/>
<enum name='kAudioUnitProperty_CPULoad' value64='6'/>
<enum name='kAudioUnitProperty_ClassInfo' value64='0'/>
<enum name='kAudioUnitProperty_ClassInfoFromDocument' value64='50'/>
<enum name='kAudioUnitProperty_ContextName' value64='25'/>
<enum name='kAudioUnitProperty_CurrentPlayTime' value64='3302'/>
<enum name='kAudioUnitProperty_DeferredRendererExtraLatency' value64='3321'/>
<enum name='kAudioUnitProperty_DeferredRendererPullSize' value64='3320'/>
<enum name='kAudioUnitProperty_DeferredRendererWaitFrames' value64='3322'/>
<enum name='kAudioUnitProperty_DependentParameters' value64='45'/>
<enum name='kAudioUnitProperty_DopplerShift' value64='3002'/>
<enum name='kAudioUnitProperty_ElementCount' value64='11'/>
<enum name='kAudioUnitProperty_ElementName' value64='30'/>
<enum name='kAudioUnitProperty_FactoryPresets' value64='24'/>
<enum name='kAudioUnitProperty_FrequencyResponse' value64='52'/>
<enum name='kAudioUnitProperty_HostCallbacks' value64='27'/>
<enum name='kAudioUnitProperty_InPlaceProcessing' value64='29'/>
<enum name='kAudioUnitProperty_InputAnchorTimeStamp' value64='3016'/>
<enum name='kAudioUnitProperty_InputSamplesInOutput' value64='49'/>
<enum name='kAudioUnitProperty_IsInterAppConnected' value64='101'/>
<enum name='kAudioUnitProperty_LastRenderError' value64='22'/>
<enum name='kAudioUnitProperty_Latency' value64='12'/>
<enum name='kAudioUnitProperty_MIDIOutputCallback' value64='48'/>
<enum name='kAudioUnitProperty_MIDIOutputCallbackInfo' value64='47'/>
<enum name='kAudioUnitProperty_MakeConnection' value64='1'/>
<enum name='kAudioUnitProperty_MatrixDimensions' value64='3009'/>
<enum name='kAudioUnitProperty_MatrixLevels' value64='3006'/>
<enum name='kAudioUnitProperty_MaximumFramesPerSlice' value64='14'/>
<enum name='kAudioUnitProperty_MeterClipping' value64='3011'/>
<enum name='kAudioUnitProperty_MeteringMode' value64='3007'/>
<enum name='kAudioUnitProperty_NickName' value64='54'/>
<enum name='kAudioUnitProperty_OfflineRender' value64='37'/>
<enum name='kAudioUnitProperty_ParameterClumpName' value64='35'/>
<enum name='kAudioUnitProperty_ParameterHistoryInfo' value64='53'/>
<enum name='kAudioUnitProperty_ParameterIDName' value64='34'/>
<enum name='kAudioUnitProperty_ParameterInfo' value64='4'/>
<enum name='kAudioUnitProperty_ParameterList' value64='3'/>
<enum name='kAudioUnitProperty_ParameterStringFromValue' value64='33'/>
<enum name='kAudioUnitProperty_ParameterValueFromString' value64='38'/>
<enum name='kAudioUnitProperty_ParameterValueStrings' value64='16'/>
<enum name='kAudioUnitProperty_ParametersForOverview' value64='57'/>
<enum name='kAudioUnitProperty_PeerURL' value64='102'/>
<enum name='kAudioUnitProperty_PresentPreset' value64='36'/>
<enum name='kAudioUnitProperty_PresentationLatency' value64='40'/>
<enum name='kAudioUnitProperty_RemoteControlEventListener' value64='100'/>
<enum name='kAudioUnitProperty_RenderContextObserver' value64='60'/>
<enum name='kAudioUnitProperty_RenderQuality' value64='26'/>
<enum name='kAudioUnitProperty_RequestViewController' value64='56'/>
<enum name='kAudioUnitProperty_ReverbPreset' value64='3012'/>
<enum name='kAudioUnitProperty_ReverbRoomType' value64='10'/>
<enum name='kAudioUnitProperty_SampleRate' value64='2'/>
<enum name='kAudioUnitProperty_SampleRateConverterComplexity' value64='3014'/>
<enum name='kAudioUnitProperty_ScheduleAudioSlice' value64='3300'/>
<enum name='kAudioUnitProperty_ScheduleStartTimeStamp' value64='3301'/>
<enum name='kAudioUnitProperty_ScheduledFileBufferSizeFrames' value64='3313'/>
<enum name='kAudioUnitProperty_ScheduledFileIDs' value64='3310'/>
<enum name='kAudioUnitProperty_ScheduledFileNumberBuffers' value64='3314'/>
<enum name='kAudioUnitProperty_ScheduledFilePrime' value64='3312'/>
<enum name='kAudioUnitProperty_ScheduledFileRegion' value64='3311'/>
<enum name='kAudioUnitProperty_SetRenderCallback' value64='23'/>
<enum name='kAudioUnitProperty_ShouldAllocateBuffer' value64='51'/>
<enum name='kAudioUnitProperty_SpatialMixerAttenuationCurve' value64='3013'/>
<enum name='kAudioUnitProperty_SpatialMixerDistanceParams' value64='3010'/>
<enum name='kAudioUnitProperty_SpatialMixerOutputType' value64='3100'/>
<enum name='kAudioUnitProperty_SpatialMixerPointSourceInHeadMode' value64='3103'/>
<enum name='kAudioUnitProperty_SpatialMixerRenderingFlags' value64='3003'/>
<enum name='kAudioUnitProperty_SpatialMixerSourceMode' value64='3005'/>
<enum name='kAudioUnitProperty_SpatializationAlgorithm' value64='3000'/>
<enum name='kAudioUnitProperty_StreamFormat' value64='8'/>
<enum name='kAudioUnitProperty_SupportedChannelLayoutTags' value64='32'/>
<enum name='kAudioUnitProperty_SupportedNumChannels' value64='13'/>
<enum name='kAudioUnitProperty_SupportsMPE' value64='58'/>
<enum name='kAudioUnitProperty_TailTime' value64='20'/>
<enum name='kAudioUnitProperty_UsesInternalReverb' value64='1005'/>
<enum name='kAudioUnitRange' value64='0'/>
<enum name='kAudioUnitRemoteControlEvent_Rewind' value64='3'/>
<enum name='kAudioUnitRemoteControlEvent_TogglePlayPause' value64='1'/>
<enum name='kAudioUnitRemoteControlEvent_ToggleRecord' value64='2'/>
<enum name='kAudioUnitRemovePropertyListenerSelect' value64='11'/>
<enum name='kAudioUnitRemovePropertyListenerWithUserDataSelect' value64='18'/>
<enum name='kAudioUnitRemoveRenderNotifySelect' value64='16'/>
<enum name='kAudioUnitRenderAction_DoNotCheckRenderArgs' value64='512'/>
<enum name='kAudioUnitRenderAction_OutputIsSilence' value64='16'/>
<enum name='kAudioUnitRenderAction_PostRender' value64='8'/>
<enum name='kAudioUnitRenderAction_PostRenderError' value64='256'/>
<enum name='kAudioUnitRenderAction_PreRender' value64='4'/>
<enum name='kAudioUnitRenderSelect' value64='14'/>
<enum name='kAudioUnitResetSelect' value64='9'/>
<enum name='kAudioUnitSampleRateConverterComplexity_Linear' value64='1818848869'/>
<enum name='kAudioUnitSampleRateConverterComplexity_Mastering' value64='1650553971'/>
<enum name='kAudioUnitSampleRateConverterComplexity_Normal' value64='1852797549'/>
<enum name='kAudioUnitScheduleParametersSelect' value64='17'/>
<enum name='kAudioUnitScope_Global' value64='0'/>
<enum name='kAudioUnitScope_Group' value64='3'/>
<enum name='kAudioUnitScope_Input' value64='1'/>
<enum name='kAudioUnitScope_Layer' value64='6'/>
<enum name='kAudioUnitScope_LayerItem' value64='7'/>
<enum name='kAudioUnitScope_Note' value64='5'/>
<enum name='kAudioUnitScope_Output' value64='2'/>
<enum name='kAudioUnitScope_Part' value64='4'/>
<enum name='kAudioUnitSetParameterSelect' value64='7'/>
<enum name='kAudioUnitSetPropertySelect' value64='5'/>
<enum name='kAudioUnitSubType_AU3DMixerEmbedded' value64='862217581'/>
<enum name='kAudioUnitSubType_AUConverter' value64='1668247158'/>
<enum name='kAudioUnitSubType_AUiPodEQ' value64='1768973681'/>
<enum name='kAudioUnitSubType_AUiPodTime' value64='1768977517'/>
<enum name='kAudioUnitSubType_AUiPodTimeOther' value64='1768977519'/>
<enum name='kAudioUnitSubType_AudioFilePlayer' value64='1634103404'/>
<enum name='kAudioUnitSubType_BandPassFilter' value64='1651532147'/>
<enum name='kAudioUnitSubType_DeferredRenderer' value64='1684366962'/>
<enum name='kAudioUnitSubType_Delay' value64='1684368505'/>
<enum name='kAudioUnitSubType_Distortion' value64='1684632436'/>
<enum name='kAudioUnitSubType_DynamicsProcessor' value64='1684237680'/>
<enum name='kAudioUnitSubType_GenericOutput' value64='1734700658'/>
<enum name='kAudioUnitSubType_HighPassFilter' value64='1752195443'/>
<enum name='kAudioUnitSubType_HighShelfFilter' value64='1752393830'/>
<enum name='kAudioUnitSubType_LowPassFilter' value64='1819304307'/>
<enum name='kAudioUnitSubType_LowShelfFilter' value64='1819502694'/>
<enum name='kAudioUnitSubType_MIDISynth' value64='1836284270'/>
<enum name='kAudioUnitSubType_MatrixMixer' value64='1836608888'/>
<enum name='kAudioUnitSubType_Merger' value64='1835364967'/>
<enum name='kAudioUnitSubType_MultiChannelMixer' value64='1835232632'/>
<enum name='kAudioUnitSubType_MultiSplitter' value64='1836281964'/>
<enum name='kAudioUnitSubType_NBandEQ' value64='1851942257'/>
<enum name='kAudioUnitSubType_NewTimePitch' value64='1853191280'/>
<enum name='kAudioUnitSubType_ParametricEQ' value64='1886217585'/>
<enum name='kAudioUnitSubType_PeakLimiter' value64='1819112562'/>
<enum name='kAudioUnitSubType_RemoteIO' value64='1919512419'/>
<enum name='kAudioUnitSubType_Reverb2' value64='1920361010'/>
<enum name='kAudioUnitSubType_RoundTripAAC' value64='1918984547'/>
<enum name='kAudioUnitSubType_SampleDelay' value64='1935961209'/>
<enum name='kAudioUnitSubType_Sampler' value64='1935764848'/>
<enum name='kAudioUnitSubType_ScheduledSoundPlayer' value64='1936945260'/>
<enum name='kAudioUnitSubType_SpatialMixer' value64='862217581'/>
<enum name='kAudioUnitSubType_Splitter' value64='1936747636'/>
<enum name='kAudioUnitSubType_Varispeed' value64='1986097769'/>
<enum name='kAudioUnitSubType_VoiceProcessingIO' value64='1987078511'/>
<enum name='kAudioUnitType_Effect' value64='1635083896'/>
<enum name='kAudioUnitType_FormatConverter' value64='1635083875'/>
<enum name='kAudioUnitType_Generator' value64='1635084142'/>
<enum name='kAudioUnitType_MIDIProcessor' value64='1635085673'/>
<enum name='kAudioUnitType_Mixer' value64='1635085688'/>
<enum name='kAudioUnitType_MusicDevice' value64='1635085685'/>
<enum name='kAudioUnitType_MusicEffect' value64='1635085670'/>
<enum name='kAudioUnitType_OfflineEffect' value64='1635086188'/>
<enum name='kAudioUnitType_Output' value64='1635086197'/>
<enum name='kAudioUnitType_Panner' value64='1635086446'/>
<enum name='kAudioUnitType_RemoteEffect' value64='1635086968'/>
<enum name='kAudioUnitType_RemoteGenerator' value64='1635086951'/>
<enum name='kAudioUnitType_RemoteInstrument' value64='1635086953'/>
<enum name='kAudioUnitType_RemoteMusicEffect' value64='1635086957'/>
<enum name='kAudioUnitUninitializeSelect' value64='2'/>
<enum name='kBandpassParam_Bandwidth' value64='1'/>
<enum name='kBandpassParam_CenterFrequency' value64='0'/>
<enum name='kBytePacketTranslationFlag_IsEstimate' value64='1'/>
<enum name='kCAFLinearPCMFormatFlagIsFloat' value64='1'/>
<enum name='kCAFLinearPCMFormatFlagIsLittleEndian' value64='2'/>
<enum name='kCAFMarkerChunkHdrSize' value64='8'/>
<enum name='kCAFMarkerType_EditDestinationBegin' value64='1684170087'/>
<enum name='kCAFMarkerType_EditDestinationEnd' value64='1684368996'/>
<enum name='kCAFMarkerType_EditSourceBegin' value64='1667392871'/>
<enum name='kCAFMarkerType_EditSourceEnd' value64='1667591780'/>
<enum name='kCAFMarkerType_Generic' value64='0'/>
<enum name='kCAFMarkerType_Index' value64='1768842360'/>
<enum name='kCAFMarkerType_KeySignature' value64='1802725735'/>
<enum name='kCAFMarkerType_ProgramEnd' value64='1885695588'/>
<enum name='kCAFMarkerType_ProgramStart' value64='1885496679'/>
<enum name='kCAFMarkerType_RegionEnd' value64='1919250020'/>
<enum name='kCAFMarkerType_RegionStart' value64='1919051111'/>
<enum name='kCAFMarkerType_RegionSyncPoint' value64='1920170339'/>
<enum name='kCAFMarkerType_ReleaseLoopEnd' value64='1919706478'/>
<enum name='kCAFMarkerType_ReleaseLoopStart' value64='1919705703'/>
<enum name='kCAFMarkerType_SavedPlayPosition' value64='1936747641'/>
<enum name='kCAFMarkerType_SelectionEnd' value64='1936027236'/>
<enum name='kCAFMarkerType_SelectionStart' value64='1935828327'/>
<enum name='kCAFMarkerType_SustainLoopEnd' value64='1936483694'/>
<enum name='kCAFMarkerType_SustainLoopStart' value64='1936482919'/>
<enum name='kCAFMarkerType_Tempo' value64='1953329263'/>
<enum name='kCAFMarkerType_TimeSignature' value64='1953720679'/>
<enum name='kCAFMarkerType_TrackEnd' value64='1952804452'/>
<enum name='kCAFMarkerType_TrackStart' value64='1952605543'/>
<enum name='kCAFRegionChunkHdrSize' value64='8'/>
<enum name='kCAFRegionFlag_LoopEnable' value64='1'/>
<enum name='kCAFRegionFlag_PlayBackward' value64='4'/>
<enum name='kCAFRegionFlag_PlayForward' value64='2'/>
<enum name='kCAF_AudioDataChunkID' value64='1684108385'/>
<enum name='kCAF_ChannelLayoutChunkID' value64='1667785070'/>
<enum name='kCAF_EditCommentsChunkID' value64='1701077876'/>
<enum name='kCAF_FileType' value64='1667327590'/>
<enum name='kCAF_FileVersion_Initial' value64='1'/>
<enum name='kCAF_FillerChunkID' value64='1718773093'/>
<enum name='kCAF_FormatListID' value64='1818522467'/>
<enum name='kCAF_InfoStringsChunkID' value64='1768842863'/>
<enum name='kCAF_InstrumentChunkID' value64='1768846196'/>
<enum name='kCAF_MIDIChunkID' value64='1835623529'/>
<enum name='kCAF_MagicCookieID' value64='1802857321'/>
<enum name='kCAF_MarkerChunkID' value64='1835102827'/>
<enum name='kCAF_OverviewChunkID' value64='1870034551'/>
<enum name='kCAF_PacketTableChunkID' value64='1885432692'/>
<enum name='kCAF_PeakChunkID' value64='1885692267'/>
<enum name='kCAF_RegionChunkID' value64='1919248238'/>
<enum name='kCAF_SMPTE_TimeType2398' value64='12'/>
<enum name='kCAF_SMPTE_TimeType24' value64='1'/>
<enum name='kCAF_SMPTE_TimeType25' value64='2'/>
<enum name='kCAF_SMPTE_TimeType2997' value64='5'/>
<enum name='kCAF_SMPTE_TimeType2997Drop' value64='6'/>
<enum name='kCAF_SMPTE_TimeType30' value64='4'/>
<enum name='kCAF_SMPTE_TimeType30Drop' value64='3'/>
<enum name='kCAF_SMPTE_TimeType50' value64='11'/>
<enum name='kCAF_SMPTE_TimeType5994' value64='8'/>
<enum name='kCAF_SMPTE_TimeType5994Drop' value64='10'/>
<enum name='kCAF_SMPTE_TimeType60' value64='7'/>
<enum name='kCAF_SMPTE_TimeType60Drop' value64='9'/>
<enum name='kCAF_SMPTE_TimeTypeNone' value64='0'/>
<enum name='kCAF_StreamDescriptionChunkID' value64='1684370275'/>
<enum name='kCAF_StringsChunkID' value64='1937011303'/>
<enum name='kCAF_UMIDChunkID' value64='1970104676'/>
<enum name='kCAF_UUIDChunkID' value64='1970628964'/>
<enum name='kCAF_iXMLChunkID' value64='1767394636'/>
<enum name='kConverterPrimeMethod_None' value64='2'/>
<enum name='kConverterPrimeMethod_Normal' value64='1'/>
<enum name='kConverterPrimeMethod_Pre' value64='0'/>
<enum name='kDelayParam_DelayTime' value64='1'/>
<enum name='kDelayParam_Feedback' value64='2'/>
<enum name='kDelayParam_LopassCutoff' value64='3'/>
<enum name='kDelayParam_WetDryMix' value64='0'/>
<enum name='kDistortionParam_CubicTerm' value64='8'/>
<enum name='kDistortionParam_Decay' value64='1'/>
<enum name='kDistortionParam_Decimation' value64='3'/>
<enum name='kDistortionParam_DecimationMix' value64='5'/>
<enum name='kDistortionParam_Delay' value64='0'/>
<enum name='kDistortionParam_DelayMix' value64='2'/>
<enum name='kDistortionParam_FinalMix' value64='15'/>
<enum name='kDistortionParam_LinearTerm' value64='6'/>
<enum name='kDistortionParam_PolynomialMix' value64='9'/>
<enum name='kDistortionParam_RingModBalance' value64='12'/>
<enum name='kDistortionParam_RingModFreq1' value64='10'/>
<enum name='kDistortionParam_RingModFreq2' value64='11'/>
<enum name='kDistortionParam_RingModMix' value64='13'/>
<enum name='kDistortionParam_Rounding' value64='4'/>
<enum name='kDistortionParam_SoftClipGain' value64='14'/>
<enum name='kDistortionParam_SquaredTerm' value64='7'/>
<enum name='kDynamicRangeControlMode_Heavy' value64='2'/>
<enum name='kDynamicRangeControlMode_Light' value64='1'/>
<enum name='kDynamicRangeControlMode_None' value64='0'/>
<enum name='kDynamicsProcessorParam_AttackTime' value64='4'/>
<enum name='kDynamicsProcessorParam_CompressionAmount' value64='1000'/>
<enum name='kDynamicsProcessorParam_ExpansionRatio' value64='2'/>
<enum name='kDynamicsProcessorParam_ExpansionThreshold' value64='3'/>
<enum name='kDynamicsProcessorParam_HeadRoom' value64='1'/>
<enum name='kDynamicsProcessorParam_InputAmplitude' value64='2000'/>
<enum name='kDynamicsProcessorParam_MasterGain' value64='6'/>
<enum name='kDynamicsProcessorParam_OutputAmplitude' value64='3000'/>
<enum name='kDynamicsProcessorParam_ReleaseTime' value64='5'/>
<enum name='kDynamicsProcessorParam_Threshold' value64='0'/>
<enum name='kExtAudioFileError_AsyncWriteBufferOverflow' value64='-66570'/>
<enum name='kExtAudioFileError_AsyncWriteTooLarge' value64='-66569'/>
<enum name='kExtAudioFileError_CodecUnavailableInputConsumed' value64='-66559'/>
<enum name='kExtAudioFileError_CodecUnavailableInputNotConsumed' value64='-66560'/>
<enum name='kExtAudioFileError_InvalidChannelMap' value64='-66564'/>
<enum name='kExtAudioFileError_InvalidDataFormat' value64='-66566'/>
<enum name='kExtAudioFileError_InvalidOperationOrder' value64='-66565'/>
<enum name='kExtAudioFileError_InvalidProperty' value64='-66561'/>
<enum name='kExtAudioFileError_InvalidPropertySize' value64='-66562'/>
<enum name='kExtAudioFileError_InvalidSeek' value64='-66568'/>
<enum name='kExtAudioFileError_MaxPacketSizeUnknown' value64='-66567'/>
<enum name='kExtAudioFileError_NonPCMClientFormat' value64='-66563'/>
<enum name='kExtAudioFilePacketTableInfoOverride_UseFileValue' value64='-1'/>
<enum name='kExtAudioFilePacketTableInfoOverride_UseFileValueIfValid' value64='-2'/>
<enum name='kExtAudioFileProperty_AudioConverter' value64='1633906294'/>
<enum name='kExtAudioFileProperty_AudioFile' value64='1634101612'/>
<enum name='kExtAudioFileProperty_ClientChannelLayout' value64='1667460207'/>
<enum name='kExtAudioFileProperty_ClientDataFormat' value64='1667657076'/>
<enum name='kExtAudioFileProperty_ClientMaxPacketSize' value64='1668116595'/>
<enum name='kExtAudioFileProperty_CodecManufacturer' value64='1668112750'/>
<enum name='kExtAudioFileProperty_ConverterConfig' value64='1633903462'/>
<enum name='kExtAudioFileProperty_FileChannelLayout' value64='1717791855'/>
<enum name='kExtAudioFileProperty_FileDataFormat' value64='1717988724'/>
<enum name='kExtAudioFileProperty_FileLengthFrames' value64='593916525'/>
<enum name='kExtAudioFileProperty_FileMaxPacketSize' value64='1718448243'/>
<enum name='kExtAudioFileProperty_IOBuffer' value64='1768907366'/>
<enum name='kExtAudioFileProperty_IOBufferSizeBytes' value64='1768907379'/>
<enum name='kExtAudioFileProperty_PacketTable' value64='2020635753'/>
<enum name='kHALOutputParam_Volume' value64='14'/>
<enum name='kHighShelfParam_CutOffFrequency' value64='0'/>
<enum name='kHighShelfParam_Gain' value64='1'/>
<enum name='kHintAdvanced' value64='1'/>
<enum name='kHintBasic' value64='0'/>
<enum name='kHintHidden' value64='2'/>
<enum name='kHipassParam_CutoffFrequency' value64='0'/>
<enum name='kHipassParam_Resonance' value64='1'/>
<enum name='kInstrumentType_AUPreset' value64='2'/>
<enum name='kInstrumentType_Audiofile' value64='3'/>
<enum name='kInstrumentType_DLSPreset' value64='1'/>
<enum name='kInstrumentType_EXS24' value64='4'/>
<enum name='kInstrumentType_SF2Preset' value64='1'/>
<enum name='kLimiterParam_AttackTime' value64='0'/>
<enum name='kLimiterParam_DecayTime' value64='1'/>
<enum name='kLimiterParam_PreGain' value64='2'/>
<enum name='kLowPassParam_CutoffFrequency' value64='0'/>
<enum name='kLowPassParam_Resonance' value64='1'/>
<enum name='kMatrixMixerParam_Enable' value64='1'/>
<enum name='kMatrixMixerParam_PostAveragePower' value64='3000'/>
<enum name='kMatrixMixerParam_PostAveragePowerLinear' value64='7000'/>
<enum name='kMatrixMixerParam_PostPeakHoldLevel' value64='4000'/>
<enum name='kMatrixMixerParam_PostPeakHoldLevelLinear' value64='8000'/>
<enum name='kMatrixMixerParam_PreAveragePower' value64='1000'/>
<enum name='kMatrixMixerParam_PreAveragePowerLinear' value64='5000'/>
<enum name='kMatrixMixerParam_PrePeakHoldLevel' value64='2000'/>
<enum name='kMatrixMixerParam_PrePeakHoldLevelLinear' value64='6000'/>
<enum name='kMatrixMixerParam_Volume' value64='0'/>
<enum name='kMultiChannelMixerParam_Enable' value64='1'/>
<enum name='kMultiChannelMixerParam_Pan' value64='2'/>
<enum name='kMultiChannelMixerParam_PostAveragePower' value64='3000'/>
<enum name='kMultiChannelMixerParam_PostPeakHoldLevel' value64='4000'/>
<enum name='kMultiChannelMixerParam_PreAveragePower' value64='1000'/>
<enum name='kMultiChannelMixerParam_PrePeakHoldLevel' value64='2000'/>
<enum name='kMultiChannelMixerParam_Volume' value64='0'/>
<enum name='kMusicDeviceMIDIEventSelect' value64='257'/>
<enum name='kMusicDevicePrepareInstrumentSelect' value64='259'/>
<enum name='kMusicDeviceProperty_BankName' value64='1007'/>
<enum name='kMusicDeviceProperty_InstrumentCount' value64='1000'/>
<enum name='kMusicDeviceProperty_InstrumentName' value64='1001'/>
<enum name='kMusicDeviceProperty_InstrumentNumber' value64='1004'/>
<enum name='kMusicDeviceProperty_SoundBankURL' value64='1100'/>
<enum name='kMusicDeviceRange' value64='256'/>
<enum name='kMusicDeviceReleaseInstrumentSelect' value64='260'/>
<enum name='kMusicDeviceStartNoteSelect' value64='261'/>
<enum name='kMusicDeviceStopNoteSelect' value64='262'/>
<enum name='kMusicDeviceSysExSelect' value64='258'/>
<enum name='kMusicEventType_AUPreset' value64='10'/>
<enum name='kMusicEventType_ExtendedNote' value64='1'/>
<enum name='kMusicEventType_ExtendedTempo' value64='3'/>
<enum name='kMusicEventType_MIDIChannelMessage' value64='7'/>
<enum name='kMusicEventType_MIDINoteMessage' value64='6'/>
<enum name='kMusicEventType_MIDIRawData' value64='8'/>
<enum name='kMusicEventType_Meta' value64='5'/>
<enum name='kMusicEventType_NULL' value64='0'/>
<enum name='kMusicEventType_Parameter' value64='9'/>
<enum name='kMusicEventType_User' value64='4'/>
<enum name='kMusicNoteEvent_Unused' value64='4294967295'/>
<enum name='kMusicNoteEvent_UseGroupInstrument' value64='4294967295'/>
<enum name='kMusicSequenceFileFlags_Default' value64='0'/>
<enum name='kMusicSequenceFileFlags_EraseFile' value64='1'/>
<enum name='kMusicSequenceFile_AnyType' value64='0'/>
<enum name='kMusicSequenceFile_MIDIType' value64='1835623529'/>
<enum name='kMusicSequenceFile_iMelodyType' value64='1768777068'/>
<enum name='kMusicSequenceLoadSMF_ChannelsToTracks' value64='1'/>
<enum name='kMusicSequenceLoadSMF_PreserveTracks' value64='0'/>
<enum name='kMusicSequenceType_Beats' value64='1650811252'/>
<enum name='kMusicSequenceType_Samples' value64='1935764848'/>
<enum name='kMusicSequenceType_Seconds' value64='1936024435'/>
<enum name='kMusicTimeStamp_EndOfTrack' value64='1.7976931348623157E+308'/>
<enum name='kNewTimePitchParam_EnablePeakLocking' value64='6'/>
<enum name='kNewTimePitchParam_Overlap' value64='4'/>
<enum name='kNewTimePitchParam_Pitch' value64='1'/>
<enum name='kNewTimePitchParam_Rate' value64='0'/>
<enum name='kNumAUNBandEQFilterTypes' value64='11'/>
<enum name='kNumberOfResponseFrequencies' value64='1024'/>
<enum name='kPanningMode_SoundField' value64='3'/>
<enum name='kPanningMode_VectorBasedPanning' value64='4'/>
<enum name='kParameterEvent_Immediate' value64='1'/>
<enum name='kParameterEvent_Ramped' value64='2'/>
<enum name='kParametricEQParam_CenterFreq' value64='0'/>
<enum name='kParametricEQParam_Gain' value64='2'/>
<enum name='kParametricEQParam_Q' value64='1'/>
<enum name='kProgramTargetLevel_Minus20dB' value64='3'/>
<enum name='kProgramTargetLevel_Minus23dB' value64='2'/>
<enum name='kProgramTargetLevel_Minus31dB' value64='1'/>
<enum name='kProgramTargetLevel_None' value64='0'/>
<enum name='kRandomParam_BoundA' value64='0'/>
<enum name='kRandomParam_BoundB' value64='1'/>
<enum name='kRandomParam_Curve' value64='2'/>
<enum name='kRenderQuality_High' value64='96'/>
<enum name='kRenderQuality_Low' value64='32'/>
<enum name='kRenderQuality_Max' value64='127'/>
<enum name='kRenderQuality_Medium' value64='64'/>
<enum name='kRenderQuality_Min' value64='0'/>
<enum name='kReverb2Param_DecayTimeAt0Hz' value64='4'/>
<enum name='kReverb2Param_DecayTimeAtNyquist' value64='5'/>
<enum name='kReverb2Param_DryWetMix' value64='0'/>
<enum name='kReverb2Param_Gain' value64='1'/>
<enum name='kReverb2Param_MaxDelayTime' value64='3'/>
<enum name='kReverb2Param_MinDelayTime' value64='2'/>
<enum name='kReverb2Param_RandomizeReflections' value64='6'/>
<enum name='kReverbParam_FilterBandwidth' value64='15'/>
<enum name='kReverbParam_FilterEnable' value64='18'/>
<enum name='kReverbParam_FilterFrequency' value64='14'/>
<enum name='kReverbParam_FilterGain' value64='16'/>
<enum name='kReverbParam_FilterType' value64='17'/>
<enum name='kReverbRoomType_Cathedral' value64='8'/>
<enum name='kReverbRoomType_LargeChamber' value64='7'/>
<enum name='kReverbRoomType_LargeHall' value64='4'/>
<enum name='kReverbRoomType_LargeHall2' value64='12'/>
<enum name='kReverbRoomType_LargeRoom' value64='2'/>
<enum name='kReverbRoomType_LargeRoom2' value64='9'/>
<enum name='kReverbRoomType_MediumChamber' value64='6'/>
<enum name='kReverbRoomType_MediumHall' value64='3'/>
<enum name='kReverbRoomType_MediumHall2' value64='10'/>
<enum name='kReverbRoomType_MediumHall3' value64='11'/>
<enum name='kReverbRoomType_MediumRoom' value64='1'/>
<enum name='kReverbRoomType_Plate' value64='5'/>
<enum name='kReverbRoomType_SmallRoom' value64='0'/>
<enum name='kRoundTripAACParam_EncodingStrategy' value64='1'/>
<enum name='kRoundTripAACParam_Format' value64='0'/>
<enum name='kRoundTripAACParam_RateOrQuality' value64='2'/>
<enum name='kSampleDelayParam_DelayFrames' value64='0'/>
<enum name='kScheduledAudioSliceFlag_BeganToRender' value64='2'/>
<enum name='kScheduledAudioSliceFlag_BeganToRenderLate' value64='4'/>
<enum name='kScheduledAudioSliceFlag_Complete' value64='1'/>
<enum name='kScheduledAudioSliceFlag_Interrupt' value64='16'/>
<enum name='kScheduledAudioSliceFlag_InterruptAtLoop' value64='32'/>
<enum name='kScheduledAudioSliceFlag_Loop' value64='8'/>
<enum name='kSequenceTrackProperty_AutomatedParameters' value64='4'/>
<enum name='kSequenceTrackProperty_LoopInfo' value64='0'/>
<enum name='kSequenceTrackProperty_MuteStatus' value64='2'/>
<enum name='kSequenceTrackProperty_OffsetTime' value64='1'/>
<enum name='kSequenceTrackProperty_SoloStatus' value64='3'/>
<enum name='kSequenceTrackProperty_TimeResolution' value64='6'/>
<enum name='kSequenceTrackProperty_TrackLength' value64='5'/>
<enum name='kSpatialMixerAttenuationCurve_Exponential' value64='1'/>
<enum name='kSpatialMixerAttenuationCurve_Inverse' value64='2'/>
<enum name='kSpatialMixerAttenuationCurve_Linear' value64='3'/>
<enum name='kSpatialMixerAttenuationCurve_Power' value64='0'/>
<enum name='kSpatialMixerOutputType_BuiltInSpeakers' value64='2'/>
<enum name='kSpatialMixerOutputType_ExternalSpeakers' value64='3'/>
<enum name='kSpatialMixerOutputType_Headphones' value64='1'/>
<enum name='kSpatialMixerParam_Azimuth' value64='0'/>
<enum name='kSpatialMixerParam_Distance' value64='2'/>
<enum name='kSpatialMixerParam_Elevation' value64='1'/>
<enum name='kSpatialMixerParam_Enable' value64='5'/>
<enum name='kSpatialMixerParam_Gain' value64='3'/>
<enum name='kSpatialMixerParam_GlobalReverbGain' value64='9'/>
<enum name='kSpatialMixerParam_HeadPitch' value64='20'/>
<enum name='kSpatialMixerParam_HeadRoll' value64='21'/>
<enum name='kSpatialMixerParam_HeadYaw' value64='19'/>
<enum name='kSpatialMixerParam_MaxGain' value64='7'/>
<enum name='kSpatialMixerParam_MinGain' value64='6'/>
<enum name='kSpatialMixerParam_ObstructionAttenuation' value64='11'/>
<enum name='kSpatialMixerParam_OcclusionAttenuation' value64='10'/>
<enum name='kSpatialMixerParam_PlaybackRate' value64='4'/>
<enum name='kSpatialMixerParam_ReverbBlend' value64='8'/>
<enum name='kSpatialMixerPointSourceInHeadMode_Bypass' value64='1'/>
<enum name='kSpatialMixerPointSourceInHeadMode_Mono' value64='0'/>
<enum name='kSpatialMixerRenderingFlags_DistanceAttenuation' value64='4'/>
<enum name='kSpatialMixerRenderingFlags_InterAuralDelay' value64='1'/>
<enum name='kSpatialMixerSourceMode_AmbienceBed' value64='3'/>
<enum name='kSpatialMixerSourceMode_Bypass' value64='1'/>
<enum name='kSpatialMixerSourceMode_PointSource' value64='2'/>
<enum name='kSpatialMixerSourceMode_SpatializeIfMono' value64='0'/>
<enum name='kSpatializationAlgorithm_EqualPowerPanning' value64='0'/>
<enum name='kSpatializationAlgorithm_HRTF' value64='2'/>
<enum name='kSpatializationAlgorithm_HRTFHQ' value64='6'/>
<enum name='kSpatializationAlgorithm_SoundField' value64='3'/>
<enum name='kSpatializationAlgorithm_SphericalHead' value64='1'/>
<enum name='kSpatializationAlgorithm_StereoPassThrough' value64='5'/>
<enum name='kSpatializationAlgorithm_UseOutputType' value64='7'/>
<enum name='kSpatializationAlgorithm_VectorBasedPanning' value64='4'/>
<enum name='kSystemSoundID_Vibrate' value64='4095'/>
<enum name='kTimePitchParam_Rate' value64='0'/>
<enum name='kVarispeedParam_PlaybackCents' value64='1'/>
<enum name='kVarispeedParam_PlaybackRate' value64='0'/>
<function name='AUGraphAddNode'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg const='true' declared_type64='AudioComponentDescription * _Nonnull' name='inDescription' type64='^{AudioComponentDescription=IIIII}'/>
<arg declared_type64='AUNode * _Nonnull' name='outNode' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphAddRenderNotify'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='AURenderCallback _Nonnull' function_pointer='true' name='inCallback' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='AudioBufferList * _Nullable' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='void * _Nullable' name='inRefCon' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphClearConnections'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphClose'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphConnectNodeInput'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='AUNode' name='inSourceNode' type64='i'/>
<arg declared_type64='UInt32' name='inSourceOutputNumber' type64='I'/>
<arg declared_type64='AUNode' name='inDestNode' type64='i'/>
<arg declared_type64='UInt32' name='inDestInputNumber' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphCountNodeInteractions'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='AUNode' name='inNode' type64='i'/>
<arg declared_type64='UInt32 * _Nonnull' name='outNumInteractions' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphDisconnectNodeInput'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='AUNode' name='inDestNode' type64='i'/>
<arg declared_type64='UInt32' name='inDestInputNumber' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphGetCPULoad'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='Float32 * _Nonnull' name='outAverageCPULoad' type64='^f'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphGetIndNode'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='UInt32' name='inIndex' type64='I'/>
<arg declared_type64='AUNode * _Nonnull' name='outNode' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphGetInteractionInfo'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='UInt32' name='inInteractionIndex' type64='I'/>
<arg declared_type64='AUNodeInteraction * _Nonnull' name='outInteraction' type64='^{AUNodeInteraction=I(?={AudioUnitNodeConnection=iIiI}{AUNodeRenderCallback=iI{AURenderCallbackStruct=^?^v}})}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphGetMaxCPULoad'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='Float32 * _Nonnull' name='outMaxLoad' type64='^f'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphGetNodeCount'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='UInt32 * _Nonnull' name='outNumberOfNodes' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphGetNodeInteractions'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='AUNode' name='inNode' type64='i'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumInteractions' type64='^I'/>
<arg declared_type64='AUNodeInteraction * _Nonnull' name='outInteractions' type64='^{AUNodeInteraction=I(?={AudioUnitNodeConnection=iIiI}{AUNodeRenderCallback=iI{AURenderCallbackStruct=^?^v}})}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphGetNumberOfInteractions'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='UInt32 * _Nonnull' name='outNumInteractions' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphInitialize'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphIsInitialized'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='Boolean * _Nonnull' name='outIsInitialized' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphIsOpen'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='Boolean * _Nonnull' name='outIsOpen' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphIsRunning'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='Boolean * _Nonnull' name='outIsRunning' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphNodeInfo'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='AUNode' name='inNode' type64='i'/>
<arg declared_type64='AudioComponentDescription * _Nullable' name='outDescription' type64='^{AudioComponentDescription=IIIII}'/>
<arg declared_type64='AudioUnit _Nullable * _Nullable' name='outAudioUnit' type64='^^{OpaqueAudioComponentInstance}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphOpen'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphRemoveNode'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='AUNode' name='inNode' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphRemoveRenderNotify'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='AURenderCallback _Nonnull' function_pointer='true' name='inCallback' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='AudioBufferList * _Nullable' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='void * _Nullable' name='inRefCon' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphSetNodeInputCallback'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='AUNode' name='inDestNode' type64='i'/>
<arg declared_type64='UInt32' name='inDestInputNumber' type64='I'/>
<arg const='true' declared_type64='AURenderCallbackStruct * _Nonnull' name='inInputCallback' type64='^{AURenderCallbackStruct=^?^v}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphStart'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphStop'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphUninitialize'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AUGraphUpdate'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<arg declared_type64='Boolean * _Nullable' name='outIsUpdated' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioCodecAppendInputBufferList'>
<arg declared_type64='AudioCodec _Nonnull' name='inCodec' type64='^{OpaqueAudioComponentInstance=}'/>
<arg const='true' declared_type64='AudioBufferList * _Nonnull' name='inBufferList' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumberPackets' type64='^I'/>
<arg const='true' declared_type64='AudioStreamPacketDescription * _Nullable' name='inPacketDescription' type64='^{AudioStreamPacketDescription=qII}'/>
<arg declared_type64='UInt32 * _Nonnull' name='outBytesConsumed' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioCodecAppendInputData'>
<arg declared_type64='AudioCodec _Nonnull' name='inCodec' type64='^{OpaqueAudioComponentInstance=}'/>
<arg const='true' declared_type64='void * _Nonnull' name='inInputData' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioInputDataByteSize' type64='^I'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumberPackets' type64='^I'/>
<arg const='true' declared_type64='AudioStreamPacketDescription * _Nullable' name='inPacketDescription' type64='^{AudioStreamPacketDescription=qII}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioCodecGetProperty'>
<arg declared_type64='AudioCodec _Nonnull' name='inCodec' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioCodecPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioPropertyDataSize' type64='^I'/>
<arg declared_type64='void * _Nonnull' name='outPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioCodecGetPropertyInfo'>
<arg declared_type64='AudioCodec _Nonnull' name='inCodec' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioCodecPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32 * _Nullable' name='outSize' type64='^I'/>
<arg declared_type64='Boolean * _Nullable' name='outWritable' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioCodecInitialize'>
<arg declared_type64='AudioCodec _Nonnull' name='inCodec' type64='^{OpaqueAudioComponentInstance=}'/>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nullable' name='inInputFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nullable' name='inOutputFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg const='true' declared_type64='void * _Nullable' name='inMagicCookie' type64='^v'/>
<arg declared_type64='UInt32' name='inMagicCookieByteSize' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioCodecProduceOutputBufferList'>
<arg declared_type64='AudioCodec _Nonnull' name='inCodec' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioBufferList * _Nonnull' name='ioBufferList' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumberPackets' type64='^I'/>
<arg declared_type64='AudioStreamPacketDescription * _Nullable' name='outPacketDescription' type64='^{AudioStreamPacketDescription=qII}'/>
<arg declared_type64='UInt32 * _Nonnull' name='outStatus' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioCodecProduceOutputPackets'>
<arg declared_type64='AudioCodec _Nonnull' name='inCodec' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='void * _Nonnull' name='outOutputData' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioOutputDataByteSize' type64='^I'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumberPackets' type64='^I'/>
<arg declared_type64='AudioStreamPacketDescription * _Nullable' name='outPacketDescription' type64='^{AudioStreamPacketDescription=qII}'/>
<arg declared_type64='UInt32 * _Nonnull' name='outStatus' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioCodecReset'>
<arg declared_type64='AudioCodec _Nonnull' name='inCodec' type64='^{OpaqueAudioComponentInstance=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioCodecSetProperty'>
<arg declared_type64='AudioCodec _Nonnull' name='inCodec' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioCodecPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inPropertyDataSize' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioCodecUninitialize'>
<arg declared_type64='AudioCodec _Nonnull' name='inCodec' type64='^{OpaqueAudioComponentInstance=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioComponentCopyIcon'>
<arg declared_type64='AudioComponent _Nonnull' name='comp' type64='^{OpaqueAudioComponent=}'/>
<retval already_retained='true' declared_type64='UIImage * _Nullable' type64='@'/>
</function>
<function name='AudioComponentCopyName'>
<arg declared_type64='AudioComponent _Nonnull' name='inComponent' type64='^{OpaqueAudioComponent=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='outName' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioComponentCount'>
<arg const='true' declared_type64='AudioComponentDescription * _Nonnull' name='inDesc' type64='^{AudioComponentDescription=IIIII}'/>
<retval declared_type64='UInt32' type64='I'/>
</function>
<function name='AudioComponentFindNext'>
<arg declared_type64='AudioComponent _Nullable' name='inComponent' type64='^{OpaqueAudioComponent=}'/>
<arg const='true' declared_type64='AudioComponentDescription * _Nonnull' name='inDesc' type64='^{AudioComponentDescription=IIIII}'/>
<retval declared_type64='AudioComponent _Nullable' type64='^{OpaqueAudioComponent=}'/>
</function>
<function name='AudioComponentGetDescription'>
<arg declared_type64='AudioComponent _Nonnull' name='inComponent' type64='^{OpaqueAudioComponent=}'/>
<arg declared_type64='AudioComponentDescription * _Nonnull' name='outDesc' type64='^{AudioComponentDescription=IIIII}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioComponentGetIcon'>
<arg declared_type64='AudioComponent _Nonnull' name='comp' type64='^{OpaqueAudioComponent=}'/>
<arg declared_type64='float' name='desiredPointSize' type64='f'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</function>
<function name='AudioComponentGetLastActiveTime'>
<arg declared_type64='AudioComponent _Nonnull' name='comp' type64='^{OpaqueAudioComponent=}'/>
<retval declared_type64='CFAbsoluteTime' type64='d'/>
</function>
<function name='AudioComponentGetVersion'>
<arg declared_type64='AudioComponent _Nonnull' name='inComponent' type64='^{OpaqueAudioComponent=}'/>
<arg declared_type64='UInt32 * _Nonnull' name='outVersion' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioComponentInstanceCanDo'>
<arg declared_type64='AudioComponentInstance _Nonnull' name='inInstance' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='SInt16' name='inSelectorID' type64='s'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='AudioComponentInstanceDispose'>
<arg declared_type64='AudioComponentInstance _Nonnull' name='inInstance' type64='^{OpaqueAudioComponentInstance=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioComponentInstanceGetComponent'>
<arg declared_type64='AudioComponentInstance _Nonnull' name='inInstance' type64='^{OpaqueAudioComponentInstance=}'/>
<retval declared_type64='AudioComponent _Nonnull' type64='^{OpaqueAudioComponent=}'/>
</function>
<function name='AudioComponentInstanceNew'>
<arg declared_type64='AudioComponent _Nonnull' name='inComponent' type64='^{OpaqueAudioComponent=}'/>
<arg declared_type64='AudioComponentInstance _Nullable * _Nonnull' name='outInstance' type64='^^{OpaqueAudioComponentInstance}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioComponentInstantiate'>
<arg declared_type64='AudioComponent _Nonnull' name='inComponent' type64='^{OpaqueAudioComponent=}'/>
<arg declared_type64='AudioComponentInstantiationOptions' name='inOptions' type64='I'/>
<arg declared_type64='void (^ _Nonnull)(AudioComponentInstance _Nullable, OSStatus)' function_pointer='true' name='inCompletionHandler' type64='@?'>
<arg declared_type64='AudioComponentInstance _Nullable' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='OSStatus' type64='i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='AudioComponentRegister'>
<arg const='true' declared_type64='AudioComponentDescription * _Nonnull' name='inDesc' type64='^{AudioComponentDescription=IIIII}'/>
<arg declared_type64='CFStringRef _Nonnull' name='inName' type64='^{__CFString=}'/>
<arg declared_type64='UInt32' name='inVersion' type64='I'/>
<arg declared_type64='AudioComponentFactoryFunction _Nonnull' function_pointer='true' name='inFactory' type64='^?'>
<arg const='true' declared_type64='AudioComponentDescription * _Nonnull' type64='^{AudioComponentDescription=IIIII}'/>
<retval declared_type64='AudioComponentPlugInInterface * _Nullable' type64='^{AudioComponentPlugInInterface=^?^?^?^v}'/>
</arg>
<retval declared_type64='AudioComponent _Nonnull' type64='^{OpaqueAudioComponent=}'/>
</function>
<function name='AudioConverterConvertBuffer'>
<arg declared_type64='AudioConverterRef _Nonnull' name='inAudioConverter' type64='^{OpaqueAudioConverter=}'/>
<arg declared_type64='UInt32' name='inInputDataSize' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inInputData' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioOutputDataSize' type64='^I'/>
<arg declared_type64='void * _Nonnull' name='outOutputData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioConverterConvertComplexBuffer'>
<arg declared_type64='AudioConverterRef _Nonnull' name='inAudioConverter' type64='^{OpaqueAudioConverter=}'/>
<arg declared_type64='UInt32' name='inNumberPCMFrames' type64='I'/>
<arg const='true' declared_type64='AudioBufferList * _Nonnull' name='inInputData' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<arg declared_type64='AudioBufferList * _Nonnull' name='outOutputData' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioConverterDispose'>
<arg declared_type64='AudioConverterRef _Nonnull' name='inAudioConverter' type64='^{OpaqueAudioConverter=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioConverterFillComplexBuffer'>
<arg declared_type64='AudioConverterRef _Nonnull' name='inAudioConverter' type64='^{OpaqueAudioConverter=}'/>
<arg declared_type64='AudioConverterComplexInputDataProc _Nonnull' function_pointer='true' name='inInputDataProc' type64='^?'>
<arg declared_type64='AudioConverterRef _Nonnull' type64='^{OpaqueAudioConverter=}'/>
<arg declared_type64='UInt32 * _Nonnull' type64='^I'/>
<arg declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<arg declared_type64='AudioStreamPacketDescription * _Nullable * _Nullable' type64='^^{AudioStreamPacketDescription}'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='void * _Nullable' name='inInputDataProcUserData' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioOutputDataPacketSize' type64='^I'/>
<arg declared_type64='AudioBufferList * _Nonnull' name='outOutputData' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<arg declared_type64='AudioStreamPacketDescription * _Nullable' name='outPacketDescription' type64='^{AudioStreamPacketDescription=qII}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioConverterGetProperty'>
<arg declared_type64='AudioConverterRef _Nonnull' name='inAudioConverter' type64='^{OpaqueAudioConverter=}'/>
<arg declared_type64='AudioConverterPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioPropertyDataSize' type64='^I'/>
<arg declared_type64='void * _Nonnull' name='outPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioConverterGetPropertyInfo'>
<arg declared_type64='AudioConverterRef _Nonnull' name='inAudioConverter' type64='^{OpaqueAudioConverter=}'/>
<arg declared_type64='AudioConverterPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32 * _Nullable' name='outSize' type64='^I'/>
<arg declared_type64='Boolean * _Nullable' name='outWritable' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioConverterNew'>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' name='inSourceFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' name='inDestinationFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type64='AudioConverterRef _Nullable * _Nonnull' name='outAudioConverter' type64='^^{OpaqueAudioConverter}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioConverterNewSpecific'>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' name='inSourceFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' name='inDestinationFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type64='UInt32' name='inNumberClassDescriptions' type64='I'/>
<arg const='true' declared_type64='AudioClassDescription * _Nonnull' name='inClassDescriptions' type64='^{AudioClassDescription=III}'/>
<arg declared_type64='AudioConverterRef _Nullable * _Nonnull' name='outAudioConverter' type64='^^{OpaqueAudioConverter}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioConverterReset'>
<arg declared_type64='AudioConverterRef _Nonnull' name='inAudioConverter' type64='^{OpaqueAudioConverter=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioConverterSetProperty'>
<arg declared_type64='AudioConverterRef _Nonnull' name='inAudioConverter' type64='^{OpaqueAudioConverter=}'/>
<arg declared_type64='AudioConverterPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inPropertyDataSize' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileClose'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileCountUserData'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='UInt32' name='inUserDataID' type64='I'/>
<arg declared_type64='UInt32 * _Nonnull' name='outNumberItems' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileCreateWithURL'>
<arg declared_type64='CFURLRef _Nonnull' name='inFileRef' type64='^{__CFURL=}'/>
<arg declared_type64='AudioFileTypeID' name='inFileType' type64='I'/>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' name='inFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type64='AudioFileFlags' name='inFlags' type64='I'/>
<arg declared_type64='AudioFileID _Nullable * _Nonnull' name='outAudioFile' type64='^^{OpaqueAudioFileID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileGetGlobalInfo'>
<arg declared_type64='AudioFilePropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inSpecifierSize' type64='I'/>
<arg declared_type64='void * _Nullable' name='inSpecifier' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioDataSize' type64='^I'/>
<arg declared_type64='void * _Nonnull' name='outPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileGetGlobalInfoSize'>
<arg declared_type64='AudioFilePropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inSpecifierSize' type64='I'/>
<arg declared_type64='void * _Nullable' name='inSpecifier' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='outDataSize' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileGetProperty'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='AudioFilePropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioDataSize' type64='^I'/>
<arg declared_type64='void * _Nonnull' name='outPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileGetPropertyInfo'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='AudioFilePropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32 * _Nullable' name='outDataSize' type64='^I'/>
<arg declared_type64='UInt32 * _Nullable' name='isWritable' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileGetUserData'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='UInt32' name='inUserDataID' type64='I'/>
<arg declared_type64='UInt32' name='inIndex' type64='I'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioUserDataSize' type64='^I'/>
<arg declared_type64='void * _Nonnull' name='outUserData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileGetUserDataSize'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='UInt32' name='inUserDataID' type64='I'/>
<arg declared_type64='UInt32' name='inIndex' type64='I'/>
<arg declared_type64='UInt32 * _Nonnull' name='outUserDataSize' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileInitializeWithCallbacks'>
<arg declared_type64='void * _Nonnull' name='inClientData' type64='^v'/>
<arg declared_type64='AudioFile_ReadProc _Nonnull' function_pointer='true' name='inReadFunc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='SInt64' type64='q'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='AudioFile_WriteProc _Nonnull' function_pointer='true' name='inWriteFunc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='SInt64' type64='q'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='AudioFile_GetSizeProc _Nonnull' function_pointer='true' name='inGetSizeFunc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='SInt64' type64='q'/>
</arg>
<arg declared_type64='AudioFile_SetSizeProc _Nonnull' function_pointer='true' name='inSetSizeFunc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='SInt64' type64='q'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='AudioFileTypeID' name='inFileType' type64='I'/>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' name='inFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type64='AudioFileFlags' name='inFlags' type64='I'/>
<arg declared_type64='AudioFileID _Nullable * _Nonnull' name='outAudioFile' type64='^^{OpaqueAudioFileID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileOpenURL'>
<arg declared_type64='CFURLRef _Nonnull' name='inFileRef' type64='^{__CFURL=}'/>
<arg declared_type64='AudioFilePermissions' name='inPermissions' type64='c'/>
<arg declared_type64='AudioFileTypeID' name='inFileTypeHint' type64='I'/>
<arg declared_type64='AudioFileID _Nullable * _Nonnull' name='outAudioFile' type64='^^{OpaqueAudioFileID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileOpenWithCallbacks'>
<arg declared_type64='void * _Nonnull' name='inClientData' type64='^v'/>
<arg declared_type64='AudioFile_ReadProc _Nonnull' function_pointer='true' name='inReadFunc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='SInt64' type64='q'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='AudioFile_WriteProc _Nullable' function_pointer='true' name='inWriteFunc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='SInt64' type64='q'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='AudioFile_GetSizeProc _Nonnull' function_pointer='true' name='inGetSizeFunc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='SInt64' type64='q'/>
</arg>
<arg declared_type64='AudioFile_SetSizeProc _Nullable' function_pointer='true' name='inSetSizeFunc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='SInt64' type64='q'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='AudioFileTypeID' name='inFileTypeHint' type64='I'/>
<arg declared_type64='AudioFileID _Nullable * _Nonnull' name='outAudioFile' type64='^^{OpaqueAudioFileID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileOptimize'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileReadBytes'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='Boolean' name='inUseCache' type64='B'/>
<arg declared_type64='SInt64' name='inStartingByte' type64='q'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumBytes' type64='^I'/>
<arg declared_type64='void * _Nonnull' name='outBuffer' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileReadPacketData'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='Boolean' name='inUseCache' type64='B'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumBytes' type64='^I'/>
<arg declared_type64='AudioStreamPacketDescription * _Nullable' name='outPacketDescriptions' type64='^{AudioStreamPacketDescription=qII}'/>
<arg declared_type64='SInt64' name='inStartingPacket' type64='q'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumPackets' type64='^I'/>
<arg declared_type64='void * _Nullable' name='outBuffer' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileReadPackets'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='Boolean' name='inUseCache' type64='B'/>
<arg declared_type64='UInt32 * _Nonnull' name='outNumBytes' type64='^I'/>
<arg declared_type64='AudioStreamPacketDescription * _Nullable' name='outPacketDescriptions' type64='^{AudioStreamPacketDescription=qII}'/>
<arg declared_type64='SInt64' name='inStartingPacket' type64='q'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumPackets' type64='^I'/>
<arg declared_type64='void * _Nullable' name='outBuffer' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileRemoveUserData'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='UInt32' name='inUserDataID' type64='I'/>
<arg declared_type64='UInt32' name='inIndex' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileSetProperty'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='AudioFilePropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inDataSize' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileSetUserData'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='UInt32' name='inUserDataID' type64='I'/>
<arg declared_type64='UInt32' name='inIndex' type64='I'/>
<arg declared_type64='UInt32' name='inUserDataSize' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inUserData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileStreamClose'>
<arg declared_type64='AudioFileStreamID _Nonnull' name='inAudioFileStream' type64='^{OpaqueAudioFileStreamID=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileStreamGetProperty'>
<arg declared_type64='AudioFileStreamID _Nonnull' name='inAudioFileStream' type64='^{OpaqueAudioFileStreamID=}'/>
<arg declared_type64='AudioFileStreamPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioPropertyDataSize' type64='^I'/>
<arg declared_type64='void * _Nonnull' name='outPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileStreamGetPropertyInfo'>
<arg declared_type64='AudioFileStreamID _Nonnull' name='inAudioFileStream' type64='^{OpaqueAudioFileStreamID=}'/>
<arg declared_type64='AudioFileStreamPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32 * _Nullable' name='outPropertyDataSize' type64='^I'/>
<arg declared_type64='Boolean * _Nullable' name='outWritable' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileStreamOpen'>
<arg declared_type64='void * _Nullable' name='inClientData' type64='^v'/>
<arg declared_type64='AudioFileStream_PropertyListenerProc _Nonnull' function_pointer='true' name='inPropertyListenerProc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='AudioFileStreamID _Nonnull' type64='^{OpaqueAudioFileStreamID=}'/>
<arg declared_type64='AudioFileStreamPropertyID' type64='I'/>
<arg declared_type64='AudioFileStreamPropertyFlags * _Nonnull' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='AudioFileStream_PacketsProc _Nonnull' function_pointer='true' name='inPacketsProc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='AudioStreamPacketDescription * _Nullable' type64='^{AudioStreamPacketDescription=qII}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='AudioFileTypeID' name='inFileTypeHint' type64='I'/>
<arg declared_type64='AudioFileStreamID _Nullable * _Nonnull' name='outAudioFileStream' type64='^^{OpaqueAudioFileStreamID}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileStreamParseBytes'>
<arg declared_type64='AudioFileStreamID _Nonnull' name='inAudioFileStream' type64='^{OpaqueAudioFileStreamID=}'/>
<arg declared_type64='UInt32' name='inDataByteSize' type64='I'/>
<arg const='true' declared_type64='void * _Nullable' name='inData' type64='^v'/>
<arg declared_type64='AudioFileStreamParseFlags' name='inFlags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileStreamSeek'>
<arg declared_type64='AudioFileStreamID _Nonnull' name='inAudioFileStream' type64='^{OpaqueAudioFileStreamID=}'/>
<arg declared_type64='SInt64' name='inPacketOffset' type64='q'/>
<arg declared_type64='SInt64 * _Nonnull' name='outDataByteOffset' type64='^q'/>
<arg declared_type64='AudioFileStreamSeekFlags * _Nonnull' name='ioFlags' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileStreamSetProperty'>
<arg declared_type64='AudioFileStreamID _Nonnull' name='inAudioFileStream' type64='^{OpaqueAudioFileStreamID=}'/>
<arg declared_type64='AudioFileStreamPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inPropertyDataSize' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileWriteBytes'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='Boolean' name='inUseCache' type64='B'/>
<arg declared_type64='SInt64' name='inStartingByte' type64='q'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumBytes' type64='^I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inBuffer' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFileWritePackets'>
<arg declared_type64='AudioFileID _Nonnull' name='inAudioFile' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='Boolean' name='inUseCache' type64='B'/>
<arg declared_type64='UInt32' name='inNumBytes' type64='I'/>
<arg const='true' declared_type64='AudioStreamPacketDescription * _Nullable' name='inPacketDescriptions' type64='^{AudioStreamPacketDescription=qII}'/>
<arg declared_type64='SInt64' name='inStartingPacket' type64='q'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumPackets' type64='^I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inBuffer' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFormatGetProperty'>
<arg declared_type64='AudioFormatPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inSpecifierSize' type64='I'/>
<arg const='true' declared_type64='void * _Nullable' name='inSpecifier' type64='^v'/>
<arg declared_type64='UInt32 * _Nullable' name='ioPropertyDataSize' type64='^I'/>
<arg declared_type64='void * _Nullable' name='outPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioFormatGetPropertyInfo'>
<arg declared_type64='AudioFormatPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inSpecifierSize' type64='I'/>
<arg const='true' declared_type64='void * _Nullable' name='inSpecifier' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='outPropertyDataSize' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioOutputUnitGetHostIcon'>
<arg declared_type64='AudioUnit _Nonnull' name='au' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='float' name='desiredPointSize' type64='f'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</function>
<function name='AudioOutputUnitPublish'>
<arg const='true' declared_type64='AudioComponentDescription * _Nonnull' name='inDesc' type64='^{AudioComponentDescription=IIIII}'/>
<arg declared_type64='CFStringRef _Nonnull' name='inName' type64='^{__CFString=}'/>
<arg declared_type64='UInt32' name='inVersion' type64='I'/>
<arg declared_type64='AudioUnit _Nonnull' name='inOutputUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioOutputUnitStart'>
<arg declared_type64='AudioUnit _Nonnull' name='ci' type64='^{OpaqueAudioComponentInstance=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioOutputUnitStop'>
<arg declared_type64='AudioUnit _Nonnull' name='ci' type64='^{OpaqueAudioComponentInstance=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueAddPropertyListener'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueuePropertyID' name='inID' type64='I'/>
<arg declared_type64='AudioQueuePropertyListenerProc _Nonnull' function_pointer='true' name='inProc' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='AudioQueueRef _Nonnull' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueuePropertyID' type64='I'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void * _Nullable' name='inUserData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueAllocateBuffer'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='UInt32' name='inBufferByteSize' type64='I'/>
<arg declared_type64='AudioQueueBufferRef _Nullable * _Nonnull' name='outBuffer' type64='^^{AudioQueueBuffer}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueAllocateBufferWithPacketDescriptions'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='UInt32' name='inBufferByteSize' type64='I'/>
<arg declared_type64='UInt32' name='inNumberPacketDescriptions' type64='I'/>
<arg declared_type64='AudioQueueBufferRef _Nullable * _Nonnull' name='outBuffer' type64='^^{AudioQueueBuffer}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueCreateTimeline'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueTimelineRef _Nullable * _Nonnull' name='outTimeline' type64='^^{OpaqueAudioQueueTimeline}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueDeviceGetCurrentTime'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioTimeStamp * _Nonnull' name='outTimeStamp' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueDeviceGetNearestStartTime'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioTimeStamp * _Nonnull' name='ioRequestedStartTime' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' name='inFlags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueDeviceTranslateTime'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' name='inTime' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AudioTimeStamp * _Nonnull' name='outTime' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueDispose'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='Boolean' name='inImmediate' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueDisposeTimeline'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueTimelineRef _Nonnull' name='inTimeline' type64='^{OpaqueAudioQueueTimeline=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueEnqueueBuffer'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueBufferRef _Nonnull' name='inBuffer' type64='^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}'/>
<arg declared_type64='UInt32' name='inNumPacketDescs' type64='I'/>
<arg const='true' declared_type64='AudioStreamPacketDescription * _Nullable' name='inPacketDescs' type64='^{AudioStreamPacketDescription=qII}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueEnqueueBufferWithParameters'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueBufferRef _Nonnull' name='inBuffer' type64='^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}'/>
<arg declared_type64='UInt32' name='inNumPacketDescs' type64='I'/>
<arg const='true' declared_type64='AudioStreamPacketDescription * _Nullable' name='inPacketDescs' type64='^{AudioStreamPacketDescription=qII}'/>
<arg declared_type64='UInt32' name='inTrimFramesAtStart' type64='I'/>
<arg declared_type64='UInt32' name='inTrimFramesAtEnd' type64='I'/>
<arg declared_type64='UInt32' name='inNumParamValues' type64='I'/>
<arg const='true' declared_type64='AudioQueueParameterEvent * _Nullable' name='inParamValues' type64='^{AudioQueueParameterEvent=If}'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nullable' name='inStartTime' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AudioTimeStamp * _Nullable' name='outActualStartTime' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueFlush'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueFreeBuffer'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueBufferRef _Nonnull' name='inBuffer' type64='^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueGetCurrentTime'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueTimelineRef _Nullable' name='inTimeline' type64='^{OpaqueAudioQueueTimeline=}'/>
<arg declared_type64='AudioTimeStamp * _Nullable' name='outTimeStamp' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='Boolean * _Nullable' name='outTimelineDiscontinuity' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueGetParameter'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueParameterID' name='inParamID' type64='I'/>
<arg declared_type64='AudioQueueParameterValue * _Nonnull' name='outValue' type64='^f'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueGetProperty'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueuePropertyID' name='inID' type64='I'/>
<arg declared_type64='void * _Nonnull' name='outData' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioDataSize' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueGetPropertySize'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueuePropertyID' name='inID' type64='I'/>
<arg declared_type64='UInt32 * _Nonnull' name='outDataSize' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueNewInput'>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' name='inFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type64='AudioQueueInputCallback _Nonnull' function_pointer='true' name='inCallbackProc' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='AudioQueueRef _Nonnull' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueBufferRef _Nonnull' type64='^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='AudioStreamPacketDescription * _Nullable' type64='^{AudioStreamPacketDescription=qII}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void * _Nullable' name='inUserData' type64='^v'/>
<arg declared_type64='CFRunLoopRef _Nullable' name='inCallbackRunLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nullable' name='inCallbackRunLoopMode' type64='^{__CFString=}'/>
<arg declared_type64='UInt32' name='inFlags' type64='I'/>
<arg declared_type64='AudioQueueRef _Nullable * _Nonnull' name='outAQ' type64='^^{OpaqueAudioQueue}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueNewInputWithDispatchQueue'>
<arg declared_type64='AudioQueueRef _Nullable * _Nonnull' name='outAQ' type64='^^{OpaqueAudioQueue}'/>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' name='inFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type64='UInt32' name='inFlags' type64='I'/>
<arg declared_type64='dispatch_queue_t _Nonnull' name='inCallbackDispatchQueue' type64='@'/>
<arg declared_type64='AudioQueueInputCallbackBlock _Nonnull' function_pointer='true' name='inCallbackBlock' type64='@?'>
<arg declared_type64='AudioQueueRef _Nonnull' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueBufferRef _Nonnull' type64='^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='AudioStreamPacketDescription * _Nullable' type64='^{AudioStreamPacketDescription=qII}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueNewOutput'>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' name='inFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type64='AudioQueueOutputCallback _Nonnull' function_pointer='true' name='inCallbackProc' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='AudioQueueRef _Nonnull' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueBufferRef _Nonnull' type64='^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void * _Nullable' name='inUserData' type64='^v'/>
<arg declared_type64='CFRunLoopRef _Nullable' name='inCallbackRunLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nullable' name='inCallbackRunLoopMode' type64='^{__CFString=}'/>
<arg declared_type64='UInt32' name='inFlags' type64='I'/>
<arg declared_type64='AudioQueueRef _Nullable * _Nonnull' name='outAQ' type64='^^{OpaqueAudioQueue}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueNewOutputWithDispatchQueue'>
<arg declared_type64='AudioQueueRef _Nullable * _Nonnull' name='outAQ' type64='^^{OpaqueAudioQueue}'/>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' name='inFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type64='UInt32' name='inFlags' type64='I'/>
<arg declared_type64='dispatch_queue_t _Nonnull' name='inCallbackDispatchQueue' type64='@'/>
<arg declared_type64='AudioQueueOutputCallbackBlock _Nonnull' function_pointer='true' name='inCallbackBlock' type64='@?'>
<arg declared_type64='AudioQueueRef _Nonnull' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueBufferRef _Nonnull' type64='^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueOfflineRender'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' name='inTimestamp' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AudioQueueBufferRef _Nonnull' name='ioBuffer' type64='^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}'/>
<arg declared_type64='UInt32' name='inNumberFrames' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueuePause'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueuePrime'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='UInt32' name='inNumberOfFramesToPrepare' type64='I'/>
<arg declared_type64='UInt32 * _Nullable' name='outNumberOfFramesPrepared' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueProcessingTapDispose'>
<arg declared_type64='AudioQueueProcessingTapRef _Nonnull' name='inAQTap' type64='^{OpaqueAudioQueueProcessingTap=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueProcessingTapGetQueueTime'>
<arg declared_type64='AudioQueueProcessingTapRef _Nonnull' name='inAQTap' type64='^{OpaqueAudioQueueProcessingTap=}'/>
<arg declared_type64='Float64 * _Nonnull' name='outQueueSampleTime' type64='^d'/>
<arg declared_type64='UInt32 * _Nonnull' name='outQueueFrameCount' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueProcessingTapGetSourceAudio'>
<arg declared_type64='AudioQueueProcessingTapRef _Nonnull' name='inAQTap' type64='^{OpaqueAudioQueueProcessingTap=}'/>
<arg declared_type64='UInt32' name='inNumberFrames' type64='I'/>
<arg declared_type64='AudioTimeStamp * _Nonnull' name='ioTimeStamp' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AudioQueueProcessingTapFlags * _Nonnull' name='outFlags' type64='^I'/>
<arg declared_type64='UInt32 * _Nonnull' name='outNumberFrames' type64='^I'/>
<arg declared_type64='AudioBufferList * _Nonnull' name='ioData' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueProcessingTapNew'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueProcessingTapCallback _Nonnull' function_pointer='true' name='inCallback' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='AudioQueueProcessingTapRef _Nonnull' type64='^{OpaqueAudioQueueProcessingTap=}'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AudioQueueProcessingTapFlags * _Nonnull' type64='^I'/>
<arg declared_type64='UInt32 * _Nonnull' type64='^I'/>
<arg declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void * _Nullable' name='inClientData' type64='^v'/>
<arg declared_type64='AudioQueueProcessingTapFlags' name='inFlags' type64='I'/>
<arg declared_type64='UInt32 * _Nonnull' name='outMaxFrames' type64='^I'/>
<arg declared_type64='AudioStreamBasicDescription * _Nonnull' name='outProcessingFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type64='AudioQueueProcessingTapRef _Nullable * _Nonnull' name='outAQTap' type64='^^{OpaqueAudioQueueProcessingTap}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueRemovePropertyListener'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueuePropertyID' name='inID' type64='I'/>
<arg declared_type64='AudioQueuePropertyListenerProc _Nonnull' function_pointer='true' name='inProc' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='AudioQueueRef _Nonnull' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueuePropertyID' type64='I'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void * _Nullable' name='inUserData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueReset'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueSetOfflineRenderFormat'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nullable' name='inFormat' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg const='true' declared_type64='AudioChannelLayout * _Nullable' name='inLayout' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueSetParameter'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueueParameterID' name='inParamID' type64='I'/>
<arg declared_type64='AudioQueueParameterValue' name='inValue' type64='f'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueSetProperty'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='AudioQueuePropertyID' name='inID' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inData' type64='^v'/>
<arg declared_type64='UInt32' name='inDataSize' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueStart'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nullable' name='inStartTime' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioQueueStop'>
<arg declared_type64='AudioQueueRef _Nonnull' name='inAQ' type64='^{OpaqueAudioQueue=}'/>
<arg declared_type64='Boolean' name='inImmediate' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioServicesAddSystemSoundCompletion'>
<arg declared_type64='SystemSoundID' name='inSystemSoundID' type64='I'/>
<arg declared_type64='CFRunLoopRef _Nullable' name='inRunLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nullable' name='inRunLoopMode' type64='^{__CFString=}'/>
<arg declared_type64='AudioServicesSystemSoundCompletionProc _Nonnull' function_pointer='true' name='inCompletionRoutine' type64='^?'>
<arg declared_type64='SystemSoundID' type64='I'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void * _Nullable' name='inClientData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioServicesCreateSystemSoundID'>
<arg declared_type64='CFURLRef _Nonnull' name='inFileURL' type64='^{__CFURL=}'/>
<arg declared_type64='SystemSoundID * _Nonnull' name='outSystemSoundID' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioServicesDisposeSystemSoundID'>
<arg declared_type64='SystemSoundID' name='inSystemSoundID' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioServicesGetProperty'>
<arg declared_type64='AudioServicesPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inSpecifierSize' type64='I'/>
<arg const='true' declared_type64='void * _Nullable' name='inSpecifier' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioPropertyDataSize' type64='^I'/>
<arg declared_type64='void * _Nullable' name='outPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioServicesGetPropertyInfo'>
<arg declared_type64='AudioServicesPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inSpecifierSize' type64='I'/>
<arg const='true' declared_type64='void * _Nullable' name='inSpecifier' type64='^v'/>
<arg declared_type64='UInt32 * _Nullable' name='outPropertyDataSize' type64='^I'/>
<arg declared_type64='Boolean * _Nullable' name='outWritable' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioServicesPlayAlertSound'>
<arg declared_type64='SystemSoundID' name='inSystemSoundID' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='AudioServicesPlayAlertSoundWithCompletion'>
<arg declared_type64='SystemSoundID' name='inSystemSoundID' type64='I'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' name='inCompletionBlock' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='AudioServicesPlaySystemSound'>
<arg declared_type64='SystemSoundID' name='inSystemSoundID' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='AudioServicesPlaySystemSoundWithCompletion'>
<arg declared_type64='SystemSoundID' name='inSystemSoundID' type64='I'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' name='inCompletionBlock' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='AudioServicesRemoveSystemSoundCompletion'>
<arg declared_type64='SystemSoundID' name='inSystemSoundID' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='AudioServicesSetProperty'>
<arg declared_type64='AudioServicesPropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inSpecifierSize' type64='I'/>
<arg const='true' declared_type64='void * _Nullable' name='inSpecifier' type64='^v'/>
<arg declared_type64='UInt32' name='inPropertyDataSize' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioSessionAddPropertyListener'>
<arg declared_type64='AudioSessionPropertyID' name='inID' type64='I'/>
<arg declared_type64='AudioSessionPropertyListener' function_pointer='true' name='inProc' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='AudioSessionPropertyID' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void*' name='inClientData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioSessionGetProperty'>
<arg declared_type64='AudioSessionPropertyID' name='inID' type64='I'/>
<arg declared_type64='UInt32*' name='ioDataSize' type64='^I'/>
<arg declared_type64='void*' name='outData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioSessionGetPropertySize'>
<arg declared_type64='AudioSessionPropertyID' name='inID' type64='I'/>
<arg declared_type64='UInt32*' name='outDataSize' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioSessionInitialize'>
<arg declared_type64='CFRunLoopRef' name='inRunLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef' name='inRunLoopMode' type64='^{__CFString=}'/>
<arg declared_type64='AudioSessionInterruptionListener' function_pointer='true' name='inInterruptionListener' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='UInt32' type64='I'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void*' name='inClientData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioSessionRemovePropertyListener'>
<arg declared_type64='AudioSessionPropertyID' name='inID' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioSessionRemovePropertyListenerWithUserData'>
<arg declared_type64='AudioSessionPropertyID' name='inID' type64='I'/>
<arg declared_type64='AudioSessionPropertyListener' function_pointer='true' name='inProc' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='AudioSessionPropertyID' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void*' name='inClientData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioSessionSetActive'>
<arg declared_type64='Boolean' name='active' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioSessionSetActiveWithFlags'>
<arg declared_type64='Boolean' name='active' type64='B'/>
<arg declared_type64='UInt32' name='inFlags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioSessionSetProperty'>
<arg declared_type64='AudioSessionPropertyID' name='inID' type64='I'/>
<arg declared_type64='UInt32' name='inDataSize' type64='I'/>
<arg const='true' declared_type64='void*' name='inData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitAddPropertyListener'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitPropertyID' name='inID' type64='I'/>
<arg declared_type64='AudioUnitPropertyListenerProc _Nonnull' function_pointer='true' name='inProc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='AudioUnit _Nonnull' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitPropertyID' type64='I'/>
<arg declared_type64='AudioUnitScope' type64='I'/>
<arg declared_type64='AudioUnitElement' type64='I'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void * _Nullable' name='inProcUserData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitAddRenderNotify'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AURenderCallback _Nonnull' function_pointer='true' name='inProc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='AudioBufferList * _Nullable' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='void * _Nullable' name='inProcUserData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitExtensionCopyComponentList'>
<arg declared_type64='CFStringRef _Nonnull' name='extensionIdentifier' type64='^{__CFString=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='AudioUnitExtensionSetComponentList'>
<arg declared_type64='CFStringRef _Nonnull' name='extensionIdentifier' type64='^{__CFString=}'/>
<arg declared_type64='CFArrayRef _Nullable' name='audioComponentInfo' type64='^{__CFArray=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitGetParameter'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitParameterID' name='inID' type64='I'/>
<arg declared_type64='AudioUnitScope' name='inScope' type64='I'/>
<arg declared_type64='AudioUnitElement' name='inElement' type64='I'/>
<arg declared_type64='AudioUnitParameterValue * _Nonnull' name='outValue' type64='^f'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitGetProperty'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitPropertyID' name='inID' type64='I'/>
<arg declared_type64='AudioUnitScope' name='inScope' type64='I'/>
<arg declared_type64='AudioUnitElement' name='inElement' type64='I'/>
<arg declared_type64='void * _Nonnull' name='outData' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioDataSize' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitGetPropertyInfo'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitPropertyID' name='inID' type64='I'/>
<arg declared_type64='AudioUnitScope' name='inScope' type64='I'/>
<arg declared_type64='AudioUnitElement' name='inElement' type64='I'/>
<arg declared_type64='UInt32 * _Nullable' name='outDataSize' type64='^I'/>
<arg declared_type64='Boolean * _Nullable' name='outWritable' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitInitialize'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitProcess'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitRenderActionFlags * _Nullable' name='ioActionFlags' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' name='inTimeStamp' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' name='inNumberFrames' type64='I'/>
<arg declared_type64='AudioBufferList * _Nonnull' name='ioData' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitProcessMultiple'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitRenderActionFlags * _Nullable' name='ioActionFlags' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' name='inTimeStamp' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' name='inNumberFrames' type64='I'/>
<arg declared_type64='UInt32' name='inNumberInputBufferLists' type64='I'/>
<arg const='true' declared_type64='AudioBufferList * _Nonnull * _Nonnull' name='inInputBufferLists' type64='^^{AudioBufferList}'/>
<arg declared_type64='UInt32' name='inNumberOutputBufferLists' type64='I'/>
<arg declared_type64='AudioBufferList * _Nonnull * _Nonnull' name='ioOutputBufferLists' type64='^^{AudioBufferList}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitRemovePropertyListenerWithUserData'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitPropertyID' name='inID' type64='I'/>
<arg declared_type64='AudioUnitPropertyListenerProc _Nonnull' function_pointer='true' name='inProc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='AudioUnit _Nonnull' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitPropertyID' type64='I'/>
<arg declared_type64='AudioUnitScope' type64='I'/>
<arg declared_type64='AudioUnitElement' type64='I'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void * _Nullable' name='inProcUserData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitRemoveRenderNotify'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AURenderCallback _Nonnull' function_pointer='true' name='inProc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='UInt32' type64='I'/>
<arg declared_type64='AudioBufferList * _Nullable' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='void * _Nullable' name='inProcUserData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitRender'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitRenderActionFlags * _Nullable' name='ioActionFlags' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' name='inTimeStamp' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='UInt32' name='inOutputBusNumber' type64='I'/>
<arg declared_type64='UInt32' name='inNumberFrames' type64='I'/>
<arg declared_type64='AudioBufferList * _Nonnull' name='ioData' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitReset'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitScope' name='inScope' type64='I'/>
<arg declared_type64='AudioUnitElement' name='inElement' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitScheduleParameters'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg const='true' declared_type64='AudioUnitParameterEvent * _Nonnull' name='inParameterEvent' type64='^{AudioUnitParameterEvent=IIII(?={?=iIff}{?=If})}'/>
<arg declared_type64='UInt32' name='inNumParamEvents' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitSetParameter'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitParameterID' name='inID' type64='I'/>
<arg declared_type64='AudioUnitScope' name='inScope' type64='I'/>
<arg declared_type64='AudioUnitElement' name='inElement' type64='I'/>
<arg declared_type64='AudioUnitParameterValue' name='inValue' type64='f'/>
<arg declared_type64='UInt32' name='inBufferOffsetInFrames' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitSetProperty'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='AudioUnitPropertyID' name='inID' type64='I'/>
<arg declared_type64='AudioUnitScope' name='inScope' type64='I'/>
<arg declared_type64='AudioUnitElement' name='inElement' type64='I'/>
<arg const='true' declared_type64='void * _Nullable' name='inData' type64='^v'/>
<arg declared_type64='UInt32' name='inDataSize' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioUnitUninitialize'>
<arg declared_type64='AudioUnit _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='AudioWorkIntervalCreate'>
<arg const='true' declared_type64='char * _Nonnull' name='name' type64='*'/>
<arg declared_type64='os_clockid_t' name='clock' type64='I'/>
<arg declared_type64='os_workgroup_attr_t _Nullable' name='attr' type64='^{os_workgroup_attr_opaque_s=I[60c]}'/>
<retval already_retained='true' declared_type64='os_workgroup_interval_t _Nonnull' type64='@'/>
</function>
<function name='CAShow'>
<arg declared_type64='void * _Nonnull' name='inObject' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CAShowFile'>
<arg declared_type64='void * _Nonnull' name='inObject' type64='^v'/>
<arg declared_type64='FILE * _Nonnull' name='inFile' type64='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CopyInstrumentInfoFromSoundBank'>
<arg declared_type64='CFURLRef _Nonnull' name='inURL' type64='^{__CFURL=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='outInstrumentInfo' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CopyNameFromSoundBank'>
<arg declared_type64='CFURLRef _Nonnull' name='inURL' type64='^{__CFURL=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='outName' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='DisposeAUGraph'>
<arg declared_type64='AUGraph _Nonnull' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='DisposeMusicEventIterator'>
<arg declared_type64='MusicEventIterator _Nonnull' name='inIterator' type64='^{OpaqueMusicEventIterator=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='DisposeMusicPlayer'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='DisposeMusicSequence'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileCreateWithURL'>
<arg declared_type64='CFURLRef _Nonnull' name='inURL' type64='^{__CFURL=}'/>
<arg declared_type64='AudioFileTypeID' name='inFileType' type64='I'/>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' name='inStreamDesc' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg const='true' declared_type64='AudioChannelLayout * _Nullable' name='inChannelLayout' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
<arg declared_type64='UInt32' name='inFlags' type64='I'/>
<arg declared_type64='ExtAudioFileRef _Nullable * _Nonnull' name='outExtAudioFile' type64='^^{OpaqueExtAudioFile}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileDispose'>
<arg declared_type64='ExtAudioFileRef _Nonnull' name='inExtAudioFile' type64='^{OpaqueExtAudioFile=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileGetProperty'>
<arg declared_type64='ExtAudioFileRef _Nonnull' name='inExtAudioFile' type64='^{OpaqueExtAudioFile=}'/>
<arg declared_type64='ExtAudioFilePropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioPropertyDataSize' type64='^I'/>
<arg declared_type64='void * _Nonnull' name='outPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileGetPropertyInfo'>
<arg declared_type64='ExtAudioFileRef _Nonnull' name='inExtAudioFile' type64='^{OpaqueExtAudioFile=}'/>
<arg declared_type64='ExtAudioFilePropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32 * _Nullable' name='outSize' type64='^I'/>
<arg declared_type64='Boolean * _Nullable' name='outWritable' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileOpenURL'>
<arg declared_type64='CFURLRef _Nonnull' name='inURL' type64='^{__CFURL=}'/>
<arg declared_type64='ExtAudioFileRef _Nullable * _Nonnull' name='outExtAudioFile' type64='^^{OpaqueExtAudioFile}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileRead'>
<arg declared_type64='ExtAudioFileRef _Nonnull' name='inExtAudioFile' type64='^{OpaqueExtAudioFile=}'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioNumberFrames' type64='^I'/>
<arg declared_type64='AudioBufferList * _Nonnull' name='ioData' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileSeek'>
<arg declared_type64='ExtAudioFileRef _Nonnull' name='inExtAudioFile' type64='^{OpaqueExtAudioFile=}'/>
<arg declared_type64='SInt64' name='inFrameOffset' type64='q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileSetProperty'>
<arg declared_type64='ExtAudioFileRef _Nonnull' name='inExtAudioFile' type64='^{OpaqueExtAudioFile=}'/>
<arg declared_type64='ExtAudioFilePropertyID' name='inPropertyID' type64='I'/>
<arg declared_type64='UInt32' name='inPropertyDataSize' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inPropertyData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileTell'>
<arg declared_type64='ExtAudioFileRef _Nonnull' name='inExtAudioFile' type64='^{OpaqueExtAudioFile=}'/>
<arg declared_type64='SInt64 * _Nonnull' name='outFrameOffset' type64='^q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileWrapAudioFileID'>
<arg declared_type64='AudioFileID _Nonnull' name='inFileID' type64='^{OpaqueAudioFileID=}'/>
<arg declared_type64='Boolean' name='inForWriting' type64='B'/>
<arg declared_type64='ExtAudioFileRef _Nullable * _Nonnull' name='outExtAudioFile' type64='^^{OpaqueExtAudioFile}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileWrite'>
<arg declared_type64='ExtAudioFileRef _Nonnull' name='inExtAudioFile' type64='^{OpaqueExtAudioFile=}'/>
<arg declared_type64='UInt32' name='inNumberFrames' type64='I'/>
<arg const='true' declared_type64='AudioBufferList * _Nonnull' name='ioData' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ExtAudioFileWriteAsync'>
<arg declared_type64='ExtAudioFileRef _Nonnull' name='inExtAudioFile' type64='^{OpaqueExtAudioFile=}'/>
<arg declared_type64='UInt32' name='inNumberFrames' type64='I'/>
<arg const='true' declared_type64='AudioBufferList * _Nullable' name='ioData' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function inline='true' name='GetAudioUnitParameterDisplayType'>
<arg declared_type64='AudioUnitParameterOptions' name='flags' type64='I'/>
<retval declared_type64='AudioUnitParameterOptions' type64='I'/>
</function>
<function name='MusicDeviceMIDIEvent'>
<arg declared_type64='MusicDeviceComponent _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='UInt32' name='inStatus' type64='I'/>
<arg declared_type64='UInt32' name='inData1' type64='I'/>
<arg declared_type64='UInt32' name='inData2' type64='I'/>
<arg declared_type64='UInt32' name='inOffsetSampleFrame' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicDeviceStartNote'>
<arg declared_type64='MusicDeviceComponent _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='MusicDeviceInstrumentID' name='inInstrument' type64='I'/>
<arg declared_type64='MusicDeviceGroupID' name='inGroupID' type64='I'/>
<arg declared_type64='NoteInstanceID * _Nonnull' name='outNoteInstanceID' type64='^I'/>
<arg declared_type64='UInt32' name='inOffsetSampleFrame' type64='I'/>
<arg const='true' declared_type64='MusicDeviceNoteParams * _Nonnull' name='inParams' type64='^{MusicDeviceNoteParams=Iff[1{NoteParamsControlValue=If}]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicDeviceStopNote'>
<arg declared_type64='MusicDeviceComponent _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg declared_type64='MusicDeviceGroupID' name='inGroupID' type64='I'/>
<arg declared_type64='NoteInstanceID' name='inNoteInstanceID' type64='I'/>
<arg declared_type64='UInt32' name='inOffsetSampleFrame' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicDeviceSysEx'>
<arg declared_type64='MusicDeviceComponent _Nonnull' name='inUnit' type64='^{OpaqueAudioComponentInstance=}'/>
<arg const='true' declared_type64='UInt8 * _Nonnull' name='inData' type64='*'/>
<arg declared_type64='UInt32' name='inLength' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicEventIteratorDeleteEvent'>
<arg declared_type64='MusicEventIterator _Nonnull' name='inIterator' type64='^{OpaqueMusicEventIterator=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicEventIteratorGetEventInfo'>
<arg declared_type64='MusicEventIterator _Nonnull' name='inIterator' type64='^{OpaqueMusicEventIterator=}'/>
<arg declared_type64='MusicTimeStamp * _Nonnull' name='outTimeStamp' type64='^d'/>
<arg declared_type64='MusicEventType * _Nonnull' name='outEventType' type64='^I'/>
<arg const='true' declared_type64='void * _Nullable * _Nonnull' name='outEventData' type64='^^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='outEventDataSize' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicEventIteratorHasCurrentEvent'>
<arg declared_type64='MusicEventIterator _Nonnull' name='inIterator' type64='^{OpaqueMusicEventIterator=}'/>
<arg declared_type64='Boolean * _Nonnull' name='outHasCurEvent' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicEventIteratorHasNextEvent'>
<arg declared_type64='MusicEventIterator _Nonnull' name='inIterator' type64='^{OpaqueMusicEventIterator=}'/>
<arg declared_type64='Boolean * _Nonnull' name='outHasNextEvent' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicEventIteratorHasPreviousEvent'>
<arg declared_type64='MusicEventIterator _Nonnull' name='inIterator' type64='^{OpaqueMusicEventIterator=}'/>
<arg declared_type64='Boolean * _Nonnull' name='outHasPrevEvent' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicEventIteratorNextEvent'>
<arg declared_type64='MusicEventIterator _Nonnull' name='inIterator' type64='^{OpaqueMusicEventIterator=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicEventIteratorPreviousEvent'>
<arg declared_type64='MusicEventIterator _Nonnull' name='inIterator' type64='^{OpaqueMusicEventIterator=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicEventIteratorSeek'>
<arg declared_type64='MusicEventIterator _Nonnull' name='inIterator' type64='^{OpaqueMusicEventIterator=}'/>
<arg declared_type64='MusicTimeStamp' name='inTimeStamp' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicEventIteratorSetEventInfo'>
<arg declared_type64='MusicEventIterator _Nonnull' name='inIterator' type64='^{OpaqueMusicEventIterator=}'/>
<arg declared_type64='MusicEventType' name='inEventType' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' name='inEventData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicEventIteratorSetEventTime'>
<arg declared_type64='MusicEventIterator _Nonnull' name='inIterator' type64='^{OpaqueMusicEventIterator=}'/>
<arg declared_type64='MusicTimeStamp' name='inTimeStamp' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerGetBeatsForHostTime'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<arg declared_type64='UInt64' name='inHostTime' type64='Q'/>
<arg declared_type64='MusicTimeStamp * _Nonnull' name='outBeats' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerGetHostTimeForBeats'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<arg declared_type64='MusicTimeStamp' name='inBeats' type64='d'/>
<arg declared_type64='UInt64 * _Nonnull' name='outHostTime' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerGetPlayRateScalar'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<arg declared_type64='Float64 * _Nonnull' name='outScaleRate' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerGetSequence'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<arg declared_type64='MusicSequence _Nullable * _Nonnull' name='outSequence' type64='^^{OpaqueMusicSequence}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerGetTime'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<arg declared_type64='MusicTimeStamp * _Nonnull' name='outTime' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerIsPlaying'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<arg declared_type64='Boolean * _Nonnull' name='outIsPlaying' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerPreroll'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerSetPlayRateScalar'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<arg declared_type64='Float64' name='inScaleRate' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerSetSequence'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<arg declared_type64='MusicSequence _Nullable' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerSetTime'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<arg declared_type64='MusicTimeStamp' name='inTime' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerStart'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicPlayerStop'>
<arg declared_type64='MusicPlayer _Nonnull' name='inPlayer' type64='^{OpaqueMusicPlayer=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceBarBeatTimeToBeats'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg const='true' declared_type64='CABarBeatTime * _Nonnull' name='inBarBeatTime' type64='^{CABarBeatTime=iSSSS}'/>
<arg declared_type64='MusicTimeStamp * _Nonnull' name='outBeats' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceBeatsToBarBeatTime'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MusicTimeStamp' name='inBeats' type64='d'/>
<arg declared_type64='UInt32' name='inSubbeatDivisor' type64='I'/>
<arg declared_type64='CABarBeatTime * _Nonnull' name='outBarBeatTime' type64='^{CABarBeatTime=iSSSS}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceDisposeTrack'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceFileCreate'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='inFileRef' type64='^{__CFURL=}'/>
<arg declared_type64='MusicSequenceFileTypeID' name='inFileType' type64='I'/>
<arg declared_type64='MusicSequenceFileFlags' name='inFlags' type64='I'/>
<arg declared_type64='SInt16' name='inResolution' type64='s'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceFileCreateData'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MusicSequenceFileTypeID' name='inFileType' type64='I'/>
<arg declared_type64='MusicSequenceFileFlags' name='inFlags' type64='I'/>
<arg declared_type64='SInt16' name='inResolution' type64='s'/>
<arg declared_type64='CFDataRef _Nullable * _Nonnull' name='outData' type64='^^{__CFData}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceFileLoad'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='inFileRef' type64='^{__CFURL=}'/>
<arg declared_type64='MusicSequenceFileTypeID' name='inFileTypeHint' type64='I'/>
<arg declared_type64='MusicSequenceLoadFlags' name='inFlags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceFileLoadData'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='inData' type64='^{__CFData=}'/>
<arg declared_type64='MusicSequenceFileTypeID' name='inFileTypeHint' type64='I'/>
<arg declared_type64='MusicSequenceLoadFlags' name='inFlags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceGetAUGraph'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='AUGraph _Nullable * _Nonnull' name='outGraph' type64='^^{OpaqueAUGraph}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceGetBeatsForSeconds'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='Float64' name='inSeconds' type64='d'/>
<arg declared_type64='MusicTimeStamp * _Nonnull' name='outBeats' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceGetIndTrack'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='UInt32' name='inTrackIndex' type64='I'/>
<arg declared_type64='MusicTrack _Nullable * _Nonnull' name='outTrack' type64='^^{OpaqueMusicTrack}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceGetInfoDictionary'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<retval declared_type64='CFDictionaryRef _Nonnull' type64='^{__CFDictionary=}'/>
</function>
<function inline='true' name='MusicSequenceGetSMPTEResolution'>
<arg declared_type64='SInt16' name='inRes' type64='s'/>
<arg declared_type64='SignedByte * _Nonnull' name='fps' type64='*'/>
<arg declared_type64='Byte * _Nonnull' name='ticks' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='MusicSequenceGetSecondsForBeats'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MusicTimeStamp' name='inBeats' type64='d'/>
<arg declared_type64='Float64 * _Nonnull' name='outSeconds' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceGetSequenceType'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MusicSequenceType * _Nonnull' name='outType' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceGetTempoTrack'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MusicTrack _Nullable * _Nonnull' name='outTrack' type64='^^{OpaqueMusicTrack}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceGetTrackCount'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='UInt32 * _Nonnull' name='outNumberOfTracks' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceGetTrackIndex'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='UInt32 * _Nonnull' name='outTrackIndex' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceNewTrack'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MusicTrack _Nullable * _Nonnull' name='outTrack' type64='^^{OpaqueMusicTrack}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceReverse'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceSetAUGraph'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='AUGraph _Nullable' name='inGraph' type64='^{OpaqueAUGraph=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceSetMIDIEndpoint'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MIDIEndpointRef' name='inEndpoint' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function inline='true' name='MusicSequenceSetSMPTEResolution'>
<arg declared_type64='SignedByte' name='fps' type64='c'/>
<arg declared_type64='Byte' name='ticks' type64='C'/>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='MusicSequenceSetSequenceType'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MusicSequenceType' name='inType' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicSequenceSetUserCallback'>
<arg declared_type64='MusicSequence _Nonnull' name='inSequence' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MusicSequenceUserCallback _Nullable' function_pointer='true' name='inCallback' type64='^?'>
<arg declared_type64='void * _Nullable' type64='^v'/>
<arg declared_type64='MusicSequence _Nonnull' type64='^{OpaqueMusicSequence=}'/>
<arg declared_type64='MusicTrack _Nonnull' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' type64='d'/>
<arg const='true' declared_type64='MusicEventUserData * _Nonnull' type64='^{MusicEventUserData=I[1C]}'/>
<arg declared_type64='MusicTimeStamp' type64='d'/>
<arg declared_type64='MusicTimeStamp' type64='d'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void * _Nullable' name='inClientData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackClear'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inStartTime' type64='d'/>
<arg declared_type64='MusicTimeStamp' name='inEndTime' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackCopyInsert'>
<arg declared_type64='MusicTrack _Nonnull' name='inSourceTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inSourceStartTime' type64='d'/>
<arg declared_type64='MusicTimeStamp' name='inSourceEndTime' type64='d'/>
<arg declared_type64='MusicTrack _Nonnull' name='inDestTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inDestInsertTime' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackCut'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inStartTime' type64='d'/>
<arg declared_type64='MusicTimeStamp' name='inEndTime' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackGetDestMIDIEndpoint'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MIDIEndpointRef * _Nonnull' name='outEndpoint' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackGetDestNode'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='AUNode * _Nonnull' name='outNode' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackGetProperty'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='UInt32' name='inPropertyID' type64='I'/>
<arg declared_type64='void * _Nonnull' name='outData' type64='^v'/>
<arg declared_type64='UInt32 * _Nonnull' name='ioLength' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackGetSequence'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicSequence _Nullable * _Nonnull' name='outSequence' type64='^^{OpaqueMusicSequence}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackMerge'>
<arg declared_type64='MusicTrack _Nonnull' name='inSourceTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inSourceStartTime' type64='d'/>
<arg declared_type64='MusicTimeStamp' name='inSourceEndTime' type64='d'/>
<arg declared_type64='MusicTrack _Nonnull' name='inDestTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inDestInsertTime' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackMoveEvents'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inStartTime' type64='d'/>
<arg declared_type64='MusicTimeStamp' name='inEndTime' type64='d'/>
<arg declared_type64='MusicTimeStamp' name='inMoveTime' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackNewAUPresetEvent'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inTimeStamp' type64='d'/>
<arg const='true' declared_type64='AUPresetEvent * _Nonnull' name='inPresetEvent' type64='^{AUPresetEvent=II^v}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackNewExtendedNoteEvent'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inTimeStamp' type64='d'/>
<arg const='true' declared_type64='ExtendedNoteOnEvent * _Nonnull' name='inInfo' type64='^{ExtendedNoteOnEvent=IIf{MusicDeviceNoteParams=Iff[1{NoteParamsControlValue=If}]}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackNewExtendedTempoEvent'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inTimeStamp' type64='d'/>
<arg declared_type64='Float64' name='inBPM' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackNewMIDIChannelEvent'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inTimeStamp' type64='d'/>
<arg const='true' declared_type64='MIDIChannelMessage * _Nonnull' name='inMessage' type64='^{MIDIChannelMessage=CCCC}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackNewMIDINoteEvent'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inTimeStamp' type64='d'/>
<arg const='true' declared_type64='MIDINoteMessage * _Nonnull' name='inMessage' type64='^{MIDINoteMessage=CCCCf}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackNewMIDIRawDataEvent'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inTimeStamp' type64='d'/>
<arg const='true' declared_type64='MIDIRawData * _Nonnull' name='inRawData' type64='^{MIDIRawData=I[1C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackNewMetaEvent'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inTimeStamp' type64='d'/>
<arg const='true' declared_type64='MIDIMetaEvent * _Nonnull' name='inMetaEvent' type64='^{MIDIMetaEvent=CCCCI[1C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackNewParameterEvent'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inTimeStamp' type64='d'/>
<arg const='true' declared_type64='ParameterEvent * _Nonnull' name='inInfo' type64='^{ParameterEvent=IIIf}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackNewUserEvent'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicTimeStamp' name='inTimeStamp' type64='d'/>
<arg const='true' declared_type64='MusicEventUserData * _Nonnull' name='inUserData' type64='^{MusicEventUserData=I[1C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackSetDestMIDIEndpoint'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MIDIEndpointRef' name='inEndpoint' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackSetDestNode'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='AUNode' name='inNode' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='MusicTrackSetProperty'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='UInt32' name='inPropertyID' type64='I'/>
<arg declared_type64='void * _Nonnull' name='inData' type64='^v'/>
<arg declared_type64='UInt32' name='inLength' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='NewAUGraph'>
<arg declared_type64='AUGraph _Nullable * _Nonnull' name='outGraph' type64='^^{OpaqueAUGraph}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='NewMusicEventIterator'>
<arg declared_type64='MusicTrack _Nonnull' name='inTrack' type64='^{OpaqueMusicTrack=}'/>
<arg declared_type64='MusicEventIterator _Nullable * _Nonnull' name='outIterator' type64='^^{OpaqueMusicEventIterator}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='NewMusicPlayer'>
<arg declared_type64='MusicPlayer _Nullable * _Nonnull' name='outPlayer' type64='^^{OpaqueMusicPlayer}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='NewMusicSequence'>
<arg declared_type64='MusicSequence _Nullable * _Nonnull' name='outSequence' type64='^^{OpaqueMusicSequence}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function inline='true' name='NextAudioFileRegion'>
<arg const='true' declared_type64='AudioFileRegion * _Nonnull' name='inAFRegionPtr' type64='^{AudioFileRegion=I^{__CFString}II[1{AudioFileMarker=d^{__CFString}i{AudioFile_SMPTE_Time=cCCCI}ISS}]}'/>
<retval declared_type64='AudioFileRegion * _Nonnull' type64='^{AudioFileRegion=I^{__CFString}II[1{AudioFileMarker=d^{__CFString}i{AudioFile_SMPTE_Time=cCCCI}ISS}]}'/>
</function>
<function inline='true' name='NumAudioFileMarkersToNumBytes'>
<arg declared_type64='size_t' name='inNumMarkers' type64='Q'/>
<retval declared_type64='size_t' type64='Q'/>
</function>
<function inline='true' name='NumBytesToNumAudioFileMarkers'>
<arg declared_type64='size_t' name='inNumBytes' type64='Q'/>
<retval declared_type64='size_t' type64='Q'/>
</function>
<function inline='true' name='SetAudioUnitParameterDisplayType'>
<arg declared_type64='AudioUnitParameterOptions' name='flags' type64='I'/>
<arg declared_type64='AudioUnitParameterOptions' name='displayType' type64='I'/>
<retval declared_type64='AudioUnitParameterOptions' type64='I'/>
</function>
<class name='AUAudioUnit'>
<method selector='MIDIOutputBufferSizeHint'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='MIDIOutputEventBlock'>
<retval declared_type64='AUMIDIOutputEventBlock _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='AUEventSampleTime' type64='q'/>
<arg declared_type64='uint8_t' type64='C'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</retval>
</method>
<method selector='MIDIOutputNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='allParameterValues'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allocateRenderResourcesAndReturnError:'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='audioUnitName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='audioUnitShortName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='canPerformInput'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPerformOutput'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canProcessInPlace'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='channelCapabilities'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='channelMap'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='component'>
<retval declared_type64='AudioComponent _Nonnull' type64='^{OpaqueAudioComponent=}'/>
</method>
<method selector='componentDescription'>
<retval declared_type64='AudioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
</method>
<method selector='componentName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='componentVersion'>
<retval declared_type64='uint32_t' type64='I'/>
</method>
<method selector='contextName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='currentPreset'>
<retval declared_type64='AUAudioUnitPreset * _Nullable' type64='@'/>
</method>
<method selector='deallocateRenderResources'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteUserPreset:error:'>
<arg declared_type64='AUAudioUnitPreset * _Nonnull' index='0' name='userPreset' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='disableProfile:cable:onChannel:error:'>
<arg declared_type64='MIDICIProfile * _Nonnull' index='0' name='profile' type64='@'/>
<arg declared_type64='uint8_t' index='1' name='cable' type64='C'/>
<arg declared_type64='MIDIChannelNumber' index='2' name='channel' type64='C'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='enableProfile:cable:onChannel:error:'>
<arg declared_type64='MIDICIProfile * _Nonnull' index='0' name='profile' type64='@'/>
<arg declared_type64='uint8_t' index='1' name='cable' type64='C'/>
<arg declared_type64='MIDIChannelNumber' index='2' name='channel' type64='C'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='factoryPresets'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='fullState'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='fullStateForDocument'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='initWithComponentDescription:error:'>
<arg declared_type64='AudioComponentDescription' index='0' name='componentDescription' type64='{AudioComponentDescription=IIIII}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithComponentDescription:options:error:'>
<arg declared_type64='AudioComponentDescription' index='0' name='componentDescription' type64='{AudioComponentDescription=IIIII}'/>
<arg declared_type64='AudioComponentInstantiationOptions' index='1' name='options' type64='I'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='inputBusses'>
<retval declared_type64='AUAudioUnitBusArray * _Nonnull' type64='@'/>
</method>
<method selector='inputHandler'>
<retval declared_type64='AUInputHandler _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AUAudioFrameCount' type64='I'/>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method class_method='true' selector='instantiateWithComponentDescription:options:completionHandler:'>
<arg declared_type64='AudioComponentDescription' index='0' name='componentDescription' type64='{AudioComponentDescription=IIIII}'/>
<arg declared_type64='AudioComponentInstantiationOptions' index='1' name='options' type64='I'/>
<arg declared_type64='void (^ _Nonnull)(AUAudioUnit * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='AUAudioUnit * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='internalRenderBlock'>
<retval declared_type64='AUInternalRenderBlock _Nonnull' function_pointer='true' type64='@?'>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AUAudioFrameCount' type64='I'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<arg const='true' declared_type64='AURenderEvent * _Nullable' type64='^(AURenderEvent={AURenderEventHeader=^(AURenderEvent)qCC}{AUParameterEvent=^(AURenderEvent)qC[3C]IQf}{AUMIDIEvent=^(AURenderEvent)qCCSC[3C]})'/>
<arg declared_type64='AURenderPullInputBlock _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AUAudioFrameCount' type64='I'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='AUAudioUnitStatus' type64='i'/>
</arg>
<retval declared_type64='AUAudioUnitStatus' type64='i'/>
</retval>
</method>
<method selector='isInputEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMusicDeviceOrEffect'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOutputEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRenderingOffline'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRunning'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='latency'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='manufacturerName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='maximumFramesToRender'>
<retval declared_type64='AUAudioFrameCount' type64='I'/>
</method>
<method selector='musicalContextBlock'>
<retval declared_type64='AUHostMusicalContextBlock _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='double * _Nullable' type64='^d'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<arg declared_type64='NSInteger * _Nullable' type64='^q'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<arg declared_type64='NSInteger * _Nullable' type64='^q'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<retval declared_type64='BOOL' type64='B'/>
</retval>
</method>
<method selector='osWorkgroup'>
<retval declared_type64='os_workgroup_t _Nonnull' type64='@'/>
</method>
<method selector='outputBusses'>
<retval declared_type64='AUAudioUnitBusArray * _Nonnull' type64='@'/>
</method>
<method selector='outputProvider'>
<retval declared_type64='AURenderPullInputBlock _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AUAudioFrameCount' type64='I'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='AUAudioUnitStatus' type64='i'/>
</retval>
</method>
<method selector='parameterTree'>
<retval declared_type64='AUParameterTree * _Nullable' type64='@'/>
</method>
<method selector='parametersForOverviewWithCount:'>
<arg declared_type64='NSInteger' index='0' name='count' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='presetStateFor:error:'>
<arg declared_type64='AUAudioUnitPreset * _Nonnull' index='0' name='userPreset' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='profileChangedBlock'>
<retval declared_type64='AUMIDICIProfileChangedBlock _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='uint8_t' type64='C'/>
<arg declared_type64='MIDIChannelNumber' type64='C'/>
<arg declared_type64='MIDICIProfile * _Nonnull' type64='@'/>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method selector='profileStateForCable:channel:'>
<arg declared_type64='uint8_t' index='0' name='cable' type64='C'/>
<arg declared_type64='MIDIChannelNumber' index='1' name='channel' type64='C'/>
<retval declared_type64='MIDICIProfileState * _Nonnull' type64='@'/>
</method>
<method selector='providesUserInterface'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='registerSubclass:asComponentDescription:name:version:'>
<arg declared_type64='Class _Nonnull' index='0' name='cls' type64='#'/>
<arg declared_type64='AudioComponentDescription' index='1' name='componentDescription' type64='{AudioComponentDescription=IIIII}'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='name' type64='@'/>
<arg declared_type64='UInt32' index='3' name='version' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeRenderObserver:'>
<arg declared_type64='NSInteger' index='0' name='token' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderBlock'>
<retval declared_type64='AURenderBlock _Nonnull' function_pointer='true' type64='@?'>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AUAudioFrameCount' type64='I'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<arg declared_type64='AURenderPullInputBlock _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AUAudioFrameCount' type64='I'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='AUAudioUnitStatus' type64='i'/>
</arg>
<retval declared_type64='AUAudioUnitStatus' type64='i'/>
</retval>
</method>
<method selector='renderContextObserver'>
<retval declared_type64='AURenderContextObserver _Nonnull' function_pointer='true' type64='@?'>
<arg const='true' declared_type64='AudioUnitRenderContext * _Nonnull' type64='^{AudioUnitRenderContext=@[6I]}'/>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method selector='renderQuality'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='renderResourcesAllocated'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveUserPreset:error:'>
<arg declared_type64='AUAudioUnitPreset * _Nonnull' index='0' name='userPreset' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='scheduleMIDIEventBlock'>
<retval declared_type64='AUScheduleMIDIEventBlock _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='AUEventSampleTime' type64='q'/>
<arg declared_type64='uint8_t' type64='C'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' type64='*'/>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method selector='scheduleParameterBlock'>
<retval declared_type64='AUScheduleParameterBlock _Nonnull' function_pointer='true' type64='@?'>
<arg declared_type64='AUEventSampleTime' type64='q'/>
<arg declared_type64='AUAudioFrameCount' type64='I'/>
<arg declared_type64='AUParameterAddress' type64='Q'/>
<arg declared_type64='AUValue' type64='f'/>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method selector='setChannelMap:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='channelMap' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContextName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='contextName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCurrentPreset:'>
<arg declared_type64='AUAudioUnitPreset * _Nullable' index='0' name='currentPreset' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFullState:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='fullState' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFullStateForDocument:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='fullStateForDocument' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputEnabled:'>
<arg declared_type64='BOOL' index='0' name='inputEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputHandler:'>
<arg declared_type64='AUInputHandler _Nullable' function_pointer='true' index='0' name='inputHandler' type64='@?'>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AUAudioFrameCount' type64='I'/>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMIDIOutputBufferSizeHint:'>
<arg declared_type64='NSInteger' index='0' name='MIDIOutputBufferSizeHint' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMIDIOutputEventBlock:'>
<arg declared_type64='AUMIDIOutputEventBlock _Nullable' function_pointer='true' index='0' name='MIDIOutputEventBlock' type64='@?'>
<arg declared_type64='AUEventSampleTime' type64='q'/>
<arg declared_type64='uint8_t' type64='C'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumFramesToRender:'>
<arg declared_type64='AUAudioFrameCount' index='0' name='maximumFramesToRender' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMusicalContextBlock:'>
<arg declared_type64='AUHostMusicalContextBlock _Nullable' function_pointer='true' index='0' name='musicalContextBlock' type64='@?'>
<arg declared_type64='double * _Nullable' type64='^d'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<arg declared_type64='NSInteger * _Nullable' type64='^q'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<arg declared_type64='NSInteger * _Nullable' type64='^q'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOutputEnabled:'>
<arg declared_type64='BOOL' index='0' name='outputEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOutputProvider:'>
<arg declared_type64='AURenderPullInputBlock _Nullable' function_pointer='true' index='0' name='outputProvider' type64='@?'>
<arg declared_type64='AudioUnitRenderActionFlags * _Nonnull' type64='^I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AUAudioFrameCount' type64='I'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<retval declared_type64='AUAudioUnitStatus' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParameterTree:'>
<arg declared_type64='AUParameterTree * _Nullable' index='0' name='parameterTree' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProfileChangedBlock:'>
<arg declared_type64='AUMIDICIProfileChangedBlock _Nullable' function_pointer='true' index='0' name='profileChangedBlock' type64='@?'>
<arg declared_type64='uint8_t' type64='C'/>
<arg declared_type64='MIDIChannelNumber' type64='C'/>
<arg declared_type64='MIDICIProfile * _Nonnull' type64='@'/>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderQuality:'>
<arg declared_type64='NSInteger' index='0' name='renderQuality' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderResourcesAllocated:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderingOffline:'>
<arg declared_type64='BOOL' index='0' name='renderingOffline' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldBypassEffect:'>
<arg declared_type64='BOOL' index='0' name='shouldBypassEffect' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransportStateBlock:'>
<arg declared_type64='AUHostTransportStateBlock _Nullable' function_pointer='true' index='0' name='transportStateBlock' type64='@?'>
<arg declared_type64='AUHostTransportStateFlags * _Nullable' type64='^Q'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldBypassEffect'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldChangeToFormat:forBus:'>
<arg declared_type64='AVAudioFormat * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='AUAudioUnitBus * _Nonnull' index='1' name='bus' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='startHardwareAndReturnError:'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stopHardware'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supportsMPE'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='supportsUserPresets'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tailTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='tokenByAddingRenderObserver:'>
<arg declared_type64='AURenderObserver _Nonnull' function_pointer='true' index='0' name='observer' type64='@?'>
<arg declared_type64='AudioUnitRenderActionFlags' type64='I'/>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='AUAudioFrameCount' type64='I'/>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='transportStateBlock'>
<retval declared_type64='AUHostTransportStateBlock _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='AUHostTransportStateFlags * _Nullable' type64='^Q'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<arg declared_type64='double * _Nullable' type64='^d'/>
<retval declared_type64='BOOL' type64='B'/>
</retval>
</method>
<method selector='userPresets'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='virtualMIDICableCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='AUAudioUnitBus'>
<method selector='busType'>
<retval declared_type64='AUAudioUnitBusType' type64='q'/>
</method>
<method selector='contextPresentationLatency'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='format'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='index'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='initWithFormat:error:'>
<arg declared_type64='AVAudioFormat * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maximumChannelCount'>
<retval declared_type64='AUAudioChannelCount' type64='I'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='ownerAudioUnit'>
<retval declared_type64='AUAudioUnit * _Nonnull' type64='@'/>
</method>
<method selector='setContextPresentationLatency:'>
<arg declared_type64='NSTimeInterval' index='0' name='contextPresentationLatency' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFormat:error:'>
<arg declared_type64='AVAudioFormat * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setMaximumChannelCount:'>
<arg declared_type64='AUAudioChannelCount' index='0' name='maximumChannelCount' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldAllocateBuffer:'>
<arg declared_type64='BOOL' index='0' name='shouldAllocateBuffer' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupportedChannelCounts:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='supportedChannelCounts' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldAllocateBuffer'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='supportedChannelCounts'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='supportedChannelLayoutTags'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='AUAudioUnitBusArray'>
<method selector='addObserverToAllBusses:forKeyPath:options:context:'>
<arg declared_type64='NSObject * _Nonnull' index='0' name='observer' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='keyPath' type64='@'/>
<arg declared_type64='NSKeyValueObservingOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='void * _Nullable' index='3' name='context' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='busType'>
<retval declared_type64='AUAudioUnitBusType' type64='q'/>
</method>
<method selector='count'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='initWithAudioUnit:busType:'>
<arg declared_type64='AUAudioUnit * _Nonnull' index='0' name='owner' type64='@'/>
<arg declared_type64='AUAudioUnitBusType' index='1' name='busType' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithAudioUnit:busType:busses:'>
<arg declared_type64='AUAudioUnit * _Nonnull' index='0' name='owner' type64='@'/>
<arg declared_type64='AUAudioUnitBusType' index='1' name='busType' type64='q'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='busArray' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isCountChangeable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<retval declared_type64='AUAudioUnitBus * _Nonnull' type64='@'/>
</method>
<method selector='ownerAudioUnit'>
<retval declared_type64='AUAudioUnit * _Nonnull' type64='@'/>
</method>
<method selector='removeObserverFromAllBusses:forKeyPath:context:'>
<arg declared_type64='NSObject * _Nonnull' index='0' name='observer' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='keyPath' type64='@'/>
<arg declared_type64='void * _Nullable' index='2' name='context' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceBusses:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='busArray' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBusCount:error:'>
<arg declared_type64='NSUInteger' index='0' name='count' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AUAudioUnitPreset'>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='number'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumber:'>
<arg declared_type64='NSInteger' index='0' name='number' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AUParameter'>
<method selector='address'>
<retval declared_type64='AUParameterAddress' type64='Q'/>
</method>
<method selector='dependentParameters'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='flags'>
<retval declared_type64='AudioUnitParameterOptions' type64='I'/>
</method>
<method selector='maxValue'>
<retval declared_type64='AUValue' type64='f'/>
</method>
<method selector='minValue'>
<retval declared_type64='AUValue' type64='f'/>
</method>
<method selector='setValue:'>
<arg declared_type64='AUValue' index='0' name='value' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:originator:'>
<arg declared_type64='AUValue' index='0' name='value' type64='f'/>
<arg declared_type64='AUParameterObserverToken _Nullable' index='1' name='originator' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:originator:atHostTime:'>
<arg declared_type64='AUValue' index='0' name='value' type64='f'/>
<arg declared_type64='AUParameterObserverToken _Nullable' index='1' name='originator' type64='^v'/>
<arg declared_type64='uint64_t' index='2' name='hostTime' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:originator:atHostTime:eventType:'>
<arg declared_type64='AUValue' index='0' name='value' type64='f'/>
<arg declared_type64='AUParameterObserverToken _Nullable' index='1' name='originator' type64='^v'/>
<arg declared_type64='uint64_t' index='2' name='hostTime' type64='Q'/>
<arg declared_type64='AUParameterAutomationEventType' index='3' name='eventType' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stringFromValue:'>
<arg const='true' declared_type64='AUValue * _Nullable' index='0' name='value' type64='^f'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='unit'>
<retval declared_type64='AudioUnitParameterUnit' type64='I'/>
</method>
<method selector='unitName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='value'>
<retval declared_type64='AUValue' type64='f'/>
</method>
<method selector='valueFromString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='AUValue' type64='f'/>
</method>
<method selector='valueStrings'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='AUParameterGroup'>
<method selector='allParameters'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='children'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AUParameterNode'>
<method selector='displayName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='displayNameWithLength:'>
<arg declared_type64='NSInteger' index='0' name='maximumLength' type64='q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='implementorDisplayNameWithLengthCallback'>
<retval declared_type64='AUImplementorDisplayNameWithLengthCallback _Nonnull' function_pointer='true' type64='@?'>
<arg declared_type64='AUParameterNode * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</retval>
</method>
<method selector='implementorStringFromValueCallback'>
<retval declared_type64='AUImplementorStringFromValueCallback _Nonnull' function_pointer='true' type64='@?'>
<arg declared_type64='AUParameter * _Nonnull' type64='@'/>
<arg const='true' declared_type64='AUValue * _Nullable' type64='^f'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</retval>
</method>
<method selector='implementorValueFromStringCallback'>
<retval declared_type64='AUImplementorValueFromStringCallback _Nonnull' function_pointer='true' type64='@?'>
<arg declared_type64='AUParameter * _Nonnull' type64='@'/>
<arg declared_type64='NSString * _Nonnull' type64='@'/>
<retval declared_type64='AUValue' type64='f'/>
</retval>
</method>
<method selector='implementorValueObserver'>
<retval declared_type64='AUImplementorValueObserver _Nonnull' function_pointer='true' type64='@?'>
<arg declared_type64='AUParameter * _Nonnull' type64='@'/>
<arg declared_type64='AUValue' type64='f'/>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method selector='implementorValueProvider'>
<retval declared_type64='AUImplementorValueProvider _Nonnull' function_pointer='true' type64='@?'>
<arg declared_type64='AUParameter * _Nonnull' type64='@'/>
<retval declared_type64='AUValue' type64='f'/>
</retval>
</method>
<method selector='keyPath'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='removeParameterObserver:'>
<arg declared_type64='AUParameterObserverToken _Nonnull' index='0' name='token' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImplementorDisplayNameWithLengthCallback:'>
<arg declared_type64='AUImplementorDisplayNameWithLengthCallback _Nonnull' function_pointer='true' index='0' name='implementorDisplayNameWithLengthCallback' type64='@?'>
<arg declared_type64='AUParameterNode * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImplementorStringFromValueCallback:'>
<arg declared_type64='AUImplementorStringFromValueCallback _Nonnull' function_pointer='true' index='0' name='implementorStringFromValueCallback' type64='@?'>
<arg declared_type64='AUParameter * _Nonnull' type64='@'/>
<arg const='true' declared_type64='AUValue * _Nullable' type64='^f'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImplementorValueFromStringCallback:'>
<arg declared_type64='AUImplementorValueFromStringCallback _Nonnull' function_pointer='true' index='0' name='implementorValueFromStringCallback' type64='@?'>
<arg declared_type64='AUParameter * _Nonnull' type64='@'/>
<arg declared_type64='NSString * _Nonnull' type64='@'/>
<retval declared_type64='AUValue' type64='f'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImplementorValueObserver:'>
<arg declared_type64='AUImplementorValueObserver _Nonnull' function_pointer='true' index='0' name='implementorValueObserver' type64='@?'>
<arg declared_type64='AUParameter * _Nonnull' type64='@'/>
<arg declared_type64='AUValue' type64='f'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImplementorValueProvider:'>
<arg declared_type64='AUImplementorValueProvider _Nonnull' function_pointer='true' index='0' name='implementorValueProvider' type64='@?'>
<arg declared_type64='AUParameter * _Nonnull' type64='@'/>
<retval declared_type64='AUValue' type64='f'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tokenByAddingParameterAutomationObserver:'>
<arg declared_type64='AUParameterAutomationObserver _Nonnull' function_pointer='true' index='0' name='observer' type64='@?'>
<arg declared_type64='NSInteger' type64='q'/>
<arg const='true' declared_type64='AUParameterAutomationEvent * _Nonnull' type64='^{AUParameterAutomationEvent=QQfIQ}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='AUParameterObserverToken _Nonnull' type64='^v'/>
</method>
<method selector='tokenByAddingParameterObserver:'>
<arg declared_type64='AUParameterObserver _Nonnull' function_pointer='true' index='0' name='observer' type64='@?'>
<arg declared_type64='AUParameterAddress' type64='Q'/>
<arg declared_type64='AUValue' type64='f'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='AUParameterObserverToken _Nonnull' type64='^v'/>
</method>
<method selector='tokenByAddingParameterRecordingObserver:'>
<arg declared_type64='AUParameterRecordingObserver _Nonnull' function_pointer='true' index='0' name='observer' type64='@?'>
<arg declared_type64='NSInteger' type64='q'/>
<arg const='true' declared_type64='AURecordedParameterEvent * _Nonnull' type64='^{AURecordedParameterEvent=QQf}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='AUParameterObserverToken _Nonnull' type64='^v'/>
</method>
</class>
<class name='AUParameterTree'>
<method class_method='true' selector='createGroupFromTemplate:identifier:name:addressOffset:'>
<arg declared_type64='AUParameterGroup * _Nonnull' index='0' name='templateGroup' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='identifier' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='name' type64='@'/>
<arg declared_type64='AUParameterAddress' index='3' name='addressOffset' type64='Q'/>
<retval declared_type64='AUParameterGroup * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='createGroupTemplate:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='children' type64='@'/>
<retval declared_type64='AUParameterGroup * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='createGroupWithIdentifier:name:children:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='name' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='children' type64='@'/>
<retval declared_type64='AUParameterGroup * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='createParameterWithIdentifier:name:address:min:max:unit:unitName:flags:valueStrings:dependentParameters:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='name' type64='@'/>
<arg declared_type64='AUParameterAddress' index='2' name='address' type64='Q'/>
<arg declared_type64='AUValue' index='3' name='min' type64='f'/>
<arg declared_type64='AUValue' index='4' name='max' type64='f'/>
<arg declared_type64='AudioUnitParameterUnit' index='5' name='unit' type64='I'/>
<arg declared_type64='NSString * _Nullable' index='6' name='unitName' type64='@'/>
<arg declared_type64='AudioUnitParameterOptions' index='7' name='flags' type64='I'/>
<arg declared_type64='NSArray * _Nullable' index='8' name='valueStrings' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='9' name='dependentParameters' type64='@'/>
<retval declared_type64='AUParameter * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='createTreeWithChildren:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='children' type64='@'/>
<retval declared_type64='AUParameterTree * _Nonnull' type64='@'/>
</method>
<method selector='parameterWithAddress:'>
<arg declared_type64='AUParameterAddress' index='0' name='address' type64='Q'/>
<retval declared_type64='AUParameter * _Nullable' type64='@'/>
</method>
<method selector='parameterWithID:scope:element:'>
<arg declared_type64='AudioUnitParameterID' index='0' name='paramID' type64='I'/>
<arg declared_type64='AudioUnitScope' index='1' name='scope' type64='I'/>
<arg declared_type64='AudioUnitElement' index='2' name='element' type64='I'/>
<retval declared_type64='AUParameter * _Nullable' type64='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='createAudioUnitWithComponentDescription:error:'>
<arg declared_type64='AudioComponentDescription' index='0' name='desc' type64='{AudioComponentDescription=IIIII}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='AUAudioUnit * _Nullable' type64='@'/>
</method>
</class>
<informal_protocol name='AUAudioUnitFactory'>
<method selector='createAudioUnitWithComponentDescription:error:' type64='@44@0:8{AudioComponentDescription=IIIII}16^@36'>
<arg declared_type64='AudioComponentDescription' index='0' name='desc' type64='{AudioComponentDescription=IIIII}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='AUAudioUnit * _Nullable' type64='@'/>
</method>
</informal_protocol>
<enum name='AUDIO_UNIT_VERSION' value='1070'/>
</signatures>
