<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/UIKit.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/CoreMedia.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/MobileCoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/AVFoundation.framework'/>
<constant const='true' declared_type='NSString*' name='MPMediaEntityPropertyPersistentID' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyAlbumArtist' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyAlbumArtistPersistentID' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyAlbumPersistentID' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyAlbumTitle' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyAlbumTrackCount' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyAlbumTrackNumber' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyArtist' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyArtistPersistentID' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyArtwork' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyAssetURL' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyBeatsPerMinute' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyBookmarkTime' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyComments' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyComposer' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyComposerPersistentID' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyDiscCount' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyDiscNumber' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyGenre' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyGenrePersistentID' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyIsCloudItem' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyIsCompilation' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyLastPlayedDate' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyLyrics' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyMediaType' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyPersistentID' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyPlayCount' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyPlaybackDuration' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyPodcastPersistentID' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyPodcastTitle' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyRating' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyReleaseDate' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertySkipCount' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyTitle' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaItemPropertyUserGrouping' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaLibraryDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaPlaybackIsPreparedToPlayDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaPlaylistPropertyName' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaPlaylistPropertyPersistentID' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaPlaylistPropertyPlaylistAttributes' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMediaPlaylistPropertySeedItems' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMovieDurationAvailableNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMovieMediaTypesAvailableNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMovieNaturalSizeAvailableNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerDidEnterFullscreenNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerDidExitFullscreenNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerFullscreenAnimationCurveUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerFullscreenAnimationDurationUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerLoadStateDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerNowPlayingMovieDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerPlaybackDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerPlaybackDidFinishReasonUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerPlaybackStateDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerReadyForDisplayDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerScalingModeDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerThumbnailErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerThumbnailImageKey' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerThumbnailImageRequestDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerThumbnailTimeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerTimedMetadataKeyDataType' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerTimedMetadataKeyInfo' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerTimedMetadataKeyLanguageCode' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerTimedMetadataKeyMIMEType' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerTimedMetadataKeyName' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerTimedMetadataUpdatedNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerTimedMetadataUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerWillEnterFullscreenNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMoviePlayerWillExitFullscreenNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMovieSourceTypeAvailableNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMusicPlayerControllerNowPlayingItemDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMusicPlayerControllerPlaybackStateDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPMusicPlayerControllerVolumeDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPNowPlayingInfoPropertyChapterCount' type='@'/>
<constant const='true' declared_type='NSString*' name='MPNowPlayingInfoPropertyChapterNumber' type='@'/>
<constant const='true' declared_type='NSString*' name='MPNowPlayingInfoPropertyDefaultPlaybackRate' type='@'/>
<constant const='true' declared_type='NSString*' name='MPNowPlayingInfoPropertyElapsedPlaybackTime' type='@'/>
<constant const='true' declared_type='NSString*' name='MPNowPlayingInfoPropertyPlaybackQueueCount' type='@'/>
<constant const='true' declared_type='NSString*' name='MPNowPlayingInfoPropertyPlaybackQueueIndex' type='@'/>
<constant const='true' declared_type='NSString*' name='MPNowPlayingInfoPropertyPlaybackRate' type='@'/>
<constant const='true' declared_type='NSString*' name='MPVolumeViewWirelessRouteActiveDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MPVolumeViewWirelessRoutesAvailableDidChangeNotification' type='@'/>
<enum name='MPMediaGroupingAlbum' value='1'/>
<enum name='MPMediaGroupingAlbumArtist' value='3'/>
<enum name='MPMediaGroupingArtist' value='2'/>
<enum name='MPMediaGroupingComposer' value='4'/>
<enum name='MPMediaGroupingGenre' value='5'/>
<enum name='MPMediaGroupingPlaylist' value='6'/>
<enum name='MPMediaGroupingPodcastTitle' value='7'/>
<enum name='MPMediaGroupingTitle' value='0'/>
<enum name='MPMediaPlaylistAttributeGenius' value='4'/>
<enum name='MPMediaPlaylistAttributeNone' value='0'/>
<enum name='MPMediaPlaylistAttributeOnTheGo' value='1'/>
<enum name='MPMediaPlaylistAttributeSmart' value='2'/>
<enum name='MPMediaPredicateComparisonContains' value='1'/>
<enum name='MPMediaPredicateComparisonEqualTo' value='0'/>
<enum name='MPMediaTypeAny' value='4294967295' value64='18446744073709551615'/>
<enum name='MPMediaTypeAnyAudio' value='255'/>
<enum name='MPMediaTypeAnyVideo' value='65280'/>
<enum name='MPMediaTypeAudioBook' value='4'/>
<enum name='MPMediaTypeAudioITunesU' value='8'/>
<enum name='MPMediaTypeHomeVideo' value='8192'/>
<enum name='MPMediaTypeMovie' value='256'/>
<enum name='MPMediaTypeMusic' value='1'/>
<enum name='MPMediaTypeMusicVideo' value='2048'/>
<enum name='MPMediaTypePodcast' value='2'/>
<enum name='MPMediaTypeTVShow' value='512'/>
<enum name='MPMediaTypeVideoITunesU' value='4096'/>
<enum name='MPMediaTypeVideoPodcast' value='1024'/>
<enum name='MPMovieControlStyleDefault' value='1'/>
<enum name='MPMovieControlStyleEmbedded' value='1'/>
<enum name='MPMovieControlStyleFullscreen' value='2'/>
<enum name='MPMovieControlStyleNone' value='0'/>
<enum name='MPMovieFinishReasonPlaybackEnded' value='0'/>
<enum name='MPMovieFinishReasonPlaybackError' value='1'/>
<enum name='MPMovieFinishReasonUserExited' value='2'/>
<enum name='MPMovieLoadStatePlayable' value='1'/>
<enum name='MPMovieLoadStatePlaythroughOK' value='2'/>
<enum name='MPMovieLoadStateStalled' value='4'/>
<enum name='MPMovieLoadStateUnknown' value='0'/>
<enum name='MPMovieMediaTypeMaskAudio' value='2'/>
<enum name='MPMovieMediaTypeMaskNone' value='0'/>
<enum name='MPMovieMediaTypeMaskVideo' value='1'/>
<enum name='MPMoviePlaybackStateInterrupted' value='3'/>
<enum name='MPMoviePlaybackStatePaused' value='2'/>
<enum name='MPMoviePlaybackStatePlaying' value='1'/>
<enum name='MPMoviePlaybackStateSeekingBackward' value='5'/>
<enum name='MPMoviePlaybackStateSeekingForward' value='4'/>
<enum name='MPMoviePlaybackStateStopped' value='0'/>
<enum name='MPMovieRepeatModeNone' value='0'/>
<enum name='MPMovieRepeatModeOne' value='1'/>
<enum name='MPMovieScalingModeAspectFill' value='2'/>
<enum name='MPMovieScalingModeAspectFit' value='1'/>
<enum name='MPMovieScalingModeFill' value='3'/>
<enum name='MPMovieScalingModeNone' value='0'/>
<enum name='MPMovieSourceTypeFile' value='1'/>
<enum name='MPMovieSourceTypeStreaming' value='2'/>
<enum name='MPMovieSourceTypeUnknown' value='0'/>
<enum name='MPMovieTimeOptionExact' value='1'/>
<enum name='MPMovieTimeOptionNearestKeyFrame' value='0'/>
<enum name='MPMusicPlaybackStateInterrupted' value='3'/>
<enum name='MPMusicPlaybackStatePaused' value='2'/>
<enum name='MPMusicPlaybackStatePlaying' value='1'/>
<enum name='MPMusicPlaybackStateSeekingBackward' value='5'/>
<enum name='MPMusicPlaybackStateSeekingForward' value='4'/>
<enum name='MPMusicPlaybackStateStopped' value='0'/>
<enum name='MPMusicRepeatModeAll' value='3'/>
<enum name='MPMusicRepeatModeDefault' value='0'/>
<enum name='MPMusicRepeatModeNone' value='1'/>
<enum name='MPMusicRepeatModeOne' value='2'/>
<enum name='MPMusicShuffleModeAlbums' value='3'/>
<enum name='MPMusicShuffleModeDefault' value='0'/>
<enum name='MPMusicShuffleModeOff' value='1'/>
<enum name='MPMusicShuffleModeSongs' value='2'/>
<enum name='MPRemoteCommandHandlerStatusCommandFailed' value='200'/>
<enum name='MPRemoteCommandHandlerStatusNoSuchContent' value='100'/>
<enum name='MPRemoteCommandHandlerStatusSuccess' value='0'/>
<enum name='MPSeekCommandEventTypeBeginSeeking' value='0'/>
<enum name='MPSeekCommandEventTypeEndSeeking' value='1'/>
<function name='MPVolumeSettingsAlertHide'>
<retval declared_type='void' type='v'/>
</function>
<function name='MPVolumeSettingsAlertIsVisible'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='MPVolumeSettingsAlertShow'>
<retval declared_type='void' type='v'/>
</function>
<class name='MPChangePlaybackRateCommand'>
<method selector='setSupportedPlaybackRates:'>
<arg declared_type='NSArray*' index='0' name='supportedPlaybackRates' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supportedPlaybackRates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='MPChangePlaybackRateCommandEvent'>
<method selector='playbackRate'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='MPContentItem'>
<method selector='artwork'>
<retval declared_type='MPMediaItemArtwork*' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type='NSString*' index='0' name='identifier' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='isContainer'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlayable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='playbackProgress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setArtwork:'>
<arg declared_type='MPMediaItemArtwork*' index='0' name='artwork' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContainer:'>
<arg declared_type='BOOL' index='0' name='container' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlayable:'>
<arg declared_type='BOOL' index='0' name='playable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaybackProgress:'>
<arg declared_type='float' index='0' name='playbackProgress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitle:'>
<arg declared_type='NSString*' index='0' name='subtitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPFeedbackCommand'>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localizedTitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setActive:'>
<arg declared_type='BOOL' index='0' name='active' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalizedTitle:'>
<arg declared_type='NSString*' index='0' name='localizedTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPFeedbackCommandEvent'>
<method selector='isNegative'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='MPMediaEntity'>
<method class_method='true' selector='canFilterByProperty:'>
<arg declared_type='NSString*' index='0' name='property' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enumerateValuesForProperties:usingBlock:'>
<arg declared_type='NSSet*' index='0' name='properties' type='@'/>
<arg declared_type='void (^)(NSString *, id, BOOL *)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='NSString*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type='id' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='persistentID'>
<retval declared_type='MPMediaEntityPersistentID' type='Q'/>
</method>
<method selector='valueForProperty:'>
<arg declared_type='NSString*' index='0' name='property' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='MPMediaItem'>
<method selector='albumArtist'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='albumArtistPersistentID'>
<retval declared_type='MPMediaEntityPersistentID' type='Q'/>
</method>
<method selector='albumPersistentID'>
<retval declared_type='MPMediaEntityPersistentID' type='Q'/>
</method>
<method selector='albumTitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='albumTrackCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='albumTrackNumber'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='artist'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='artistPersistentID'>
<retval declared_type='MPMediaEntityPersistentID' type='Q'/>
</method>
<method selector='artwork'>
<retval declared_type='MPMediaItemArtwork*' type='@'/>
</method>
<method selector='assetURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='beatsPerMinute'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='bookmarkTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='comments'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='composer'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='composerPersistentID'>
<retval declared_type='MPMediaEntityPersistentID' type='Q'/>
</method>
<method selector='discCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='discNumber'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='genre'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='genrePersistentID'>
<retval declared_type='MPMediaEntityPersistentID' type='Q'/>
</method>
<method selector='isCloudItem'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isCompilation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastPlayedDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='lyrics'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='mediaType'>
<retval declared_type='MPMediaType' type='I' type64='Q'/>
</method>
<method selector='persistentID'>
<retval declared_type='MPMediaEntityPersistentID' type='Q'/>
</method>
<method class_method='true' selector='persistentIDPropertyForGroupingType:'>
<arg declared_type='MPMediaGrouping' index='0' name='groupingType' type='i' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='playCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='playbackDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='podcastPersistentID'>
<retval declared_type='MPMediaEntityPersistentID' type='Q'/>
</method>
<method selector='podcastTitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rating'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='releaseDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='skipCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='titlePropertyForGroupingType:'>
<arg declared_type='MPMediaGrouping' index='0' name='groupingType' type='i' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='userGrouping'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPMediaItemArtwork'>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageCropRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='initWithImage:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
</class>
<class name='MPMediaItemCollection'>
<method class_method='true' selector='collectionWithItems:'>
<arg declared_type='NSArray*' index='0' name='items' type='@'/>
<retval declared_type='MPMediaItemCollection*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initWithItems:'>
<arg declared_type='NSArray*' index='0' name='items' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='items'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='mediaTypes'>
<retval declared_type='MPMediaType' type='I' type64='Q'/>
</method>
<method selector='representativeItem'>
<retval declared_type='MPMediaItem*' type='@'/>
</method>
</class>
<class name='MPMediaLibrary'>
<method selector='beginGeneratingLibraryChangeNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultMediaLibrary'>
<retval declared_type='MPMediaLibrary*' type='@'/>
</method>
<method selector='endGeneratingLibraryChangeNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method selector='lastModifiedDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
</class>
<class name='MPMediaPickerController'>
<method selector='allowsPickingMultipleItems'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMediaTypes:'>
<arg declared_type='MPMediaType' index='0' name='mediaTypes' type='I' type64='Q'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='mediaTypes'>
<retval declared_type='MPMediaType' type='I' type64='Q'/>
</method>
<method selector='prompt'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setAllowsPickingMultipleItems:'>
<arg declared_type='BOOL' index='0' name='allowsPickingMultipleItems' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrompt:'>
<arg declared_type='NSString*' index='0' name='prompt' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsCloudItems:'>
<arg declared_type='BOOL' index='0' name='showsCloudItems' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsCloudItems'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='MPMediaPlaylist'>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='persistentID'>
<retval declared_type='MPMediaEntityPersistentID' type='Q'/>
</method>
<method selector='playlistAttributes'>
<retval declared_type='MPMediaPlaylistAttribute' type='I' type64='Q'/>
</method>
<method selector='seedItems'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='MPMediaPropertyPredicate'>
<method selector='comparisonType'>
<retval declared_type='MPMediaPredicateComparison' type='i' type64='q'/>
</method>
<method class_method='true' selector='predicateWithValue:forProperty:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='property' type='@'/>
<retval declared_type='MPMediaPropertyPredicate*' type='@'/>
</method>
<method class_method='true' selector='predicateWithValue:forProperty:comparisonType:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='property' type='@'/>
<arg declared_type='MPMediaPredicateComparison' index='2' name='comparisonType' type='i' type64='q'/>
<retval declared_type='MPMediaPropertyPredicate*' type='@'/>
</method>
<method selector='property'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='MPMediaQuery'>
<method selector='addFilterPredicate:'>
<arg declared_type='MPMediaPredicate*' index='0' name='predicate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='albumsQuery'>
<retval declared_type='MPMediaQuery*' type='@'/>
</method>
<method class_method='true' selector='artistsQuery'>
<retval declared_type='MPMediaQuery*' type='@'/>
</method>
<method class_method='true' selector='audiobooksQuery'>
<retval declared_type='MPMediaQuery*' type='@'/>
</method>
<method selector='collectionSections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='collections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='compilationsQuery'>
<retval declared_type='MPMediaQuery*' type='@'/>
</method>
<method class_method='true' selector='composersQuery'>
<retval declared_type='MPMediaQuery*' type='@'/>
</method>
<method selector='filterPredicates'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='genresQuery'>
<retval declared_type='MPMediaQuery*' type='@'/>
</method>
<method selector='groupingType'>
<retval declared_type='MPMediaGrouping' type='i' type64='q'/>
</method>
<method selector='initWithFilterPredicates:'>
<arg declared_type='NSSet*' index='0' name='filterPredicates' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='itemSections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='items'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='playlistsQuery'>
<retval declared_type='MPMediaQuery*' type='@'/>
</method>
<method class_method='true' selector='podcastsQuery'>
<retval declared_type='MPMediaQuery*' type='@'/>
</method>
<method selector='removeFilterPredicate:'>
<arg declared_type='MPMediaPredicate*' index='0' name='predicate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterPredicates:'>
<arg declared_type='NSSet*' index='0' name='filterPredicates' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupingType:'>
<arg declared_type='MPMediaGrouping' index='0' name='groupingType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='songsQuery'>
<retval declared_type='MPMediaQuery*' type='@'/>
</method>
</class>
<class name='MPMediaQuerySection'>
<method selector='range'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPMovieAccessLog'>
<method selector='events'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='extendedLogData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='extendedLogDataStringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
</class>
<class name='MPMovieAccessLogEvent'>
<method selector='URI'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='durationWatched'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='indicatedBitrate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='numberOfBytesTransferred'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='numberOfDroppedVideoFrames'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfSegmentsDownloaded'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfServerAddressChanges'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfStalls'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='observedBitrate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='playbackSessionID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='playbackStartDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='playbackStartOffset'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='segmentsDownloadedDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='serverAddress'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPMovieErrorLog'>
<method selector='events'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='extendedLogData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='extendedLogDataStringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
</class>
<class name='MPMovieErrorLogEvent'>
<method selector='URI'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='date'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='errorComment'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='errorDomain'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='errorStatusCode'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='playbackSessionID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='serverAddress'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MPMoviePlayerController'>
<method selector='accessLog'>
<retval declared_type='MPMovieAccessLog*' type='@'/>
</method>
<method selector='allowsAirPlay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='cancelAllThumbnailImageRequests'>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='controlStyle'>
<retval declared_type='MPMovieControlStyle' type='i' type64='q'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='endPlaybackTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='errorLog'>
<retval declared_type='MPMovieErrorLog*' type='@'/>
</method>
<method selector='initWithContentURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='initialPlaybackTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='isAirPlayVideoActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFullscreen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadState'>
<retval declared_type='MPMovieLoadState' type='I' type64='Q'/>
</method>
<method selector='movieMediaTypes'>
<retval declared_type='MPMovieMediaTypeMask' type='I' type64='Q'/>
</method>
<method selector='movieSourceType'>
<retval declared_type='MPMovieSourceType' type='i' type64='q'/>
</method>
<method selector='naturalSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='playableDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='playbackState'>
<retval declared_type='MPMoviePlaybackState' type='i' type64='q'/>
</method>
<method selector='readyForDisplay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='repeatMode'>
<retval declared_type='MPMovieRepeatMode' type='i' type64='q'/>
</method>
<method selector='requestThumbnailImagesAtTimes:timeOption:'>
<arg declared_type='NSArray*' index='0' name='playbackTimes' type='@'/>
<arg declared_type='MPMovieTimeOption' index='1' name='option' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scalingMode'>
<retval declared_type='MPMovieScalingMode' type='i' type64='q'/>
</method>
<method selector='setAllowsAirPlay:'>
<arg declared_type='BOOL' index='0' name='allowsAirPlay' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentURL:'>
<arg declared_type='NSURL*' index='0' name='contentURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlStyle:'>
<arg declared_type='MPMovieControlStyle' index='0' name='controlStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndPlaybackTime:'>
<arg declared_type='NSTimeInterval' index='0' name='endPlaybackTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFullscreen:'>
<arg declared_type='BOOL' index='0' name='fullscreen' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFullscreen:animated:'>
<arg declared_type='BOOL' index='0' name='fullscreen' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInitialPlaybackTime:'>
<arg declared_type='NSTimeInterval' index='0' name='initialPlaybackTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMovieSourceType:'>
<arg declared_type='MPMovieSourceType' index='0' name='movieSourceType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepeatMode:'>
<arg declared_type='MPMovieRepeatMode' index='0' name='repeatMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScalingMode:'>
<arg declared_type='MPMovieScalingMode' index='0' name='scalingMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldAutoplay:'>
<arg declared_type='BOOL' index='0' name='shouldAutoplay' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseApplicationAudioSession:'>
<arg declared_type='BOOL' index='0' name='useApplicationAudioSession' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldAutoplay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='thumbnailImageAtTime:timeOption:'>
<arg declared_type='NSTimeInterval' index='0' name='playbackTime' type='d'/>
<arg declared_type='MPMovieTimeOption' index='1' name='option' type='i' type64='q'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='timedMetadata'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='useApplicationAudioSession'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='view'>
<retval declared_type='UIView*' type='@'/>
</method>
</class>
<class name='MPMoviePlayerViewController'>
<method selector='initWithContentURL:'>
<arg declared_type='NSURL*' index='0' name='contentURL' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='moviePlayer'>
<retval declared_type='MPMoviePlayerController*' type='@'/>
</method>
</class>
<class name='MPMusicPlayerController'>
<method class_method='true' selector='applicationMusicPlayer'>
<retval declared_type='MPMusicPlayerController*' type='@'/>
</method>
<method selector='beginGeneratingPlaybackNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endGeneratingPlaybackNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='iPodMusicPlayer'>
<retval declared_type='MPMusicPlayerController*' type='@'/>
</method>
<method selector='indexOfNowPlayingItem'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='nowPlayingItem'>
<retval declared_type='MPMediaItem*' type='@'/>
</method>
<method selector='playbackState'>
<retval declared_type='MPMusicPlaybackState' type='i' type64='q'/>
</method>
<method selector='repeatMode'>
<retval declared_type='MPMusicRepeatMode' type='i' type64='q'/>
</method>
<method selector='setNowPlayingItem:'>
<arg declared_type='MPMediaItem*' index='0' name='nowPlayingItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueueWithItemCollection:'>
<arg declared_type='MPMediaItemCollection*' index='0' name='itemCollection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueueWithQuery:'>
<arg declared_type='MPMediaQuery*' index='0' name='query' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepeatMode:'>
<arg declared_type='MPMusicRepeatMode' index='0' name='repeatMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShuffleMode:'>
<arg declared_type='MPMusicShuffleMode' index='0' name='shuffleMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shuffleMode'>
<retval declared_type='MPMusicShuffleMode' type='i' type64='q'/>
</method>
<method selector='skipToBeginning'>
<retval declared_type='void' type='v'/>
</method>
<method selector='skipToNextItem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='skipToPreviousItem'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='systemMusicPlayer'>
<retval declared_type='MPMusicPlayerController*' type='@'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='MPNowPlayingInfoCenter'>
<method class_method='true' selector='defaultCenter'>
<retval declared_type='MPNowPlayingInfoCenter*' type='@'/>
</method>
<method selector='nowPlayingInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setNowPlayingInfo:'>
<arg declared_type='NSDictionary*' index='0' name='nowPlayingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPPlayableContentManager'>
<method selector='beginUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='endUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedContentManager'>
<retval declared_type='instancetype' type='@'/>
</method>
</class>
<class name='MPRatingCommand'>
<method selector='maximumRating'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minimumRating'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setMaximumRating:'>
<arg declared_type='float' index='0' name='maximumRating' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumRating:'>
<arg declared_type='float' index='0' name='minimumRating' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPRatingCommandEvent'>
<method selector='rating'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='MPRemoteCommand'>
<method selector='addTarget:action:'>
<arg declared_type='id' index='0' name='target' type='@'/>
<arg declared_type='SEL' index='1' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTargetWithHandler:'>
<arg declared_type='MPRemoteCommandHandlerStatus (^)(MPRemoteCommandEvent *)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='MPRemoteCommandEvent*' type='@'/>
<retval declared_type='MPRemoteCommandHandlerStatus' type='i' type64='q'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeTarget:'>
<arg declared_type='id' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTarget:action:'>
<arg declared_type='id' index='0' name='target' type='@'/>
<arg declared_type='SEL' index='1' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPRemoteCommandCenter'>
<method selector='bookmarkCommand'>
<retval declared_type='MPFeedbackCommand*' type='@'/>
</method>
<method selector='changePlaybackRateCommand'>
<retval declared_type='MPChangePlaybackRateCommand*' type='@'/>
</method>
<method selector='dislikeCommand'>
<retval declared_type='MPFeedbackCommand*' type='@'/>
</method>
<method selector='likeCommand'>
<retval declared_type='MPFeedbackCommand*' type='@'/>
</method>
<method selector='nextTrackCommand'>
<retval declared_type='MPRemoteCommand*' type='@'/>
</method>
<method selector='pauseCommand'>
<retval declared_type='MPRemoteCommand*' type='@'/>
</method>
<method selector='playCommand'>
<retval declared_type='MPRemoteCommand*' type='@'/>
</method>
<method selector='previousTrackCommand'>
<retval declared_type='MPRemoteCommand*' type='@'/>
</method>
<method selector='ratingCommand'>
<retval declared_type='MPRatingCommand*' type='@'/>
</method>
<method selector='seekBackwardCommand'>
<retval declared_type='MPRemoteCommand*' type='@'/>
</method>
<method selector='seekForwardCommand'>
<retval declared_type='MPRemoteCommand*' type='@'/>
</method>
<method class_method='true' selector='sharedCommandCenter'>
<retval declared_type='MPRemoteCommandCenter*' type='@'/>
</method>
<method selector='skipBackwardCommand'>
<retval declared_type='MPSkipIntervalCommand*' type='@'/>
</method>
<method selector='skipForwardCommand'>
<retval declared_type='MPSkipIntervalCommand*' type='@'/>
</method>
<method selector='stopCommand'>
<retval declared_type='MPRemoteCommand*' type='@'/>
</method>
<method selector='togglePlayPauseCommand'>
<retval declared_type='MPRemoteCommand*' type='@'/>
</method>
</class>
<class name='MPRemoteCommandEvent'>
<method selector='command'>
<retval declared_type='MPRemoteCommand*' type='@'/>
</method>
<method selector='timestamp'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
</class>
<class name='MPSeekCommandEvent'>
<method selector='type'>
<retval declared_type='MPSeekCommandEventType' type='I' type64='Q'/>
</method>
</class>
<class name='MPSkipIntervalCommand'>
<method selector='preferredIntervals'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setPreferredIntervals:'>
<arg declared_type='NSArray*' index='0' name='preferredIntervals' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MPSkipIntervalCommandEvent'>
<method selector='interval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
</class>
<class name='MPTimedMetadata'>
<method selector='allMetadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='keyspace'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timestamp'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='MPVolumeView'>
<method selector='areWirelessRoutesAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isWirelessRouteActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumVolumeSliderImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='minimumVolumeSliderImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='routeButtonImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='routeButtonRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setMaximumVolumeSliderImage:forState:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumVolumeSliderImage:forState:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouteButtonImage:forState:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsRouteButton:'>
<arg declared_type='BOOL' index='0' name='showsRouteButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsVolumeSlider:'>
<arg declared_type='BOOL' index='0' name='showsVolumeSlider' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolumeThumbImage:forState:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolumeWarningSliderImage:'>
<arg declared_type='UIImage*' index='0' name='volumeWarningSliderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsRouteButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsVolumeSlider'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='volumeSliderRectForBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='volumeThumbImageForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='volumeThumbRectForBounds:volumeSliderRect:value:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGRect' index='1' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='float' index='2' name='value' type='f'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='volumeWarningSliderImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='beginLoadingChildItemsAtIndexPath:completionHandler:'>
<arg declared_type='NSIndexPath*' index='0' name='indexPath' type='@'/>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginSeekingBackward'>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginSeekingForward'>
<retval declared_type='void' type='v'/>
</method>
<method selector='childItemsDisplayPlaybackProgressAtIndexPath:'>
<arg declared_type='NSIndexPath*' index='0' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentItemAtIndexPath:'>
<arg declared_type='NSIndexPath*' index='0' name='indexPath' type='@'/>
<retval declared_type='MPContentItem*' type='@'/>
</method>
<method selector='currentPlaybackRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='currentPlaybackTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='endSeeking'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isPreparedToPlay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mediaPicker:didPickMediaItems:'>
<arg declared_type='MPMediaPickerController*' index='0' name='mediaPicker' type='@'/>
<arg declared_type='MPMediaItemCollection*' index='1' name='mediaItemCollection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mediaPickerDidCancel:'>
<arg declared_type='MPMediaPickerController*' index='0' name='mediaPicker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfChildItemsAtIndexPath:'>
<arg declared_type='NSIndexPath*' index='0' name='indexPath' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='play'>
<retval declared_type='void' type='v'/>
</method>
<method selector='playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:'>
<arg declared_type='MPPlayableContentManager*' index='0' name='contentManager' type='@'/>
<arg declared_type='NSIndexPath*' index='1' name='indexPath' type='@'/>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentPlaybackRate:'>
<arg declared_type='float' index='0' name='currentPlaybackRate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentPlaybackTime:'>
<arg declared_type='NSTimeInterval' index='0' name='currentPlaybackTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIViewController'>
<method selector='dismissMoviePlayerViewControllerAnimated'>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentMoviePlayerViewControllerAnimated:'>
<arg declared_type='MPMoviePlayerViewController*' index='0' name='moviePlayerViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='MPMediaPickerControllerDelegate'>
<method selector='mediaPicker:didPickMediaItems:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='MPMediaPickerController*' index='0' name='mediaPicker' type='@'/>
<arg declared_type='MPMediaItemCollection*' index='1' name='mediaItemCollection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mediaPickerDidCancel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='MPMediaPickerController*' index='0' name='mediaPicker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MPMediaPlayback'>
<method selector='beginSeekingBackward' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginSeekingForward' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentPlaybackRate' type='f8@0:4' type64='f16@0:8'>
<retval declared_type='float' type='f'/>
</method>
<method selector='currentPlaybackTime' type='d8@0:4' type64='d16@0:8'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='endSeeking' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isPreparedToPlay' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pause' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='play' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareToPlay' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentPlaybackRate:' type='v12@0:4f8' type64='v20@0:8f16'>
<arg declared_type='float' index='0' name='currentPlaybackRate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentPlaybackTime:' type='v16@0:4d8' type64='v24@0:8d16'>
<arg declared_type='NSTimeInterval' index='0' name='currentPlaybackTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MPPlayableContentDataSource'>
<method selector='beginLoadingChildItemsAtIndexPath:completionHandler:' type='v16@0:4@8@?12' type64='v32@0:8@16@?24'>
<arg declared_type='NSIndexPath*' index='0' name='indexPath' type='@'/>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='childItemsDisplayPlaybackProgressAtIndexPath:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSIndexPath*' index='0' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentItemAtIndexPath:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSIndexPath*' index='0' name='indexPath' type='@'/>
<retval declared_type='MPContentItem*' type='@'/>
</method>
<method selector='numberOfChildItemsAtIndexPath:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='NSIndexPath*' index='0' name='indexPath' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='MPPlayableContentDelegate'>
<method selector='playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:' type='v20@0:4@8@12@?16' type64='v40@0:8@16@24@?32'>
<arg declared_type='MPPlayableContentManager*' index='0' name='contentManager' type='@'/>
<arg declared_type='NSIndexPath*' index='1' name='indexPath' type='@'/>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
