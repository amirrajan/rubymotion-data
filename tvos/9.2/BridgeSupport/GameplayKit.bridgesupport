<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='vector_float2' type64='{_vector_float2=&quot;x&quot;f&quot;y&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
</struct>
<struct name='vector_float3' type64='{_vector_float3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
<field declared_type64='float' name='z' type64='f'/>
</struct>
<struct name='vector_float4' type64='{_vector_float4=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
<field declared_type64='float' name='z' type64='f'/>
<field declared_type64='float' name='w' type64='f'/>
</struct>
<struct name='vector_int2' type64='{_vector_int2=&quot;x&quot;i&quot;y&quot;i}'>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
</struct>
<struct name='vector_int4' type64='{_vector_int4=&quot;x&quot;i&quot;y&quot;i&quot;z&quot;i&quot;w&quot;i}'>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='z' type64='i'/>
<field declared_type64='int' name='w' type64='i'/>
</struct>
<struct name='vector_uint2' type64='{_vector_uint2=&quot;x&quot;I&quot;y&quot;I}'>
<field declared_type64='unsigned int' name='x' type64='I'/>
<field declared_type64='unsigned int' name='y' type64='I'/>
</struct>
<struct name='vector_uint3' type64='{_vector_uint3=&quot;x&quot;I&quot;y&quot;I&quot;z&quot;I}'>
<field declared_type64='unsigned int' name='x' type64='I'/>
<field declared_type64='unsigned int' name='y' type64='I'/>
<field declared_type64='unsigned int' name='z' type64='I'/>
</struct>
<constant const='true' declared_type64='NSInteger' name='GKGameModelMaxScore' type64='q'/>
<constant const='true' declared_type64='NSInteger' name='GKGameModelMinScore' type64='q'/>
<class name='GKARC4RandomSource'>
<method selector='dropValuesWithCount:'>
<arg declared_type64='NSUInteger' index='0' name='count' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSeed:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='seed' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='seed'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='setSeed:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='seed' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKAgent'>
<method selector='behavior'>
<retval declared_type64='GKBehavior * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='mass'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='maxAcceleration'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='maxSpeed'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='radius'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setBehavior:'>
<arg declared_type64='GKBehavior * _Nullable' index='0' name='behavior' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMass:'>
<arg declared_type64='float' index='0' name='mass' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxAcceleration:'>
<arg declared_type64='float' index='0' name='maxAcceleration' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxSpeed:'>
<arg declared_type64='float' index='0' name='maxSpeed' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type64='float' index='0' name='radius' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speed'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='GKAgent2D'>
<method selector='position'>
<retval declared_type64='vector_float2' type64='{_vector_float2=ff}'/>
</method>
<method selector='rotation'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setPosition:'>
<arg declared_type64='vector_float2' index='0' name='position' type64='{_vector_float2=ff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRotation:'>
<arg declared_type64='float' index='0' name='rotation' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='seconds' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='velocity'>
<retval declared_type64='vector_float2' type64='{_vector_float2=ff}'/>
</method>
</class>
<class name='GKBehavior'>
<method class_method='true' selector='behaviorWithGoal:weight:'>
<arg declared_type64='GKGoal * _Nonnull' index='0' name='goal' type64='@'/>
<arg declared_type64='float' index='1' name='weight' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='behaviorWithGoals:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='goals' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='behaviorWithGoals:andWeights:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='goals' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='weights' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='behaviorWithWeightedGoals:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='weightedGoals' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='goalCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type64='NSUInteger' index='0' name='idx' type64='Q'/>
<retval declared_type64='GKGoal * _Nonnull' type64='@'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type64='GKGoal * _Nonnull' index='0' name='goal' type64='@'/>
<retval declared_type64='NSNumber * _Nonnull' type64='@'/>
</method>
<method selector='removeAllGoals'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeGoal:'>
<arg declared_type64='GKGoal * _Nonnull' index='0' name='goal' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setObject:forKeyedSubscript:'>
<arg declared_type64='NSNumber * _Nonnull' index='0' name='weight' type64='@'/>
<arg declared_type64='GKGoal * _Nonnull' index='1' name='goal' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWeight:forGoal:'>
<arg declared_type64='float' index='0' name='weight' type64='f'/>
<arg declared_type64='GKGoal * _Nonnull' index='1' name='goal' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='weightForGoal:'>
<arg declared_type64='GKGoal * _Nonnull' index='0' name='goal' type64='@'/>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='GKCircleObstacle'>
<method selector='initWithRadius:'>
<arg declared_type64='float' index='0' name='radius' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='obstacleWithRadius:'>
<arg declared_type64='float' index='0' name='radius' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='position'>
<retval declared_type64='vector_float2' type64='{_vector_float2=ff}'/>
</method>
<method selector='radius'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setPosition:'>
<arg declared_type64='vector_float2' index='0' name='position' type64='{_vector_float2=ff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type64='float' index='0' name='radius' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKComponent'>
<method selector='entity'>
<retval declared_type64='GKEntity * _Nullable' type64='@'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='seconds' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKComponentSystem'>
<method selector='addComponent:'>
<arg declared_type64='ComponentType _Nonnull' index='0' name='component' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addComponentWithEntity:'>
<arg declared_type64='GKEntity * _Nonnull' index='0' name='entity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='componentClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='components'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='initWithComponentClass:'>
<arg declared_type64='Class _Nonnull' index='0' name='cls' type64='#'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type64='NSUInteger' index='0' name='idx' type64='Q'/>
<retval declared_type64='ComponentType _Nonnull' type64='@'/>
</method>
<method selector='removeComponent:'>
<arg declared_type64='ComponentType _Nonnull' index='0' name='component' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeComponentWithEntity:'>
<arg declared_type64='GKEntity * _Nonnull' index='0' name='entity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='seconds' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKEntity'>
<method selector='addComponent:'>
<arg declared_type64='GKComponent * _Nonnull' index='0' name='component' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='componentForClass:'>
<arg declared_type64='Class _Nonnull' index='0' name='componentClass' type64='#'/>
<retval declared_type64='GKComponent * _Nullable' type64='@'/>
</method>
<method selector='components'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='entity'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='removeComponentForClass:'>
<arg declared_type64='Class _Nonnull' index='0' name='componentClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='seconds' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKGaussianDistribution'>
<method selector='deviation'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='initWithRandomSource:lowestValue:highestValue:'>
<arg declared_type64='id _Nonnull' index='0' name='source' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='lowestInclusive' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='highestInclusive' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithRandomSource:mean:deviation:'>
<arg declared_type64='id _Nonnull' index='0' name='source' type64='@'/>
<arg declared_type64='float' index='1' name='mean' type64='f'/>
<arg declared_type64='float' index='2' name='deviation' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='mean'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='GKGoal'>
<method class_method='true' selector='goalToAlignWithAgents:maxDistance:maxAngle:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='agents' type64='@'/>
<arg declared_type64='float' index='1' name='maxDistance' type64='f'/>
<arg declared_type64='float' index='2' name='maxAngle' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='goalToAvoidAgents:maxPredictionTime:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='agents' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='maxPredictionTime' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='goalToAvoidObstacles:maxPredictionTime:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='obstacles' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='maxPredictionTime' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='goalToCohereWithAgents:maxDistance:maxAngle:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='agents' type64='@'/>
<arg declared_type64='float' index='1' name='maxDistance' type64='f'/>
<arg declared_type64='float' index='2' name='maxAngle' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='goalToFleeAgent:'>
<arg declared_type64='GKAgent * _Nonnull' index='0' name='agent' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='goalToFollowPath:maxPredictionTime:forward:'>
<arg declared_type64='GKPath * _Nonnull' index='0' name='path' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='maxPredictionTime' type64='d'/>
<arg declared_type64='BOOL' index='2' name='forward' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='goalToInterceptAgent:maxPredictionTime:'>
<arg declared_type64='GKAgent * _Nonnull' index='0' name='target' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='maxPredictionTime' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='goalToReachTargetSpeed:'>
<arg declared_type64='float' index='0' name='targetSpeed' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='goalToSeekAgent:'>
<arg declared_type64='GKAgent * _Nonnull' index='0' name='agent' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='goalToSeparateFromAgents:maxDistance:maxAngle:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='agents' type64='@'/>
<arg declared_type64='float' index='1' name='maxDistance' type64='f'/>
<arg declared_type64='float' index='2' name='maxAngle' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='goalToStayOnPath:maxPredictionTime:'>
<arg declared_type64='GKPath * _Nonnull' index='0' name='path' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='maxPredictionTime' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='goalToWander:'>
<arg declared_type64='float' index='0' name='speed' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='GKGraph'>
<method selector='addNodes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='nodes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='connectNodeToLowestCostNode:bidirectional:'>
<arg declared_type64='GKGraphNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='BOOL' index='1' name='bidirectional' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='findPathFromNode:toNode:'>
<arg declared_type64='GKGraphNode * _Nonnull' index='0' name='startNode' type64='@'/>
<arg declared_type64='GKGraphNode * _Nonnull' index='1' name='endNode' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='graphWithNodes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='nodes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithNodes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='nodes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='nodes'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='removeNodes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='nodes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKGraphNode'>
<method selector='addConnectionsToNodes:bidirectional:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='nodes' type64='@'/>
<arg declared_type64='BOOL' index='1' name='bidirectional' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='connectedNodes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='costToNode:'>
<arg declared_type64='GKGraphNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='estimatedCostToNode:'>
<arg declared_type64='GKGraphNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='findPathFromNode:'>
<arg declared_type64='GKGraphNode * _Nonnull' index='0' name='startNode' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='findPathToNode:'>
<arg declared_type64='GKGraphNode * _Nonnull' index='0' name='goalNode' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='removeConnectionsToNodes:bidirectional:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='nodes' type64='@'/>
<arg declared_type64='BOOL' index='1' name='bidirectional' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKGraphNode2D'>
<method selector='initWithPoint:'>
<arg declared_type64='vector_float2' index='0' name='point' type64='{_vector_float2=ff}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='nodeWithPoint:'>
<arg declared_type64='vector_float2' index='0' name='point' type64='{_vector_float2=ff}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='position'>
<retval declared_type64='vector_float2' type64='{_vector_float2=ff}'/>
</method>
<method selector='setPosition:'>
<arg declared_type64='vector_float2' index='0' name='position' type64='{_vector_float2=ff}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKGridGraph'>
<method selector='connectNodeToAdjacentNodes:'>
<arg declared_type64='GKGridGraphNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='diagonalsAllowed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='graphFromGridStartingAt:width:height:diagonalsAllowed:'>
<arg declared_type64='vector_int2' index='0' name='position' type64='{_vector_int2=ii}'/>
<arg declared_type64='int' index='1' name='width' type64='i'/>
<arg declared_type64='int' index='2' name='height' type64='i'/>
<arg declared_type64='BOOL' index='3' name='diagonalsAllowed' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='gridHeight'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='gridOrigin'>
<retval declared_type64='vector_int2' type64='{_vector_int2=ii}'/>
</method>
<method selector='gridWidth'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='initFromGridStartingAt:width:height:diagonalsAllowed:'>
<arg declared_type64='vector_int2' index='0' name='position' type64='{_vector_int2=ii}'/>
<arg declared_type64='int' index='1' name='width' type64='i'/>
<arg declared_type64='int' index='2' name='height' type64='i'/>
<arg declared_type64='BOOL' index='3' name='diagonalsAllowed' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='nodeAtGridPosition:'>
<arg declared_type64='vector_int2' index='0' name='position' type64='{_vector_int2=ii}'/>
<retval declared_type64='GKGridGraphNode * _Nullable' type64='@'/>
</method>
</class>
<class name='GKGridGraphNode'>
<method selector='gridPosition'>
<retval declared_type64='vector_int2' type64='{_vector_int2=ii}'/>
</method>
<method selector='initWithGridPosition:'>
<arg declared_type64='vector_int2' index='0' name='gridPosition' type64='{_vector_int2=ii}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='nodeWithGridPosition:'>
<arg declared_type64='vector_int2' index='0' name='gridPosition' type64='{_vector_int2=ii}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setGridPosition:'>
<arg declared_type64='vector_int2' index='0' name='gridPosition' type64='{_vector_int2=ii}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKLinearCongruentialRandomSource'>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSeed:'>
<arg declared_type64='uint64_t' index='0' name='seed' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='seed'>
<retval declared_type64='uint64_t' type64='Q'/>
</method>
<method selector='setSeed:'>
<arg declared_type64='uint64_t' index='0' name='seed' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKMersenneTwisterRandomSource'>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSeed:'>
<arg declared_type64='uint64_t' index='0' name='seed' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='seed'>
<retval declared_type64='uint64_t' type64='Q'/>
</method>
<method selector='setSeed:'>
<arg declared_type64='uint64_t' index='0' name='seed' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKMinmaxStrategist'>
<method selector='bestMoveForPlayer:'>
<arg declared_type64='id _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='maxLookAheadDepth'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='randomMoveForPlayer:fromNumberOfBestMoves:'>
<arg declared_type64='id _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='numMovesToConsider' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setMaxLookAheadDepth:'>
<arg declared_type64='NSInteger' index='0' name='maxLookAheadDepth' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKNSPredicateRule'>
<method selector='evaluatePredicateWithSystem:'>
<arg declared_type64='GKRuleSystem * _Nonnull' index='0' name='system' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithPredicate:'>
<arg declared_type64='NSPredicate * _Nonnull' index='0' name='predicate' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='predicate'>
<retval declared_type64='NSPredicate * _Nonnull' type64='@'/>
</method>
</class>
<class name='GKObstacleGraph'>
<method selector='addObstacles:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='obstacles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='bufferRadius'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='connectNodeUsingObstacles:'>
<arg declared_type64='GKGraphNode2D * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='connectNodeUsingObstacles:ignoringBufferRadiusOfObstacles:'>
<arg declared_type64='GKGraphNode2D * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='obstaclesBufferRadiusToIgnore' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='connectNodeUsingObstacles:ignoringObstacles:'>
<arg declared_type64='GKGraphNode2D * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='obstaclesToIgnore' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='graphWithObstacles:bufferRadius:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='obstacles' type64='@'/>
<arg declared_type64='float' index='1' name='bufferRadius' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithObstacles:bufferRadius:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='obstacles' type64='@'/>
<arg declared_type64='float' index='1' name='bufferRadius' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isConnectionLockedFromNode:toNode:'>
<arg declared_type64='GKGraphNode2D * _Nonnull' index='0' name='startNode' type64='@'/>
<arg declared_type64='GKGraphNode2D * _Nonnull' index='1' name='endNode' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lockConnectionFromNode:toNode:'>
<arg declared_type64='GKGraphNode2D * _Nonnull' index='0' name='startNode' type64='@'/>
<arg declared_type64='GKGraphNode2D * _Nonnull' index='1' name='endNode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='nodesForObstacle:'>
<arg declared_type64='GKPolygonObstacle * _Nonnull' index='0' name='obstacle' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='obstacles'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='removeAllObstacles'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeObstacles:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='obstacles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unlockConnectionFromNode:toNode:'>
<arg declared_type64='GKGraphNode2D * _Nonnull' index='0' name='startNode' type64='@'/>
<arg declared_type64='GKGraphNode2D * _Nonnull' index='1' name='endNode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKPath'>
<method selector='initWithGraphNodes:radius:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='graphNodes' type64='@'/>
<arg declared_type64='float' index='1' name='radius' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithPoints:count:radius:cyclical:'>
<arg declared_type64='vector_float2 * _Nonnull' index='0' name='points' type64='^{_vector_float2=ff}'/>
<arg declared_type64='size_t' index='1' name='count' type64='Q'/>
<arg declared_type64='float' index='2' name='radius' type64='f'/>
<arg declared_type64='BOOL' index='3' name='cyclical' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isCyclical'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='numPoints'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method class_method='true' selector='pathWithGraphNodes:radius:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='graphNodes' type64='@'/>
<arg declared_type64='float' index='1' name='radius' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='pathWithPoints:count:radius:cyclical:'>
<arg declared_type64='vector_float2 * _Nonnull' index='0' name='points' type64='^{_vector_float2=ff}'/>
<arg declared_type64='size_t' index='1' name='count' type64='Q'/>
<arg declared_type64='float' index='2' name='radius' type64='f'/>
<arg declared_type64='BOOL' index='3' name='cyclical' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='pointAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<retval declared_type64='vector_float2' type64='{_vector_float2=ff}'/>
</method>
<method selector='radius'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setCyclical:'>
<arg declared_type64='BOOL' index='0' name='cyclical' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type64='float' index='0' name='radius' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKPolygonObstacle'>
<method selector='initWithPoints:count:'>
<arg declared_type64='vector_float2 * _Nonnull' index='0' name='points' type64='^{_vector_float2=ff}'/>
<arg declared_type64='size_t' index='1' name='numPoints' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='obstacleWithPoints:count:'>
<arg declared_type64='vector_float2 * _Nonnull' index='0' name='points' type64='^{_vector_float2=ff}'/>
<arg declared_type64='size_t' index='1' name='numPoints' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='vertexAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<retval declared_type64='vector_float2' type64='{_vector_float2=ff}'/>
</method>
<method selector='vertexCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
</class>
<class name='GKRandomDistribution'>
<method class_method='true' selector='d20'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='d6'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='distributionForDieWithSideCount:'>
<arg declared_type64='NSInteger' index='0' name='sideCount' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='distributionWithLowestValue:highestValue:'>
<arg declared_type64='NSInteger' index='0' name='lowestInclusive' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='highestInclusive' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='highestValue'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='initWithRandomSource:lowestValue:highestValue:'>
<arg declared_type64='id _Nonnull' index='0' name='source' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='lowestInclusive' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='highestInclusive' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='lowestValue'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='nextBool'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='nextInt'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='nextIntWithUpperBound:'>
<arg declared_type64='NSUInteger' index='0' name='upperBound' type64='Q'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='nextUniform'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='numberOfPossibleOutcomes'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
</class>
<class name='GKRandomSource'>
<method selector='arrayByShufflingObjectsInArray:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='array' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sharedRandom'>
<retval declared_type64='GKRandomSource * _Nonnull' type64='@'/>
</method>
</class>
<class name='GKRule'>
<method selector='evaluatePredicateWithSystem:'>
<arg declared_type64='GKRuleSystem * _Nonnull' index='0' name='system' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='performActionWithSystem:'>
<arg declared_type64='GKRuleSystem * _Nonnull' index='0' name='system' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='ruleWithBlockPredicate:action:'>
<arg declared_type64='BOOL (^ _Nonnull)(GKRuleSystem * _Nonnull)' function_pointer='true' index='0' name='predicate' type64='@?'>
<arg declared_type64='GKRuleSystem * _Nonnull' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<arg declared_type64='void (^ _Nonnull)(GKRuleSystem * _Nonnull)' function_pointer='true' index='1' name='action' type64='@?'>
<arg declared_type64='GKRuleSystem * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='ruleWithPredicate:assertingFact:grade:'>
<arg declared_type64='NSPredicate * _Nonnull' index='0' name='predicate' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='fact' type64='@'/>
<arg declared_type64='float' index='2' name='grade' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='ruleWithPredicate:retractingFact:grade:'>
<arg declared_type64='NSPredicate * _Nonnull' index='0' name='predicate' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='fact' type64='@'/>
<arg declared_type64='float' index='2' name='grade' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='salience'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setSalience:'>
<arg declared_type64='NSInteger' index='0' name='salience' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKRuleSystem'>
<method selector='addRule:'>
<arg declared_type64='GKRule * _Nonnull' index='0' name='rule' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addRulesFromArray:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='rules' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='agenda'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='assertFact:'>
<arg declared_type64='id _Nonnull' index='0' name='fact' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='assertFact:grade:'>
<arg declared_type64='id _Nonnull' index='0' name='fact' type64='@'/>
<arg declared_type64='float' index='1' name='grade' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='evaluate'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='executed'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='facts'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='gradeForFact:'>
<arg declared_type64='id _Nonnull' index='0' name='fact' type64='@'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maximumGradeForFacts:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='facts' type64='@'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='minimumGradeForFacts:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='facts' type64='@'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='removeAllRules'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='retractFact:'>
<arg declared_type64='id _Nonnull' index='0' name='fact' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='retractFact:grade:'>
<arg declared_type64='id _Nonnull' index='0' name='fact' type64='@'/>
<arg declared_type64='float' index='1' name='grade' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rules'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='state'>
<retval declared_type64='NSMutableDictionary * _Nonnull' type64='@'/>
</method>
</class>
<class name='GKState'>
<method selector='didEnterWithPreviousState:'>
<arg declared_type64='GKState * _Nullable' index='0' name='previousState' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isValidNextState:'>
<arg declared_type64='Class _Nonnull' index='0' name='stateClass' type64='#'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='state'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='stateMachine'>
<retval declared_type64='GKStateMachine * _Nullable' type64='@'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='seconds' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willExitWithNextState:'>
<arg declared_type64='GKState * _Nonnull' index='0' name='nextState' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='GKStateMachine'>
<method selector='canEnterState:'>
<arg declared_type64='Class _Nonnull' index='0' name='stateClass' type64='#'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='currentState'>
<retval declared_type64='GKState * _Nullable' type64='@'/>
</method>
<method selector='enterState:'>
<arg declared_type64='Class _Nonnull' index='0' name='stateClass' type64='#'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithStates:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='states' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='stateForClass:'>
<arg declared_type64='Class _Nonnull' index='0' name='stateClass' type64='#'/>
<retval declared_type64='GKState * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='stateMachineWithStates:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='states' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='updateWithDeltaTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='sec' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='activePlayer'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='agentDidUpdate:'>
<arg declared_type64='GKAgent * _Nonnull' index='0' name='agent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='agentWillUpdate:'>
<arg declared_type64='GKAgent * _Nonnull' index='0' name='agent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applyGameModelUpdate:'>
<arg declared_type64='id _Nonnull' index='0' name='gameModelUpdate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='bestMoveForActivePlayer'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='gameModel'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='gameModelUpdatesForPlayer:'>
<arg declared_type64='id _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='NSArray&gt; * _Nullable' type64='@'/>
</method>
<method selector='isLossForPlayer:'>
<arg declared_type64='id _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isWinForPlayer:'>
<arg declared_type64='id _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='nextBool'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='nextInt'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='nextIntWithUpperBound:'>
<arg declared_type64='NSUInteger' index='0' name='upperBound' type64='Q'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='nextUniform'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='playerId'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='players'>
<retval declared_type64='NSArray&gt; * _Nullable' type64='@'/>
</method>
<method selector='randomSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='scoreForPlayer:'>
<arg declared_type64='id _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setGameModel:'>
<arg declared_type64='id _Nullable' index='0' name='gameModel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRandomSource:'>
<arg declared_type64='id _Nullable' index='0' name='randomSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:'>
<arg declared_type64='NSInteger' index='0' name='value' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unapplyGameModelUpdate:'>
<arg declared_type64='id _Nonnull' index='0' name='gameModelUpdate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='value'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<informal_protocol name='GKAgentDelegate'>
<method selector='agentDidUpdate:' type64='v24@0:8@16'>
<arg declared_type64='GKAgent * _Nonnull' index='0' name='agent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='agentWillUpdate:' type64='v24@0:8@16'>
<arg declared_type64='GKAgent * _Nonnull' index='0' name='agent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='GKGameModel'>
<method selector='activePlayer' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='applyGameModelUpdate:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='gameModelUpdate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='gameModelUpdatesForPlayer:' type64='@24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='NSArray&gt; * _Nullable' type64='@'/>
</method>
<method selector='isLossForPlayer:' type64='B24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isWinForPlayer:' type64='B24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='players' type64='@16@0:8'>
<retval declared_type64='NSArray&gt; * _Nullable' type64='@'/>
</method>
<method selector='scoreForPlayer:' type64='q24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setGameModel:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='gameModel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unapplyGameModelUpdate:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='gameModelUpdate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='GKGameModelPlayer'>
<method selector='playerId' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='GKGameModelUpdate'>
<method selector='setValue:' type64='v24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='value' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='value' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='GKRandom'>
<method selector='nextBool' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='nextInt' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='nextIntWithUpperBound:' type64='Q24@0:8Q16'>
<arg declared_type64='NSUInteger' index='0' name='upperBound' type64='Q'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='nextUniform' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
</informal_protocol>
<informal_protocol name='GKStrategist'>
<method selector='bestMoveForActivePlayer' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='gameModel' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='randomSource' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setGameModel:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='gameModel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRandomSource:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='randomSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
</signatures>
