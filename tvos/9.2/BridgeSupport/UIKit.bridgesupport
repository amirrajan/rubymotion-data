<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<depends_on path='/System/Library/Frameworks/OpenGLES.framework'/>
<depends_on path='/System/Library/Frameworks/VideoToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/CoreImage.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/MobileCoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<struct name='UIEdgeInsets' type64='{UIEdgeInsets=&quot;top&quot;d&quot;left&quot;d&quot;bottom&quot;d&quot;right&quot;d}'>
<field declared_type64='CGFloat' name='top' type64='d'/>
<field declared_type64='CGFloat' name='left' type64='d'/>
<field declared_type64='CGFloat' name='bottom' type64='d'/>
<field declared_type64='CGFloat' name='right' type64='d'/>
</struct>
<struct name='UIFloatRange' type64='{_UIFloatRange=&quot;minimum&quot;d&quot;maximum&quot;d}'>
<field declared_type64='CGFloat' name='minimum' type64='d'/>
<field declared_type64='CGFloat' name='maximum' type64='d'/>
</struct>
<struct name='UIOffset' type64='{UIOffset=&quot;horizontal&quot;d&quot;vertical&quot;d}'>
<field declared_type64='CGFloat' name='horizontal' type64='d'/>
<field declared_type64='CGFloat' name='vertical' type64='d'/>
</struct>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSAttachmentAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSBackgroundColorAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSBackgroundColorDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSBaselineOffsetAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSCharacterEncodingDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSDefaultAttributesDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSDefaultTabIntervalDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSDocumentTypeDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSExpansionAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSFontAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSForegroundColorAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSHTMLTextDocumentType' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSHyphenationFactorDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSKernAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSLigatureAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSLinkAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSObliquenessAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSPaperMarginDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSPaperSizeDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSParagraphStyleAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSPlainTextDocumentType' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSRTFDTextDocumentType' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSRTFTextDocumentType' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSReadOnlyDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSShadowAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSStrikethroughColorAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSStrikethroughStyleAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSStrokeColorAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSStrokeWidthAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTabColumnTerminatorsAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTextEffectAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTextEffectLetterpressStyle' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTextLayoutSectionOrientation' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTextLayoutSectionRange' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTextLayoutSectionsAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTextStorageDidProcessEditingNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTextStorageWillProcessEditingNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSUnderlineColorAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSUnderlineStyleAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSVerticalGlyphFormAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSViewModeDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSViewSizeDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSViewZoomDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSWritingDirectionAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityAnnouncementDidFinishNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityAnnouncementKeyStringValue' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityAnnouncementKeyWasSuccessful' type64='@'/>
<constant declared_type64='UIAccessibilityNotifications' name='UIAccessibilityAnnouncementNotification' type64='I'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityAssistiveTechnologyKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityBoldTextStatusDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityClosedCaptioningStatusDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityDarkerSystemColorsStatusDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityElementFocusedNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityFocusedElementKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityGrayscaleStatusDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityGuidedAccessStatusDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityInvertColorsStatusDidChangeNotification' type64='@'/>
<constant declared_type64='UIAccessibilityNotifications' name='UIAccessibilityLayoutChangedNotification' type64='I'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityMonoAudioStatusDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityNotificationSwitchControlIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityNotificationVoiceOverIdentifier' type64='@'/>
<constant declared_type64='UIAccessibilityNotifications' name='UIAccessibilityPageScrolledNotification' type64='I'/>
<constant declared_type64='UIAccessibilityNotifications' name='UIAccessibilityPauseAssistiveTechnologyNotification' type64='I'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityReduceMotionStatusDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityReduceTransparencyStatusDidChangeNotification' type64='@'/>
<constant declared_type64='UIAccessibilityNotifications' name='UIAccessibilityResumeAssistiveTechnologyNotification' type64='I'/>
<constant declared_type64='UIAccessibilityNotifications' name='UIAccessibilityScreenChangedNotification' type64='I'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityShakeToUndoDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilitySpeakScreenStatusDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilitySpeakSelectionStatusDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilitySpeechAttributeLanguage' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilitySpeechAttributePitch' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilitySpeechAttributePunctuation' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilitySwitchControlStatusDidChangeNotification' type64='@'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitAdjustable' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitAllowsDirectInteraction' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitButton' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitCausesPageTurn' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitHeader' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitImage' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitKeyboardKey' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitLink' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitNone' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitNotEnabled' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitPlaysSound' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitSearchField' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitSelected' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitStartsMediaSession' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitStaticText' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitSummaryElement' type64='Q'/>
<constant declared_type64='UIAccessibilityTraits' name='UIAccessibilityTraitUpdatesFrequently' type64='Q'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityUnfocusedElementKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIAccessibilityVoiceOverStatusChanged' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationDidBecomeActiveNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationDidEnterBackgroundNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationDidFinishLaunchingNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationDidReceiveMemoryWarningNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationKeyboardExtensionPointIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationLaunchOptionsAnnotationKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationLaunchOptionsBluetoothCentralsKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationLaunchOptionsBluetoothPeripheralsKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationLaunchOptionsLocationKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationLaunchOptionsSourceApplicationKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationLaunchOptionsURLKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationLaunchOptionsUserActivityDictionaryKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationLaunchOptionsUserActivityTypeKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationOpenSettingsURLString' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationOpenURLOptionsAnnotationKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationOpenURLOptionsOpenInPlaceKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationOpenURLOptionsSourceApplicationKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationProtectedDataDidBecomeAvailable' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationProtectedDataWillBecomeUnavailable' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationSignificantTimeChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationStateRestorationBundleVersionKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationStateRestorationSystemVersionKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationStateRestorationTimestampKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationStateRestorationUserInterfaceIdiomKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationUserDidTakeScreenshotNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationWillEnterForegroundNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationWillResignActiveNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIApplicationWillTerminateNotification' type64='@'/>
<constant const='true' declared_type64='UIBackgroundTaskIdentifier' name='UIBackgroundTaskInvalid' type64='Q'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UICollectionElementKindSectionFooter' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UICollectionElementKindSectionHeader' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryAccessibilityExtraExtraExtraLarge' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryAccessibilityExtraExtraLarge' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryAccessibilityExtraLarge' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryAccessibilityLarge' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryAccessibilityMedium' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryExtraExtraExtraLarge' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryExtraExtraLarge' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryExtraLarge' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryExtraSmall' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryLarge' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryMedium' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategoryNewValueKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIContentSizeCategorySmall' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIDeviceProximityStateDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='UIEdgeInsets' name='UIEdgeInsetsZero' type64='{UIEdgeInsets=dddd}'/>
<constant const='true' declared_type64='UIFloatRange' name='UIFloatRangeInfinite' type64='{_UIFloatRange=dd}'/>
<constant const='true' declared_type64='UIFloatRange' name='UIFloatRangeZero' type64='{_UIFloatRange=dd}'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorCascadeListAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorCharacterSetAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorFaceAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorFamilyAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorFeatureSettingsAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorFixedAdvanceAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorMatrixAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorNameAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorSizeAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorTextStyleAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorTraitsAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontDescriptorVisibleNameAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontFeatureSelectorIdentifierKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontFeatureTypeIdentifierKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontSlantTrait' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontSymbolicTrait' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontTextStyleBody' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontTextStyleCallout' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontTextStyleCaption1' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontTextStyleCaption2' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontTextStyleFootnote' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontTextStyleHeadline' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontTextStyleSubheadline' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontTextStyleTitle1' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontTextStyleTitle2' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontTextStyleTitle3' type64='@'/>
<constant const='true' declared_type64='CGFloat' name='UIFontWeightBlack' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='UIFontWeightBold' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='UIFontWeightHeavy' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='UIFontWeightLight' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='UIFontWeightMedium' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='UIFontWeightRegular' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='UIFontWeightSemibold' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='UIFontWeightThin' type64='d'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontWeightTrait' type64='@'/>
<constant const='true' declared_type64='CGFloat' name='UIFontWeightUltraLight' type64='d'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIFontWidthTrait' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIKeyInputDownArrow' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIKeyInputEscape' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIKeyInputLeftArrow' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIKeyInputRightArrow' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIKeyInputUpArrow' type64='@'/>
<constant const='true' declared_type64='CGSize' name='UILayoutFittingCompressedSize' type64='{CGSize=dd}'/>
<constant const='true' declared_type64='CGSize' name='UILayoutFittingExpandedSize' type64='{CGSize=dd}'/>
<constant const='true' declared_type64='UILayoutPriority' name='UILayoutPriorityDefaultHigh' type64='f'/>
<constant const='true' declared_type64='UILayoutPriority' name='UILayoutPriorityDefaultLow' type64='f'/>
<constant const='true' declared_type64='UILayoutPriority' name='UILayoutPriorityFittingSizeLevel' type64='f'/>
<constant const='true' declared_type64='UILayoutPriority' name='UILayoutPriorityRequired' type64='f'/>
<constant const='true' declared_type64='NSTimeInterval' name='UIMinimumKeepAliveTimeout' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='UINavigationControllerHideShowBarDuration' type64='d'/>
<constant const='true' declared_type64='NSString*' name='UINibExternalObjects' type64='@'/>
<constant const='true' declared_type64='UIOffset' name='UIOffsetZero' type64='{UIOffset=dd}'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIPageViewControllerOptionInterPageSpacingKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIPageViewControllerOptionSpineLocationKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIScreenBrightnessDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIScreenDidConnectNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIScreenDidDisconnectNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIScreenModeDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='CGFloat' name='UIScrollViewDecelerationRateFast' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='UIScrollViewDecelerationRateNormal' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='UISplitViewControllerAutomaticDimension' type64='d'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIStateRestorationViewControllerStoryboardKey' type64='@'/>
<constant const='true' declared_type64='CGFloat' name='UITableViewAutomaticDimension' type64='d'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITableViewSelectionDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITextFieldTextDidBeginEditingNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITextFieldTextDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITextFieldTextDidEndEditingNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITextInputCurrentInputModeDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITextViewTextDidBeginEditingNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITextViewTextDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITextViewTextDidEndEditingNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITrackingRunLoopMode' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITransitionContextFromViewControllerKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITransitionContextFromViewKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITransitionContextToViewControllerKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UITransitionContextToViewKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIViewControllerHierarchyInconsistencyException' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIViewControllerShowDetailTargetDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='CGFloat' name='UIViewNoIntrinsicMetric' type64='d'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIWindowDidBecomeHiddenNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIWindowDidBecomeKeyNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIWindowDidBecomeVisibleNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='UIWindowDidResignKeyNotification' type64='@'/>
<constant const='true' declared_type64='UIWindowLevel' name='UIWindowLevelAlert' type64='d'/>
<constant const='true' declared_type64='UIWindowLevel' name='UIWindowLevelNormal' type64='d'/>
<enum name='NSAttachmentCharacter' value64='65532'/>
<enum name='NSControlCharacterActionContainerBreak' value64='32'/>
<enum name='NSControlCharacterActionHorizontalTab' value64='4'/>
<enum name='NSControlCharacterActionLineBreak' value64='8'/>
<enum name='NSControlCharacterActionParagraphBreak' value64='16'/>
<enum name='NSControlCharacterActionWhitespace' value64='2'/>
<enum name='NSControlCharacterActionZeroAdvancement' value64='1'/>
<enum name='NSControlCharacterContainerBreakAction' value64='32'/>
<enum name='NSControlCharacterHorizontalTabAction' value64='4'/>
<enum name='NSControlCharacterLineBreakAction' value64='8'/>
<enum name='NSControlCharacterParagraphBreakAction' value64='16'/>
<enum name='NSControlCharacterWhitespaceAction' value64='2'/>
<enum name='NSControlCharacterZeroAdvancementAction' value64='1'/>
<enum name='NSGlyphPropertyControlCharacter' value64='2'/>
<enum name='NSGlyphPropertyElastic' value64='4'/>
<enum name='NSGlyphPropertyNonBaseCharacter' value64='8'/>
<enum name='NSGlyphPropertyNull' value64='1'/>
<enum name='NSLayoutAttributeBaseline' value64='11'/>
<enum name='NSLayoutAttributeBottom' value64='4'/>
<enum name='NSLayoutAttributeBottomMargin' value64='16'/>
<enum name='NSLayoutAttributeCenterX' value64='9'/>
<enum name='NSLayoutAttributeCenterXWithinMargins' value64='19'/>
<enum name='NSLayoutAttributeCenterY' value64='10'/>
<enum name='NSLayoutAttributeCenterYWithinMargins' value64='20'/>
<enum name='NSLayoutAttributeFirstBaseline' value64='12'/>
<enum name='NSLayoutAttributeHeight' value64='8'/>
<enum name='NSLayoutAttributeLastBaseline' value64='11'/>
<enum name='NSLayoutAttributeLeading' value64='5'/>
<enum name='NSLayoutAttributeLeadingMargin' value64='17'/>
<enum name='NSLayoutAttributeLeft' value64='1'/>
<enum name='NSLayoutAttributeLeftMargin' value64='13'/>
<enum name='NSLayoutAttributeNotAnAttribute' value64='0'/>
<enum name='NSLayoutAttributeRight' value64='2'/>
<enum name='NSLayoutAttributeRightMargin' value64='14'/>
<enum name='NSLayoutAttributeTop' value64='3'/>
<enum name='NSLayoutAttributeTopMargin' value64='15'/>
<enum name='NSLayoutAttributeTrailing' value64='6'/>
<enum name='NSLayoutAttributeTrailingMargin' value64='18'/>
<enum name='NSLayoutAttributeWidth' value64='7'/>
<enum name='NSLayoutFormatAlignAllBaseline' value64='2048'/>
<enum name='NSLayoutFormatAlignAllBottom' value64='16'/>
<enum name='NSLayoutFormatAlignAllCenterX' value64='512'/>
<enum name='NSLayoutFormatAlignAllCenterY' value64='1024'/>
<enum name='NSLayoutFormatAlignAllFirstBaseline' value64='4096'/>
<enum name='NSLayoutFormatAlignAllLastBaseline' value64='2048'/>
<enum name='NSLayoutFormatAlignAllLeading' value64='32'/>
<enum name='NSLayoutFormatAlignAllLeft' value64='2'/>
<enum name='NSLayoutFormatAlignAllRight' value64='4'/>
<enum name='NSLayoutFormatAlignAllTop' value64='8'/>
<enum name='NSLayoutFormatAlignAllTrailing' value64='64'/>
<enum name='NSLayoutFormatAlignmentMask' value64='65535'/>
<enum name='NSLayoutFormatDirectionLeadingToTrailing' value64='0'/>
<enum name='NSLayoutFormatDirectionLeftToRight' value64='65536'/>
<enum name='NSLayoutFormatDirectionMask' value64='196608'/>
<enum name='NSLayoutFormatDirectionRightToLeft' value64='131072'/>
<enum name='NSLayoutRelationEqual' value64='0'/>
<enum name='NSLayoutRelationGreaterThanOrEqual' value64='1'/>
<enum name='NSLayoutRelationLessThanOrEqual' value64='-1'/>
<enum name='NSLineBreakByCharWrapping' value64='1'/>
<enum name='NSLineBreakByClipping' value64='2'/>
<enum name='NSLineBreakByTruncatingHead' value64='3'/>
<enum name='NSLineBreakByTruncatingMiddle' value64='5'/>
<enum name='NSLineBreakByTruncatingTail' value64='4'/>
<enum name='NSLineBreakByWordWrapping' value64='0'/>
<enum name='NSStringDrawingTruncatesLastVisibleLine' value64='32'/>
<enum name='NSStringDrawingUsesDeviceMetrics' value64='8'/>
<enum name='NSStringDrawingUsesFontLeading' value64='2'/>
<enum name='NSStringDrawingUsesLineFragmentOrigin' value64='1'/>
<enum name='NSTextAlignmentCenter' value64='1'/>
<enum name='NSTextAlignmentJustified' value64='3'/>
<enum name='NSTextAlignmentLeft' value64='0'/>
<enum name='NSTextAlignmentNatural' value64='4'/>
<enum name='NSTextAlignmentRight' value64='2'/>
<enum name='NSTextLayoutOrientationHorizontal' value64='0'/>
<enum name='NSTextLayoutOrientationVertical' value64='1'/>
<enum name='NSTextStorageEditedAttributes' value64='1'/>
<enum name='NSTextStorageEditedCharacters' value64='2'/>
<enum name='NSUnderlineByWord' value64='32768'/>
<enum name='NSUnderlinePatternDash' value64='512'/>
<enum name='NSUnderlinePatternDashDot' value64='768'/>
<enum name='NSUnderlinePatternDashDotDot' value64='1024'/>
<enum name='NSUnderlinePatternDot' value64='256'/>
<enum name='NSUnderlinePatternSolid' value64='0'/>
<enum name='NSUnderlineStyleDouble' value64='9'/>
<enum name='NSUnderlineStyleNone' value64='0'/>
<enum name='NSUnderlineStyleSingle' value64='1'/>
<enum name='NSUnderlineStyleThick' value64='2'/>
<enum name='NSWritingDirectionEmbedding' value64='0'/>
<enum name='NSWritingDirectionLeftToRight' value64='0'/>
<enum name='NSWritingDirectionNatural' value64='-1'/>
<enum name='NSWritingDirectionOverride' value64='2'/>
<enum name='NSWritingDirectionRightToLeft' value64='1'/>
<enum name='UIAccessibilityNavigationStyleAutomatic' value64='0'/>
<enum name='UIAccessibilityNavigationStyleCombined' value64='2'/>
<enum name='UIAccessibilityNavigationStyleSeparate' value64='1'/>
<enum name='UIAccessibilityScrollDirectionDown' value64='4'/>
<enum name='UIAccessibilityScrollDirectionLeft' value64='2'/>
<enum name='UIAccessibilityScrollDirectionNext' value64='5'/>
<enum name='UIAccessibilityScrollDirectionPrevious' value64='6'/>
<enum name='UIAccessibilityScrollDirectionRight' value64='1'/>
<enum name='UIAccessibilityScrollDirectionUp' value64='3'/>
<enum name='UIAccessibilityZoomTypeInsertionPoint' value64='0'/>
<enum name='UIActivityIndicatorViewStyleGray' value64='2'/>
<enum name='UIActivityIndicatorViewStyleWhite' value64='1'/>
<enum name='UIActivityIndicatorViewStyleWhiteLarge' value64='0'/>
<enum name='UIAlertActionStyleCancel' value64='1'/>
<enum name='UIAlertActionStyleDefault' value64='0'/>
<enum name='UIAlertActionStyleDestructive' value64='2'/>
<enum name='UIAlertControllerStyleActionSheet' value64='0'/>
<enum name='UIAlertControllerStyleAlert' value64='1'/>
<enum name='UIApplicationStateActive' value64='0'/>
<enum name='UIApplicationStateBackground' value64='2'/>
<enum name='UIApplicationStateInactive' value64='1'/>
<enum name='UIAttachmentBehaviorTypeAnchor' value64='1'/>
<enum name='UIAttachmentBehaviorTypeItems' value64='0'/>
<enum name='UIBarButtonItemStyleBordered' value64='1'/>
<enum name='UIBarButtonItemStyleDone' value64='2'/>
<enum name='UIBarButtonItemStylePlain' value64='0'/>
<enum name='UIBarButtonSystemItemAction' value64='9'/>
<enum name='UIBarButtonSystemItemAdd' value64='4'/>
<enum name='UIBarButtonSystemItemBookmarks' value64='11'/>
<enum name='UIBarButtonSystemItemCamera' value64='15'/>
<enum name='UIBarButtonSystemItemCancel' value64='1'/>
<enum name='UIBarButtonSystemItemCompose' value64='7'/>
<enum name='UIBarButtonSystemItemDone' value64='0'/>
<enum name='UIBarButtonSystemItemEdit' value64='2'/>
<enum name='UIBarButtonSystemItemFastForward' value64='20'/>
<enum name='UIBarButtonSystemItemFixedSpace' value64='6'/>
<enum name='UIBarButtonSystemItemFlexibleSpace' value64='5'/>
<enum name='UIBarButtonSystemItemOrganize' value64='10'/>
<enum name='UIBarButtonSystemItemPageCurl' value64='23'/>
<enum name='UIBarButtonSystemItemPause' value64='18'/>
<enum name='UIBarButtonSystemItemPlay' value64='17'/>
<enum name='UIBarButtonSystemItemRedo' value64='22'/>
<enum name='UIBarButtonSystemItemRefresh' value64='13'/>
<enum name='UIBarButtonSystemItemReply' value64='8'/>
<enum name='UIBarButtonSystemItemRewind' value64='19'/>
<enum name='UIBarButtonSystemItemSave' value64='3'/>
<enum name='UIBarButtonSystemItemSearch' value64='12'/>
<enum name='UIBarButtonSystemItemStop' value64='14'/>
<enum name='UIBarButtonSystemItemTrash' value64='16'/>
<enum name='UIBarButtonSystemItemUndo' value64='21'/>
<enum name='UIBarMetricsCompact' value64='1'/>
<enum name='UIBarMetricsCompactPrompt' value64='102'/>
<enum name='UIBarMetricsDefault' value64='0'/>
<enum name='UIBarMetricsDefaultPrompt' value64='101'/>
<enum name='UIBarMetricsLandscapePhone' value64='1'/>
<enum name='UIBarMetricsLandscapePhonePrompt' value64='102'/>
<enum name='UIBarPositionAny' value64='0'/>
<enum name='UIBarPositionBottom' value64='1'/>
<enum name='UIBarPositionTop' value64='2'/>
<enum name='UIBarPositionTopAttached' value64='3'/>
<enum name='UIBaselineAdjustmentAlignBaselines' value64='0'/>
<enum name='UIBaselineAdjustmentAlignCenters' value64='1'/>
<enum name='UIBaselineAdjustmentNone' value64='2'/>
<enum name='UIBlurEffectStyleDark' value64='2'/>
<enum name='UIBlurEffectStyleExtraLight' value64='0'/>
<enum name='UIBlurEffectStyleLight' value64='1'/>
<enum name='UIButtonTypeContactAdd' value64='5'/>
<enum name='UIButtonTypeCustom' value64='0'/>
<enum name='UIButtonTypeDetailDisclosure' value64='2'/>
<enum name='UIButtonTypeInfoDark' value64='4'/>
<enum name='UIButtonTypeInfoLight' value64='3'/>
<enum name='UIButtonTypeRoundedRect' value64='1'/>
<enum name='UIButtonTypeSystem' value64='1'/>
<enum name='UICollectionElementCategoryCell' value64='0'/>
<enum name='UICollectionElementCategoryDecorationView' value64='2'/>
<enum name='UICollectionElementCategorySupplementaryView' value64='1'/>
<enum name='UICollectionUpdateActionDelete' value64='1'/>
<enum name='UICollectionUpdateActionInsert' value64='0'/>
<enum name='UICollectionUpdateActionMove' value64='3'/>
<enum name='UICollectionUpdateActionNone' value64='4'/>
<enum name='UICollectionUpdateActionReload' value64='2'/>
<enum name='UICollectionViewScrollDirectionHorizontal' value64='1'/>
<enum name='UICollectionViewScrollDirectionVertical' value64='0'/>
<enum name='UICollectionViewScrollPositionBottom' value64='4'/>
<enum name='UICollectionViewScrollPositionCenteredHorizontally' value64='16'/>
<enum name='UICollectionViewScrollPositionCenteredVertically' value64='2'/>
<enum name='UICollectionViewScrollPositionLeft' value64='8'/>
<enum name='UICollectionViewScrollPositionNone' value64='0'/>
<enum name='UICollectionViewScrollPositionRight' value64='32'/>
<enum name='UICollectionViewScrollPositionTop' value64='1'/>
<enum name='UICollisionBehaviorModeBoundaries' value64='2'/>
<enum name='UICollisionBehaviorModeEverything' value64='18446744073709551615'/>
<enum name='UICollisionBehaviorModeItems' value64='1'/>
<enum name='UIControlContentHorizontalAlignmentCenter' value64='0'/>
<enum name='UIControlContentHorizontalAlignmentFill' value64='3'/>
<enum name='UIControlContentHorizontalAlignmentLeft' value64='1'/>
<enum name='UIControlContentHorizontalAlignmentRight' value64='2'/>
<enum name='UIControlContentVerticalAlignmentBottom' value64='2'/>
<enum name='UIControlContentVerticalAlignmentCenter' value64='0'/>
<enum name='UIControlContentVerticalAlignmentFill' value64='3'/>
<enum name='UIControlContentVerticalAlignmentTop' value64='1'/>
<enum name='UIControlEventAllEditingEvents' value64='983040'/>
<enum name='UIControlEventAllEvents' value64='4294967295'/>
<enum name='UIControlEventAllTouchEvents' value64='4095'/>
<enum name='UIControlEventApplicationReserved' value64='251658240'/>
<enum name='UIControlEventEditingChanged' value64='131072'/>
<enum name='UIControlEventEditingDidBegin' value64='65536'/>
<enum name='UIControlEventEditingDidEnd' value64='262144'/>
<enum name='UIControlEventEditingDidEndOnExit' value64='524288'/>
<enum name='UIControlEventPrimaryActionTriggered' value64='8192'/>
<enum name='UIControlEventSystemReserved' value64='4026531840'/>
<enum name='UIControlEventTouchCancel' value64='256'/>
<enum name='UIControlEventTouchDown' value64='1'/>
<enum name='UIControlEventTouchDownRepeat' value64='2'/>
<enum name='UIControlEventTouchDragEnter' value64='16'/>
<enum name='UIControlEventTouchDragExit' value64='32'/>
<enum name='UIControlEventTouchDragInside' value64='4'/>
<enum name='UIControlEventTouchDragOutside' value64='8'/>
<enum name='UIControlEventTouchUpInside' value64='64'/>
<enum name='UIControlEventTouchUpOutside' value64='128'/>
<enum name='UIControlEventValueChanged' value64='4096'/>
<enum name='UIControlStateApplication' value64='16711680'/>
<enum name='UIControlStateDisabled' value64='2'/>
<enum name='UIControlStateFocused' value64='8'/>
<enum name='UIControlStateHighlighted' value64='1'/>
<enum name='UIControlStateNormal' value64='0'/>
<enum name='UIControlStateReserved' value64='4278190080'/>
<enum name='UIControlStateSelected' value64='4'/>
<enum name='UIDynamicItemCollisionBoundsTypeEllipse' value64='1'/>
<enum name='UIDynamicItemCollisionBoundsTypePath' value64='2'/>
<enum name='UIDynamicItemCollisionBoundsTypeRectangle' value64='0'/>
<enum name='UIEventSubtypeMotionShake' value64='1'/>
<enum name='UIEventSubtypeNone' value64='0'/>
<enum name='UIEventSubtypeRemoteControlBeginSeekingBackward' value64='106'/>
<enum name='UIEventSubtypeRemoteControlBeginSeekingForward' value64='108'/>
<enum name='UIEventSubtypeRemoteControlEndSeekingBackward' value64='107'/>
<enum name='UIEventSubtypeRemoteControlEndSeekingForward' value64='109'/>
<enum name='UIEventSubtypeRemoteControlNextTrack' value64='104'/>
<enum name='UIEventSubtypeRemoteControlPause' value64='101'/>
<enum name='UIEventSubtypeRemoteControlPlay' value64='100'/>
<enum name='UIEventSubtypeRemoteControlPreviousTrack' value64='105'/>
<enum name='UIEventSubtypeRemoteControlStop' value64='102'/>
<enum name='UIEventSubtypeRemoteControlTogglePlayPause' value64='103'/>
<enum name='UIEventTypeMotion' value64='1'/>
<enum name='UIEventTypePresses' value64='3'/>
<enum name='UIEventTypeRemoteControl' value64='2'/>
<enum name='UIEventTypeTouches' value64='0'/>
<enum name='UIFocusHeadingDown' value64='2'/>
<enum name='UIFocusHeadingLeft' value64='4'/>
<enum name='UIFocusHeadingNext' value64='16'/>
<enum name='UIFocusHeadingPrevious' value64='32'/>
<enum name='UIFocusHeadingRight' value64='8'/>
<enum name='UIFocusHeadingUp' value64='1'/>
<enum name='UIFontDescriptorClassClarendonSerifs' value64='1073741824'/>
<enum name='UIFontDescriptorClassFreeformSerifs' value64='1879048192'/>
<enum name='UIFontDescriptorClassMask' value64='4026531840'/>
<enum name='UIFontDescriptorClassModernSerifs' value64='805306368'/>
<enum name='UIFontDescriptorClassOldStyleSerifs' value64='268435456'/>
<enum name='UIFontDescriptorClassOrnamentals' value64='2415919104'/>
<enum name='UIFontDescriptorClassSansSerif' value64='2147483648'/>
<enum name='UIFontDescriptorClassScripts' value64='2684354560'/>
<enum name='UIFontDescriptorClassSlabSerifs' value64='1342177280'/>
<enum name='UIFontDescriptorClassSymbolic' value64='3221225472'/>
<enum name='UIFontDescriptorClassTransitionalSerifs' value64='536870912'/>
<enum name='UIFontDescriptorClassUnknown' value64='0'/>
<enum name='UIFontDescriptorTraitBold' value64='2'/>
<enum name='UIFontDescriptorTraitCondensed' value64='64'/>
<enum name='UIFontDescriptorTraitExpanded' value64='32'/>
<enum name='UIFontDescriptorTraitItalic' value64='1'/>
<enum name='UIFontDescriptorTraitLooseLeading' value64='65536'/>
<enum name='UIFontDescriptorTraitMonoSpace' value64='1024'/>
<enum name='UIFontDescriptorTraitTightLeading' value64='32768'/>
<enum name='UIFontDescriptorTraitUIOptimized' value64='4096'/>
<enum name='UIFontDescriptorTraitVertical' value64='2048'/>
<enum name='UIForceTouchCapabilityAvailable' value64='2'/>
<enum name='UIForceTouchCapabilityUnavailable' value64='1'/>
<enum name='UIForceTouchCapabilityUnknown' value64='0'/>
<enum name='UIGestureRecognizerStateBegan' value64='1'/>
<enum name='UIGestureRecognizerStateCancelled' value64='4'/>
<enum name='UIGestureRecognizerStateChanged' value64='2'/>
<enum name='UIGestureRecognizerStateEnded' value64='3'/>
<enum name='UIGestureRecognizerStateFailed' value64='5'/>
<enum name='UIGestureRecognizerStatePossible' value64='0'/>
<enum name='UIGestureRecognizerStateRecognized' value64='3'/>
<enum name='UIGuidedAccessRestrictionStateAllow' value64='0'/>
<enum name='UIGuidedAccessRestrictionStateDeny' value64='1'/>
<enum name='UIImageOrientationDown' value64='1'/>
<enum name='UIImageOrientationDownMirrored' value64='5'/>
<enum name='UIImageOrientationLeft' value64='2'/>
<enum name='UIImageOrientationLeftMirrored' value64='6'/>
<enum name='UIImageOrientationRight' value64='3'/>
<enum name='UIImageOrientationRightMirrored' value64='7'/>
<enum name='UIImageOrientationUp' value64='0'/>
<enum name='UIImageOrientationUpMirrored' value64='4'/>
<enum name='UIImageRenderingModeAlwaysOriginal' value64='1'/>
<enum name='UIImageRenderingModeAlwaysTemplate' value64='2'/>
<enum name='UIImageRenderingModeAutomatic' value64='0'/>
<enum name='UIImageResizingModeStretch' value64='1'/>
<enum name='UIImageResizingModeTile' value64='0'/>
<enum name='UIInputViewStyleDefault' value64='0'/>
<enum name='UIInputViewStyleKeyboard' value64='1'/>
<enum name='UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis' value64='0'/>
<enum name='UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis' value64='1'/>
<enum name='UIKeyModifierAlphaShift' value64='65536'/>
<enum name='UIKeyModifierAlternate' value64='524288'/>
<enum name='UIKeyModifierCommand' value64='1048576'/>
<enum name='UIKeyModifierControl' value64='262144'/>
<enum name='UIKeyModifierNumericPad' value64='2097152'/>
<enum name='UIKeyModifierShift' value64='131072'/>
<enum name='UIKeyboardAppearanceAlert' value64='1'/>
<enum name='UIKeyboardAppearanceDark' value64='1'/>
<enum name='UIKeyboardAppearanceDefault' value64='0'/>
<enum name='UIKeyboardAppearanceLight' value64='2'/>
<enum name='UIKeyboardTypeASCIICapable' value64='1'/>
<enum name='UIKeyboardTypeAlphabet' value64='1'/>
<enum name='UIKeyboardTypeDecimalPad' value64='8'/>
<enum name='UIKeyboardTypeDefault' value64='0'/>
<enum name='UIKeyboardTypeEmailAddress' value64='7'/>
<enum name='UIKeyboardTypeNamePhonePad' value64='6'/>
<enum name='UIKeyboardTypeNumberPad' value64='4'/>
<enum name='UIKeyboardTypeNumbersAndPunctuation' value64='2'/>
<enum name='UIKeyboardTypePhonePad' value64='5'/>
<enum name='UIKeyboardTypeTwitter' value64='9'/>
<enum name='UIKeyboardTypeURL' value64='3'/>
<enum name='UIKeyboardTypeWebSearch' value64='10'/>
<enum name='UILayoutConstraintAxisHorizontal' value64='0'/>
<enum name='UILayoutConstraintAxisVertical' value64='1'/>
<enum name='UIModalPresentationCurrentContext' value64='3'/>
<enum name='UIModalPresentationCustom' value64='4'/>
<enum name='UIModalPresentationFormSheet' value64='2'/>
<enum name='UIModalPresentationFullScreen' value64='0'/>
<enum name='UIModalPresentationNone' value64='-1'/>
<enum name='UIModalPresentationOverCurrentContext' value64='6'/>
<enum name='UIModalPresentationOverFullScreen' value64='5'/>
<enum name='UIModalPresentationPageSheet' value64='1'/>
<enum name='UIModalPresentationPopover' value64='7'/>
<enum name='UIModalTransitionStyleCoverVertical' value64='0'/>
<enum name='UIModalTransitionStyleCrossDissolve' value64='2'/>
<enum name='UIModalTransitionStyleFlipHorizontal' value64='1'/>
<enum name='UIModalTransitionStylePartialCurl' value64='3'/>
<enum name='UINavigationControllerOperationNone' value64='0'/>
<enum name='UINavigationControllerOperationPop' value64='2'/>
<enum name='UINavigationControllerOperationPush' value64='1'/>
<enum name='UIPageViewControllerNavigationDirectionForward' value64='0'/>
<enum name='UIPageViewControllerNavigationDirectionReverse' value64='1'/>
<enum name='UIPageViewControllerNavigationOrientationHorizontal' value64='0'/>
<enum name='UIPageViewControllerNavigationOrientationVertical' value64='1'/>
<enum name='UIPageViewControllerSpineLocationMax' value64='3'/>
<enum name='UIPageViewControllerSpineLocationMid' value64='2'/>
<enum name='UIPageViewControllerSpineLocationMin' value64='1'/>
<enum name='UIPageViewControllerSpineLocationNone' value64='0'/>
<enum name='UIPageViewControllerTransitionStylePageCurl' value64='0'/>
<enum name='UIPageViewControllerTransitionStyleScroll' value64='1'/>
<enum name='UIPopoverArrowDirectionAny' value64='15'/>
<enum name='UIPopoverArrowDirectionDown' value64='2'/>
<enum name='UIPopoverArrowDirectionLeft' value64='4'/>
<enum name='UIPopoverArrowDirectionRight' value64='8'/>
<enum name='UIPopoverArrowDirectionUnknown' value64='18446744073709551615'/>
<enum name='UIPopoverArrowDirectionUp' value64='1'/>
<enum name='UIPressPhaseBegan' value64='0'/>
<enum name='UIPressPhaseCancelled' value64='4'/>
<enum name='UIPressPhaseChanged' value64='1'/>
<enum name='UIPressPhaseEnded' value64='3'/>
<enum name='UIPressPhaseStationary' value64='2'/>
<enum name='UIPressTypeDownArrow' value64='1'/>
<enum name='UIPressTypeLeftArrow' value64='2'/>
<enum name='UIPressTypeMenu' value64='5'/>
<enum name='UIPressTypePlayPause' value64='6'/>
<enum name='UIPressTypeRightArrow' value64='3'/>
<enum name='UIPressTypeSelect' value64='4'/>
<enum name='UIPressTypeUpArrow' value64='0'/>
<enum name='UIPreviewActionStyleDefault' value64='0'/>
<enum name='UIPreviewActionStyleDestructive' value64='2'/>
<enum name='UIPreviewActionStyleSelected' value64='1'/>
<enum name='UIProgressViewStyleBar' value64='1'/>
<enum name='UIProgressViewStyleDefault' value64='0'/>
<enum name='UIPushBehaviorModeContinuous' value64='0'/>
<enum name='UIPushBehaviorModeInstantaneous' value64='1'/>
<enum name='UIRectCornerAllCorners' value64='18446744073709551615'/>
<enum name='UIRectCornerBottomLeft' value64='4'/>
<enum name='UIRectCornerBottomRight' value64='8'/>
<enum name='UIRectCornerTopLeft' value64='1'/>
<enum name='UIRectCornerTopRight' value64='2'/>
<enum name='UIRectEdgeAll' value64='15'/>
<enum name='UIRectEdgeBottom' value64='4'/>
<enum name='UIRectEdgeLeft' value64='2'/>
<enum name='UIRectEdgeNone' value64='0'/>
<enum name='UIRectEdgeRight' value64='8'/>
<enum name='UIRectEdgeTop' value64='1'/>
<enum name='UIReturnKeyContinue' value64='11'/>
<enum name='UIReturnKeyDefault' value64='0'/>
<enum name='UIReturnKeyDone' value64='9'/>
<enum name='UIReturnKeyEmergencyCall' value64='10'/>
<enum name='UIReturnKeyGo' value64='1'/>
<enum name='UIReturnKeyGoogle' value64='2'/>
<enum name='UIReturnKeyJoin' value64='3'/>
<enum name='UIReturnKeyNext' value64='4'/>
<enum name='UIReturnKeyRoute' value64='5'/>
<enum name='UIReturnKeySearch' value64='6'/>
<enum name='UIReturnKeySend' value64='7'/>
<enum name='UIReturnKeyYahoo' value64='8'/>
<enum name='UIScreenOverscanCompensationInsetApplicationFrame' value64='2'/>
<enum name='UIScreenOverscanCompensationInsetBounds' value64='1'/>
<enum name='UIScreenOverscanCompensationNone' value64='2'/>
<enum name='UIScreenOverscanCompensationScale' value64='0'/>
<enum name='UIScrollViewIndicatorStyleBlack' value64='1'/>
<enum name='UIScrollViewIndicatorStyleDefault' value64='0'/>
<enum name='UIScrollViewIndicatorStyleWhite' value64='2'/>
<enum name='UIScrollViewKeyboardDismissModeInteractive' value64='2'/>
<enum name='UIScrollViewKeyboardDismissModeNone' value64='0'/>
<enum name='UIScrollViewKeyboardDismissModeOnDrag' value64='1'/>
<enum name='UISearchBarIconBookmark' value64='2'/>
<enum name='UISearchBarIconClear' value64='1'/>
<enum name='UISearchBarIconResultsList' value64='3'/>
<enum name='UISearchBarIconSearch' value64='0'/>
<enum name='UISearchBarStyleDefault' value64='0'/>
<enum name='UISearchBarStyleMinimal' value64='2'/>
<enum name='UISearchBarStyleProminent' value64='1'/>
<enum name='UISegmentedControlNoSegment' value64='-1'/>
<enum name='UISegmentedControlSegmentAlone' value64='4'/>
<enum name='UISegmentedControlSegmentAny' value64='0'/>
<enum name='UISegmentedControlSegmentCenter' value64='2'/>
<enum name='UISegmentedControlSegmentLeft' value64='1'/>
<enum name='UISegmentedControlSegmentRight' value64='3'/>
<enum name='UISemanticContentAttributeForceLeftToRight' value64='3'/>
<enum name='UISemanticContentAttributeForceRightToLeft' value64='4'/>
<enum name='UISemanticContentAttributePlayback' value64='1'/>
<enum name='UISemanticContentAttributeSpatial' value64='2'/>
<enum name='UISemanticContentAttributeUnspecified' value64='0'/>
<enum name='UISplitViewControllerDisplayModeAllVisible' value64='2'/>
<enum name='UISplitViewControllerDisplayModeAutomatic' value64='0'/>
<enum name='UISplitViewControllerDisplayModePrimaryHidden' value64='1'/>
<enum name='UISplitViewControllerDisplayModePrimaryOverlay' value64='3'/>
<enum name='UIStackViewAlignmentBottom' value64='4'/>
<enum name='UIStackViewAlignmentCenter' value64='3'/>
<enum name='UIStackViewAlignmentFill' value64='0'/>
<enum name='UIStackViewAlignmentFirstBaseline' value64='2'/>
<enum name='UIStackViewAlignmentLastBaseline' value64='5'/>
<enum name='UIStackViewAlignmentLeading' value64='1'/>
<enum name='UIStackViewAlignmentTop' value64='1'/>
<enum name='UIStackViewAlignmentTrailing' value64='4'/>
<enum name='UIStackViewDistributionEqualCentering' value64='4'/>
<enum name='UIStackViewDistributionEqualSpacing' value64='3'/>
<enum name='UIStackViewDistributionFill' value64='0'/>
<enum name='UIStackViewDistributionFillEqually' value64='1'/>
<enum name='UIStackViewDistributionFillProportionally' value64='2'/>
<enum name='UISwipeGestureRecognizerDirectionDown' value64='8'/>
<enum name='UISwipeGestureRecognizerDirectionLeft' value64='2'/>
<enum name='UISwipeGestureRecognizerDirectionRight' value64='1'/>
<enum name='UISwipeGestureRecognizerDirectionUp' value64='4'/>
<enum name='UISystemAnimationDelete' value64='0'/>
<enum name='UITabBarItemPositioningAutomatic' value64='0'/>
<enum name='UITabBarItemPositioningCentered' value64='2'/>
<enum name='UITabBarItemPositioningFill' value64='1'/>
<enum name='UITabBarSystemItemBookmarks' value64='7'/>
<enum name='UITabBarSystemItemContacts' value64='5'/>
<enum name='UITabBarSystemItemDownloads' value64='9'/>
<enum name='UITabBarSystemItemFavorites' value64='1'/>
<enum name='UITabBarSystemItemFeatured' value64='2'/>
<enum name='UITabBarSystemItemHistory' value64='6'/>
<enum name='UITabBarSystemItemMore' value64='0'/>
<enum name='UITabBarSystemItemMostRecent' value64='10'/>
<enum name='UITabBarSystemItemMostViewed' value64='11'/>
<enum name='UITabBarSystemItemRecents' value64='4'/>
<enum name='UITabBarSystemItemSearch' value64='8'/>
<enum name='UITabBarSystemItemTopRated' value64='3'/>
<enum name='UITableViewCellAccessoryCheckmark' value64='3'/>
<enum name='UITableViewCellAccessoryDetailButton' value64='4'/>
<enum name='UITableViewCellAccessoryDetailDisclosureButton' value64='2'/>
<enum name='UITableViewCellAccessoryDisclosureIndicator' value64='1'/>
<enum name='UITableViewCellAccessoryNone' value64='0'/>
<enum name='UITableViewCellEditingStyleDelete' value64='1'/>
<enum name='UITableViewCellEditingStyleInsert' value64='2'/>
<enum name='UITableViewCellEditingStyleNone' value64='0'/>
<enum name='UITableViewCellFocusStyleCustom' value64='1'/>
<enum name='UITableViewCellFocusStyleDefault' value64='0'/>
<enum name='UITableViewCellSelectionStyleBlue' value64='1'/>
<enum name='UITableViewCellSelectionStyleDefault' value64='3'/>
<enum name='UITableViewCellSelectionStyleGray' value64='2'/>
<enum name='UITableViewCellSelectionStyleNone' value64='0'/>
<enum name='UITableViewCellStateDefaultMask' value64='0'/>
<enum name='UITableViewCellStateEditingMask' value64='1'/>
<enum name='UITableViewCellStateShowingDeleteConfirmationMask' value64='2'/>
<enum name='UITableViewCellStateShowingEditControlMask' value64='1'/>
<enum name='UITableViewCellStyleDefault' value64='0'/>
<enum name='UITableViewCellStyleSubtitle' value64='3'/>
<enum name='UITableViewCellStyleValue1' value64='1'/>
<enum name='UITableViewCellStyleValue2' value64='2'/>
<enum name='UITableViewRowAnimationAutomatic' value64='100'/>
<enum name='UITableViewRowAnimationBottom' value64='4'/>
<enum name='UITableViewRowAnimationFade' value64='0'/>
<enum name='UITableViewRowAnimationLeft' value64='2'/>
<enum name='UITableViewRowAnimationMiddle' value64='6'/>
<enum name='UITableViewRowAnimationNone' value64='5'/>
<enum name='UITableViewRowAnimationRight' value64='1'/>
<enum name='UITableViewRowAnimationTop' value64='3'/>
<enum name='UITableViewScrollPositionBottom' value64='3'/>
<enum name='UITableViewScrollPositionMiddle' value64='2'/>
<enum name='UITableViewScrollPositionNone' value64='0'/>
<enum name='UITableViewScrollPositionTop' value64='1'/>
<enum name='UITableViewStyleGrouped' value64='1'/>
<enum name='UITableViewStylePlain' value64='0'/>
<enum name='UITextAutocapitalizationTypeAllCharacters' value64='3'/>
<enum name='UITextAutocapitalizationTypeNone' value64='0'/>
<enum name='UITextAutocapitalizationTypeSentences' value64='2'/>
<enum name='UITextAutocapitalizationTypeWords' value64='1'/>
<enum name='UITextAutocorrectionTypeDefault' value64='0'/>
<enum name='UITextAutocorrectionTypeNo' value64='1'/>
<enum name='UITextAutocorrectionTypeYes' value64='2'/>
<enum name='UITextBorderStyleBezel' value64='2'/>
<enum name='UITextBorderStyleLine' value64='1'/>
<enum name='UITextBorderStyleNone' value64='0'/>
<enum name='UITextBorderStyleRoundedRect' value64='3'/>
<enum name='UITextFieldViewModeAlways' value64='3'/>
<enum name='UITextFieldViewModeNever' value64='0'/>
<enum name='UITextFieldViewModeUnlessEditing' value64='2'/>
<enum name='UITextFieldViewModeWhileEditing' value64='1'/>
<enum name='UITextGranularityCharacter' value64='0'/>
<enum name='UITextGranularityDocument' value64='5'/>
<enum name='UITextGranularityLine' value64='4'/>
<enum name='UITextGranularityParagraph' value64='3'/>
<enum name='UITextGranularitySentence' value64='2'/>
<enum name='UITextGranularityWord' value64='1'/>
<enum name='UITextLayoutDirectionDown' value64='5'/>
<enum name='UITextLayoutDirectionLeft' value64='3'/>
<enum name='UITextLayoutDirectionRight' value64='2'/>
<enum name='UITextLayoutDirectionUp' value64='4'/>
<enum name='UITextSpellCheckingTypeDefault' value64='0'/>
<enum name='UITextSpellCheckingTypeNo' value64='1'/>
<enum name='UITextSpellCheckingTypeYes' value64='2'/>
<enum name='UITextStorageDirectionBackward' value64='1'/>
<enum name='UITextStorageDirectionForward' value64='0'/>
<enum name='UITextWritingDirectionLeftToRight' value64='0'/>
<enum name='UITextWritingDirectionNatural' value64='-1'/>
<enum name='UITextWritingDirectionRightToLeft' value64='1'/>
<enum name='UIToolbarPositionAny' value64='0'/>
<enum name='UIToolbarPositionBottom' value64='1'/>
<enum name='UIToolbarPositionTop' value64='2'/>
<enum name='UITouchPhaseBegan' value64='0'/>
<enum name='UITouchPhaseCancelled' value64='4'/>
<enum name='UITouchPhaseEnded' value64='3'/>
<enum name='UITouchPhaseMoved' value64='1'/>
<enum name='UITouchPhaseStationary' value64='2'/>
<enum name='UITouchPropertyAltitude' value64='4'/>
<enum name='UITouchPropertyAzimuth' value64='2'/>
<enum name='UITouchPropertyForce' value64='1'/>
<enum name='UITouchPropertyLocation' value64='8'/>
<enum name='UITouchTypeDirect' value64='0'/>
<enum name='UITouchTypeIndirect' value64='1'/>
<enum name='UITouchTypeStylus' value64='2'/>
<enum name='UIUserInterfaceIdiomCarPlay' value64='3'/>
<enum name='UIUserInterfaceIdiomPad' value64='1'/>
<enum name='UIUserInterfaceIdiomPhone' value64='0'/>
<enum name='UIUserInterfaceIdiomTV' value64='2'/>
<enum name='UIUserInterfaceIdiomUnspecified' value64='-1'/>
<enum name='UIUserInterfaceLayoutDirectionLeftToRight' value64='0'/>
<enum name='UIUserInterfaceLayoutDirectionRightToLeft' value64='1'/>
<enum name='UIUserInterfaceSizeClassCompact' value64='1'/>
<enum name='UIUserInterfaceSizeClassRegular' value64='2'/>
<enum name='UIUserInterfaceSizeClassUnspecified' value64='0'/>
<enum name='UIViewAnimationCurveEaseIn' value64='1'/>
<enum name='UIViewAnimationCurveEaseInOut' value64='0'/>
<enum name='UIViewAnimationCurveEaseOut' value64='2'/>
<enum name='UIViewAnimationCurveLinear' value64='3'/>
<enum name='UIViewAnimationOptionAllowAnimatedContent' value64='128'/>
<enum name='UIViewAnimationOptionAllowUserInteraction' value64='2'/>
<enum name='UIViewAnimationOptionAutoreverse' value64='16'/>
<enum name='UIViewAnimationOptionBeginFromCurrentState' value64='4'/>
<enum name='UIViewAnimationOptionCurveEaseIn' value64='65536'/>
<enum name='UIViewAnimationOptionCurveEaseInOut' value64='0'/>
<enum name='UIViewAnimationOptionCurveEaseOut' value64='131072'/>
<enum name='UIViewAnimationOptionCurveLinear' value64='196608'/>
<enum name='UIViewAnimationOptionLayoutSubviews' value64='1'/>
<enum name='UIViewAnimationOptionOverrideInheritedCurve' value64='64'/>
<enum name='UIViewAnimationOptionOverrideInheritedDuration' value64='32'/>
<enum name='UIViewAnimationOptionOverrideInheritedOptions' value64='512'/>
<enum name='UIViewAnimationOptionRepeat' value64='8'/>
<enum name='UIViewAnimationOptionShowHideTransitionViews' value64='256'/>
<enum name='UIViewAnimationOptionTransitionCrossDissolve' value64='5242880'/>
<enum name='UIViewAnimationOptionTransitionCurlDown' value64='4194304'/>
<enum name='UIViewAnimationOptionTransitionCurlUp' value64='3145728'/>
<enum name='UIViewAnimationOptionTransitionFlipFromBottom' value64='7340032'/>
<enum name='UIViewAnimationOptionTransitionFlipFromLeft' value64='1048576'/>
<enum name='UIViewAnimationOptionTransitionFlipFromRight' value64='2097152'/>
<enum name='UIViewAnimationOptionTransitionFlipFromTop' value64='6291456'/>
<enum name='UIViewAnimationOptionTransitionNone' value64='0'/>
<enum name='UIViewAnimationTransitionCurlDown' value64='4'/>
<enum name='UIViewAnimationTransitionCurlUp' value64='3'/>
<enum name='UIViewAnimationTransitionFlipFromLeft' value64='1'/>
<enum name='UIViewAnimationTransitionFlipFromRight' value64='2'/>
<enum name='UIViewAnimationTransitionNone' value64='0'/>
<enum name='UIViewAutoresizingFlexibleBottomMargin' value64='32'/>
<enum name='UIViewAutoresizingFlexibleHeight' value64='16'/>
<enum name='UIViewAutoresizingFlexibleLeftMargin' value64='1'/>
<enum name='UIViewAutoresizingFlexibleRightMargin' value64='4'/>
<enum name='UIViewAutoresizingFlexibleTopMargin' value64='8'/>
<enum name='UIViewAutoresizingFlexibleWidth' value64='2'/>
<enum name='UIViewAutoresizingNone' value64='0'/>
<enum name='UIViewContentModeBottom' value64='6'/>
<enum name='UIViewContentModeBottomLeft' value64='11'/>
<enum name='UIViewContentModeBottomRight' value64='12'/>
<enum name='UIViewContentModeCenter' value64='4'/>
<enum name='UIViewContentModeLeft' value64='7'/>
<enum name='UIViewContentModeRedraw' value64='3'/>
<enum name='UIViewContentModeRight' value64='8'/>
<enum name='UIViewContentModeScaleAspectFill' value64='2'/>
<enum name='UIViewContentModeScaleAspectFit' value64='1'/>
<enum name='UIViewContentModeScaleToFill' value64='0'/>
<enum name='UIViewContentModeTop' value64='5'/>
<enum name='UIViewContentModeTopLeft' value64='9'/>
<enum name='UIViewContentModeTopRight' value64='10'/>
<enum name='UIViewKeyframeAnimationOptionAllowUserInteraction' value64='2'/>
<enum name='UIViewKeyframeAnimationOptionAutoreverse' value64='16'/>
<enum name='UIViewKeyframeAnimationOptionBeginFromCurrentState' value64='4'/>
<enum name='UIViewKeyframeAnimationOptionCalculationModeCubic' value64='3072'/>
<enum name='UIViewKeyframeAnimationOptionCalculationModeCubicPaced' value64='4096'/>
<enum name='UIViewKeyframeAnimationOptionCalculationModeDiscrete' value64='1024'/>
<enum name='UIViewKeyframeAnimationOptionCalculationModeLinear' value64='0'/>
<enum name='UIViewKeyframeAnimationOptionCalculationModePaced' value64='2048'/>
<enum name='UIViewKeyframeAnimationOptionLayoutSubviews' value64='1'/>
<enum name='UIViewKeyframeAnimationOptionOverrideInheritedDuration' value64='32'/>
<enum name='UIViewKeyframeAnimationOptionOverrideInheritedOptions' value64='512'/>
<enum name='UIViewKeyframeAnimationOptionRepeat' value64='8'/>
<enum name='UIViewTintAdjustmentModeAutomatic' value64='0'/>
<enum name='UIViewTintAdjustmentModeDimmed' value64='2'/>
<enum name='UIViewTintAdjustmentModeNormal' value64='1'/>
<function name='CGAffineTransformFromString'>
<arg declared_type64='NSString * _Nonnull' name='string' type64='@'/>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGPointFromString'>
<arg declared_type64='NSString * _Nonnull' name='string' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</function>
<function name='CGRectFromString'>
<arg declared_type64='NSString * _Nonnull' name='string' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGSizeFromString'>
<arg declared_type64='NSString * _Nonnull' name='string' type64='@'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</function>
<function name='CGVectorFromString'>
<arg declared_type64='NSString * _Nonnull' name='string' type64='@'/>
<retval declared_type64='CGVector' type64='{CGVector=dd}'/>
</function>
<function name='NSStringFromCGAffineTransform'>
<arg declared_type64='CGAffineTransform' name='transform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</function>
<function name='NSStringFromCGPoint'>
<arg declared_type64='CGPoint' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</function>
<function name='NSStringFromCGRect'>
<arg declared_type64='CGRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</function>
<function name='NSStringFromCGSize'>
<arg declared_type64='CGSize' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</function>
<function name='NSStringFromCGVector'>
<arg declared_type64='CGVector' name='vector' type64='{CGVector=dd}'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</function>
<function name='NSStringFromUIEdgeInsets'>
<arg declared_type64='UIEdgeInsets' name='insets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</function>
<function name='NSStringFromUIOffset'>
<arg declared_type64='UIOffset' name='offset' type64='{UIOffset=dd}'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</function>
<function name='NSTextAlignmentFromCTTextAlignment'>
<arg declared_type64='CTTextAlignment' name='ctTextAlignment' type64='C'/>
<retval declared_type64='NSTextAlignment' type64='q'/>
</function>
<function name='NSTextAlignmentToCTTextAlignment'>
<arg declared_type64='NSTextAlignment' name='nsTextAlignment' type64='q'/>
<retval declared_type64='CTTextAlignment' type64='C'/>
</function>
<function name='UIAccessibilityConvertFrameToScreenCoordinates'>
<arg declared_type64='CGRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIView * _Nonnull' name='view' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='UIAccessibilityConvertPathToScreenCoordinates'>
<arg declared_type64='UIBezierPath * _Nonnull' name='path' type64='@'/>
<arg declared_type64='UIView * _Nonnull' name='view' type64='@'/>
<retval declared_type64='UIBezierPath * _Nonnull' type64='@'/>
</function>
<function name='UIAccessibilityDarkerSystemColorsEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityFocusedElement'>
<arg declared_type64='NSString * _Nullable' name='assistiveTechnologyIdentifier' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</function>
<function name='UIAccessibilityIsBoldTextEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsClosedCaptioningEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsGrayscaleEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsGuidedAccessEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsInvertColorsEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsMonoAudioEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsReduceMotionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsReduceTransparencyEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsShakeToUndoEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsSpeakScreenEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsSpeakSelectionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsSwitchControlRunning'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityIsVoiceOverRunning'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIAccessibilityPostNotification'>
<arg declared_type64='UIAccessibilityNotifications' name='notification' type64='I'/>
<arg declared_type64='id _Nullable' name='argument' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIAccessibilityRegisterGestureConflictWithZoom'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIAccessibilityRequestGuidedAccessSession'>
<arg declared_type64='BOOL' name='enable' type64='B'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIAccessibilityZoomFocusChanged'>
<arg declared_type64='UIAccessibilityZoomType' name='type' type64='q'/>
<arg declared_type64='CGRect' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIView * _Nonnull' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIApplicationMain'>
<arg declared_type64='int' name='argc' type64='i'/>
<arg declared_type64='char * _Nonnull*' name='argv' type64='^*'/>
<arg declared_type64='NSString * _Nullable' name='principalClassName' type64='@'/>
<arg declared_type64='NSString * _Nullable' name='delegateClassName' type64='@'/>
<retval declared_type64='int' type64='i'/>
</function>
<function inline='true' name='UIEdgeInsetsEqualToEdgeInsets'>
<arg declared_type64='UIEdgeInsets' name='insets1' type64='{UIEdgeInsets=dddd}'/>
<arg declared_type64='UIEdgeInsets' name='insets2' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIEdgeInsetsFromString'>
<arg declared_type64='NSString * _Nonnull' name='string' type64='@'/>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</function>
<function inline='true' name='UIEdgeInsetsInsetRect'>
<arg declared_type64='CGRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIEdgeInsets' name='insets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function inline='true' name='UIEdgeInsetsMake'>
<arg declared_type64='CGFloat' name='top' type64='d'/>
<arg declared_type64='CGFloat' name='left' type64='d'/>
<arg declared_type64='CGFloat' name='bottom' type64='d'/>
<arg declared_type64='CGFloat' name='right' type64='d'/>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</function>
<function name='UIFloatRangeIsEqualToRange'>
<arg declared_type64='UIFloatRange' name='range' type64='{_UIFloatRange=dd}'/>
<arg declared_type64='UIFloatRange' name='otherRange' type64='{_UIFloatRange=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIFloatRangeIsInfinite'>
<arg declared_type64='UIFloatRange' name='range' type64='{_UIFloatRange=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function inline='true' name='UIFloatRangeMake'>
<arg declared_type64='CGFloat' name='minimum' type64='d'/>
<arg declared_type64='CGFloat' name='maximum' type64='d'/>
<retval declared_type64='UIFloatRange' type64='{_UIFloatRange=dd}'/>
</function>
<function name='UIGraphicsAddPDFContextDestinationAtPoint'>
<arg declared_type64='NSString * _Nonnull' name='name' type64='@'/>
<arg declared_type64='CGPoint' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGraphicsBeginImageContext'>
<arg declared_type64='CGSize' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGraphicsBeginImageContextWithOptions'>
<arg declared_type64='CGSize' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='BOOL' name='opaque' type64='B'/>
<arg declared_type64='CGFloat' name='scale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGraphicsBeginPDFContextToData'>
<arg declared_type64='NSMutableData * _Nonnull' name='data' type64='@'/>
<arg declared_type64='CGRect' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSDictionary * _Nullable' name='documentInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGraphicsBeginPDFContextToFile'>
<arg declared_type64='NSString * _Nonnull' name='path' type64='@'/>
<arg declared_type64='CGRect' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSDictionary * _Nullable' name='documentInfo' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIGraphicsBeginPDFPage'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGraphicsBeginPDFPageWithInfo'>
<arg declared_type64='CGRect' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSDictionary * _Nullable' name='pageInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGraphicsEndImageContext'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGraphicsEndPDFContext'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGraphicsGetCurrentContext'>
<retval declared_type64='CGContextRef _Nullable' type64='^{CGContext=}'/>
</function>
<function name='UIGraphicsGetImageFromCurrentImageContext'>
<retval declared_type64='UIImage * _Null_unspecified' type64='@'/>
</function>
<function name='UIGraphicsGetPDFContextBounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='UIGraphicsPopContext'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGraphicsPushContext'>
<arg declared_type64='CGContextRef _Nonnull' name='context' type64='^{CGContext=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGraphicsSetPDFContextDestinationForRect'>
<arg declared_type64='NSString * _Nonnull' name='name' type64='@'/>
<arg declared_type64='CGRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGraphicsSetPDFContextURLForRect'>
<arg declared_type64='NSURL * _Nonnull' name='url' type64='@'/>
<arg declared_type64='CGRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIGuidedAccessRestrictionStateForIdentifier'>
<arg declared_type64='NSString * _Nonnull' name='restrictionIdentifier' type64='@'/>
<retval declared_type64='UIGuidedAccessRestrictionState' type64='q'/>
</function>
<function name='UIImageJPEGRepresentation'>
<arg declared_type64='UIImage * _Nonnull' name='image' type64='@'/>
<arg declared_type64='CGFloat' name='compressionQuality' type64='d'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</function>
<function name='UIImagePNGRepresentation'>
<arg declared_type64='UIImage * _Nonnull' name='image' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</function>
<function inline='true' name='UIOffsetEqualToOffset'>
<arg declared_type64='UIOffset' name='offset1' type64='{UIOffset=dd}'/>
<arg declared_type64='UIOffset' name='offset2' type64='{UIOffset=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='UIOffsetFromString'>
<arg declared_type64='NSString * _Nonnull' name='string' type64='@'/>
<retval declared_type64='UIOffset' type64='{UIOffset=dd}'/>
</function>
<function inline='true' name='UIOffsetMake'>
<arg declared_type64='CGFloat' name='horizontal' type64='d'/>
<arg declared_type64='CGFloat' name='vertical' type64='d'/>
<retval declared_type64='UIOffset' type64='{UIOffset=dd}'/>
</function>
<function name='UIRectClip'>
<arg declared_type64='CGRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIRectFill'>
<arg declared_type64='CGRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIRectFillUsingBlendMode'>
<arg declared_type64='CGRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGBlendMode' name='blendMode' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIRectFrame'>
<arg declared_type64='CGRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='UIRectFrameUsingBlendMode'>
<arg declared_type64='CGRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGBlendMode' name='blendMode' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function inline='true' name='UI_USER_INTERFACE_IDIOM'>
<retval declared_type64='UIUserInterfaceIdiom' type64='q'/>
</function>
<class name='CIColor'>
<method selector='initWithColor:'>
<arg declared_type64='UIColor * _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='CIImage'>
<method selector='initWithImage:'>
<arg declared_type64='UIImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithImage:options:'>
<arg declared_type64='UIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
</class>
<class name='NSAttributedString'>
<method class_method='true' selector='attributedStringWithAttachment:'>
<arg declared_type64='NSTextAttachment * _Nonnull' index='0' name='attachment' type64='@'/>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='boundingRectWithSize:options:context:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<arg declared_type64='NSStringDrawingContext * _Nullable' index='2' name='context' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='containsAttachmentsInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dataFromRange:documentAttributes:error:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='dict' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='drawAtPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithRect:options:context:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<arg declared_type64='NSStringDrawingContext * _Nullable' index='2' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fileWrapperFromRange:documentAttributes:error:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='dict' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='NSFileWrapper * _Nullable' type64='@'/>
</method>
<method selector='initWithData:options:documentAttributes:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithURL:options:documentAttributes:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='size'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSBundle'>
<method selector='loadNibNamed:owner:options:'>
<arg declared_type64='NSString*' index='0' name='name' type64='@'/>
<arg declared_type64='id' index='1' name='owner' type64='@'/>
<arg declared_type64='NSDictionary*' index='2' name='options' type64='@'/>
<retval declared_type64='NSArray*' type64='@'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeCGAffineTransformForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='decodeCGPointForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='decodeCGRectForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='decodeCGSizeForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='decodeCGVectorForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CGVector' type64='{CGVector=dd}'/>
</method>
<method selector='decodeUIEdgeInsetsForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='decodeUIOffsetForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='UIOffset' type64='{UIOffset=dd}'/>
</method>
<method selector='encodeCGAffineTransform:forKey:'>
<arg declared_type64='CGAffineTransform' index='0' name='transform' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeCGPoint:forKey:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeCGRect:forKey:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeCGSize:forKey:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeCGVector:forKey:'>
<arg declared_type64='CGVector' index='0' name='vector' type64='{CGVector=dd}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeUIEdgeInsets:forKey:'>
<arg declared_type64='UIEdgeInsets' index='0' name='insets' type64='{UIEdgeInsets=dddd}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeUIOffset:forKey:'>
<arg declared_type64='UIOffset' index='0' name='offset' type64='{UIOffset=dd}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSDataAsset'>
<method selector='data'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='initWithName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithName:bundle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSBundle * _Nonnull' index='1' name='bundle' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='typeIdentifier'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSIndexPath'>
<method class_method='true' selector='indexPathForItem:inSection:'>
<arg declared_type64='NSInteger' index='0' name='item' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='indexPathForRow:inSection:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='item'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='row'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='section'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='NSLayoutAnchor'>
<method selector='constraintEqualToAnchor:'>
<arg declared_type64='NSLayoutAnchor*' index='0' name='anchor' type64='@'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintEqualToAnchor:constant:'>
<arg declared_type64='NSLayoutAnchor*' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:'>
<arg declared_type64='NSLayoutAnchor*' index='0' name='anchor' type64='@'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:constant:'>
<arg declared_type64='NSLayoutAnchor*' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:'>
<arg declared_type64='NSLayoutAnchor*' index='0' name='anchor' type64='@'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:constant:'>
<arg declared_type64='NSLayoutAnchor*' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
</class>
<class name='NSLayoutConstraint'>
<method class_method='true' selector='activateConstraints:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='constraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='constant'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:'>
<arg declared_type64='id _Nonnull' index='0' name='view1' type64='@'/>
<arg declared_type64='NSLayoutAttribute' index='1' name='attr1' type64='q'/>
<arg declared_type64='NSLayoutRelation' index='2' name='relation' type64='q'/>
<arg declared_type64='id _Nullable' index='3' name='view2' type64='@'/>
<arg declared_type64='NSLayoutAttribute' index='4' name='attr2' type64='q'/>
<arg declared_type64='CGFloat' index='5' name='multiplier' type64='d'/>
<arg declared_type64='CGFloat' index='6' name='c' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='constraintsWithVisualFormat:options:metrics:views:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='NSLayoutFormatOptions' index='1' name='opts' type64='Q'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='metrics' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='3' name='views' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='deactivateConstraints:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='constraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='firstAttribute'>
<retval declared_type64='NSLayoutAttribute' type64='q'/>
</method>
<method selector='firstItem'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='isActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='multiplier'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='priority'>
<retval declared_type64='UILayoutPriority' type64='f'/>
</method>
<method selector='relation'>
<retval declared_type64='NSLayoutRelation' type64='q'/>
</method>
<method selector='secondAttribute'>
<retval declared_type64='NSLayoutAttribute' type64='q'/>
</method>
<method selector='secondItem'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setActive:'>
<arg declared_type64='BOOL' index='0' name='active' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setConstant:'>
<arg declared_type64='CGFloat' index='0' name='constant' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type64='NSString * _Nullable' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPriority:'>
<arg declared_type64='UILayoutPriority' index='0' name='priority' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldBeArchived:'>
<arg declared_type64='BOOL' index='0' name='shouldBeArchived' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldBeArchived'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSLayoutDimension'>
<method selector='constraintEqualToAnchor:multiplier:'>
<arg declared_type64='NSLayoutDimension*' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintEqualToAnchor:multiplier:constant:'>
<arg declared_type64='NSLayoutDimension*' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintEqualToConstant:'>
<arg declared_type64='CGFloat' index='0' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:multiplier:'>
<arg declared_type64='NSLayoutDimension*' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:multiplier:constant:'>
<arg declared_type64='NSLayoutDimension*' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToConstant:'>
<arg declared_type64='CGFloat' index='0' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:multiplier:'>
<arg declared_type64='NSLayoutDimension*' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:multiplier:constant:'>
<arg declared_type64='NSLayoutDimension*' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToConstant:'>
<arg declared_type64='CGFloat' index='0' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint*' type64='@'/>
</method>
</class>
<class name='NSLayoutManager'>
<method selector='CGGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='CGGlyph' type64='S'/>
</method>
<method selector='CGGlyphAtIndex:isValidIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='BOOL * _Nullable' index='1' name='isValidIndex' type64='^B'/>
<retval declared_type64='CGGlyph' type64='S'/>
</method>
<method selector='addTextContainer:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowsNonContiguousLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='attachmentSizeForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='boundingRectForGlyphRange:inTextContainer:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='characterIndexForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<arg declared_type64='CGFloat * _Nullable' index='2' name='partialFraction' type64='^d'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='characterRangeForGlyphRange:actualGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualGlyphRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='drawBackgroundForGlyphRange:atPoint:'>
<arg declared_type64='NSRange' index='0' name='glyphsToShow' type64='{_NSRange=QQ}'/>
<arg declared_type64='CGPoint' index='1' name='origin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawGlyphsForGlyphRange:atPoint:'>
<arg declared_type64='NSRange' index='0' name='glyphsToShow' type64='{_NSRange=QQ}'/>
<arg declared_type64='CGPoint' index='1' name='origin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSUnderlineStyle' index='1' name='strikethroughVal' type64='q'/>
<arg declared_type64='CGFloat' index='2' name='baselineOffset' type64='d'/>
<arg declared_type64='CGRect' index='3' name='lineRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='4' name='lineGlyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='CGPoint' index='5' name='containerOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSUnderlineStyle' index='1' name='underlineVal' type64='q'/>
<arg declared_type64='CGFloat' index='2' name='baselineOffset' type64='d'/>
<arg declared_type64='CGRect' index='3' name='lineRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='4' name='lineGlyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='CGPoint' index='5' name='containerOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawsOutsideLineFragmentForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='ensureGlyphsForCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ensureGlyphsForGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ensureLayoutForBoundingRect:inTextContainer:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ensureLayoutForCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ensureLayoutForGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ensureLayoutForTextContainer:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='1' name='selectedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='textContainer' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(CGRect, BOOL * _Nonnull)' function_pointer='true' index='3' name='block' type64='@?'>
<arg declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enumerateLineFragmentsForGlyphRange:usingBlock:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='void (^ _Nonnull)(CGRect, CGRect, NSTextContainer * _Nonnull, NSRange, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' type64='@'/>
<arg declared_type64='NSRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='extraLineFragmentRect'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='extraLineFragmentTextContainer'>
<retval declared_type64='NSTextContainer * _Nullable' type64='@'/>
</method>
<method selector='extraLineFragmentUsedRect'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='fillBackgroundRectArray:count:forCharacterRange:color:'>
<arg const='true' declared_type64='CGRect * _Nonnull' index='0' name='rectArray' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSUInteger' index='1' name='rectCount' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='UIColor * _Nonnull' index='3' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='firstUnlaidCharacterIndex'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='firstUnlaidGlyphIndex'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='fractionOfDistanceThroughGlyphForPoint:inTextContainer:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='getFirstUnlaidCharacterIndex:glyphIndex:'>
<arg declared_type64='NSUInteger * _Nullable' index='0' name='charIndex' type64='^Q'/>
<arg declared_type64='NSUInteger * _Nullable' index='1' name='glyphIndex' type64='^Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='CGGlyph * _Nullable' index='1' name='glyphBuffer' type64='^S'/>
<arg declared_type64='NSGlyphProperty * _Nullable' index='2' name='props' type64='^q'/>
<arg declared_type64='NSUInteger * _Nullable' index='3' name='charIndexBuffer' type64='^Q'/>
<arg declared_type64='unsigned char * _Nullable' index='4' name='bidiLevelBuffer' type64='*'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<arg declared_type64='BOOL' index='1' name='aFlag' type64='B'/>
<arg declared_type64='BOOL' index='2' name='dFlag' type64='B'/>
<arg declared_type64='CGFloat * _Nullable' index='3' name='positions' type64='^d'/>
<arg declared_type64='NSUInteger * _Nullable' index='4' name='charIndexes' type64='^Q'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='glyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='CGGlyph' type64='S'/>
</method>
<method selector='glyphAtIndex:isValidIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='BOOL * _Nullable' index='1' name='isValidIndex' type64='^B'/>
<retval declared_type64='CGGlyph' type64='S'/>
</method>
<method selector='glyphIndexForCharacterAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='glyphIndexForPoint:inTextContainer:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<arg declared_type64='CGFloat * _Nullable' index='2' name='partialFraction' type64='^d'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='glyphRangeForBoundingRect:inTextContainer:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualCharRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForTextContainer:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='hasNonContiguousLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='insertTextContainer:atIndex:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateDisplayForCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateDisplayForGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='1' name='delta' type64='q'/>
<arg declared_type64='NSRangePointer _Nullable' index='2' name='actualCharRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateLayoutForCharacterRange:actualCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualCharRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isValidGlyphIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='locationForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='notShownAttributeForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='numberOfGlyphs'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='textStorage' type64='@'/>
<arg declared_type64='NSTextStorageEditActions' index='1' name='editMask' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='newCharRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='3' name='delta' type64='q'/>
<arg declared_type64='NSRange' index='4' name='invalidatedCharRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='propertyForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSGlyphProperty' type64='q'/>
</method>
<method selector='rangeOfNominallySpacedGlyphsContainingIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='removeTextContainerAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsNonContiguousLayout:'>
<arg declared_type64='BOOL' index='0' name='allowsNonContiguousLayout' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttachmentSize:forGlyphRange:'>
<arg declared_type64='CGSize' index='0' name='attachmentSize' type64='{CGSize=dd}'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphAtIndex:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtraLineFragmentRect:usedRect:textContainer:'>
<arg declared_type64='CGRect' index='0' name='fragmentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGRect' index='1' name='usedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGlyphs:properties:characterIndexes:font:forGlyphRange:'>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='0' name='glyphs' type64='^S'/>
<arg const='true' declared_type64='NSGlyphProperty * _Nonnull' index='1' name='props' type64='^q'/>
<arg const='true' declared_type64='NSUInteger * _Nonnull' index='2' name='charIndexes' type64='^Q'/>
<arg declared_type64='UIFont * _Nonnull' index='3' name='aFont' type64='@'/>
<arg declared_type64='NSRange' index='4' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type64='CGFloat' index='0' name='hyphenationFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineFragmentRect:forGlyphRange:usedRect:'>
<arg declared_type64='CGRect' index='0' name='fragmentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='CGRect' index='2' name='usedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocation:forStartOfGlyphRange:'>
<arg declared_type64='CGPoint' index='0' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNotShownAttribute:forGlyphAtIndex:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsControlCharacters:'>
<arg declared_type64='BOOL' index='0' name='showsControlCharacters' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsInvisibleCharacters:'>
<arg declared_type64='BOOL' index='0' name='showsInvisibleCharacters' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextContainer:forGlyphRange:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextStorage:'>
<arg declared_type64='NSTextStorage * _Nullable' index='0' name='textStorage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesFontLeading:'>
<arg declared_type64='BOOL' index='0' name='usesFontLeading' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showCGGlyphs:positions:count:font:matrix:attributes:inContext:'>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='0' name='glyphs' type64='^S'/>
<arg const='true' declared_type64='CGPoint * _Nonnull' index='1' name='positions' type64='^{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='2' name='glyphCount' type64='Q'/>
<arg declared_type64='UIFont * _Nonnull' index='3' name='font' type64='@'/>
<arg declared_type64='CGAffineTransform' index='4' name='textMatrix' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='5' name='attributes' type64='@'/>
<arg declared_type64='CGContextRef _Nonnull' index='6' name='graphicsContext' type64='^{CGContext=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsControlCharacters'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsInvisibleCharacters'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSUnderlineStyle' index='1' name='strikethroughVal' type64='q'/>
<arg declared_type64='CGRect' index='2' name='lineRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='3' name='lineGlyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='CGPoint' index='4' name='containerOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textContainerChangedGeometry:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textContainerForGlyphAtIndex:effectiveRange:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSTextContainer * _Nullable' type64='@'/>
</method>
<method selector='textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='NSTextContainer * _Nullable' type64='@'/>
</method>
<method selector='textContainers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textStorage'>
<retval declared_type64='NSTextStorage * _Nullable' type64='@'/>
</method>
<method selector='truncatedGlyphRangeInLineFragmentForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSUnderlineStyle' index='1' name='underlineVal' type64='q'/>
<arg declared_type64='CGRect' index='2' name='lineRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='3' name='lineGlyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='CGPoint' index='4' name='containerOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usedRectForTextContainer:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='usesFontLeading'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='fixAttributesInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readFromData:options:documentAttributes:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='opts' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readFromURL:options:documentAttributes:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='opts' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSMutableParagraphStyle'>
<method selector='addTabStop:'>
<arg declared_type64='NSTextTab * _Nonnull' index='0' name='anObject' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='alignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type64='NSWritingDirection' type64='q'/>
</method>
<method selector='defaultTabInterval'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='firstLineHeadIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='headIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type64='NSLineBreakMode' type64='q'/>
</method>
<method selector='lineHeightMultiple'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lineSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumLineHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumLineHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='removeTabStop:'>
<arg declared_type64='NSTextTab * _Nonnull' index='0' name='anObject' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type64='NSTextAlignment' index='0' name='alignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsDefaultTighteningForTruncation:'>
<arg declared_type64='BOOL' index='0' name='allowsDefaultTighteningForTruncation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg declared_type64='NSWritingDirection' index='0' name='baseWritingDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultTabInterval:'>
<arg declared_type64='CGFloat' index='0' name='defaultTabInterval' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFirstLineHeadIndent:'>
<arg declared_type64='CGFloat' index='0' name='firstLineHeadIndent' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeadIndent:'>
<arg declared_type64='CGFloat' index='0' name='headIndent' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type64='float' index='0' name='hyphenationFactor' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type64='NSLineBreakMode' index='0' name='lineBreakMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineHeightMultiple:'>
<arg declared_type64='CGFloat' index='0' name='lineHeightMultiple' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineSpacing:'>
<arg declared_type64='CGFloat' index='0' name='lineSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumLineHeight:'>
<arg declared_type64='CGFloat' index='0' name='maximumLineHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumLineHeight:'>
<arg declared_type64='CGFloat' index='0' name='minimumLineHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParagraphSpacing:'>
<arg declared_type64='CGFloat' index='0' name='paragraphSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParagraphSpacingBefore:'>
<arg declared_type64='CGFloat' index='0' name='paragraphSpacingBefore' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParagraphStyle:'>
<arg declared_type64='NSParagraphStyle * _Nonnull' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabStops:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='tabStops' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTailIndent:'>
<arg declared_type64='CGFloat' index='0' name='tailIndent' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabStops'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tailIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSObject'>
<method selector='accessibilityActivate'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityActivationPoint'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityAssistiveTechnologyFocusedIdentifiers'>
<retval declared_type64='NSSet * _Nullable' type64='@'/>
</method>
<method selector='accessibilityContentForLineNumber:'>
<arg declared_type64='NSInteger' index='0' name='lineNumber' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityCustomActions'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityDecrement'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilityElementAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityElementCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityElementDidBecomeFocused'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilityElementDidLoseFocus'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilityElementIsFocused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityElements'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityElementsHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityFrame'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityFrameForLineNumber:'>
<arg declared_type64='NSInteger' index='0' name='lineNumber' type64='q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityHeaderElements'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityHint'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityIdentifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityIncrement'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilityLabel'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityLanguage'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityLineNumberForPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityNavigationStyle'>
<retval declared_type64='UIAccessibilityNavigationStyle' type64='q'/>
</method>
<method selector='accessibilityPageContent'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityPath'>
<retval declared_type64='UIBezierPath * _Nullable' type64='@'/>
</method>
<method selector='accessibilityPerformEscape'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformMagicTap'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityScroll:'>
<arg declared_type64='UIAccessibilityScrollDirection' index='0' name='direction' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityScrollStatusForScrollView:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityTraits'>
<retval declared_type64='UIAccessibilityTraits' type64='Q'/>
</method>
<method selector='accessibilityValue'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityViewIsModal'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='activityViewController:dataTypeIdentifierForActivityType:'>
<arg declared_type64='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='activityType' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='activityViewController:itemForActivityType:'>
<arg declared_type64='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='activityType' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='activityViewController:subjectForActivityType:'>
<arg declared_type64='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='activityType' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='activityViewController:thumbnailImageForActivityType:suggestedSize:'>
<arg declared_type64='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='activityType' type64='@'/>
<arg declared_type64='CGSize' index='2' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='activityViewControllerPlaceholderItem:'>
<arg declared_type64='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type64='@'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='adaptivePresentationStyleForPresentationController:'>
<arg declared_type64='UIPresentationController * _Nonnull' index='0' name='controller' type64='@'/>
<retval declared_type64='UIModalPresentationStyle' type64='q'/>
</method>
<method selector='adaptivePresentationStyleForPresentationController:traitCollection:'>
<arg declared_type64='UIPresentationController * _Nonnull' index='0' name='controller' type64='@'/>
<arg declared_type64='UITraitCollection * _Nonnull' index='1' name='traitCollection' type64='@'/>
<retval declared_type64='UIModalPresentationStyle' type64='q'/>
</method>
<method selector='adjustTextPositionByCharacterOffset:'>
<arg declared_type64='NSInteger' index='0' name='offset' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animateAlongsideTransition:completion:'>
<arg declared_type64='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='0' name='animation' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='1' name='completion' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='animateAlongsideTransitionInView:animation:completion:'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<arg declared_type64='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='1' name='animation' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='2' name='completion' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='animateTransition:'>
<arg declared_type64='id _Nonnull' index='0' name='transitionContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationControllerForDismissedController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='dismissed' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='animationControllerForPresentedController:presentingController:sourceController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='presented' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='presenting' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='source' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='animationEnded:'>
<arg declared_type64='BOOL' index='0' name='transitionCompleted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='appearance'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='appearanceForTraitCollection:'>
<arg declared_type64='UITraitCollection * _Nonnull' index='0' name='trait' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='appearanceForTraitCollection:whenContainedInInstancesOfClasses:'>
<arg declared_type64='UITraitCollection * _Nonnull' index='0' name='trait' type64='@'/>
<arg declared_type64='NSArray&gt; * _Nonnull' index='1' name='containerTypes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='appearanceWhenContainedInInstancesOfClasses:'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='containerTypes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='application:continueUserActivity:restorationHandler:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSUserActivity * _Nonnull' index='1' name='userActivity' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSArray * _Nullable)' function_pointer='true' index='2' name='restorationHandler' type64='@?'>
<arg declared_type64='NSArray * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:didDecodeRestorableStateWithCoder:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didFailToContinueUserActivityWithType:error:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='userActivityType' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='2' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didFailToRegisterForRemoteNotificationsWithError:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didFinishLaunchingWithOptions:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='launchOptions' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:didReceiveRemoteNotification:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='userInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didRegisterForRemoteNotificationsWithDeviceToken:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSData * _Nonnull' index='1' name='deviceToken' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didUpdateUserActivity:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSUserActivity * _Nonnull' index='1' name='userActivity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:handleEventsForBackgroundURLSession:completionHandler:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='identifier' type64='@'/>
<arg declared_type64='void (^ _Nonnull)()' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:handleWatchKitExtensionRequest:reply:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='userInfo' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSDictionary * _Nullable)' function_pointer='true' index='2' name='reply' type64='@?'>
<arg declared_type64='NSDictionary * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:openURL:options:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='app' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='options' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:shouldAllowExtensionPointIdentifier:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='extensionPointIdentifier' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:shouldRestoreApplicationState:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:shouldSaveApplicationState:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:viewControllerWithRestorationIdentifierPath:coder:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='identifierComponents' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='2' name='coder' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='application:willContinueUserActivityWithType:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='userActivityType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:willEncodeRestorableStateWithCoder:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:willFinishLaunchingWithOptions:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='launchOptions' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='applicationDidBecomeActive:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidEnterBackground:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidFinishLaunching:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidReceiveMemoryWarning:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationFinishedRestoringState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationProtectedDataDidBecomeAvailable:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationProtectedDataWillBecomeUnavailable:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationShouldRequestHealthAuthorization:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationSignificantTimeChange:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillEnterForeground:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillResignActive:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillTerminate:'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='arrowBase'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='arrowHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type64='NSTextContainer * _Nullable' index='0' name='textContainer' type64='@'/>
<arg declared_type64='CGRect' index='1' name='lineFrag' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGPoint' index='2' name='position' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='autocapitalizationType'>
<retval declared_type64='UITextAutocapitalizationType' type64='q'/>
</method>
<method selector='autocorrectionType'>
<retval declared_type64='UITextAutocorrectionType' type64='q'/>
</method>
<method selector='awakeFromNib'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='barPosition'>
<retval declared_type64='UIBarPosition' type64='q'/>
</method>
<method selector='baseWritingDirectionForPosition:inDirection:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextStorageDirection' index='1' name='direction' type64='q'/>
<retval declared_type64='UITextWritingDirection' type64='q'/>
</method>
<method selector='beginFloatingCursorAtPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginningOfDocument'>
<retval declared_type64='UITextPosition * _Nonnull' type64='@'/>
</method>
<method selector='bottomAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='cancelInteractiveTransition'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='caretRectForPosition:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='center'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='characterOffsetOfPosition:withinRange:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextRange * _Nonnull' index='1' name='range' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='characterRangeAtPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
<method selector='characterRangeByExtendingPosition:inDirection:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextLayoutDirection' index='1' name='direction' type64='q'/>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
<method selector='closestPositionToPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='closestPositionToPoint:withinRange:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='UITextRange * _Nonnull' index='1' name='range' type64='@'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='collectionView:canFocusItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:canMoveItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:canPerformAction:forItemAtIndexPath:withSender:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:cellForItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionViewCell * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:didDeselectItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didEndDisplayingCell:forItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionReusableView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='3' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didHighlightItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didSelectItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didUnhighlightItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didUpdateFocusInContext:withAnimationCoordinator:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewFocusUpdateContext * _Nonnull' index='1' name='context' type64='@'/>
<arg declared_type64='UIFocusAnimationCoordinator * _Nonnull' index='2' name='coordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:layout:insetForSectionAtIndex:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='collectionView:layout:minimumInteritemSpacingForSectionAtIndex:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='collectionView:layout:minimumLineSpacingForSectionAtIndex:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='collectionView:layout:referenceSizeForFooterInSection:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:referenceSizeForHeaderInSection:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:sizeForItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:moveItemAtIndexPath:toIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='destinationIndexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:numberOfItemsInSection:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='collectionView:performAction:forItemAtIndexPath:withSender:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:shouldDeselectItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:shouldHighlightItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:shouldSelectItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:shouldShowMenuForItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:shouldUpdateFocusInContext:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewFocusUpdateContext * _Nonnull' index='1' name='context' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:targetContentOffsetForProposedContentOffset:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='proposedContentOffset' type64='{CGPoint=dd}'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='originalIndexPath' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='proposedIndexPath' type64='@'/>
<retval declared_type64='NSIndexPath * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:transitionLayoutForOldLayout:newLayout:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='fromLayout' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='2' name='toLayout' type64='@'/>
<retval declared_type64='UICollectionViewTransitionLayout * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:viewForSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='kind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionReusableView * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:willDisplayCell:forItemAtIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionReusableView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='3' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:'>
<arg declared_type64='UICollisionBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='identifier' type64='@'/>
<arg declared_type64='CGPoint' index='3' name='p' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collisionBehavior:beganContactForItem:withItem:atPoint:'>
<arg declared_type64='UICollisionBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item1' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item2' type64='@'/>
<arg declared_type64='CGPoint' index='3' name='p' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collisionBehavior:endedContactForItem:withBoundaryIdentifier:'>
<arg declared_type64='UICollisionBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collisionBehavior:endedContactForItem:withItem:'>
<arg declared_type64='UICollisionBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item1' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item2' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collisionBoundingPath'>
<retval declared_type64='UIBezierPath * _Nonnull' type64='@'/>
</method>
<method selector='collisionBoundsType'>
<retval declared_type64='UIDynamicItemCollisionBoundsType' type64='Q'/>
</method>
<method selector='comparePosition:toPosition:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextPosition * _Nonnull' index='1' name='other' type64='@'/>
<retval declared_type64='NSComparisonResult' type64='q'/>
</method>
<method selector='completeTransition:'>
<arg declared_type64='BOOL' index='0' name='didComplete' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='completionCurve'>
<retval declared_type64='UIViewAnimationCurve' type64='q'/>
</method>
<method selector='completionSpeed'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='completionVelocity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='containerView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='contentViewInsets'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='convertPoint:fromCoordinateSpace:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinateSpace' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toCoordinateSpace:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinateSpace' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromCoordinateSpace:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinateSpace' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toCoordinateSpace:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinateSpace' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='copy:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cut:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='decodeRestorableStateWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='decreaseSize:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='delete:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteBackward'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='detailTextForGuidedAccessRestrictionWithIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='restrictionIdentifier' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='dictationRecognitionFailed'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dictationRecordingDidEnd'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didDismissSearchController:'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didPresentSearchController:'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didUpdateFocusInContext:withAnimationCoordinator:'>
<arg declared_type64='UIFocusUpdateContext * _Nonnull' index='0' name='context' type64='@'/>
<arg declared_type64='UIFocusAnimationCoordinator * _Nonnull' index='1' name='coordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='documentContextAfterInput'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='documentContextBeforeInput'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='dynamicAnimatorDidPause:'>
<arg declared_type64='UIDynamicAnimator * _Nonnull' index='0' name='animator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dynamicAnimatorWillResume:'>
<arg declared_type64='UIDynamicAnimator * _Nonnull' index='0' name='animator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enableInputClicksWhenVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='enablesReturnKeyAutomatically'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endFloatingCursor'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endOfDocument'>
<retval declared_type64='UITextPosition * _Nonnull' type64='@'/>
</method>
<method selector='finalFrameForViewController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='vc' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='finishInteractiveTransition'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='firstRectForRange:'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameForDictationResultPlaceholder:'>
<arg declared_type64='id _Nonnull' index='0' name='placeholder' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldReceivePress:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='UIPress * _Nonnull' index='1' name='press' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldReceiveTouch:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='UITouch * _Nonnull' index='1' name='touch' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldRequireFailureOfGestureRecognizer:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizerShouldBegin:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='guidedAccessRestrictionIdentifiers'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='guidedAccessRestrictionWithIdentifier:didChangeState:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='restrictionIdentifier' type64='@'/>
<arg declared_type64='UIGuidedAccessRestrictionState' index='1' name='newRestrictionState' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hasText'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='heightAnchor'>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
<method selector='imageForBounds:textContainer:characterIndex:'>
<arg declared_type64='CGRect' index='0' name='imageBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nullable' index='1' name='textContainer' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='increaseSize:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indexOfAccessibilityElement:'>
<arg declared_type64='id _Nonnull' index='0' name='element' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexPathForElementWithModelIdentifier:inView:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='indexPathForPreferredFocusedViewInCollectionView:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='indexPathForPreferredFocusedViewInTableView:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='initialFrameForViewController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='vc' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initiallyInteractive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='inputDelegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='insertDictationResult:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='dictationResult' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertDictationResultPlaceholder'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='insertText:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='text' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='interactionControllerForDismissal:'>
<arg declared_type64='id _Nonnull' index='0' name='animator' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='interactionControllerForPresentation:'>
<arg declared_type64='id _Nonnull' index='0' name='animator' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='isAccessibilityElement'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAnimated'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isCancelled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isInteractive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPosition:atBoundary:inDirection:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextGranularity' index='1' name='granularity' type64='q'/>
<arg declared_type64='UITextDirection' index='2' name='direction' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPosition:withinTextUnit:inDirection:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextGranularity' index='1' name='granularity' type64='q'/>
<arg declared_type64='UITextDirection' index='2' name='direction' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSecureTextEntry'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyboardAppearance'>
<retval declared_type64='UIKeyboardAppearance' type64='q'/>
</method>
<method selector='keyboardType'>
<retval declared_type64='UIKeyboardType' type64='q'/>
</method>
<method selector='layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='textContainer' type64='@'/>
<arg declared_type64='CGRect' index='3' name='proposedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGPoint' index='4' name='glyphPosition' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='5' name='charIndex' type64='Q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSTextContainer * _Nullable' index='1' name='textContainer' type64='@'/>
<arg declared_type64='BOOL' index='2' name='layoutFinishedFlag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='CGRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='CGRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='CGRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='1' name='glyphs' type64='^S'/>
<arg const='true' declared_type64='NSGlyphProperty * _Nonnull' index='2' name='props' type64='^q'/>
<arg const='true' declared_type64='NSUInteger * _Nonnull' index='3' name='charIndexes' type64='^Q'/>
<arg declared_type64='UIFont * _Nonnull' index='4' name='aFont' type64='@'/>
<arg declared_type64='NSRange' index='5' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='CGRect * _Nonnull' index='1' name='lineFragmentRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGRect * _Nonnull' index='2' name='lineFragmentUsedRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat * _Nonnull' index='3' name='baselineOffset' type64='^d'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='4' name='textContainer' type64='@'/>
<arg declared_type64='NSRange' index='5' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldUseAction:forControlCharacterAtIndex:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSControlCharacterAction' index='1' name='action' type64='q'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='NSControlCharacterAction' type64='q'/>
</method>
<method selector='layoutManager:textContainer:didChangeGeometryFromSize:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='textContainer' type64='@'/>
<arg declared_type64='CGSize' index='2' name='oldSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutManagerDidInvalidateLayout:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutOrientation'>
<retval declared_type64='NSTextLayoutOrientation' type64='q'/>
</method>
<method selector='length'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='makeTextWritingDirectionLeftToRight:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeTextWritingDirectionRightToLeft:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='markedTextRange'>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
<method selector='markedTextStyle'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='modelIdentifierForElementAtIndexPath:inView:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='idx' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='navigationBar:didPopItem:'>
<arg declared_type64='UINavigationBar * _Nonnull' index='0' name='navigationBar' type64='@'/>
<arg declared_type64='UINavigationItem * _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='navigationBar:didPushItem:'>
<arg declared_type64='UINavigationBar * _Nonnull' index='0' name='navigationBar' type64='@'/>
<arg declared_type64='UINavigationItem * _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='navigationBar:shouldPopItem:'>
<arg declared_type64='UINavigationBar * _Nonnull' index='0' name='navigationBar' type64='@'/>
<arg declared_type64='UINavigationItem * _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='navigationBar:shouldPushItem:'>
<arg declared_type64='UINavigationBar * _Nonnull' index='0' name='navigationBar' type64='@'/>
<arg declared_type64='UINavigationItem * _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='navigationController:animationControllerForOperation:fromViewController:toViewController:'>
<arg declared_type64='UINavigationController * _Nonnull' index='0' name='navigationController' type64='@'/>
<arg declared_type64='UINavigationControllerOperation' index='1' name='operation' type64='q'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='fromVC' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='3' name='toVC' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='navigationController:didShowViewController:animated:'>
<arg declared_type64='UINavigationController * _Nonnull' index='0' name='navigationController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<arg declared_type64='BOOL' index='2' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='navigationController:interactionControllerForAnimationController:'>
<arg declared_type64='UINavigationController * _Nonnull' index='0' name='navigationController' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='animationController' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='navigationController:willShowViewController:animated:'>
<arg declared_type64='UINavigationController * _Nonnull' index='0' name='navigationController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<arg declared_type64='BOOL' index='2' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='notifyWhenInteractionEndsUsingBlock:'>
<arg declared_type64='void (^ _Nonnull)(id _Nonnull)' function_pointer='true' index='0' name='handler' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfSectionsInCollectionView:'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfSectionsInTableView:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='objectRestorationClass'>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method class_method='true' selector='objectWithRestorationIdentifierPath:coder:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='identifierComponents' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='offsetFromPosition:toPosition:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='from' type64='@'/>
<arg declared_type64='UITextPosition * _Nonnull' index='1' name='toPosition' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<arg declared_type64='BOOL' index='1' name='finished' type64='B'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='previousViewControllers' type64='@'/>
<arg declared_type64='BOOL' index='3' name='completed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageViewController:viewControllerAfterViewController:'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='pageViewController:viewControllerBeforeViewController:'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='pageViewController:willTransitionToViewControllers:'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='pendingViewControllers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='paste:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='percentComplete'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='popoverController:willRepositionPopoverToRect:inView:'>
<arg declared_type64='UIPopoverController * _Nonnull' index='0' name='popoverController' type64='@'/>
<arg declared_type64='CGRect * _Nonnull' index='1' name='rect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIView * _Nonnull * _Nonnull' index='2' name='view' type64='^@' type_modifier='N'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverControllerDidDismissPopover:'>
<arg declared_type64='UIPopoverController * _Nonnull' index='0' name='popoverController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverControllerShouldDismissPopover:'>
<arg declared_type64='UIPopoverController * _Nonnull' index='0' name='popoverController' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='positionForBar:'>
<arg declared_type64='id _Nonnull' index='0' name='bar' type64='@'/>
<retval declared_type64='UIBarPosition' type64='q'/>
</method>
<method selector='positionFromPosition:inDirection:offset:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextLayoutDirection' index='1' name='direction' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='offset' type64='q'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='positionFromPosition:offset:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='offset' type64='q'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='positionFromPosition:toBoundary:inDirection:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextGranularity' index='1' name='granularity' type64='q'/>
<arg declared_type64='UITextDirection' index='2' name='direction' type64='q'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='positionWithinRange:atCharacterOffset:'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='offset' type64='q'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='positionWithinRange:farthestInDirection:'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<arg declared_type64='UITextLayoutDirection' index='1' name='direction' type64='q'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='preferredContentSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='preferredContentSizeDidChangeForChildContentContainer:'>
<arg declared_type64='id _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preferredFocusedView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='prepareForInterfaceBuilder'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentSearchController:'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentationController:viewControllerForAdaptivePresentationStyle:'>
<arg declared_type64='UIPresentationController * _Nonnull' index='0' name='controller' type64='@'/>
<arg declared_type64='UIModalPresentationStyle' index='1' name='style' type64='q'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:'>
<arg declared_type64='UIPresentationController * _Nonnull' index='0' name='presentationController' type64='@'/>
<arg declared_type64='UIModalPresentationStyle' index='1' name='style' type64='q'/>
<arg declared_type64='id _Nullable' index='2' name='transitionCoordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentationControllerForPresentedViewController:presentingViewController:sourceViewController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='presented' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='presenting' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='source' type64='@'/>
<retval declared_type64='UIPresentationController * _Nullable' type64='@'/>
</method>
<method selector='presentationCountForPageViewController:'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='presentationIndexForPageViewController:'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='presentationStyle'>
<retval declared_type64='UIModalPresentationStyle' type64='q'/>
</method>
<method selector='previewingContext:commitViewController:'>
<arg declared_type64='id _Nonnull' index='0' name='previewingContext' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewControllerToCommit' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='previewingContext:viewControllerForLocation:'>
<arg declared_type64='id _Nonnull' index='0' name='previewingContext' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='location' type64='{CGPoint=dd}'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='previewingGestureRecognizerForFailureRelationship'>
<retval declared_type64='UIGestureRecognizer * _Nonnull' type64='@'/>
</method>
<method selector='primaryViewControllerForCollapsingSplitViewController:'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='primaryViewControllerForExpandingSplitViewController:'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='rangeEnclosingPosition:withGranularity:inDirection:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextGranularity' index='1' name='granularity' type64='q'/>
<arg declared_type64='UITextDirection' index='2' name='direction' type64='q'/>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
<method selector='removeDictationResultPlaceholder:willInsertResult:'>
<arg declared_type64='id _Nonnull' index='0' name='placeholder' type64='@'/>
<arg declared_type64='BOOL' index='1' name='willInsertResult' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceRange:withText:'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='text' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='restorationParent'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='returnKeyType'>
<retval declared_type64='UIReturnKeyType' type64='q'/>
</method>
<method selector='scrollViewDidEndDecelerating:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidEndDragging:willDecelerate:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<arg declared_type64='BOOL' index='1' name='decelerate' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidEndScrollingAnimation:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidEndZooming:withView:atScale:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<arg declared_type64='UIView * _Nullable' index='1' name='view' type64='@'/>
<arg declared_type64='CGFloat' index='2' name='scale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidScroll:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidScrollToTop:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidZoom:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewShouldScrollToTop:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='scrollViewWillBeginDecelerating:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewWillBeginDragging:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewWillBeginZooming:withView:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<arg declared_type64='UIView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewWillEndDragging:withVelocity:targetContentOffset:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='velocity' type64='{CGPoint=dd}'/>
<arg declared_type64='CGPoint * _Nonnull' index='2' name='targetContentOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchBar:selectedScopeButtonIndexDidChange:'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='selectedScope' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchBar:shouldChangeTextInRange:replacementText:'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='text' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='searchBar:textDidChange:'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='searchText' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchBarSearchButtonClicked:'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchBarShouldBeginEditing:'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='searchBarShouldEndEditing:'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='searchBarTextDidBeginEditing:'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchBarTextDidEndEditing:'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='select:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedTextRange'>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
<method selector='selectionAffinity'>
<retval declared_type64='UITextStorageDirection' type64='q'/>
</method>
<method selector='selectionDidChange:'>
<arg declared_type64='id _Nullable' index='0' name='textInput' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectionRectsForRange:'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='selectionWillChange:'>
<arg declared_type64='id _Nullable' index='0' name='textInput' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityActivationPoint:'>
<arg declared_type64='CGPoint' index='0' name='accessibilityActivationPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityCustomActions:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityCustomActions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityElements:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityElementsHidden:'>
<arg declared_type64='BOOL' index='0' name='accessibilityElementsHidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFrame:'>
<arg declared_type64='CGRect' index='0' name='accessibilityFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHeaderElements:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityHeaderElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHint:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityHint' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityIdentifier:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLanguage:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityLanguage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityNavigationStyle:'>
<arg declared_type64='UIAccessibilityNavigationStyle' index='0' name='accessibilityNavigationStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityPath:'>
<arg declared_type64='UIBezierPath * _Nullable' index='0' name='accessibilityPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityTraits:'>
<arg declared_type64='UIAccessibilityTraits' index='0' name='accessibilityTraits' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityValue:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityViewIsModal:'>
<arg declared_type64='BOOL' index='0' name='accessibilityViewIsModal' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutocapitalizationType:'>
<arg declared_type64='UITextAutocapitalizationType' index='0' name='autocapitalizationType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutocorrectionType:'>
<arg declared_type64='UITextAutocorrectionType' index='0' name='autocorrectionType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBaseWritingDirection:forRange:'>
<arg declared_type64='UITextWritingDirection' index='0' name='writingDirection' type64='q'/>
<arg declared_type64='UITextRange * _Nonnull' index='1' name='range' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCenter:'>
<arg declared_type64='CGPoint' index='0' name='center' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnablesReturnKeyAutomatically:'>
<arg declared_type64='BOOL' index='0' name='enablesReturnKeyAutomatically' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='inputDelegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIsAccessibilityElement:'>
<arg declared_type64='BOOL' index='0' name='isAccessibilityElement' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyboardAppearance:'>
<arg declared_type64='UIKeyboardAppearance' index='0' name='keyboardAppearance' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyboardType:'>
<arg declared_type64='UIKeyboardType' index='0' name='keyboardType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMarkedText:selectedRange:'>
<arg declared_type64='NSString * _Nullable' index='0' name='markedText' type64='@'/>
<arg declared_type64='NSRange' index='1' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMarkedTextStyle:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='markedTextStyle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsFocusUpdate'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReturnKeyType:'>
<arg declared_type64='UIReturnKeyType' index='0' name='returnKeyType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSecureTextEntry:'>
<arg declared_type64='BOOL' index='0' name='secureTextEntry' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedTextRange:'>
<arg declared_type64='UITextRange * _Nullable' index='0' name='selectedTextRange' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionAffinity:'>
<arg declared_type64='UITextStorageDirection' index='0' name='selectionAffinity' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldGroupAccessibilityChildren:'>
<arg declared_type64='BOOL' index='0' name='shouldGroupAccessibilityChildren' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSourceRect:'>
<arg declared_type64='CGRect' index='0' name='sourceRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpellCheckingType:'>
<arg declared_type64='UITextSpellCheckingType' index='0' name='spellCheckingType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='transform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWindow:'>
<arg declared_type64='UIWindow * _Nullable' index='0' name='window' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldChangeTextInRange:replacementText:'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='text' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldGroupAccessibilityChildren'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldUpdateFocusInContext:'>
<arg declared_type64='UIFocusUpdateContext * _Nonnull' index='0' name='context' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sizeForChildContentContainer:withParentContainerSize:'>
<arg declared_type64='id _Nonnull' index='0' name='container' type64='@'/>
<arg declared_type64='CGSize' index='1' name='parentSize' type64='{CGSize=dd}'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='sourceRect'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sourceView'>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
<method selector='spellCheckingType'>
<retval declared_type64='UITextSpellCheckingType' type64='q'/>
</method>
<method selector='splitViewController:collapseSecondaryViewController:ontoPrimaryViewController:'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='secondaryViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='primaryViewController' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitViewController:separateSecondaryViewControllerFromPrimaryViewController:'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='primaryViewController' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='splitViewController:showDetailViewController:sender:'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='vc' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitViewController:showViewController:sender:'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='vc' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitViewController:willChangeToDisplayMode:'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='svc' type64='@'/>
<arg declared_type64='UISplitViewControllerDisplayMode' index='1' name='displayMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startInteractiveTransition:'>
<arg declared_type64='id _Nonnull' index='0' name='transitionContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='systemLayoutFittingSizeDidChangeForChildContentContainer:'>
<arg declared_type64='id _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabBar:didSelectItem:'>
<arg declared_type64='UITabBar * _Nonnull' index='0' name='tabBar' type64='@'/>
<arg declared_type64='UITabBarItem * _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabBarController:animationControllerForTransitionFromViewController:toViewController:'>
<arg declared_type64='UITabBarController * _Nonnull' index='0' name='tabBarController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='fromVC' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='toVC' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tabBarController:didSelectViewController:'>
<arg declared_type64='UITabBarController * _Nonnull' index='0' name='tabBarController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabBarController:interactionControllerForAnimationController:'>
<arg declared_type64='UITabBarController * _Nonnull' index='0' name='tabBarController' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='animationController' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tabBarController:shouldSelectViewController:'>
<arg declared_type64='UITabBarController * _Nonnull' index='0' name='tabBarController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:accessoryButtonTappedForRowWithIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:canEditRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:canFocusRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:canMoveRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:canPerformAction:forRowAtIndexPath:withSender:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:cellForRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UITableViewCell * _Nonnull' type64='@'/>
</method>
<method selector='tableView:commitEditingStyle:forRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UITableViewCellEditingStyle' index='1' name='editingStyle' type64='q'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didDeselectRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didEndDisplayingCell:forRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UITableViewCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didEndDisplayingFooterView:forSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didEndDisplayingHeaderView:forSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didHighlightRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didSelectRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didUnhighlightRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didUpdateFocusInContext:withAnimationCoordinator:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UITableViewFocusUpdateContext * _Nonnull' index='1' name='context' type64='@'/>
<arg declared_type64='UIFocusAnimationCoordinator * _Nonnull' index='2' name='coordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:editingStyleForRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UITableViewCellEditingStyle' type64='q'/>
</method>
<method selector='tableView:estimatedHeightForFooterInSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:estimatedHeightForHeaderInSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:estimatedHeightForRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:heightForFooterInSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:heightForHeaderInSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:heightForRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:indentationLevelForRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='tableView:moveRowAtIndexPath:toIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='destinationIndexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:numberOfRowsInSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='tableView:performAction:forRowAtIndexPath:withSender:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:shouldHighlightRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldIndentWhileEditingRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldShowMenuForRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldUpdateFocusInContext:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UITableViewFocusUpdateContext * _Nonnull' index='1' name='context' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='proposedDestinationIndexPath' type64='@'/>
<retval declared_type64='NSIndexPath * _Nonnull' type64='@'/>
</method>
<method selector='tableView:titleForFooterInSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tableView:titleForHeaderInSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tableView:viewForFooterInSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='tableView:viewForHeaderInSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='tableView:willDeselectRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='tableView:willDisplayCell:forRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UITableViewCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:willDisplayFooterView:forSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:willDisplayHeaderView:forSection:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:willSelectRowAtIndexPath:'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='targetDisplayModeForActionInSplitViewController:'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='svc' type64='@'/>
<retval declared_type64='UISplitViewControllerDisplayMode' type64='q'/>
</method>
<method selector='targetTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='textDidChange:'>
<arg declared_type64='id _Nullable' index='0' name='textInput' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textField:shouldChangeCharactersInRange:replacementString:'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='string' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textFieldDidBeginEditing:'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textFieldDidEndEditing:'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textFieldShouldBeginEditing:'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textFieldShouldClear:'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textFieldShouldEndEditing:'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textFieldShouldReturn:'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textForGuidedAccessRestrictionWithIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='restrictionIdentifier' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='textInRange:'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='textInputView'>
<retval declared_type64='__kindof UIView * _Nonnull' type64='@'/>
</method>
<method selector='textRangeFromPosition:toPosition:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='fromPosition' type64='@'/>
<arg declared_type64='UITextPosition * _Nonnull' index='1' name='toPosition' type64='@'/>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
<method selector='textStorage:didProcessEditing:range:changeInLength:'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='textStorage' type64='@'/>
<arg declared_type64='NSTextStorageEditActions' index='1' name='editedMask' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='editedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='3' name='delta' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStorage:willProcessEditing:range:changeInLength:'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='textStorage' type64='@'/>
<arg declared_type64='NSTextStorageEditActions' index='1' name='editedMask' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='editedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='3' name='delta' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStylingAtPosition:inDirection:'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextStorageDirection' index='1' name='direction' type64='q'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='textView:shouldChangeTextInRange:replacementText:'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='text' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:shouldInteractWithTextAttachment:inRange:'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSTextAttachment * _Nonnull' index='1' name='textAttachment' type64='@'/>
<arg declared_type64='NSRange' index='2' name='characterRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:shouldInteractWithURL:inRange:'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='URL' type64='@'/>
<arg declared_type64='NSRange' index='2' name='characterRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textViewDidBeginEditing:'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textViewDidChange:'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textViewDidChangeSelection:'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textViewDidEndEditing:'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textViewShouldBeginEditing:'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textViewShouldEndEditing:'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textWillChange:'>
<arg declared_type64='id _Nullable' index='0' name='textInput' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='toggleBoldface:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleItalics:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleUnderline:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tokenizer'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='topAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='traitCollection'>
<retval declared_type64='UITraitCollection * _Nonnull' type64='@'/>
</method>
<method selector='traitCollectionDidChange:'>
<arg declared_type64='UITraitCollection * _Nullable' index='0' name='previousTraitCollection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='transitionDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='transitionDuration:'>
<arg declared_type64='id _Nullable' index='0' name='transitionContext' type64='@'/>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='transitionWasCancelled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='unmarkText'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateFloatingCursorAtPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateFocusIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateInteractiveTransition:'>
<arg declared_type64='CGFloat' index='0' name='percentComplete' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateSearchResultsForSearchController:'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewControllerForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='__kindof UIViewController * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='viewControllerWithRestorationIdentifierPath:coder:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='identifierComponents' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='viewForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='__kindof UIView * _Nullable' type64='@'/>
</method>
<method selector='viewForZoomingInScrollView:'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='viewWillTransitionToSize:withTransitionCoordinator:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willDismissSearchController:'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willPresentSearchController:'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willTransitionToTraitCollection:withTransitionCoordinator:'>
<arg declared_type64='UITraitCollection * _Nonnull' index='0' name='newCollection' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window'>
<retval declared_type64='UIWindow * _Nullable' type64='@'/>
</method>
</class>
<class name='NSParagraphStyle'>
<method selector='alignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type64='NSWritingDirection' type64='q'/>
</method>
<method class_method='true' selector='defaultParagraphStyle'>
<retval declared_type64='NSParagraphStyle * _Nonnull' type64='@'/>
</method>
<method selector='defaultTabInterval'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='defaultWritingDirectionForLanguage:'>
<arg declared_type64='NSString * _Nullable' index='0' name='languageName' type64='@'/>
<retval declared_type64='NSWritingDirection' type64='q'/>
</method>
<method selector='firstLineHeadIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='headIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type64='NSLineBreakMode' type64='q'/>
</method>
<method selector='lineHeightMultiple'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lineSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumLineHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumLineHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tabStops'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tailIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSShadow'>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='setShadowBlurRadius:'>
<arg declared_type64='CGFloat' index='0' name='shadowBlurRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type64='id _Nullable' index='0' name='shadowColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowOffset:'>
<arg declared_type64='CGSize' index='0' name='shadowOffset' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shadowBlurRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='shadowColor'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='shadowOffset'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSString'>
<method selector='boundingRectWithSize:options:attributes:context:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='attributes' type64='@'/>
<arg declared_type64='NSStringDrawingContext * _Nullable' index='3' name='context' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='drawAtPoint:withAttributes:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='attrs' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:withAttributes:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='attrs' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithRect:options:attributes:context:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='attributes' type64='@'/>
<arg declared_type64='NSStringDrawingContext * _Nullable' index='3' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeWithAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='attrs' type64='@'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSStringDrawingContext'>
<method selector='actualScaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumScaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setMinimumScaleFactor:'>
<arg declared_type64='CGFloat' index='0' name='minimumScaleFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='totalBounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSTextAttachment'>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contents'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='fileType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='fileWrapper'>
<retval declared_type64='NSFileWrapper * _Nullable' type64='@'/>
</method>
<method selector='image'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='initWithData:ofType:'>
<arg declared_type64='NSData * _Nullable' index='0' name='contentData' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='uti' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContents:'>
<arg declared_type64='NSData * _Nullable' index='0' name='contents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFileType:'>
<arg declared_type64='NSString * _Nullable' index='0' name='fileType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFileWrapper:'>
<arg declared_type64='NSFileWrapper * _Nullable' index='0' name='fileWrapper' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSTextContainer'>
<method selector='exclusionPaths'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='heightTracksTextView'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithSize:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isSimpleRectangularTextContainer'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager'>
<retval declared_type64='NSLayoutManager * _Nullable' type64='@'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type64='NSLineBreakMode' type64='q'/>
</method>
<method selector='lineFragmentPadding'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:'>
<arg declared_type64='CGRect' index='0' name='proposedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSUInteger' index='1' name='characterIndex' type64='Q'/>
<arg declared_type64='NSWritingDirection' index='2' name='baseWritingDirection' type64='q'/>
<arg declared_type64='CGRect * _Nullable' index='3' name='remainingRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='maximumNumberOfLines'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='replaceLayoutManager:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='newLayoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExclusionPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='exclusionPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeightTracksTextView:'>
<arg declared_type64='BOOL' index='0' name='heightTracksTextView' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayoutManager:'>
<arg declared_type64='NSLayoutManager * _Nullable' index='0' name='layoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type64='NSLineBreakMode' index='0' name='lineBreakMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineFragmentPadding:'>
<arg declared_type64='CGFloat' index='0' name='lineFragmentPadding' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumNumberOfLines:'>
<arg declared_type64='NSUInteger' index='0' name='maximumNumberOfLines' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSize:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidthTracksTextView:'>
<arg declared_type64='BOOL' index='0' name='widthTracksTextView' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='size'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='widthTracksTextView'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSTextStorage'>
<method selector='addLayoutManager:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='aLayoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='changeInLength'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='edited:range:changeInLength:'>
<arg declared_type64='NSTextStorageEditActions' index='0' name='editedMask' type64='Q'/>
<arg declared_type64='NSRange' index='1' name='editedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='2' name='delta' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='editedMask'>
<retval declared_type64='NSTextStorageEditActions' type64='Q'/>
</method>
<method selector='editedRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='ensureAttributesAreFixedInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fixesAttributesLazily'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='invalidateAttributesInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutManagers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='processEditing'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeLayoutManager:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='aLayoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSTextTab'>
<method selector='alignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method class_method='true' selector='columnTerminatorsForLocale:'>
<arg declared_type64='NSLocale * _Nullable' index='0' name='aLocale' type64='@'/>
<retval declared_type64='NSCharacterSet * _Nonnull' type64='@'/>
</method>
<method selector='initWithTextAlignment:location:options:'>
<arg declared_type64='NSTextAlignment' index='0' name='alignment' type64='q'/>
<arg declared_type64='CGFloat' index='1' name='loc' type64='d'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='location'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='options'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSValue'>
<method selector='CGAffineTransformValue'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='CGPointValue'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='CGRectValue'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='CGSizeValue'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='CGVectorValue'>
<retval declared_type64='CGVector' type64='{CGVector=dd}'/>
</method>
<method selector='UIEdgeInsetsValue'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='UIOffsetValue'>
<retval declared_type64='UIOffset' type64='{UIOffset=dd}'/>
</method>
<method class_method='true' selector='valueWithCGAffineTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='transform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithCGPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithCGRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithCGSize:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithCGVector:'>
<arg declared_type64='CGVector' index='0' name='vector' type64='{CGVector=dd}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithUIEdgeInsets:'>
<arg declared_type64='UIEdgeInsets' index='0' name='insets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithUIOffset:'>
<arg declared_type64='UIOffset' index='0' name='insets' type64='{UIOffset=dd}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIAccessibilityCustomAction'>
<method selector='initWithName:target:selector:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='target' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='2' name='selector' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='selector'>
<retval declared_type64='SEL _Nonnull' type64=':'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelector:'>
<arg declared_type64='SEL _Nonnull' index='0' name='selector' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='UIAccessibilityElement'>
<method selector='accessibilityContainer'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityFrame'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityHint'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityLabel'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityTraits'>
<retval declared_type64='UIAccessibilityTraits' type64='Q'/>
</method>
<method selector='accessibilityValue'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='initWithAccessibilityContainer:'>
<arg declared_type64='id _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isAccessibilityElement'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAccessibilityContainer:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityContainer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFrame:'>
<arg declared_type64='CGRect' index='0' name='accessibilityFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHint:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityHint' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityTraits:'>
<arg declared_type64='UIAccessibilityTraits' index='0' name='accessibilityTraits' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityValue:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIsAccessibilityElement:'>
<arg declared_type64='BOOL' index='0' name='isAccessibilityElement' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIActivityIndicatorView'>
<method selector='activityIndicatorViewStyle'>
<retval declared_type64='UIActivityIndicatorViewStyle' type64='q'/>
</method>
<method selector='color'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='hidesWhenStopped'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithActivityIndicatorStyle:'>
<arg declared_type64='UIActivityIndicatorViewStyle' index='0' name='style' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isAnimating'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setActivityIndicatorViewStyle:'>
<arg declared_type64='UIActivityIndicatorViewStyle' index='0' name='activityIndicatorViewStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidesWhenStopped:'>
<arg declared_type64='BOOL' index='0' name='hidesWhenStopped' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startAnimating'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopAnimating'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIAlertAction'>
<method class_method='true' selector='actionWithTitle:style:handler:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<arg declared_type64='UIAlertActionStyle' index='1' name='style' type64='q'/>
<arg declared_type64='void (^ _Nullable)(UIAlertAction * _Nonnull)' function_pointer='true' index='2' name='handler' type64='@?'>
<arg declared_type64='UIAlertAction * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='style'>
<retval declared_type64='UIAlertActionStyle' type64='q'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='UIAlertController'>
<method selector='actions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='addAction:'>
<arg declared_type64='UIAlertAction * _Nonnull' index='0' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addTextFieldWithConfigurationHandler:'>
<arg declared_type64='void (^ _Nullable)(UITextField * _Nonnull)' function_pointer='true' index='0' name='configurationHandler' type64='@?'>
<arg declared_type64='UITextField * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='alertControllerWithTitle:message:preferredStyle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='message' type64='@'/>
<arg declared_type64='UIAlertControllerStyle' index='2' name='preferredStyle' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='message'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='preferredAction'>
<retval declared_type64='UIAlertAction * _Nullable' type64='@'/>
</method>
<method selector='preferredStyle'>
<retval declared_type64='UIAlertControllerStyle' type64='q'/>
</method>
<method selector='setMessage:'>
<arg declared_type64='NSString * _Nullable' index='0' name='message' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredAction:'>
<arg declared_type64='UIAlertAction * _Nullable' index='0' name='preferredAction' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textFields'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='UIApplication'>
<method selector='applicationState'>
<retval declared_type64='UIApplicationState' type64='q'/>
</method>
<method selector='backgroundTimeRemaining'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='beginBackgroundTaskWithExpirationHandler:'>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='0' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='UIBackgroundTaskIdentifier' type64='Q'/>
</method>
<method selector='beginBackgroundTaskWithName:expirationHandler:'>
<arg declared_type64='NSString * _Nullable' index='0' name='taskName' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='UIBackgroundTaskIdentifier' type64='Q'/>
</method>
<method selector='beginIgnoringInteractionEvents'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginReceivingRemoteControlEvents'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canOpenURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='completeStateRestoration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='endBackgroundTask:'>
<arg declared_type64='UIBackgroundTaskIdentifier' index='0' name='identifier' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endIgnoringInteractionEvents'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endReceivingRemoteControlEvents'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='extendStateRestoration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ignoreSnapshotOnNextApplicationLaunch'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isIdleTimerDisabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isIgnoringInteractionEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isProtectedDataAvailable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRegisteredForRemoteNotifications'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyWindow'>
<retval declared_type64='UIWindow * _Nullable' type64='@'/>
</method>
<method selector='openURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='preferredContentSizeCategory'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='registerForRemoteNotifications'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='registerObjectForStateRestoration:restorationIdentifier:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='restorationIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendAction:to:from:forEvent:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='target' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='sender' type64='@'/>
<arg declared_type64='UIEvent * _Nullable' index='3' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sendEvent:'>
<arg declared_type64='UIEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIdleTimerDisabled:'>
<arg declared_type64='BOOL' index='0' name='idleTimerDisabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedApplication'>
<retval declared_type64='UIApplication * _Nonnull' type64='@'/>
</method>
<method selector='unregisterForRemoteNotifications'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type64='UIUserInterfaceLayoutDirection' type64='q'/>
</method>
<method selector='windows'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIAttachmentBehavior'>
<method selector='anchorPoint'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='attachedBehaviorType'>
<retval declared_type64='UIAttachmentBehaviorType' type64='q'/>
</method>
<method selector='attachmentRange'>
<retval declared_type64='UIFloatRange' type64='{_UIFloatRange=dd}'/>
</method>
<method selector='damping'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='fixedAttachmentWithItem:attachedToItem:attachmentAnchor:'>
<arg declared_type64='id _Nonnull' index='0' name='item1' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item2' type64='@'/>
<arg declared_type64='CGPoint' index='2' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='frequency'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='frictionTorque'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='initWithItem:attachedToAnchor:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithItem:attachedToItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item1' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item2' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithItem:offsetFromCenter:attachedToAnchor:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<arg declared_type64='UIOffset' index='1' name='offset' type64='{UIOffset=dd}'/>
<arg declared_type64='CGPoint' index='2' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:'>
<arg declared_type64='id _Nonnull' index='0' name='item1' type64='@'/>
<arg declared_type64='UIOffset' index='1' name='offset1' type64='{UIOffset=dd}'/>
<arg declared_type64='id _Nonnull' index='2' name='item2' type64='@'/>
<arg declared_type64='UIOffset' index='3' name='offset2' type64='{UIOffset=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='length'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='limitAttachmentWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:'>
<arg declared_type64='id _Nonnull' index='0' name='item1' type64='@'/>
<arg declared_type64='UIOffset' index='1' name='offset1' type64='{UIOffset=dd}'/>
<arg declared_type64='id _Nonnull' index='2' name='item2' type64='@'/>
<arg declared_type64='UIOffset' index='3' name='offset2' type64='{UIOffset=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='pinAttachmentWithItem:attachedToItem:attachmentAnchor:'>
<arg declared_type64='id _Nonnull' index='0' name='item1' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item2' type64='@'/>
<arg declared_type64='CGPoint' index='2' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAnchorPoint:'>
<arg declared_type64='CGPoint' index='0' name='anchorPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttachmentRange:'>
<arg declared_type64='UIFloatRange' index='0' name='attachmentRange' type64='{_UIFloatRange=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDamping:'>
<arg declared_type64='CGFloat' index='0' name='damping' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrequency:'>
<arg declared_type64='CGFloat' index='0' name='frequency' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrictionTorque:'>
<arg declared_type64='CGFloat' index='0' name='frictionTorque' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLength:'>
<arg declared_type64='CGFloat' index='0' name='length' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='slidingAttachmentWithItem:attachedToItem:attachmentAnchor:axisOfTranslation:'>
<arg declared_type64='id _Nonnull' index='0' name='item1' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item2' type64='@'/>
<arg declared_type64='CGPoint' index='2' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='CGVector' index='3' name='axis' type64='{CGVector=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='slidingAttachmentWithItem:attachmentAnchor:axisOfTranslation:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='CGVector' index='2' name='axis' type64='{CGVector=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='UIBarButtonItem'>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='backgroundImageForState:barMetrics:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<arg declared_type64='UIBarMetrics' index='1' name='barMetrics' type64='q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='backgroundImageForState:style:barMetrics:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<arg declared_type64='UIBarButtonItemStyle' index='1' name='style' type64='q'/>
<arg declared_type64='UIBarMetrics' index='2' name='barMetrics' type64='q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='backgroundVerticalPositionAdjustmentForBarMetrics:'>
<arg declared_type64='UIBarMetrics' index='0' name='barMetrics' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='buttonGroup'>
<retval declared_type64='UIBarButtonItemGroup * _Nullable' type64='@'/>
</method>
<method selector='customView'>
<retval declared_type64='__kindof UIView * _Nullable' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithBarButtonSystemItem:target:action:'>
<arg declared_type64='UIBarButtonSystemItem' index='0' name='systemItem' type64='q'/>
<arg declared_type64='id _Nullable' index='1' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='2' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithCustomView:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='customView' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithImage:landscapeImagePhone:style:target:action:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='UIImage * _Nullable' index='1' name='landscapeImagePhone' type64='@'/>
<arg declared_type64='UIBarButtonItemStyle' index='2' name='style' type64='q'/>
<arg declared_type64='id _Nullable' index='3' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='4' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithImage:style:target:action:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='UIBarButtonItemStyle' index='1' name='style' type64='q'/>
<arg declared_type64='id _Nullable' index='2' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTitle:style:target:action:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<arg declared_type64='UIBarButtonItemStyle' index='1' name='style' type64='q'/>
<arg declared_type64='id _Nullable' index='2' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='possibleTitles'>
<retval declared_type64='NSSet * _Nullable' type64='@'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundImage:forState:barMetrics:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='backgroundImage' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<arg declared_type64='UIBarMetrics' index='2' name='barMetrics' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundImage:forState:style:barMetrics:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='backgroundImage' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<arg declared_type64='UIBarButtonItemStyle' index='2' name='style' type64='q'/>
<arg declared_type64='UIBarMetrics' index='3' name='barMetrics' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundVerticalPositionAdjustment:forBarMetrics:'>
<arg declared_type64='CGFloat' index='0' name='adjustment' type64='d'/>
<arg declared_type64='UIBarMetrics' index='1' name='barMetrics' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomView:'>
<arg declared_type64='__kindof UIView * _Nullable' index='0' name='customView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPossibleTitles:'>
<arg declared_type64='NSSet * _Nullable' index='0' name='possibleTitles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStyle:'>
<arg declared_type64='UIBarButtonItemStyle' index='0' name='style' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='tintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitlePositionAdjustment:forBarMetrics:'>
<arg declared_type64='UIOffset' index='0' name='adjustment' type64='{UIOffset=dd}'/>
<arg declared_type64='UIBarMetrics' index='1' name='barMetrics' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='style'>
<retval declared_type64='UIBarButtonItemStyle' type64='q'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tintColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='titlePositionAdjustmentForBarMetrics:'>
<arg declared_type64='UIBarMetrics' index='0' name='barMetrics' type64='q'/>
<retval declared_type64='UIOffset' type64='{UIOffset=dd}'/>
</method>
<method selector='width'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='UIBarButtonItemGroup'>
<method selector='barButtonItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='initWithBarButtonItems:representativeItem:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='barButtonItems' type64='@'/>
<arg declared_type64='UIBarButtonItem * _Nullable' index='1' name='representativeItem' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isDisplayingRepresentativeItem'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='representativeItem'>
<retval declared_type64='UIBarButtonItem * _Nullable' type64='@'/>
</method>
<method selector='setBarButtonItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='barButtonItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepresentativeItem:'>
<arg declared_type64='UIBarButtonItem * _Nullable' index='0' name='representativeItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIBarItem'>
<method selector='image'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='imageInsets'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageInsets:'>
<arg declared_type64='UIEdgeInsets' index='0' name='imageInsets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleTextAttributes:forState:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='attributes' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='titleTextAttributesForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
</class>
<class name='UIBezierPath'>
<method selector='CGPath'>
<retval declared_type64='CGPathRef _Nonnull' type64='^{CGPath=}'/>
</method>
<method selector='addArcWithCenter:radius:startAngle:endAngle:clockwise:'>
<arg declared_type64='CGPoint' index='0' name='center' type64='{CGPoint=dd}'/>
<arg declared_type64='CGFloat' index='1' name='radius' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='startAngle' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='endAngle' type64='d'/>
<arg declared_type64='BOOL' index='4' name='clockwise' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addClip'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addCurveToPoint:controlPoint1:controlPoint2:'>
<arg declared_type64='CGPoint' index='0' name='endPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='CGPoint' index='1' name='controlPoint1' type64='{CGPoint=dd}'/>
<arg declared_type64='CGPoint' index='2' name='controlPoint2' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addLineToPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addQuadCurveToPoint:controlPoint:'>
<arg declared_type64='CGPoint' index='0' name='endPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='CGPoint' index='1' name='controlPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendPath:'>
<arg declared_type64='UIBezierPath * _Nonnull' index='0' name='bezierPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applyTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='transform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='bezierPath'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='bezierPathByReversingPath'>
<retval declared_type64='UIBezierPath * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:'>
<arg declared_type64='CGPoint' index='0' name='center' type64='{CGPoint=dd}'/>
<arg declared_type64='CGFloat' index='1' name='radius' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='startAngle' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='endAngle' type64='d'/>
<arg declared_type64='BOOL' index='4' name='clockwise' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='bezierPathWithCGPath:'>
<arg declared_type64='CGPathRef _Nonnull' index='0' name='CGPath' type64='^{CGPath=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='bezierPathWithOvalInRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='bezierPathWithRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIRectCorner' index='1' name='corners' type64='Q'/>
<arg declared_type64='CGSize' index='2' name='cornerRadii' type64='{CGSize=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='bezierPathWithRoundedRect:cornerRadius:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat' index='1' name='cornerRadius' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='closePath'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='containsPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='currentPoint'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='fill'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fillWithBlendMode:alpha:'>
<arg declared_type64='CGBlendMode' index='0' name='blendMode' type64='i'/>
<arg declared_type64='CGFloat' index='1' name='alpha' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='flatness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='getLineDash:count:phase:'>
<arg declared_type64='CGFloat * _Nullable' index='0' name='pattern' type64='^d'/>
<arg declared_type64='NSInteger * _Nullable' index='1' name='count' type64='^q'/>
<arg declared_type64='CGFloat * _Nullable' index='2' name='phase' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isEmpty'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lineCapStyle'>
<retval declared_type64='CGLineCap' type64='i'/>
</method>
<method selector='lineJoinStyle'>
<retval declared_type64='CGLineJoin' type64='i'/>
</method>
<method selector='lineWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='miterLimit'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='moveToPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAllPoints'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCGPath:'>
<arg declared_type64='CGPathRef _Nonnull' index='0' name='CGPath' type64='^{CGPath=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFlatness:'>
<arg declared_type64='CGFloat' index='0' name='flatness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineCapStyle:'>
<arg declared_type64='CGLineCap' index='0' name='lineCapStyle' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineDash:count:phase:'>
<arg const='true' declared_type64='CGFloat * _Nullable' index='0' name='pattern' type64='^d'/>
<arg declared_type64='NSInteger' index='1' name='count' type64='q'/>
<arg declared_type64='CGFloat' index='2' name='phase' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineJoinStyle:'>
<arg declared_type64='CGLineJoin' index='0' name='lineJoinStyle' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type64='CGFloat' index='0' name='lineWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMiterLimit:'>
<arg declared_type64='CGFloat' index='0' name='miterLimit' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesEvenOddFillRule:'>
<arg declared_type64='BOOL' index='0' name='usesEvenOddFillRule' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stroke'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='strokeWithBlendMode:alpha:'>
<arg declared_type64='CGBlendMode' index='0' name='blendMode' type64='i'/>
<arg declared_type64='CGFloat' index='1' name='alpha' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesEvenOddFillRule'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='UIBlurEffect'>
<method class_method='true' selector='effectWithStyle:'>
<arg declared_type64='UIBlurEffectStyle' index='0' name='style' type64='q'/>
<retval declared_type64='UIBlurEffect * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIButton'>
<method selector='adjustsImageWhenDisabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='adjustsImageWhenHighlighted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='attributedTitleForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='backgroundImageForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='backgroundRectForBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='buttonType'>
<retval declared_type64='UIButtonType' type64='q'/>
</method>
<method class_method='true' selector='buttonWithType:'>
<arg declared_type64='UIButtonType' index='0' name='buttonType' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='contentEdgeInsets'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='contentRectForBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='currentAttributedTitle'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='currentBackgroundImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='currentImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='currentTitle'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='currentTitleColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='currentTitleShadowColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='imageEdgeInsets'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='imageForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='imageRectForContentRect:'>
<arg declared_type64='CGRect' index='0' name='contentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageView'>
<retval declared_type64='UIImageView * _Nullable' type64='@'/>
</method>
<method selector='reversesTitleShadowWhenHighlighted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAdjustsImageWhenDisabled:'>
<arg declared_type64='BOOL' index='0' name='adjustsImageWhenDisabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAdjustsImageWhenHighlighted:'>
<arg declared_type64='BOOL' index='0' name='adjustsImageWhenHighlighted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedTitle:forState:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='title' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundImage:forState:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentEdgeInsets:'>
<arg declared_type64='UIEdgeInsets' index='0' name='contentEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:forState:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageEdgeInsets:'>
<arg declared_type64='UIEdgeInsets' index='0' name='imageEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReversesTitleShadowWhenHighlighted:'>
<arg declared_type64='BOOL' index='0' name='reversesTitleShadowWhenHighlighted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='tintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:forState:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleColor:forState:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='color' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleEdgeInsets:'>
<arg declared_type64='UIEdgeInsets' index='0' name='titleEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleShadowColor:forState:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='color' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tintColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='titleColorForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='titleEdgeInsets'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='titleForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='titleLabel'>
<retval declared_type64='UILabel * _Nullable' type64='@'/>
</method>
<method selector='titleRectForContentRect:'>
<arg declared_type64='CGRect' index='0' name='contentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='titleShadowColorForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
</class>
<class name='UICollectionReusableView'>
<method selector='applyLayoutAttributes:'>
<arg declared_type64='UICollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didTransitionFromLayout:toLayout:'>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='0' name='oldLayout' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='newLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preferredLayoutAttributesFittingAttributes:'>
<arg declared_type64='UICollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nonnull' type64='@'/>
</method>
<method selector='prepareForReuse'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reuseIdentifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='willTransitionFromLayout:toLayout:'>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='0' name='oldLayout' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='newLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UICollectionView'>
<method selector='allowsMultipleSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='beginInteractiveMovementForItemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelInteractiveMovement'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cancelInteractiveTransition'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cellForItemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionViewCell * _Nullable' type64='@'/>
</method>
<method selector='collectionViewLayout'>
<retval declared_type64='UICollectionViewLayout * _Nonnull' type64='@'/>
</method>
<method selector='dataSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deleteItemsAtIndexPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteSections:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='sections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dequeueReusableCellWithReuseIdentifier:forIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='__kindof UICollectionViewCell * _Nonnull' type64='@'/>
</method>
<method selector='dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='identifier' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='__kindof UICollectionReusableView * _Nonnull' type64='@'/>
</method>
<method selector='deselectItemAtIndexPath:animated:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endInteractiveMovement'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finishInteractiveTransition'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indexPathForCell:'>
<arg declared_type64='UICollectionViewCell * _Nonnull' index='0' name='cell' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='indexPathForItemAtPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='indexPathsForSelectedItems'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='indexPathsForVisibleItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='indexPathsForVisibleSupplementaryElementsOfKind:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:collectionViewLayout:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='layout' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertItemsAtIndexPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSections:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='sections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutAttributesForItemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='kind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='moveItemAtIndexPath:toIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='newIndexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveSection:toSection:'>
<arg declared_type64='NSInteger' index='0' name='section' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='newSection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfItemsInSection:'>
<arg declared_type64='NSInteger' index='0' name='section' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfSections'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='performBatchUpdates:completion:'>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='0' name='updates' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerClass:forCellWithReuseIdentifier:'>
<arg declared_type64='Class _Nullable' index='0' name='cellClass' type64='#'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerClass:forSupplementaryViewOfKind:withReuseIdentifier:'>
<arg declared_type64='Class _Nullable' index='0' name='viewClass' type64='#'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='elementKind' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerNib:forCellWithReuseIdentifier:'>
<arg declared_type64='UINib * _Nullable' index='0' name='nib' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerNib:forSupplementaryViewOfKind:withReuseIdentifier:'>
<arg declared_type64='UINib * _Nullable' index='0' name='nib' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='kind' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadData'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadItemsAtIndexPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadSections:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='sections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='remembersLastFocusedIndexPath'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='scrollToItemAtIndexPath:atScrollPosition:animated:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<arg declared_type64='UICollectionViewScrollPosition' index='1' name='scrollPosition' type64='Q'/>
<arg declared_type64='BOOL' index='2' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItemAtIndexPath:animated:scrollPosition:'>
<arg declared_type64='NSIndexPath * _Nullable' index='0' name='indexPath' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<arg declared_type64='UICollectionViewScrollPosition' index='2' name='scrollPosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type64='BOOL' index='0' name='allowsMultipleSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsSelection:'>
<arg declared_type64='BOOL' index='0' name='allowsSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='backgroundView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollectionViewLayout:'>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='0' name='collectionViewLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollectionViewLayout:animated:'>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='0' name='layout' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollectionViewLayout:animated:completion:'>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='0' name='layout' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='2' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type64='id _Nullable' index='0' name='dataSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRemembersLastFocusedIndexPath:'>
<arg declared_type64='BOOL' index='0' name='remembersLastFocusedIndexPath' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startInteractiveTransitionToCollectionViewLayout:completion:'>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='0' name='layout' type64='@'/>
<arg declared_type64='UICollectionViewLayoutInteractiveTransitionCompletion _Nullable' function_pointer='true' index='1' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='UICollectionViewTransitionLayout * _Nonnull' type64='@'/>
</method>
<method selector='supplementaryViewForElementKind:atIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionReusableView * _Nonnull' type64='@'/>
</method>
<method selector='updateInteractiveMovementTargetPosition:'>
<arg declared_type64='CGPoint' index='0' name='targetPosition' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='visibleCells'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='visibleSupplementaryViewsOfKind:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='UICollectionViewCell'>
<method selector='backgroundView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='contentView'>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
<method selector='isHighlighted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectedBackgroundView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='backgroundView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type64='BOOL' index='0' name='highlighted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type64='BOOL' index='0' name='selected' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedBackgroundView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='selectedBackgroundView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UICollectionViewController'>
<method selector='clearsSelectionOnViewWillAppear'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView'>
<retval declared_type64='__kindof UICollectionView * _Nullable' type64='@'/>
</method>
<method selector='collectionViewLayout'>
<retval declared_type64='UICollectionViewLayout * _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithCollectionViewLayout:'>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='0' name='layout' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='nibNameOrNil' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='nibBundleOrNil' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='installsStandardGestureForInteractiveMovement'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setClearsSelectionOnViewWillAppear:'>
<arg declared_type64='BOOL' index='0' name='clearsSelectionOnViewWillAppear' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollectionView:'>
<arg declared_type64='__kindof UICollectionView * _Nullable' index='0' name='collectionView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInstallsStandardGestureForInteractiveMovement:'>
<arg declared_type64='BOOL' index='0' name='installsStandardGestureForInteractiveMovement' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUseLayoutToLayoutNavigationTransitions:'>
<arg declared_type64='BOOL' index='0' name='useLayoutToLayoutNavigationTransitions' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='useLayoutToLayoutNavigationTransitions'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='UICollectionViewFlowLayout'>
<method selector='estimatedItemSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='footerReferenceSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='headerReferenceSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='itemSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='minimumInteritemSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumLineSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='scrollDirection'>
<retval declared_type64='UICollectionViewScrollDirection' type64='q'/>
</method>
<method selector='sectionFootersPinToVisibleBounds'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sectionHeadersPinToVisibleBounds'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sectionInset'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='setEstimatedItemSize:'>
<arg declared_type64='CGSize' index='0' name='estimatedItemSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFooterReferenceSize:'>
<arg declared_type64='CGSize' index='0' name='footerReferenceSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeaderReferenceSize:'>
<arg declared_type64='CGSize' index='0' name='headerReferenceSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemSize:'>
<arg declared_type64='CGSize' index='0' name='itemSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumInteritemSpacing:'>
<arg declared_type64='CGFloat' index='0' name='minimumInteritemSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumLineSpacing:'>
<arg declared_type64='CGFloat' index='0' name='minimumLineSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollDirection:'>
<arg declared_type64='UICollectionViewScrollDirection' index='0' name='scrollDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionFootersPinToVisibleBounds:'>
<arg declared_type64='BOOL' index='0' name='sectionFootersPinToVisibleBounds' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionHeadersPinToVisibleBounds:'>
<arg declared_type64='BOOL' index='0' name='sectionHeadersPinToVisibleBounds' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionInset:'>
<arg declared_type64='UIEdgeInsets' index='0' name='sectionInset' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UICollectionViewFlowLayoutInvalidationContext'>
<method selector='invalidateFlowLayoutAttributes'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='invalidateFlowLayoutDelegateMetrics'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setInvalidateFlowLayoutAttributes:'>
<arg declared_type64='BOOL' index='0' name='invalidateFlowLayoutAttributes' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInvalidateFlowLayoutDelegateMetrics:'>
<arg declared_type64='BOOL' index='0' name='invalidateFlowLayoutDelegateMetrics' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UICollectionViewFocusUpdateContext'>
<method selector='nextFocusedIndexPath'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='previouslyFocusedIndexPath'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
</class>
<class name='UICollectionViewLayout'>
<method selector='collectionView'>
<retval declared_type64='UICollectionView * _Nullable' type64='@'/>
</method>
<method selector='collectionViewContentSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='decorationIndexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='finalLayoutAttributesForDisappearingItemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='itemIndexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='elementIndexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='finalizeAnimatedBoundsChange'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finalizeCollectionViewUpdates'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finalizeLayoutTransition'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indexPathsToDeleteForDecorationViewOfKind:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='indexPathsToDeleteForSupplementaryViewOfKind:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='indexPathsToInsertForDecorationViewOfKind:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='indexPathsToInsertForSupplementaryViewOfKind:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='decorationIndexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingItemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='itemIndexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='elementIndexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='invalidateLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateLayoutWithContext:'>
<arg declared_type64='UICollectionViewLayoutInvalidationContext * _Nonnull' index='0' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='invalidationContextClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='invalidationContextForBoundsChange:'>
<arg declared_type64='CGRect' index='0' name='newBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='UICollectionViewLayoutInvalidationContext * _Nonnull' type64='@'/>
</method>
<method selector='invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths:previousIndexPaths:movementCancelled:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='previousIndexPaths' type64='@'/>
<arg declared_type64='BOOL' index='2' name='movementCancelled' type64='B'/>
<retval declared_type64='UICollectionViewLayoutInvalidationContext * _Nonnull' type64='@'/>
</method>
<method selector='invalidationContextForInteractivelyMovingItems:withTargetPosition:previousIndexPaths:previousPosition:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='targetIndexPaths' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='targetPosition' type64='{CGPoint=dd}'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='previousIndexPaths' type64='@'/>
<arg declared_type64='CGPoint' index='3' name='previousPosition' type64='{CGPoint=dd}'/>
<retval declared_type64='UICollectionViewLayoutInvalidationContext * _Nonnull' type64='@'/>
</method>
<method selector='invalidationContextForPreferredLayoutAttributes:withOriginalAttributes:'>
<arg declared_type64='UICollectionViewLayoutAttributes * _Nonnull' index='0' name='preferredAttributes' type64='@'/>
<arg declared_type64='UICollectionViewLayoutAttributes * _Nonnull' index='1' name='originalAttributes' type64='@'/>
<retval declared_type64='UICollectionViewLayoutInvalidationContext * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layoutAttributesClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='layoutAttributesForDecorationViewOfKind:atIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForElementsInRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForInteractivelyMovingItemAtIndexPath:withTargetPosition:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='position' type64='{CGPoint=dd}'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nonnull' type64='@'/>
</method>
<method selector='layoutAttributesForItemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForSupplementaryViewOfKind:atIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='prepareForAnimatedBoundsChange:'>
<arg declared_type64='CGRect' index='0' name='oldBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForCollectionViewUpdates:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='updateItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForTransitionFromLayout:'>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='0' name='oldLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForTransitionToLayout:'>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='0' name='newLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerClass:forDecorationViewOfKind:'>
<arg declared_type64='Class _Nullable' index='0' name='viewClass' type64='#'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='elementKind' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerNib:forDecorationViewOfKind:'>
<arg declared_type64='UINib * _Nullable' index='0' name='nib' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='elementKind' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldInvalidateLayoutForBoundsChange:'>
<arg declared_type64='CGRect' index='0' name='newBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldInvalidateLayoutForPreferredLayoutAttributes:withOriginalAttributes:'>
<arg declared_type64='UICollectionViewLayoutAttributes * _Nonnull' index='0' name='preferredAttributes' type64='@'/>
<arg declared_type64='UICollectionViewLayoutAttributes * _Nonnull' index='1' name='originalAttributes' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='targetContentOffsetForProposedContentOffset:'>
<arg declared_type64='CGPoint' index='0' name='proposedContentOffset' type64='{CGPoint=dd}'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='targetContentOffsetForProposedContentOffset:withScrollingVelocity:'>
<arg declared_type64='CGPoint' index='0' name='proposedContentOffset' type64='{CGPoint=dd}'/>
<arg declared_type64='CGPoint' index='1' name='velocity' type64='{CGPoint=dd}'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='targetIndexPathForInteractivelyMovingItem:withPosition:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='previousIndexPath' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='position' type64='{CGPoint=dd}'/>
<retval declared_type64='NSIndexPath * _Nonnull' type64='@'/>
</method>
</class>
<class name='UICollectionViewLayoutAttributes'>
<method selector='alpha'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='center'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='frame'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='indexPath'>
<retval declared_type64='NSIndexPath * _Nonnull' type64='@'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='layoutAttributesForCellWithIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layoutAttributesForDecorationViewOfKind:withIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='decorationViewKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layoutAttributesForSupplementaryViewOfKind:withIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='representedElementCategory'>
<retval declared_type64='UICollectionElementCategory' type64='Q'/>
</method>
<method selector='representedElementKind'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setAlpha:'>
<arg declared_type64='CGFloat' index='0' name='alpha' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCenter:'>
<arg declared_type64='CGPoint' index='0' name='center' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSize:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransform3D:'>
<arg declared_type64='CATransform3D' index='0' name='transform3D' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='transform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZIndex:'>
<arg declared_type64='NSInteger' index='0' name='zIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='size'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='transform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='transform3D'>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</method>
<method selector='zIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='UICollectionViewLayoutInvalidationContext'>
<method selector='contentOffsetAdjustment'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='contentSizeAdjustment'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='interactiveMovementTarget'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='invalidateDataSourceCounts'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='invalidateDecorationElementsOfKind:atIndexPaths:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateEverything'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='invalidateItemsAtIndexPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateSupplementaryElementsOfKind:atIndexPaths:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidatedDecorationIndexPaths'>
<retval declared_type64='NSDictionary *&gt; * _Nullable' type64='@'/>
</method>
<method selector='invalidatedItemIndexPaths'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='invalidatedSupplementaryIndexPaths'>
<retval declared_type64='NSDictionary *&gt; * _Nullable' type64='@'/>
</method>
<method selector='previousIndexPathsForInteractivelyMovingItems'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='setContentOffsetAdjustment:'>
<arg declared_type64='CGPoint' index='0' name='contentOffsetAdjustment' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentSizeAdjustment:'>
<arg declared_type64='CGSize' index='0' name='contentSizeAdjustment' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='targetIndexPathsForInteractivelyMovingItems'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='UICollectionViewTransitionLayout'>
<method selector='currentLayout'>
<retval declared_type64='UICollectionViewLayout * _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithCurrentLayout:nextLayout:'>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='0' name='currentLayout' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='newLayout' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='nextLayout'>
<retval declared_type64='UICollectionViewLayout * _Nonnull' type64='@'/>
</method>
<method selector='setTransitionProgress:'>
<arg declared_type64='CGFloat' index='0' name='transitionProgress' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transitionProgress'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='updateValue:forAnimatedKey:'>
<arg declared_type64='CGFloat' index='0' name='value' type64='d'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='valueForAnimatedKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='UICollectionViewUpdateItem'>
<method selector='indexPathAfterUpdate'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='indexPathBeforeUpdate'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='updateAction'>
<retval declared_type64='UICollectionUpdateAction' type64='q'/>
</method>
</class>
<class name='UICollisionBehavior'>
<method selector='addBoundaryWithIdentifier:forPath:'>
<arg declared_type64='id _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='UIBezierPath * _Nonnull' index='1' name='bezierPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addBoundaryWithIdentifier:fromPoint:toPoint:'>
<arg declared_type64='id _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='p1' type64='{CGPoint=dd}'/>
<arg declared_type64='CGPoint' index='2' name='p2' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='boundaryIdentifiers'>
<retval declared_type64='NSArray&gt; * _Nullable' type64='@'/>
</method>
<method selector='boundaryWithIdentifier:'>
<arg declared_type64='id _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='UIBezierPath * _Nullable' type64='@'/>
</method>
<method selector='collisionDelegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='collisionMode'>
<retval declared_type64='UICollisionBehaviorMode' type64='Q'/>
</method>
<method selector='initWithItems:'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='removeAllBoundaries'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeBoundaryWithIdentifier:'>
<arg declared_type64='id _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollisionDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='collisionDelegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollisionMode:'>
<arg declared_type64='UICollisionBehaviorMode' index='0' name='collisionMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTranslatesReferenceBoundsIntoBoundary:'>
<arg declared_type64='BOOL' index='0' name='translatesReferenceBoundsIntoBoundary' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTranslatesReferenceBoundsIntoBoundaryWithInsets:'>
<arg declared_type64='UIEdgeInsets' index='0' name='insets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='translatesReferenceBoundsIntoBoundary'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='UIColor'>
<method selector='CGColor'>
<retval declared_type64='CGColorRef _Nonnull' type64='^{CGColor=}'/>
</method>
<method selector='CIColor'>
<retval declared_type64='CIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='blackColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='blueColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='brownColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='clearColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='colorWithAlphaComponent:'>
<arg declared_type64='CGFloat' index='0' name='alpha' type64='d'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithCGColor:'>
<arg declared_type64='CGColorRef _Nonnull' index='0' name='cgColor' type64='^{CGColor=}'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithCIColor:'>
<arg declared_type64='CIColor * _Nonnull' index='0' name='ciColor' type64='@'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:brightness:alpha:'>
<arg declared_type64='CGFloat' index='0' name='hue' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='saturation' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='brightness' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithPatternImage:'>
<arg declared_type64='UIImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithRed:green:blue:alpha:'>
<arg declared_type64='CGFloat' index='0' name='red' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='green' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='blue' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithWhite:alpha:'>
<arg declared_type64='CGFloat' index='0' name='white' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='alpha' type64='d'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='cyanColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='darkGrayColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='getHue:saturation:brightness:alpha:'>
<arg declared_type64='CGFloat * _Nullable' index='0' name='hue' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='1' name='saturation' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='2' name='brightness' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='3' name='alpha' type64='^d'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='getRed:green:blue:alpha:'>
<arg declared_type64='CGFloat * _Nullable' index='0' name='red' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='1' name='green' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='2' name='blue' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='3' name='alpha' type64='^d'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='getWhite:alpha:'>
<arg declared_type64='CGFloat * _Nullable' index='0' name='white' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='1' name='alpha' type64='^d'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='grayColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='greenColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='initWithCGColor:'>
<arg declared_type64='CGColorRef _Nonnull' index='0' name='cgColor' type64='^{CGColor=}'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='initWithCIColor:'>
<arg declared_type64='CIColor * _Nonnull' index='0' name='ciColor' type64='@'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='initWithHue:saturation:brightness:alpha:'>
<arg declared_type64='CGFloat' index='0' name='hue' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='saturation' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='brightness' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='initWithPatternImage:'>
<arg declared_type64='UIImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='initWithRed:green:blue:alpha:'>
<arg declared_type64='CGFloat' index='0' name='red' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='green' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='blue' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='initWithWhite:alpha:'>
<arg declared_type64='CGFloat' index='0' name='white' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='alpha' type64='d'/>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='lightGrayColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='magentaColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='orangeColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='purpleColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='redColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='set'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFill'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStroke'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='whiteColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='yellowColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIControl'>
<method selector='actionsForTarget:forControlEvent:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<arg declared_type64='UIControlEvents' index='1' name='controlEvent' type64='Q'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='addTarget:action:forControlEvents:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<arg declared_type64='UIControlEvents' index='2' name='controlEvents' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allControlEvents'>
<retval declared_type64='UIControlEvents' type64='Q'/>
</method>
<method selector='allTargets'>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='beginTrackingWithTouch:withEvent:'>
<arg declared_type64='UITouch * _Nonnull' index='0' name='touch' type64='@'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelTrackingWithEvent:'>
<arg declared_type64='UIEvent * _Nullable' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentHorizontalAlignment'>
<retval declared_type64='UIControlContentHorizontalAlignment' type64='q'/>
</method>
<method selector='contentVerticalAlignment'>
<retval declared_type64='UIControlContentVerticalAlignment' type64='q'/>
</method>
<method selector='continueTrackingWithTouch:withEvent:'>
<arg declared_type64='UITouch * _Nonnull' index='0' name='touch' type64='@'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='endTrackingWithTouch:withEvent:'>
<arg declared_type64='UITouch * _Nullable' index='0' name='touch' type64='@'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTouchInside'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTracking'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeTarget:action:forControlEvents:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='action' type64=':'/>
<arg declared_type64='UIControlEvents' index='2' name='controlEvents' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendAction:to:forEvent:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='target' type64='@'/>
<arg declared_type64='UIEvent * _Nullable' index='2' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendActionsForControlEvents:'>
<arg declared_type64='UIControlEvents' index='0' name='controlEvents' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentHorizontalAlignment:'>
<arg declared_type64='UIControlContentHorizontalAlignment' index='0' name='contentHorizontalAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentVerticalAlignment:'>
<arg declared_type64='UIControlContentVerticalAlignment' index='0' name='contentVerticalAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type64='BOOL' index='0' name='highlighted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type64='BOOL' index='0' name='selected' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='state'>
<retval declared_type64='UIControlState' type64='Q'/>
</method>
</class>
<class name='UIDevice'>
<method class_method='true' selector='currentDevice'>
<retval declared_type64='UIDevice * _Nonnull' type64='@'/>
</method>
<method selector='identifierForVendor'>
<retval declared_type64='NSUUID * _Nullable' type64='@'/>
</method>
<method selector='isMultitaskingSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isProximityMonitoringEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='localizedModel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='model'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='playInputClick'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='proximityState'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setProximityMonitoringEnabled:'>
<arg declared_type64='BOOL' index='0' name='proximityMonitoringEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='systemName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='systemVersion'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='userInterfaceIdiom'>
<retval declared_type64='UIUserInterfaceIdiom' type64='q'/>
</method>
</class>
<class name='UIDictationPhrase'>
<method selector='alternativeInterpretations'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='text'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIDynamicAnimator'>
<method selector='addBehavior:'>
<arg declared_type64='UIDynamicBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='behaviors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='elapsedTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='initWithCollectionViewLayout:'>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='0' name='layout' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithReferenceView:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isRunning'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemsInRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='layoutAttributesForCellAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForDecorationViewOfKind:atIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='decorationViewKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForSupplementaryViewOfKind:atIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='kind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='referenceView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='removeAllBehaviors'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeBehavior:'>
<arg declared_type64='UIDynamicBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateItemUsingCurrentState:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIDynamicBehavior'>
<method selector='action'>
<retval declared_type64='void (^ _Nullable)(void)' function_pointer='true' type64='@?'>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method selector='addChildBehavior:'>
<arg declared_type64='UIDynamicBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='childBehaviors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='dynamicAnimator'>
<retval declared_type64='UIDynamicAnimator * _Nullable' type64='@'/>
</method>
<method selector='removeChildBehavior:'>
<arg declared_type64='UIDynamicBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAction:'>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='0' name='action' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willMoveToAnimator:'>
<arg declared_type64='UIDynamicAnimator * _Nullable' index='0' name='dynamicAnimator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIDynamicItemBehavior'>
<method selector='addAngularVelocity:forItem:'>
<arg declared_type64='CGFloat' index='0' name='velocity' type64='d'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addLinearVelocity:forItem:'>
<arg declared_type64='CGPoint' index='0' name='velocity' type64='{CGPoint=dd}'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowsRotation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='angularResistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='angularVelocityForItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='charge'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='density'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='elasticity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='friction'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='initWithItems:'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isAnchored'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='linearVelocityForItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='removeItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAllowsRotation:'>
<arg declared_type64='BOOL' index='0' name='allowsRotation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnchored:'>
<arg declared_type64='BOOL' index='0' name='anchored' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAngularResistance:'>
<arg declared_type64='CGFloat' index='0' name='angularResistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCharge:'>
<arg declared_type64='CGFloat' index='0' name='charge' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDensity:'>
<arg declared_type64='CGFloat' index='0' name='density' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setElasticity:'>
<arg declared_type64='CGFloat' index='0' name='elasticity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFriction:'>
<arg declared_type64='CGFloat' index='0' name='friction' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setResistance:'>
<arg declared_type64='CGFloat' index='0' name='resistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIDynamicItemGroup'>
<method selector='initWithItems:'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIEvent'>
<method selector='allTouches'>
<retval declared_type64='NSSet * _Nullable' type64='@'/>
</method>
<method selector='coalescedTouchesForTouch:'>
<arg declared_type64='UITouch * _Nonnull' index='0' name='touch' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='predictedTouchesForTouch:'>
<arg declared_type64='UITouch * _Nonnull' index='0' name='touch' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='subtype'>
<retval declared_type64='UIEventSubtype' type64='q'/>
</method>
<method selector='timestamp'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='touchesForGestureRecognizer:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gesture' type64='@'/>
<retval declared_type64='NSSet * _Nullable' type64='@'/>
</method>
<method selector='touchesForView:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='NSSet * _Nullable' type64='@'/>
</method>
<method selector='touchesForWindow:'>
<arg declared_type64='UIWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='NSSet * _Nullable' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='UIEventType' type64='q'/>
</method>
</class>
<class name='UIFieldBehavior'>
<method selector='addItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationSpeed'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='direction'>
<retval declared_type64='CGVector' type64='{CGVector=dd}'/>
</method>
<method class_method='true' selector='dragField'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='electricField'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='falloff'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='fieldWithEvaluationBlock:'>
<arg declared_type64='CGVector (^ _Nonnull)(UIFieldBehavior * _Nonnull, CGPoint, CGVector, CGFloat, CGFloat, NSTimeInterval)' function_pointer='true' index='0' name='block' type64='@?'>
<arg declared_type64='UIFieldBehavior * _Nonnull' type64='@'/>
<arg declared_type64='CGPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='CGVector' type64='{CGVector=dd}'/>
<arg declared_type64='CGFloat' type64='d'/>
<arg declared_type64='CGFloat' type64='d'/>
<arg declared_type64='NSTimeInterval' type64='d'/>
<retval declared_type64='CGVector' type64='{CGVector=dd}'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='linearGravityFieldWithVector:'>
<arg declared_type64='CGVector' index='0' name='direction' type64='{CGVector=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='magneticField'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='minimumRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='noiseFieldWithSmoothness:animationSpeed:'>
<arg declared_type64='CGFloat' index='0' name='smoothness' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='speed' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='position'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='radialGravityFieldWithPosition:'>
<arg declared_type64='CGPoint' index='0' name='position' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='region'>
<retval declared_type64='UIRegion * _Nonnull' type64='@'/>
</method>
<method selector='removeItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimationSpeed:'>
<arg declared_type64='CGFloat' index='0' name='animationSpeed' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDirection:'>
<arg declared_type64='CGVector' index='0' name='direction' type64='{CGVector=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFalloff:'>
<arg declared_type64='CGFloat' index='0' name='falloff' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumRadius:'>
<arg declared_type64='CGFloat' index='0' name='minimumRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPosition:'>
<arg declared_type64='CGPoint' index='0' name='position' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRegion:'>
<arg declared_type64='UIRegion * _Nonnull' index='0' name='region' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSmoothness:'>
<arg declared_type64='CGFloat' index='0' name='smoothness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStrength:'>
<arg declared_type64='CGFloat' index='0' name='strength' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='smoothness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='springField'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='strength'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='turbulenceFieldWithSmoothness:animationSpeed:'>
<arg declared_type64='CGFloat' index='0' name='smoothness' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='speed' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='velocityFieldWithVector:'>
<arg declared_type64='CGVector' index='0' name='direction' type64='{CGVector=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='vortexField'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='UIFocusAnimationCoordinator'>
<method selector='addCoordinatedAnimations:completion:'>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='0' name='animations' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='completion' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIFocusGuide'>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='preferredFocusedView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredFocusedView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='preferredFocusedView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIFocusUpdateContext'>
<method selector='focusHeading'>
<retval declared_type64='UIFocusHeading' type64='Q'/>
</method>
<method selector='nextFocusedView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='previouslyFocusedView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
</class>
<class name='UIFont'>
<method selector='ascender'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='boldSystemFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='UIFont * _Nonnull' type64='@'/>
</method>
<method selector='capHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='descender'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='familyName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='familyNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptor'>
<retval declared_type64='UIFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontNamesForFamilyName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='familyName' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontWithDescriptor:size:'>
<arg declared_type64='UIFontDescriptor * _Nonnull' index='0' name='descriptor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='pointSize' type64='d'/>
<retval declared_type64='UIFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontWithName:size:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fontName' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='fontSize' type64='d'/>
<retval declared_type64='UIFont * _Nullable' type64='@'/>
</method>
<method selector='fontWithSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='UIFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='italicSystemFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='UIFont * _Nonnull' type64='@'/>
</method>
<method selector='leading'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lineHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='monospacedDigitSystemFontOfSize:weight:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='weight' type64='d'/>
<retval declared_type64='UIFont * _Nonnull' type64='@'/>
</method>
<method selector='pointSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='preferredFontForTextStyle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='style' type64='@'/>
<retval declared_type64='UIFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='UIFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemFontOfSize:weight:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='weight' type64='d'/>
<retval declared_type64='UIFont * _Nonnull' type64='@'/>
</method>
<method selector='xHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='UIFontDescriptor'>
<method selector='fontAttributes'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorByAddingAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='attributes' type64='@'/>
<retval declared_type64='UIFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorWithFace:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='newFace' type64='@'/>
<retval declared_type64='UIFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorWithFamily:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='newFamily' type64='@'/>
<retval declared_type64='UIFontDescriptor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithFontAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='attributes' type64='@'/>
<retval declared_type64='UIFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorWithMatrix:'>
<arg declared_type64='CGAffineTransform' index='0' name='matrix' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='UIFontDescriptor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithName:matrix:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fontName' type64='@'/>
<arg declared_type64='CGAffineTransform' index='1' name='matrix' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='UIFontDescriptor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithName:size:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fontName' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='size' type64='d'/>
<retval declared_type64='UIFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorWithSize:'>
<arg declared_type64='CGFloat' index='0' name='newPointSize' type64='d'/>
<retval declared_type64='UIFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorWithSymbolicTraits:'>
<arg declared_type64='UIFontDescriptorSymbolicTraits' index='0' name='symbolicTraits' type64='I'/>
<retval declared_type64='UIFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFontAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='attributes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='matchingFontDescriptorsWithMandatoryKeys:'>
<arg declared_type64='NSSet * _Nullable' index='0' name='mandatoryKeys' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='matrix'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='objectForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='anAttribute' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='pointSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='postscriptName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='preferredFontDescriptorWithTextStyle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='style' type64='@'/>
<retval declared_type64='UIFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='symbolicTraits'>
<retval declared_type64='UIFontDescriptorSymbolicTraits' type64='I'/>
</method>
</class>
<class name='UIGestureRecognizer'>
<method selector='addTarget:action:'>
<arg declared_type64='id _Nonnull' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowedPressTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='allowedTouchTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='canBePreventedByGestureRecognizer:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='preventingGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPreventGestureRecognizer:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='preventedGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelsTouchesInView'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delaysTouchesBegan'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delaysTouchesEnded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='ignorePress:forEvent:'>
<arg declared_type64='UIPress * _Nonnull' index='0' name='button' type64='@'/>
<arg declared_type64='UIPressesEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ignoreTouch:forEvent:'>
<arg declared_type64='UITouch * _Nonnull' index='0' name='touch' type64='@'/>
<arg declared_type64='UIEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithTarget:action:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='locationInView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='locationOfTouch:inView:'>
<arg declared_type64='NSUInteger' index='0' name='touchIndex' type64='Q'/>
<arg declared_type64='UIView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='numberOfTouches'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='pressesBegan:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='presses' type64='@'/>
<arg declared_type64='UIPressesEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pressesCancelled:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='presses' type64='@'/>
<arg declared_type64='UIPressesEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pressesChanged:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='presses' type64='@'/>
<arg declared_type64='UIPressesEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pressesEnded:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='presses' type64='@'/>
<arg declared_type64='UIPressesEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTarget:action:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requireGestureRecognizerToFail:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowedPressTypes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='allowedPressTypes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowedTouchTypes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='allowedTouchTypes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCancelsTouchesInView:'>
<arg declared_type64='BOOL' index='0' name='cancelsTouchesInView' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelaysTouchesBegan:'>
<arg declared_type64='BOOL' index='0' name='delaysTouchesBegan' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelaysTouchesEnded:'>
<arg declared_type64='BOOL' index='0' name='delaysTouchesEnded' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setState:'>
<arg declared_type64='UIGestureRecognizerState' index='0' name='state' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldBeRequiredToFailByGestureRecognizer:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldRequireFailureOfGestureRecognizer:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='state'>
<retval declared_type64='UIGestureRecognizerState' type64='q'/>
</method>
<method selector='touchesBegan:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='touches' type64='@'/>
<arg declared_type64='UIEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesCancelled:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='touches' type64='@'/>
<arg declared_type64='UIEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesEnded:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='touches' type64='@'/>
<arg declared_type64='UIEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesEstimatedPropertiesUpdated:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='touches' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesMoved:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='touches' type64='@'/>
<arg declared_type64='UIEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='view'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
</class>
<class name='UIGravityBehavior'>
<method selector='addItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='angle'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='gravityDirection'>
<retval declared_type64='CGVector' type64='{CGVector=dd}'/>
</method>
<method selector='initWithItems:'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='magnitude'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='removeItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAngle:'>
<arg declared_type64='CGFloat' index='0' name='angle' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAngle:magnitude:'>
<arg declared_type64='CGFloat' index='0' name='angle' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='magnitude' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGravityDirection:'>
<arg declared_type64='CGVector' index='0' name='gravityDirection' type64='{CGVector=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMagnitude:'>
<arg declared_type64='CGFloat' index='0' name='magnitude' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIImage'>
<method selector='CGImage'>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='CIImage'>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method selector='alignmentRectInsets'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method class_method='true' selector='animatedImageNamed:duration:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='duration' type64='d'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='animatedImageWithImages:duration:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='images' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='duration' type64='d'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='animatedResizableImageNamed:capInsets:duration:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='UIEdgeInsets' index='1' name='capInsets' type64='{UIEdgeInsets=dddd}'/>
<arg declared_type64='NSTimeInterval' index='2' name='duration' type64='d'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='animatedResizableImageNamed:capInsets:resizingMode:duration:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='UIEdgeInsets' index='1' name='capInsets' type64='{UIEdgeInsets=dddd}'/>
<arg declared_type64='UIImageResizingMode' index='2' name='resizingMode' type64='q'/>
<arg declared_type64='NSTimeInterval' index='3' name='duration' type64='d'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='capInsets'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='drawAsPatternInRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawAtPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawAtPoint:blendMode:alpha:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='CGBlendMode' index='1' name='blendMode' type64='i'/>
<arg declared_type64='CGFloat' index='2' name='alpha' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:blendMode:alpha:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGBlendMode' index='1' name='blendMode' type64='i'/>
<arg declared_type64='CGFloat' index='2' name='alpha' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='duration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='flipsForRightToLeftLayoutDirection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='imageAsset'>
<retval declared_type64='UIImageAsset * _Nullable' type64='@'/>
</method>
<method selector='imageFlippedForRightToLeftLayoutDirection'>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageNamed:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageNamed:inBundle:compatibleWithTraitCollection:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='bundle' type64='@'/>
<arg declared_type64='UITraitCollection * _Nullable' index='2' name='traitCollection' type64='@'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='imageOrientation'>
<retval declared_type64='UIImageOrientation' type64='q'/>
</method>
<method selector='imageWithAlignmentRectInsets:'>
<arg declared_type64='UIEdgeInsets' index='0' name='alignmentInsets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCGImage:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='cgImage' type64='^{CGImage=}'/>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCGImage:scale:orientation:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='cgImage' type64='^{CGImage=}'/>
<arg declared_type64='CGFloat' index='1' name='scale' type64='d'/>
<arg declared_type64='UIImageOrientation' index='2' name='orientation' type64='q'/>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCIImage:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='ciImage' type64='@'/>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCIImage:scale:orientation:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='ciImage' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='scale' type64='d'/>
<arg declared_type64='UIImageOrientation' index='2' name='orientation' type64='q'/>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithContentsOfFile:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='path' type64='@'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageWithData:scale:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='scale' type64='d'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='imageWithRenderingMode:'>
<arg declared_type64='UIImageRenderingMode' index='0' name='renderingMode' type64='q'/>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method selector='images'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='initWithCGImage:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='cgImage' type64='^{CGImage=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCGImage:scale:orientation:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='cgImage' type64='^{CGImage=}'/>
<arg declared_type64='CGFloat' index='1' name='scale' type64='d'/>
<arg declared_type64='UIImageOrientation' index='2' name='orientation' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCIImage:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='ciImage' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCIImage:scale:orientation:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='ciImage' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='scale' type64='d'/>
<arg declared_type64='UIImageOrientation' index='2' name='orientation' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='path' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:scale:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='scale' type64='d'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='renderingMode'>
<retval declared_type64='UIImageRenderingMode' type64='q'/>
</method>
<method selector='resizableImageWithCapInsets:'>
<arg declared_type64='UIEdgeInsets' index='0' name='capInsets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method selector='resizableImageWithCapInsets:resizingMode:'>
<arg declared_type64='UIEdgeInsets' index='0' name='capInsets' type64='{UIEdgeInsets=dddd}'/>
<arg declared_type64='UIImageResizingMode' index='1' name='resizingMode' type64='q'/>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method selector='resizingMode'>
<retval declared_type64='UIImageResizingMode' type64='q'/>
</method>
<method selector='scale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='size'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='traitCollection'>
<retval declared_type64='UITraitCollection * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIImageAsset'>
<method selector='imageWithTraitCollection:'>
<arg declared_type64='UITraitCollection * _Nonnull' index='0' name='traitCollection' type64='@'/>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='registerImage:withTraitCollection:'>
<arg declared_type64='UIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='UITraitCollection * _Nonnull' index='1' name='traitCollection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unregisterImageWithTraitCollection:'>
<arg declared_type64='UITraitCollection * _Nonnull' index='0' name='traitCollection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIImageView'>
<method selector='adjustsImageWhenAncestorFocused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='animationDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='animationImages'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='animationRepeatCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='focusedFrameGuide'>
<retval declared_type64='UILayoutGuide * _Nonnull' type64='@'/>
</method>
<method selector='highlightedAnimationImages'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='highlightedImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='image'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='initWithImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithImage:highlightedImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='UIImage * _Nullable' index='1' name='highlightedImage' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isAnimating'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isUserInteractionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAdjustsImageWhenAncestorFocused:'>
<arg declared_type64='BOOL' index='0' name='adjustsImageWhenAncestorFocused' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimationDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='animationDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimationImages:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='animationImages' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimationRepeatCount:'>
<arg declared_type64='NSInteger' index='0' name='animationRepeatCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type64='BOOL' index='0' name='highlighted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlightedAnimationImages:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='highlightedAnimationImages' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlightedImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='highlightedImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='tintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUserInteractionEnabled:'>
<arg declared_type64='BOOL' index='0' name='userInteractionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startAnimating'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopAnimating'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tintColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIInputView'>
<method selector='allowsSelfSizing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:inputViewStyle:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIInputViewStyle' index='1' name='inputViewStyle' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputViewStyle'>
<retval declared_type64='UIInputViewStyle' type64='q'/>
</method>
<method selector='setAllowsSelfSizing:'>
<arg declared_type64='BOOL' index='0' name='allowsSelfSizing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIInputViewController'>
<method selector='advanceToNextInputMode'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dismissKeyboard'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='inputView'>
<retval declared_type64='UIInputView * _Nullable' type64='@'/>
</method>
<method selector='primaryLanguage'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='requestSupplementaryLexiconWithCompletion:'>
<arg declared_type64='void (^ _Nonnull)(UILexicon * _Nonnull)' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<arg declared_type64='UILexicon * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputView:'>
<arg declared_type64='UIInputView * _Nullable' index='0' name='inputView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrimaryLanguage:'>
<arg declared_type64='NSString * _Nullable' index='0' name='primaryLanguage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDocumentProxy'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
</class>
<class name='UIInterpolatingMotionEffect'>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithKeyPath:type:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='keyPath' type64='@'/>
<arg declared_type64='UIInterpolatingMotionEffectType' index='1' name='type' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='keyPath'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='maximumRelativeValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='minimumRelativeValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setMaximumRelativeValue:'>
<arg declared_type64='id _Nullable' index='0' name='maximumRelativeValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumRelativeValue:'>
<arg declared_type64='id _Nullable' index='0' name='minimumRelativeValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='type'>
<retval declared_type64='UIInterpolatingMotionEffectType' type64='q'/>
</method>
</class>
<class name='UIKeyCommand'>
<method selector='discoverabilityTitle'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='input'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='keyCommandWithInput:modifierFlags:action:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='UIKeyModifierFlags' index='1' name='modifierFlags' type64='q'/>
<arg declared_type64='SEL _Nonnull' index='2' name='action' type64=':'/>
<retval declared_type64='UIKeyCommand * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='keyCommandWithInput:modifierFlags:action:discoverabilityTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='UIKeyModifierFlags' index='1' name='modifierFlags' type64='q'/>
<arg declared_type64='SEL _Nonnull' index='2' name='action' type64=':'/>
<arg declared_type64='NSString * _Nonnull' index='3' name='discoverabilityTitle' type64='@'/>
<retval declared_type64='UIKeyCommand * _Nonnull' type64='@'/>
</method>
<method selector='modifierFlags'>
<retval declared_type64='UIKeyModifierFlags' type64='q'/>
</method>
<method selector='setDiscoverabilityTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='discoverabilityTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UILabel'>
<method selector='adjustsFontSizeToFitWidth'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='attributedText'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='baselineAdjustment'>
<retval declared_type64='UIBaselineAdjustment' type64='q'/>
</method>
<method selector='drawTextInRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='font'>
<retval declared_type64='UIFont * _Nonnull' type64='@'/>
</method>
<method selector='highlightedTextColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isUserInteractionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type64='NSLineBreakMode' type64='q'/>
</method>
<method selector='minimumScaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='numberOfLines'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='preferredMaxLayoutWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAdjustsFontSizeToFitWidth:'>
<arg declared_type64='BOOL' index='0' name='adjustsFontSizeToFitWidth' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsDefaultTighteningForTruncation:'>
<arg declared_type64='BOOL' index='0' name='allowsDefaultTighteningForTruncation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedText:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='attributedText' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBaselineAdjustment:'>
<arg declared_type64='UIBaselineAdjustment' index='0' name='baselineAdjustment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:'>
<arg declared_type64='UIFont * _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type64='BOOL' index='0' name='highlighted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlightedTextColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='highlightedTextColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type64='NSLineBreakMode' index='0' name='lineBreakMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumScaleFactor:'>
<arg declared_type64='CGFloat' index='0' name='minimumScaleFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfLines:'>
<arg declared_type64='NSInteger' index='0' name='numberOfLines' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMaxLayoutWidth:'>
<arg declared_type64='CGFloat' index='0' name='preferredMaxLayoutWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='shadowColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowOffset:'>
<arg declared_type64='CGSize' index='0' name='shadowOffset' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setText:'>
<arg declared_type64='NSString * _Nullable' index='0' name='text' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type64='NSTextAlignment' index='0' name='textAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='textColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUserInteractionEnabled:'>
<arg declared_type64='BOOL' index='0' name='userInteractionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shadowColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='shadowOffset'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='text'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='textAlignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='textColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='textRectForBounds:limitedToNumberOfLines:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSInteger' index='1' name='numberOfLines' type64='q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='UILayoutGuide'>
<method selector='bottomAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='centerXAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='centerYAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='heightAnchor'>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='layoutFrame'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='leadingAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='leftAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='owningView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='rightAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOwningView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='owningView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='topAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='trailingAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='widthAnchor'>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
</class>
<class name='UILongPressGestureRecognizer'>
<method selector='allowableMovement'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumPressDuration'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='numberOfTapsRequired'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='setAllowableMovement:'>
<arg declared_type64='CGFloat' index='0' name='allowableMovement' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumPressDuration:'>
<arg declared_type64='CFTimeInterval' index='0' name='minimumPressDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfTapsRequired:'>
<arg declared_type64='NSUInteger' index='0' name='numberOfTapsRequired' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIMotionEffect'>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='keyPathsAndRelativeValuesForViewerOffset:'>
<arg declared_type64='UIOffset' index='0' name='viewerOffset' type64='{UIOffset=dd}'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
</class>
<class name='UIMotionEffectGroup'>
<method selector='motionEffects'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='setMotionEffects:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='motionEffects' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UINavigationBar'>
<method selector='backItem'>
<retval declared_type64='UINavigationItem * _Nullable' type64='@'/>
</method>
<method selector='backgroundImageForBarMetrics:'>
<arg declared_type64='UIBarMetrics' index='0' name='barMetrics' type64='q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='backgroundImageForBarPosition:barMetrics:'>
<arg declared_type64='UIBarPosition' index='0' name='barPosition' type64='q'/>
<arg declared_type64='UIBarMetrics' index='1' name='barMetrics' type64='q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='barTintColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='isTranslucent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='popNavigationItemAnimated:'>
<arg declared_type64='BOOL' index='0' name='animated' type64='B'/>
<retval declared_type64='UINavigationItem * _Nullable' type64='@'/>
</method>
<method selector='pushNavigationItem:animated:'>
<arg declared_type64='UINavigationItem * _Nonnull' index='0' name='item' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundImage:forBarMetrics:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='backgroundImage' type64='@'/>
<arg declared_type64='UIBarMetrics' index='1' name='barMetrics' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundImage:forBarPosition:barMetrics:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='backgroundImage' type64='@'/>
<arg declared_type64='UIBarPosition' index='1' name='barPosition' type64='q'/>
<arg declared_type64='UIBarMetrics' index='2' name='barMetrics' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBarTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='barTintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItems:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='items' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItems:animated:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='items' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='shadowImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='tintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleTextAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='titleTextAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleVerticalPositionAdjustment:forBarMetrics:'>
<arg declared_type64='CGFloat' index='0' name='adjustment' type64='d'/>
<arg declared_type64='UIBarMetrics' index='1' name='barMetrics' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTranslucent:'>
<arg declared_type64='BOOL' index='0' name='translucent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shadowImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='tintColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='titleTextAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='titleVerticalPositionAdjustmentForBarMetrics:'>
<arg declared_type64='UIBarMetrics' index='0' name='barMetrics' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='topItem'>
<retval declared_type64='UINavigationItem * _Nullable' type64='@'/>
</method>
</class>
<class name='UINavigationController'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='initWithNavigationBarClass:toolbarClass:'>
<arg declared_type64='Class _Nullable' index='0' name='navigationBarClass' type64='#'/>
<arg declared_type64='Class _Nullable' index='1' name='toolbarClass' type64='#'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithRootViewController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='rootViewController' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isNavigationBarHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='navigationBar'>
<retval declared_type64='UINavigationBar * _Nonnull' type64='@'/>
</method>
<method selector='popToRootViewControllerAnimated:'>
<arg declared_type64='BOOL' index='0' name='animated' type64='B'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='popToViewController:animated:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='popViewControllerAnimated:'>
<arg declared_type64='BOOL' index='0' name='animated' type64='B'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='pushViewController:animated:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNavigationBarHidden:'>
<arg declared_type64='BOOL' index='0' name='navigationBarHidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNavigationBarHidden:animated:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setViewControllers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='viewControllers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setViewControllers:animated:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='viewControllers' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showViewController:sender:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='vc' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='topViewController'>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='viewControllers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='visibleViewController'>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
</class>
<class name='UINavigationItem'>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='leftBarButtonItem'>
<retval declared_type64='UIBarButtonItem * _Nullable' type64='@'/>
</method>
<method selector='leftBarButtonItems'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='rightBarButtonItem'>
<retval declared_type64='UIBarButtonItem * _Nullable' type64='@'/>
</method>
<method selector='rightBarButtonItems'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='setLeftBarButtonItem:'>
<arg declared_type64='UIBarButtonItem * _Nullable' index='0' name='leftBarButtonItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLeftBarButtonItem:animated:'>
<arg declared_type64='UIBarButtonItem * _Nullable' index='0' name='item' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLeftBarButtonItems:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='leftBarButtonItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLeftBarButtonItems:animated:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='items' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRightBarButtonItem:'>
<arg declared_type64='UIBarButtonItem * _Nullable' index='0' name='rightBarButtonItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRightBarButtonItem:animated:'>
<arg declared_type64='UIBarButtonItem * _Nullable' index='0' name='item' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRightBarButtonItems:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='rightBarButtonItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRightBarButtonItems:animated:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='items' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='titleView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='titleView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
</class>
<class name='UINib'>
<method selector='instantiateWithOwner:options:'>
<arg declared_type64='id _Nullable' index='0' name='ownerOrNil' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='optionsOrNil' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='nibWithData:bundle:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='bundleOrNil' type64='@'/>
<retval declared_type64='UINib * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='nibWithNibName:bundle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='bundleOrNil' type64='@'/>
<retval declared_type64='UINib * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIPageControl'>
<method selector='currentPage'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='currentPageIndicatorTintColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='defersCurrentPageDisplay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hidesForSinglePage'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='numberOfPages'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='pageIndicatorTintColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='setCurrentPage:'>
<arg declared_type64='NSInteger' index='0' name='currentPage' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCurrentPageIndicatorTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='currentPageIndicatorTintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefersCurrentPageDisplay:'>
<arg declared_type64='BOOL' index='0' name='defersCurrentPageDisplay' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidesForSinglePage:'>
<arg declared_type64='BOOL' index='0' name='hidesForSinglePage' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfPages:'>
<arg declared_type64='NSInteger' index='0' name='numberOfPages' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPageIndicatorTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='pageIndicatorTintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeForNumberOfPages:'>
<arg declared_type64='NSInteger' index='0' name='pageCount' type64='q'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='updateCurrentPageDisplay'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIPageViewController'>
<method selector='dataSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='gestureRecognizers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithTransitionStyle:navigationOrientation:options:'>
<arg declared_type64='UIPageViewControllerTransitionStyle' index='0' name='style' type64='q'/>
<arg declared_type64='UIPageViewControllerNavigationOrientation' index='1' name='navigationOrientation' type64='q'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isDoubleSided'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='navigationOrientation'>
<retval declared_type64='UIPageViewControllerNavigationOrientation' type64='q'/>
</method>
<method selector='setDataSource:'>
<arg declared_type64='id _Nullable' index='0' name='dataSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleSided:'>
<arg declared_type64='BOOL' index='0' name='doubleSided' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setViewControllers:direction:animated:completion:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='viewControllers' type64='@'/>
<arg declared_type64='UIPageViewControllerNavigationDirection' index='1' name='direction' type64='q'/>
<arg declared_type64='BOOL' index='2' name='animated' type64='B'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='3' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='spineLocation'>
<retval declared_type64='UIPageViewControllerSpineLocation' type64='q'/>
</method>
<method selector='transitionStyle'>
<retval declared_type64='UIPageViewControllerTransitionStyle' type64='q'/>
</method>
<method selector='viewControllers'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='UIPanGestureRecognizer'>
<method selector='setTranslation:inView:'>
<arg declared_type64='CGPoint' index='0' name='translation' type64='{CGPoint=dd}'/>
<arg declared_type64='UIView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='translationInView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='velocityInView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='UIPercentDrivenInteractiveTransition'>
<method selector='cancelInteractiveTransition'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='completionCurve'>
<retval declared_type64='UIViewAnimationCurve' type64='q'/>
</method>
<method selector='completionSpeed'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='duration'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='finishInteractiveTransition'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='percentComplete'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setCompletionCurve:'>
<arg declared_type64='UIViewAnimationCurve' index='0' name='completionCurve' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCompletionSpeed:'>
<arg declared_type64='CGFloat' index='0' name='completionSpeed' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateInteractiveTransition:'>
<arg declared_type64='CGFloat' index='0' name='percentComplete' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIPopoverBackgroundView'>
<method selector='arrowDirection'>
<retval declared_type64='UIPopoverArrowDirection' type64='Q'/>
</method>
<method selector='arrowOffset'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setArrowDirection:'>
<arg declared_type64='UIPopoverArrowDirection' index='0' name='arrowDirection' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setArrowOffset:'>
<arg declared_type64='CGFloat' index='0' name='arrowOffset' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='wantsDefaultContentAppearance'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='UIPopoverController'>
<method selector='backgroundColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='contentViewController'>
<retval declared_type64='UIViewController * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='dismissPopoverAnimated:'>
<arg declared_type64='BOOL' index='0' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithContentViewController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isPopoverVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='passthroughViews'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='popoverArrowDirection'>
<retval declared_type64='UIPopoverArrowDirection' type64='Q'/>
</method>
<method selector='popoverBackgroundViewClass'>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method selector='popoverContentSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='popoverLayoutMargins'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='presentPopoverFromBarButtonItem:permittedArrowDirections:animated:'>
<arg declared_type64='UIBarButtonItem * _Nonnull' index='0' name='item' type64='@'/>
<arg declared_type64='UIPopoverArrowDirection' index='1' name='arrowDirections' type64='Q'/>
<arg declared_type64='BOOL' index='2' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentPopoverFromRect:inView:permittedArrowDirections:animated:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='UIPopoverArrowDirection' index='2' name='arrowDirections' type64='Q'/>
<arg declared_type64='BOOL' index='3' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentViewController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='contentViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentViewController:animated:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPassthroughViews:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='passthroughViews' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPopoverBackgroundViewClass:'>
<arg declared_type64='Class _Nullable' index='0' name='popoverBackgroundViewClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPopoverContentSize:'>
<arg declared_type64='CGSize' index='0' name='popoverContentSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPopoverContentSize:animated:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPopoverLayoutMargins:'>
<arg declared_type64='UIEdgeInsets' index='0' name='popoverLayoutMargins' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIPresentationController'>
<method selector='adaptivePresentationStyle'>
<retval declared_type64='UIModalPresentationStyle' type64='q'/>
</method>
<method selector='adaptivePresentationStyleForTraitCollection:'>
<arg declared_type64='UITraitCollection * _Nonnull' index='0' name='traitCollection' type64='@'/>
<retval declared_type64='UIModalPresentationStyle' type64='q'/>
</method>
<method selector='containerView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='containerViewDidLayoutSubviews'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='containerViewWillLayoutSubviews'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='dismissalTransitionDidEnd:'>
<arg declared_type64='BOOL' index='0' name='completed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dismissalTransitionWillBegin'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='frameOfPresentedViewInContainerView'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initWithPresentedViewController:presentingViewController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='presentedViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='presentingViewController' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='overrideTraitCollection'>
<retval declared_type64='UITraitCollection * _Nullable' type64='@'/>
</method>
<method selector='presentationStyle'>
<retval declared_type64='UIModalPresentationStyle' type64='q'/>
</method>
<method selector='presentationTransitionDidEnd:'>
<arg declared_type64='BOOL' index='0' name='completed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentationTransitionWillBegin'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentedView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='presentedViewController'>
<retval declared_type64='UIViewController * _Nonnull' type64='@'/>
</method>
<method selector='presentingViewController'>
<retval declared_type64='UIViewController * _Nonnull' type64='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOverrideTraitCollection:'>
<arg declared_type64='UITraitCollection * _Nullable' index='0' name='overrideTraitCollection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldPresentInFullscreen'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldRemovePresentersView'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='UIPress'>
<method selector='force'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='gestureRecognizers'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='phase'>
<retval declared_type64='UIPressPhase' type64='q'/>
</method>
<method selector='responder'>
<retval declared_type64='UIResponder * _Nullable' type64='@'/>
</method>
<method selector='timestamp'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='type'>
<retval declared_type64='UIPressType' type64='q'/>
</method>
<method selector='window'>
<retval declared_type64='UIWindow * _Nullable' type64='@'/>
</method>
</class>
<class name='UIPressesEvent'>
<method selector='allPresses'>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='pressesForGestureRecognizer:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gesture' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIPreviewAction'>
<method class_method='true' selector='actionWithTitle:style:handler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='UIPreviewActionStyle' index='1' name='style' type64='q'/>
<arg declared_type64='void (^ _Nonnull)(UIPreviewAction * _Nonnull, UIViewController * _Nonnull)' function_pointer='true' index='2' name='handler' type64='@?'>
<arg declared_type64='UIPreviewAction * _Nonnull' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='handler'>
<retval declared_type64='void (^ _Nonnull)(id _Nonnull, UIViewController * _Nonnull)' function_pointer='true' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
</class>
<class name='UIPreviewActionGroup'>
<method class_method='true' selector='actionGroupWithTitle:style:actions:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='UIPreviewActionStyle' index='1' name='style' type64='q'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='actions' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='UIProgressView'>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithProgressViewStyle:'>
<arg declared_type64='UIProgressViewStyle' index='0' name='style' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='observedProgress'>
<retval declared_type64='NSProgress * _Nullable' type64='@'/>
</method>
<method selector='progress'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='progressImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='progressTintColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='progressViewStyle'>
<retval declared_type64='UIProgressViewStyle' type64='q'/>
</method>
<method selector='setObservedProgress:'>
<arg declared_type64='NSProgress * _Nullable' index='0' name='observedProgress' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type64='float' index='0' name='progress' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProgress:animated:'>
<arg declared_type64='float' index='0' name='progress' type64='f'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProgressImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='progressImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProgressTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='progressTintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProgressViewStyle:'>
<arg declared_type64='UIProgressViewStyle' index='0' name='progressViewStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTrackImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='trackImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTrackTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='trackTintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trackImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='trackTintColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
</class>
<class name='UIPushBehavior'>
<method selector='active'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='addItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='angle'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='initWithItems:mode:'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='items' type64='@'/>
<arg declared_type64='UIPushBehaviorMode' index='1' name='mode' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='magnitude'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='mode'>
<retval declared_type64='UIPushBehaviorMode' type64='q'/>
</method>
<method selector='pushDirection'>
<retval declared_type64='CGVector' type64='{CGVector=dd}'/>
</method>
<method selector='removeItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setActive:'>
<arg declared_type64='BOOL' index='0' name='active' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAngle:'>
<arg declared_type64='CGFloat' index='0' name='angle' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAngle:magnitude:'>
<arg declared_type64='CGFloat' index='0' name='angle' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='magnitude' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMagnitude:'>
<arg declared_type64='CGFloat' index='0' name='magnitude' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPushDirection:'>
<arg declared_type64='CGVector' index='0' name='pushDirection' type64='{CGVector=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTargetOffsetFromCenter:forItem:'>
<arg declared_type64='UIOffset' index='0' name='o' type64='{UIOffset=dd}'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='targetOffsetFromCenterForItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='UIOffset' type64='{UIOffset=dd}'/>
</method>
</class>
<class name='UIRegion'>
<method selector='containsPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='infiniteRegion'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithRadius:'>
<arg declared_type64='CGFloat' index='0' name='radius' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSize:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inverseRegion'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='regionByDifferenceFromRegion:'>
<arg declared_type64='UIRegion * _Nonnull' index='0' name='region' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='regionByIntersectionWithRegion:'>
<arg declared_type64='UIRegion * _Nonnull' index='0' name='region' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='regionByUnionWithRegion:'>
<arg declared_type64='UIRegion * _Nonnull' index='0' name='region' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='UIResponder'>
<method selector='becomeFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canBecomeFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPerformAction:withSender:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canResignFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='clearTextInputContextIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='inputAccessoryView'>
<retval declared_type64='__kindof UIView * _Nullable' type64='@'/>
</method>
<method selector='inputAccessoryViewController'>
<retval declared_type64='UIInputViewController * _Nullable' type64='@'/>
</method>
<method selector='inputView'>
<retval declared_type64='__kindof UIView * _Nullable' type64='@'/>
</method>
<method selector='inputViewController'>
<retval declared_type64='UIInputViewController * _Nullable' type64='@'/>
</method>
<method selector='isFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyCommands'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='motionBegan:withEvent:'>
<arg declared_type64='UIEventSubtype' index='0' name='motion' type64='q'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='motionCancelled:withEvent:'>
<arg declared_type64='UIEventSubtype' index='0' name='motion' type64='q'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='motionEnded:withEvent:'>
<arg declared_type64='UIEventSubtype' index='0' name='motion' type64='q'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='nextResponder'>
<retval declared_type64='UIResponder * _Nullable' type64='@'/>
</method>
<method selector='pressesBegan:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='presses' type64='@'/>
<arg declared_type64='UIPressesEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pressesCancelled:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='presses' type64='@'/>
<arg declared_type64='UIPressesEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pressesChanged:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='presses' type64='@'/>
<arg declared_type64='UIPressesEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pressesEnded:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='presses' type64='@'/>
<arg declared_type64='UIPressesEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadInputViews'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='remoteControlReceivedWithEvent:'>
<arg declared_type64='UIEvent * _Nullable' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resignFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='restoreUserActivityState:'>
<arg declared_type64='NSUserActivity * _Nonnull' index='0' name='activity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUserActivity:'>
<arg declared_type64='NSUserActivity * _Nullable' index='0' name='userActivity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='targetForAction:withSender:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='textInputContextIdentifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='textInputMode'>
<retval declared_type64='UITextInputMode * _Nullable' type64='@'/>
</method>
<method selector='touchesBegan:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='touches' type64='@'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesCancelled:withEvent:'>
<arg declared_type64='NSSet * _Nullable' index='0' name='touches' type64='@'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesEnded:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='touches' type64='@'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesEstimatedPropertiesUpdated:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='touches' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesMoved:withEvent:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='touches' type64='@'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='undoManager'>
<retval declared_type64='NSUndoManager * _Nullable' type64='@'/>
</method>
<method selector='updateUserActivityState:'>
<arg declared_type64='NSUserActivity * _Nonnull' index='0' name='activity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userActivity'>
<retval declared_type64='NSUserActivity * _Nullable' type64='@'/>
</method>
</class>
<class name='UIScreen'>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='coordinateSpace'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='currentMode'>
<retval declared_type64='UIScreenMode * _Nullable' type64='@'/>
</method>
<method selector='displayLinkWithTarget:selector:'>
<arg declared_type64='id _Nonnull' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='sel' type64=':'/>
<retval declared_type64='CADisplayLink * _Nullable' type64='@'/>
</method>
<method selector='fixedCoordinateSpace'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='focusedView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='mainScreen'>
<retval declared_type64='UIScreen * _Nonnull' type64='@'/>
</method>
<method selector='mirroredScreen'>
<retval declared_type64='UIScreen * _Nullable' type64='@'/>
</method>
<method selector='nativeBounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='nativeScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='overscanCompensation'>
<retval declared_type64='UIScreenOverscanCompensation' type64='q'/>
</method>
<method selector='overscanCompensationInsets'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='scale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='screens'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setOverscanCompensation:'>
<arg declared_type64='UIScreenOverscanCompensation' index='0' name='overscanCompensation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='snapshotViewAfterScreenUpdates:'>
<arg declared_type64='BOOL' index='0' name='afterUpdates' type64='B'/>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
<method selector='supportsFocus'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='UIScreenMode'>
<method selector='pixelAspectRatio'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='size'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
</class>
<class name='UIScrollView'>
<method selector='alwaysBounceHorizontal'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='alwaysBounceVertical'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='bounces'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='bouncesZoom'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canCancelContentTouches'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contentInset'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='contentOffset'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='contentSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='decelerationRate'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='delaysContentTouches'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='directionalPressGestureRecognizer'>
<retval declared_type64='UIGestureRecognizer * _Nonnull' type64='@'/>
</method>
<method selector='flashScrollIndicators'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indicatorStyle'>
<retval declared_type64='UIScrollViewIndicatorStyle' type64='q'/>
</method>
<method selector='isDecelerating'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDirectionalLockEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDragging'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isScrollEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTracking'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isZoomBouncing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isZooming'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyboardDismissMode'>
<retval declared_type64='UIScrollViewKeyboardDismissMode' type64='q'/>
</method>
<method selector='maximumZoomScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumZoomScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='panGestureRecognizer'>
<retval declared_type64='UIPanGestureRecognizer * _Nonnull' type64='@'/>
</method>
<method selector='pinchGestureRecognizer'>
<retval declared_type64='UIPinchGestureRecognizer * _Nullable' type64='@'/>
</method>
<method selector='scrollIndicatorInsets'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='scrollRectToVisible:animated:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlwaysBounceHorizontal:'>
<arg declared_type64='BOOL' index='0' name='alwaysBounceHorizontal' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlwaysBounceVertical:'>
<arg declared_type64='BOOL' index='0' name='alwaysBounceVertical' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBounces:'>
<arg declared_type64='BOOL' index='0' name='bounces' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBouncesZoom:'>
<arg declared_type64='BOOL' index='0' name='bouncesZoom' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanCancelContentTouches:'>
<arg declared_type64='BOOL' index='0' name='canCancelContentTouches' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentInset:'>
<arg declared_type64='UIEdgeInsets' index='0' name='contentInset' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentOffset:'>
<arg declared_type64='CGPoint' index='0' name='contentOffset' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentOffset:animated:'>
<arg declared_type64='CGPoint' index='0' name='contentOffset' type64='{CGPoint=dd}'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentSize:'>
<arg declared_type64='CGSize' index='0' name='contentSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDecelerationRate:'>
<arg declared_type64='CGFloat' index='0' name='decelerationRate' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelaysContentTouches:'>
<arg declared_type64='BOOL' index='0' name='delaysContentTouches' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDirectionalLockEnabled:'>
<arg declared_type64='BOOL' index='0' name='directionalLockEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIndicatorStyle:'>
<arg declared_type64='UIScrollViewIndicatorStyle' index='0' name='indicatorStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyboardDismissMode:'>
<arg declared_type64='UIScrollViewKeyboardDismissMode' index='0' name='keyboardDismissMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumZoomScale:'>
<arg declared_type64='CGFloat' index='0' name='maximumZoomScale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumZoomScale:'>
<arg declared_type64='CGFloat' index='0' name='minimumZoomScale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollEnabled:'>
<arg declared_type64='BOOL' index='0' name='scrollEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollIndicatorInsets:'>
<arg declared_type64='UIEdgeInsets' index='0' name='scrollIndicatorInsets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsHorizontalScrollIndicator:'>
<arg declared_type64='BOOL' index='0' name='showsHorizontalScrollIndicator' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsVerticalScrollIndicator:'>
<arg declared_type64='BOOL' index='0' name='showsVerticalScrollIndicator' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZoomScale:'>
<arg declared_type64='CGFloat' index='0' name='zoomScale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZoomScale:animated:'>
<arg declared_type64='CGFloat' index='0' name='scale' type64='d'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsHorizontalScrollIndicator'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsVerticalScrollIndicator'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='touchesShouldBegin:withEvent:inContentView:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='touches' type64='@'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='2' name='view' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='touchesShouldCancelInContentView:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='zoomScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='zoomToRect:animated:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UISearchBar'>
<method selector='backgroundImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='backgroundImageForBarPosition:barMetrics:'>
<arg declared_type64='UIBarPosition' index='0' name='barPosition' type64='q'/>
<arg declared_type64='UIBarMetrics' index='1' name='barMetrics' type64='q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='barTintColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='imageForSearchBarIcon:state:'>
<arg declared_type64='UISearchBarIcon' index='0' name='icon' type64='q'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='inputAccessoryView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='isTranslucent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='placeholder'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='positionAdjustmentForSearchBarIcon:'>
<arg declared_type64='UISearchBarIcon' index='0' name='icon' type64='q'/>
<retval declared_type64='UIOffset' type64='{UIOffset=dd}'/>
</method>
<method selector='prompt'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='scopeBarBackgroundImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='scopeBarButtonBackgroundImageForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='scopeBarButtonDividerImageForLeftSegmentState:rightSegmentState:'>
<arg declared_type64='UIControlState' index='0' name='leftState' type64='Q'/>
<arg declared_type64='UIControlState' index='1' name='rightState' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='scopeBarButtonTitleTextAttributesForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='scopeButtonTitles'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='searchBarStyle'>
<retval declared_type64='UISearchBarStyle' type64='Q'/>
</method>
<method selector='searchFieldBackgroundImageForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='searchFieldBackgroundPositionAdjustment'>
<retval declared_type64='UIOffset' type64='{UIOffset=dd}'/>
</method>
<method selector='searchTextPositionAdjustment'>
<retval declared_type64='UIOffset' type64='{UIOffset=dd}'/>
</method>
<method selector='selectedScopeButtonIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setBackgroundImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='backgroundImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundImage:forBarPosition:barMetrics:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='backgroundImage' type64='@'/>
<arg declared_type64='UIBarPosition' index='1' name='barPosition' type64='q'/>
<arg declared_type64='UIBarMetrics' index='2' name='barMetrics' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBarTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='barTintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:forSearchBarIcon:state:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='iconImage' type64='@'/>
<arg declared_type64='UISearchBarIcon' index='1' name='icon' type64='q'/>
<arg declared_type64='UIControlState' index='2' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputAccessoryView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='inputAccessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholder:'>
<arg declared_type64='NSString * _Nullable' index='0' name='placeholder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPositionAdjustment:forSearchBarIcon:'>
<arg declared_type64='UIOffset' index='0' name='adjustment' type64='{UIOffset=dd}'/>
<arg declared_type64='UISearchBarIcon' index='1' name='icon' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrompt:'>
<arg declared_type64='NSString * _Nullable' index='0' name='prompt' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScopeBarBackgroundImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='scopeBarBackgroundImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScopeBarButtonBackgroundImage:forState:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='backgroundImage' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScopeBarButtonDividerImage:forLeftSegmentState:rightSegmentState:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='dividerImage' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='leftState' type64='Q'/>
<arg declared_type64='UIControlState' index='2' name='rightState' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScopeBarButtonTitleTextAttributes:forState:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='attributes' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScopeButtonTitles:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='scopeButtonTitles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSearchBarStyle:'>
<arg declared_type64='UISearchBarStyle' index='0' name='searchBarStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSearchFieldBackgroundImage:forState:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='backgroundImage' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSearchFieldBackgroundPositionAdjustment:'>
<arg declared_type64='UIOffset' index='0' name='searchFieldBackgroundPositionAdjustment' type64='{UIOffset=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSearchTextPositionAdjustment:'>
<arg declared_type64='UIOffset' index='0' name='searchTextPositionAdjustment' type64='{UIOffset=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedScopeButtonIndex:'>
<arg declared_type64='NSInteger' index='0' name='selectedScopeButtonIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsScopeBar:'>
<arg declared_type64='BOOL' index='0' name='showsScopeBar' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setText:'>
<arg declared_type64='NSString * _Nullable' index='0' name='text' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='tintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTranslucent:'>
<arg declared_type64='BOOL' index='0' name='translucent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsScopeBar'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='text'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tintColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
</class>
<class name='UISearchContainerViewController'>
<method selector='initWithSearchController:'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='searchController'>
<retval declared_type64='UISearchController * _Nonnull' type64='@'/>
</method>
</class>
<class name='UISearchController'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='hidesNavigationBarDuringPresentation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithSearchResultsController:'>
<arg declared_type64='UIViewController * _Nullable' index='0' name='searchResultsController' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='obscuresBackgroundDuringPresentation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='searchBar'>
<retval declared_type64='UISearchBar * _Nonnull' type64='@'/>
</method>
<method selector='searchResultsController'>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='searchResultsUpdater'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setActive:'>
<arg declared_type64='BOOL' index='0' name='active' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidesNavigationBarDuringPresentation:'>
<arg declared_type64='BOOL' index='0' name='hidesNavigationBarDuringPresentation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setObscuresBackgroundDuringPresentation:'>
<arg declared_type64='BOOL' index='0' name='obscuresBackgroundDuringPresentation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSearchResultsUpdater:'>
<arg declared_type64='id _Nullable' index='0' name='searchResultsUpdater' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UISegmentedControl'>
<method selector='apportionsSegmentWidthsByContent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundImageForState:barMetrics:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<arg declared_type64='UIBarMetrics' index='1' name='barMetrics' type64='q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='contentOffsetForSegmentAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='segment' type64='Q'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='contentPositionAdjustmentForSegmentType:barMetrics:'>
<arg declared_type64='UISegmentedControlSegment' index='0' name='leftCenterRightOrAlone' type64='q'/>
<arg declared_type64='UIBarMetrics' index='1' name='barMetrics' type64='q'/>
<retval declared_type64='UIOffset' type64='{UIOffset=dd}'/>
</method>
<method selector='dividerImageForLeftSegmentState:rightSegmentState:barMetrics:'>
<arg declared_type64='UIControlState' index='0' name='leftState' type64='Q'/>
<arg declared_type64='UIControlState' index='1' name='rightState' type64='Q'/>
<arg declared_type64='UIBarMetrics' index='2' name='barMetrics' type64='q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='imageForSegmentAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='segment' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='initWithItems:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='items' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertSegmentWithImage:atIndex:animated:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='segment' type64='Q'/>
<arg declared_type64='BOOL' index='2' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSegmentWithTitle:atIndex:animated:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='segment' type64='Q'/>
<arg declared_type64='BOOL' index='2' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isEnabledForSegmentAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='segment' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMomentary'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='numberOfSegments'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='removeAllSegments'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeSegmentAtIndex:animated:'>
<arg declared_type64='NSUInteger' index='0' name='segment' type64='Q'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedSegmentIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setApportionsSegmentWidthsByContent:'>
<arg declared_type64='BOOL' index='0' name='apportionsSegmentWidthsByContent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundImage:forState:barMetrics:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='backgroundImage' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<arg declared_type64='UIBarMetrics' index='2' name='barMetrics' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentOffset:forSegmentAtIndex:'>
<arg declared_type64='CGSize' index='0' name='offset' type64='{CGSize=dd}'/>
<arg declared_type64='NSUInteger' index='1' name='segment' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentPositionAdjustment:forSegmentType:barMetrics:'>
<arg declared_type64='UIOffset' index='0' name='adjustment' type64='{UIOffset=dd}'/>
<arg declared_type64='UISegmentedControlSegment' index='1' name='leftCenterRightOrAlone' type64='q'/>
<arg declared_type64='UIBarMetrics' index='2' name='barMetrics' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDividerImage:forLeftSegmentState:rightSegmentState:barMetrics:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='dividerImage' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='leftState' type64='Q'/>
<arg declared_type64='UIControlState' index='2' name='rightState' type64='Q'/>
<arg declared_type64='UIBarMetrics' index='3' name='barMetrics' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:forSegmentAtIndex:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<arg declared_type64='NSUInteger' index='1' name='segment' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:forSegmentAtIndex:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='segment' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMomentary:'>
<arg declared_type64='BOOL' index='0' name='momentary' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedSegmentIndex:'>
<arg declared_type64='NSInteger' index='0' name='selectedSegmentIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='tintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:forSegmentAtIndex:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='segment' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleTextAttributes:forState:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='attributes' type64='@'/>
<arg declared_type64='UIControlState' index='1' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:forSegmentAtIndex:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<arg declared_type64='NSUInteger' index='1' name='segment' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tintColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='titleForSegmentAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='segment' type64='Q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='titleTextAttributesForState:'>
<arg declared_type64='UIControlState' index='0' name='state' type64='Q'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='widthForSegmentAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='segment' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='UISnapBehavior'>
<method selector='damping'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='initWithItem:snapToPoint:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setDamping:'>
<arg declared_type64='CGFloat' index='0' name='damping' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSnapPoint:'>
<arg declared_type64='CGPoint' index='0' name='snapPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='snapPoint'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='UISplitViewController'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='displayMode'>
<retval declared_type64='UISplitViewControllerDisplayMode' type64='q'/>
</method>
<method selector='displayModeButtonItem'>
<retval declared_type64='UIBarButtonItem * _Nonnull' type64='@'/>
</method>
<method selector='isCollapsed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maximumPrimaryColumnWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumPrimaryColumnWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='preferredDisplayMode'>
<retval declared_type64='UISplitViewControllerDisplayMode' type64='q'/>
</method>
<method selector='preferredPrimaryColumnWidthFraction'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='presentsWithGesture'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='primaryColumnWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumPrimaryColumnWidth:'>
<arg declared_type64='CGFloat' index='0' name='maximumPrimaryColumnWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumPrimaryColumnWidth:'>
<arg declared_type64='CGFloat' index='0' name='minimumPrimaryColumnWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredDisplayMode:'>
<arg declared_type64='UISplitViewControllerDisplayMode' index='0' name='preferredDisplayMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredPrimaryColumnWidthFraction:'>
<arg declared_type64='CGFloat' index='0' name='preferredPrimaryColumnWidthFraction' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPresentsWithGesture:'>
<arg declared_type64='BOOL' index='0' name='presentsWithGesture' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setViewControllers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='viewControllers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showDetailViewController:sender:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='vc' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showViewController:sender:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='vc' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewControllers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIStackView'>
<method selector='addArrangedSubview:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='alignment'>
<retval declared_type64='UIStackViewAlignment' type64='q'/>
</method>
<method selector='arrangedSubviews'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='axis'>
<retval declared_type64='UILayoutConstraintAxis' type64='q'/>
</method>
<method selector='distribution'>
<retval declared_type64='UIStackViewDistribution' type64='q'/>
</method>
<method selector='initWithArrangedSubviews:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='views' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertArrangedSubview:atIndex:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='stackIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isBaselineRelativeArrangement'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLayoutMarginsRelativeArrangement'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeArrangedSubview:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type64='UIStackViewAlignment' index='0' name='alignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAxis:'>
<arg declared_type64='UILayoutConstraintAxis' index='0' name='axis' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBaselineRelativeArrangement:'>
<arg declared_type64='BOOL' index='0' name='baselineRelativeArrangement' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDistribution:'>
<arg declared_type64='UIStackViewDistribution' index='0' name='distribution' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayoutMarginsRelativeArrangement:'>
<arg declared_type64='BOOL' index='0' name='layoutMarginsRelativeArrangement' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpacing:'>
<arg declared_type64='CGFloat' index='0' name='spacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='spacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='UIStoryboard'>
<method selector='instantiateInitialViewController'>
<retval declared_type64='__kindof UIViewController * _Nullable' type64='@'/>
</method>
<method selector='instantiateViewControllerWithIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='__kindof UIViewController * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='storyboardWithName:bundle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='storyboardBundleOrNil' type64='@'/>
<retval declared_type64='UIStoryboard * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIStoryboardPopoverSegue'>
<method selector='popoverController'>
<retval declared_type64='UIPopoverController * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIStoryboardSegue'>
<method selector='destinationViewController'>
<retval declared_type64='__kindof UIViewController * _Nonnull' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='initWithIdentifier:source:destination:'>
<arg declared_type64='NSString * _Nullable' index='0' name='identifier' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='source' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='destination' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='perform'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='segueWithIdentifier:source:destination:performHandler:'>
<arg declared_type64='NSString * _Nullable' index='0' name='identifier' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='source' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='destination' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='performHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='sourceViewController'>
<retval declared_type64='__kindof UIViewController * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIStoryboardUnwindSegueSource'>
<method selector='sender'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='sourceViewController'>
<retval declared_type64='UIViewController * _Nonnull' type64='@'/>
</method>
<method selector='unwindAction'>
<retval declared_type64='SEL _Nonnull' type64=':'/>
</method>
</class>
<class name='UISwipeGestureRecognizer'>
<method selector='direction'>
<retval declared_type64='UISwipeGestureRecognizerDirection' type64='Q'/>
</method>
<method selector='setDirection:'>
<arg declared_type64='UISwipeGestureRecognizerDirection' index='0' name='direction' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UITabBar'>
<method selector='backgroundImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='barTintColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='isTranslucent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='itemWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='selectedItem'>
<retval declared_type64='UITabBarItem * _Nullable' type64='@'/>
</method>
<method selector='selectionIndicatorImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='setBackgroundImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='backgroundImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBarTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='barTintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemSpacing:'>
<arg declared_type64='CGFloat' index='0' name='itemSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemWidth:'>
<arg declared_type64='CGFloat' index='0' name='itemWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItems:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='items' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItems:animated:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='items' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedItem:'>
<arg declared_type64='UITabBarItem * _Nullable' index='0' name='selectedItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionIndicatorImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='selectionIndicatorImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='shadowImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='tintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTranslucent:'>
<arg declared_type64='BOOL' index='0' name='translucent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shadowImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='tintColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
</class>
<class name='UITabBarController'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='selectedIndex'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='selectedViewController'>
<retval declared_type64='__kindof UIViewController * _Nullable' type64='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedIndex:'>
<arg declared_type64='NSUInteger' index='0' name='selectedIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedViewController:'>
<arg declared_type64='__kindof UIViewController * _Nullable' index='0' name='selectedViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setViewControllers:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='viewControllers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setViewControllers:animated:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='viewControllers' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabBar'>
<retval declared_type64='UITabBar * _Nonnull' type64='@'/>
</method>
<method selector='viewControllers'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='UITabBarItem'>
<method selector='badgeValue'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithTabBarSystemItem:tag:'>
<arg declared_type64='UITabBarSystemItem' index='0' name='systemItem' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='tag' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTitle:image:selectedImage:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<arg declared_type64='UIImage * _Nullable' index='1' name='image' type64='@'/>
<arg declared_type64='UIImage * _Nullable' index='2' name='selectedImage' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTitle:image:tag:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<arg declared_type64='UIImage * _Nullable' index='1' name='image' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='tag' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='selectedImage'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='setBadgeValue:'>
<arg declared_type64='NSString * _Nullable' index='0' name='badgeValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedImage:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='selectedImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitlePositionAdjustment:'>
<arg declared_type64='UIOffset' index='0' name='titlePositionAdjustment' type64='{UIOffset=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='titlePositionAdjustment'>
<retval declared_type64='UIOffset' type64='{UIOffset=dd}'/>
</method>
</class>
<class name='UITableView'>
<method selector='allowsMultipleSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsMultipleSelectionDuringEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsSelectionDuringEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='beginUpdates'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cellForRowAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='__kindof UITableViewCell * _Nullable' type64='@'/>
</method>
<method selector='cellLayoutMarginsFollowReadableWidth'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dataSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deleteRowsAtIndexPaths:withRowAnimation:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<arg declared_type64='UITableViewRowAnimation' index='1' name='animation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteSections:withRowAnimation:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='sections' type64='@'/>
<arg declared_type64='UITableViewRowAnimation' index='1' name='animation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dequeueReusableCellWithIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='__kindof UITableViewCell * _Nullable' type64='@'/>
</method>
<method selector='dequeueReusableCellWithIdentifier:forIndexPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='__kindof UITableViewCell * _Nonnull' type64='@'/>
</method>
<method selector='dequeueReusableHeaderFooterViewWithIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='__kindof UITableViewHeaderFooterView * _Nullable' type64='@'/>
</method>
<method selector='deselectRowAtIndexPath:animated:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endUpdates'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='estimatedRowHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='estimatedSectionFooterHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='estimatedSectionHeaderHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='footerViewForSection:'>
<arg declared_type64='NSInteger' index='0' name='section' type64='q'/>
<retval declared_type64='UITableViewHeaderFooterView * _Nullable' type64='@'/>
</method>
<method selector='headerViewForSection:'>
<arg declared_type64='NSInteger' index='0' name='section' type64='q'/>
<retval declared_type64='UITableViewHeaderFooterView * _Nullable' type64='@'/>
</method>
<method selector='indexPathForCell:'>
<arg declared_type64='UITableViewCell * _Nonnull' index='0' name='cell' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='indexPathForRowAtPoint:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='indexPathForSelectedRow'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='indexPathsForRowsInRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='indexPathsForSelectedRows'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='indexPathsForVisibleRows'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:style:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UITableViewStyle' index='1' name='style' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertRowsAtIndexPaths:withRowAnimation:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<arg declared_type64='UITableViewRowAnimation' index='1' name='animation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSections:withRowAnimation:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='sections' type64='@'/>
<arg declared_type64='UITableViewRowAnimation' index='1' name='animation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='moveRowAtIndexPath:toIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='newIndexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveSection:toSection:'>
<arg declared_type64='NSInteger' index='0' name='section' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='newSection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfRowsInSection:'>
<arg declared_type64='NSInteger' index='0' name='section' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfSections'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='rectForFooterInSection:'>
<arg declared_type64='NSInteger' index='0' name='section' type64='q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForHeaderInSection:'>
<arg declared_type64='NSInteger' index='0' name='section' type64='q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForRowAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForSection:'>
<arg declared_type64='NSInteger' index='0' name='section' type64='q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='registerClass:forCellReuseIdentifier:'>
<arg declared_type64='Class _Nullable' index='0' name='cellClass' type64='#'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerClass:forHeaderFooterViewReuseIdentifier:'>
<arg declared_type64='Class _Nullable' index='0' name='aClass' type64='#'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerNib:forCellReuseIdentifier:'>
<arg declared_type64='UINib * _Nullable' index='0' name='nib' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerNib:forHeaderFooterViewReuseIdentifier:'>
<arg declared_type64='UINib * _Nullable' index='0' name='nib' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadData'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadRowsAtIndexPaths:withRowAnimation:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<arg declared_type64='UITableViewRowAnimation' index='1' name='animation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadSectionIndexTitles'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadSections:withRowAnimation:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='sections' type64='@'/>
<arg declared_type64='UITableViewRowAnimation' index='1' name='animation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='remembersLastFocusedIndexPath'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rowHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='scrollToNearestSelectedRowAtScrollPosition:animated:'>
<arg declared_type64='UITableViewScrollPosition' index='0' name='scrollPosition' type64='q'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollToRowAtIndexPath:atScrollPosition:animated:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<arg declared_type64='UITableViewScrollPosition' index='1' name='scrollPosition' type64='q'/>
<arg declared_type64='BOOL' index='2' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sectionFooterHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='sectionHeaderHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='sectionIndexBackgroundColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='sectionIndexColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='sectionIndexMinimumDisplayRowCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='sectionIndexTrackingBackgroundColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='selectRowAtIndexPath:animated:scrollPosition:'>
<arg declared_type64='NSIndexPath * _Nullable' index='0' name='indexPath' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<arg declared_type64='UITableViewScrollPosition' index='2' name='scrollPosition' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='separatorInset'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type64='BOOL' index='0' name='allowsMultipleSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsMultipleSelectionDuringEditing:'>
<arg declared_type64='BOOL' index='0' name='allowsMultipleSelectionDuringEditing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsSelection:'>
<arg declared_type64='BOOL' index='0' name='allowsSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsSelectionDuringEditing:'>
<arg declared_type64='BOOL' index='0' name='allowsSelectionDuringEditing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='backgroundView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCellLayoutMarginsFollowReadableWidth:'>
<arg declared_type64='BOOL' index='0' name='cellLayoutMarginsFollowReadableWidth' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type64='id _Nullable' index='0' name='dataSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditing:'>
<arg declared_type64='BOOL' index='0' name='editing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditing:animated:'>
<arg declared_type64='BOOL' index='0' name='editing' type64='B'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEstimatedRowHeight:'>
<arg declared_type64='CGFloat' index='0' name='estimatedRowHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEstimatedSectionFooterHeight:'>
<arg declared_type64='CGFloat' index='0' name='estimatedSectionFooterHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEstimatedSectionHeaderHeight:'>
<arg declared_type64='CGFloat' index='0' name='estimatedSectionHeaderHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRemembersLastFocusedIndexPath:'>
<arg declared_type64='BOOL' index='0' name='remembersLastFocusedIndexPath' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowHeight:'>
<arg declared_type64='CGFloat' index='0' name='rowHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionFooterHeight:'>
<arg declared_type64='CGFloat' index='0' name='sectionFooterHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionHeaderHeight:'>
<arg declared_type64='CGFloat' index='0' name='sectionHeaderHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionIndexBackgroundColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='sectionIndexBackgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionIndexColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='sectionIndexColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionIndexMinimumDisplayRowCount:'>
<arg declared_type64='NSInteger' index='0' name='sectionIndexMinimumDisplayRowCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionIndexTrackingBackgroundColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='sectionIndexTrackingBackgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSeparatorInset:'>
<arg declared_type64='UIEdgeInsets' index='0' name='separatorInset' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTableFooterView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='tableFooterView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTableHeaderView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='tableHeaderView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='style'>
<retval declared_type64='UITableViewStyle' type64='q'/>
</method>
<method selector='tableFooterView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='tableHeaderView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='visibleCells'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='UITableViewCell'>
<method selector='accessoryType'>
<retval declared_type64='UITableViewCellAccessoryType' type64='q'/>
</method>
<method selector='accessoryView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='backgroundView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='contentView'>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
<method selector='detailTextLabel'>
<retval declared_type64='UILabel * _Nullable' type64='@'/>
</method>
<method selector='didTransitionToState:'>
<arg declared_type64='UITableViewCellStateMask' index='0' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='editingAccessoryType'>
<retval declared_type64='UITableViewCellAccessoryType' type64='q'/>
</method>
<method selector='editingAccessoryView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='editingStyle'>
<retval declared_type64='UITableViewCellEditingStyle' type64='q'/>
</method>
<method selector='focusStyle'>
<retval declared_type64='UITableViewCellFocusStyle' type64='q'/>
</method>
<method selector='imageView'>
<retval declared_type64='UIImageView * _Nullable' type64='@'/>
</method>
<method selector='indentationLevel'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indentationWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithStyle:reuseIdentifier:'>
<arg declared_type64='UITableViewCellStyle' index='0' name='style' type64='q'/>
<arg declared_type64='NSString * _Nullable' index='1' name='reuseIdentifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='multipleSelectionBackgroundView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='prepareForReuse'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reuseIdentifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='selectedBackgroundView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='selectionStyle'>
<retval declared_type64='UITableViewCellSelectionStyle' type64='q'/>
</method>
<method selector='setAccessoryType:'>
<arg declared_type64='UITableViewCellAccessoryType' index='0' name='accessoryType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='accessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='backgroundView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditing:'>
<arg declared_type64='BOOL' index='0' name='editing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditing:animated:'>
<arg declared_type64='BOOL' index='0' name='editing' type64='B'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditingAccessoryType:'>
<arg declared_type64='UITableViewCellAccessoryType' index='0' name='editingAccessoryType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditingAccessoryView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='editingAccessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusStyle:'>
<arg declared_type64='UITableViewCellFocusStyle' index='0' name='focusStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type64='BOOL' index='0' name='highlighted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlighted:animated:'>
<arg declared_type64='BOOL' index='0' name='highlighted' type64='B'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIndentationLevel:'>
<arg declared_type64='NSInteger' index='0' name='indentationLevel' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIndentationWidth:'>
<arg declared_type64='CGFloat' index='0' name='indentationWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMultipleSelectionBackgroundView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='multipleSelectionBackgroundView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type64='BOOL' index='0' name='selected' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelected:animated:'>
<arg declared_type64='BOOL' index='0' name='selected' type64='B'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedBackgroundView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='selectedBackgroundView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionStyle:'>
<arg declared_type64='UITableViewCellSelectionStyle' index='0' name='selectionStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldIndentWhileEditing:'>
<arg declared_type64='BOOL' index='0' name='shouldIndentWhileEditing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsReorderControl:'>
<arg declared_type64='BOOL' index='0' name='showsReorderControl' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldIndentWhileEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showingDeleteConfirmation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsReorderControl'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textLabel'>
<retval declared_type64='UILabel * _Nullable' type64='@'/>
</method>
<method selector='willTransitionToState:'>
<arg declared_type64='UITableViewCellStateMask' index='0' name='state' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UITableViewController'>
<method selector='clearsSelectionOnViewWillAppear'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='nibNameOrNil' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='nibBundleOrNil' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithStyle:'>
<arg declared_type64='UITableViewStyle' index='0' name='style' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setClearsSelectionOnViewWillAppear:'>
<arg declared_type64='BOOL' index='0' name='clearsSelectionOnViewWillAppear' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTableView:'>
<arg declared_type64='UITableView * _Nullable' index='0' name='tableView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView'>
<retval declared_type64='UITableView * _Nonnull' type64='@'/>
</method>
</class>
<class name='UITableViewFocusUpdateContext'>
<method selector='nextFocusedIndexPath'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='previouslyFocusedIndexPath'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
</class>
<class name='UITableViewHeaderFooterView'>
<method selector='backgroundView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='contentView'>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
<method selector='detailTextLabel'>
<retval declared_type64='UILabel * _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithReuseIdentifier:'>
<arg declared_type64='NSString * _Nullable' index='0' name='reuseIdentifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='prepareForReuse'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reuseIdentifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='backgroundView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='tintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textLabel'>
<retval declared_type64='UILabel * _Nullable' type64='@'/>
</method>
<method selector='tintColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
</class>
<class name='UITapGestureRecognizer'>
<method selector='numberOfTapsRequired'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='setNumberOfTapsRequired:'>
<arg declared_type64='NSUInteger' index='0' name='numberOfTapsRequired' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UITextChecker'>
<method class_method='true' selector='availableLanguages'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='completionsForPartialWordRange:inString:language:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nullable' index='1' name='string' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='language' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='guessesForWordRange:inString:language:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='language' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='hasLearnedWord:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='word' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='ignoreWord:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='wordToIgnore' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ignoredWords'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='learnWord:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='word' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rangeOfMisspelledWordInString:range:startingAt:wrap:language:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringToCheck' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='2' name='startingOffset' type64='q'/>
<arg declared_type64='BOOL' index='3' name='wrapFlag' type64='B'/>
<arg declared_type64='NSString * _Nonnull' index='4' name='language' type64='@'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='setIgnoredWords:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='words' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='unlearnWord:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='word' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UITextField'>
<method selector='adjustsFontSizeToFitWidth'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsEditingTextAttributes'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='attributedPlaceholder'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='attributedText'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='background'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='borderRectForBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='borderStyle'>
<retval declared_type64='UITextBorderStyle' type64='q'/>
</method>
<method selector='clearButtonMode'>
<retval declared_type64='UITextFieldViewMode' type64='q'/>
</method>
<method selector='clearButtonRectForBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='clearsOnBeginEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='clearsOnInsertion'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='defaultTextAttributes'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='disabledBackground'>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='drawPlaceholderInRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawTextInRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='editingRectForBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='font'>
<retval declared_type64='UIFont * _Nullable' type64='@'/>
</method>
<method selector='inputAccessoryView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='inputView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='isEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='leftView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='leftViewMode'>
<retval declared_type64='UITextFieldViewMode' type64='q'/>
</method>
<method selector='leftViewRectForBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='minimumFontSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='placeholder'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='placeholderRectForBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rightView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='rightViewMode'>
<retval declared_type64='UITextFieldViewMode' type64='q'/>
</method>
<method selector='rightViewRectForBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAdjustsFontSizeToFitWidth:'>
<arg declared_type64='BOOL' index='0' name='adjustsFontSizeToFitWidth' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg declared_type64='BOOL' index='0' name='allowsEditingTextAttributes' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedPlaceholder:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='attributedPlaceholder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedText:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='attributedText' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackground:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='background' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBorderStyle:'>
<arg declared_type64='UITextBorderStyle' index='0' name='borderStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClearButtonMode:'>
<arg declared_type64='UITextFieldViewMode' index='0' name='clearButtonMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClearsOnBeginEditing:'>
<arg declared_type64='BOOL' index='0' name='clearsOnBeginEditing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClearsOnInsertion:'>
<arg declared_type64='BOOL' index='0' name='clearsOnInsertion' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultTextAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='defaultTextAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDisabledBackground:'>
<arg declared_type64='UIImage * _Nullable' index='0' name='disabledBackground' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:'>
<arg declared_type64='UIFont * _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputAccessoryView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='inputAccessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='inputView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLeftView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='leftView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLeftViewMode:'>
<arg declared_type64='UITextFieldViewMode' index='0' name='leftViewMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumFontSize:'>
<arg declared_type64='CGFloat' index='0' name='minimumFontSize' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholder:'>
<arg declared_type64='NSString * _Nullable' index='0' name='placeholder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRightView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='rightView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRightViewMode:'>
<arg declared_type64='UITextFieldViewMode' index='0' name='rightViewMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setText:'>
<arg declared_type64='NSString * _Nullable' index='0' name='text' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type64='NSTextAlignment' index='0' name='textAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='textColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTypingAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='typingAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='text'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='textAlignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='textColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='textRectForBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='typingAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
</class>
<class name='UITextInputMode'>
<method class_method='true' selector='activeInputModes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='primaryLanguage'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='UITextInputStringTokenizer'>
<method selector='initWithTextInput:'>
<arg declared_type64='UIResponder * _Nonnull' index='0' name='textInput' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='UITextRange'>
<method selector='end'>
<retval declared_type64='UITextPosition * _Nonnull' type64='@'/>
</method>
<method selector='isEmpty'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='start'>
<retval declared_type64='UITextPosition * _Nonnull' type64='@'/>
</method>
</class>
<class name='UITextSelectionRect'>
<method selector='containsEnd'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='containsStart'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVertical'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rect'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='writingDirection'>
<retval declared_type64='UITextWritingDirection' type64='q'/>
</method>
</class>
<class name='UITextView'>
<method selector='allowsEditingTextAttributes'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='attributedText'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='clearsOnInsertion'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='font'>
<retval declared_type64='UIFont * _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:textContainer:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nullable' index='1' name='textContainer' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputAccessoryView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='inputView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='isSelectable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager'>
<retval declared_type64='NSLayoutManager * _Nonnull' type64='@'/>
</method>
<method selector='linkTextAttributes'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='scrollRangeToVisible:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg declared_type64='BOOL' index='0' name='allowsEditingTextAttributes' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedText:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='attributedText' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClearsOnInsertion:'>
<arg declared_type64='BOOL' index='0' name='clearsOnInsertion' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:'>
<arg declared_type64='UIFont * _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputAccessoryView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='inputAccessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='inputView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLinkTextAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='linkTextAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type64='BOOL' index='0' name='selectable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedRange:'>
<arg declared_type64='NSRange' index='0' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setText:'>
<arg declared_type64='NSString * _Nullable' index='0' name='text' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type64='NSTextAlignment' index='0' name='textAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='textColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextContainerInset:'>
<arg declared_type64='UIEdgeInsets' index='0' name='textContainerInset' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTypingAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='typingAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='text'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='textAlignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='textColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method selector='textContainer'>
<retval declared_type64='NSTextContainer * _Nonnull' type64='@'/>
</method>
<method selector='textContainerInset'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='textStorage'>
<retval declared_type64='NSTextStorage * _Nonnull' type64='@'/>
</method>
<method selector='typingAttributes'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
</class>
<class name='UITouch'>
<method selector='altitudeAngle'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='azimuthAngleInView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='azimuthUnitVectorInView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='CGVector' type64='{CGVector=dd}'/>
</method>
<method selector='estimatedProperties'>
<retval declared_type64='UITouchProperties' type64='q'/>
</method>
<method selector='estimatedPropertiesExpectingUpdates'>
<retval declared_type64='UITouchProperties' type64='q'/>
</method>
<method selector='estimationUpdateIndex'>
<retval declared_type64='NSNumber * _Nullable' type64='@'/>
</method>
<method selector='force'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='gestureRecognizers'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='locationInView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='majorRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='majorRadiusTolerance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumPossibleForce'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='phase'>
<retval declared_type64='UITouchPhase' type64='q'/>
</method>
<method selector='preciseLocationInView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='precisePreviousLocationInView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='previousLocationInView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='tapCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='timestamp'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='type'>
<retval declared_type64='UITouchType' type64='q'/>
</method>
<method selector='view'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='window'>
<retval declared_type64='UIWindow * _Nullable' type64='@'/>
</method>
</class>
<class name='UITraitCollection'>
<method selector='containsTraitsInCollection:'>
<arg declared_type64='UITraitCollection * _Nullable' index='0' name='trait' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='displayScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='forceTouchCapability'>
<retval declared_type64='UIForceTouchCapability' type64='q'/>
</method>
<method selector='horizontalSizeClass'>
<retval declared_type64='UIUserInterfaceSizeClass' type64='q'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='traitCollectionWithDisplayScale:'>
<arg declared_type64='CGFloat' index='0' name='scale' type64='d'/>
<retval declared_type64='UITraitCollection * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='traitCollectionWithForceTouchCapability:'>
<arg declared_type64='UIForceTouchCapability' index='0' name='capability' type64='q'/>
<retval declared_type64='UITraitCollection * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='traitCollectionWithHorizontalSizeClass:'>
<arg declared_type64='UIUserInterfaceSizeClass' index='0' name='horizontalSizeClass' type64='q'/>
<retval declared_type64='UITraitCollection * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='traitCollectionWithTraitsFromCollections:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='traitCollections' type64='@'/>
<retval declared_type64='UITraitCollection * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='traitCollectionWithUserInterfaceIdiom:'>
<arg declared_type64='UIUserInterfaceIdiom' index='0' name='idiom' type64='q'/>
<retval declared_type64='UITraitCollection * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='traitCollectionWithVerticalSizeClass:'>
<arg declared_type64='UIUserInterfaceSizeClass' index='0' name='verticalSizeClass' type64='q'/>
<retval declared_type64='UITraitCollection * _Nonnull' type64='@'/>
</method>
<method selector='userInterfaceIdiom'>
<retval declared_type64='UIUserInterfaceIdiom' type64='q'/>
</method>
<method selector='verticalSizeClass'>
<retval declared_type64='UIUserInterfaceSizeClass' type64='q'/>
</method>
</class>
<class name='UIVibrancyEffect'>
<method class_method='true' selector='effectForBlurEffect:'>
<arg declared_type64='UIBlurEffect * _Nonnull' index='0' name='blurEffect' type64='@'/>
<retval declared_type64='UIVibrancyEffect * _Nonnull' type64='@'/>
</method>
</class>
<class name='UIView'>
<method selector='addConstraint:'>
<arg declared_type64='NSLayoutConstraint * _Nonnull' index='0' name='constraint' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addConstraints:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='constraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addGestureRecognizer:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='addKeyframeWithRelativeStartTime:relativeDuration:animations:'>
<arg declared_type64='double' index='0' name='frameStartTime' type64='d'/>
<arg declared_type64='double' index='1' name='frameDuration' type64='d'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='2' name='animations' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addLayoutGuide:'>
<arg declared_type64='UILayoutGuide * _Nonnull' index='0' name='layoutGuide' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addMotionEffect:'>
<arg declared_type64='UIMotionEffect * _Nonnull' index='0' name='effect' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addSubview:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='alignmentRectForFrame:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='alignmentRectInsets'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='alpha'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='animateKeyframesWithDuration:delay:options:animations:completion:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<arg declared_type64='NSTimeInterval' index='1' name='delay' type64='d'/>
<arg declared_type64='UIViewKeyframeAnimationOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='animations' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='4' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='animateWithDuration:animations:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='animations' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='animateWithDuration:animations:completion:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='animations' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='2' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='animateWithDuration:delay:options:animations:completion:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<arg declared_type64='NSTimeInterval' index='1' name='delay' type64='d'/>
<arg declared_type64='UIViewAnimationOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='animations' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='4' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<arg declared_type64='NSTimeInterval' index='1' name='delay' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='dampingRatio' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='velocity' type64='d'/>
<arg declared_type64='UIViewAnimationOptions' index='4' name='options' type64='Q'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='5' name='animations' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='6' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='areAnimationsEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autoresizesSubviews'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autoresizingMask'>
<retval declared_type64='UIViewAutoresizing' type64='Q'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='UIColor * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='beginAnimations:context:'>
<arg declared_type64='NSString * _Nullable' index='0' name='animationID' type64='@'/>
<arg declared_type64='void * _Nullable' index='1' name='context' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='bottomAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='bringSubviewToFront:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canBecomeFocused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='center'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='centerXAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='centerYAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='clearsContextBeforeDrawing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='clipsToBounds'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='commitAnimations'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='constraints'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='constraintsAffectingLayoutForAxis:'>
<arg declared_type64='UILayoutConstraintAxis' index='0' name='axis' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='contentCompressionResistancePriorityForAxis:'>
<arg declared_type64='UILayoutConstraintAxis' index='0' name='axis' type64='q'/>
<retval declared_type64='UILayoutPriority' type64='f'/>
</method>
<method selector='contentHuggingPriorityForAxis:'>
<arg declared_type64='UILayoutConstraintAxis' index='0' name='axis' type64='q'/>
<retval declared_type64='UILayoutPriority' type64='f'/>
</method>
<method selector='contentMode'>
<retval declared_type64='UIViewContentMode' type64='q'/>
</method>
<method selector='contentScaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='convertPoint:fromView:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='UIView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toView:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='UIView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromView:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toView:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='decodeRestorableStateWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didAddSubview:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='subview' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didMoveToSuperview'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didMoveToWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawViewHierarchyInRect:afterScreenUpdates:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='1' name='afterUpdates' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endEditing:'>
<arg declared_type64='BOOL' index='0' name='force' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='exchangeSubviewAtIndex:withSubviewAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index1' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='index2' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='exerciseAmbiguityInLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='firstBaselineAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='frame'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameForAlignmentRect:'>
<arg declared_type64='CGRect' index='0' name='alignmentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='gestureRecognizerShouldBegin:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizers'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='hasAmbiguousLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='heightAnchor'>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
<method selector='hitTest:withEvent:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='inheritedAnimationDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertSubview:aboveSubview:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='siblingSubview' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSubview:atIndex:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSubview:belowSubview:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='siblingSubview' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='intrinsicContentSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='invalidateIntrinsicContentSize'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isDescendantOfView:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFocused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isUserInteractionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lastBaselineAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='layer'>
<retval declared_type64='CALayer * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layerClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='layoutGuides'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='layoutIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutMargins'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='layoutMarginsDidChange'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutMarginsGuide'>
<retval declared_type64='UILayoutGuide * _Nonnull' type64='@'/>
</method>
<method selector='layoutSubviews'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='leadingAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='leftAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='maskView'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='motionEffects'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='needsUpdateConstraints'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='performSystemAnimation:onViews:options:animations:completion:'>
<arg declared_type64='UISystemAnimation' index='0' name='animation' type64='Q'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='views' type64='@'/>
<arg declared_type64='UIViewAnimationOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='3' name='parallelAnimations' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='4' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='performWithoutAnimation:'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='actionsWithoutAnimation' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pointInside:withEvent:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='UIEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='preservesSuperviewLayoutMargins'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readableContentGuide'>
<retval declared_type64='UILayoutGuide * _Nonnull' type64='@'/>
</method>
<method selector='removeConstraint:'>
<arg declared_type64='NSLayoutConstraint * _Nonnull' index='0' name='constraint' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeConstraints:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='constraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeFromSuperview'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeGestureRecognizer:'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeLayoutGuide:'>
<arg declared_type64='UILayoutGuide * _Nonnull' index='0' name='layoutGuide' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeMotionEffect:'>
<arg declared_type64='UIMotionEffect * _Nonnull' index='0' name='effect' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='requiresConstraintBasedLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='1' name='afterUpdates' type64='B'/>
<arg declared_type64='UIEdgeInsets' index='2' name='capInsets' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
<method selector='restorationIdentifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='rightAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='semanticContentAttribute'>
<retval declared_type64='UISemanticContentAttribute' type64='q'/>
</method>
<method selector='sendSubviewToBack:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlpha:'>
<arg declared_type64='CGFloat' index='0' name='alpha' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationBeginsFromCurrentState:'>
<arg declared_type64='BOOL' index='0' name='fromCurrentState' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationCurve:'>
<arg declared_type64='UIViewAnimationCurve' index='0' name='curve' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationDelay:'>
<arg declared_type64='NSTimeInterval' index='0' name='delay' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationDidStopSelector:'>
<arg declared_type64='SEL _Nullable' index='0' name='selector' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationRepeatAutoreverses:'>
<arg declared_type64='BOOL' index='0' name='repeatAutoreverses' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationRepeatCount:'>
<arg declared_type64='float' index='0' name='repeatCount' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationStartDate:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='startDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationTransition:forView:cache:'>
<arg declared_type64='UIViewAnimationTransition' index='0' name='transition' type64='q'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='BOOL' index='2' name='cache' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationWillStartSelector:'>
<arg declared_type64='SEL _Nullable' index='0' name='selector' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationsEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoresizesSubviews:'>
<arg declared_type64='BOOL' index='0' name='autoresizesSubviews' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoresizingMask:'>
<arg declared_type64='UIViewAutoresizing' index='0' name='autoresizingMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCenter:'>
<arg declared_type64='CGPoint' index='0' name='center' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClearsContextBeforeDrawing:'>
<arg declared_type64='BOOL' index='0' name='clearsContextBeforeDrawing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClipsToBounds:'>
<arg declared_type64='BOOL' index='0' name='clipsToBounds' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentCompressionResistancePriority:forAxis:'>
<arg declared_type64='UILayoutPriority' index='0' name='priority' type64='f'/>
<arg declared_type64='UILayoutConstraintAxis' index='1' name='axis' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentHuggingPriority:forAxis:'>
<arg declared_type64='UILayoutPriority' index='0' name='priority' type64='f'/>
<arg declared_type64='UILayoutConstraintAxis' index='1' name='axis' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentMode:'>
<arg declared_type64='UIViewContentMode' index='0' name='contentMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentScaleFactor:'>
<arg declared_type64='CGFloat' index='0' name='contentScaleFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGestureRecognizers:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='gestureRecognizers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayoutMargins:'>
<arg declared_type64='UIEdgeInsets' index='0' name='layoutMargins' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaskView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='maskView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMotionEffects:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='motionEffects' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsDisplay'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsDisplayInRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsUpdateConstraints'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpaque:'>
<arg declared_type64='BOOL' index='0' name='opaque' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreservesSuperviewLayoutMargins:'>
<arg declared_type64='BOOL' index='0' name='preservesSuperviewLayoutMargins' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRestorationIdentifier:'>
<arg declared_type64='NSString * _Nullable' index='0' name='restorationIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSemanticContentAttribute:'>
<arg declared_type64='UISemanticContentAttribute' index='0' name='semanticContentAttribute' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTintAdjustmentMode:'>
<arg declared_type64='UIViewTintAdjustmentMode' index='0' name='tintAdjustmentMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTintColor:'>
<arg declared_type64='UIColor * _Nullable' index='0' name='tintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='transform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTranslatesAutoresizingMaskIntoConstraints:'>
<arg declared_type64='BOOL' index='0' name='translatesAutoresizingMaskIntoConstraints' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUserInteractionEnabled:'>
<arg declared_type64='BOOL' index='0' name='userInteractionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeThatFits:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='sizeToFit'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='snapshotViewAfterScreenUpdates:'>
<arg declared_type64='BOOL' index='0' name='afterUpdates' type64='B'/>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
<method selector='subviews'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='superview'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='systemLayoutSizeFittingSize:'>
<arg declared_type64='CGSize' index='0' name='targetSize' type64='{CGSize=dd}'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:'>
<arg declared_type64='CGSize' index='0' name='targetSize' type64='{CGSize=dd}'/>
<arg declared_type64='UILayoutPriority' index='1' name='horizontalFittingPriority' type64='f'/>
<arg declared_type64='UILayoutPriority' index='2' name='verticalFittingPriority' type64='f'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='tag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='tintAdjustmentMode'>
<retval declared_type64='UIViewTintAdjustmentMode' type64='q'/>
</method>
<method selector='tintColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='tintColorDidChange'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='topAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='trailingAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='transform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method class_method='true' selector='transitionFromView:toView:duration:options:completion:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='fromView' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='toView' type64='@'/>
<arg declared_type64='NSTimeInterval' index='2' name='duration' type64='d'/>
<arg declared_type64='UIViewAnimationOptions' index='3' name='options' type64='Q'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='4' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='transitionWithView:duration:options:animations:completion:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='duration' type64='d'/>
<arg declared_type64='UIViewAnimationOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='3' name='animations' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='4' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='translatesAutoresizingMaskIntoConstraints'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='updateConstraints'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateConstraintsIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='userInterfaceLayoutDirectionForSemanticContentAttribute:'>
<arg declared_type64='UISemanticContentAttribute' index='0' name='attribute' type64='q'/>
<retval declared_type64='UIUserInterfaceLayoutDirection' type64='q'/>
</method>
<method selector='viewForFirstBaselineLayout'>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
<method selector='viewForLastBaselineLayout'>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
<method selector='viewWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='__kindof UIView * _Nullable' type64='@'/>
</method>
<method selector='widthAnchor'>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
<method selector='willMoveToSuperview:'>
<arg declared_type64='UIView * _Nullable' index='0' name='newSuperview' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willMoveToWindow:'>
<arg declared_type64='UIWindow * _Nullable' index='0' name='newWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willRemoveSubview:'>
<arg declared_type64='UIView * _Nonnull' index='0' name='subview' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window'>
<retval declared_type64='UIWindow * _Nullable' type64='@'/>
</method>
</class>
<class name='UIViewController'>
<method selector='addChildViewController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='childController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addKeyCommand:'>
<arg declared_type64='UIKeyCommand * _Nonnull' index='0' name='keyCommand' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowedChildViewControllersForUnwindingFromSource:'>
<arg declared_type64='UIStoryboardUnwindSegueSource * _Nonnull' index='0' name='source' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='applicationFinishedRestoringState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='automaticallyAdjustsScrollViewInsets'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='beginAppearanceTransition:animated:'>
<arg declared_type64='BOOL' index='0' name='isAppearing' type64='B'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='bottomLayoutGuide'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='canPerformUnwindSegueAction:fromViewController:withSender:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='fromViewController' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='childViewControllerContainingSegueSource:'>
<arg declared_type64='UIStoryboardUnwindSegueSource * _Nonnull' index='0' name='source' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='childViewControllers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='collapseSecondaryViewController:forSplitViewController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='secondaryViewController' type64='@'/>
<arg declared_type64='UISplitViewController * _Nonnull' index='1' name='splitViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='decodeRestorableStateWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='definesPresentationContext'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='didMoveToParentViewController:'>
<arg declared_type64='UIViewController * _Nullable' index='0' name='parent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didReceiveMemoryWarning'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disablesAutomaticKeyboardDismissal'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dismissViewControllerAnimated:completion:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='completion' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='edgesForExtendedLayout'>
<retval declared_type64='UIRectEdge' type64='Q'/>
</method>
<method selector='editButtonItem'>
<retval declared_type64='UIBarButtonItem * _Nonnull' type64='@'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endAppearanceTransition'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='extendedLayoutIncludesOpaqueBars'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='extensionContext'>
<retval declared_type64='NSExtensionContext * _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='nibNameOrNil' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='nibBundleOrNil' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isBeingDismissed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isBeingPresented'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isModalInPopover'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMovingFromParentViewController'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMovingToParentViewController'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isViewLoaded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadView'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='loadViewIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='modalPresentationStyle'>
<retval declared_type64='UIModalPresentationStyle' type64='q'/>
</method>
<method selector='modalTransitionStyle'>
<retval declared_type64='UIModalTransitionStyle' type64='q'/>
</method>
<method selector='navigationController'>
<retval declared_type64='UINavigationController * _Nullable' type64='@'/>
</method>
<method selector='navigationItem'>
<retval declared_type64='UINavigationItem * _Nonnull' type64='@'/>
</method>
<method selector='nibBundle'>
<retval declared_type64='NSBundle * _Nullable' type64='@'/>
</method>
<method selector='nibName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='overrideTraitCollectionForChildViewController:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='childViewController' type64='@'/>
<retval declared_type64='UITraitCollection * _Nullable' type64='@'/>
</method>
<method selector='parentViewController'>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='performSegueWithIdentifier:sender:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverPresentationController'>
<retval declared_type64='UIPopoverPresentationController * _Nullable' type64='@'/>
</method>
<method selector='preferredContentSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='prepareForSegue:sender:'>
<arg declared_type64='UIStoryboardSegue * _Nonnull' index='0' name='segue' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentViewController:animated:completion:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='viewControllerToPresent' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='2' name='completion' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentationController'>
<retval declared_type64='UIPresentationController * _Nullable' type64='@'/>
</method>
<method selector='presentedViewController'>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='presentingViewController'>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='previewActionItems'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='providesPresentationContextTransitionStyle'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='registerForPreviewingWithDelegate:sourceView:'>
<arg declared_type64='id _Nonnull' index='0' name='delegate' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='sourceView' type64='@'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='removeFromParentViewController'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeKeyCommand:'>
<arg declared_type64='UIKeyCommand * _Nonnull' index='0' name='keyCommand' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='restorationClass'>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method selector='restorationIdentifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='segueForUnwindingToViewController:fromViewController:identifier:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='toViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='fromViewController' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='identifier' type64='@'/>
<retval declared_type64='UIStoryboardSegue * _Nullable' type64='@'/>
</method>
<method selector='separateSecondaryViewControllerForSplitViewController:'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='setAutomaticallyAdjustsScrollViewInsets:'>
<arg declared_type64='BOOL' index='0' name='automaticallyAdjustsScrollViewInsets' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefinesPresentationContext:'>
<arg declared_type64='BOOL' index='0' name='definesPresentationContext' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEdgesForExtendedLayout:'>
<arg declared_type64='UIRectEdge' index='0' name='edgesForExtendedLayout' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditing:'>
<arg declared_type64='BOOL' index='0' name='editing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditing:animated:'>
<arg declared_type64='BOOL' index='0' name='editing' type64='B'/>
<arg declared_type64='BOOL' index='1' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtendedLayoutIncludesOpaqueBars:'>
<arg declared_type64='BOOL' index='0' name='extendedLayoutIncludesOpaqueBars' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setModalInPopover:'>
<arg declared_type64='BOOL' index='0' name='modalInPopover' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setModalPresentationStyle:'>
<arg declared_type64='UIModalPresentationStyle' index='0' name='modalPresentationStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setModalTransitionStyle:'>
<arg declared_type64='UIModalTransitionStyle' index='0' name='modalTransitionStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOverrideTraitCollection:forChildViewController:'>
<arg declared_type64='UITraitCollection * _Nullable' index='0' name='collection' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='childViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredContentSize:'>
<arg declared_type64='CGSize' index='0' name='preferredContentSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProvidesPresentationContextTransitionStyle:'>
<arg declared_type64='BOOL' index='0' name='providesPresentationContextTransitionStyle' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRestorationClass:'>
<arg declared_type64='Class _Nullable' index='0' name='restorationClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRestorationIdentifier:'>
<arg declared_type64='NSString * _Nullable' index='0' name='restorationIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabBarItem:'>
<arg declared_type64='UITabBarItem * _Nullable' index='0' name='tabBarItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransitioningDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='transitioningDelegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setView:'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldAutomaticallyForwardAppearanceMethods'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldPerformSegueWithIdentifier:sender:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showDetailViewController:sender:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='vc' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showViewController:sender:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='vc' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='splitViewController'>
<retval declared_type64='UISplitViewController * _Nullable' type64='@'/>
</method>
<method selector='storyboard'>
<retval declared_type64='UIStoryboard * _Nullable' type64='@'/>
</method>
<method selector='tabBarController'>
<retval declared_type64='UITabBarController * _Nullable' type64='@'/>
</method>
<method selector='tabBarItem'>
<retval declared_type64='UITabBarItem * _Nonnull' type64='@'/>
</method>
<method selector='targetViewControllerForAction:sender:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='topLayoutGuide'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='transitionCoordinator'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='transitionFromViewController:toViewController:duration:options:animations:completion:'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='fromViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='toViewController' type64='@'/>
<arg declared_type64='NSTimeInterval' index='2' name='duration' type64='d'/>
<arg declared_type64='UIViewAnimationOptions' index='3' name='options' type64='Q'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='4' name='animations' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='5' name='completion' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transitioningDelegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='unregisterForPreviewingWithContext:'>
<arg declared_type64='id _Nonnull' index='0' name='previewing' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unwindForSegue:towardsViewController:'>
<arg declared_type64='UIStoryboardSegue * _Nonnull' index='0' name='unwindSegue' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='subsequentVC' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateViewConstraints'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='view'>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
<method selector='viewControllerForUnwindSegueAction:fromViewController:withSender:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='fromViewController' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='sender' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='viewDidAppear:'>
<arg declared_type64='BOOL' index='0' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidDisappear:'>
<arg declared_type64='BOOL' index='0' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidLayoutSubviews'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidLoad'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewIfLoaded'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='viewWillAppear:'>
<arg declared_type64='BOOL' index='0' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillDisappear:'>
<arg declared_type64='BOOL' index='0' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillLayoutSubviews'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willMoveToParentViewController:'>
<arg declared_type64='UIViewController * _Nullable' index='0' name='parent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIVisualEffectView'>
<method selector='contentView'>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
<method selector='effect'>
<retval declared_type64='UIVisualEffect * _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithEffect:'>
<arg declared_type64='UIVisualEffect * _Nullable' index='0' name='effect' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setEffect:'>
<arg declared_type64='UIVisualEffect * _Nullable' index='0' name='effect' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='UIWindow'>
<method selector='becomeKeyWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='convertPoint:fromWindow:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='UIWindow * _Nullable' index='1' name='window' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toWindow:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='UIWindow * _Nullable' index='1' name='window' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromWindow:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIWindow * _Nullable' index='1' name='window' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toWindow:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIWindow * _Nullable' index='1' name='window' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='isKeyWindow'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='makeKeyAndVisible'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeKeyWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resignKeyWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rootViewController'>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='screen'>
<retval declared_type64='UIScreen * _Nonnull' type64='@'/>
</method>
<method selector='sendEvent:'>
<arg declared_type64='UIEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRootViewController:'>
<arg declared_type64='UIViewController * _Nullable' index='0' name='rootViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScreen:'>
<arg declared_type64='UIScreen * _Nonnull' index='0' name='screen' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWindowLevel:'>
<arg declared_type64='UIWindowLevel' index='0' name='windowLevel' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowLevel'>
<retval declared_type64='UIWindowLevel' type64='d'/>
</method>
</class>
<informal_protocol name='NSLayoutManagerDelegate'>
<method selector='layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}96@0:8@16Q24@32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGPoint=dd}72Q88'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='textContainer' type64='@'/>
<arg declared_type64='CGRect' index='3' name='proposedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGPoint' index='4' name='glyphPosition' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='5' name='charIndex' type64='Q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:' type64='v36@0:8@16@24B32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSTextContainer * _Nullable' index='1' name='textContainer' type64='@'/>
<arg declared_type64='BOOL' index='2' name='layoutFinishedFlag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='CGRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='CGRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='CGRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:' type64='B32@0:8@16Q24'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:' type64='B32@0:8@16Q24'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:' type64='Q72@0:8@16r^S24r^q32r^Q40@48{_NSRange=QQ}56'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='1' name='glyphs' type64='^S'/>
<arg const='true' declared_type64='NSGlyphProperty * _Nonnull' index='2' name='props' type64='^q'/>
<arg const='true' declared_type64='NSUInteger * _Nonnull' index='3' name='charIndexes' type64='^Q'/>
<arg declared_type64='UIFont * _Nonnull' index='4' name='aFont' type64='@'/>
<arg declared_type64='NSRange' index='5' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:' type64='B72@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^{CGRect={CGPoint=dd}{CGSize=dd}}32N^d40@48{_NSRange=QQ}56'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='CGRect * _Nonnull' index='1' name='lineFragmentRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGRect * _Nonnull' index='2' name='lineFragmentUsedRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat * _Nonnull' index='3' name='baselineOffset' type64='^d'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='4' name='textContainer' type64='@'/>
<arg declared_type64='NSRange' index='5' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldUseAction:forControlCharacterAtIndex:' type64='q40@0:8@16q24Q32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSControlCharacterAction' index='1' name='action' type64='q'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='NSControlCharacterAction' type64='q'/>
</method>
<method selector='layoutManager:textContainer:didChangeGeometryFromSize:' type64='v48@0:8@16@24{CGSize=dd}32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='textContainer' type64='@'/>
<arg declared_type64='CGSize' index='2' name='oldSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutManagerDidInvalidateLayout:' type64='v24@0:8@16'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextAttachmentContainer'>
<method selector='attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGPoint=dd}56Q72'>
<arg declared_type64='NSTextContainer * _Nullable' index='0' name='textContainer' type64='@'/>
<arg declared_type64='CGRect' index='1' name='lineFrag' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGPoint' index='2' name='position' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageForBounds:textContainer:characterIndex:' type64='@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56'>
<arg declared_type64='CGRect' index='0' name='imageBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nullable' index='1' name='textContainer' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextLayoutOrientationProvider'>
<method selector='layoutOrientation' type64='q16@0:8'>
<retval declared_type64='NSTextLayoutOrientation' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextStorageDelegate'>
<method selector='textStorage:didProcessEditing:range:changeInLength:' type64='v56@0:8@16Q24{_NSRange=QQ}32q48'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='textStorage' type64='@'/>
<arg declared_type64='NSTextStorageEditActions' index='1' name='editedMask' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='editedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='3' name='delta' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStorage:willProcessEditing:range:changeInLength:' type64='v56@0:8@16Q24{_NSRange=QQ}32q48'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='textStorage' type64='@'/>
<arg declared_type64='NSTextStorageEditActions' index='1' name='editedMask' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='editedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='3' name='delta' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibility'>
<method selector='accessibilityActivationPoint' type64='{CGPoint=dd}16@0:8'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityElementsHidden' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityHeaderElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityHint' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityLabel' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityLanguage' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityNavigationStyle' type64='q16@0:8'>
<retval declared_type64='UIAccessibilityNavigationStyle' type64='q'/>
</method>
<method selector='accessibilityPath' type64='@16@0:8'>
<retval declared_type64='UIBezierPath * _Nullable' type64='@'/>
</method>
<method selector='accessibilityTraits' type64='Q16@0:8'>
<retval declared_type64='UIAccessibilityTraits' type64='Q'/>
</method>
<method selector='accessibilityValue' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityViewIsModal' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityElement' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAccessibilityActivationPoint:' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type64='CGPoint' index='0' name='accessibilityActivationPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityElementsHidden:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityElementsHidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFrame:' type64='v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16'>
<arg declared_type64='CGRect' index='0' name='accessibilityFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHeaderElements:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityHeaderElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHint:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityHint' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLabel:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLanguage:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityLanguage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityNavigationStyle:' type64='v24@0:8q16'>
<arg declared_type64='UIAccessibilityNavigationStyle' index='0' name='accessibilityNavigationStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityPath:' type64='v24@0:8@16'>
<arg declared_type64='UIBezierPath * _Nullable' index='0' name='accessibilityPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityTraits:' type64='v24@0:8Q16'>
<arg declared_type64='UIAccessibilityTraits' index='0' name='accessibilityTraits' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityValue:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityViewIsModal:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityViewIsModal' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIsAccessibilityElement:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='isAccessibilityElement' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldGroupAccessibilityChildren:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='shouldGroupAccessibilityChildren' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldGroupAccessibilityChildren' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityAction'>
<method selector='accessibilityActivate' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityCustomActions' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityDecrement' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilityIncrement' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilityPerformEscape' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformMagicTap' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityScroll:' type64='B24@0:8q16'>
<arg declared_type64='UIAccessibilityScrollDirection' index='0' name='direction' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAccessibilityCustomActions:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityCustomActions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityContainer'>
<method selector='accessibilityElementAtIndex:' type64='@24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityElementCount' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='indexOfAccessibilityElement:' type64='q24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='element' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setAccessibilityElements:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityFocus'>
<method selector='accessibilityAssistiveTechnologyFocusedIdentifiers' type64='@16@0:8'>
<retval declared_type64='NSSet * _Nullable' type64='@'/>
</method>
<method selector='accessibilityElementDidBecomeFocused' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilityElementDidLoseFocus' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilityElementIsFocused' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityIdentification'>
<method selector='accessibilityIdentifier' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setAccessibilityIdentifier:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAccessibilityReadingContent'>
<method selector='accessibilityContentForLineNumber:' type64='@24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='lineNumber' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityFrameForLineNumber:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='lineNumber' type64='q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityLineNumberForPoint:' type64='q32@0:8{CGPoint=dd}16'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityPageContent' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIActivityItemSource'>
<method selector='activityViewController:dataTypeIdentifierForActivityType:' type64='@32@0:8@16@24'>
<arg declared_type64='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='activityType' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='activityViewController:itemForActivityType:' type64='@32@0:8@16@24'>
<arg declared_type64='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='activityType' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='activityViewController:subjectForActivityType:' type64='@32@0:8@16@24'>
<arg declared_type64='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='activityType' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='activityViewController:thumbnailImageForActivityType:suggestedSize:' type64='@48@0:8@16@24{CGSize=dd}32'>
<arg declared_type64='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='activityType' type64='@'/>
<arg declared_type64='CGSize' index='2' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='UIImage * _Nullable' type64='@'/>
</method>
<method selector='activityViewControllerPlaceholderItem:' type64='@24@0:8@16'>
<arg declared_type64='UIActivityViewController * _Nonnull' index='0' name='activityViewController' type64='@'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIAdaptivePresentationControllerDelegate'>
<method selector='adaptivePresentationStyleForPresentationController:' type64='q24@0:8@16'>
<arg declared_type64='UIPresentationController * _Nonnull' index='0' name='controller' type64='@'/>
<retval declared_type64='UIModalPresentationStyle' type64='q'/>
</method>
<method selector='adaptivePresentationStyleForPresentationController:traitCollection:' type64='q32@0:8@16@24'>
<arg declared_type64='UIPresentationController * _Nonnull' index='0' name='controller' type64='@'/>
<arg declared_type64='UITraitCollection * _Nonnull' index='1' name='traitCollection' type64='@'/>
<retval declared_type64='UIModalPresentationStyle' type64='q'/>
</method>
<method selector='presentationController:viewControllerForAdaptivePresentationStyle:' type64='@32@0:8@16q24'>
<arg declared_type64='UIPresentationController * _Nonnull' index='0' name='controller' type64='@'/>
<arg declared_type64='UIModalPresentationStyle' index='1' name='style' type64='q'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:' type64='v40@0:8@16q24@32'>
<arg declared_type64='UIPresentationController * _Nonnull' index='0' name='presentationController' type64='@'/>
<arg declared_type64='UIModalPresentationStyle' index='1' name='style' type64='q'/>
<arg declared_type64='id _Nullable' index='2' name='transitionCoordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIAppearance'>
<method class_method='true' selector='appearance' type64='@16@0:8'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='appearanceForTraitCollection:' type64='@24@0:8@16'>
<arg declared_type64='UITraitCollection * _Nonnull' index='0' name='trait' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='appearanceForTraitCollection:whenContainedInInstancesOfClasses:' type64='@32@0:8@16@24'>
<arg declared_type64='UITraitCollection * _Nonnull' index='0' name='trait' type64='@'/>
<arg declared_type64='NSArray&gt; * _Nonnull' index='1' name='containerTypes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='appearanceWhenContainedInInstancesOfClasses:' type64='@24@0:8@16'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='containerTypes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIApplicationDelegate'>
<method selector='application:continueUserActivity:restorationHandler:' type64='B40@0:8@16@24@?32'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSUserActivity * _Nonnull' index='1' name='userActivity' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSArray * _Nullable)' function_pointer='true' index='2' name='restorationHandler' type64='@?'>
<arg declared_type64='NSArray * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:didDecodeRestorableStateWithCoder:' type64='v32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didFailToContinueUserActivityWithType:error:' type64='v40@0:8@16@24@32'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='userActivityType' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='2' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didFailToRegisterForRemoteNotificationsWithError:' type64='v32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didFinishLaunchingWithOptions:' type64='B32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='launchOptions' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:didReceiveRemoteNotification:' type64='v32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='userInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didRegisterForRemoteNotificationsWithDeviceToken:' type64='v32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSData * _Nonnull' index='1' name='deviceToken' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didUpdateUserActivity:' type64='v32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSUserActivity * _Nonnull' index='1' name='userActivity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:handleEventsForBackgroundURLSession:completionHandler:' type64='v40@0:8@16@24@?32'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='identifier' type64='@'/>
<arg declared_type64='void (^ _Nonnull)()' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:handleWatchKitExtensionRequest:reply:' type64='v40@0:8@16@24@?32'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='userInfo' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSDictionary * _Nullable)' function_pointer='true' index='2' name='reply' type64='@?'>
<arg declared_type64='NSDictionary * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:openURL:options:' type64='B40@0:8@16@24@32'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='app' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='options' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:shouldAllowExtensionPointIdentifier:' type64='B32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='extensionPointIdentifier' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:shouldRestoreApplicationState:' type64='B32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:shouldSaveApplicationState:' type64='B32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:viewControllerWithRestorationIdentifierPath:coder:' type64='@40@0:8@16@24@32'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='identifierComponents' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='2' name='coder' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='application:willContinueUserActivityWithType:' type64='B32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='userActivityType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:willEncodeRestorableStateWithCoder:' type64='v32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:willFinishLaunchingWithOptions:' type64='B32@0:8@16@24'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='launchOptions' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='applicationDidBecomeActive:' type64='v24@0:8@16'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidEnterBackground:' type64='v24@0:8@16'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidFinishLaunching:' type64='v24@0:8@16'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidReceiveMemoryWarning:' type64='v24@0:8@16'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationProtectedDataDidBecomeAvailable:' type64='v24@0:8@16'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationProtectedDataWillBecomeUnavailable:' type64='v24@0:8@16'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationShouldRequestHealthAuthorization:' type64='v24@0:8@16'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationSignificantTimeChange:' type64='v24@0:8@16'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillEnterForeground:' type64='v24@0:8@16'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillResignActive:' type64='v24@0:8@16'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillTerminate:' type64='v24@0:8@16'>
<arg declared_type64='UIApplication * _Nonnull' index='0' name='application' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWindow:' type64='v24@0:8@16'>
<arg declared_type64='UIWindow * _Nullable' index='0' name='window' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window' type64='@16@0:8'>
<retval declared_type64='UIWindow * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIBarPositioning'>
<method selector='barPosition' type64='q16@0:8'>
<retval declared_type64='UIBarPosition' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UIBarPositioningDelegate'>
<method selector='positionForBar:' type64='q24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='bar' type64='@'/>
<retval declared_type64='UIBarPosition' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDataSource'>
<method selector='collectionView:canMoveItemAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:cellForItemAtIndexPath:' type64='@32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionViewCell * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:moveItemAtIndexPath:toIndexPath:' type64='v40@0:8@16@24@32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='destinationIndexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:numberOfItemsInSection:' type64='q32@0:8@16q24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='collectionView:viewForSupplementaryElementOfKind:atIndexPath:' type64='@40@0:8@16@24@32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='kind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='UICollectionReusableView * _Nonnull' type64='@'/>
</method>
<method selector='numberOfSectionsInCollectionView:' type64='q24@0:8@16'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDelegate'>
<method selector='collectionView:canFocusItemAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:canPerformAction:forItemAtIndexPath:withSender:' type64='B48@0:8@16:24@32@40'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:didDeselectItemAtIndexPath:' type64='v32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didEndDisplayingCell:forItemAtIndexPath:' type64='v40@0:8@16@24@32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:' type64='v48@0:8@16@24@32@40'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionReusableView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='3' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didHighlightItemAtIndexPath:' type64='v32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didSelectItemAtIndexPath:' type64='v32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didUnhighlightItemAtIndexPath:' type64='v32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didUpdateFocusInContext:withAnimationCoordinator:' type64='v40@0:8@16@24@32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewFocusUpdateContext * _Nonnull' index='1' name='context' type64='@'/>
<arg declared_type64='UIFocusAnimationCoordinator * _Nonnull' index='2' name='coordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:performAction:forItemAtIndexPath:withSender:' type64='v48@0:8@16:24@32@40'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:shouldDeselectItemAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:shouldHighlightItemAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:shouldSelectItemAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:shouldShowMenuForItemAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:shouldUpdateFocusInContext:' type64='B32@0:8@16@24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewFocusUpdateContext * _Nonnull' index='1' name='context' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:targetContentOffsetForProposedContentOffset:' type64='{CGPoint=dd}40@0:8@16{CGPoint=dd}24'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='proposedContentOffset' type64='{CGPoint=dd}'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:' type64='@40@0:8@16@24@32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='originalIndexPath' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='proposedIndexPath' type64='@'/>
<retval declared_type64='NSIndexPath * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:transitionLayoutForOldLayout:newLayout:' type64='@40@0:8@16@24@32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='fromLayout' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='2' name='toLayout' type64='@'/>
<retval declared_type64='UICollectionViewTransitionLayout * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:willDisplayCell:forItemAtIndexPath:' type64='v40@0:8@16@24@32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:' type64='v48@0:8@16@24@32@40'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionReusableView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='3' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indexPathForPreferredFocusedViewInCollectionView:' type64='@24@0:8@16'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UICollectionViewDelegateFlowLayout'>
<method selector='collectionView:layout:insetForSectionAtIndex:' type64='{UIEdgeInsets=dddd}40@0:8@16@24q32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='collectionView:layout:minimumInteritemSpacingForSectionAtIndex:' type64='d40@0:8@16@24q32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='collectionView:layout:minimumLineSpacingForSectionAtIndex:' type64='d40@0:8@16@24q32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='collectionView:layout:referenceSizeForFooterInSection:' type64='{CGSize=dd}40@0:8@16@24q32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:referenceSizeForHeaderInSection:' type64='{CGSize=dd}40@0:8@16@24q32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:sizeForItemAtIndexPath:' type64='{CGSize=dd}40@0:8@16@24@32'>
<arg declared_type64='UICollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='UICollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='UICollisionBehaviorDelegate'>
<method selector='collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:' type64='v56@0:8@16@24@32{CGPoint=dd}40'>
<arg declared_type64='UICollisionBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='identifier' type64='@'/>
<arg declared_type64='CGPoint' index='3' name='p' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collisionBehavior:beganContactForItem:withItem:atPoint:' type64='v56@0:8@16@24@32{CGPoint=dd}40'>
<arg declared_type64='UICollisionBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item1' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item2' type64='@'/>
<arg declared_type64='CGPoint' index='3' name='p' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collisionBehavior:endedContactForItem:withBoundaryIdentifier:' type64='v40@0:8@16@24@32'>
<arg declared_type64='UICollisionBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collisionBehavior:endedContactForItem:withItem:' type64='v40@0:8@16@24@32'>
<arg declared_type64='UICollisionBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item1' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item2' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIContentContainer'>
<method selector='preferredContentSize' type64='{CGSize=dd}16@0:8'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='preferredContentSizeDidChangeForChildContentContainer:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeForChildContentContainer:withParentContainerSize:' type64='{CGSize=dd}40@0:8@16{CGSize=dd}24'>
<arg declared_type64='id _Nonnull' index='0' name='container' type64='@'/>
<arg declared_type64='CGSize' index='1' name='parentSize' type64='{CGSize=dd}'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='systemLayoutFittingSizeDidChangeForChildContentContainer:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillTransitionToSize:withTransitionCoordinator:' type64='v40@0:8{CGSize=dd}16@32'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willTransitionToTraitCollection:withTransitionCoordinator:' type64='v32@0:8@16@24'>
<arg declared_type64='UITraitCollection * _Nonnull' index='0' name='newCollection' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UICoordinateSpace'>
<method selector='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertPoint:fromCoordinateSpace:' type64='{CGPoint=dd}40@0:8{CGPoint=dd}16@32'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinateSpace' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toCoordinateSpace:' type64='{CGPoint=dd}40@0:8{CGPoint=dd}16@32'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinateSpace' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromCoordinateSpace:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinateSpace' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toCoordinateSpace:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='id _Nonnull' index='1' name='coordinateSpace' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</informal_protocol>
<informal_protocol name='UIDataSourceModelAssociation'>
<method selector='indexPathForElementWithModelIdentifier:inView:' type64='@32@0:8@16@24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='modelIdentifierForElementAtIndexPath:inView:' type64='@32@0:8@16@24'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='idx' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIDynamicAnimatorDelegate'>
<method selector='dynamicAnimatorDidPause:' type64='v24@0:8@16'>
<arg declared_type64='UIDynamicAnimator * _Nonnull' index='0' name='animator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dynamicAnimatorWillResume:' type64='v24@0:8@16'>
<arg declared_type64='UIDynamicAnimator * _Nonnull' index='0' name='animator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIDynamicItem'>
<method selector='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='center' type64='{CGPoint=dd}16@0:8'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='collisionBoundingPath' type64='@16@0:8'>
<retval declared_type64='UIBezierPath * _Nonnull' type64='@'/>
</method>
<method selector='collisionBoundsType' type64='Q16@0:8'>
<retval declared_type64='UIDynamicItemCollisionBoundsType' type64='Q'/>
</method>
<method selector='setCenter:' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type64='CGPoint' index='0' name='center' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransform:' type64='v64@0:8{CGAffineTransform=dddddd}16'>
<arg declared_type64='CGAffineTransform' index='0' name='transform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transform' type64='{CGAffineTransform=dddddd}16@0:8'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
</informal_protocol>
<informal_protocol name='UIFocusEnvironment'>
<method selector='didUpdateFocusInContext:withAnimationCoordinator:' type64='v32@0:8@16@24'>
<arg declared_type64='UIFocusUpdateContext * _Nonnull' index='0' name='context' type64='@'/>
<arg declared_type64='UIFocusAnimationCoordinator * _Nonnull' index='1' name='coordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preferredFocusedView' type64='@16@0:8'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='setNeedsFocusUpdate' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldUpdateFocusInContext:' type64='B24@0:8@16'>
<arg declared_type64='UIFocusUpdateContext * _Nonnull' index='0' name='context' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='updateFocusIfNeeded' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIGestureRecognizerDelegate'>
<method selector='gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:' type64='B32@0:8@16@24'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldReceivePress:' type64='B32@0:8@16@24'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='UIPress * _Nonnull' index='1' name='press' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldReceiveTouch:' type64='B32@0:8@16@24'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='UITouch * _Nonnull' index='1' name='touch' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:' type64='B32@0:8@16@24'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldRequireFailureOfGestureRecognizer:' type64='B32@0:8@16@24'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizerShouldBegin:' type64='B24@0:8@16'>
<arg declared_type64='UIGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIGuidedAccessRestrictionDelegate'>
<method selector='detailTextForGuidedAccessRestrictionWithIdentifier:' type64='@24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='restrictionIdentifier' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='guidedAccessRestrictionIdentifiers' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='guidedAccessRestrictionWithIdentifier:didChangeState:' type64='v32@0:8@16q24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='restrictionIdentifier' type64='@'/>
<arg declared_type64='UIGuidedAccessRestrictionState' index='1' name='newRestrictionState' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textForGuidedAccessRestrictionWithIdentifier:' type64='@24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='restrictionIdentifier' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIInputViewAudioFeedback'>
<method selector='enableInputClicksWhenVisible' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIKeyInput'>
<method selector='deleteBackward' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hasText' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='insertText:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='text' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UILayoutSupport'>
<method selector='bottomAnchor' type64='@16@0:8'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='heightAnchor' type64='@16@0:8'>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
<method selector='length' type64='d16@0:8'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='topAnchor' type64='@16@0:8'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UINavigationBarDelegate'>
<method selector='navigationBar:didPopItem:' type64='v32@0:8@16@24'>
<arg declared_type64='UINavigationBar * _Nonnull' index='0' name='navigationBar' type64='@'/>
<arg declared_type64='UINavigationItem * _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='navigationBar:didPushItem:' type64='v32@0:8@16@24'>
<arg declared_type64='UINavigationBar * _Nonnull' index='0' name='navigationBar' type64='@'/>
<arg declared_type64='UINavigationItem * _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='navigationBar:shouldPopItem:' type64='B32@0:8@16@24'>
<arg declared_type64='UINavigationBar * _Nonnull' index='0' name='navigationBar' type64='@'/>
<arg declared_type64='UINavigationItem * _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='navigationBar:shouldPushItem:' type64='B32@0:8@16@24'>
<arg declared_type64='UINavigationBar * _Nonnull' index='0' name='navigationBar' type64='@'/>
<arg declared_type64='UINavigationItem * _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='UINavigationControllerDelegate'>
<method selector='navigationController:animationControllerForOperation:fromViewController:toViewController:' type64='@48@0:8@16q24@32@40'>
<arg declared_type64='UINavigationController * _Nonnull' index='0' name='navigationController' type64='@'/>
<arg declared_type64='UINavigationControllerOperation' index='1' name='operation' type64='q'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='fromVC' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='3' name='toVC' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='navigationController:didShowViewController:animated:' type64='v36@0:8@16@24B32'>
<arg declared_type64='UINavigationController * _Nonnull' index='0' name='navigationController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<arg declared_type64='BOOL' index='2' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='navigationController:interactionControllerForAnimationController:' type64='@32@0:8@16@24'>
<arg declared_type64='UINavigationController * _Nonnull' index='0' name='navigationController' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='animationController' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='navigationController:willShowViewController:animated:' type64='v36@0:8@16@24B32'>
<arg declared_type64='UINavigationController * _Nonnull' index='0' name='navigationController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<arg declared_type64='BOOL' index='2' name='animated' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UINibLoadingAdditions'>
<method selector='awakeFromNib' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForInterfaceBuilder' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIObjectRestoration'>
<method class_method='true' selector='objectWithRestorationIdentifierPath:coder:' type64='@32@0:8@16@24'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='identifierComponents' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIPageViewControllerDataSource'>
<method selector='pageViewController:viewControllerAfterViewController:' type64='@32@0:8@16@24'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='pageViewController:viewControllerBeforeViewController:' type64='@32@0:8@16@24'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='presentationCountForPageViewController:' type64='q24@0:8@16'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='presentationIndexForPageViewController:' type64='q24@0:8@16'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UIPageViewControllerDelegate'>
<method selector='pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:' type64='v40@0:8@16B24@28B36'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<arg declared_type64='BOOL' index='1' name='finished' type64='B'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='previousViewControllers' type64='@'/>
<arg declared_type64='BOOL' index='3' name='completed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageViewController:willTransitionToViewControllers:' type64='v32@0:8@16@24'>
<arg declared_type64='UIPageViewController * _Nonnull' index='0' name='pageViewController' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='pendingViewControllers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIPopoverBackgroundViewMethods'>
<method class_method='true' selector='arrowBase' type64='d16@0:8'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='arrowHeight' type64='d16@0:8'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='contentViewInsets' type64='{UIEdgeInsets=dddd}16@0:8'>
<retval declared_type64='UIEdgeInsets' type64='{UIEdgeInsets=dddd}'/>
</method>
</informal_protocol>
<informal_protocol name='UIPopoverControllerDelegate'>
<method selector='popoverController:willRepositionPopoverToRect:inView:' type64='v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32'>
<arg declared_type64='UIPopoverController * _Nonnull' index='0' name='popoverController' type64='@'/>
<arg declared_type64='CGRect * _Nonnull' index='1' name='rect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UIView * _Nonnull * _Nonnull' index='2' name='view' type64='^@' type_modifier='N'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverControllerDidDismissPopover:' type64='v24@0:8@16'>
<arg declared_type64='UIPopoverController * _Nonnull' index='0' name='popoverController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverControllerShouldDismissPopover:' type64='B24@0:8@16'>
<arg declared_type64='UIPopoverController * _Nonnull' index='0' name='popoverController' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='UIPreviewActionItem'>
<method selector='title' type64='@16@0:8'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIResponderStandardEditActions'>
<method selector='copy:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cut:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='decreaseSize:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='delete:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='increaseSize:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeTextWritingDirectionLeftToRight:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeTextWritingDirectionRightToLeft:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='paste:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='select:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectAll:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleBoldface:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleItalics:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleUnderline:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIScrollViewAccessibilityDelegate'>
<method selector='accessibilityScrollStatusForScrollView:' type64='@24@0:8@16'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIScrollViewDelegate'>
<method selector='scrollViewDidEndDecelerating:' type64='v24@0:8@16'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidEndDragging:willDecelerate:' type64='v28@0:8@16B24'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<arg declared_type64='BOOL' index='1' name='decelerate' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidEndScrollingAnimation:' type64='v24@0:8@16'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidEndZooming:withView:atScale:' type64='v40@0:8@16@24d32'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<arg declared_type64='UIView * _Nullable' index='1' name='view' type64='@'/>
<arg declared_type64='CGFloat' index='2' name='scale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidScroll:' type64='v24@0:8@16'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidScrollToTop:' type64='v24@0:8@16'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewDidZoom:' type64='v24@0:8@16'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewShouldScrollToTop:' type64='B24@0:8@16'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='scrollViewWillBeginDecelerating:' type64='v24@0:8@16'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewWillBeginDragging:' type64='v24@0:8@16'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewWillBeginZooming:withView:' type64='v32@0:8@16@24'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<arg declared_type64='UIView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViewWillEndDragging:withVelocity:targetContentOffset:' type64='v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='velocity' type64='{CGPoint=dd}'/>
<arg declared_type64='CGPoint * _Nonnull' index='2' name='targetContentOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewForZoomingInScrollView:' type64='@24@0:8@16'>
<arg declared_type64='UIScrollView * _Nonnull' index='0' name='scrollView' type64='@'/>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UISearchBarDelegate'>
<method selector='searchBar:selectedScopeButtonIndexDidChange:' type64='v32@0:8@16q24'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='selectedScope' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchBar:shouldChangeTextInRange:replacementText:' type64='B48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='text' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='searchBar:textDidChange:' type64='v32@0:8@16@24'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='searchText' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchBarSearchButtonClicked:' type64='v24@0:8@16'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchBarShouldBeginEditing:' type64='B24@0:8@16'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='searchBarShouldEndEditing:' type64='B24@0:8@16'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='searchBarTextDidBeginEditing:' type64='v24@0:8@16'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchBarTextDidEndEditing:' type64='v24@0:8@16'>
<arg declared_type64='UISearchBar * _Nonnull' index='0' name='searchBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UISearchControllerDelegate'>
<method selector='didDismissSearchController:' type64='v24@0:8@16'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didPresentSearchController:' type64='v24@0:8@16'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentSearchController:' type64='v24@0:8@16'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willDismissSearchController:' type64='v24@0:8@16'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willPresentSearchController:' type64='v24@0:8@16'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UISearchResultsUpdating'>
<method selector='updateSearchResultsForSearchController:' type64='v24@0:8@16'>
<arg declared_type64='UISearchController * _Nonnull' index='0' name='searchController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UISplitViewControllerDelegate'>
<method selector='primaryViewControllerForCollapsingSplitViewController:' type64='@24@0:8@16'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='primaryViewControllerForExpandingSplitViewController:' type64='@24@0:8@16'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='splitViewController:collapseSecondaryViewController:ontoPrimaryViewController:' type64='B40@0:8@16@24@32'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='secondaryViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='primaryViewController' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitViewController:separateSecondaryViewControllerFromPrimaryViewController:' type64='@32@0:8@16@24'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='primaryViewController' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
<method selector='splitViewController:showDetailViewController:sender:' type64='B40@0:8@16@24@32'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='vc' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitViewController:showViewController:sender:' type64='B40@0:8@16@24@32'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='splitViewController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='vc' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitViewController:willChangeToDisplayMode:' type64='v32@0:8@16q24'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='svc' type64='@'/>
<arg declared_type64='UISplitViewControllerDisplayMode' index='1' name='displayMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='targetDisplayModeForActionInSplitViewController:' type64='q24@0:8@16'>
<arg declared_type64='UISplitViewController * _Nonnull' index='0' name='svc' type64='@'/>
<retval declared_type64='UISplitViewControllerDisplayMode' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UIStateRestoring'>
<method selector='applicationFinishedRestoringState' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='decodeRestorableStateWithCoder:' type64='v24@0:8@16'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeRestorableStateWithCoder:' type64='v24@0:8@16'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='objectRestorationClass' type64='#16@0:8'>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method selector='restorationParent' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITabBarControllerDelegate'>
<method selector='tabBarController:animationControllerForTransitionFromViewController:toViewController:' type64='@40@0:8@16@24@32'>
<arg declared_type64='UITabBarController * _Nonnull' index='0' name='tabBarController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='fromVC' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='toVC' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tabBarController:didSelectViewController:' type64='v32@0:8@16@24'>
<arg declared_type64='UITabBarController * _Nonnull' index='0' name='tabBarController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabBarController:interactionControllerForAnimationController:' type64='@32@0:8@16@24'>
<arg declared_type64='UITabBarController * _Nonnull' index='0' name='tabBarController' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='animationController' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tabBarController:shouldSelectViewController:' type64='B32@0:8@16@24'>
<arg declared_type64='UITabBarController * _Nonnull' index='0' name='tabBarController' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='UITabBarDelegate'>
<method selector='tabBar:didSelectItem:' type64='v32@0:8@16@24'>
<arg declared_type64='UITabBar * _Nonnull' index='0' name='tabBar' type64='@'/>
<arg declared_type64='UITabBarItem * _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDataSource'>
<method selector='numberOfSectionsInTableView:' type64='q24@0:8@16'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='tableView:canEditRowAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:canMoveRowAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:cellForRowAtIndexPath:' type64='@32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UITableViewCell * _Nonnull' type64='@'/>
</method>
<method selector='tableView:commitEditingStyle:forRowAtIndexPath:' type64='v40@0:8@16q24@32'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UITableViewCellEditingStyle' index='1' name='editingStyle' type64='q'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:moveRowAtIndexPath:toIndexPath:' type64='v40@0:8@16@24@32'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='destinationIndexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:numberOfRowsInSection:' type64='q32@0:8@16q24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='tableView:titleForFooterInSection:' type64='@32@0:8@16q24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tableView:titleForHeaderInSection:' type64='@32@0:8@16q24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITableViewDelegate'>
<method selector='indexPathForPreferredFocusedViewInTableView:' type64='@24@0:8@16'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='tableView:accessoryButtonTappedForRowWithIndexPath:' type64='v32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:canFocusRowAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:canPerformAction:forRowAtIndexPath:withSender:' type64='B48@0:8@16:24@32@40'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:didDeselectRowAtIndexPath:' type64='v32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didEndDisplayingCell:forRowAtIndexPath:' type64='v40@0:8@16@24@32'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UITableViewCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didEndDisplayingFooterView:forSection:' type64='v40@0:8@16@24q32'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didEndDisplayingHeaderView:forSection:' type64='v40@0:8@16@24q32'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didHighlightRowAtIndexPath:' type64='v32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didSelectRowAtIndexPath:' type64='v32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didUnhighlightRowAtIndexPath:' type64='v32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didUpdateFocusInContext:withAnimationCoordinator:' type64='v40@0:8@16@24@32'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UITableViewFocusUpdateContext * _Nonnull' index='1' name='context' type64='@'/>
<arg declared_type64='UIFocusAnimationCoordinator * _Nonnull' index='2' name='coordinator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:editingStyleForRowAtIndexPath:' type64='q32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='UITableViewCellEditingStyle' type64='q'/>
</method>
<method selector='tableView:estimatedHeightForFooterInSection:' type64='d32@0:8@16q24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:estimatedHeightForHeaderInSection:' type64='d32@0:8@16q24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:estimatedHeightForRowAtIndexPath:' type64='d32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:heightForFooterInSection:' type64='d32@0:8@16q24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:heightForHeaderInSection:' type64='d32@0:8@16q24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:heightForRowAtIndexPath:' type64='d32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:indentationLevelForRowAtIndexPath:' type64='q32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='tableView:performAction:forRowAtIndexPath:withSender:' type64='v48@0:8@16:24@32@40'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:shouldHighlightRowAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldIndentWhileEditingRowAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldShowMenuForRowAtIndexPath:' type64='B32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldUpdateFocusInContext:' type64='B32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UITableViewFocusUpdateContext * _Nonnull' index='1' name='context' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:' type64='@40@0:8@16@24@32'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='sourceIndexPath' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='proposedDestinationIndexPath' type64='@'/>
<retval declared_type64='NSIndexPath * _Nonnull' type64='@'/>
</method>
<method selector='tableView:viewForFooterInSection:' type64='@32@0:8@16q24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='tableView:viewForHeaderInSection:' type64='@32@0:8@16q24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='tableView:willDeselectRowAtIndexPath:' type64='@32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='tableView:willDisplayCell:forRowAtIndexPath:' type64='v40@0:8@16@24@32'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UITableViewCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:willDisplayFooterView:forSection:' type64='v40@0:8@16@24q32'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:willDisplayHeaderView:forSection:' type64='v40@0:8@16@24q32'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='UIView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:willSelectRowAtIndexPath:' type64='@32@0:8@16@24'>
<arg declared_type64='UITableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITextDocumentProxy'>
<method selector='adjustTextPositionByCharacterOffset:' type64='v24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='offset' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='documentContextAfterInput' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='documentContextBeforeInput' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITextFieldDelegate'>
<method selector='textField:shouldChangeCharactersInRange:replacementString:' type64='B48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='string' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textFieldDidBeginEditing:' type64='v24@0:8@16'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textFieldDidEndEditing:' type64='v24@0:8@16'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textFieldShouldBeginEditing:' type64='B24@0:8@16'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textFieldShouldClear:' type64='B24@0:8@16'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textFieldShouldEndEditing:' type64='B24@0:8@16'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textFieldShouldReturn:' type64='B24@0:8@16'>
<arg declared_type64='UITextField * _Nonnull' index='0' name='textField' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInput'>
<method selector='baseWritingDirectionForPosition:inDirection:' type64='q32@0:8@16q24'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextStorageDirection' index='1' name='direction' type64='q'/>
<retval declared_type64='UITextWritingDirection' type64='q'/>
</method>
<method selector='beginFloatingCursorAtPoint:' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginningOfDocument' type64='@16@0:8'>
<retval declared_type64='UITextPosition * _Nonnull' type64='@'/>
</method>
<method selector='caretRectForPosition:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='characterOffsetOfPosition:withinRange:' type64='q32@0:8@16@24'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextRange * _Nonnull' index='1' name='range' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='characterRangeAtPoint:' type64='@32@0:8{CGPoint=dd}16'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
<method selector='characterRangeByExtendingPosition:inDirection:' type64='@32@0:8@16q24'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextLayoutDirection' index='1' name='direction' type64='q'/>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
<method selector='closestPositionToPoint:' type64='@32@0:8{CGPoint=dd}16'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='closestPositionToPoint:withinRange:' type64='@40@0:8{CGPoint=dd}16@32'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='UITextRange * _Nonnull' index='1' name='range' type64='@'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='comparePosition:toPosition:' type64='q32@0:8@16@24'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextPosition * _Nonnull' index='1' name='other' type64='@'/>
<retval declared_type64='NSComparisonResult' type64='q'/>
</method>
<method selector='dictationRecognitionFailed' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dictationRecordingDidEnd' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endFloatingCursor' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endOfDocument' type64='@16@0:8'>
<retval declared_type64='UITextPosition * _Nonnull' type64='@'/>
</method>
<method selector='firstRectForRange:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameForDictationResultPlaceholder:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='placeholder' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='inputDelegate' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='insertDictationResult:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='dictationResult' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertDictationResultPlaceholder' type64='@16@0:8'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='markedTextRange' type64='@16@0:8'>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
<method selector='markedTextStyle' type64='@16@0:8'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='offsetFromPosition:toPosition:' type64='q32@0:8@16@24'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='from' type64='@'/>
<arg declared_type64='UITextPosition * _Nonnull' index='1' name='toPosition' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='positionFromPosition:inDirection:offset:' type64='@40@0:8@16q24q32'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextLayoutDirection' index='1' name='direction' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='offset' type64='q'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='positionFromPosition:offset:' type64='@32@0:8@16q24'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='offset' type64='q'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='positionWithinRange:atCharacterOffset:' type64='@32@0:8@16q24'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='offset' type64='q'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='positionWithinRange:farthestInDirection:' type64='@32@0:8@16q24'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<arg declared_type64='UITextLayoutDirection' index='1' name='direction' type64='q'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='removeDictationResultPlaceholder:willInsertResult:' type64='v28@0:8@16B24'>
<arg declared_type64='id _Nonnull' index='0' name='placeholder' type64='@'/>
<arg declared_type64='BOOL' index='1' name='willInsertResult' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceRange:withText:' type64='v32@0:8@16@24'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='text' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedTextRange' type64='@16@0:8'>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
<method selector='selectionAffinity' type64='q16@0:8'>
<retval declared_type64='UITextStorageDirection' type64='q'/>
</method>
<method selector='selectionRectsForRange:' type64='@24@0:8@16'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setBaseWritingDirection:forRange:' type64='v32@0:8q16@24'>
<arg declared_type64='UITextWritingDirection' index='0' name='writingDirection' type64='q'/>
<arg declared_type64='UITextRange * _Nonnull' index='1' name='range' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputDelegate:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='inputDelegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMarkedText:selectedRange:' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type64='NSString * _Nullable' index='0' name='markedText' type64='@'/>
<arg declared_type64='NSRange' index='1' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMarkedTextStyle:' type64='v24@0:8@16'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='markedTextStyle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedTextRange:' type64='v24@0:8@16'>
<arg declared_type64='UITextRange * _Nullable' index='0' name='selectedTextRange' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionAffinity:' type64='v24@0:8q16'>
<arg declared_type64='UITextStorageDirection' index='0' name='selectionAffinity' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldChangeTextInRange:replacementText:' type64='B32@0:8@16@24'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='text' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textInRange:' type64='@24@0:8@16'>
<arg declared_type64='UITextRange * _Nonnull' index='0' name='range' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='textInputView' type64='@16@0:8'>
<retval declared_type64='__kindof UIView * _Nonnull' type64='@'/>
</method>
<method selector='textRangeFromPosition:toPosition:' type64='@32@0:8@16@24'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='fromPosition' type64='@'/>
<arg declared_type64='UITextPosition * _Nonnull' index='1' name='toPosition' type64='@'/>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
<method selector='textStylingAtPosition:inDirection:' type64='@32@0:8@16q24'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextStorageDirection' index='1' name='direction' type64='q'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='tokenizer' type64='@16@0:8'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='unmarkText' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateFloatingCursorAtPoint:' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInputDelegate'>
<method selector='selectionDidChange:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='textInput' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectionWillChange:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='textInput' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDidChange:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='textInput' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textWillChange:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='textInput' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInputTokenizer'>
<method selector='isPosition:atBoundary:inDirection:' type64='B40@0:8@16q24q32'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextGranularity' index='1' name='granularity' type64='q'/>
<arg declared_type64='UITextDirection' index='2' name='direction' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPosition:withinTextUnit:inDirection:' type64='B40@0:8@16q24q32'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextGranularity' index='1' name='granularity' type64='q'/>
<arg declared_type64='UITextDirection' index='2' name='direction' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='positionFromPosition:toBoundary:inDirection:' type64='@40@0:8@16q24q32'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextGranularity' index='1' name='granularity' type64='q'/>
<arg declared_type64='UITextDirection' index='2' name='direction' type64='q'/>
<retval declared_type64='UITextPosition * _Nullable' type64='@'/>
</method>
<method selector='rangeEnclosingPosition:withGranularity:inDirection:' type64='@40@0:8@16q24q32'>
<arg declared_type64='UITextPosition * _Nonnull' index='0' name='position' type64='@'/>
<arg declared_type64='UITextGranularity' index='1' name='granularity' type64='q'/>
<arg declared_type64='UITextDirection' index='2' name='direction' type64='q'/>
<retval declared_type64='UITextRange * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UITextInputTraits'>
<method selector='autocapitalizationType' type64='q16@0:8'>
<retval declared_type64='UITextAutocapitalizationType' type64='q'/>
</method>
<method selector='autocorrectionType' type64='q16@0:8'>
<retval declared_type64='UITextAutocorrectionType' type64='q'/>
</method>
<method selector='enablesReturnKeyAutomatically' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSecureTextEntry' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyboardAppearance' type64='q16@0:8'>
<retval declared_type64='UIKeyboardAppearance' type64='q'/>
</method>
<method selector='keyboardType' type64='q16@0:8'>
<retval declared_type64='UIKeyboardType' type64='q'/>
</method>
<method selector='returnKeyType' type64='q16@0:8'>
<retval declared_type64='UIReturnKeyType' type64='q'/>
</method>
<method selector='setAutocapitalizationType:' type64='v24@0:8q16'>
<arg declared_type64='UITextAutocapitalizationType' index='0' name='autocapitalizationType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutocorrectionType:' type64='v24@0:8q16'>
<arg declared_type64='UITextAutocorrectionType' index='0' name='autocorrectionType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnablesReturnKeyAutomatically:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='enablesReturnKeyAutomatically' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyboardAppearance:' type64='v24@0:8q16'>
<arg declared_type64='UIKeyboardAppearance' index='0' name='keyboardAppearance' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyboardType:' type64='v24@0:8q16'>
<arg declared_type64='UIKeyboardType' index='0' name='keyboardType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReturnKeyType:' type64='v24@0:8q16'>
<arg declared_type64='UIReturnKeyType' index='0' name='returnKeyType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSecureTextEntry:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='secureTextEntry' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpellCheckingType:' type64='v24@0:8q16'>
<arg declared_type64='UITextSpellCheckingType' index='0' name='spellCheckingType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='spellCheckingType' type64='q16@0:8'>
<retval declared_type64='UITextSpellCheckingType' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='UITextViewDelegate'>
<method selector='textView:shouldChangeTextInRange:replacementText:' type64='B48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='text' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:shouldInteractWithTextAttachment:inRange:' type64='B48@0:8@16@24{_NSRange=QQ}32'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSTextAttachment * _Nonnull' index='1' name='textAttachment' type64='@'/>
<arg declared_type64='NSRange' index='2' name='characterRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:shouldInteractWithURL:inRange:' type64='B48@0:8@16@24{_NSRange=QQ}32'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='URL' type64='@'/>
<arg declared_type64='NSRange' index='2' name='characterRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textViewDidBeginEditing:' type64='v24@0:8@16'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textViewDidChange:' type64='v24@0:8@16'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textViewDidChangeSelection:' type64='v24@0:8@16'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textViewDidEndEditing:' type64='v24@0:8@16'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textViewShouldBeginEditing:' type64='B24@0:8@16'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textViewShouldEndEditing:' type64='B24@0:8@16'>
<arg declared_type64='UITextView * _Nonnull' index='0' name='textView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='UITraitEnvironment'>
<method selector='traitCollection' type64='@16@0:8'>
<retval declared_type64='UITraitCollection * _Nonnull' type64='@'/>
</method>
<method selector='traitCollectionDidChange:' type64='v24@0:8@16'>
<arg declared_type64='UITraitCollection * _Nullable' index='0' name='previousTraitCollection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerAnimatedTransitioning'>
<method selector='animateTransition:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='transitionContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationEnded:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='transitionCompleted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transitionDuration:' type64='d24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='transitionContext' type64='@'/>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerContextTransitioning'>
<method selector='cancelInteractiveTransition' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='completeTransition:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='didComplete' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='containerView' type64='@16@0:8'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='finalFrameForViewController:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='vc' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='finishInteractiveTransition' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initialFrameForViewController:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='vc' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='isAnimated' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isInteractive' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='presentationStyle' type64='q16@0:8'>
<retval declared_type64='UIModalPresentationStyle' type64='q'/>
</method>
<method selector='targetTransform' type64='{CGAffineTransform=dddddd}16@0:8'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='transitionWasCancelled' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='updateInteractiveTransition:' type64='v24@0:8d16'>
<arg declared_type64='CGFloat' index='0' name='percentComplete' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewControllerForKey:' type64='@24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='__kindof UIViewController * _Nullable' type64='@'/>
</method>
<method selector='viewForKey:' type64='@24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='__kindof UIView * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerInteractiveTransitioning'>
<method selector='completionCurve' type64='q16@0:8'>
<retval declared_type64='UIViewAnimationCurve' type64='q'/>
</method>
<method selector='completionSpeed' type64='d16@0:8'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='startInteractiveTransition:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='transitionContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerPreviewing'>
<method selector='delegate' type64='@16@0:8'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='previewingGestureRecognizerForFailureRelationship' type64='@16@0:8'>
<retval declared_type64='UIGestureRecognizer * _Nonnull' type64='@'/>
</method>
<method selector='setSourceRect:' type64='v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16'>
<arg declared_type64='CGRect' index='0' name='sourceRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sourceRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sourceView' type64='@16@0:8'>
<retval declared_type64='UIView * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerPreviewingDelegate'>
<method selector='previewingContext:commitViewController:' type64='v32@0:8@16@24'>
<arg declared_type64='id _Nonnull' index='0' name='previewingContext' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='viewControllerToCommit' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='previewingContext:viewControllerForLocation:' type64='@40@0:8@16{CGPoint=dd}24'>
<arg declared_type64='id _Nonnull' index='0' name='previewingContext' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='location' type64='{CGPoint=dd}'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerRestoration'>
<method class_method='true' selector='viewControllerWithRestorationIdentifierPath:coder:' type64='@32@0:8@16@24'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='identifierComponents' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='UIViewController * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerTransitionCoordinator'>
<method selector='animateAlongsideTransition:completion:' type64='B32@0:8@?16@?24'>
<arg declared_type64='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='0' name='animation' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='1' name='completion' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='animateAlongsideTransitionInView:animation:completion:' type64='B40@0:8@16@?24@?32'>
<arg declared_type64='UIView * _Nullable' index='0' name='view' type64='@'/>
<arg declared_type64='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='1' name='animation' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(id _Nonnull)' function_pointer='true' index='2' name='completion' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='notifyWhenInteractionEndsUsingBlock:' type64='v24@0:8@?16'>
<arg declared_type64='void (^ _Nonnull)(id _Nonnull)' function_pointer='true' index='0' name='handler' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerTransitionCoordinatorContext'>
<method selector='completionCurve' type64='q16@0:8'>
<retval declared_type64='UIViewAnimationCurve' type64='q'/>
</method>
<method selector='completionVelocity' type64='d16@0:8'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='containerView' type64='@16@0:8'>
<retval declared_type64='UIView * _Nullable' type64='@'/>
</method>
<method selector='initiallyInteractive' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAnimated' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isCancelled' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isInteractive' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='percentComplete' type64='d16@0:8'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='presentationStyle' type64='q16@0:8'>
<retval declared_type64='UIModalPresentationStyle' type64='q'/>
</method>
<method selector='targetTransform' type64='{CGAffineTransform=dddddd}16@0:8'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='transitionDuration' type64='d16@0:8'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='viewControllerForKey:' type64='@24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='__kindof UIViewController * _Nullable' type64='@'/>
</method>
<method selector='viewForKey:' type64='@24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='__kindof UIView * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='UIViewControllerTransitioningDelegate'>
<method selector='animationControllerForDismissedController:' type64='@24@0:8@16'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='dismissed' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='animationControllerForPresentedController:presentingController:sourceController:' type64='@40@0:8@16@24@32'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='presented' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='presenting' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='source' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='interactionControllerForDismissal:' type64='@24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='animator' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='interactionControllerForPresentation:' type64='@24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='animator' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='presentationControllerForPresentedViewController:presentingViewController:sourceViewController:' type64='@40@0:8@16@24@32'>
<arg declared_type64='UIViewController * _Nonnull' index='0' name='presented' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='1' name='presenting' type64='@'/>
<arg declared_type64='UIViewController * _Nonnull' index='2' name='source' type64='@'/>
<retval declared_type64='UIPresentationController * _Nullable' type64='@'/>
</method>
</informal_protocol>
</signatures>
