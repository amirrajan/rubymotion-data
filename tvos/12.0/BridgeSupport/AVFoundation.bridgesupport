<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='AVEdgeWidths' type64='{_AVEdgeWidths=&quot;left&quot;d&quot;top&quot;d&quot;right&quot;d&quot;bottom&quot;d}'>
<field declared_type64='CGFloat' name='left' type64='d'/>
<field declared_type64='CGFloat' name='top' type64='d'/>
<field declared_type64='CGFloat' name='right' type64='d'/>
<field declared_type64='CGFloat' name='bottom' type64='d'/>
</struct>
<struct name='AVPixelAspectRatio' type64='{_AVPixelAspectRatio=&quot;horizontalSpacing&quot;q&quot;verticalSpacing&quot;q}'>
<field declared_type64='NSInteger' name='horizontalSpacing' type64='q'/>
<field declared_type64='NSInteger' name='verticalSpacing' type64='q'/>
</struct>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetChapterMetadataGroupsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetContainsFragmentsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetDurationDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPreset1280x720' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPreset1920x1080' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPreset3840x2160' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPreset640x480' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPreset960x540' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetAppleM4A' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetHEVC1920x1080' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetHEVC3840x2160' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetHEVCHighestQuality' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetHighestQuality' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetLowQuality' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetMediumQuality' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetPassthrough' type64='@'/>
<constant const='true' declared_type64='AVAssetImageGeneratorApertureMode _Nonnull' name='AVAssetImageGeneratorApertureModeCleanAperture' type64='@'/>
<constant const='true' declared_type64='AVAssetImageGeneratorApertureMode _Nonnull' name='AVAssetImageGeneratorApertureModeEncodedPixels' type64='@'/>
<constant const='true' declared_type64='AVAssetImageGeneratorApertureMode _Nonnull' name='AVAssetImageGeneratorApertureModeProductionAperture' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetMediaSelectionGroupsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetResourceLoadingRequestStreamingContentKeyRequestRequiresPersistentKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetTrackSegmentsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetTrackTimeRangeDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetTrackTrackAssociationsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetWasDefragmentedNotification' type64='@'/>
<constant const='true' declared_type64='AVAssetWriterInputMediaDataLocation _Nonnull' name='AVAssetWriterInputMediaDataLocationBeforeMainMediaDataNotInterleaved' type64='@'/>
<constant const='true' declared_type64='AVAssetWriterInputMediaDataLocation _Nonnull' name='AVAssetWriterInputMediaDataLocationInterleavedWithMainMediaData' type64='@'/>
<constant const='true' declared_type64='AVAudioTimePitchAlgorithm' name='AVAudioTimePitchAlgorithmLowQualityZeroLatency' type64='@'/>
<constant const='true' declared_type64='AVAudioTimePitchAlgorithm' name='AVAudioTimePitchAlgorithmSpectral' type64='@'/>
<constant const='true' declared_type64='AVAudioTimePitchAlgorithm' name='AVAudioTimePitchAlgorithmTimeDomain' type64='@'/>
<constant const='true' declared_type64='AVAudioTimePitchAlgorithm' name='AVAudioTimePitchAlgorithmVarispeed' type64='@'/>
<constant const='true' declared_type64='float' name='AVCaptureLensPositionCurrent' type64='f'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVContentKeyRequestProtocolVersionsKey' type64='@'/>
<constant const='true' declared_type64='AVContentKeyRequestRetryReason _Nonnull' name='AVContentKeyRequestRetryReasonReceivedObsoleteContentKey' type64='@'/>
<constant const='true' declared_type64='AVContentKeyRequestRetryReason _Nonnull' name='AVContentKeyRequestRetryReasonReceivedResponseWithExpiredLease' type64='@'/>
<constant const='true' declared_type64='AVContentKeyRequestRetryReason _Nonnull' name='AVContentKeyRequestRetryReasonTimedOut' type64='@'/>
<constant const='true' declared_type64='AVContentKeySystem _Nonnull' name='AVContentKeySystemClearKey' type64='@'/>
<constant const='true' declared_type64='AVContentKeySystem _Nonnull' name='AVContentKeySystemFairPlayStreaming' type64='@'/>
<constant const='true' declared_type64='CFTimeInterval' name='AVCoreAnimationBeginTimeAtZero' type64='d'/>
<constant const='true' declared_type64='NSString*' name='AVErrorDeviceKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorFileSizeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorFileTypeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorMediaSubTypeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorMediaTypeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorPIDKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorPersistentTrackIDKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorPresentationTimeStampKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorRecordingSuccessfullyFinishedKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorTimeKey' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileType3GPP' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileType3GPP2' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeAC3' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeAIFC' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeAIFF' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeAMR' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeAVCI' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeAppleM4A' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeAppleM4V' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeCoreAudioFormat' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeDNG' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeEnhancedAC3' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeHEIC' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeHEIF' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeJPEG' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeMPEG4' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeMPEGLayer3' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeQuickTimeMovie' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeSunAU' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeTIFF' type64='@'/>
<constant const='true' declared_type64='AVFileType' name='AVFileTypeWAVE' type64='@'/>
<constant const='true' declared_type64='NSErrorDomain' name='AVFoundationErrorDomain' type64='@'/>
<constant const='true' declared_type64='AVLayerVideoGravity' name='AVLayerVideoGravityResize' type64='@'/>
<constant const='true' declared_type64='AVLayerVideoGravity' name='AVLayerVideoGravityResizeAspect' type64='@'/>
<constant const='true' declared_type64='AVLayerVideoGravity' name='AVLayerVideoGravityResizeAspectFill' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicAudible' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicContainsOnlyForcedSubtitles' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicDescribesMusicAndSoundForAccessibility' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicDescribesVideoForAccessibility' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicDubbedTranslation' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicEasyToRead' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicFrameBased' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicIsAuxiliaryContent' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicIsMainProgramContent' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicLanguageTranslation' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicLegible' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicTranscribesSpokenDialogForAccessibility' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicUsesWideGamutColorSpace' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicVisual' type64='@'/>
<constant const='true' declared_type64='AVMediaCharacteristic' name='AVMediaCharacteristicVoiceOverTranslation' type64='@'/>
<constant const='true' declared_type64='AVMediaType' name='AVMediaTypeAudio' type64='@'/>
<constant const='true' declared_type64='AVMediaType' name='AVMediaTypeClosedCaption' type64='@'/>
<constant const='true' declared_type64='AVMediaType' name='AVMediaTypeDepthData' type64='@'/>
<constant const='true' declared_type64='AVMediaType' name='AVMediaTypeMetadata' type64='@'/>
<constant const='true' declared_type64='AVMediaType' name='AVMediaTypeMetadataObject' type64='@'/>
<constant const='true' declared_type64='AVMediaType' name='AVMediaTypeMuxed' type64='@'/>
<constant const='true' declared_type64='AVMediaType' name='AVMediaTypeSubtitle' type64='@'/>
<constant const='true' declared_type64='AVMediaType' name='AVMediaTypeText' type64='@'/>
<constant const='true' declared_type64='AVMediaType' name='AVMediaTypeTimecode' type64='@'/>
<constant const='true' declared_type64='AVMediaType' name='AVMediaTypeVideo' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyAlbumAndTrack' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyAuthor' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyCollection' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyGenre' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyKeywordList' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyLocation' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyMediaClassification' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyMediaRating' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyPerformer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyRecordingYear' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyThumbnail' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadata3GPUserDataKeyUserRating' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierAlbumName' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierArtwork' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierAssetIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierAuthor' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierContributor' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierCopyrights' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierCreationDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierCreator' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierFormat' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierLanguage' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierLastModifiedDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierLocation' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierMake' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierModel' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierPublisher' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierRelation' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierSoftware' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierSource' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierSubject' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataCommonIdentifierType' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyAlbumName' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyArtwork' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyAuthor' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyContributor' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyCopyrights' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyCreationDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyCreator' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyFormat' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyLanguage' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyLastModifiedDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyLocation' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyMake' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyModel' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyPublisher' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyRelation' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeySoftware' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeySource' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeySubject' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataCommonKeyType' type64='@'/>
<constant const='true' declared_type64='AVMetadataExtraAttributeKey' name='AVMetadataExtraAttributeBaseURIKey' type64='@'/>
<constant const='true' declared_type64='AVMetadataExtraAttributeKey' name='AVMetadataExtraAttributeInfoKey' type64='@'/>
<constant const='true' declared_type64='AVMetadataExtraAttributeKey' name='AVMetadataExtraAttributeValueURIKey' type64='@'/>
<constant const='true' declared_type64='AVMetadataFormat' name='AVMetadataFormatHLSMetadata' type64='@'/>
<constant const='true' declared_type64='AVMetadataFormat' name='AVMetadataFormatID3Metadata' type64='@'/>
<constant const='true' declared_type64='AVMetadataFormat' name='AVMetadataFormatISOUserData' type64='@'/>
<constant const='true' declared_type64='AVMetadataFormat' name='AVMetadataFormatQuickTimeMetadata' type64='@'/>
<constant const='true' declared_type64='AVMetadataFormat' name='AVMetadataFormatQuickTimeUserData' type64='@'/>
<constant const='true' declared_type64='AVMetadataFormat' name='AVMetadataFormatUnknown' type64='@'/>
<constant const='true' declared_type64='AVMetadataFormat' name='AVMetadataFormatiTunesMetadata' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyAlbumSortOrder' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyAlbumTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyAttachedPicture' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyAudioEncryption' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyAudioSeekPointIndex' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyBand' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyBeatsPerMinute' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyComments' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyCommercial' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyCommercialInformation' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyCommerical' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyComposer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyConductor' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyContentGroupDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyContentType' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyCopyrightInformation' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyEncodedBy' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyEncodedWith' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyEncodingTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyEncryption' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyEqualization' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyEqualization2' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyEventTimingCodes' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyFileOwner' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyFileType' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyGeneralEncapsulatedObject' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyGroupIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyInitialKey' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyInternationalStandardRecordingCode' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyInternetRadioStationName' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyInternetRadioStationOwner' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyInvolvedPeopleList_v23' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyInvolvedPeopleList_v24' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyLanguage' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyLeadPerformer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyLength' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyLink' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyLyricist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyMPEGLocationLookupTable' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyMediaType' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyModifiedBy' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyMood' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyMusicCDIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyMusicianCreditsList' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOfficialArtistWebpage' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOfficialAudioFileWebpage' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOfficialAudioSourceWebpage' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOfficialInternetRadioStationHomepage' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOfficialPublisherWebpage' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOriginalAlbumTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOriginalArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOriginalFilename' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOriginalLyricist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOriginalReleaseTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOriginalReleaseYear' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyOwnership' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyPartOfASet' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyPayment' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyPerformerSortOrder' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyPlayCounter' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyPlaylistDelay' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyPopularimeter' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyPositionSynchronization' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyPrivate' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyProducedNotice' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyPublisher' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyRecommendedBufferSize' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyRecordingDates' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyRecordingTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyRelativeVolumeAdjustment' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyRelativeVolumeAdjustment2' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyReleaseTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyReverb' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeySeek' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeySetSubtitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeySignature' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeySize' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeySubTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeySynchronizedLyric' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeySynchronizedTempoCodes' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyTaggingTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyTermsOfUse' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyTitleDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyTitleSortOrder' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyTrackNumber' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyUniqueFileIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyUnsynchronizedLyric' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyUserText' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyUserURL' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataID3MetadataKeyYear' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataISOUserDataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataISOUserDataKeyDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataISOUserDataKeyTaggedCharacteristic' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataIcyMetadataKeyStreamTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataIcyMetadataKeyStreamURL' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataAlbumAndTrack' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataAuthor' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataCollection' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataGenre' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataKeywordList' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataLocation' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataMediaClassification' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataMediaRating' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataPerformer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataRecordingYear' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataThumbnail' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifier3GPUserDataUserRating' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataAlbumSortOrder' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataAlbumTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataAttachedPicture' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataAudioEncryption' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataAudioSeekPointIndex' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataBand' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataBeatsPerMinute' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataComments' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataCommercial' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataCommercialInformation' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataCommerical' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataComposer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataConductor' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataContentGroupDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataContentType' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataCopyrightInformation' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataEncodedBy' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataEncodedWith' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataEncodingTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataEncryption' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataEqualization' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataEqualization2' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataEventTimingCodes' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataFileOwner' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataFileType' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataGeneralEncapsulatedObject' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataGroupIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataInitialKey' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataInternationalStandardRecordingCode' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataInternetRadioStationName' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataInternetRadioStationOwner' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataInvolvedPeopleList_v23' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataInvolvedPeopleList_v24' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataLanguage' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataLeadPerformer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataLength' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataLink' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataLyricist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataMPEGLocationLookupTable' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataMediaType' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataModifiedBy' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataMood' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataMusicCDIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataMusicianCreditsList' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOfficialArtistWebpage' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOfficialAudioFileWebpage' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOfficialAudioSourceWebpage' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOfficialInternetRadioStationHomepage' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOfficialPublisherWebpage' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOriginalAlbumTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOriginalArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOriginalFilename' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOriginalLyricist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOriginalReleaseTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOriginalReleaseYear' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataOwnership' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataPartOfASet' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataPayment' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataPerformerSortOrder' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataPlayCounter' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataPlaylistDelay' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataPopularimeter' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataPositionSynchronization' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataPrivate' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataProducedNotice' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataPublisher' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataRecommendedBufferSize' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataRecordingDates' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataRecordingTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataRelativeVolumeAdjustment' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataRelativeVolumeAdjustment2' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataReleaseTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataReverb' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataSeek' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataSetSubtitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataSignature' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataSize' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataSubTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataSynchronizedLyric' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataSynchronizedTempoCodes' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataTaggingTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataTermsOfUse' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataTitleDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataTitleSortOrder' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataTrackNumber' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataUniqueFileIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataUnsynchronizedLyric' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataUserText' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataUserURL' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierID3MetadataYear' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierISOUserDataCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierISOUserDataDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierISOUserDataTaggedCharacteristic' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierIcyMetadataStreamTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierIcyMetadataStreamURL' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataAlbum' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataArranger' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataArtwork' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataAuthor' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataCameraFrameReadoutTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataCameraIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataCollectionUser' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataComment' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataComposer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataContentIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataCreationDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataCredits' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataDetectedFace' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataDirectionFacing' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataDirectionMotion' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataDirector' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataDisplayName' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataEncodedBy' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataGenre' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataInformation' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataKeywords' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataLocationBody' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataLocationDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataLocationISO6709' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataLocationName' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataLocationNote' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataLocationRole' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataMake' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataModel' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataOriginalArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataPerformer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataPhonogramRights' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataPreferredAffineTransform' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataProducer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataPublisher' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataRatingUser' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataSoftware' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataVideoOrientation' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataYear' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeMetadataiXML' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataAlbum' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataArranger' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataAuthor' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataChapter' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataComment' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataComposer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataCreationDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataCredits' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataDirector' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataDisclaimer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataEncodedBy' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataFullName' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataGenre' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataHostComputer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataInformation' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataKeywords' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataLocationISO6709' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataMake' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataModel' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataOriginalArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataOriginalFormat' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataOriginalSource' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataPerformers' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataPhonogramRights' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataProducer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataProduct' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataPublisher' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataSoftware' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataSpecialPlaybackRequirements' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataTaggedCharacteristic' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataTrack' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataTrackName' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataURLLink' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataWarning' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifierQuickTimeUserDataWriter' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataAccountKind' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataAcknowledgement' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataAlbum' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataAlbumArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataAppleID' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataArranger' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataArtDirector' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataArtistID' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataAuthor' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataBeatsPerMin' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataComposer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataConductor' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataContentRating' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataCoverArt' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataCredits' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataDirector' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataDiscCompilation' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataDiscNumber' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataEQ' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataEncodedBy' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataEncodingTool' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataExecProducer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataGenreID' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataGrouping' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataLinerNotes' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataLyrics' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataOnlineExtras' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataOriginalArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataPerformer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataPhonogramRights' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataPlaylistID' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataPredefinedGenre' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataProducer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataPublisher' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataRecordCompany' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataReleaseDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataSoloist' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataSongID' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataSongName' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataSoundEngineer' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataThanks' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataTrackNumber' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataTrackSubTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataUserComment' type64='@'/>
<constant const='true' declared_type64='AVMetadataIdentifier' name='AVMetadataIdentifieriTunesMetadataUserGenre' type64='@'/>
<constant const='true' declared_type64='AVMetadataKeySpace' name='AVMetadataKeySpaceAudioFile' type64='@'/>
<constant const='true' declared_type64='AVMetadataKeySpace' name='AVMetadataKeySpaceCommon' type64='@'/>
<constant const='true' declared_type64='AVMetadataKeySpace' name='AVMetadataKeySpaceHLSDateRange' type64='@'/>
<constant const='true' declared_type64='AVMetadataKeySpace' name='AVMetadataKeySpaceID3' type64='@'/>
<constant const='true' declared_type64='AVMetadataKeySpace' name='AVMetadataKeySpaceISOUserData' type64='@'/>
<constant const='true' declared_type64='AVMetadataKeySpace' name='AVMetadataKeySpaceIcy' type64='@'/>
<constant const='true' declared_type64='AVMetadataKeySpace' name='AVMetadataKeySpaceQuickTimeMetadata' type64='@'/>
<constant const='true' declared_type64='AVMetadataKeySpace' name='AVMetadataKeySpaceQuickTimeUserData' type64='@'/>
<constant const='true' declared_type64='AVMetadataKeySpace' name='AVMetadataKeySpaceiTunes' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyAlbum' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyArranger' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyArtwork' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyAuthor' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyCameraFrameReadoutTime' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyCameraIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyCollectionUser' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyComment' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyComposer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyContentIdentifier' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyCreationDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyCredits' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyDirectionFacing' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyDirectionMotion' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyDirector' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyDisplayName' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyEncodedBy' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyGenre' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyInformation' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyKeywords' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyLocationBody' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyLocationDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyLocationISO6709' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyLocationName' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyLocationNote' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyLocationRole' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyMake' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyModel' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyOriginalArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyPerformer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyPhonogramRights' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyProducer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyPublisher' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyRatingUser' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeySoftware' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyYear' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeMetadataKeyiXML' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyAlbum' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyArranger' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyAuthor' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyChapter' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyComment' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyComposer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyCreationDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyCredits' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyDirector' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyDisclaimer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyEncodedBy' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyFullName' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyGenre' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyHostComputer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyInformation' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyKeywords' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyLocationISO6709' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyMake' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyModel' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyOriginalArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyOriginalFormat' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyOriginalSource' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyPerformers' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyPhonogramRights' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyProducer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyProduct' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyPublisher' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeySoftware' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeySpecialPlaybackRequirements' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyTaggedCharacteristic' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyTrack' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyTrackName' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyURLLink' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyWarning' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataQuickTimeUserDataKeyWriter' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyAccountKind' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyAcknowledgement' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyAlbum' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyAlbumArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyAppleID' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyArranger' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyArtDirector' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyArtistID' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyAuthor' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyBeatsPerMin' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyComposer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyConductor' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyContentRating' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyCoverArt' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyCredits' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyDescription' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyDirector' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyDiscCompilation' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyDiscNumber' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyEQ' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyEncodedBy' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyEncodingTool' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyExecProducer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyGenreID' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyGrouping' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyLinerNotes' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyLyrics' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyOnlineExtras' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyOriginalArtist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyPerformer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyPhonogramRights' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyPlaylistID' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyPredefinedGenre' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyProducer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyPublisher' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyRecordCompany' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyReleaseDate' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeySoloist' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeySongID' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeySongName' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeySoundEngineer' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyThanks' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyTrackNumber' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyTrackSubTitle' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyUserComment' type64='@'/>
<constant const='true' declared_type64='AVMetadataKey' name='AVMetadataiTunesMetadataKeyUserGenre' type64='@'/>
<constant const='true' declared_type64='AVOutputSettingsPreset _Nonnull' name='AVOutputSettingsPreset1280x720' type64='@'/>
<constant const='true' declared_type64='AVOutputSettingsPreset _Nonnull' name='AVOutputSettingsPreset1920x1080' type64='@'/>
<constant const='true' declared_type64='AVOutputSettingsPreset _Nonnull' name='AVOutputSettingsPreset3840x2160' type64='@'/>
<constant const='true' declared_type64='AVOutputSettingsPreset _Nonnull' name='AVOutputSettingsPreset640x480' type64='@'/>
<constant const='true' declared_type64='AVOutputSettingsPreset _Nonnull' name='AVOutputSettingsPreset960x540' type64='@'/>
<constant const='true' declared_type64='AVOutputSettingsPreset _Nonnull' name='AVOutputSettingsPresetHEVC1920x1080' type64='@'/>
<constant const='true' declared_type64='AVOutputSettingsPreset _Nonnull' name='AVOutputSettingsPresetHEVC3840x2160' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='AVPlayerAvailableHDRModesDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemDidPlayToEndTimeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemFailedToPlayToEndTimeErrorKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemFailedToPlayToEndTimeNotification' type64='@'/>
<constant const='true' declared_type64='AVPlayerItemLegibleOutputTextStylingResolution _Nonnull' name='AVPlayerItemLegibleOutputTextStylingResolutionDefault' type64='@'/>
<constant const='true' declared_type64='AVPlayerItemLegibleOutputTextStylingResolution _Nonnull' name='AVPlayerItemLegibleOutputTextStylingResolutionSourceAndRulesOnly' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemNewAccessLogEntryNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemNewErrorLogEntryNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemPlaybackStalledNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemTimeJumpedNotification' type64='@'/>
<constant const='true' declared_type64='AVPlayerWaitingReason _Nonnull' name='AVPlayerWaitingToMinimizeStallsReason' type64='@'/>
<constant const='true' declared_type64='AVPlayerWaitingReason _Nonnull' name='AVPlayerWaitingWhileEvaluatingBufferingRateReason' type64='@'/>
<constant const='true' declared_type64='AVPlayerWaitingReason _Nonnull' name='AVPlayerWaitingWithNoItemToPlayReason' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='AVRouteDetectorMultipleRoutesDetectedDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVSampleBufferAudioRendererFlushTimeKey' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='AVSampleBufferAudioRendererWasFlushedAutomaticallyNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVSampleBufferDisplayLayerFailedToDecodeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVSampleBufferDisplayLayerFailedToDecodeNotificationErrorKey' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='AVSampleBufferRenderSynchronizerRateDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVStreamingKeyDeliveryContentKeyType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVStreamingKeyDeliveryPersistentContentKeyType' type64='@'/>
<constant const='true' declared_type64='AVTrackAssociationType _Nonnull' name='AVTrackAssociationTypeAudioFallback' type64='@'/>
<constant const='true' declared_type64='AVTrackAssociationType _Nonnull' name='AVTrackAssociationTypeChapterList' type64='@'/>
<constant const='true' declared_type64='AVTrackAssociationType _Nonnull' name='AVTrackAssociationTypeForcedSubtitlesOnly' type64='@'/>
<constant const='true' declared_type64='AVTrackAssociationType _Nonnull' name='AVTrackAssociationTypeMetadataReferent' type64='@'/>
<constant const='true' declared_type64='AVTrackAssociationType _Nonnull' name='AVTrackAssociationTypeSelectionFollower' type64='@'/>
<constant const='true' declared_type64='AVTrackAssociationType _Nonnull' name='AVTrackAssociationTypeTimecode' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVURLAssetAllowsCellularAccessKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVURLAssetHTTPCookiesKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVURLAssetPreferPreciseDurationAndTimingKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVURLAssetReferenceRestrictionsKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoAllowFrameReorderingKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoAllowWideColorKey' type64='@'/>
<constant const='true' declared_type64='AVVideoApertureMode' name='AVVideoApertureModeCleanAperture' type64='@'/>
<constant const='true' declared_type64='AVVideoApertureMode' name='AVVideoApertureModeEncodedPixels' type64='@'/>
<constant const='true' declared_type64='AVVideoApertureMode' name='AVVideoApertureModeProductionAperture' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoAverageBitRateKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoAverageNonDroppableFrameRateKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCleanApertureHeightKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCleanApertureHorizontalOffsetKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCleanApertureKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCleanApertureVerticalOffsetKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCleanApertureWidthKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCodecH264' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCodecHEVC' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCodecJPEG' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCodecKey' type64='@'/>
<constant const='true' declared_type64='AVVideoCodecType' name='AVVideoCodecTypeAppleProRes422' type64='@'/>
<constant const='true' declared_type64='AVVideoCodecType' name='AVVideoCodecTypeAppleProRes4444' type64='@'/>
<constant const='true' declared_type64='AVVideoCodecType' name='AVVideoCodecTypeH264' type64='@'/>
<constant const='true' declared_type64='AVVideoCodecType' name='AVVideoCodecTypeHEVC' type64='@'/>
<constant const='true' declared_type64='AVVideoCodecType' name='AVVideoCodecTypeJPEG' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoColorPrimariesKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoColorPrimaries_ITU_R_2020' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoColorPrimaries_ITU_R_709_2' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoColorPrimaries_P3_D65' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoColorPrimaries_SMPTE_C' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoColorPropertiesKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCompressionPropertiesKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoExpectedSourceFrameRateKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoH264EntropyModeCABAC' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoH264EntropyModeCAVLC' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoH264EntropyModeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoHeightKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoMaxKeyFrameIntervalDurationKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoMaxKeyFrameIntervalKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoPixelAspectRatioHorizontalSpacingKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoPixelAspectRatioKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoPixelAspectRatioVerticalSpacingKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Baseline30' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Baseline31' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Baseline41' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264BaselineAutoLevel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264High40' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264High41' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264HighAutoLevel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Main30' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Main31' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Main32' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Main41' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264MainAutoLevel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoQualityKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoScalingModeFit' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoScalingModeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoScalingModeResize' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoScalingModeResizeAspect' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoScalingModeResizeAspectFill' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoTransferFunctionKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoTransferFunction_ITU_R_2100_HLG' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoTransferFunction_ITU_R_709_2' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoTransferFunction_SMPTE_ST_2084_PQ' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoWidthKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoYCbCrMatrixKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoYCbCrMatrix_ITU_R_2020' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoYCbCrMatrix_ITU_R_601_4' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoYCbCrMatrix_ITU_R_709_2' type64='@'/>
<enum name='AVAssetExportSessionStatusCancelled' value64='5'/>
<enum name='AVAssetExportSessionStatusCompleted' value64='3'/>
<enum name='AVAssetExportSessionStatusExporting' value64='2'/>
<enum name='AVAssetExportSessionStatusFailed' value64='4'/>
<enum name='AVAssetExportSessionStatusUnknown' value64='0'/>
<enum name='AVAssetExportSessionStatusWaiting' value64='1'/>
<enum name='AVAssetImageGeneratorCancelled' value64='2'/>
<enum name='AVAssetImageGeneratorFailed' value64='1'/>
<enum name='AVAssetImageGeneratorSucceeded' value64='0'/>
<enum name='AVAssetReaderStatusCancelled' value64='4'/>
<enum name='AVAssetReaderStatusCompleted' value64='2'/>
<enum name='AVAssetReaderStatusFailed' value64='3'/>
<enum name='AVAssetReaderStatusReading' value64='1'/>
<enum name='AVAssetReaderStatusUnknown' value64='0'/>
<enum name='AVAssetReferenceRestrictionForbidAll' value64='65535'/>
<enum name='AVAssetReferenceRestrictionForbidCrossSiteReference' value64='4'/>
<enum name='AVAssetReferenceRestrictionForbidLocalReferenceToLocal' value64='8'/>
<enum name='AVAssetReferenceRestrictionForbidLocalReferenceToRemote' value64='2'/>
<enum name='AVAssetReferenceRestrictionForbidNone' value64='0'/>
<enum name='AVAssetReferenceRestrictionForbidRemoteReferenceToLocal' value64='1'/>
<enum name='AVAssetWriterStatusCancelled' value64='4'/>
<enum name='AVAssetWriterStatusCompleted' value64='2'/>
<enum name='AVAssetWriterStatusFailed' value64='3'/>
<enum name='AVAssetWriterStatusUnknown' value64='0'/>
<enum name='AVAssetWriterStatusWriting' value64='1'/>
<enum name='AVContentKeyRequestStatusCancelled' value64='4'/>
<enum name='AVContentKeyRequestStatusFailed' value64='5'/>
<enum name='AVContentKeyRequestStatusReceivedResponse' value64='1'/>
<enum name='AVContentKeyRequestStatusRenewed' value64='2'/>
<enum name='AVContentKeyRequestStatusRequestingResponse' value64='0'/>
<enum name='AVContentKeyRequestStatusRetried' value64='3'/>
<enum name='AVDepthDataAccuracyAbsolute' value64='1'/>
<enum name='AVDepthDataAccuracyRelative' value64='0'/>
<enum name='AVDepthDataQualityHigh' value64='1'/>
<enum name='AVDepthDataQualityLow' value64='0'/>
<enum name='AVErrorAirPlayControllerRequiresInternet' value64='-11856'/>
<enum name='AVErrorAirPlayReceiverRequiresInternet' value64='-11857'/>
<enum name='AVErrorApplicationIsNotAuthorized' value64='-11836'/>
<enum name='AVErrorApplicationIsNotAuthorizedToUseDevice' value64='-11852'/>
<enum name='AVErrorCompositionTrackSegmentsNotContiguous' value64='-11824'/>
<enum name='AVErrorContentIsNotAuthorized' value64='-11835'/>
<enum name='AVErrorContentIsProtected' value64='-11831'/>
<enum name='AVErrorContentIsUnavailable' value64='-11863'/>
<enum name='AVErrorContentNotUpdated' value64='-11866'/>
<enum name='AVErrorDecodeFailed' value64='-11821'/>
<enum name='AVErrorDecoderNotFound' value64='-11833'/>
<enum name='AVErrorDecoderTemporarilyUnavailable' value64='-11839'/>
<enum name='AVErrorDeviceAlreadyUsedByAnotherSession' value64='-11804'/>
<enum name='AVErrorDeviceInUseByAnotherApplication' value64='-11815'/>
<enum name='AVErrorDeviceIsNotAvailableInBackground' value64='-11837'/>
<enum name='AVErrorDeviceLockedForConfigurationByAnotherProcess' value64='-11817'/>
<enum name='AVErrorDeviceNotConnected' value64='-11814'/>
<enum name='AVErrorDeviceWasDisconnected' value64='-11808'/>
<enum name='AVErrorDiskFull' value64='-11807'/>
<enum name='AVErrorDisplayWasDisabled' value64='-11845'/>
<enum name='AVErrorEncoderNotFound' value64='-11834'/>
<enum name='AVErrorEncoderTemporarilyUnavailable' value64='-11840'/>
<enum name='AVErrorExportFailed' value64='-11820'/>
<enum name='AVErrorExternalPlaybackNotSupportedForAsset' value64='-11870'/>
<enum name='AVErrorFailedToLoadMediaData' value64='-11849'/>
<enum name='AVErrorFailedToParse' value64='-11853'/>
<enum name='AVErrorFileAlreadyExists' value64='-11823'/>
<enum name='AVErrorFileFailedToParse' value64='-11829'/>
<enum name='AVErrorFileFormatNotRecognized' value64='-11828'/>
<enum name='AVErrorFileTypeDoesNotSupportSampleReferences' value64='-11854'/>
<enum name='AVErrorFormatUnsupported' value64='-11864'/>
<enum name='AVErrorIncompatibleAsset' value64='-11848'/>
<enum name='AVErrorInvalidCompositionTrackSegmentDuration' value64='-11825'/>
<enum name='AVErrorInvalidCompositionTrackSegmentSourceDuration' value64='-11827'/>
<enum name='AVErrorInvalidCompositionTrackSegmentSourceStartTime' value64='-11826'/>
<enum name='AVErrorInvalidOutputURLPathExtension' value64='-11843'/>
<enum name='AVErrorInvalidSourceMedia' value64='-11822'/>
<enum name='AVErrorInvalidVideoComposition' value64='-11841'/>
<enum name='AVErrorMalformedDepth' value64='-11865'/>
<enum name='AVErrorMaximumDurationReached' value64='-11810'/>
<enum name='AVErrorMaximumFileSizeReached' value64='-11811'/>
<enum name='AVErrorMaximumNumberOfSamplesForFileFormatReached' value64='-11813'/>
<enum name='AVErrorMaximumStillImageCaptureRequestsExceeded' value64='-11830'/>
<enum name='AVErrorMediaChanged' value64='-11809'/>
<enum name='AVErrorMediaDiscontinuity' value64='-11812'/>
<enum name='AVErrorMediaServicesWereReset' value64='-11819'/>
<enum name='AVErrorNoCompatibleAlternatesForExternalDisplay' value64='-11868'/>
<enum name='AVErrorNoDataCaptured' value64='-11805'/>
<enum name='AVErrorNoImageAtTime' value64='-11832'/>
<enum name='AVErrorNoLongerPlayable' value64='-11867'/>
<enum name='AVErrorNoSourceTrack' value64='-11869'/>
<enum name='AVErrorOperationInterrupted' value64='-11847'/>
<enum name='AVErrorOperationNotAllowed' value64='-11862'/>
<enum name='AVErrorOperationNotSupportedForAsset' value64='-11838'/>
<enum name='AVErrorOutOfMemory' value64='-11801'/>
<enum name='AVErrorRecordingAlreadyInProgress' value64='-11859'/>
<enum name='AVErrorReferenceForbiddenByReferencePolicy' value64='-11842'/>
<enum name='AVErrorScreenCaptureFailed' value64='-11844'/>
<enum name='AVErrorServerIncorrectlyConfigured' value64='-11850'/>
<enum name='AVErrorSessionConfigurationChanged' value64='-11806'/>
<enum name='AVErrorSessionNotRunning' value64='-11803'/>
<enum name='AVErrorSessionWasInterrupted' value64='-11818'/>
<enum name='AVErrorTorchLevelUnavailable' value64='-11846'/>
<enum name='AVErrorUndecodableMediaData' value64='-11855'/>
<enum name='AVErrorUnknown' value64='-11800'/>
<enum name='AVErrorUnsupportedOutputSettings' value64='-11861'/>
<enum name='AVErrorVideoCompositorFailed' value64='-11858'/>
<enum name='AVKeyValueStatusCancelled' value64='4'/>
<enum name='AVKeyValueStatusFailed' value64='3'/>
<enum name='AVKeyValueStatusLoaded' value64='2'/>
<enum name='AVKeyValueStatusLoading' value64='1'/>
<enum name='AVKeyValueStatusUnknown' value64='0'/>
<enum name='AVPlayerActionAtItemEndAdvance' value64='0'/>
<enum name='AVPlayerActionAtItemEndNone' value64='2'/>
<enum name='AVPlayerActionAtItemEndPause' value64='1'/>
<enum name='AVPlayerHDRModeDolbyVision' value64='4'/>
<enum name='AVPlayerHDRModeHDR10' value64='2'/>
<enum name='AVPlayerHDRModeHLG' value64='1'/>
<enum name='AVPlayerItemStatusFailed' value64='2'/>
<enum name='AVPlayerItemStatusReadyToPlay' value64='1'/>
<enum name='AVPlayerItemStatusUnknown' value64='0'/>
<enum name='AVPlayerLooperStatusCancelled' value64='3'/>
<enum name='AVPlayerLooperStatusFailed' value64='2'/>
<enum name='AVPlayerLooperStatusReady' value64='1'/>
<enum name='AVPlayerLooperStatusUnknown' value64='0'/>
<enum name='AVPlayerStatusFailed' value64='2'/>
<enum name='AVPlayerStatusReadyToPlay' value64='1'/>
<enum name='AVPlayerStatusUnknown' value64='0'/>
<enum name='AVPlayerTimeControlStatusPaused' value64='0'/>
<enum name='AVPlayerTimeControlStatusPlaying' value64='2'/>
<enum name='AVPlayerTimeControlStatusWaitingToPlayAtSpecifiedRate' value64='1'/>
<enum name='AVQueuedSampleBufferRenderingStatusFailed' value64='2'/>
<enum name='AVQueuedSampleBufferRenderingStatusRendering' value64='1'/>
<enum name='AVQueuedSampleBufferRenderingStatusUnknown' value64='0'/>
<function name='AVMakeRectWithAspectRatioInsideRect'>
<arg declared_type64='CGSize' name='aspectRatio' type64='{CGSize=dd}'/>
<arg declared_type64='CGRect' name='boundingRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<class name='AVAsset'>
<method selector='allMediaSelections'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='availableChapterLocales'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='availableMediaCharacteristicsWithMediaSelectionOptions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='availableMetadataFormats'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='canContainFragments'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelLoading'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='chapterMetadataGroupsBestMatchingPreferredLanguages:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='preferredLanguages' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:'>
<arg declared_type64='NSLocale * _Nonnull' index='0' name='locale' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='commonKeys' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='commonMetadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='containsFragments'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='creationDate'>
<retval declared_type64='AVMetadataItem * _Nullable' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='hasProtectedContent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isCompatibleWithAirPlayVideo'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isCompatibleWithSavedPhotosAlbum'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isComposable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExportable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlayable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isReadable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lyrics'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='mediaSelectionGroupForMediaCharacteristic:'>
<arg declared_type64='AVMediaCharacteristic _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='AVMediaSelectionGroup * _Nullable' type64='@'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='metadataForFormat:'>
<arg declared_type64='AVMetadataFormat _Nonnull' index='0' name='format' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='overallDurationHint'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='preferredDisplayCriteria'>
<retval declared_type64='AVDisplayCriteria * _Nonnull' type64='@'/>
</method>
<method selector='preferredMediaSelection'>
<retval declared_type64='AVMediaSelection * _Nonnull' type64='@'/>
</method>
<method selector='preferredRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='preferredTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='providesPreciseDurationAndTiming'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='referenceRestrictions'>
<retval declared_type64='AVAssetReferenceRestrictions' type64='Q'/>
</method>
<method selector='trackGroups'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='trackWithTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='AVAssetTrack * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type64='AVMediaCharacteristic _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type64='AVMediaType _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='unusedTrackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
</class>
<class name='AVAssetCache'>
<method selector='isPlayableOffline'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mediaSelectionOptionsInMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetExportSession'>
<method class_method='true' selector='allExportPresets'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nonnull' type64='@'/>
</method>
<method selector='audioMix'>
<retval declared_type64='AVAudioMix * _Nullable' type64='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='AVAudioTimePitchAlgorithm _Nonnull' type64='@'/>
</method>
<method selector='canPerformMultiplePassesOverSourceMediaData'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelExport'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='determineCompatibilityOfExportPreset:withAsset:outputFileType:completionHandler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='presetName' type64='@'/>
<arg declared_type64='AVAsset * _Nonnull' index='1' name='asset' type64='@'/>
<arg declared_type64='AVFileType _Nullable' index='2' name='outputFileType' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='3' name='handler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='determineCompatibleFileTypesWithCompletionHandler:'>
<arg declared_type64='void (^ _Nonnull)(NSArray * _Nonnull)' function_pointer='true' index='0' name='handler' type64='@?'>
<arg declared_type64='NSArray * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='directoryForTemporaryFiles'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='estimatedOutputFileLength'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='exportAsynchronouslyWithCompletionHandler:'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='exportPresetsCompatibleWithAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='exportSessionWithAsset:presetName:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='presetName' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='fileLengthLimit'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='initWithAsset:presetName:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='presetName' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='maxDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='metadataItemFilter'>
<retval declared_type64='AVMetadataItemFilter * _Nullable' type64='@'/>
</method>
<method selector='outputFileType'>
<retval declared_type64='AVFileType _Nullable' type64='@'/>
</method>
<method selector='outputURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='presetName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='progress'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setAudioMix:'>
<arg declared_type64='AVAudioMix * _Nullable' index='0' name='audioMix' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type64='AVAudioTimePitchAlgorithm _Nonnull' index='0' name='audioTimePitchAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanPerformMultiplePassesOverSourceMediaData:'>
<arg declared_type64='BOOL' index='0' name='canPerformMultiplePassesOverSourceMediaData' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDirectoryForTemporaryFiles:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='directoryForTemporaryFiles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFileLengthLimit:'>
<arg declared_type64='long long' index='0' name='fileLengthLimit' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMetadataItemFilter:'>
<arg declared_type64='AVMetadataItemFilter * _Nullable' index='0' name='metadataItemFilter' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOutputFileType:'>
<arg declared_type64='AVFileType _Nullable' index='0' name='outputFileType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOutputURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='outputURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldOptimizeForNetworkUse:'>
<arg declared_type64='BOOL' index='0' name='shouldOptimizeForNetworkUse' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type64='AVVideoComposition * _Nullable' index='0' name='videoComposition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldOptimizeForNetworkUse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='status'>
<retval declared_type64='AVAssetExportSessionStatus' type64='q'/>
</method>
<method selector='supportedFileTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='videoComposition'>
<retval declared_type64='AVVideoComposition * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAssetImageGenerator'>
<method selector='apertureMode'>
<retval declared_type64='AVAssetImageGeneratorApertureMode _Nullable' type64='@'/>
</method>
<method selector='appliesPreferredTrackTransform'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetImageGeneratorWithAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='cancelAllCGImageGeneration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='copyCGImageAtTime:actualTime:error:'>
<arg declared_type64='CMTime' index='0' name='requestedTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime * _Nullable' index='1' name='actualTime' type64='^{_CMTime=qiIq}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='generateCGImagesAsynchronouslyForTimes:completionHandler:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='requestedTimes' type64='@'/>
<arg declared_type64='AVAssetImageGeneratorCompletionHandler _Nonnull' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
<arg declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='AVAssetImageGeneratorResult' type64='q'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maximumSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='requestedTimeToleranceAfter'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='requestedTimeToleranceBefore'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='setApertureMode:'>
<arg declared_type64='AVAssetImageGeneratorApertureMode _Nullable' index='0' name='apertureMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAppliesPreferredTrackTransform:'>
<arg declared_type64='BOOL' index='0' name='appliesPreferredTrackTransform' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumSize:'>
<arg declared_type64='CGSize' index='0' name='maximumSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRequestedTimeToleranceAfter:'>
<arg declared_type64='CMTime' index='0' name='requestedTimeToleranceAfter' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRequestedTimeToleranceBefore:'>
<arg declared_type64='CMTime' index='0' name='requestedTimeToleranceBefore' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type64='AVVideoComposition * _Nullable' index='0' name='videoComposition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoComposition'>
<retval declared_type64='AVVideoComposition * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAssetReader'>
<method selector='addOutput:'>
<arg declared_type64='AVAssetReaderOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetReaderWithAsset:error:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='canAddOutput:'>
<arg declared_type64='AVAssetReaderOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelReading'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='initWithAsset:error:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='outputs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startReading'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='status'>
<retval declared_type64='AVAssetReaderStatus' type64='q'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVAssetReaderAudioMixOutput'>
<method class_method='true' selector='assetReaderAudioMixOutputWithAudioTracks:audioSettings:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='audioTracks' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='audioSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='audioMix'>
<retval declared_type64='AVAudioMix * _Nullable' type64='@'/>
</method>
<method selector='audioSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='AVAudioTimePitchAlgorithm _Nonnull' type64='@'/>
</method>
<method selector='audioTracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='initWithAudioTracks:audioSettings:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='audioTracks' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='audioSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAudioMix:'>
<arg declared_type64='AVAudioMix * _Nullable' index='0' name='audioMix' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type64='AVAudioTimePitchAlgorithm _Nonnull' index='0' name='audioTimePitchAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAssetReaderOutput'>
<method selector='alwaysCopiesSampleData'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='copyNextSampleBuffer'>
<retval declared_type64='CMSampleBufferRef _Nullable' type64='^{opaqueCMSampleBuffer=}'/>
</method>
<method selector='markConfigurationAsFinal'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mediaType'>
<retval declared_type64='AVMediaType _Nonnull' type64='@'/>
</method>
<method selector='resetForReadingTimeRanges:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='timeRanges' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlwaysCopiesSampleData:'>
<arg declared_type64='BOOL' index='0' name='alwaysCopiesSampleData' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupportsRandomAccess:'>
<arg declared_type64='BOOL' index='0' name='supportsRandomAccess' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supportsRandomAccess'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVAssetReaderOutputMetadataAdaptor'>
<method class_method='true' selector='assetReaderOutputMetadataAdaptorWithAssetReaderTrackOutput:'>
<arg declared_type64='AVAssetReaderTrackOutput * _Nonnull' index='0' name='trackOutput' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='assetReaderTrackOutput'>
<retval declared_type64='AVAssetReaderTrackOutput * _Nonnull' type64='@'/>
</method>
<method selector='initWithAssetReaderTrackOutput:'>
<arg declared_type64='AVAssetReaderTrackOutput * _Nonnull' index='0' name='trackOutput' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='nextTimedMetadataGroup'>
<retval declared_type64='AVTimedMetadataGroup * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAssetReaderSampleReferenceOutput'>
<method class_method='true' selector='assetReaderSampleReferenceOutputWithTrack:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTrack:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='track'>
<retval declared_type64='AVAssetTrack * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetReaderTrackOutput'>
<method class_method='true' selector='assetReaderTrackOutputWithTrack:outputSettings:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='AVAudioTimePitchAlgorithm _Nonnull' type64='@'/>
</method>
<method selector='initWithTrack:outputSettings:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='outputSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type64='AVAudioTimePitchAlgorithm _Nonnull' index='0' name='audioTimePitchAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='track'>
<retval declared_type64='AVAssetTrack * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetReaderVideoCompositionOutput'>
<method class_method='true' selector='assetReaderVideoCompositionOutputWithVideoTracks:videoSettings:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='videoTracks' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='videoSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='initWithVideoTracks:videoSettings:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='videoTracks' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='videoSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type64='AVVideoComposition * _Nullable' index='0' name='videoComposition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoComposition'>
<retval declared_type64='AVVideoComposition * _Nullable' type64='@'/>
</method>
<method selector='videoSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='videoTracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetResourceLoader'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type64='dispatch_queue_t _Nullable' type64='@'/>
</method>
<method selector='preloadsEligibleContentKeys'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='delegateQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreloadsEligibleContentKeys:'>
<arg declared_type64='BOOL' index='0' name='preloadsEligibleContentKeys' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAssetResourceLoadingContentInformationRequest'>
<method selector='allowedContentTypes'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='contentLength'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='contentType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='isByteRangeAccessSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='renewalDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='setByteRangeAccessSupported:'>
<arg declared_type64='BOOL' index='0' name='byteRangeAccessSupported' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentLength:'>
<arg declared_type64='long long' index='0' name='contentLength' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentType:'>
<arg declared_type64='NSString * _Nullable' index='0' name='contentType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenewalDate:'>
<arg declared_type64='NSDate * _Nullable' index='0' name='renewalDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAssetResourceLoadingDataRequest'>
<method selector='currentOffset'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='requestedLength'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='requestedOffset'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='requestsAllDataToEndOfResource'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='respondWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAssetResourceLoadingRequest'>
<method selector='contentInformationRequest'>
<retval declared_type64='AVAssetResourceLoadingContentInformationRequest * _Nullable' type64='@'/>
</method>
<method selector='dataRequest'>
<retval declared_type64='AVAssetResourceLoadingDataRequest * _Nullable' type64='@'/>
</method>
<method selector='finishLoading'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finishLoadingWithError:'>
<arg declared_type64='NSError * _Nullable' index='0' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finishLoadingWithResponse:data:redirect:'>
<arg declared_type64='NSURLResponse * _Nullable' index='0' name='response' type64='@'/>
<arg declared_type64='NSData * _Nullable' index='1' name='data' type64='@'/>
<arg declared_type64='NSURLRequest * _Nullable' index='2' name='redirect' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isCancelled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFinished'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='persistentContentKeyFromKeyVendorResponse:options:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='keyVendorResponse' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='redirect'>
<retval declared_type64='NSURLRequest * _Nullable' type64='@'/>
</method>
<method selector='request'>
<retval declared_type64='NSURLRequest * _Nonnull' type64='@'/>
</method>
<method selector='requestor'>
<retval declared_type64='AVAssetResourceLoadingRequestor * _Nonnull' type64='@'/>
</method>
<method selector='response'>
<retval declared_type64='NSURLResponse * _Nullable' type64='@'/>
</method>
<method selector='setRedirect:'>
<arg declared_type64='NSURLRequest * _Nullable' index='0' name='redirect' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setResponse:'>
<arg declared_type64='NSURLResponse * _Nullable' index='0' name='response' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='streamingContentKeyRequestDataForApp:contentIdentifier:options:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='appIdentifier' type64='@'/>
<arg declared_type64='NSData * _Nonnull' index='1' name='contentIdentifier' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAssetResourceLoadingRequestor'>
<method selector='providesExpiredSessionReports'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVAssetTrack'>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nullable' type64='@'/>
</method>
<method selector='associatedTracksOfType:'>
<arg declared_type64='AVTrackAssociationType _Nonnull' index='0' name='trackAssociationType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='availableMetadataFormats'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='availableTrackAssociationTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='commonMetadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='estimatedDataRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='formatDescriptions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='hasMediaCharacteristic:'>
<arg declared_type64='AVMediaCharacteristic _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDecodable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlayable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelfContained'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='languageCode'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='mediaType'>
<retval declared_type64='AVMediaType _Nonnull' type64='@'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='metadataForFormat:'>
<arg declared_type64='AVMetadataFormat _Nonnull' index='0' name='format' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='minFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='naturalTimeScale'>
<retval declared_type64='CMTimeScale' type64='i'/>
</method>
<method selector='nominalFrameRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='preferredTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='requiresFrameReordering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='samplePresentationTimeForTrackTime:'>
<arg declared_type64='CMTime' index='0' name='trackTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='segmentForTrackTime:'>
<arg declared_type64='CMTime' index='0' name='trackTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='AVAssetTrackSegment * _Nullable' type64='@'/>
</method>
<method selector='segments'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='totalSampleDataLength'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='trackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
</class>
<class name='AVAssetTrackGroup'>
<method selector='trackIDs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetTrackSegment'>
<method selector='isEmpty'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='timeMapping'>
<retval declared_type64='CMTimeMapping' type64='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
</method>
</class>
<class name='AVAssetWriter'>
<method selector='addInput:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addInputGroup:'>
<arg declared_type64='AVAssetWriterInputGroup * _Nonnull' index='0' name='inputGroup' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='assetWriterWithURL:fileType:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='outputURL' type64='@'/>
<arg declared_type64='AVFileType _Nonnull' index='1' name='outputFileType' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='availableMediaTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='canAddInput:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canAddInputGroup:'>
<arg declared_type64='AVAssetWriterInputGroup * _Nonnull' index='0' name='inputGroup' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canApplyOutputSettings:forMediaType:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='outputSettings' type64='@'/>
<arg declared_type64='AVMediaType _Nonnull' index='1' name='mediaType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelWriting'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='directoryForTemporaryFiles'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='endSessionAtSourceTime:'>
<arg declared_type64='CMTime' index='0' name='endTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='finishWriting'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='finishWritingWithCompletionHandler:'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithURL:fileType:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='outputURL' type64='@'/>
<arg declared_type64='AVFileType _Nonnull' index='1' name='outputFileType' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='inputGroups'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='inputs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='movieFragmentInterval'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='movieTimeScale'>
<retval declared_type64='CMTimeScale' type64='i'/>
</method>
<method selector='outputFileType'>
<retval declared_type64='AVFileType _Nonnull' type64='@'/>
</method>
<method selector='outputURL'>
<retval declared_type64='NSURL * _Nonnull' type64='@'/>
</method>
<method selector='overallDurationHint'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='setDirectoryForTemporaryFiles:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='directoryForTemporaryFiles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMovieFragmentInterval:'>
<arg declared_type64='CMTime' index='0' name='movieFragmentInterval' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMovieTimeScale:'>
<arg declared_type64='CMTimeScale' index='0' name='movieTimeScale' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOverallDurationHint:'>
<arg declared_type64='CMTime' index='0' name='overallDurationHint' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldOptimizeForNetworkUse:'>
<arg declared_type64='BOOL' index='0' name='shouldOptimizeForNetworkUse' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldOptimizeForNetworkUse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='startSessionAtSourceTime:'>
<arg declared_type64='CMTime' index='0' name='startTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startWriting'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='status'>
<retval declared_type64='AVAssetWriterStatus' type64='q'/>
</method>
</class>
<class name='AVAssetWriterInput'>
<method selector='addTrackAssociationWithTrackOfInput:type:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='trackAssociationType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendSampleBuffer:'>
<arg declared_type64='CMSampleBufferRef _Nonnull' index='0' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='assetWriterInputWithMediaType:outputSettings:'>
<arg declared_type64='AVMediaType _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetWriterInputWithMediaType:outputSettings:sourceFormatHint:'>
<arg declared_type64='AVMediaType _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<arg declared_type64='CMFormatDescriptionRef _Nullable' index='2' name='sourceFormatHint' type64='^{opaqueCMFormatDescription=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='canAddTrackAssociationWithTrackOfInput:type:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='trackAssociationType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPerformMultiplePasses'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='currentPassDescription'>
<retval declared_type64='AVAssetWriterInputPassDescription * _Nullable' type64='@'/>
</method>
<method selector='expectsMediaDataInRealTime'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='initWithMediaType:outputSettings:'>
<arg declared_type64='AVMediaType _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithMediaType:outputSettings:sourceFormatHint:'>
<arg declared_type64='AVMediaType _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<arg declared_type64='CMFormatDescriptionRef _Nullable' index='2' name='sourceFormatHint' type64='^{opaqueCMFormatDescription=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isReadyForMoreMediaData'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='languageCode'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='markAsFinished'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='markCurrentPassAsFinished'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='marksOutputTrackAsEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mediaDataLocation'>
<retval declared_type64='AVAssetWriterInputMediaDataLocation _Nonnull' type64='@'/>
</method>
<method selector='mediaTimeScale'>
<retval declared_type64='CMTimeScale' type64='i'/>
</method>
<method selector='mediaType'>
<retval declared_type64='AVMediaType _Nonnull' type64='@'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='outputSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='performsMultiPassEncodingIfSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='preferredMediaChunkAlignment'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='preferredMediaChunkDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='requestMediaDataWhenReadyOnQueue:usingBlock:'>
<arg declared_type64='dispatch_queue_t _Nonnull' index='0' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='respondToEachPassDescriptionOnQueue:usingBlock:'>
<arg declared_type64='dispatch_queue_t _Nonnull' index='0' name='queue' type64='@'/>
<arg declared_type64='dispatch_block_t _Nonnull' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sampleReferenceBaseURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='setExpectsMediaDataInRealTime:'>
<arg declared_type64='BOOL' index='0' name='expectsMediaDataInRealTime' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtendedLanguageTag:'>
<arg declared_type64='NSString * _Nullable' index='0' name='extendedLanguageTag' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLanguageCode:'>
<arg declared_type64='NSString * _Nullable' index='0' name='languageCode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMarksOutputTrackAsEnabled:'>
<arg declared_type64='BOOL' index='0' name='marksOutputTrackAsEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMediaDataLocation:'>
<arg declared_type64='AVAssetWriterInputMediaDataLocation _Nonnull' index='0' name='mediaDataLocation' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMediaTimeScale:'>
<arg declared_type64='CMTimeScale' index='0' name='mediaTimeScale' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNaturalSize:'>
<arg declared_type64='CGSize' index='0' name='naturalSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPerformsMultiPassEncodingIfSupported:'>
<arg declared_type64='BOOL' index='0' name='performsMultiPassEncodingIfSupported' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMediaChunkAlignment:'>
<arg declared_type64='NSInteger' index='0' name='preferredMediaChunkAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMediaChunkDuration:'>
<arg declared_type64='CMTime' index='0' name='preferredMediaChunkDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredVolume:'>
<arg declared_type64='float' index='0' name='preferredVolume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSampleReferenceBaseURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='sampleReferenceBaseURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='transform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sourceFormatHint'>
<retval declared_type64='CMFormatDescriptionRef _Nullable' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='transform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
</class>
<class name='AVAssetWriterInputGroup'>
<method class_method='true' selector='assetWriterInputGroupWithInputs:defaultInput:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='inputs' type64='@'/>
<arg declared_type64='AVAssetWriterInput * _Nullable' index='1' name='defaultInput' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='defaultInput'>
<retval declared_type64='AVAssetWriterInput * _Nullable' type64='@'/>
</method>
<method selector='initWithInputs:defaultInput:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='inputs' type64='@'/>
<arg declared_type64='AVAssetWriterInput * _Nullable' index='1' name='defaultInput' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetWriterInputMetadataAdaptor'>
<method selector='appendTimedMetadataGroup:'>
<arg declared_type64='AVTimedMetadataGroup * _Nonnull' index='0' name='timedMetadataGroup' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='assetWriterInput'>
<retval declared_type64='AVAssetWriterInput * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetWriterInputMetadataAdaptorWithAssetWriterInput:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithAssetWriterInput:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetWriterInputPassDescription'>
<method selector='sourceTimeRanges'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetWriterInputPixelBufferAdaptor'>
<method selector='appendPixelBuffer:withPresentationTime:'>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='0' name='pixelBuffer' type64='^{__CVBuffer=}'/>
<arg declared_type64='CMTime' index='1' name='presentationTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='assetWriterInput'>
<retval declared_type64='AVAssetWriterInput * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='sourcePixelBufferAttributes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithAssetWriterInput:sourcePixelBufferAttributes:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='sourcePixelBufferAttributes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='pixelBufferPool'>
<retval declared_type64='CVPixelBufferPoolRef _Nullable' type64='^{__CVPixelBufferPool=}'/>
</method>
<method selector='sourcePixelBufferAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAsynchronousCIImageFilteringRequest'>
<method selector='compositionTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='finishWithError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finishWithImage:context:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='filteredImage' type64='@'/>
<arg declared_type64='CIContext * _Nullable' index='1' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='sourceImage'>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAsynchronousVideoCompositionRequest'>
<method selector='compositionTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='finishCancelledRequest'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finishWithComposedVideoFrame:'>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='0' name='composedVideoFrame' type64='^{__CVBuffer=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finishWithError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderContext'>
<retval declared_type64='AVVideoCompositionRenderContext * _Nonnull' type64='@'/>
</method>
<method selector='sourceFrameByTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='CVPixelBufferRef _Nullable' type64='^{__CVBuffer=}'/>
</method>
<method selector='sourceTrackIDs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='videoCompositionInstruction'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioMix'>
<method selector='inputParameters'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioMixInputParameters'>
<method selector='audioTapProcessor'>
<retval declared_type64='MTAudioProcessingTapRef _Nullable' type64='^{opaqueMTAudioProcessingTap=}'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='AVAudioTimePitchAlgorithm _Nullable' type64='@'/>
</method>
<method selector='getVolumeRampForTime:startVolume:endVolume:timeRange:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='float * _Nullable' index='1' name='startVolume' type64='^f'/>
<arg declared_type64='float * _Nullable' index='2' name='endVolume' type64='^f'/>
<arg declared_type64='CMTimeRange * _Nullable' index='3' name='timeRange' type64='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='trackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
</class>
<class name='AVCameraCalibrationData'>
<method selector='extrinsicMatrix'>
<retval declared_type64='matrix_float4x3' type64='{_matrix_float4x3=[4]}'/>
</method>
<method selector='intrinsicMatrix'>
<retval declared_type64='matrix_float3x3' type64='{_matrix_float3x3=[3]}'/>
</method>
<method selector='intrinsicMatrixReferenceDimensions'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='inverseLensDistortionLookupTable'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='lensDistortionCenter'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='lensDistortionLookupTable'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='pixelSize'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVCaptureDevice'>
<method selector='ISO'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='activeColorSpace'>
<retval declared_type64='AVCaptureColorSpace' type64='q'/>
</method>
<method selector='activeDepthDataFormat'>
<retval declared_type64='AVCaptureDeviceFormat * _Nullable' type64='@'/>
</method>
<method selector='activeDepthDataMinFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method class_method='true' selector='authorizationStatusForMediaType:'>
<arg declared_type64='AVMediaType _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='AVAuthorizationStatus' type64='q'/>
</method>
<method selector='autoFocusRangeRestriction'>
<retval declared_type64='AVCaptureAutoFocusRangeRestriction' type64='q'/>
</method>
<method selector='automaticallyAdjustsVideoHDREnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='automaticallyEnablesLowLightBoostWhenAvailable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelVideoZoomRamp'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='chromaticityValuesForDeviceWhiteBalanceGains:'>
<arg declared_type64='AVCaptureWhiteBalanceGains' index='0' name='whiteBalanceGains' type64='{_AVCaptureWhiteBalanceGains=fff}'/>
<retval declared_type64='AVCaptureWhiteBalanceChromaticityValues' type64='{_AVCaptureWhiteBalanceChromaticityValues=ff}'/>
</method>
<method class_method='true' selector='defaultDeviceWithDeviceType:mediaType:position:'>
<arg declared_type64='AVCaptureDeviceType _Nonnull' index='0' name='deviceType' type64='@'/>
<arg declared_type64='AVMediaType _Nullable' index='1' name='mediaType' type64='@'/>
<arg declared_type64='AVCaptureDevicePosition' index='2' name='position' type64='q'/>
<retval declared_type64='AVCaptureDevice * _Nullable' type64='@'/>
</method>
<method selector='deviceType'>
<retval declared_type64='AVCaptureDeviceType _Nonnull' type64='@'/>
</method>
<method selector='deviceWhiteBalanceGains'>
<retval declared_type64='AVCaptureWhiteBalanceGains' type64='{_AVCaptureWhiteBalanceGains=fff}'/>
</method>
<method selector='deviceWhiteBalanceGainsForChromaticityValues:'>
<arg declared_type64='AVCaptureWhiteBalanceChromaticityValues' index='0' name='chromaticityValues' type64='{_AVCaptureWhiteBalanceChromaticityValues=ff}'/>
<retval declared_type64='AVCaptureWhiteBalanceGains' type64='{_AVCaptureWhiteBalanceGains=fff}'/>
</method>
<method selector='deviceWhiteBalanceGainsForTemperatureAndTintValues:'>
<arg declared_type64='AVCaptureWhiteBalanceTemperatureAndTintValues' index='0' name='tempAndTintValues' type64='{_AVCaptureWhiteBalanceTemperatureAndTintValues=ff}'/>
<retval declared_type64='AVCaptureWhiteBalanceGains' type64='{_AVCaptureWhiteBalanceGains=fff}'/>
</method>
<method selector='dualCameraSwitchOverVideoZoomFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='exposureDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='exposureMode'>
<retval declared_type64='AVCaptureExposureMode' type64='q'/>
</method>
<method selector='exposurePointOfInterest'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='exposureTargetBias'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='exposureTargetOffset'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='flashMode'>
<retval declared_type64='AVCaptureFlashMode' type64='q'/>
</method>
<method selector='focusMode'>
<retval declared_type64='AVCaptureFocusMode' type64='q'/>
</method>
<method selector='focusPointOfInterest'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='grayWorldDeviceWhiteBalanceGains'>
<retval declared_type64='AVCaptureWhiteBalanceGains' type64='{_AVCaptureWhiteBalanceGains=fff}'/>
</method>
<method selector='hasFlash'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasTorch'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAdjustingExposure'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAdjustingFocus'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAdjustingWhiteBalance'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAutoFocusRangeRestrictionSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExposureModeSupported:'>
<arg declared_type64='AVCaptureExposureMode' index='0' name='exposureMode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExposurePointOfInterestSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFlashActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFlashAvailable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFlashModeSupported:'>
<arg declared_type64='AVCaptureFlashMode' index='0' name='flashMode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFocusModeSupported:'>
<arg declared_type64='AVCaptureFocusMode' index='0' name='focusMode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFocusPointOfInterestSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLockingFocusWithCustomLensPositionSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLockingWhiteBalanceWithCustomDeviceGainsSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLowLightBoostEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLowLightBoostSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRampingVideoZoom'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSmoothAutoFocusEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSmoothAutoFocusSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSubjectAreaChangeMonitoringEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTorchActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTorchAvailable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTorchModeSupported:'>
<arg declared_type64='AVCaptureTorchMode' index='0' name='torchMode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVideoHDREnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isWhiteBalanceModeSupported:'>
<arg declared_type64='AVCaptureWhiteBalanceMode' index='0' name='whiteBalanceMode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lensAperture'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='lensPosition'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='maxAvailableVideoZoomFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maxExposureTargetBias'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='maxWhiteBalanceGain'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='minAvailableVideoZoomFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minExposureTargetBias'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='position'>
<retval declared_type64='AVCaptureDevicePosition' type64='q'/>
</method>
<method selector='rampToVideoZoomFactor:withRate:'>
<arg declared_type64='CGFloat' index='0' name='factor' type64='d'/>
<arg declared_type64='float' index='1' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='requestAccessForMediaType:completionHandler:'>
<arg declared_type64='AVMediaType _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setActiveColorSpace:'>
<arg declared_type64='AVCaptureColorSpace' index='0' name='activeColorSpace' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setActiveDepthDataFormat:'>
<arg declared_type64='AVCaptureDeviceFormat * _Nullable' index='0' name='activeDepthDataFormat' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setActiveDepthDataMinFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='activeDepthDataMinFrameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoFocusRangeRestriction:'>
<arg declared_type64='AVCaptureAutoFocusRangeRestriction' index='0' name='autoFocusRangeRestriction' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticallyAdjustsVideoHDREnabled:'>
<arg declared_type64='BOOL' index='0' name='automaticallyAdjustsVideoHDREnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticallyEnablesLowLightBoostWhenAvailable:'>
<arg declared_type64='BOOL' index='0' name='automaticallyEnablesLowLightBoostWhenAvailable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExposureMode:'>
<arg declared_type64='AVCaptureExposureMode' index='0' name='exposureMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExposureModeCustomWithDuration:ISO:completionHandler:'>
<arg declared_type64='CMTime' index='0' name='duration' type64='{_CMTime=qiIq}'/>
<arg declared_type64='float' index='1' name='ISO' type64='f'/>
<arg declared_type64='void (^ _Nullable)(CMTime)' function_pointer='true' index='2' name='handler' type64='@?'>
<arg declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExposurePointOfInterest:'>
<arg declared_type64='CGPoint' index='0' name='exposurePointOfInterest' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExposureTargetBias:completionHandler:'>
<arg declared_type64='float' index='0' name='bias' type64='f'/>
<arg declared_type64='void (^ _Nullable)(CMTime)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFlashMode:'>
<arg declared_type64='AVCaptureFlashMode' index='0' name='flashMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusMode:'>
<arg declared_type64='AVCaptureFocusMode' index='0' name='focusMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusModeLockedWithLensPosition:completionHandler:'>
<arg declared_type64='float' index='0' name='lensPosition' type64='f'/>
<arg declared_type64='void (^ _Nullable)(CMTime)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusPointOfInterest:'>
<arg declared_type64='CGPoint' index='0' name='focusPointOfInterest' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSmoothAutoFocusEnabled:'>
<arg declared_type64='BOOL' index='0' name='smoothAutoFocusEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSubjectAreaChangeMonitoringEnabled:'>
<arg declared_type64='BOOL' index='0' name='subjectAreaChangeMonitoringEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTorchMode:'>
<arg declared_type64='AVCaptureTorchMode' index='0' name='torchMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTorchModeOnWithLevel:error:'>
<arg declared_type64='float' index='0' name='torchLevel' type64='f'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setVideoHDREnabled:'>
<arg declared_type64='BOOL' index='0' name='videoHDREnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoZoomFactor:'>
<arg declared_type64='CGFloat' index='0' name='videoZoomFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWhiteBalanceMode:'>
<arg declared_type64='AVCaptureWhiteBalanceMode' index='0' name='whiteBalanceMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWhiteBalanceModeLockedWithDeviceWhiteBalanceGains:completionHandler:'>
<arg declared_type64='AVCaptureWhiteBalanceGains' index='0' name='whiteBalanceGains' type64='{_AVCaptureWhiteBalanceGains=fff}'/>
<arg declared_type64='void (^ _Nullable)(CMTime)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='temperatureAndTintValuesForDeviceWhiteBalanceGains:'>
<arg declared_type64='AVCaptureWhiteBalanceGains' index='0' name='whiteBalanceGains' type64='{_AVCaptureWhiteBalanceGains=fff}'/>
<retval declared_type64='AVCaptureWhiteBalanceTemperatureAndTintValues' type64='{_AVCaptureWhiteBalanceTemperatureAndTintValues=ff}'/>
</method>
<method selector='torchLevel'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='torchMode'>
<retval declared_type64='AVCaptureTorchMode' type64='q'/>
</method>
<method selector='videoZoomFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='whiteBalanceMode'>
<retval declared_type64='AVCaptureWhiteBalanceMode' type64='q'/>
</method>
</class>
<class name='AVCapturePhoto'>
<method selector='CGImageRepresentation'>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='bracketSettings'>
<retval declared_type64='AVCaptureBracketedStillImageSettings * _Nullable' type64='@'/>
</method>
<method selector='fileDataRepresentation'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='fileDataRepresentationWithReplacementMetadata:replacementEmbeddedThumbnailPhotoFormat:replacementEmbeddedThumbnailPixelBuffer:replacementDepthData:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='replacementMetadata' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='replacementEmbeddedThumbnailPhotoFormat' type64='@'/>
<arg declared_type64='CVPixelBufferRef _Nullable' index='2' name='replacementEmbeddedThumbnailPixelBuffer' type64='^{__CVBuffer=}'/>
<arg declared_type64='AVDepthData * _Nullable' index='3' name='replacementDepthData' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='lensStabilizationStatus'>
<retval declared_type64='AVCaptureLensStabilizationStatus' type64='q'/>
</method>
<method selector='previewCGImageRepresentation'>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='sequenceCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='AVCapturePhotoOutput'>
<method selector='isDepthDataDeliveryEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDepthDataDeliverySupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setDepthDataDeliveryEnabled:'>
<arg declared_type64='BOOL' index='0' name='depthDataDeliveryEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVCaptureStillImageOutput'>
<method selector='captureStillImageBracketAsynchronouslyFromConnection:withSettingsArray:completionHandler:'>
<arg declared_type64='AVCaptureConnection * _Nonnull' index='0' name='connection' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='settings' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(CMSampleBufferRef _Nullable, AVCaptureBracketedStillImageSettings * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='handler' type64='@?'>
<arg declared_type64='CMSampleBufferRef _Nullable' type64='^{opaqueCMSampleBuffer=}'/>
<arg declared_type64='AVCaptureBracketedStillImageSettings * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isLensStabilizationDuringBracketedCaptureEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLensStabilizationDuringBracketedCaptureSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maxBracketedCaptureStillImageCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='prepareToCaptureStillImageBracketFromConnection:withSettingsArray:completionHandler:'>
<arg declared_type64='AVCaptureConnection * _Nonnull' index='0' name='connection' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='settings' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(BOOL, NSError * _Nullable)' function_pointer='true' index='2' name='handler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLensStabilizationDuringBracketedCaptureEnabled:'>
<arg declared_type64='BOOL' index='0' name='lensStabilizationDuringBracketedCaptureEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVComposition'>
<method selector='URLAssetInitializationOptions'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='trackWithTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='AVCompositionTrack * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type64='AVMediaCharacteristic _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type64='AVMediaType _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVCompositionTrack'>
<method selector='segmentForTrackTime:'>
<arg declared_type64='CMTime' index='0' name='trackTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='AVCompositionTrackSegment * _Nullable' type64='@'/>
</method>
<method selector='segments'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVCompositionTrackSegment'>
<method class_method='true' selector='compositionTrackSegmentWithTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='compositionTrackSegmentWithURL:trackID:sourceTimeRange:targetTimeRange:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='CMPersistentTrackID' index='1' name='trackID' type64='i'/>
<arg declared_type64='CMTimeRange' index='2' name='sourceTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='CMTimeRange' index='3' name='targetTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithURL:trackID:sourceTimeRange:targetTimeRange:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='CMPersistentTrackID' index='1' name='trackID' type64='i'/>
<arg declared_type64='CMTimeRange' index='2' name='sourceTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='CMTimeRange' index='3' name='targetTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEmpty'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sourceTrackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method selector='sourceURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
</class>
<class name='AVContentKeyRequest'>
<method selector='canProvidePersistableContentKey'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='initializationData'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='appIdentifier' type64='@'/>
<arg declared_type64='NSData * _Nullable' index='1' name='contentIdentifier' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable)' function_pointer='true' index='3' name='handler' type64='@?'>
<arg declared_type64='NSData * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='processContentKeyResponse:'>
<arg declared_type64='AVContentKeyResponse * _Nonnull' index='0' name='keyResponse' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='processContentKeyResponseError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renewsExpiringResponseData'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='status'>
<retval declared_type64='AVContentKeyRequestStatus' type64='q'/>
</method>
</class>
<class name='AVContentKeyResponse'>
<method class_method='true' selector='contentKeyResponseWithClearKeyData:initializationVector:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='keyData' type64='@'/>
<arg declared_type64='NSData * _Nullable' index='1' name='initializationVector' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='contentKeyResponseWithFairPlayStreamingKeyResponseData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='keyResponseData' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVContentKeySession'>
<method selector='addContentKeyRecipient:'>
<arg declared_type64='id _Nonnull' index='0' name='recipient' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeyRecipients'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='contentKeySessionWithKeySystem:'>
<arg declared_type64='AVContentKeySystem _Nonnull' index='0' name='keySystem' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='contentKeySessionWithKeySystem:storageDirectoryAtURL:'>
<arg declared_type64='AVContentKeySystem _Nonnull' index='0' name='keySystem' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='storageURL' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='contentProtectionSessionIdentifier'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type64='dispatch_queue_t _Nullable' type64='@'/>
</method>
<method selector='expire'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='keySystem'>
<retval declared_type64='AVContentKeySystem _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='appIdentifier' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='storageURL' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='processContentKeyRequestWithIdentifier:initializationData:options:'>
<arg declared_type64='id _Nullable' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSData * _Nullable' index='1' name='initializationData' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeContentKeyRecipient:'>
<arg declared_type64='id _Nonnull' index='0' name='recipient' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='expiredSessionReports' type64='@'/>
<arg declared_type64='NSData * _Nonnull' index='1' name='appIdentifier' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='2' name='storageURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renewExpiringResponseDataForContentKeyRequest:'>
<arg declared_type64='AVContentKeyRequest * _Nonnull' index='0' name='contentKeyRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='delegateQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='storageURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
</class>
<class name='AVDateRangeMetadataGroup'>
<method selector='endDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='initWithItems:startDate:endDate:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<arg declared_type64='NSDate * _Nonnull' index='1' name='startDate' type64='@'/>
<arg declared_type64='NSDate * _Nullable' index='2' name='endDate' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='startDate'>
<retval declared_type64='NSDate * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVDepthData'>
<method selector='availableDepthDataTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='cameraCalibrationData'>
<retval declared_type64='AVCameraCalibrationData * _Nullable' type64='@'/>
</method>
<method selector='depthDataAccuracy'>
<retval declared_type64='AVDepthDataAccuracy' type64='q'/>
</method>
<method selector='depthDataByApplyingExifOrientation:'>
<arg declared_type64='CGImagePropertyOrientation' index='0' name='exifOrientation' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='depthDataByConvertingToDepthDataType:'>
<arg declared_type64='OSType' index='0' name='depthDataType' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='depthDataByReplacingDepthDataMapWithPixelBuffer:error:'>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='0' name='pixelBuffer' type64='^{__CVBuffer=}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='depthDataFromDictionaryRepresentation:error:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='imageSourceAuxDataInfoDictionary' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='depthDataMap'>
<retval declared_type64='CVPixelBufferRef _Nonnull' type64='^{__CVBuffer=}'/>
</method>
<method selector='depthDataQuality'>
<retval declared_type64='AVDepthDataQuality' type64='q'/>
</method>
<method selector='depthDataType'>
<retval declared_type64='OSType' type64='I'/>
</method>
<method selector='dictionaryRepresentationForAuxiliaryDataType:'>
<arg declared_type64='NSString * _Nullable * _Nullable' index='0' name='outAuxDataType' type64='^@'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='isDepthDataFiltered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVFragmentedAsset'>
<method class_method='true' selector='fragmentedAssetWithURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='trackWithTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='AVFragmentedAssetTrack * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type64='AVMediaCharacteristic _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type64='AVMediaType _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVFragmentedAssetMinder'>
<method selector='addFragmentedAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='assets'>
<retval declared_type64='NSArray *&gt; * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fragmentedAssetMinderWithAsset:mindingInterval:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='mindingInterval' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithAsset:mindingInterval:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='mindingInterval' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='mindingInterval'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='removeFragmentedAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMindingInterval:'>
<arg declared_type64='NSTimeInterval' index='0' name='mindingInterval' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVMediaSelection'>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nullable' type64='@'/>
</method>
<method selector='mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectedMediaOptionInMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='AVMediaSelectionOption * _Nullable' type64='@'/>
</method>
</class>
<class name='AVMediaSelectionGroup'>
<method selector='allowsEmptySelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='defaultOption'>
<retval declared_type64='AVMediaSelectionOption * _Nullable' type64='@'/>
</method>
<method selector='mediaSelectionOptionWithPropertyList:'>
<arg declared_type64='id _Nonnull' index='0' name='plist' type64='@'/>
<retval declared_type64='AVMediaSelectionOption * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='mediaSelectionOptions' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='preferredLanguages' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:withLocale:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='mediaSelectionOptions' type64='@'/>
<arg declared_type64='NSLocale * _Nonnull' index='1' name='locale' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:withMediaCharacteristics:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='mediaSelectionOptions' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='mediaCharacteristics' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:withoutMediaCharacteristics:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='mediaSelectionOptions' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='mediaCharacteristics' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='options'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playableMediaSelectionOptionsFromArray:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='mediaSelectionOptions' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMediaSelectionOption'>
<method selector='associatedMediaSelectionOptionInMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='AVMediaSelectionOption * _Nullable' type64='@'/>
</method>
<method selector='availableMetadataFormats'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='commonMetadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='displayName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='displayNameWithLocale:'>
<arg declared_type64='NSLocale * _Nonnull' index='0' name='locale' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='hasMediaCharacteristic:'>
<arg declared_type64='AVMediaCharacteristic _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlayable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='locale'>
<retval declared_type64='NSLocale * _Nullable' type64='@'/>
</method>
<method selector='mediaSubTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='mediaType'>
<retval declared_type64='AVMediaType _Nonnull' type64='@'/>
</method>
<method selector='metadataForFormat:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='format' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='propertyList'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMetadataGroup'>
<method selector='classifyingLabel'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='uniqueID'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='AVMetadataItem'>
<method selector='commonKey'>
<retval declared_type64='AVMetadataKey _Nullable' type64='@'/>
</method>
<method selector='dataType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='dataValue'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='dateValue'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='extraAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='AVMetadataIdentifier _Nullable' type64='@'/>
</method>
<method class_method='true' selector='identifierForKey:keySpace:'>
<arg declared_type64='id _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='AVMetadataKeySpace _Nonnull' index='1' name='keySpace' type64='@'/>
<retval declared_type64='AVMetadataIdentifier _Nullable' type64='@'/>
</method>
<method selector='key'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='keyForIdentifier:'>
<arg declared_type64='AVMetadataIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='keySpace'>
<retval declared_type64='AVMetadataKeySpace _Nullable' type64='@'/>
</method>
<method class_method='true' selector='keySpaceForIdentifier:'>
<arg declared_type64='AVMetadataIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='AVMetadataKeySpace _Nullable' type64='@'/>
</method>
<method selector='loadValuesAsynchronouslyForKeys:completionHandler:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='keys' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='locale'>
<retval declared_type64='NSLocale * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='metadataItemWithPropertiesOfMetadataItem:valueLoadingHandler:'>
<arg declared_type64='AVMetadataItem * _Nonnull' index='0' name='metadataItem' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(AVMetadataItemValueRequest * _Nonnull)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='AVMetadataItemValueRequest * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='AVMetadataItem * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadataItems' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='preferredLanguages' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:filteredByIdentifier:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadataItems' type64='@'/>
<arg declared_type64='AVMetadataIdentifier _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:filteredByMetadataItemFilter:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadataItems' type64='@'/>
<arg declared_type64='AVMetadataItemFilter * _Nonnull' index='1' name='metadataItemFilter' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:withKey:keySpace:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadataItems' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='key' type64='@'/>
<arg declared_type64='AVMetadataKeySpace _Nullable' index='2' name='keySpace' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:withLocale:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadataItems' type64='@'/>
<arg declared_type64='NSLocale * _Nonnull' index='1' name='locale' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='numberValue'>
<retval declared_type64='NSNumber * _Nullable' type64='@'/>
</method>
<method selector='startDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='statusOfValueForKey:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='AVKeyValueStatus' type64='q'/>
</method>
<method selector='stringValue'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='time'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='value'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='AVMetadataItemFilter'>
<method class_method='true' selector='metadataItemFilterForSharing'>
<retval declared_type64='AVMetadataItemFilter * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMetadataItemValueRequest'>
<method selector='metadataItem'>
<retval declared_type64='AVMetadataItem * _Nullable' type64='@'/>
</method>
<method selector='respondWithError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='respondWithValue:'>
<arg declared_type64='id _Nonnull' index='0' name='value' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVMetadataMachineReadableCodeObject'>
<method selector='descriptor'>
<retval declared_type64='CIBarcodeDescriptor * _Nullable' type64='@'/>
</method>
</class>
<class name='AVMutableAudioMix'>
<method class_method='true' selector='audioMix'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputParameters'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setInputParameters:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='inputParameters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVMutableAudioMixInputParameters'>
<method class_method='true' selector='audioMixInputParameters'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='audioMixInputParametersWithTrack:'>
<arg declared_type64='AVAssetTrack * _Nullable' index='0' name='track' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='audioTapProcessor'>
<retval declared_type64='MTAudioProcessingTapRef _Nullable' type64='^{opaqueMTAudioProcessingTap=}'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='AVAudioTimePitchAlgorithm _Nullable' type64='@'/>
</method>
<method selector='setAudioTapProcessor:'>
<arg declared_type64='MTAudioProcessingTapRef _Nullable' index='0' name='audioTapProcessor' type64='^{opaqueMTAudioProcessingTap=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type64='AVAudioTimePitchAlgorithm _Nullable' index='0' name='audioTimePitchAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:atTime:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<arg declared_type64='CMTime' index='1' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolumeRampFromStartVolume:toEndVolume:timeRange:'>
<arg declared_type64='float' index='0' name='startVolume' type64='f'/>
<arg declared_type64='float' index='1' name='endVolume' type64='f'/>
<arg declared_type64='CMTimeRange' index='2' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
</class>
<class name='AVMutableComposition'>
<method selector='addMutableTrackWithMediaType:preferredTrackID:'>
<arg declared_type64='AVMediaType _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='CMPersistentTrackID' index='1' name='preferredTrackID' type64='i'/>
<retval declared_type64='AVMutableCompositionTrack * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='composition'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='compositionWithURLAssetInitializationOptions:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='URLAssetInitializationOptions' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertEmptyTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertTimeRange:ofAsset:atTime:error:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='AVAsset * _Nonnull' index='1' name='asset' type64='@'/>
<arg declared_type64='CMTime' index='2' name='startTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mutableTrackCompatibleWithTrack:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='AVMutableCompositionTrack * _Nullable' type64='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='removeTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTrack:'>
<arg declared_type64='AVCompositionTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scaleTimeRange:toDuration:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='CMTime' index='1' name='duration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNaturalSize:'>
<arg declared_type64='CGSize' index='0' name='naturalSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trackWithTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='AVMutableCompositionTrack * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type64='AVMediaCharacteristic _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type64='AVMediaType _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMutableCompositionTrack'>
<method selector='addTrackAssociationToTrack:type:'>
<arg declared_type64='AVCompositionTrack * _Nonnull' index='0' name='compositionTrack' type64='@'/>
<arg declared_type64='AVTrackAssociationType _Nonnull' index='1' name='trackAssociationType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='insertEmptyTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertTimeRange:ofTrack:atTime:error:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='AVAssetTrack * _Nonnull' index='1' name='track' type64='@'/>
<arg declared_type64='CMTime' index='2' name='startTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='insertTimeRanges:ofTracks:atTime:error:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='timeRanges' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='tracks' type64='@'/>
<arg declared_type64='CMTime' index='2' name='startTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='languageCode'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='naturalTimeScale'>
<retval declared_type64='CMTimeScale' type64='i'/>
</method>
<method selector='preferredTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='removeTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTrackAssociationToTrack:type:'>
<arg declared_type64='AVCompositionTrack * _Nonnull' index='0' name='compositionTrack' type64='@'/>
<arg declared_type64='AVTrackAssociationType _Nonnull' index='1' name='trackAssociationType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scaleTimeRange:toDuration:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='CMTime' index='1' name='duration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='segments'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setExtendedLanguageTag:'>
<arg declared_type64='NSString * _Nullable' index='0' name='extendedLanguageTag' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLanguageCode:'>
<arg declared_type64='NSString * _Nullable' index='0' name='languageCode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNaturalTimeScale:'>
<arg declared_type64='CMTimeScale' index='0' name='naturalTimeScale' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='preferredTransform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredVolume:'>
<arg declared_type64='float' index='0' name='preferredVolume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSegments:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='segments' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='validateTrackSegments:error:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='trackSegments' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVMutableDateRangeMetadataGroup'>
<method selector='endDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setEndDate:'>
<arg declared_type64='NSDate * _Nullable' index='0' name='endDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartDate:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='startDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startDate'>
<retval declared_type64='NSDate * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMutableMediaSelection'>
<method selector='selectMediaOption:inMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionOption * _Nullable' index='0' name='mediaSelectionOption' type64='@'/>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='1' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVMutableMetadataItem'>
<method selector='dataType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='extraAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='AVMetadataIdentifier _Nullable' type64='@'/>
</method>
<method selector='key'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='keySpace'>
<retval declared_type64='AVMetadataKeySpace _Nullable' type64='@'/>
</method>
<method selector='locale'>
<retval declared_type64='NSLocale * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='metadataItem'>
<retval declared_type64='AVMutableMetadataItem * _Nonnull' type64='@'/>
</method>
<method selector='setDataType:'>
<arg declared_type64='NSString * _Nullable' index='0' name='dataType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDuration:'>
<arg declared_type64='CMTime' index='0' name='duration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtendedLanguageTag:'>
<arg declared_type64='NSString * _Nullable' index='0' name='extendedLanguageTag' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtraAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='extraAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type64='AVMetadataIdentifier _Nullable' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKey:'>
<arg declared_type64='id _Nullable' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeySpace:'>
<arg declared_type64='AVMetadataKeySpace _Nullable' index='0' name='keySpace' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocale:'>
<arg declared_type64='NSLocale * _Nullable' index='0' name='locale' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartDate:'>
<arg declared_type64='NSDate * _Nullable' index='0' name='startDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTime:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:'>
<arg declared_type64='id _Nullable' index='0' name='value' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='time'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='value'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='AVMutableTimedMetadataGroup'>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVMutableVideoComposition'>
<method selector='animationTool'>
<retval declared_type64='AVVideoCompositionCoreAnimationTool * _Nullable' type64='@'/>
</method>
<method selector='colorPrimaries'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='colorTransferFunction'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='colorYCbCrMatrix'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='customVideoCompositorClass'>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method selector='frameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='instructions'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='renderScale'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='renderSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='setAnimationTool:'>
<arg declared_type64='AVVideoCompositionCoreAnimationTool * _Nullable' index='0' name='animationTool' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColorPrimaries:'>
<arg declared_type64='NSString * _Nullable' index='0' name='colorPrimaries' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColorTransferFunction:'>
<arg declared_type64='NSString * _Nullable' index='0' name='colorTransferFunction' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColorYCbCrMatrix:'>
<arg declared_type64='NSString * _Nullable' index='0' name='colorYCbCrMatrix' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomVideoCompositorClass:'>
<arg declared_type64='Class _Nullable' index='0' name='customVideoCompositorClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='frameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInstructions:'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='instructions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderScale:'>
<arg declared_type64='float' index='0' name='renderScale' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderSize:'>
<arg declared_type64='CGSize' index='0' name='renderSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSourceTrackIDForFrameTiming:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='sourceTrackIDForFrameTiming' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sourceTrackIDForFrameTiming'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method class_method='true' selector='videoComposition'>
<retval declared_type64='AVMutableVideoComposition * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionWithAsset:applyingCIFiltersWithHandler:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(AVAsynchronousCIImageFilteringRequest * _Nonnull)' function_pointer='true' index='1' name='applier' type64='@?'>
<arg declared_type64='AVAsynchronousCIImageFilteringRequest * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='AVMutableVideoComposition * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionWithPropertiesOfAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='AVMutableVideoComposition * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMutableVideoCompositionInstruction'>
<method selector='backgroundColor'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='enablePostProcessing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layerInstructions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='CGColorRef _Nullable' index='0' name='backgroundColor' type64='^{CGColor=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnablePostProcessing:'>
<arg declared_type64='BOOL' index='0' name='enablePostProcessing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayerInstructions:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='layerInstructions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method class_method='true' selector='videoCompositionInstruction'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMutableVideoCompositionLayerInstruction'>
<method selector='setCropRectangle:atTime:'>
<arg declared_type64='CGRect' index='0' name='cropRectangle' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CMTime' index='1' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:'>
<arg declared_type64='CGRect' index='0' name='startCropRectangle' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGRect' index='1' name='endCropRectangle' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CMTimeRange' index='2' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpacity:atTime:'>
<arg declared_type64='float' index='0' name='opacity' type64='f'/>
<arg declared_type64='CMTime' index='1' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpacityRampFromStartOpacity:toEndOpacity:timeRange:'>
<arg declared_type64='float' index='0' name='startOpacity' type64='f'/>
<arg declared_type64='float' index='1' name='endOpacity' type64='f'/>
<arg declared_type64='CMTimeRange' index='2' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransform:atTime:'>
<arg declared_type64='CGAffineTransform' index='0' name='transform' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type64='CMTime' index='1' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransformRampFromStartTransform:toEndTransform:timeRange:'>
<arg declared_type64='CGAffineTransform' index='0' name='startTransform' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type64='CGAffineTransform' index='1' name='endTransform' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type64='CMTimeRange' index='2' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method class_method='true' selector='videoCompositionLayerInstruction'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionLayerInstructionWithAssetTrack:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVOutputSettingsAssistant'>
<method selector='audioSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='availableOutputSettingsPresets'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='outputFileType'>
<retval declared_type64='AVFileType _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='outputSettingsAssistantWithPreset:'>
<arg declared_type64='AVOutputSettingsPreset _Nonnull' index='0' name='presetIdentifier' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='setSourceAudioFormat:'>
<arg declared_type64='CMAudioFormatDescriptionRef _Nullable' index='0' name='sourceAudioFormat' type64='^{opaqueCMFormatDescription=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSourceVideoAverageFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='sourceVideoAverageFrameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSourceVideoFormat:'>
<arg declared_type64='CMVideoFormatDescriptionRef _Nullable' index='0' name='sourceVideoFormat' type64='^{opaqueCMFormatDescription=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSourceVideoMinFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='sourceVideoMinFrameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sourceAudioFormat'>
<retval declared_type64='CMAudioFormatDescriptionRef _Nullable' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='sourceVideoAverageFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='sourceVideoFormat'>
<retval declared_type64='CMVideoFormatDescriptionRef _Nullable' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='sourceVideoMinFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='videoSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
</class>
<class name='AVPersistableContentKeyRequest'>
<method selector='persistableContentKeyFromKeyVendorResponse:options:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='keyVendorResponse' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
</class>
<class name='AVPlayer'>
<method selector='actionAtItemEnd'>
<retval declared_type64='AVPlayerActionAtItemEnd' type64='q'/>
</method>
<method selector='addBoundaryTimeObserverForTimes:queue:usingBlock:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='times' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='2' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='addPeriodicTimeObserverForInterval:queue:usingBlock:'>
<arg declared_type64='CMTime' index='0' name='interval' type64='{_CMTime=qiIq}'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(CMTime)' function_pointer='true' index='2' name='block' type64='@?'>
<arg declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='allowsAirPlayVideo'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsExternalPlayback'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='appliesMediaSelectionCriteriaAutomatically'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='automaticallyWaitsToMinimizeStalling'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='availableHDRModes'>
<retval declared_type64='AVPlayerHDRMode' type64='q'/>
</method>
<method selector='cancelPendingPrerolls'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='currentItem'>
<retval declared_type64='AVPlayerItem * _Nullable' type64='@'/>
</method>
<method selector='currentTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='externalPlaybackVideoGravity'>
<retval declared_type64='AVLayerVideoGravity _Nonnull' type64='@'/>
</method>
<method selector='initWithPlayerItem:'>
<arg declared_type64='AVPlayerItem * _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isAirPlayVideoActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isClosedCaptionDisplayEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExternalPlaybackActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMuted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='masterClock'>
<retval declared_type64='CMClockRef _Nullable' type64='^{OpaqueCMClock=}'/>
</method>
<method selector='mediaSelectionCriteriaForMediaCharacteristic:'>
<arg declared_type64='AVMediaCharacteristic _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='AVPlayerMediaSelectionCriteria * _Nullable' type64='@'/>
</method>
<method selector='outputObscuredDueToInsufficientExternalProtection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pause'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='play'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playImmediatelyAtRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='playerWithPlayerItem:'>
<arg declared_type64='AVPlayerItem * _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playerWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='prerollAtRate:completionHandler:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preventsDisplaySleepDuringVideoPlayback'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='reasonForWaitingToPlay'>
<retval declared_type64='AVPlayerWaitingReason _Nullable' type64='@'/>
</method>
<method selector='removeTimeObserver:'>
<arg declared_type64='id _Nonnull' index='0' name='observer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceCurrentItemWithPlayerItem:'>
<arg declared_type64='AVPlayerItem * _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToDate:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='date' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToDate:completionHandler:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='date' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:completionHandler:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='1' name='toleranceBefore' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='2' name='toleranceAfter' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:completionHandler:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='1' name='toleranceBefore' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='2' name='toleranceAfter' type64='{_CMTime=qiIq}'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setActionAtItemEnd:'>
<arg declared_type64='AVPlayerActionAtItemEnd' index='0' name='actionAtItemEnd' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsAirPlayVideo:'>
<arg declared_type64='BOOL' index='0' name='allowsAirPlayVideo' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsExternalPlayback:'>
<arg declared_type64='BOOL' index='0' name='allowsExternalPlayback' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAppliesMediaSelectionCriteriaAutomatically:'>
<arg declared_type64='BOOL' index='0' name='appliesMediaSelectionCriteriaAutomatically' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticallyWaitsToMinimizeStalling:'>
<arg declared_type64='BOOL' index='0' name='automaticallyWaitsToMinimizeStalling' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClosedCaptionDisplayEnabled:'>
<arg declared_type64='BOOL' index='0' name='closedCaptionDisplayEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExternalPlaybackVideoGravity:'>
<arg declared_type64='AVLayerVideoGravity _Nonnull' index='0' name='externalPlaybackVideoGravity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMasterClock:'>
<arg declared_type64='CMClockRef _Nullable' index='0' name='masterClock' type64='^{OpaqueCMClock=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMediaSelectionCriteria:forMediaCharacteristic:'>
<arg declared_type64='AVPlayerMediaSelectionCriteria * _Nullable' index='0' name='criteria' type64='@'/>
<arg declared_type64='AVMediaCharacteristic _Nonnull' index='1' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMuted:'>
<arg declared_type64='BOOL' index='0' name='muted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreventsDisplaySleepDuringVideoPlayback:'>
<arg declared_type64='BOOL' index='0' name='preventsDisplaySleepDuringVideoPlayback' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:time:atHostTime:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<arg declared_type64='CMTime' index='1' name='itemTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='2' name='hostClockTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesAirPlayVideoWhileAirPlayScreenIsActive:'>
<arg declared_type64='BOOL' index='0' name='usesAirPlayVideoWhileAirPlayScreenIsActive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesExternalPlaybackWhileExternalScreenIsActive:'>
<arg declared_type64='BOOL' index='0' name='usesExternalPlaybackWhileExternalScreenIsActive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='status'>
<retval declared_type64='AVPlayerStatus' type64='q'/>
</method>
<method selector='timeControlStatus'>
<retval declared_type64='AVPlayerTimeControlStatus' type64='q'/>
</method>
<method selector='usesAirPlayVideoWhileAirPlayScreenIsActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='usesExternalPlaybackWhileExternalScreenIsActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVPlayerItem'>
<method selector='accessLog'>
<retval declared_type64='AVPlayerItemAccessLog * _Nullable' type64='@'/>
</method>
<method selector='addMediaDataCollector:'>
<arg declared_type64='AVPlayerItemMediaDataCollector * _Nonnull' index='0' name='collector' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addOutput:'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nonnull' type64='@'/>
</method>
<method selector='audioMix'>
<retval declared_type64='AVAudioMix * _Nullable' type64='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='AVAudioTimePitchAlgorithm _Nonnull' type64='@'/>
</method>
<method selector='automaticallyLoadedAssetKeys'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='canPlayFastForward'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPlayFastReverse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPlayReverse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPlaySlowForward'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPlaySlowReverse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canStepBackward'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canStepForward'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canUseNetworkResourcesForLiveStreamingWhilePaused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelPendingSeeks'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='currentDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='currentMediaSelection'>
<retval declared_type64='AVMediaSelection * _Nonnull' type64='@'/>
</method>
<method selector='currentTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='errorLog'>
<retval declared_type64='AVPlayerItemErrorLog * _Nullable' type64='@'/>
</method>
<method selector='forwardPlaybackEndTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='initWithAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithAsset:automaticallyLoadedAssetKeys:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='automaticallyLoadedAssetKeys' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isPlaybackBufferEmpty'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlaybackBufferFull'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlaybackLikelyToKeepUp'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadedTimeRanges'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='mediaDataCollectors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='outputs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playerItemWithAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playerItemWithAsset:automaticallyLoadedAssetKeys:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='automaticallyLoadedAssetKeys' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playerItemWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='preferredForwardBufferDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='preferredMaximumResolution'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='preferredPeakBitRate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='presentationSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='removeMediaDataCollector:'>
<arg declared_type64='AVPlayerItemMediaDataCollector * _Nonnull' index='0' name='collector' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeOutput:'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reversePlaybackEndTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='seekToDate:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='date' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='seekToDate:completionHandler:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='date' type64='@'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='seekToTime:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:completionHandler:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='1' name='toleranceBefore' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='2' name='toleranceAfter' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:completionHandler:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='1' name='toleranceBefore' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='2' name='toleranceAfter' type64='{_CMTime=qiIq}'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekableTimeRanges'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='seekingWaitsForVideoCompositionRendering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectMediaOption:inMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionOption * _Nullable' index='0' name='mediaSelectionOption' type64='@'/>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='1' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectMediaOptionAutomaticallyInMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedMediaOptionInMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='AVMediaSelectionOption * _Nullable' type64='@'/>
</method>
<method selector='setAudioMix:'>
<arg declared_type64='AVAudioMix * _Nullable' index='0' name='audioMix' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type64='AVAudioTimePitchAlgorithm _Nonnull' index='0' name='audioTimePitchAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanUseNetworkResourcesForLiveStreamingWhilePaused:'>
<arg declared_type64='BOOL' index='0' name='canUseNetworkResourcesForLiveStreamingWhilePaused' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setForwardPlaybackEndTime:'>
<arg declared_type64='CMTime' index='0' name='forwardPlaybackEndTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredForwardBufferDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='preferredForwardBufferDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMaximumResolution:'>
<arg declared_type64='CGSize' index='0' name='preferredMaximumResolution' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredPeakBitRate:'>
<arg declared_type64='double' index='0' name='preferredPeakBitRate' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReversePlaybackEndTime:'>
<arg declared_type64='CMTime' index='0' name='reversePlaybackEndTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSeekingWaitsForVideoCompositionRendering:'>
<arg declared_type64='BOOL' index='0' name='seekingWaitsForVideoCompositionRendering' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextStyleRules:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='textStyleRules' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoApertureMode:'>
<arg declared_type64='AVVideoApertureMode _Nonnull' index='0' name='videoApertureMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type64='AVVideoComposition * _Nullable' index='0' name='videoComposition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='status'>
<retval declared_type64='AVPlayerItemStatus' type64='q'/>
</method>
<method selector='stepByCount:'>
<arg declared_type64='NSInteger' index='0' name='stepCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStyleRules'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='timebase'>
<retval declared_type64='CMTimebaseRef _Nullable' type64='^{OpaqueCMTimebase=}'/>
</method>
<method selector='timedMetadata'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='videoApertureMode'>
<retval declared_type64='AVVideoApertureMode _Nonnull' type64='@'/>
</method>
<method selector='videoComposition'>
<retval declared_type64='AVVideoComposition * _Nullable' type64='@'/>
</method>
</class>
<class name='AVPlayerItemAccessLog'>
<method selector='events'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='extendedLogData'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='extendedLogDataStringEncoding'>
<retval declared_type64='NSStringEncoding' type64='Q'/>
</method>
</class>
<class name='AVPlayerItemAccessLogEvent'>
<method selector='URI'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='averageAudioBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='averageVideoBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='downloadOverdue'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='durationWatched'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='indicatedAverageBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='indicatedBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='mediaRequestsWWAN'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfBytesTransferred'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='numberOfDroppedVideoFrames'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfMediaRequests'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfSegmentsDownloaded'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfServerAddressChanges'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfStalls'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='observedBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='observedBitrateStandardDeviation'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='observedMaxBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='observedMinBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='playbackSessionID'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='playbackStartDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='playbackStartOffset'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='playbackType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='segmentsDownloadedDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='serverAddress'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='startupTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='switchBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='transferDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
</class>
<class name='AVPlayerItemErrorLog'>
<method selector='events'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='extendedLogData'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='extendedLogDataStringEncoding'>
<retval declared_type64='NSStringEncoding' type64='Q'/>
</method>
</class>
<class name='AVPlayerItemErrorLogEvent'>
<method selector='URI'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='date'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='errorComment'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='errorDomain'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='errorStatusCode'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='playbackSessionID'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='serverAddress'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='AVPlayerItemLegibleOutput'>
<method selector='advanceIntervalForDelegateInvocation'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type64='dispatch_queue_t _Nullable' type64='@'/>
</method>
<method selector='initWithMediaSubtypesForNativeRepresentation:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='subtypes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAdvanceIntervalForDelegateInvocation:'>
<arg declared_type64='NSTimeInterval' index='0' name='advanceIntervalForDelegateInvocation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='delegateQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextStylingResolution:'>
<arg declared_type64='AVPlayerItemLegibleOutputTextStylingResolution _Nonnull' index='0' name='textStylingResolution' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStylingResolution'>
<retval declared_type64='AVPlayerItemLegibleOutputTextStylingResolution _Nonnull' type64='@'/>
</method>
</class>
<class name='AVPlayerItemMetadataCollector'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type64='dispatch_queue_t _Nullable' type64='@'/>
</method>
<method selector='initWithIdentifiers:classifyingLabels:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='identifiers' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='classifyingLabels' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='delegateQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVPlayerItemMetadataOutput'>
<method selector='advanceIntervalForDelegateInvocation'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type64='dispatch_queue_t _Nullable' type64='@'/>
</method>
<method selector='initWithIdentifiers:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='identifiers' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAdvanceIntervalForDelegateInvocation:'>
<arg declared_type64='NSTimeInterval' index='0' name='advanceIntervalForDelegateInvocation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='delegateQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVPlayerItemOutput'>
<method selector='itemTimeForHostTime:'>
<arg declared_type64='CFTimeInterval' index='0' name='hostTimeInSeconds' type64='d'/>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='itemTimeForMachAbsoluteTime:'>
<arg declared_type64='int64_t' index='0' name='machAbsoluteTime' type64='q'/>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='setSuppressesPlayerRendering:'>
<arg declared_type64='BOOL' index='0' name='suppressesPlayerRendering' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='suppressesPlayerRendering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVPlayerItemTrack'>
<method selector='assetTrack'>
<retval declared_type64='AVAssetTrack * _Nullable' type64='@'/>
</method>
<method selector='currentVideoFrameRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVPlayerItemVideoOutput'>
<method selector='copyPixelBufferForItemTime:itemTimeForDisplay:'>
<arg declared_type64='CMTime' index='0' name='itemTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime * _Nullable' index='1' name='outItemTimeForDisplay' type64='^{_CMTime=qiIq}'/>
<retval declared_type64='CVPixelBufferRef _Nullable' type64='^{__CVBuffer=}'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type64='dispatch_queue_t _Nullable' type64='@'/>
</method>
<method selector='hasNewPixelBufferForItemTime:'>
<arg declared_type64='CMTime' index='0' name='itemTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithOutputSettings:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='outputSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithPixelBufferAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='pixelBufferAttributes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='requestNotificationOfMediaDataChangeWithAdvanceInterval:'>
<arg declared_type64='NSTimeInterval' index='0' name='interval' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='delegateQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVPlayerLayer'>
<method selector='isReadyForDisplay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pixelBufferAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='player'>
<retval declared_type64='AVPlayer * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='playerLayerWithPlayer:'>
<arg declared_type64='AVPlayer * _Nullable' index='0' name='player' type64='@'/>
<retval declared_type64='AVPlayerLayer * _Nonnull' type64='@'/>
</method>
<method selector='setPixelBufferAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='pixelBufferAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlayer:'>
<arg declared_type64='AVPlayer * _Nullable' index='0' name='player' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoGravity:'>
<arg declared_type64='AVLayerVideoGravity _Nonnull' index='0' name='videoGravity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoGravity'>
<retval declared_type64='AVLayerVideoGravity _Nonnull' type64='@'/>
</method>
<method selector='videoRect'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='AVPlayerLooper'>
<method selector='disableLooping'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='initWithPlayer:templateItem:timeRange:'>
<arg declared_type64='AVQueuePlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='AVPlayerItem * _Nonnull' index='1' name='itemToLoop' type64='@'/>
<arg declared_type64='CMTimeRange' index='2' name='loopRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='loopCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='loopingPlayerItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playerLooperWithPlayer:templateItem:'>
<arg declared_type64='AVQueuePlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='AVPlayerItem * _Nonnull' index='1' name='itemToLoop' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playerLooperWithPlayer:templateItem:timeRange:'>
<arg declared_type64='AVQueuePlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='AVPlayerItem * _Nonnull' index='1' name='itemToLoop' type64='@'/>
<arg declared_type64='CMTimeRange' index='2' name='loopRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='status'>
<retval declared_type64='AVPlayerLooperStatus' type64='q'/>
</method>
</class>
<class name='AVPlayerMediaSelectionCriteria'>
<method selector='initWithPreferredLanguages:preferredMediaCharacteristics:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='preferredLanguages' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='preferredMediaCharacteristics' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='preferredLanguages'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='preferredMediaCharacteristics'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='AVPortraitEffectsMatte'>
<method selector='dictionaryRepresentationForAuxiliaryDataType:'>
<arg declared_type64='NSString * _Nullable * _Nullable' index='0' name='outAuxDataType' type64='^@'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='mattingImage'>
<retval declared_type64='CVPixelBufferRef _Nonnull' type64='^{__CVBuffer=}'/>
</method>
<method selector='pixelFormatType'>
<retval declared_type64='OSType' type64='I'/>
</method>
<method selector='portraitEffectsMatteByApplyingExifOrientation:'>
<arg declared_type64='CGImagePropertyOrientation' index='0' name='exifOrientation' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='portraitEffectsMatteByReplacingPortraitEffectsMatteWithPixelBuffer:error:'>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='0' name='pixelBuffer' type64='^{__CVBuffer=}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='portraitEffectsMatteFromDictionaryRepresentation:error:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='imageSourceAuxDataInfoDictionary' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
</class>
<class name='AVQueuePlayer'>
<method selector='advanceToNextItem'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canInsertItem:afterItem:'>
<arg declared_type64='AVPlayerItem * _Nonnull' index='0' name='item' type64='@'/>
<arg declared_type64='AVPlayerItem * _Nullable' index='1' name='afterItem' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='AVQueuePlayer * _Nonnull' type64='@'/>
</method>
<method selector='insertItem:afterItem:'>
<arg declared_type64='AVPlayerItem * _Nonnull' index='0' name='item' type64='@'/>
<arg declared_type64='AVPlayerItem * _Nullable' index='1' name='afterItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='queuePlayerWithItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='removeAllItems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItem:'>
<arg declared_type64='AVPlayerItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVRouteDetector'>
<method selector='isRouteDetectionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='multipleRoutesDetected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setRouteDetectionEnabled:'>
<arg declared_type64='BOOL' index='0' name='routeDetectionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVSampleBufferAudioRenderer'>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='AVAudioTimePitchAlgorithm _Nonnull' type64='@'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='flushFromSourceTime:completionHandler:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isMuted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type64='AVAudioTimePitchAlgorithm _Nonnull' index='0' name='audioTimePitchAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMuted:'>
<arg declared_type64='BOOL' index='0' name='muted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='status'>
<retval declared_type64='AVQueuedSampleBufferRenderingStatus' type64='q'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVSampleBufferDisplayLayer'>
<method selector='controlTimebase'>
<retval declared_type64='CMTimebaseRef _Nullable' type64='^{OpaqueCMTimebase=}'/>
</method>
<method selector='enqueueSampleBuffer:'>
<arg declared_type64='CMSampleBufferRef _Nonnull' index='0' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='flush'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='flushAndRemoveImage'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isReadyForMoreMediaData'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='requestMediaDataWhenReadyOnQueue:usingBlock:'>
<arg declared_type64='dispatch_queue_t _Nonnull' index='0' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlTimebase:'>
<arg declared_type64='CMTimebaseRef _Nullable' index='0' name='controlTimebase' type64='^{OpaqueCMTimebase=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoGravity:'>
<arg declared_type64='AVLayerVideoGravity _Nonnull' index='0' name='videoGravity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='status'>
<retval declared_type64='AVQueuedSampleBufferRenderingStatus' type64='q'/>
</method>
<method selector='stopRequestingMediaData'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoGravity'>
<retval declared_type64='AVLayerVideoGravity _Nonnull' type64='@'/>
</method>
</class>
<class name='AVSampleBufferRenderSynchronizer'>
<method selector='addBoundaryTimeObserverForTimes:queue:usingBlock:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='times' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='2' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='addPeriodicTimeObserverForInterval:queue:usingBlock:'>
<arg declared_type64='CMTime' index='0' name='interval' type64='{_CMTime=qiIq}'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(CMTime)' function_pointer='true' index='2' name='block' type64='@?'>
<arg declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='addRenderer:'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='currentTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='removeRenderer:atTime:completionHandler:'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='CMTime' index='1' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTimeObserver:'>
<arg declared_type64='id _Nonnull' index='0' name='observer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderers'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:time:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<arg declared_type64='CMTime' index='1' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='timebase'>
<retval declared_type64='CMTimebaseRef _Nonnull' type64='^{OpaqueCMTimebase=}'/>
</method>
</class>
<class name='AVSynchronizedLayer'>
<method selector='playerItem'>
<retval declared_type64='AVPlayerItem * _Nullable' type64='@'/>
</method>
<method selector='setPlayerItem:'>
<arg declared_type64='AVPlayerItem * _Nullable' index='0' name='playerItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='synchronizedLayerWithPlayerItem:'>
<arg declared_type64='AVPlayerItem * _Nonnull' index='0' name='playerItem' type64='@'/>
<retval declared_type64='AVSynchronizedLayer * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVTextStyleRule'>
<method selector='initWithTextMarkupAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='textMarkupAttributes' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithTextMarkupAttributes:textSelector:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='textMarkupAttributes' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='textSelector' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='propertyListForTextStyleRules:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='textStyleRules' type64='@'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='textMarkupAttributes'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='textSelector'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='textStyleRuleWithTextMarkupAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='textMarkupAttributes' type64='@'/>
<retval declared_type64='AVTextStyleRule * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='textStyleRuleWithTextMarkupAttributes:textSelector:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='textMarkupAttributes' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='textSelector' type64='@'/>
<retval declared_type64='AVTextStyleRule * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='textStyleRulesFromPropertyList:'>
<arg declared_type64='id _Nonnull' index='0' name='plist' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='AVTimedMetadataGroup'>
<method selector='copyFormatDescription'>
<retval declared_type64='CMMetadataFormatDescriptionRef _Nullable' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='initWithItems:timeRange:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<arg declared_type64='CMTimeRange' index='1' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSampleBuffer:'>
<arg declared_type64='CMSampleBufferRef _Nonnull' index='0' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVURLAsset'>
<method selector='URL'>
<retval declared_type64='NSURL * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='URLAssetWithURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='assetCache'>
<retval declared_type64='AVAssetCache * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='audiovisualMIMETypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='audiovisualTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='compatibleTrackForCompositionTrack:'>
<arg declared_type64='AVCompositionTrack * _Nonnull' index='0' name='compositionTrack' type64='@'/>
<retval declared_type64='AVAssetTrack * _Nullable' type64='@'/>
</method>
<method selector='initWithURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='isPlayableExtendedMIMEType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='extendedMIMEType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mayRequireContentKeysForMediaDataProcessing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resourceLoader'>
<retval declared_type64='AVAssetResourceLoader * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVVideoComposition'>
<method selector='animationTool'>
<retval declared_type64='AVVideoCompositionCoreAnimationTool * _Nullable' type64='@'/>
</method>
<method selector='colorPrimaries'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='colorTransferFunction'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='colorYCbCrMatrix'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='customVideoCompositorClass'>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method selector='frameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='instructions'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='isValidForAsset:timeRange:validationDelegate:'>
<arg declared_type64='AVAsset * _Nullable' index='0' name='asset' type64='@'/>
<arg declared_type64='CMTimeRange' index='1' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='id _Nullable' index='2' name='validationDelegate' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='renderScale'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='renderSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='sourceTrackIDForFrameTiming'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method class_method='true' selector='videoCompositionWithAsset:applyingCIFiltersWithHandler:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(AVAsynchronousCIImageFilteringRequest * _Nonnull)' function_pointer='true' index='1' name='applier' type64='@?'>
<arg declared_type64='AVAsynchronousCIImageFilteringRequest * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='AVVideoComposition * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionWithPropertiesOfAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='AVVideoComposition * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVVideoCompositionCoreAnimationTool'>
<method class_method='true' selector='videoCompositionCoreAnimationToolWithAdditionalLayer:asTrackID:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='CMPersistentTrackID' index='1' name='trackID' type64='i'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:inLayer:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='videoLayer' type64='@'/>
<arg declared_type64='CALayer * _Nonnull' index='1' name='animationLayer' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayers:inLayer:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='videoLayers' type64='@'/>
<arg declared_type64='CALayer * _Nonnull' index='1' name='animationLayer' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVVideoCompositionInstruction'>
<method selector='backgroundColor'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='enablePostProcessing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layerInstructions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='passthroughTrackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method selector='requiredSourceTrackIDs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVVideoCompositionLayerInstruction'>
<method selector='getCropRectangleRampForTime:startCropRectangle:endCropRectangle:timeRange:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CGRect * _Nullable' index='1' name='startCropRectangle' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGRect * _Nullable' index='2' name='endCropRectangle' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CMTimeRange * _Nullable' index='3' name='timeRange' type64='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='getOpacityRampForTime:startOpacity:endOpacity:timeRange:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='float * _Nullable' index='1' name='startOpacity' type64='^f'/>
<arg declared_type64='float * _Nullable' index='2' name='endOpacity' type64='^f'/>
<arg declared_type64='CMTimeRange * _Nullable' index='3' name='timeRange' type64='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='getTransformRampForTime:startTransform:endTransform:timeRange:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CGAffineTransform * _Nullable' index='1' name='startTransform' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type64='CGAffineTransform * _Nullable' index='2' name='endTransform' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type64='CMTimeRange * _Nullable' index='3' name='timeRange' type64='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='trackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
</class>
<class name='AVVideoCompositionRenderContext'>
<method selector='edgeWidths'>
<retval declared_type64='AVEdgeWidths' type64='{_AVEdgeWidths=dddd}'/>
</method>
<method selector='highQualityRendering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='newPixelBuffer'>
<retval declared_type64='CVPixelBufferRef _Nullable' type64='^{__CVBuffer=}'/>
</method>
<method selector='pixelAspectRatio'>
<retval declared_type64='AVPixelAspectRatio' type64='{_AVPixelAspectRatio=qq}'/>
</method>
<method selector='renderScale'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='renderTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='size'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='videoComposition'>
<retval declared_type64='AVVideoComposition * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeCMTimeForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='decodeCMTimeMappingForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CMTimeMapping' type64='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
</method>
<method selector='decodeCMTimeRangeForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='encodeCMTime:forKey:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeCMTimeMapping:forKey:'>
<arg declared_type64='CMTimeMapping' index='0' name='timeMapping' type64='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeCMTimeRange:forKey:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='cancelAllPendingVideoCompositionRequests'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='containsTweening'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contentKeySession:contentKeyRequest:didFailWithError:'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='2' name='err' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySession:contentKeyRequestDidSucceed:'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySession:didProvideContentKeyRequest:'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySession:didProvidePersistableContentKeyRequest:'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVPersistableContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySession:didProvideRenewingContentKeyRequest:'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySession:shouldRetryContentKeyRequest:reason:'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<arg declared_type64='AVContentKeyRequestRetryReason _Nonnull' index='2' name='retryReason' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contentKeySessionContentProtectionSessionIdentifierDidChange:'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySessionDidGenerateExpiredSessionReport:'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enablePostProcessing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='enqueueSampleBuffer:'>
<arg declared_type64='CMSampleBufferRef _Nonnull' index='0' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='flush'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isAssociatedWithFragmentMinder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isReadyForMoreMediaData'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:'>
<arg declared_type64='AVPlayerItemLegibleOutput * _Nonnull' index='0' name='output' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='strings' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='nativeSamples' type64='@'/>
<arg declared_type64='CMTime' index='3' name='itemTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='loadValuesAsynchronouslyForKeys:completionHandler:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='keys' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mayRequireContentKeysForMediaDataProcessing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='metadataCollector:didCollectDateRangeMetadataGroups:indexesOfNewGroups:indexesOfModifiedGroups:'>
<arg declared_type64='AVPlayerItemMetadataCollector * _Nonnull' index='0' name='metadataCollector' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='metadataGroups' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='2' name='indexesOfNewGroups' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='3' name='indexesOfModifiedGroups' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:'>
<arg declared_type64='AVPlayerItemMetadataOutput * _Nonnull' index='0' name='output' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='groups' type64='@'/>
<arg declared_type64='AVPlayerItemTrack * _Nullable' index='2' name='track' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outputMediaDataWillChange:'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outputSequenceWasFlushed:'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='passthroughTrackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method selector='renderContextChanged:'>
<arg declared_type64='AVVideoCompositionRenderContext * _Nonnull' index='0' name='newRenderContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requestMediaDataWhenReadyOnQueue:usingBlock:'>
<arg declared_type64='dispatch_queue_t _Nonnull' index='0' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requiredPixelBufferAttributesForRenderContext'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='requiredSourceTrackIDs'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='resourceLoader:didCancelAuthenticationChallenge:'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='NSURLAuthenticationChallenge * _Nonnull' index='1' name='authenticationChallenge' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resourceLoader:didCancelLoadingRequest:'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceLoadingRequest * _Nonnull' index='1' name='loadingRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resourceLoader:shouldWaitForLoadingOfRequestedResource:'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceLoadingRequest * _Nonnull' index='1' name='loadingRequest' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resourceLoader:shouldWaitForRenewalOfRequestedResource:'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceRenewalRequest * _Nonnull' index='1' name='renewalRequest' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resourceLoader:shouldWaitForResponseToAuthenticationChallenge:'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='NSURLAuthenticationChallenge * _Nonnull' index='1' name='authenticationChallenge' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sourcePixelBufferAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='startVideoCompositionRequest:'>
<arg declared_type64='AVAsynchronousVideoCompositionRequest * _Nonnull' index='0' name='asyncVideoCompositionRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='statusOfValueForKey:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='AVKeyValueStatus' type64='q'/>
</method>
<method selector='stopRequestingMediaData'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supportsWideColorSourceFrames'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='timebase'>
<retval declared_type64='CMTimebaseRef _Nonnull' type64='^{OpaqueCMTimebase=}'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='CMTimeRange' index='1' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='videoCompositionInstruction' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='videoCompositionInstruction' type64='@'/>
<arg declared_type64='AVVideoCompositionLayerInstruction * _Nonnull' index='2' name='layerInstruction' type64='@'/>
<arg declared_type64='AVAsset * _Nonnull' index='3' name='asset' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSValue'>
<method selector='CMTimeMappingValue'>
<retval declared_type64='CMTimeMapping' type64='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
</method>
<method selector='CMTimeRangeValue'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='CMTimeValue'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method class_method='true' selector='valueWithCMTime:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithCMTimeMapping:'>
<arg declared_type64='CMTimeMapping' index='0' name='timeMapping' type64='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithCMTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
</class>
<informal_protocol name='AVAssetResourceLoaderDelegate'>
<method selector='resourceLoader:didCancelAuthenticationChallenge:' type64='v32@0:8@16@24'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='NSURLAuthenticationChallenge * _Nonnull' index='1' name='authenticationChallenge' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resourceLoader:didCancelLoadingRequest:' type64='v32@0:8@16@24'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceLoadingRequest * _Nonnull' index='1' name='loadingRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resourceLoader:shouldWaitForLoadingOfRequestedResource:' type64='B32@0:8@16@24'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceLoadingRequest * _Nonnull' index='1' name='loadingRequest' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resourceLoader:shouldWaitForRenewalOfRequestedResource:' type64='B32@0:8@16@24'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceRenewalRequest * _Nonnull' index='1' name='renewalRequest' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resourceLoader:shouldWaitForResponseToAuthenticationChallenge:' type64='B32@0:8@16@24'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='NSURLAuthenticationChallenge * _Nonnull' index='1' name='authenticationChallenge' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='AVAsynchronousKeyValueLoading'>
<method selector='loadValuesAsynchronouslyForKeys:completionHandler:' type64='v32@0:8@16@?24'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='keys' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='statusOfValueForKey:error:' type64='q32@0:8@16^@24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='AVKeyValueStatus' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='AVContentKeyRecipient'>
<method selector='mayRequireContentKeysForMediaDataProcessing' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='AVContentKeySessionDelegate'>
<method selector='contentKeySession:contentKeyRequest:didFailWithError:' type64='v40@0:8@16@24@32'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='2' name='err' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySession:contentKeyRequestDidSucceed:' type64='v32@0:8@16@24'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySession:didProvideContentKeyRequest:' type64='v32@0:8@16@24'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySession:didProvidePersistableContentKeyRequest:' type64='v32@0:8@16@24'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVPersistableContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySession:didProvideRenewingContentKeyRequest:' type64='v32@0:8@16@24'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySession:shouldRetryContentKeyRequest:reason:' type64='B40@0:8@16@24@32'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='AVContentKeyRequest * _Nonnull' index='1' name='keyRequest' type64='@'/>
<arg declared_type64='AVContentKeyRequestRetryReason _Nonnull' index='2' name='retryReason' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contentKeySessionContentProtectionSessionIdentifierDidChange:' type64='v24@0:8@16'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentKeySessionDidGenerateExpiredSessionReport:' type64='v24@0:8@16'>
<arg declared_type64='AVContentKeySession * _Nonnull' index='0' name='session' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVFragmentMinding'>
<method selector='isAssociatedWithFragmentMinder' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemLegibleOutputPushDelegate'>
<method selector='legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:' type64='v64@0:8@16@24@32{?=qiIq}40'>
<arg declared_type64='AVPlayerItemLegibleOutput * _Nonnull' index='0' name='output' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='strings' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='nativeSamples' type64='@'/>
<arg declared_type64='CMTime' index='3' name='itemTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemMetadataCollectorPushDelegate'>
<method selector='metadataCollector:didCollectDateRangeMetadataGroups:indexesOfNewGroups:indexesOfModifiedGroups:' type64='v48@0:8@16@24@32@40'>
<arg declared_type64='AVPlayerItemMetadataCollector * _Nonnull' index='0' name='metadataCollector' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='metadataGroups' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='2' name='indexesOfNewGroups' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='3' name='indexesOfModifiedGroups' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemMetadataOutputPushDelegate'>
<method selector='metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:' type64='v40@0:8@16@24@32'>
<arg declared_type64='AVPlayerItemMetadataOutput * _Nonnull' index='0' name='output' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='groups' type64='@'/>
<arg declared_type64='AVPlayerItemTrack * _Nullable' index='2' name='track' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemOutputPullDelegate'>
<method selector='outputMediaDataWillChange:' type64='v24@0:8@16'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outputSequenceWasFlushed:' type64='v24@0:8@16'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemOutputPushDelegate'>
<method selector='outputSequenceWasFlushed:' type64='v24@0:8@16'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVQueuedSampleBufferRendering'>
<method selector='enqueueSampleBuffer:' type64='v24@0:8^{opaqueCMSampleBuffer=}16'>
<arg declared_type64='CMSampleBufferRef _Nonnull' index='0' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='flush' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isReadyForMoreMediaData' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='requestMediaDataWhenReadyOnQueue:usingBlock:' type64='v32@0:8@16@?24'>
<arg declared_type64='dispatch_queue_t _Nonnull' index='0' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopRequestingMediaData' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='timebase' type64='^{OpaqueCMTimebase=}16@0:8'>
<retval declared_type64='CMTimebaseRef _Nonnull' type64='^{OpaqueCMTimebase=}'/>
</method>
</informal_protocol>
<informal_protocol name='AVVideoCompositing'>
<method selector='cancelAllPendingVideoCompositionRequests' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderContextChanged:' type64='v24@0:8@16'>
<arg declared_type64='AVVideoCompositionRenderContext * _Nonnull' index='0' name='newRenderContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requiredPixelBufferAttributesForRenderContext' type64='@16@0:8'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='sourcePixelBufferAttributes' type64='@16@0:8'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='startVideoCompositionRequest:' type64='v24@0:8@16'>
<arg declared_type64='AVAsynchronousVideoCompositionRequest * _Nonnull' index='0' name='asyncVideoCompositionRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supportsWideColorSourceFrames' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='AVVideoCompositionInstruction'>
<method selector='containsTweening' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='enablePostProcessing' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='passthroughTrackID' type64='i16@0:8'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method selector='requiredSourceTrackIDs' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='timeRange' type64='{?={?=qiIq}{?=qiIq}}16@0:8'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</informal_protocol>
<informal_protocol name='AVVideoCompositionValidationHandling'>
<method selector='videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:' type64='B72@0:8@16{?={?=qiIq}{?=qiIq}}24'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='CMTimeRange' index='1' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:' type64='B32@0:8@16@24'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='videoCompositionInstruction' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:' type64='B48@0:8@16@24@32@40'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='videoCompositionInstruction' type64='@'/>
<arg declared_type64='AVVideoCompositionLayerInstruction * _Nonnull' index='2' name='layerInstruction' type64='@'/>
<arg declared_type64='AVAsset * _Nonnull' index='3' name='asset' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:' type64='B32@0:8@16@24'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<struct name='AVAudio3DAngularOrientation' type='{AVAudio3DAngularOrientation=&quot;yaw&quot;f&quot;pitch&quot;f&quot;roll&quot;f}'>
<field declared_type='float' name='yaw' type='f'/>
<field declared_type='float' name='pitch' type='f'/>
<field declared_type='float' name='roll' type='f'/>
</struct>
<struct name='AVAudio3DPoint' type='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
</struct>
<struct name='AVAudio3DVector' type='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
</struct>
<struct name='AVAudio3DVectorOrientation' type='{AVAudio3DVectorOrientation=&quot;forward&quot;{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;up&quot;{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}'>
<field declared_type='AVAudio3DVector' name='forward' type='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field declared_type='AVAudio3DVector' name='up' type='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
</struct>
<struct name='AVAudioConverterPrimeInfo' type='{AVAudioConverterPrimeInfo=&quot;leadingFrames&quot;I&quot;trailingFrames&quot;I}'>
<field declared_type='AVAudioFrameCount' name='leadingFrames' type='I'/>
<field declared_type='AVAudioFrameCount' name='trailingFrames' type='I'/>
</struct>
<struct name='AVBeatRange' type='{_AVBeatRange=&quot;start&quot;d&quot;length&quot;d}'>
<field declared_type='AVMusicTimeStamp' name='start' type='d'/>
<field declared_type='AVMusicTimeStamp' name='length' type='d'/>
</struct>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_Constant' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_LongTermAverage' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_Variable' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_VariableConstrained' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioEngineConfigurationChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioFileTypeKey' type='@'/>
<constant const='true' declared_type='AVAudioSessionCategory _Nonnull' name='AVAudioSessionCategoryAmbient' type='@'/>
<constant const='true' declared_type='AVAudioSessionCategory _Nonnull' name='AVAudioSessionCategoryMultiRoute' type='@'/>
<constant const='true' declared_type='AVAudioSessionCategory _Nonnull' name='AVAudioSessionCategoryPlayAndRecord' type='@'/>
<constant const='true' declared_type='AVAudioSessionCategory _Nonnull' name='AVAudioSessionCategoryPlayback' type='@'/>
<constant const='true' declared_type='AVAudioSessionCategory _Nonnull' name='AVAudioSessionCategoryRecord' type='@'/>
<constant const='true' declared_type='AVAudioSessionCategory _Nonnull' name='AVAudioSessionCategorySoloAmbient' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='AVAudioSessionInterruptionNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionInterruptionOptionKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionInterruptionTypeKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionInterruptionWasSuspendedKey' type='@'/>
<constant const='true' declared_type='AVAudioSessionLocation _Nonnull' name='AVAudioSessionLocationLower' type='@'/>
<constant const='true' declared_type='AVAudioSessionLocation _Nonnull' name='AVAudioSessionLocationUpper' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='AVAudioSessionMediaServicesWereLostNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='AVAudioSessionMediaServicesWereResetNotification' type='@'/>
<constant const='true' declared_type='AVAudioSessionMode _Nonnull' name='AVAudioSessionModeDefault' type='@'/>
<constant const='true' declared_type='AVAudioSessionMode _Nonnull' name='AVAudioSessionModeGameChat' type='@'/>
<constant const='true' declared_type='AVAudioSessionMode _Nonnull' name='AVAudioSessionModeMeasurement' type='@'/>
<constant const='true' declared_type='AVAudioSessionMode _Nonnull' name='AVAudioSessionModeMoviePlayback' type='@'/>
<constant const='true' declared_type='AVAudioSessionMode _Nonnull' name='AVAudioSessionModeSpokenAudio' type='@'/>
<constant const='true' declared_type='AVAudioSessionMode _Nonnull' name='AVAudioSessionModeVideoChat' type='@'/>
<constant const='true' declared_type='AVAudioSessionMode _Nonnull' name='AVAudioSessionModeVideoRecording' type='@'/>
<constant const='true' declared_type='AVAudioSessionMode _Nonnull' name='AVAudioSessionModeVoiceChat' type='@'/>
<constant const='true' declared_type='AVAudioSessionMode _Nonnull' name='AVAudioSessionModeVoicePrompt' type='@'/>
<constant const='true' declared_type='AVAudioSessionLocation _Nonnull' name='AVAudioSessionOrientationBack' type='@'/>
<constant const='true' declared_type='AVAudioSessionLocation _Nonnull' name='AVAudioSessionOrientationBottom' type='@'/>
<constant const='true' declared_type='AVAudioSessionLocation _Nonnull' name='AVAudioSessionOrientationFront' type='@'/>
<constant const='true' declared_type='AVAudioSessionLocation _Nonnull' name='AVAudioSessionOrientationLeft' type='@'/>
<constant const='true' declared_type='AVAudioSessionLocation _Nonnull' name='AVAudioSessionOrientationRight' type='@'/>
<constant const='true' declared_type='AVAudioSessionLocation _Nonnull' name='AVAudioSessionOrientationTop' type='@'/>
<constant const='true' declared_type='AVAudioSessionLocation _Nonnull' name='AVAudioSessionPolarPatternCardioid' type='@'/>
<constant const='true' declared_type='AVAudioSessionLocation _Nonnull' name='AVAudioSessionPolarPatternOmnidirectional' type='@'/>
<constant const='true' declared_type='AVAudioSessionLocation _Nonnull' name='AVAudioSessionPolarPatternSubcardioid' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortAirPlay' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortBluetoothA2DP' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortBluetoothHFP' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortBluetoothLE' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortBuiltInMic' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortBuiltInReceiver' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortBuiltInSpeaker' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortCarAudio' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortHDMI' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortHeadphones' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortHeadsetMic' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortLineIn' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortLineOut' type='@'/>
<constant const='true' declared_type='AVAudioSessionPort _Nonnull' name='AVAudioSessionPortUSBAudio' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='AVAudioSessionRouteChangeNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionRouteChangePreviousRouteKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionRouteChangeReasonKey' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='AVAudioSessionSilenceSecondaryAudioHintNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionSilenceSecondaryAudioHintTypeKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitComponentTagsDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitManufacturerNameApple' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeEffect' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeFormatConverter' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeGenerator' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeMIDIProcessor' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeMixer' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeMusicDevice' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeMusicEffect' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeOfflineEffect' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeOutput' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypePanner' type='@'/>
<constant const='true' declared_type='NSString*' name='AVChannelLayoutKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderAudioQualityForVBRKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderAudioQualityKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitDepthHintKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitRateKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitRatePerChannelKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitRateStrategyKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFormatIDKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMBitDepthKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMIsBigEndianKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMIsFloatKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMIsNonInterleaved' type='@'/>
<constant const='true' declared_type='NSString*' name='AVNumberOfChannelsKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAlgorithmKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAlgorithm_Mastering' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAlgorithm_MinimumPhase' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAlgorithm_Normal' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAudioQualityKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVSpeechSynthesisIPANotationAttribute' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVSpeechSynthesisVoiceIdentifierAlex' type='@'/>
<constant const='true' declared_type='float' name='AVSpeechUtteranceDefaultSpeechRate' type='f'/>
<constant const='true' declared_type='float' name='AVSpeechUtteranceMaximumSpeechRate' type='f'/>
<constant const='true' declared_type='float' name='AVSpeechUtteranceMinimumSpeechRate' type='f'/>
<enum name='AVAUDIOENGINE_HAVE_AUAUDIOUNIT' value='1'/>
<enum name='AVAUDIOENGINE_HAVE_MUSICPLAYER' value='1'/>
<enum name='AVAUDIOFORMAT_HAVE_CMFORMATDESCRIPTION' value='1'/>
<enum name='AVAUDIOIONODE_HAVE_AUDIOUNIT' value='1'/>
<enum name='AVAUDIONODE_HAVE_AUAUDIOUNIT' value='1'/>
<enum name='AVAUDIOUNITCOMPONENT_HAVE_AUDIOCOMPONENT' value='1'/>
<enum name='AVAUDIOUNIT_HAVE_AUDIOUNIT' value='1'/>
<enum name='AVAudio3DMixingRenderingAlgorithmEqualPowerPanning' value='0'/>
<enum name='AVAudio3DMixingRenderingAlgorithmHRTF' value='2'/>
<enum name='AVAudio3DMixingRenderingAlgorithmHRTFHQ' value='6'/>
<enum name='AVAudio3DMixingRenderingAlgorithmSoundField' value='3'/>
<enum name='AVAudio3DMixingRenderingAlgorithmSphericalHead' value='1'/>
<enum name='AVAudio3DMixingRenderingAlgorithmStereoPassThrough' value='5'/>
<enum name='AVAudioConverterInputStatus_EndOfStream' value='2'/>
<enum name='AVAudioConverterInputStatus_HaveData' value='0'/>
<enum name='AVAudioConverterInputStatus_NoDataNow' value='1'/>
<enum name='AVAudioConverterOutputStatus_EndOfStream' value='2'/>
<enum name='AVAudioConverterOutputStatus_Error' value='3'/>
<enum name='AVAudioConverterOutputStatus_HaveData' value='0'/>
<enum name='AVAudioConverterOutputStatus_InputRanDry' value='1'/>
<enum name='AVAudioConverterPrimeMethod_None' value='2'/>
<enum name='AVAudioConverterPrimeMethod_Normal' value='1'/>
<enum name='AVAudioConverterPrimeMethod_Pre' value='0'/>
<enum name='AVAudioEngineManualRenderingErrorInitialized' value='-80801'/>
<enum name='AVAudioEngineManualRenderingErrorInvalidMode' value='-80800'/>
<enum name='AVAudioEngineManualRenderingErrorNotRunning' value='-80802'/>
<enum name='AVAudioEngineManualRenderingModeOffline' value='0'/>
<enum name='AVAudioEngineManualRenderingModeRealtime' value='1'/>
<enum name='AVAudioEngineManualRenderingStatusCannotDoInCurrentContext' value='2'/>
<enum name='AVAudioEngineManualRenderingStatusError' value='-1'/>
<enum name='AVAudioEngineManualRenderingStatusInsufficientDataFromInputNode' value='1'/>
<enum name='AVAudioEngineManualRenderingStatusSuccess' value='0'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelExponential' value='1'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelInverse' value='2'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelLinear' value='3'/>
<enum name='AVAudioOtherFormat' value='0'/>
<enum name='AVAudioPCMFormatFloat32' value='1'/>
<enum name='AVAudioPCMFormatFloat64' value='2'/>
<enum name='AVAudioPCMFormatInt16' value='3'/>
<enum name='AVAudioPCMFormatInt32' value='4'/>
<enum name='AVAudioPlayerNodeBufferInterrupts' value='2'/>
<enum name='AVAudioPlayerNodeBufferInterruptsAtLoop' value='4'/>
<enum name='AVAudioPlayerNodeBufferLoops' value='1'/>
<enum name='AVAudioPlayerNodeCompletionDataConsumed' value='0'/>
<enum name='AVAudioPlayerNodeCompletionDataPlayedBack' value='2'/>
<enum name='AVAudioPlayerNodeCompletionDataRendered' value='1'/>
<enum name='AVAudioQualityHigh' value='96'/>
<enum name='AVAudioQualityLow' value='32'/>
<enum name='AVAudioQualityMax' value='127'/>
<enum name='AVAudioQualityMedium' value='64'/>
<enum name='AVAudioQualityMin' value='0'/>
<enum name='AVAudioSessionActivationOptionNone' value='0'/>
<enum name='AVAudioSessionCategoryOptionAllowAirPlay' value='64'/>
<enum name='AVAudioSessionCategoryOptionAllowBluetooth' value='4'/>
<enum name='AVAudioSessionCategoryOptionAllowBluetoothA2DP' value='32'/>
<enum name='AVAudioSessionCategoryOptionDefaultToSpeaker' value='8'/>
<enum name='AVAudioSessionCategoryOptionDuckOthers' value='2'/>
<enum name='AVAudioSessionCategoryOptionInterruptSpokenAudioAndMixWithOthers' value='17'/>
<enum name='AVAudioSessionCategoryOptionMixWithOthers' value='1'/>
<enum name='AVAudioSessionErrorCodeBadParam' value='-50'/>
<enum name='AVAudioSessionErrorCodeCannotInterruptOthers' value='560557684'/>
<enum name='AVAudioSessionErrorCodeCannotStartPlaying' value='561015905'/>
<enum name='AVAudioSessionErrorCodeCannotStartRecording' value='561145187'/>
<enum name='AVAudioSessionErrorCodeIncompatibleCategory' value='560161140'/>
<enum name='AVAudioSessionErrorCodeInsufficientPriority' value='561017449'/>
<enum name='AVAudioSessionErrorCodeIsBusy' value='560030580'/>
<enum name='AVAudioSessionErrorCodeMediaServicesFailed' value='1836282486'/>
<enum name='AVAudioSessionErrorCodeMissingEntitlement' value='1701737535'/>
<enum name='AVAudioSessionErrorCodeNone' value='0'/>
<enum name='AVAudioSessionErrorCodeResourceNotAvailable' value='561145203'/>
<enum name='AVAudioSessionErrorCodeSiriIsRecording' value='1936290409'/>
<enum name='AVAudioSessionErrorCodeUnspecified' value='2003329396'/>
<enum name='AVAudioSessionErrorInsufficientPriority' value='561017449'/>
<enum name='AVAudioSessionIOTypeAggregated' value='1'/>
<enum name='AVAudioSessionIOTypeNotSpecified' value='0'/>
<enum name='AVAudioSessionInterruptionFlags_ShouldResume' value='1'/>
<enum name='AVAudioSessionInterruptionOptionShouldResume' value='1'/>
<enum name='AVAudioSessionInterruptionTypeBegan' value='1'/>
<enum name='AVAudioSessionInterruptionTypeEnded' value='0'/>
<enum name='AVAudioSessionPortOverrideNone' value='0'/>
<enum name='AVAudioSessionPortOverrideSpeaker' value='1936747378'/>
<enum name='AVAudioSessionRecordPermissionDenied' value='1684369017'/>
<enum name='AVAudioSessionRecordPermissionGranted' value='1735552628'/>
<enum name='AVAudioSessionRecordPermissionUndetermined' value='1970168948'/>
<enum name='AVAudioSessionRouteChangeReasonCategoryChange' value='3'/>
<enum name='AVAudioSessionRouteChangeReasonNewDeviceAvailable' value='1'/>
<enum name='AVAudioSessionRouteChangeReasonNoSuitableRouteForCategory' value='7'/>
<enum name='AVAudioSessionRouteChangeReasonOldDeviceUnavailable' value='2'/>
<enum name='AVAudioSessionRouteChangeReasonOverride' value='4'/>
<enum name='AVAudioSessionRouteChangeReasonRouteConfigurationChange' value='8'/>
<enum name='AVAudioSessionRouteChangeReasonUnknown' value='0'/>
<enum name='AVAudioSessionRouteChangeReasonWakeFromSleep' value='6'/>
<enum name='AVAudioSessionRouteSharingPolicyDefault' value='0'/>
<enum name='AVAudioSessionRouteSharingPolicyIndependent' value='2'/>
<enum name='AVAudioSessionRouteSharingPolicyLongForm' value='1'/>
<enum name='AVAudioSessionSetActiveFlags_NotifyOthersOnDeactivation' value='1'/>
<enum name='AVAudioSessionSetActiveOptionNotifyOthersOnDeactivation' value='1'/>
<enum name='AVAudioSessionSilenceSecondaryAudioHintTypeBegin' value='1'/>
<enum name='AVAudioSessionSilenceSecondaryAudioHintTypeEnd' value='0'/>
<enum name='AVAudioUnitDistortionPresetDrumsBitBrush' value='0'/>
<enum name='AVAudioUnitDistortionPresetDrumsBufferBeats' value='1'/>
<enum name='AVAudioUnitDistortionPresetDrumsLoFi' value='2'/>
<enum name='AVAudioUnitDistortionPresetMultiBrokenSpeaker' value='3'/>
<enum name='AVAudioUnitDistortionPresetMultiCellphoneConcert' value='4'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated1' value='5'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated2' value='6'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated3' value='7'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated4' value='8'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedCubed' value='10'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedFunk' value='9'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedSquared' value='11'/>
<enum name='AVAudioUnitDistortionPresetMultiEcho1' value='12'/>
<enum name='AVAudioUnitDistortionPresetMultiEcho2' value='13'/>
<enum name='AVAudioUnitDistortionPresetMultiEchoTight1' value='14'/>
<enum name='AVAudioUnitDistortionPresetMultiEchoTight2' value='15'/>
<enum name='AVAudioUnitDistortionPresetMultiEverythingIsBroken' value='16'/>
<enum name='AVAudioUnitDistortionPresetSpeechAlienChatter' value='17'/>
<enum name='AVAudioUnitDistortionPresetSpeechCosmicInterference' value='18'/>
<enum name='AVAudioUnitDistortionPresetSpeechGoldenPi' value='19'/>
<enum name='AVAudioUnitDistortionPresetSpeechRadioTower' value='20'/>
<enum name='AVAudioUnitDistortionPresetSpeechWaves' value='21'/>
<enum name='AVAudioUnitEQFilterTypeBandPass' value='5'/>
<enum name='AVAudioUnitEQFilterTypeBandStop' value='6'/>
<enum name='AVAudioUnitEQFilterTypeHighPass' value='2'/>
<enum name='AVAudioUnitEQFilterTypeHighShelf' value='8'/>
<enum name='AVAudioUnitEQFilterTypeLowPass' value='1'/>
<enum name='AVAudioUnitEQFilterTypeLowShelf' value='7'/>
<enum name='AVAudioUnitEQFilterTypeParametric' value='0'/>
<enum name='AVAudioUnitEQFilterTypeResonantHighPass' value='4'/>
<enum name='AVAudioUnitEQFilterTypeResonantHighShelf' value='10'/>
<enum name='AVAudioUnitEQFilterTypeResonantLowPass' value='3'/>
<enum name='AVAudioUnitEQFilterTypeResonantLowShelf' value='9'/>
<enum name='AVAudioUnitReverbPresetCathedral' value='8'/>
<enum name='AVAudioUnitReverbPresetLargeChamber' value='7'/>
<enum name='AVAudioUnitReverbPresetLargeHall' value='4'/>
<enum name='AVAudioUnitReverbPresetLargeHall2' value='12'/>
<enum name='AVAudioUnitReverbPresetLargeRoom' value='2'/>
<enum name='AVAudioUnitReverbPresetLargeRoom2' value='9'/>
<enum name='AVAudioUnitReverbPresetMediumChamber' value='6'/>
<enum name='AVAudioUnitReverbPresetMediumHall' value='3'/>
<enum name='AVAudioUnitReverbPresetMediumHall2' value='10'/>
<enum name='AVAudioUnitReverbPresetMediumHall3' value='11'/>
<enum name='AVAudioUnitReverbPresetMediumRoom' value='1'/>
<enum name='AVAudioUnitReverbPresetPlate' value='5'/>
<enum name='AVAudioUnitReverbPresetSmallRoom' value='0'/>
<enum name='AVMusicSequenceLoadSMF_ChannelsToTracks' value='1'/>
<enum name='AVMusicSequenceLoadSMF_PreserveTracks' value='0'/>
<enum name='AVMusicTrackLoopCountForever' value='-1'/>
<enum name='AVSpeechBoundaryImmediate' value='0'/>
<enum name='AVSpeechBoundaryWord' value='1'/>
<enum name='AVSpeechSynthesisVoiceQualityDefault' value='1'/>
<enum name='AVSpeechSynthesisVoiceQualityEnhanced' value='2'/>
<function inline='true' name='AVAudioMake3DAngularOrientation'>
<arg declared_type='float' name='yaw' type='f'/>
<arg declared_type='float' name='pitch' type='f'/>
<arg declared_type='float' name='roll' type='f'/>
<retval declared_type='AVAudio3DAngularOrientation' type='{AVAudio3DAngularOrientation=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DPoint'>
<arg declared_type='float' name='x' type='f'/>
<arg declared_type='float' name='y' type='f'/>
<arg declared_type='float' name='z' type='f'/>
<retval declared_type='AVAudio3DPoint' type='{AVAudio3DPoint=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DVector'>
<arg declared_type='float' name='x' type='f'/>
<arg declared_type='float' name='y' type='f'/>
<arg declared_type='float' name='z' type='f'/>
<retval declared_type='AVAudio3DVector' type='{AVAudio3DPoint=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DVectorOrientation'>
<arg declared_type='AVAudio3DVector' name='forward' type='{AVAudio3DPoint=fff}'/>
<arg declared_type='AVAudio3DVector' name='up' type='{AVAudio3DPoint=fff}'/>
<retval declared_type='AVAudio3DVectorOrientation' type='{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}'/>
</function>
<function inline='true' name='AVMakeBeatRange'>
<arg declared_type='AVMusicTimeStamp' name='startBeat' type='d'/>
<arg declared_type='AVMusicTimeStamp' name='lengthInBeats' type='d'/>
<retval declared_type='AVBeatRange' type='{_AVBeatRange=dd}'/>
</function>
<class name='AVAudioBuffer'>
<method selector='audioBufferList'>
<retval const='true' declared_type='AudioBufferList * _Nonnull' type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
</method>
<method selector='format'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='mutableAudioBufferList'>
<retval declared_type='AudioBufferList * _Nonnull' type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
</method>
</class>
<class name='AVAudioChannelLayout'>
<method selector='channelCount'>
<retval declared_type='AVAudioChannelCount' type='I'/>
</method>
<method selector='initWithLayout:'>
<arg const='true' declared_type='AudioChannelLayout * _Nonnull' index='0' name='layout' type='^{AudioChannelLayout=ILI[1{AudioChannelDescription=IL[3f]}]}' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithLayoutTag:'>
<arg declared_type='AudioChannelLayoutTag' index='0' name='layoutTag' type='L' type64='I'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isEqual:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layout'>
<retval const='true' declared_type='AudioChannelLayout * _Nonnull' type='^{AudioChannelLayout=ILI[1{AudioChannelDescription=IL[3f]}]}' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
</method>
<method selector='layoutTag'>
<retval declared_type='AudioChannelLayoutTag' type='L' type64='I'/>
</method>
<method class_method='true' selector='layoutWithLayout:'>
<arg const='true' declared_type='AudioChannelLayout * _Nonnull' index='0' name='layout' type='^{AudioChannelLayout=ILI[1{AudioChannelDescription=IL[3f]}]}' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='layoutWithLayoutTag:'>
<arg declared_type='AudioChannelLayoutTag' index='0' name='layoutTag' type='L' type64='I'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioCompressedBuffer'>
<method selector='byteCapacity'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='byteLength'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='data'>
<retval declared_type='void * _Nonnull' type='^v'/>
</method>
<method selector='initWithFormat:packetCapacity:'>
<arg declared_type='AVAudioFormat * _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='AVAudioPacketCount' index='1' name='packetCapacity' type='I'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithFormat:packetCapacity:maximumPacketSize:'>
<arg declared_type='AVAudioFormat * _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='AVAudioPacketCount' index='1' name='packetCapacity' type='I'/>
<arg declared_type='NSInteger' index='2' name='maximumPacketSize' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maximumPacketSize'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='packetCapacity'>
<retval declared_type='AVAudioPacketCount' type='I'/>
</method>
<method selector='packetCount'>
<retval declared_type='AVAudioPacketCount' type='I'/>
</method>
<method selector='packetDescriptions'>
<retval declared_type='AudioStreamPacketDescription * _Nullable' type='^{AudioStreamPacketDescription=qII}'/>
</method>
<method selector='setByteLength:'>
<arg declared_type='uint32_t' index='0' name='byteLength' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPacketCount:'>
<arg declared_type='AVAudioPacketCount' index='0' name='packetCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioConnectionPoint'>
<method selector='bus'>
<retval declared_type='AVAudioNodeBus' type='I' type64='Q'/>
</method>
<method selector='initWithNode:bus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='node'>
<retval declared_type='AVAudioNode * _Nullable' type='@'/>
</method>
</class>
<class name='AVAudioConverter'>
<method selector='applicableEncodeBitRates'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='applicableEncodeSampleRates'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='availableEncodeBitRates'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='availableEncodeChannelLayoutTags'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='availableEncodeSampleRates'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='bitRate'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='bitRateStrategy'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='channelMap'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='convertToBuffer:error:withInputFromBlock:'>
<arg declared_type='AVAudioBuffer * _Nonnull' index='0' name='outputBuffer' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<arg declared_type='AVAudioConverterInputBlock _Nonnull' function_pointer='true' index='2' name='inputBlock' type='@?'>
<arg declared_type='AVAudioPacketCount' type='I'/>
<arg declared_type='AVAudioConverterInputStatus * _Nonnull' type='^i' type64='^q'/>
<retval declared_type='AVAudioBuffer * _Nullable' type='@'/>
</arg>
<retval declared_type='AVAudioConverterOutputStatus' type='i' type64='q'/>
</method>
<method selector='convertToBuffer:fromBuffer:error:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='outputBuffer' type='@'/>
<arg const='true' declared_type='AVAudioPCMBuffer * _Nonnull' index='1' name='inputBuffer' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dither'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='downmix'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initFromFormat:toFormat:'>
<arg declared_type='AVAudioFormat * _Nonnull' index='0' name='fromFormat' type='@'/>
<arg declared_type='AVAudioFormat * _Nonnull' index='1' name='toFormat' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='inputFormat'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='magicCookie'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='maximumOutputPacketSize'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='outputFormat'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='primeInfo'>
<retval declared_type='AVAudioConverterPrimeInfo' type='{AVAudioConverterPrimeInfo=II}'/>
</method>
<method selector='primeMethod'>
<retval declared_type='AVAudioConverterPrimeMethod' type='i' type64='q'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sampleRateConverterAlgorithm'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='sampleRateConverterQuality'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setBitRate:'>
<arg declared_type='NSInteger' index='0' name='bitRate' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBitRateStrategy:'>
<arg declared_type='NSString * _Nullable' index='0' name='bitRateStrategy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChannelMap:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='channelMap' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDither:'>
<arg declared_type='BOOL' index='0' name='dither' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownmix:'>
<arg declared_type='BOOL' index='0' name='downmix' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMagicCookie:'>
<arg declared_type='NSData * _Nullable' index='0' name='magicCookie' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrimeInfo:'>
<arg declared_type='AVAudioConverterPrimeInfo' index='0' name='primeInfo' type='{AVAudioConverterPrimeInfo=II}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrimeMethod:'>
<arg declared_type='AVAudioConverterPrimeMethod' index='0' name='primeMethod' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSampleRateConverterAlgorithm:'>
<arg declared_type='NSString * _Nullable' index='0' name='sampleRateConverterAlgorithm' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSampleRateConverterQuality:'>
<arg declared_type='NSInteger' index='0' name='sampleRateConverterQuality' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioEngine'>
<method selector='attachNode:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connect:to:format:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node1' type='@'/>
<arg declared_type='AVAudioNode * _Nonnull' index='1' name='node2' type='@'/>
<arg declared_type='AVAudioFormat * _Nullable' index='2' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connect:to:fromBus:toBus:format:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node1' type='@'/>
<arg declared_type='AVAudioNode * _Nonnull' index='1' name='node2' type='@'/>
<arg declared_type='AVAudioNodeBus' index='2' name='bus1' type='I' type64='Q'/>
<arg declared_type='AVAudioNodeBus' index='3' name='bus2' type='I' type64='Q'/>
<arg declared_type='AVAudioFormat * _Nullable' index='4' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connect:toConnectionPoints:fromBus:format:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='sourceNode' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='destNodes' type='@'/>
<arg declared_type='AVAudioNodeBus' index='2' name='sourceBus' type='I' type64='Q'/>
<arg declared_type='AVAudioFormat * _Nullable' index='3' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectMIDI:to:format:block:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='sourceNode' type='@'/>
<arg declared_type='AVAudioNode * _Nonnull' index='1' name='destinationNode' type='@'/>
<arg declared_type='AVAudioFormat * _Nullable' index='2' name='format' type='@'/>
<arg declared_type='AUMIDIOutputEventBlock _Nullable' function_pointer='true' index='3' name='tapBlock' type='@?'>
<arg declared_type='AUEventSampleTime' type='q'/>
<arg declared_type='uint8_t' type='C'/>
<arg declared_type='NSInteger' type='i' type64='q'/>
<arg const='true' declared_type='uint8_t * _Nonnull' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectMIDI:toNodes:format:block:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='sourceNode' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='destinationNodes' type='@'/>
<arg declared_type='AVAudioFormat * _Nullable' index='2' name='format' type='@'/>
<arg declared_type='AUMIDIOutputEventBlock _Nullable' function_pointer='true' index='3' name='tapBlock' type='@?'>
<arg declared_type='AUEventSampleTime' type='q'/>
<arg declared_type='uint8_t' type='C'/>
<arg declared_type='NSInteger' type='i' type64='q'/>
<arg const='true' declared_type='uint8_t * _Nonnull' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='detachNode:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disableManualRenderingMode'>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectMIDI:from:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='sourceNode' type='@'/>
<arg declared_type='AVAudioNode * _Nonnull' index='1' name='destinationNode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectMIDI:fromNodes:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='sourceNode' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='destinationNodes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectMIDIInput:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectMIDIOutput:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectNodeInput:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectNodeInput:bus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectNodeOutput:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectNodeOutput:bus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableManualRenderingMode:format:maximumFrameCount:error:'>
<arg declared_type='AVAudioEngineManualRenderingMode' index='0' name='mode' type='i' type64='q'/>
<arg declared_type='AVAudioFormat * _Nonnull' index='1' name='pcmFormat' type='@'/>
<arg declared_type='AVAudioFrameCount' index='2' name='maximumFrameCount' type='I'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='inputConnectionPointForNode:inputBus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I' type64='Q'/>
<retval declared_type='AVAudioConnectionPoint * _Nullable' type='@'/>
</method>
<method selector='inputNode'>
<retval declared_type='AVAudioInputNode * _Nonnull' type='@'/>
</method>
<method selector='isAutoShutdownEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInManualRenderingMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mainMixerNode'>
<retval declared_type='AVAudioMixerNode * _Nonnull' type='@'/>
</method>
<method selector='manualRenderingBlock'>
<retval declared_type='AVAudioEngineManualRenderingBlock _Nonnull' function_pointer='true' type='@?'>
<arg declared_type='AVAudioFrameCount' type='I'/>
<arg declared_type='AudioBufferList * _Nonnull' type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<arg declared_type='OSStatus * _Nullable' type='^i'/>
<retval declared_type='AVAudioEngineManualRenderingStatus' type='i' type64='q'/>
</retval>
</method>
<method selector='manualRenderingFormat'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='manualRenderingMaximumFrameCount'>
<retval declared_type='AVAudioFrameCount' type='I'/>
</method>
<method selector='manualRenderingMode'>
<retval declared_type='AVAudioEngineManualRenderingMode' type='i' type64='q'/>
</method>
<method selector='manualRenderingSampleTime'>
<retval declared_type='AVAudioFramePosition' type='q'/>
</method>
<method selector='musicSequence'>
<retval declared_type='MusicSequence _Nullable' type='^{OpaqueMusicSequence=}'/>
</method>
<method selector='outputConnectionPointsForNode:outputBus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='outputNode'>
<retval declared_type='AVAudioOutputNode * _Nonnull' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepare'>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderOffline:toBuffer:error:'>
<arg declared_type='AVAudioFrameCount' index='0' name='numberOfFrames' type='I'/>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='1' name='buffer' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='AVAudioEngineManualRenderingStatus' type='i' type64='q'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoShutdownEnabled:'>
<arg declared_type='BOOL' index='0' name='autoShutdownEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMusicSequence:'>
<arg declared_type='MusicSequence _Nullable' index='0' name='musicSequence' type='^{OpaqueMusicSequence=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAndReturnError:'>
<arg declared_type='NSError * _Nullable * _Nullable' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioEnvironmentDistanceAttenuationParameters'>
<method selector='distanceAttenuationModel'>
<retval declared_type='AVAudioEnvironmentDistanceAttenuationModel' type='i' type64='q'/>
</method>
<method selector='maximumDistance'>
<retval declared_type='float' type='f'/>
</method>
<method selector='referenceDistance'>
<retval declared_type='float' type='f'/>
</method>
<method selector='rolloffFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setDistanceAttenuationModel:'>
<arg declared_type='AVAudioEnvironmentDistanceAttenuationModel' index='0' name='distanceAttenuationModel' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumDistance:'>
<arg declared_type='float' index='0' name='maximumDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReferenceDistance:'>
<arg declared_type='float' index='0' name='referenceDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRolloffFactor:'>
<arg declared_type='float' index='0' name='rolloffFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioEnvironmentNode'>
<method selector='applicableRenderingAlgorithms'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='distanceAttenuationParameters'>
<retval declared_type='AVAudioEnvironmentDistanceAttenuationParameters * _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='listenerAngularOrientation'>
<retval declared_type='AVAudio3DAngularOrientation' type='{AVAudio3DAngularOrientation=fff}'/>
</method>
<method selector='listenerPosition'>
<retval declared_type='AVAudio3DPoint' type='{AVAudio3DPoint=fff}'/>
</method>
<method selector='listenerVectorOrientation'>
<retval declared_type='AVAudio3DVectorOrientation' type='{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}'/>
</method>
<method selector='nextAvailableInputBus'>
<retval declared_type='AVAudioNodeBus' type='I' type64='Q'/>
</method>
<method selector='outputVolume'>
<retval declared_type='float' type='f'/>
</method>
<method selector='reverbParameters'>
<retval declared_type='AVAudioEnvironmentReverbParameters * _Nonnull' type='@'/>
</method>
<method selector='setListenerAngularOrientation:'>
<arg declared_type='AVAudio3DAngularOrientation' index='0' name='listenerAngularOrientation' type='{AVAudio3DAngularOrientation=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setListenerPosition:'>
<arg declared_type='AVAudio3DPoint' index='0' name='listenerPosition' type='{AVAudio3DPoint=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setListenerVectorOrientation:'>
<arg declared_type='AVAudio3DVectorOrientation' index='0' name='listenerVectorOrientation' type='{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputVolume:'>
<arg declared_type='float' index='0' name='outputVolume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioEnvironmentReverbParameters'>
<method selector='enable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='filterParameters'>
<retval declared_type='AVAudioUnitEQFilterParameters * _Nonnull' type='@'/>
</method>
<method selector='level'>
<retval declared_type='float' type='f'/>
</method>
<method selector='loadFactoryReverbPreset:'>
<arg declared_type='AVAudioUnitReverbPreset' index='0' name='preset' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnable:'>
<arg declared_type='BOOL' index='0' name='enable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLevel:'>
<arg declared_type='float' index='0' name='level' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioFile'>
<method selector='fileFormat'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='framePosition'>
<retval declared_type='AVAudioFramePosition' type='q'/>
</method>
<method selector='initForReading:commonFormat:interleaved:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='fileURL' type='@'/>
<arg declared_type='AVAudioCommonFormat' index='1' name='format' type='I' type64='Q'/>
<arg declared_type='BOOL' index='2' name='interleaved' type='B'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initForReading:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='fileURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initForWriting:settings:commonFormat:interleaved:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='fileURL' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='settings' type='@'/>
<arg declared_type='AVAudioCommonFormat' index='2' name='format' type='I' type64='Q'/>
<arg declared_type='BOOL' index='3' name='interleaved' type='B'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initForWriting:settings:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='fileURL' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='settings' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='length'>
<retval declared_type='AVAudioFramePosition' type='q'/>
</method>
<method selector='processingFormat'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='readIntoBuffer:error:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readIntoBuffer:frameCount:error:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='AVAudioFrameCount' index='1' name='frames' type='I'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setFramePosition:'>
<arg declared_type='AVAudioFramePosition' index='0' name='framePosition' type='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL * _Nonnull' type='@'/>
</method>
<method selector='writeFromBuffer:error:'>
<arg const='true' declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AVAudioFormat'>
<method selector='channelCount'>
<retval declared_type='AVAudioChannelCount' type='I'/>
</method>
<method selector='channelLayout'>
<retval declared_type='AVAudioChannelLayout * _Nullable' type='@'/>
</method>
<method selector='commonFormat'>
<retval declared_type='AVAudioCommonFormat' type='I' type64='Q'/>
</method>
<method selector='formatDescription'>
<retval declared_type='CMAudioFormatDescriptionRef _Nonnull' type='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='initStandardFormatWithSampleRate:channelLayout:'>
<arg declared_type='double' index='0' name='sampleRate' type='d'/>
<arg declared_type='AVAudioChannelLayout * _Nonnull' index='1' name='layout' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initStandardFormatWithSampleRate:channels:'>
<arg declared_type='double' index='0' name='sampleRate' type='d'/>
<arg declared_type='AVAudioChannelCount' index='1' name='channels' type='I'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithCMAudioFormatDescription:'>
<arg declared_type='CMAudioFormatDescriptionRef _Nonnull' index='0' name='formatDescription' type='^{opaqueCMFormatDescription=}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCommonFormat:sampleRate:channels:interleaved:'>
<arg declared_type='AVAudioCommonFormat' index='0' name='format' type='I' type64='Q'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<arg declared_type='AVAudioChannelCount' index='2' name='channels' type='I'/>
<arg declared_type='BOOL' index='3' name='interleaved' type='B'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithCommonFormat:sampleRate:interleaved:channelLayout:'>
<arg declared_type='AVAudioCommonFormat' index='0' name='format' type='I' type64='Q'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<arg declared_type='BOOL' index='2' name='interleaved' type='B'/>
<arg declared_type='AVAudioChannelLayout * _Nonnull' index='3' name='layout' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSettings:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='settings' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithStreamDescription:'>
<arg const='true' declared_type='AudioStreamBasicDescription * _Nonnull' index='0' name='asbd' type='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithStreamDescription:channelLayout:'>
<arg const='true' declared_type='AudioStreamBasicDescription * _Nonnull' index='0' name='asbd' type='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type='AVAudioChannelLayout * _Nullable' index='1' name='layout' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isEqual:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInterleaved'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isStandard'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='magicCookie'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='sampleRate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='setMagicCookie:'>
<arg declared_type='NSData * _Nullable' index='0' name='magicCookie' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='settings'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='streamDescription'>
<retval const='true' declared_type='AudioStreamBasicDescription * _Nonnull' type='^{AudioStreamBasicDescription=dIIIIIIII}'/>
</method>
</class>
<class name='AVAudioIONode'>
<method selector='audioUnit'>
<retval declared_type='AudioUnit _Nullable' type='^{OpaqueAudioComponentInstance=}'/>
</method>
<method selector='presentationLatency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
</class>
<class name='AVAudioInputNode'>
<method selector='setManualRenderingInputPCMFormat:inputBlock:'>
<arg declared_type='AVAudioFormat * _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='AVAudioIONodeInputBlock _Nonnull' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='AVAudioFrameCount' type='I'/>
<retval const='true' declared_type='AudioBufferList * _Nullable' type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AVAudioMixerNode'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='nextAvailableInputBus'>
<retval declared_type='AVAudioNodeBus' type='I' type64='Q'/>
</method>
<method selector='outputVolume'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setOutputVolume:'>
<arg declared_type='float' index='0' name='outputVolume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioMixingDestination'>
<method selector='connectionPoint'>
<retval declared_type='AVAudioConnectionPoint * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioNode'>
<method selector='AUAudioUnit'>
<retval declared_type='AUAudioUnit * _Nonnull' type='@'/>
</method>
<method selector='engine'>
<retval declared_type='AVAudioEngine * _Nullable' type='@'/>
</method>
<method selector='inputFormatForBus:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I' type64='Q'/>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='installTapOnBus:bufferSize:format:block:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I' type64='Q'/>
<arg declared_type='AVAudioFrameCount' index='1' name='bufferSize' type='I'/>
<arg declared_type='AVAudioFormat * _Nullable' index='2' name='format' type='@'/>
<arg declared_type='AVAudioNodeTapBlock _Nonnull' function_pointer='true' index='3' name='tapBlock' type='@?'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' type='@'/>
<arg declared_type='AVAudioTime * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='lastRenderTime'>
<retval declared_type='AVAudioTime * _Nullable' type='@'/>
</method>
<method selector='latency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='nameForInputBus:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I' type64='Q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='nameForOutputBus:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I' type64='Q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='numberOfInputs'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfOutputs'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='outputFormatForBus:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I' type64='Q'/>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='outputPresentationLatency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='removeTapOnBus:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioPCMBuffer'>
<method selector='floatChannelData'>
<retval const='true' declared_type='float * _Nonnull * _Nullable' type='^^f'/>
</method>
<method selector='frameCapacity'>
<retval declared_type='AVAudioFrameCount' type='I'/>
</method>
<method selector='frameLength'>
<retval declared_type='AVAudioFrameCount' type='I'/>
</method>
<method selector='initWithPCMFormat:frameCapacity:'>
<arg declared_type='AVAudioFormat * _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='AVAudioFrameCount' index='1' name='frameCapacity' type='I'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='int16ChannelData'>
<retval const='true' declared_type='int16_t * _Nonnull * _Nullable' type='^^s'/>
</method>
<method selector='int32ChannelData'>
<retval const='true' declared_type='int32_t * _Nonnull * _Nullable' type='^^i'/>
</method>
<method selector='setFrameLength:'>
<arg declared_type='AVAudioFrameCount' index='0' name='frameLength' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stride'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='AVAudioPlayer'>
<method selector='averagePowerForChannel:'>
<arg declared_type='NSUInteger' index='0' name='channelNumber' type='I' type64='Q'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='channelAssignments'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='currentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='data'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deviceCurrentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='enableRate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='format'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithContentsOfURL:fileTypeHint:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='utiString' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:fileTypeHint:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='utiString' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isMeteringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='numberOfChannels'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfLoops'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='pan'>
<retval declared_type='float' type='f'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='peakPowerForChannel:'>
<arg declared_type='NSUInteger' index='0' name='channelNumber' type='I' type64='Q'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='play'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='playAtTime:'>
<arg declared_type='NSTimeInterval' index='0' name='time' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setChannelAssignments:'>
<arg declared_type='NSArray * _Nullable' index='0' name='channelAssignments' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentTime:'>
<arg declared_type='NSTimeInterval' index='0' name='currentTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableRate:'>
<arg declared_type='BOOL' index='0' name='enableRate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMeteringEnabled:'>
<arg declared_type='BOOL' index='0' name='meteringEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfLoops:'>
<arg declared_type='NSInteger' index='0' name='numberOfLoops' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPan:'>
<arg declared_type='float' index='0' name='pan' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:fadeDuration:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='settings'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateMeters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVAudioPlayerNode'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nodeTimeForPlayerTime:'>
<arg declared_type='AVAudioTime * _Nonnull' index='0' name='playerTime' type='@'/>
<retval declared_type='AVAudioTime * _Nullable' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='play'>
<retval declared_type='void' type='v'/>
</method>
<method selector='playAtTime:'>
<arg declared_type='AVAudioTime * _Nullable' index='0' name='when' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='playerTimeForNodeTime:'>
<arg declared_type='AVAudioTime * _Nonnull' index='0' name='nodeTime' type='@'/>
<retval declared_type='AVAudioTime * _Nullable' type='@'/>
</method>
<method selector='prepareWithFrameCount:'>
<arg declared_type='AVAudioFrameCount' index='0' name='frameCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleBuffer:atTime:options:completionCallbackType:completionHandler:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='AVAudioTime * _Nullable' index='1' name='when' type='@'/>
<arg declared_type='AVAudioPlayerNodeBufferOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' index='3' name='callbackType' type='i' type64='q'/>
<arg declared_type='AVAudioPlayerNodeCompletionHandler _Nullable' function_pointer='true' index='4' name='completionHandler' type='@?'>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleBuffer:atTime:options:completionHandler:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='AVAudioTime * _Nullable' index='1' name='when' type='@'/>
<arg declared_type='AVAudioPlayerNodeBufferOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='3' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleBuffer:completionCallbackType:completionHandler:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' index='1' name='callbackType' type='i' type64='q'/>
<arg declared_type='AVAudioPlayerNodeCompletionHandler _Nullable' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleBuffer:completionHandler:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='1' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleFile:atTime:completionCallbackType:completionHandler:'>
<arg declared_type='AVAudioFile * _Nonnull' index='0' name='file' type='@'/>
<arg declared_type='AVAudioTime * _Nullable' index='1' name='when' type='@'/>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' index='2' name='callbackType' type='i' type64='q'/>
<arg declared_type='AVAudioPlayerNodeCompletionHandler _Nullable' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleFile:atTime:completionHandler:'>
<arg declared_type='AVAudioFile * _Nonnull' index='0' name='file' type='@'/>
<arg declared_type='AVAudioTime * _Nullable' index='1' name='when' type='@'/>
<arg declared_type='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='2' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleSegment:startingFrame:frameCount:atTime:completionCallbackType:completionHandler:'>
<arg declared_type='AVAudioFile * _Nonnull' index='0' name='file' type='@'/>
<arg declared_type='AVAudioFramePosition' index='1' name='startFrame' type='q'/>
<arg declared_type='AVAudioFrameCount' index='2' name='numberFrames' type='I'/>
<arg declared_type='AVAudioTime * _Nullable' index='3' name='when' type='@'/>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' index='4' name='callbackType' type='i' type64='q'/>
<arg declared_type='AVAudioPlayerNodeCompletionHandler _Nullable' function_pointer='true' index='5' name='completionHandler' type='@?'>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleSegment:startingFrame:frameCount:atTime:completionHandler:'>
<arg declared_type='AVAudioFile * _Nonnull' index='0' name='file' type='@'/>
<arg declared_type='AVAudioFramePosition' index='1' name='startFrame' type='q'/>
<arg declared_type='AVAudioFrameCount' index='2' name='numberFrames' type='I'/>
<arg declared_type='AVAudioTime * _Nullable' index='3' name='when' type='@'/>
<arg declared_type='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='4' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioSequencer'>
<method selector='beatsForHostTime:error:'>
<arg declared_type='UInt64' index='0' name='inHostTime' type='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='AVMusicTimeStamp' type='d'/>
</method>
<method selector='beatsForSeconds:'>
<arg declared_type='NSTimeInterval' index='0' name='seconds' type='d'/>
<retval declared_type='AVMusicTimeStamp' type='d'/>
</method>
<method selector='currentPositionInBeats'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='currentPositionInSeconds'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='dataWithSMPTEResolution:error:'>
<arg declared_type='NSInteger' index='0' name='SMPTEResolution' type='i' type64='q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='hostTimeForBeats:error:'>
<arg declared_type='AVMusicTimeStamp' index='0' name='inBeats' type='d'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='UInt64' type='Q'/>
</method>
<method selector='initWithAudioEngine:'>
<arg declared_type='AVAudioEngine * _Nonnull' index='0' name='engine' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadFromData:options:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='AVMusicSequenceLoadOptions' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadFromURL:options:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='fileURL' type='@'/>
<arg declared_type='AVMusicSequenceLoadOptions' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='secondsForBeats:'>
<arg declared_type='AVMusicTimeStamp' index='0' name='beats' type='d'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='setCurrentPositionInBeats:'>
<arg declared_type='NSTimeInterval' index='0' name='currentPositionInBeats' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentPositionInSeconds:'>
<arg declared_type='NSTimeInterval' index='0' name='currentPositionInSeconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAndReturnError:'>
<arg declared_type='NSError * _Nullable * _Nullable' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tempoTrack'>
<retval declared_type='AVMusicTrack * _Nonnull' type='@'/>
</method>
<method selector='tracks'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='writeToURL:SMPTEResolution:replaceExisting:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='fileURL' type='@'/>
<arg declared_type='NSInteger' index='1' name='resolution' type='i' type64='q'/>
<arg declared_type='BOOL' index='2' name='replace' type='B'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AVAudioSession'>
<method selector='IOBufferDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='availableCategories'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='availableInputs'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='availableModes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='category'>
<retval declared_type='AVAudioSessionCategory _Nonnull' type='@'/>
</method>
<method selector='categoryOptions'>
<retval declared_type='AVAudioSessionCategoryOptions' type='I' type64='Q'/>
</method>
<method selector='currentRoute'>
<retval declared_type='AVAudioSessionRouteDescription * _Nonnull' type='@'/>
</method>
<method selector='inputDataSource'>
<retval declared_type='AVAudioSessionDataSourceDescription * _Nullable' type='@'/>
</method>
<method selector='inputDataSources'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='inputGain'>
<retval declared_type='float' type='f'/>
</method>
<method selector='inputLatency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='inputNumberOfChannels'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='isInputAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInputGainSettable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOtherAudioPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumInputNumberOfChannels'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='maximumOutputNumberOfChannels'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='mode'>
<retval declared_type='AVAudioSessionMode _Nonnull' type='@'/>
</method>
<method selector='outputDataSource'>
<retval declared_type='AVAudioSessionDataSourceDescription * _Nullable' type='@'/>
</method>
<method selector='outputDataSources'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='outputLatency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='outputNumberOfChannels'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='outputVolume'>
<retval declared_type='float' type='f'/>
</method>
<method selector='overrideOutputAudioPort:error:'>
<arg declared_type='AVAudioSessionPortOverride' index='0' name='portOverride' type='I' type64='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preferredIOBufferDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='preferredInput'>
<retval declared_type='AVAudioSessionPortDescription * _Nullable' type='@'/>
</method>
<method selector='preferredInputNumberOfChannels'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='preferredOutputNumberOfChannels'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='preferredSampleRate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='routeSharingPolicy'>
<retval declared_type='AVAudioSessionRouteSharingPolicy' type='I' type64='Q'/>
</method>
<method selector='sampleRate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='secondaryAudioShouldBeSilencedHint'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActive:error:'>
<arg declared_type='BOOL' index='0' name='active' type='B'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActive:withOptions:error:'>
<arg declared_type='BOOL' index='0' name='active' type='B'/>
<arg declared_type='AVAudioSessionSetActiveOptions' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCategory:error:'>
<arg declared_type='AVAudioSessionCategory _Nonnull' index='0' name='category' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCategory:mode:options:error:'>
<arg declared_type='AVAudioSessionCategory _Nonnull' index='0' name='category' type='@'/>
<arg declared_type='AVAudioSessionMode _Nonnull' index='1' name='mode' type='@'/>
<arg declared_type='AVAudioSessionCategoryOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCategory:mode:routeSharingPolicy:options:error:'>
<arg declared_type='AVAudioSessionCategory _Nonnull' index='0' name='category' type='@'/>
<arg declared_type='AVAudioSessionMode _Nonnull' index='1' name='mode' type='@'/>
<arg declared_type='AVAudioSessionRouteSharingPolicy' index='2' name='policy' type='I' type64='Q'/>
<arg declared_type='AVAudioSessionCategoryOptions' index='3' name='options' type='I' type64='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCategory:withOptions:error:'>
<arg declared_type='AVAudioSessionCategory _Nonnull' index='0' name='category' type='@'/>
<arg declared_type='AVAudioSessionCategoryOptions' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setInputDataSource:error:'>
<arg declared_type='AVAudioSessionDataSourceDescription * _Nullable' index='0' name='dataSource' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setInputGain:error:'>
<arg declared_type='float' index='0' name='gain' type='f'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setMode:error:'>
<arg declared_type='AVAudioSessionMode _Nonnull' index='0' name='mode' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setOutputDataSource:error:'>
<arg declared_type='AVAudioSessionDataSourceDescription * _Nullable' index='0' name='dataSource' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPreferredIOBufferDuration:error:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPreferredInput:error:'>
<arg declared_type='AVAudioSessionPortDescription * _Nullable' index='0' name='inPort' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPreferredInputNumberOfChannels:error:'>
<arg declared_type='NSInteger' index='0' name='count' type='i' type64='q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPreferredOutputNumberOfChannels:error:'>
<arg declared_type='NSInteger' index='0' name='count' type='i' type64='q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPreferredSampleRate:error:'>
<arg declared_type='double' index='0' name='sampleRate' type='d'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='AVAudioSession * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioSessionChannelDescription'>
<method selector='channelLabel'>
<retval declared_type='AudioChannelLabel' type='L' type64='I'/>
</method>
<method selector='channelName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='channelNumber'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='owningPortUID'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioSessionDataSourceDescription'>
<method selector='dataSourceID'>
<retval declared_type='NSNumber * _Nonnull' type='@'/>
</method>
<method selector='dataSourceName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='location'>
<retval declared_type='AVAudioSessionLocation _Nullable' type='@'/>
</method>
<method selector='orientation'>
<retval declared_type='AVAudioSessionOrientation _Nullable' type='@'/>
</method>
<method selector='preferredPolarPattern'>
<retval declared_type='AVAudioSessionPolarPattern _Nullable' type='@'/>
</method>
<method selector='selectedPolarPattern'>
<retval declared_type='AVAudioSessionPolarPattern _Nullable' type='@'/>
</method>
<method selector='setPreferredPolarPattern:error:'>
<arg declared_type='AVAudioSessionPolarPattern _Nullable' index='0' name='pattern' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportedPolarPatterns'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='AVAudioSessionPortDescription'>
<method selector='UID'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='channels'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='dataSources'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='hasHardwareVoiceCallProcessing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='portName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='portType'>
<retval declared_type='AVAudioSessionPort _Nonnull' type='@'/>
</method>
<method selector='preferredDataSource'>
<retval declared_type='AVAudioSessionDataSourceDescription * _Nullable' type='@'/>
</method>
<method selector='selectedDataSource'>
<retval declared_type='AVAudioSessionDataSourceDescription * _Nullable' type='@'/>
</method>
<method selector='setPreferredDataSource:error:'>
<arg declared_type='AVAudioSessionDataSourceDescription * _Nullable' index='0' name='dataSource' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AVAudioSessionRouteDescription'>
<method selector='inputs'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='outputs'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioTime'>
<method selector='audioTimeStamp'>
<retval declared_type='AudioTimeStamp' type='{AudioTimeStamp=dQdQ{SMPTETime=ssILLssss}LI}' type64='{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
</method>
<method selector='extrapolateTimeFromAnchor:'>
<arg declared_type='AVAudioTime * _Nonnull' index='0' name='anchorTime' type='@'/>
<retval declared_type='AVAudioTime * _Nullable' type='@'/>
</method>
<method selector='hostTime'>
<retval declared_type='uint64_t' type='Q'/>
</method>
<method class_method='true' selector='hostTimeForSeconds:'>
<arg declared_type='NSTimeInterval' index='0' name='seconds' type='d'/>
<retval declared_type='uint64_t' type='Q'/>
</method>
<method selector='initWithAudioTimeStamp:sampleRate:'>
<arg const='true' declared_type='AudioTimeStamp * _Nonnull' index='0' name='ts' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssILLssss}LI}' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithHostTime:'>
<arg declared_type='uint64_t' index='0' name='hostTime' type='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithHostTime:sampleTime:atRate:'>
<arg declared_type='uint64_t' index='0' name='hostTime' type='Q'/>
<arg declared_type='AVAudioFramePosition' index='1' name='sampleTime' type='q'/>
<arg declared_type='double' index='2' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSampleTime:atRate:'>
<arg declared_type='AVAudioFramePosition' index='0' name='sampleTime' type='q'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isHostTimeValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSampleTimeValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sampleRate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='sampleTime'>
<retval declared_type='AVAudioFramePosition' type='q'/>
</method>
<method class_method='true' selector='secondsForHostTime:'>
<arg declared_type='uint64_t' index='0' name='hostTime' type='Q'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='timeWithAudioTimeStamp:sampleRate:'>
<arg const='true' declared_type='AudioTimeStamp * _Nonnull' index='0' name='ts' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssILLssss}LI}' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='timeWithHostTime:'>
<arg declared_type='uint64_t' index='0' name='hostTime' type='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='timeWithHostTime:sampleTime:atRate:'>
<arg declared_type='uint64_t' index='0' name='hostTime' type='Q'/>
<arg declared_type='AVAudioFramePosition' index='1' name='sampleTime' type='q'/>
<arg declared_type='double' index='2' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='timeWithSampleTime:atRate:'>
<arg declared_type='AVAudioFramePosition' index='0' name='sampleTime' type='q'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioUnit'>
<method selector='AUAudioUnit'>
<retval declared_type='AUAudioUnit * _Nonnull' type='@'/>
</method>
<method selector='audioComponentDescription'>
<retval declared_type='AudioComponentDescription' type='{AudioComponentDescription=IIIII}'/>
</method>
<method selector='audioUnit'>
<retval declared_type='AudioUnit _Nonnull' type='^{OpaqueAudioComponentInstance=}'/>
</method>
<method class_method='true' selector='instantiateWithComponentDescription:options:completionHandler:'>
<arg declared_type='AudioComponentDescription' index='0' name='audioComponentDescription' type='{AudioComponentDescription=IIIII}'/>
<arg declared_type='AudioComponentInstantiationOptions' index='1' name='options' type='L' type64='I'/>
<arg declared_type='void (^ _Nonnull)(__kindof AVAudioUnit * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='__kindof AVAudioUnit * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadAudioUnitPresetAtURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='manufacturerName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='version'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='AVAudioUnitComponent'>
<method selector='allTagNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='audioComponent'>
<retval declared_type='AudioComponent _Nonnull' type='^{OpaqueAudioComponent=}'/>
</method>
<method selector='audioComponentDescription'>
<retval declared_type='AudioComponentDescription' type='{AudioComponentDescription=IIIII}'/>
</method>
<method selector='hasMIDIInput'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasMIDIOutput'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSandboxSafe'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localizedTypeName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='manufacturerName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='typeName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='version'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='versionString'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioUnitComponentManager'>
<method selector='componentsMatchingDescription:'>
<arg declared_type='AudioComponentDescription' index='0' name='desc' type='{AudioComponentDescription=IIIII}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='componentsMatchingPredicate:'>
<arg declared_type='NSPredicate * _Nonnull' index='0' name='predicate' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='componentsPassingTest:'>
<arg declared_type='BOOL (^ _Nonnull)(AVAudioUnitComponent * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='0' name='testHandler' type='@?'>
<arg declared_type='AVAudioUnitComponent * _Nonnull' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='sharedAudioUnitComponentManager'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='standardLocalizedTagNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tagNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioUnitDelay'>
<method selector='delayTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='feedback'>
<retval declared_type='float' type='f'/>
</method>
<method selector='lowPassCutoff'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setDelayTime:'>
<arg declared_type='NSTimeInterval' index='0' name='delayTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFeedback:'>
<arg declared_type='float' index='0' name='feedback' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLowPassCutoff:'>
<arg declared_type='float' index='0' name='lowPassCutoff' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWetDryMix:'>
<arg declared_type='float' index='0' name='wetDryMix' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='wetDryMix'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVAudioUnitDistortion'>
<method selector='loadFactoryPreset:'>
<arg declared_type='AVAudioUnitDistortionPreset' index='0' name='preset' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preGain'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPreGain:'>
<arg declared_type='float' index='0' name='preGain' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWetDryMix:'>
<arg declared_type='float' index='0' name='wetDryMix' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='wetDryMix'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVAudioUnitEQ'>
<method selector='bands'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='globalGain'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithNumberOfBands:'>
<arg declared_type='NSUInteger' index='0' name='numberOfBands' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setGlobalGain:'>
<arg declared_type='float' index='0' name='globalGain' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioUnitEQFilterParameters'>
<method selector='bandwidth'>
<retval declared_type='float' type='f'/>
</method>
<method selector='bypass'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='filterType'>
<retval declared_type='AVAudioUnitEQFilterType' type='i' type64='q'/>
</method>
<method selector='frequency'>
<retval declared_type='float' type='f'/>
</method>
<method selector='gain'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setBandwidth:'>
<arg declared_type='float' index='0' name='bandwidth' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBypass:'>
<arg declared_type='BOOL' index='0' name='bypass' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterType:'>
<arg declared_type='AVAudioUnitEQFilterType' index='0' name='filterType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrequency:'>
<arg declared_type='float' index='0' name='frequency' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGain:'>
<arg declared_type='float' index='0' name='gain' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioUnitEffect'>
<method selector='bypass'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type='AudioComponentDescription' index='0' name='audioComponentDescription' type='{AudioComponentDescription=IIIII}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setBypass:'>
<arg declared_type='BOOL' index='0' name='bypass' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioUnitGenerator'>
<method selector='bypass'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type='AudioComponentDescription' index='0' name='audioComponentDescription' type='{AudioComponentDescription=IIIII}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setBypass:'>
<arg declared_type='BOOL' index='0' name='bypass' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioUnitMIDIInstrument'>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type='AudioComponentDescription' index='0' name='description' type='{AudioComponentDescription=IIIII}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='sendController:withValue:onChannel:'>
<arg declared_type='uint8_t' index='0' name='controller' type='C'/>
<arg declared_type='uint8_t' index='1' name='value' type='C'/>
<arg declared_type='uint8_t' index='2' name='channel' type='C'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendMIDIEvent:data1:'>
<arg declared_type='uint8_t' index='0' name='midiStatus' type='C'/>
<arg declared_type='uint8_t' index='1' name='data1' type='C'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendMIDIEvent:data1:data2:'>
<arg declared_type='uint8_t' index='0' name='midiStatus' type='C'/>
<arg declared_type='uint8_t' index='1' name='data1' type='C'/>
<arg declared_type='uint8_t' index='2' name='data2' type='C'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendMIDISysExEvent:'>
<arg declared_type='NSData * _Nonnull' index='0' name='midiData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendPitchBend:onChannel:'>
<arg declared_type='uint16_t' index='0' name='pitchbend' type='S'/>
<arg declared_type='uint8_t' index='1' name='channel' type='C'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendPressure:onChannel:'>
<arg declared_type='uint8_t' index='0' name='pressure' type='C'/>
<arg declared_type='uint8_t' index='1' name='channel' type='C'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendPressureForKey:withValue:onChannel:'>
<arg declared_type='uint8_t' index='0' name='key' type='C'/>
<arg declared_type='uint8_t' index='1' name='value' type='C'/>
<arg declared_type='uint8_t' index='2' name='channel' type='C'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendProgramChange:bankMSB:bankLSB:onChannel:'>
<arg declared_type='uint8_t' index='0' name='program' type='C'/>
<arg declared_type='uint8_t' index='1' name='bankMSB' type='C'/>
<arg declared_type='uint8_t' index='2' name='bankLSB' type='C'/>
<arg declared_type='uint8_t' index='3' name='channel' type='C'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendProgramChange:onChannel:'>
<arg declared_type='uint8_t' index='0' name='program' type='C'/>
<arg declared_type='uint8_t' index='1' name='channel' type='C'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startNote:withVelocity:onChannel:'>
<arg declared_type='uint8_t' index='0' name='note' type='C'/>
<arg declared_type='uint8_t' index='1' name='velocity' type='C'/>
<arg declared_type='uint8_t' index='2' name='channel' type='C'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopNote:onChannel:'>
<arg declared_type='uint8_t' index='0' name='note' type='C'/>
<arg declared_type='uint8_t' index='1' name='channel' type='C'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioUnitReverb'>
<method selector='loadFactoryPreset:'>
<arg declared_type='AVAudioUnitReverbPreset' index='0' name='preset' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWetDryMix:'>
<arg declared_type='float' index='0' name='wetDryMix' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='wetDryMix'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVAudioUnitSampler'>
<method selector='globalTuning'>
<retval declared_type='float' type='f'/>
</method>
<method selector='loadAudioFilesAtURLs:error:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='audioFiles' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadInstrumentAtURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='instrumentURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadSoundBankInstrumentAtURL:program:bankMSB:bankLSB:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='bankURL' type='@'/>
<arg declared_type='uint8_t' index='1' name='program' type='C'/>
<arg declared_type='uint8_t' index='2' name='bankMSB' type='C'/>
<arg declared_type='uint8_t' index='3' name='bankLSB' type='C'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='masterGain'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setGlobalTuning:'>
<arg declared_type='float' index='0' name='globalTuning' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMasterGain:'>
<arg declared_type='float' index='0' name='masterGain' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStereoPan:'>
<arg declared_type='float' index='0' name='stereoPan' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stereoPan'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVAudioUnitTimeEffect'>
<method selector='bypass'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type='AudioComponentDescription' index='0' name='audioComponentDescription' type='{AudioComponentDescription=IIIII}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setBypass:'>
<arg declared_type='BOOL' index='0' name='bypass' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioUnitTimePitch'>
<method selector='overlap'>
<retval declared_type='float' type='f'/>
</method>
<method selector='pitch'>
<retval declared_type='float' type='f'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setOverlap:'>
<arg declared_type='float' index='0' name='overlap' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPitch:'>
<arg declared_type='float' index='0' name='pitch' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioUnitVarispeed'>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVMIDIPlayer'>
<method selector='currentPosition'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='initWithContentsOfURL:soundBankURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='inURL' type='@'/>
<arg declared_type='NSURL * _Nullable' index='1' name='bankURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:soundBankURL:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSURL * _Nullable' index='1' name='bankURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='play:'>
<arg declared_type='AVMIDIPlayerCompletionHandler _Nullable' function_pointer='true' index='0' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setCurrentPosition:'>
<arg declared_type='NSTimeInterval' index='0' name='currentPosition' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVMusicTrack'>
<method selector='destinationAudioUnit'>
<retval declared_type='AVAudioUnit * _Nullable' type='@'/>
</method>
<method selector='isLoopingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMuted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSoloed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lengthInBeats'>
<retval declared_type='AVMusicTimeStamp' type='d'/>
</method>
<method selector='lengthInSeconds'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='loopRange'>
<retval declared_type='AVBeatRange' type='{_AVBeatRange=dd}'/>
</method>
<method selector='numberOfLoops'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='offsetTime'>
<retval declared_type='AVMusicTimeStamp' type='d'/>
</method>
<method selector='setDestinationAudioUnit:'>
<arg declared_type='AVAudioUnit * _Nullable' index='0' name='destinationAudioUnit' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLengthInBeats:'>
<arg declared_type='AVMusicTimeStamp' index='0' name='lengthInBeats' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLengthInSeconds:'>
<arg declared_type='NSTimeInterval' index='0' name='lengthInSeconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoopRange:'>
<arg declared_type='AVBeatRange' index='0' name='loopRange' type='{_AVBeatRange=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoopingEnabled:'>
<arg declared_type='BOOL' index='0' name='loopingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMuted:'>
<arg declared_type='BOOL' index='0' name='muted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfLoops:'>
<arg declared_type='NSInteger' index='0' name='numberOfLoops' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffsetTime:'>
<arg declared_type='AVMusicTimeStamp' index='0' name='offsetTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSoloed:'>
<arg declared_type='BOOL' index='0' name='soloed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeResolution'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='AVSpeechSynthesisVoice'>
<method class_method='true' selector='currentLanguageCode'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='language'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='quality'>
<retval declared_type='AVSpeechSynthesisVoiceQuality' type='i' type64='q'/>
</method>
<method class_method='true' selector='speechVoices'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='voiceWithIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='AVSpeechSynthesisVoice * _Nullable' type='@'/>
</method>
<method class_method='true' selector='voiceWithLanguage:'>
<arg declared_type='NSString * _Nullable' index='0' name='languageCode' type='@'/>
<retval declared_type='AVSpeechSynthesisVoice * _Nullable' type='@'/>
</method>
</class>
<class name='AVSpeechSynthesizer'>
<method selector='continueSpeaking'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSpeaking'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputChannels'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='pauseSpeakingAtBoundary:'>
<arg declared_type='AVSpeechBoundary' index='0' name='boundary' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputChannels:'>
<arg declared_type='NSArray * _Nullable' index='0' name='outputChannels' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speakUtterance:'>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='0' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopSpeakingAtBoundary:'>
<arg declared_type='AVSpeechBoundary' index='0' name='boundary' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AVSpeechUtterance'>
<method selector='attributedSpeechString'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='initWithAttributedString:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='pitchMultiplier'>
<retval declared_type='float' type='f'/>
</method>
<method selector='postUtteranceDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='preUtteranceDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPitchMultiplier:'>
<arg declared_type='float' index='0' name='pitchMultiplier' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostUtteranceDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='postUtteranceDelay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreUtteranceDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='preUtteranceDelay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVoice:'>
<arg declared_type='AVSpeechSynthesisVoice * _Nullable' index='0' name='voice' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechString'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='speechUtteranceWithAttributedString:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='speechUtteranceWithString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='voice'>
<retval declared_type='AVSpeechSynthesisVoice * _Nullable' type='@'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='NSObject'>
<method selector='audioPlayerBeginInterruption:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDecodeErrorDidOccur:error:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSError * _Nullable' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:withFlags:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:withOptions:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='destinationForMixer:bus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='mixer' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I' type64='Q'/>
<retval declared_type='AVAudioMixingDestination * _Nullable' type='@'/>
</method>
<method selector='obstruction'>
<retval declared_type='float' type='f'/>
</method>
<method selector='occlusion'>
<retval declared_type='float' type='f'/>
</method>
<method selector='pan'>
<retval declared_type='float' type='f'/>
</method>
<method selector='position'>
<retval declared_type='AVAudio3DPoint' type='{AVAudio3DPoint=fff}'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='renderingAlgorithm'>
<retval declared_type='AVAudio3DMixingRenderingAlgorithm' type='i' type64='q'/>
</method>
<method selector='reverbBlend'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setObstruction:'>
<arg declared_type='float' index='0' name='obstruction' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOcclusion:'>
<arg declared_type='float' index='0' name='occlusion' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPan:'>
<arg declared_type='float' index='0' name='pan' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg declared_type='AVAudio3DPoint' index='0' name='position' type='{AVAudio3DPoint=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRenderingAlgorithm:'>
<arg declared_type='AVAudio3DMixingRenderingAlgorithm' index='0' name='renderingAlgorithm' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReverbBlend:'>
<arg declared_type='float' index='0' name='reverbBlend' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didCancelSpeechUtterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didContinueSpeechUtterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didFinishSpeechUtterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didPauseSpeechUtterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didStartSpeechUtterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:willSpeakRangeOfSpeechString:utterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='NSRange' index='1' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='2' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<informal_protocol name='AVAudio3DMixing'>
<method selector='obstruction' type='f8@0:4' type64='f16@0:8'>
<retval declared_type='float' type='f'/>
</method>
<method selector='occlusion' type='f8@0:4' type64='f16@0:8'>
<retval declared_type='float' type='f'/>
</method>
<method selector='position' type='{AVAudio3DPoint=fff}8@0:4' type64='{AVAudio3DPoint=fff}16@0:8'>
<retval declared_type='AVAudio3DPoint' type='{AVAudio3DPoint=fff}'/>
</method>
<method selector='rate' type='f8@0:4' type64='f16@0:8'>
<retval declared_type='float' type='f'/>
</method>
<method selector='renderingAlgorithm' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='AVAudio3DMixingRenderingAlgorithm' type='i' type64='q'/>
</method>
<method selector='reverbBlend' type='f8@0:4' type64='f16@0:8'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setObstruction:' type='v12@0:4f8' type64='v20@0:8f16'>
<arg declared_type='float' index='0' name='obstruction' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOcclusion:' type='v12@0:4f8' type64='v20@0:8f16'>
<arg declared_type='float' index='0' name='occlusion' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:' type='v20@0:4{AVAudio3DPoint=fff}8' type64='v28@0:8{AVAudio3DPoint=fff}16'>
<arg declared_type='AVAudio3DPoint' index='0' name='position' type='{AVAudio3DPoint=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:' type='v12@0:4f8' type64='v20@0:8f16'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRenderingAlgorithm:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='AVAudio3DMixingRenderingAlgorithm' index='0' name='renderingAlgorithm' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReverbBlend:' type='v12@0:4f8' type64='v20@0:8f16'>
<arg declared_type='float' index='0' name='reverbBlend' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioMixing'>
<method selector='destinationForMixer:bus:' type='@16@0:4@8I12' type64='@32@0:8@16Q24'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='mixer' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I' type64='Q'/>
<retval declared_type='AVAudioMixingDestination * _Nullable' type='@'/>
</method>
<method selector='setVolume:' type='v12@0:4f8' type64='v20@0:8f16'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='volume' type='f8@0:4' type64='f16@0:8'>
<retval declared_type='float' type='f'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioPlayerDelegate'>
<method selector='audioPlayerBeginInterruption:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDecodeErrorDidOccur:error:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSError * _Nullable' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:withFlags:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:withOptions:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioStereoMixing'>
<method selector='pan' type='f8@0:4' type64='f16@0:8'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPan:' type='v12@0:4f8' type64='v20@0:8f16'>
<arg declared_type='float' index='0' name='pan' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVSpeechSynthesizerDelegate'>
<method selector='speechSynthesizer:didCancelSpeechUtterance:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didContinueSpeechUtterance:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didFinishSpeechUtterance:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didPauseSpeechUtterance:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didStartSpeechUtterance:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:willSpeakRangeOfSpeechString:utterance:' type='v24@0:4@8{_NSRange=II}12@20' type64='v48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='NSRange' index='1' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='2' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
