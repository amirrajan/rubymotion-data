<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='CATransform3D' type64='{CATransform3D=&quot;m11&quot;d&quot;m12&quot;d&quot;m13&quot;d&quot;m14&quot;d&quot;m21&quot;d&quot;m22&quot;d&quot;m23&quot;d&quot;m24&quot;d&quot;m31&quot;d&quot;m32&quot;d&quot;m33&quot;d&quot;m34&quot;d&quot;m41&quot;d&quot;m42&quot;d&quot;m43&quot;d&quot;m44&quot;d}'>
<field declared_type64='CGFloat' name='m11' type64='d'/>
<field declared_type64='CGFloat' name='m12' type64='d'/>
<field declared_type64='CGFloat' name='m13' type64='d'/>
<field declared_type64='CGFloat' name='m14' type64='d'/>
<field declared_type64='CGFloat' name='m21' type64='d'/>
<field declared_type64='CGFloat' name='m22' type64='d'/>
<field declared_type64='CGFloat' name='m23' type64='d'/>
<field declared_type64='CGFloat' name='m24' type64='d'/>
<field declared_type64='CGFloat' name='m31' type64='d'/>
<field declared_type64='CGFloat' name='m32' type64='d'/>
<field declared_type64='CGFloat' name='m33' type64='d'/>
<field declared_type64='CGFloat' name='m34' type64='d'/>
<field declared_type64='CGFloat' name='m41' type64='d'/>
<field declared_type64='CGFloat' name='m42' type64='d'/>
<field declared_type64='CGFloat' name='m43' type64='d'/>
<field declared_type64='CGFloat' name='m44' type64='d'/>
</struct>
<constant const='true' declared_type64='CATransform3D' name='CATransform3DIdentity' type64='{CATransform3D=dddddddddddddddd}'/>
<constant const='true' declared_type64='CATextLayerAlignmentMode _Nonnull' name='kCAAlignmentCenter' type64='@'/>
<constant const='true' declared_type64='CATextLayerAlignmentMode _Nonnull' name='kCAAlignmentJustified' type64='@'/>
<constant const='true' declared_type64='CATextLayerAlignmentMode _Nonnull' name='kCAAlignmentLeft' type64='@'/>
<constant const='true' declared_type64='CATextLayerAlignmentMode _Nonnull' name='kCAAlignmentNatural' type64='@'/>
<constant const='true' declared_type64='CATextLayerAlignmentMode _Nonnull' name='kCAAlignmentRight' type64='@'/>
<constant const='true' declared_type64='CAAnimationCalculationMode _Nonnull' name='kCAAnimationCubic' type64='@'/>
<constant const='true' declared_type64='CAAnimationCalculationMode _Nonnull' name='kCAAnimationCubicPaced' type64='@'/>
<constant const='true' declared_type64='CAAnimationCalculationMode _Nonnull' name='kCAAnimationDiscrete' type64='@'/>
<constant const='true' declared_type64='CAAnimationCalculationMode _Nonnull' name='kCAAnimationLinear' type64='@'/>
<constant const='true' declared_type64='CAAnimationCalculationMode _Nonnull' name='kCAAnimationPaced' type64='@'/>
<constant const='true' declared_type64='CAAnimationRotationMode _Nonnull' name='kCAAnimationRotateAuto' type64='@'/>
<constant const='true' declared_type64='CAAnimationRotationMode _Nonnull' name='kCAAnimationRotateAutoReverse' type64='@'/>
<constant const='true' declared_type64='CALayerContentsFormat _Nonnull' name='kCAContentsFormatGray8Uint' type64='@'/>
<constant const='true' declared_type64='CALayerContentsFormat _Nonnull' name='kCAContentsFormatRGBA16Float' type64='@'/>
<constant const='true' declared_type64='CALayerContentsFormat _Nonnull' name='kCAContentsFormatRGBA8Uint' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerRenderMode _Nonnull' name='kCAEmitterLayerAdditive' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerRenderMode _Nonnull' name='kCAEmitterLayerBackToFront' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerEmitterShape _Nonnull' name='kCAEmitterLayerCircle' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerEmitterShape _Nonnull' name='kCAEmitterLayerCuboid' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerEmitterShape _Nonnull' name='kCAEmitterLayerLine' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerRenderMode _Nonnull' name='kCAEmitterLayerOldestFirst' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerRenderMode _Nonnull' name='kCAEmitterLayerOldestLast' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerEmitterMode _Nonnull' name='kCAEmitterLayerOutline' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerEmitterShape _Nonnull' name='kCAEmitterLayerPoint' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerEmitterMode _Nonnull' name='kCAEmitterLayerPoints' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerEmitterShape _Nonnull' name='kCAEmitterLayerRectangle' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerEmitterShape _Nonnull' name='kCAEmitterLayerSphere' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerEmitterMode _Nonnull' name='kCAEmitterLayerSurface' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerRenderMode _Nonnull' name='kCAEmitterLayerUnordered' type64='@'/>
<constant const='true' declared_type64='CAEmitterLayerEmitterMode _Nonnull' name='kCAEmitterLayerVolume' type64='@'/>
<constant const='true' declared_type64='CAMediaTimingFillMode _Nonnull' name='kCAFillModeBackwards' type64='@'/>
<constant const='true' declared_type64='CAMediaTimingFillMode _Nonnull' name='kCAFillModeBoth' type64='@'/>
<constant const='true' declared_type64='CAMediaTimingFillMode _Nonnull' name='kCAFillModeForwards' type64='@'/>
<constant const='true' declared_type64='CAMediaTimingFillMode _Nonnull' name='kCAFillModeRemoved' type64='@'/>
<constant const='true' declared_type64='CAShapeLayerFillRule _Nonnull' name='kCAFillRuleEvenOdd' type64='@'/>
<constant const='true' declared_type64='CAShapeLayerFillRule _Nonnull' name='kCAFillRuleNonZero' type64='@'/>
<constant const='true' declared_type64='CALayerContentsFilter _Nonnull' name='kCAFilterLinear' type64='@'/>
<constant const='true' declared_type64='CALayerContentsFilter _Nonnull' name='kCAFilterNearest' type64='@'/>
<constant const='true' declared_type64='CALayerContentsFilter _Nonnull' name='kCAFilterTrilinear' type64='@'/>
<constant const='true' declared_type64='CAGradientLayerType _Nonnull' name='kCAGradientLayerAxial' type64='@'/>
<constant const='true' declared_type64='CAGradientLayerType _Nonnull' name='kCAGradientLayerConic' type64='@'/>
<constant const='true' declared_type64='CAGradientLayerType _Nonnull' name='kCAGradientLayerRadial' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityBottom' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityBottomLeft' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityBottomRight' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityCenter' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityLeft' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityResize' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityResizeAspect' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityResizeAspectFill' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityRight' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityTop' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityTopLeft' type64='@'/>
<constant const='true' declared_type64='CALayerContentsGravity _Nonnull' name='kCAGravityTopRight' type64='@'/>
<constant const='true' declared_type64='CAShapeLayerLineCap _Nonnull' name='kCALineCapButt' type64='@'/>
<constant const='true' declared_type64='CAShapeLayerLineCap _Nonnull' name='kCALineCapRound' type64='@'/>
<constant const='true' declared_type64='CAShapeLayerLineCap _Nonnull' name='kCALineCapSquare' type64='@'/>
<constant const='true' declared_type64='CAShapeLayerLineJoin _Nonnull' name='kCALineJoinBevel' type64='@'/>
<constant const='true' declared_type64='CAShapeLayerLineJoin _Nonnull' name='kCALineJoinMiter' type64='@'/>
<constant const='true' declared_type64='CAShapeLayerLineJoin _Nonnull' name='kCALineJoinRound' type64='@'/>
<constant const='true' declared_type64='CAMediaTimingFunctionName _Nonnull' name='kCAMediaTimingFunctionDefault' type64='@'/>
<constant const='true' declared_type64='CAMediaTimingFunctionName _Nonnull' name='kCAMediaTimingFunctionEaseIn' type64='@'/>
<constant const='true' declared_type64='CAMediaTimingFunctionName _Nonnull' name='kCAMediaTimingFunctionEaseInEaseOut' type64='@'/>
<constant const='true' declared_type64='CAMediaTimingFunctionName _Nonnull' name='kCAMediaTimingFunctionEaseOut' type64='@'/>
<constant const='true' declared_type64='CAMediaTimingFunctionName _Nonnull' name='kCAMediaTimingFunctionLinear' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCAOnOrderIn' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCAOnOrderOut' type64='@'/>
<constant const='true' declared_type64='CAScrollLayerScrollMode _Nonnull' name='kCAScrollBoth' type64='@'/>
<constant const='true' declared_type64='CAScrollLayerScrollMode _Nonnull' name='kCAScrollHorizontally' type64='@'/>
<constant const='true' declared_type64='CAScrollLayerScrollMode _Nonnull' name='kCAScrollNone' type64='@'/>
<constant const='true' declared_type64='CAScrollLayerScrollMode _Nonnull' name='kCAScrollVertically' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCATransactionAnimationDuration' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCATransactionAnimationTimingFunction' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCATransactionCompletionBlock' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCATransactionDisableActions' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCATransition' type64='@'/>
<constant const='true' declared_type64='CATransitionType _Nonnull' name='kCATransitionFade' type64='@'/>
<constant const='true' declared_type64='CATransitionSubtype _Nonnull' name='kCATransitionFromBottom' type64='@'/>
<constant const='true' declared_type64='CATransitionSubtype _Nonnull' name='kCATransitionFromLeft' type64='@'/>
<constant const='true' declared_type64='CATransitionSubtype _Nonnull' name='kCATransitionFromRight' type64='@'/>
<constant const='true' declared_type64='CATransitionSubtype _Nonnull' name='kCATransitionFromTop' type64='@'/>
<constant const='true' declared_type64='CATransitionType _Nonnull' name='kCATransitionMoveIn' type64='@'/>
<constant const='true' declared_type64='CATransitionType _Nonnull' name='kCATransitionPush' type64='@'/>
<constant const='true' declared_type64='CATransitionType _Nonnull' name='kCATransitionReveal' type64='@'/>
<constant const='true' declared_type64='CATextLayerTruncationMode _Nonnull' name='kCATruncationEnd' type64='@'/>
<constant const='true' declared_type64='CATextLayerTruncationMode _Nonnull' name='kCATruncationMiddle' type64='@'/>
<constant const='true' declared_type64='CATextLayerTruncationMode _Nonnull' name='kCATruncationNone' type64='@'/>
<constant const='true' declared_type64='CATextLayerTruncationMode _Nonnull' name='kCATruncationStart' type64='@'/>
<constant const='true' declared_type64='CAValueFunctionName _Nonnull' name='kCAValueFunctionRotateX' type64='@'/>
<constant const='true' declared_type64='CAValueFunctionName _Nonnull' name='kCAValueFunctionRotateY' type64='@'/>
<constant const='true' declared_type64='CAValueFunctionName _Nonnull' name='kCAValueFunctionRotateZ' type64='@'/>
<constant const='true' declared_type64='CAValueFunctionName _Nonnull' name='kCAValueFunctionScale' type64='@'/>
<constant const='true' declared_type64='CAValueFunctionName _Nonnull' name='kCAValueFunctionScaleX' type64='@'/>
<constant const='true' declared_type64='CAValueFunctionName _Nonnull' name='kCAValueFunctionScaleY' type64='@'/>
<constant const='true' declared_type64='CAValueFunctionName _Nonnull' name='kCAValueFunctionScaleZ' type64='@'/>
<constant const='true' declared_type64='CAValueFunctionName _Nonnull' name='kCAValueFunctionTranslate' type64='@'/>
<constant const='true' declared_type64='CAValueFunctionName _Nonnull' name='kCAValueFunctionTranslateX' type64='@'/>
<constant const='true' declared_type64='CAValueFunctionName _Nonnull' name='kCAValueFunctionTranslateY' type64='@'/>
<constant const='true' declared_type64='CAValueFunctionName _Nonnull' name='kCAValueFunctionTranslateZ' type64='@'/>
<enum name='CA_WARN_DEPRECATED' value64='1'/>
<enum name='kCALayerBottomEdge' value64='4'/>
<enum name='kCALayerLeftEdge' value64='1'/>
<enum name='kCALayerMaxXMaxYCorner' value64='8'/>
<enum name='kCALayerMaxXMinYCorner' value64='2'/>
<enum name='kCALayerMinXMaxYCorner' value64='4'/>
<enum name='kCALayerMinXMinYCorner' value64='1'/>
<enum name='kCALayerRightEdge' value64='2'/>
<enum name='kCALayerTopEdge' value64='8'/>
<function name='CACurrentMediaTime'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</function>
<function name='CATransform3DConcat'>
<arg declared_type64='CATransform3D' name='a' type64='{CATransform3D=dddddddddddddddd}'/>
<arg declared_type64='CATransform3D' name='b' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</function>
<function name='CATransform3DEqualToTransform'>
<arg declared_type64='CATransform3D' name='a' type64='{CATransform3D=dddddddddddddddd}'/>
<arg declared_type64='CATransform3D' name='b' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CATransform3DGetAffineTransform'>
<arg declared_type64='CATransform3D' name='t' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CATransform3DInvert'>
<arg declared_type64='CATransform3D' name='t' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</function>
<function name='CATransform3DIsAffine'>
<arg declared_type64='CATransform3D' name='t' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CATransform3DIsIdentity'>
<arg declared_type64='CATransform3D' name='t' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CATransform3DMakeAffineTransform'>
<arg declared_type64='CGAffineTransform' name='m' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</function>
<function name='CATransform3DMakeRotation'>
<arg declared_type64='CGFloat' name='angle' type64='d'/>
<arg declared_type64='CGFloat' name='x' type64='d'/>
<arg declared_type64='CGFloat' name='y' type64='d'/>
<arg declared_type64='CGFloat' name='z' type64='d'/>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</function>
<function name='CATransform3DMakeScale'>
<arg declared_type64='CGFloat' name='sx' type64='d'/>
<arg declared_type64='CGFloat' name='sy' type64='d'/>
<arg declared_type64='CGFloat' name='sz' type64='d'/>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</function>
<function name='CATransform3DMakeTranslation'>
<arg declared_type64='CGFloat' name='tx' type64='d'/>
<arg declared_type64='CGFloat' name='ty' type64='d'/>
<arg declared_type64='CGFloat' name='tz' type64='d'/>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</function>
<function name='CATransform3DRotate'>
<arg declared_type64='CATransform3D' name='t' type64='{CATransform3D=dddddddddddddddd}'/>
<arg declared_type64='CGFloat' name='angle' type64='d'/>
<arg declared_type64='CGFloat' name='x' type64='d'/>
<arg declared_type64='CGFloat' name='y' type64='d'/>
<arg declared_type64='CGFloat' name='z' type64='d'/>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</function>
<function name='CATransform3DScale'>
<arg declared_type64='CATransform3D' name='t' type64='{CATransform3D=dddddddddddddddd}'/>
<arg declared_type64='CGFloat' name='sx' type64='d'/>
<arg declared_type64='CGFloat' name='sy' type64='d'/>
<arg declared_type64='CGFloat' name='sz' type64='d'/>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</function>
<function name='CATransform3DTranslate'>
<arg declared_type64='CATransform3D' name='t' type64='{CATransform3D=dddddddddddddddd}'/>
<arg declared_type64='CGFloat' name='tx' type64='d'/>
<arg declared_type64='CGFloat' name='ty' type64='d'/>
<arg declared_type64='CGFloat' name='tz' type64='d'/>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</function>
<class name='CAAnimation'>
<method class_method='true' selector='animation'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='defaultValueForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='isRemovedOnCompletion'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRemovedOnCompletion:'>
<arg declared_type64='BOOL' index='0' name='removedOnCompletion' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimingFunction:'>
<arg declared_type64='CAMediaTimingFunction * _Nullable' index='0' name='timingFunction' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldArchiveValueForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='timingFunction'>
<retval declared_type64='CAMediaTimingFunction * _Nullable' type64='@'/>
</method>
</class>
<class name='CAAnimationGroup'>
<method selector='animations'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='setAnimations:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='animations' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CABasicAnimation'>
<method selector='byValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='fromValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setByValue:'>
<arg declared_type64='id _Nullable' index='0' name='byValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFromValue:'>
<arg declared_type64='id _Nullable' index='0' name='fromValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToValue:'>
<arg declared_type64='id _Nullable' index='0' name='toValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='CADisplayLink'>
<method selector='addToRunLoop:forMode:'>
<arg declared_type64='NSRunLoop * _Nonnull' index='0' name='runloop' type64='@'/>
<arg declared_type64='NSRunLoopMode _Nonnull' index='1' name='mode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='displayLinkWithTarget:selector:'>
<arg declared_type64='id _Nonnull' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='sel' type64=':'/>
<retval declared_type64='CADisplayLink * _Nonnull' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='frameInterval'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='invalidate'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isPaused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='preferredFramesPerSecond'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg declared_type64='NSRunLoop * _Nonnull' index='0' name='runloop' type64='@'/>
<arg declared_type64='NSRunLoopMode _Nonnull' index='1' name='mode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameInterval:'>
<arg declared_type64='NSInteger' index='0' name='frameInterval' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPaused:'>
<arg declared_type64='BOOL' index='0' name='paused' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredFramesPerSecond:'>
<arg declared_type64='NSInteger' index='0' name='preferredFramesPerSecond' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='targetTimestamp'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='timestamp'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
</class>
<class name='CAEAGLLayer'>
<method selector='presentsWithTransaction'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setPresentsWithTransaction:'>
<arg declared_type64='BOOL' index='0' name='presentsWithTransaction' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CAEmitterCell'>
<method selector='alphaRange'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='alphaSpeed'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='birthRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='blueRange'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='blueSpeed'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='color'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='contents'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='contentsRect'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentsScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='defaultValueForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='emissionLatitude'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='emissionLongitude'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='emissionRange'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='emitterCell'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='emitterCells'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='greenRange'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='greenSpeed'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lifetime'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='lifetimeRange'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='magnificationFilter'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='minificationFilter'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='minificationFilterBias'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='redRange'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='redSpeed'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='scale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='scaleRange'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='scaleSpeed'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAlphaRange:'>
<arg declared_type64='float' index='0' name='alphaRange' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlphaSpeed:'>
<arg declared_type64='float' index='0' name='alphaSpeed' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBirthRate:'>
<arg declared_type64='float' index='0' name='birthRate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBlueRange:'>
<arg declared_type64='float' index='0' name='blueRange' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBlueSpeed:'>
<arg declared_type64='float' index='0' name='blueSpeed' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColor:'>
<arg declared_type64='CGColorRef _Nullable' index='0' name='color' type64='^{CGColor=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContents:'>
<arg declared_type64='id _Nullable' index='0' name='contents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentsRect:'>
<arg declared_type64='CGRect' index='0' name='contentsRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentsScale:'>
<arg declared_type64='CGFloat' index='0' name='contentsScale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmissionLatitude:'>
<arg declared_type64='CGFloat' index='0' name='emissionLatitude' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmissionLongitude:'>
<arg declared_type64='CGFloat' index='0' name='emissionLongitude' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmissionRange:'>
<arg declared_type64='CGFloat' index='0' name='emissionRange' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmitterCells:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='emitterCells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGreenRange:'>
<arg declared_type64='float' index='0' name='greenRange' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGreenSpeed:'>
<arg declared_type64='float' index='0' name='greenSpeed' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLifetime:'>
<arg declared_type64='float' index='0' name='lifetime' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLifetimeRange:'>
<arg declared_type64='float' index='0' name='lifetimeRange' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMagnificationFilter:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='magnificationFilter' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinificationFilter:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='minificationFilter' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinificationFilterBias:'>
<arg declared_type64='float' index='0' name='minificationFilterBias' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRedRange:'>
<arg declared_type64='float' index='0' name='redRange' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRedSpeed:'>
<arg declared_type64='float' index='0' name='redSpeed' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScale:'>
<arg declared_type64='CGFloat' index='0' name='scale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScaleRange:'>
<arg declared_type64='CGFloat' index='0' name='scaleRange' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScaleSpeed:'>
<arg declared_type64='CGFloat' index='0' name='scaleSpeed' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpin:'>
<arg declared_type64='CGFloat' index='0' name='spin' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpinRange:'>
<arg declared_type64='CGFloat' index='0' name='spinRange' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStyle:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='style' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVelocity:'>
<arg declared_type64='CGFloat' index='0' name='velocity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVelocityRange:'>
<arg declared_type64='CGFloat' index='0' name='velocityRange' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setXAcceleration:'>
<arg declared_type64='CGFloat' index='0' name='xAcceleration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setYAcceleration:'>
<arg declared_type64='CGFloat' index='0' name='yAcceleration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZAcceleration:'>
<arg declared_type64='CGFloat' index='0' name='zAcceleration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldArchiveValueForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='spin'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='spinRange'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='style'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='velocity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='velocityRange'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='xAcceleration'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='yAcceleration'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='zAcceleration'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='CAEmitterLayer'>
<method selector='birthRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='emitterCells'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='emitterDepth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='emitterMode'>
<retval declared_type64='CAEmitterLayerEmitterMode _Nonnull' type64='@'/>
</method>
<method selector='emitterPosition'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='emitterShape'>
<retval declared_type64='CAEmitterLayerEmitterShape _Nonnull' type64='@'/>
</method>
<method selector='emitterSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='emitterZPosition'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lifetime'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='preservesDepth'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='renderMode'>
<retval declared_type64='CAEmitterLayerRenderMode _Nonnull' type64='@'/>
</method>
<method selector='scale'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='seed'>
<retval declared_type64='unsigned int' type64='I'/>
</method>
<method selector='setBirthRate:'>
<arg declared_type64='float' index='0' name='birthRate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmitterCells:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='emitterCells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmitterDepth:'>
<arg declared_type64='CGFloat' index='0' name='emitterDepth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmitterMode:'>
<arg declared_type64='CAEmitterLayerEmitterMode _Nonnull' index='0' name='emitterMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmitterPosition:'>
<arg declared_type64='CGPoint' index='0' name='emitterPosition' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmitterShape:'>
<arg declared_type64='CAEmitterLayerEmitterShape _Nonnull' index='0' name='emitterShape' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmitterSize:'>
<arg declared_type64='CGSize' index='0' name='emitterSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmitterZPosition:'>
<arg declared_type64='CGFloat' index='0' name='emitterZPosition' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLifetime:'>
<arg declared_type64='float' index='0' name='lifetime' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreservesDepth:'>
<arg declared_type64='BOOL' index='0' name='preservesDepth' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderMode:'>
<arg declared_type64='CAEmitterLayerRenderMode _Nonnull' index='0' name='renderMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScale:'>
<arg declared_type64='float' index='0' name='scale' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSeed:'>
<arg declared_type64='unsigned int' index='0' name='seed' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpin:'>
<arg declared_type64='float' index='0' name='spin' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVelocity:'>
<arg declared_type64='float' index='0' name='velocity' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='spin'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='velocity'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='CAGradientLayer'>
<method selector='colors'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='endPoint'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='locations'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='setColors:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='colors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEndPoint:'>
<arg declared_type64='CGPoint' index='0' name='endPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocations:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='locations' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartPoint:'>
<arg declared_type64='CGPoint' index='0' name='startPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setType:'>
<arg declared_type64='CAGradientLayerType _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startPoint'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='type'>
<retval declared_type64='CAGradientLayerType _Nonnull' type64='@'/>
</method>
</class>
<class name='CAKeyframeAnimation'>
<method selector='biasValues'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='calculationMode'>
<retval declared_type64='CAAnimationCalculationMode _Nonnull' type64='@'/>
</method>
<method selector='continuityValues'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='keyTimes'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='path'>
<retval declared_type64='CGPathRef _Nullable' type64='^{CGPath=}'/>
</method>
<method selector='rotationMode'>
<retval declared_type64='CAAnimationRotationMode _Nullable' type64='@'/>
</method>
<method selector='setBiasValues:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='biasValues' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCalculationMode:'>
<arg declared_type64='CAAnimationCalculationMode _Nonnull' index='0' name='calculationMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContinuityValues:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='continuityValues' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyTimes:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='keyTimes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPath:'>
<arg declared_type64='CGPathRef _Nullable' index='0' name='path' type64='^{CGPath=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRotationMode:'>
<arg declared_type64='CAAnimationRotationMode _Nullable' index='0' name='rotationMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTensionValues:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='tensionValues' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimingFunctions:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='timingFunctions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValues:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='values' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tensionValues'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='timingFunctions'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='values'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='CALayer'>
<method selector='actionForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='actions'>
<retval declared_type64='NSDictionary&gt; * _Nullable' type64='@'/>
</method>
<method selector='addAnimation:forKey:'>
<arg declared_type64='CAAnimation * _Nonnull' index='0' name='anim' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addSublayer:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='affineTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='allowsEdgeAntialiasing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsGroupOpacity'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='anchorPoint'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='anchorPointZ'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='animationForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='__kindof CAAnimation * _Nullable' type64='@'/>
</method>
<method selector='animationKeys'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='backgroundFilters'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='borderColor'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='borderWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='compositingFilter'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='containsPoint:'>
<arg declared_type64='CGPoint' index='0' name='p' type64='{CGPoint=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contents'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='contentsAreFlipped'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contentsCenter'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentsFormat'>
<retval declared_type64='CALayerContentsFormat _Nonnull' type64='@'/>
</method>
<method selector='contentsGravity'>
<retval declared_type64='CALayerContentsGravity _Nonnull' type64='@'/>
</method>
<method selector='contentsRect'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentsScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='convertPoint:fromLayer:'>
<arg declared_type64='CGPoint' index='0' name='p' type64='{CGPoint=dd}'/>
<arg declared_type64='CALayer * _Nullable' index='1' name='l' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toLayer:'>
<arg declared_type64='CGPoint' index='0' name='p' type64='{CGPoint=dd}'/>
<arg declared_type64='CALayer * _Nullable' index='1' name='l' type64='@'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromLayer:'>
<arg declared_type64='CGRect' index='0' name='r' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CALayer * _Nullable' index='1' name='l' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toLayer:'>
<arg declared_type64='CGRect' index='0' name='r' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CALayer * _Nullable' index='1' name='l' type64='@'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertTime:fromLayer:'>
<arg declared_type64='CFTimeInterval' index='0' name='t' type64='d'/>
<arg declared_type64='CALayer * _Nullable' index='1' name='l' type64='@'/>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='convertTime:toLayer:'>
<arg declared_type64='CFTimeInterval' index='0' name='t' type64='d'/>
<arg declared_type64='CALayer * _Nullable' index='1' name='l' type64='@'/>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='cornerRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='defaultActionForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='defaultValueForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='display'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displayIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInContext:'>
<arg declared_type64='CGContextRef _Nonnull' index='0' name='ctx' type64='^{CGContext=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawsAsynchronously'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='edgeAntialiasingMask'>
<retval declared_type64='CAEdgeAntialiasingMask' type64='I'/>
</method>
<method selector='filters'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='frame'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='hitTest:'>
<arg declared_type64='CGPoint' index='0' name='p' type64='{CGPoint=dd}'/>
<retval declared_type64='__kindof CALayer * _Nullable' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithLayer:'>
<arg declared_type64='id _Nonnull' index='0' name='layer' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertSublayer:above:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='CALayer * _Nullable' index='1' name='sibling' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSublayer:atIndex:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='unsigned int' index='1' name='idx' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSublayer:below:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='CALayer * _Nullable' index='1' name='sibling' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isDoubleSided'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isGeometryFlipped'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='layer'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='layoutIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutSublayers'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='magnificationFilter'>
<retval declared_type64='CALayerContentsFilter _Nonnull' type64='@'/>
</method>
<method selector='mask'>
<retval declared_type64='__kindof CALayer * _Nullable' type64='@'/>
</method>
<method selector='maskedCorners'>
<retval declared_type64='CACornerMask' type64='Q'/>
</method>
<method selector='masksToBounds'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='minificationFilter'>
<retval declared_type64='CALayerContentsFilter _Nonnull' type64='@'/>
</method>
<method selector='minificationFilterBias'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='modelLayer'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='needsDisplay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='needsDisplayForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='needsDisplayOnBoundsChange'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='needsLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='opacity'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='position'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='preferredFrameSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='presentationLayer'>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='rasterizationScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='removeAllAnimations'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAnimationForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeFromSuperlayer'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderInContext:'>
<arg declared_type64='CGContextRef _Nonnull' index='0' name='ctx' type64='^{CGContext=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceSublayer:with:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='oldLayer' type64='@'/>
<arg declared_type64='CALayer * _Nonnull' index='1' name='newLayer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollPoint:'>
<arg declared_type64='CGPoint' index='0' name='p' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollRectToVisible:'>
<arg declared_type64='CGRect' index='0' name='r' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setActions:'>
<arg declared_type64='NSDictionary&gt; * _Nullable' index='0' name='actions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAffineTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='m' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsEdgeAntialiasing:'>
<arg declared_type64='BOOL' index='0' name='allowsEdgeAntialiasing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsGroupOpacity:'>
<arg declared_type64='BOOL' index='0' name='allowsGroupOpacity' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnchorPoint:'>
<arg declared_type64='CGPoint' index='0' name='anchorPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnchorPointZ:'>
<arg declared_type64='CGFloat' index='0' name='anchorPointZ' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='CGColorRef _Nullable' index='0' name='backgroundColor' type64='^{CGColor=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundFilters:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='backgroundFilters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBorderColor:'>
<arg declared_type64='CGColorRef _Nullable' index='0' name='borderColor' type64='^{CGColor=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBorderWidth:'>
<arg declared_type64='CGFloat' index='0' name='borderWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBounds:'>
<arg declared_type64='CGRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCompositingFilter:'>
<arg declared_type64='id _Nullable' index='0' name='compositingFilter' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContents:'>
<arg declared_type64='id _Nullable' index='0' name='contents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentsCenter:'>
<arg declared_type64='CGRect' index='0' name='contentsCenter' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentsFormat:'>
<arg declared_type64='CALayerContentsFormat _Nonnull' index='0' name='contentsFormat' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentsGravity:'>
<arg declared_type64='CALayerContentsGravity _Nonnull' index='0' name='contentsGravity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentsRect:'>
<arg declared_type64='CGRect' index='0' name='contentsRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentsScale:'>
<arg declared_type64='CGFloat' index='0' name='contentsScale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCornerRadius:'>
<arg declared_type64='CGFloat' index='0' name='cornerRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleSided:'>
<arg declared_type64='BOOL' index='0' name='doubleSided' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsAsynchronously:'>
<arg declared_type64='BOOL' index='0' name='drawsAsynchronously' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEdgeAntialiasingMask:'>
<arg declared_type64='CAEdgeAntialiasingMask' index='0' name='edgeAntialiasingMask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFilters:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='filters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGeometryFlipped:'>
<arg declared_type64='BOOL' index='0' name='geometryFlipped' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMagnificationFilter:'>
<arg declared_type64='CALayerContentsFilter _Nonnull' index='0' name='magnificationFilter' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMask:'>
<arg declared_type64='__kindof CALayer * _Nullable' index='0' name='mask' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaskedCorners:'>
<arg declared_type64='CACornerMask' index='0' name='maskedCorners' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMasksToBounds:'>
<arg declared_type64='BOOL' index='0' name='masksToBounds' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinificationFilter:'>
<arg declared_type64='CALayerContentsFilter _Nonnull' index='0' name='minificationFilter' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinificationFilterBias:'>
<arg declared_type64='float' index='0' name='minificationFilterBias' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsDisplay'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsDisplayInRect:'>
<arg declared_type64='CGRect' index='0' name='r' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsDisplayOnBoundsChange:'>
<arg declared_type64='BOOL' index='0' name='needsDisplayOnBoundsChange' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type64='float' index='0' name='opacity' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpaque:'>
<arg declared_type64='BOOL' index='0' name='opaque' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPosition:'>
<arg declared_type64='CGPoint' index='0' name='position' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRasterizationScale:'>
<arg declared_type64='CGFloat' index='0' name='rasterizationScale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type64='CGColorRef _Nullable' index='0' name='shadowColor' type64='^{CGColor=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowOffset:'>
<arg declared_type64='CGSize' index='0' name='shadowOffset' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowOpacity:'>
<arg declared_type64='float' index='0' name='shadowOpacity' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowPath:'>
<arg declared_type64='CGPathRef _Nullable' index='0' name='shadowPath' type64='^{CGPath=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowRadius:'>
<arg declared_type64='CGFloat' index='0' name='shadowRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldRasterize:'>
<arg declared_type64='BOOL' index='0' name='shouldRasterize' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStyle:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='style' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSublayerTransform:'>
<arg declared_type64='CATransform3D' index='0' name='sublayerTransform' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSublayers:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='sublayers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type64='CATransform3D' index='0' name='transform' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZPosition:'>
<arg declared_type64='CGFloat' index='0' name='zPosition' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shadowColor'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='shadowOffset'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='shadowOpacity'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='shadowPath'>
<retval declared_type64='CGPathRef _Nullable' type64='^{CGPath=}'/>
</method>
<method selector='shadowRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='shouldArchiveValueForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldRasterize'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='style'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='sublayerTransform'>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</method>
<method selector='sublayers'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='superlayer'>
<retval declared_type64='CALayer * _Nullable' type64='@'/>
</method>
<method selector='transform'>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</method>
<method selector='visibleRect'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='zPosition'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='CAMediaTimingFunction'>
<method class_method='true' selector='functionWithControlPoints::::'>
<arg declared_type64='float' index='0' name='c1x' type64='f'/>
<arg declared_type64='float' index='1' name='c1y' type64='f'/>
<arg declared_type64='float' index='2' name='c2x' type64='f'/>
<arg declared_type64='float' index='3' name='c2y' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='functionWithName:'>
<arg declared_type64='CAMediaTimingFunctionName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='getControlPointAtIndex:values:'>
<arg declared_type64='size_t' index='0' name='idx' type64='Q'/>
<arg declared_type64='float*' index='1' name='ptr' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithControlPoints::::'>
<arg declared_type64='float' index='0' name='c1x' type64='f'/>
<arg declared_type64='float' index='1' name='c1y' type64='f'/>
<arg declared_type64='float' index='2' name='c2x' type64='f'/>
<arg declared_type64='float' index='3' name='c2y' type64='f'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='CAPropertyAnimation'>
<method class_method='true' selector='animationWithKeyPath:'>
<arg declared_type64='NSString * _Nullable' index='0' name='path' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isAdditive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isCumulative'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyPath'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setAdditive:'>
<arg declared_type64='BOOL' index='0' name='additive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCumulative:'>
<arg declared_type64='BOOL' index='0' name='cumulative' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyPath:'>
<arg declared_type64='NSString * _Nullable' index='0' name='keyPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValueFunction:'>
<arg declared_type64='CAValueFunction * _Nullable' index='0' name='valueFunction' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='valueFunction'>
<retval declared_type64='CAValueFunction * _Nullable' type64='@'/>
</method>
</class>
<class name='CAReplicatorLayer'>
<method selector='instanceAlphaOffset'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='instanceBlueOffset'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='instanceColor'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='instanceCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='instanceDelay'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='instanceGreenOffset'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='instanceRedOffset'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='instanceTransform'>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</method>
<method selector='preservesDepth'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setInstanceAlphaOffset:'>
<arg declared_type64='float' index='0' name='instanceAlphaOffset' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInstanceBlueOffset:'>
<arg declared_type64='float' index='0' name='instanceBlueOffset' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInstanceColor:'>
<arg declared_type64='CGColorRef _Nullable' index='0' name='instanceColor' type64='^{CGColor=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInstanceCount:'>
<arg declared_type64='NSInteger' index='0' name='instanceCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInstanceDelay:'>
<arg declared_type64='CFTimeInterval' index='0' name='instanceDelay' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInstanceGreenOffset:'>
<arg declared_type64='float' index='0' name='instanceGreenOffset' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInstanceRedOffset:'>
<arg declared_type64='float' index='0' name='instanceRedOffset' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInstanceTransform:'>
<arg declared_type64='CATransform3D' index='0' name='instanceTransform' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreservesDepth:'>
<arg declared_type64='BOOL' index='0' name='preservesDepth' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CAScrollLayer'>
<method selector='scrollMode'>
<retval declared_type64='CAScrollLayerScrollMode _Nonnull' type64='@'/>
</method>
<method selector='scrollToPoint:'>
<arg declared_type64='CGPoint' index='0' name='p' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollToRect:'>
<arg declared_type64='CGRect' index='0' name='r' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollMode:'>
<arg declared_type64='CAScrollLayerScrollMode _Nonnull' index='0' name='scrollMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CAShapeLayer'>
<method selector='fillColor'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='fillRule'>
<retval declared_type64='CAShapeLayerFillRule _Nonnull' type64='@'/>
</method>
<method selector='lineCap'>
<retval declared_type64='CAShapeLayerLineCap _Nonnull' type64='@'/>
</method>
<method selector='lineDashPattern'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='lineDashPhase'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lineJoin'>
<retval declared_type64='CAShapeLayerLineJoin _Nonnull' type64='@'/>
</method>
<method selector='lineWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='miterLimit'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='path'>
<retval declared_type64='CGPathRef _Nullable' type64='^{CGPath=}'/>
</method>
<method selector='setFillColor:'>
<arg declared_type64='CGColorRef _Nullable' index='0' name='fillColor' type64='^{CGColor=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFillRule:'>
<arg declared_type64='CAShapeLayerFillRule _Nonnull' index='0' name='fillRule' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineCap:'>
<arg declared_type64='CAShapeLayerLineCap _Nonnull' index='0' name='lineCap' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineDashPattern:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='lineDashPattern' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineDashPhase:'>
<arg declared_type64='CGFloat' index='0' name='lineDashPhase' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineJoin:'>
<arg declared_type64='CAShapeLayerLineJoin _Nonnull' index='0' name='lineJoin' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type64='CGFloat' index='0' name='lineWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMiterLimit:'>
<arg declared_type64='CGFloat' index='0' name='miterLimit' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPath:'>
<arg declared_type64='CGPathRef _Nullable' index='0' name='path' type64='^{CGPath=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStrokeColor:'>
<arg declared_type64='CGColorRef _Nullable' index='0' name='strokeColor' type64='^{CGColor=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStrokeEnd:'>
<arg declared_type64='CGFloat' index='0' name='strokeEnd' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStrokeStart:'>
<arg declared_type64='CGFloat' index='0' name='strokeStart' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='strokeColor'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='strokeEnd'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='strokeStart'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='CASpringAnimation'>
<method selector='damping'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='initialVelocity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='mass'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setDamping:'>
<arg declared_type64='CGFloat' index='0' name='damping' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInitialVelocity:'>
<arg declared_type64='CGFloat' index='0' name='initialVelocity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMass:'>
<arg declared_type64='CGFloat' index='0' name='mass' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStiffness:'>
<arg declared_type64='CGFloat' index='0' name='stiffness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='settlingDuration'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='stiffness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='CATextLayer'>
<method selector='alignmentMode'>
<retval declared_type64='CATextLayerAlignmentMode _Nonnull' type64='@'/>
</method>
<method selector='allowsFontSubpixelQuantization'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='font'>
<retval declared_type64='CFTypeRef _Nullable' type64='@'/>
</method>
<method selector='fontSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='foregroundColor'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='isWrapped'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAlignmentMode:'>
<arg declared_type64='CATextLayerAlignmentMode _Nonnull' index='0' name='alignmentMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsFontSubpixelQuantization:'>
<arg declared_type64='BOOL' index='0' name='allowsFontSubpixelQuantization' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:'>
<arg declared_type64='CFTypeRef _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFontSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setForegroundColor:'>
<arg declared_type64='CGColorRef _Nullable' index='0' name='foregroundColor' type64='^{CGColor=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setString:'>
<arg declared_type64='id _Nullable' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTruncationMode:'>
<arg declared_type64='CATextLayerTruncationMode _Nonnull' index='0' name='truncationMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWrapped:'>
<arg declared_type64='BOOL' index='0' name='wrapped' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='string'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='truncationMode'>
<retval declared_type64='CATextLayerTruncationMode _Nonnull' type64='@'/>
</method>
</class>
<class name='CATiledLayer'>
<method class_method='true' selector='fadeDuration'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='levelsOfDetail'>
<retval declared_type64='size_t' type64='Q'/>
</method>
<method selector='levelsOfDetailBias'>
<retval declared_type64='size_t' type64='Q'/>
</method>
<method selector='setLevelsOfDetail:'>
<arg declared_type64='size_t' index='0' name='levelsOfDetail' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLevelsOfDetailBias:'>
<arg declared_type64='size_t' index='0' name='levelsOfDetailBias' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTileSize:'>
<arg declared_type64='CGSize' index='0' name='tileSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tileSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
</class>
<class name='CATransaction'>
<method class_method='true' selector='animationDuration'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='animationTimingFunction'>
<retval declared_type64='CAMediaTimingFunction * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='begin'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='commit'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='completionBlock'>
<retval declared_type64='void (^ _Nullable)(void)' function_pointer='true' type64='@?'>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method class_method='true' selector='disableActions'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='flush'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='lock'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationDuration:'>
<arg declared_type64='CFTimeInterval' index='0' name='dur' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationTimingFunction:'>
<arg declared_type64='CAMediaTimingFunction * _Nullable' index='0' name='function' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setCompletionBlock:'>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='0' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setDisableActions:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setValue:forKey:'>
<arg declared_type64='id _Nullable' index='0' name='anObject' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='unlock'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='valueForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='CATransition'>
<method selector='endProgress'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setEndProgress:'>
<arg declared_type64='float' index='0' name='endProgress' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartProgress:'>
<arg declared_type64='float' index='0' name='startProgress' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSubtype:'>
<arg declared_type64='CATransitionSubtype _Nullable' index='0' name='subtype' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setType:'>
<arg declared_type64='CATransitionType _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startProgress'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='subtype'>
<retval declared_type64='CATransitionSubtype _Nullable' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='CATransitionType _Nonnull' type64='@'/>
</method>
</class>
<class name='CAValueFunction'>
<method class_method='true' selector='functionWithName:'>
<arg declared_type64='CAValueFunctionName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='CAValueFunctionName _Nonnull' type64='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='actionForLayer:forKey:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='animationDidStart:'>
<arg declared_type64='CAAnimation * _Nonnull' index='0' name='anim' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationDidStop:finished:'>
<arg declared_type64='CAAnimation * _Nonnull' index='0' name='anim' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='autoreverses'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='beginTime'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='displayLayer:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawLayer:inContext:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='CGContextRef _Nonnull' index='1' name='ctx' type64='^{CGContext=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='duration'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='fillMode'>
<retval declared_type64='CAMediaTimingFillMode _Nonnull' type64='@'/>
</method>
<method selector='layerWillDraw:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutSublayersOfLayer:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='repeatCount'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='repeatDuration'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='runActionForKey:object:arguments:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='event' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='anObject' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='dict' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoreverses:'>
<arg declared_type64='BOOL' index='0' name='autoreverses' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBeginTime:'>
<arg declared_type64='CFTimeInterval' index='0' name='beginTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDuration:'>
<arg declared_type64='CFTimeInterval' index='0' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFillMode:'>
<arg declared_type64='CAMediaTimingFillMode _Nonnull' index='0' name='fillMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepeatCount:'>
<arg declared_type64='float' index='0' name='repeatCount' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepeatDuration:'>
<arg declared_type64='CFTimeInterval' index='0' name='repeatDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type64='float' index='0' name='speed' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeOffset:'>
<arg declared_type64='CFTimeInterval' index='0' name='timeOffset' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speed'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='timeOffset'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
</class>
<class name='NSValue'>
<method selector='CATransform3DValue'>
<retval declared_type64='CATransform3D' type64='{CATransform3D=dddddddddddddddd}'/>
</method>
<method class_method='true' selector='valueWithCATransform3D:'>
<arg declared_type64='CATransform3D' index='0' name='t' type64='{CATransform3D=dddddddddddddddd}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
</class>
<informal_protocol name='CAAction'>
<method selector='runActionForKey:object:arguments:' type64='v40@0:8@16@24@32'>
<arg declared_type64='NSString * _Nonnull' index='0' name='event' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='anObject' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='dict' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='CAAnimationDelegate'>
<method selector='animationDidStart:' type64='v24@0:8@16'>
<arg declared_type64='CAAnimation * _Nonnull' index='0' name='anim' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationDidStop:finished:' type64='v28@0:8@16B24'>
<arg declared_type64='CAAnimation * _Nonnull' index='0' name='anim' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='CALayerDelegate'>
<method selector='actionForLayer:forKey:' type64='@32@0:8@16@24'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='displayLayer:' type64='v24@0:8@16'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawLayer:inContext:' type64='v32@0:8@16^{CGContext=}24'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='CGContextRef _Nonnull' index='1' name='ctx' type64='^{CGContext=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layerWillDraw:' type64='v24@0:8@16'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutSublayersOfLayer:' type64='v24@0:8@16'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='CAMediaTiming'>
<method selector='autoreverses' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='beginTime' type64='d16@0:8'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='duration' type64='d16@0:8'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='fillMode' type64='@16@0:8'>
<retval declared_type64='CAMediaTimingFillMode _Nonnull' type64='@'/>
</method>
<method selector='repeatCount' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='repeatDuration' type64='d16@0:8'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='setAutoreverses:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='autoreverses' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBeginTime:' type64='v24@0:8d16'>
<arg declared_type64='CFTimeInterval' index='0' name='beginTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDuration:' type64='v24@0:8d16'>
<arg declared_type64='CFTimeInterval' index='0' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFillMode:' type64='v24@0:8@16'>
<arg declared_type64='CAMediaTimingFillMode _Nonnull' index='0' name='fillMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepeatCount:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='repeatCount' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepeatDuration:' type64='v24@0:8d16'>
<arg declared_type64='CFTimeInterval' index='0' name='repeatDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpeed:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='speed' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeOffset:' type64='v24@0:8d16'>
<arg declared_type64='CFTimeInterval' index='0' name='timeOffset' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speed' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='timeOffset' type64='d16@0:8'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
</informal_protocol>
</signatures>
