<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='AVAudio3DAngularOrientation' type64='{AVAudio3DAngularOrientation=&quot;yaw&quot;f&quot;pitch&quot;f&quot;roll&quot;f}'>
<field declared_type64='float' name='yaw' type64='f'/>
<field declared_type64='float' name='pitch' type64='f'/>
<field declared_type64='float' name='roll' type64='f'/>
</struct>
<struct name='AVAudio3DPoint' type64='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
<field declared_type64='float' name='z' type64='f'/>
</struct>
<struct name='AVAudio3DVector' type64='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
<field declared_type64='float' name='z' type64='f'/>
</struct>
<struct name='AVAudio3DVectorOrientation' type64='{AVAudio3DVectorOrientation=&quot;forward&quot;{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;up&quot;{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}'>
<field declared_type64='AVAudio3DVector' name='forward' type64='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field declared_type64='AVAudio3DVector' name='up' type64='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
</struct>
<struct name='AVAudioConverterPrimeInfo' type64='{AVAudioConverterPrimeInfo=&quot;leadingFrames&quot;I&quot;trailingFrames&quot;I}'>
<field declared_type64='AVAudioFrameCount' name='leadingFrames' type64='I'/>
<field declared_type64='AVAudioFrameCount' name='trailingFrames' type64='I'/>
</struct>
<struct name='AVBeatRange' type64='{_AVBeatRange=&quot;start&quot;d&quot;length&quot;d}'>
<field declared_type64='AVMusicTimeStamp' name='start' type64='d'/>
<field declared_type64='AVMusicTimeStamp' name='length' type64='d'/>
</struct>
<constant const='true' declared_type64='NSString*' name='AVAudioBitRateStrategy_Constant' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVAudioBitRateStrategy_LongTermAverage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVAudioBitRateStrategy_Variable' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVAudioBitRateStrategy_VariableConstrained' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioEngineConfigurationChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionCategoryAmbient' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionCategoryMultiRoute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionCategoryPlayAndRecord' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionCategoryPlayback' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionCategoryRecord' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionCategorySoloAmbient' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionInterruptionNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionInterruptionOptionKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionInterruptionTypeKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionLocationLower' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionLocationUpper' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionMediaServicesWereLostNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionMediaServicesWereResetNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionModeDefault' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionModeGameChat' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionModeMeasurement' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionModeMoviePlayback' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionModeSpokenAudio' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionModeVideoChat' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionModeVideoRecording' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionModeVoiceChat' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionOrientationBack' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionOrientationBottom' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionOrientationFront' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionOrientationLeft' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionOrientationRight' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionOrientationTop' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPolarPatternCardioid' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPolarPatternOmnidirectional' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPolarPatternSubcardioid' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortAirPlay' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortBluetoothA2DP' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortBluetoothHFP' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortBluetoothLE' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortBuiltInMic' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortBuiltInReceiver' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortBuiltInSpeaker' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortCarAudio' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortHDMI' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortHeadphones' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortHeadsetMic' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortLineIn' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortLineOut' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionPortUSBAudio' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionRouteChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionRouteChangePreviousRouteKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionRouteChangeReasonKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionSilenceSecondaryAudioHintNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioSessionSilenceSecondaryAudioHintTypeKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitComponentTagsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitManufacturerNameApple' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeEffect' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeFormatConverter' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeGenerator' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeMIDIProcessor' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeMixer' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeMusicDevice' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeMusicEffect' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeOfflineEffect' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeOutput' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypePanner' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVChannelLayoutKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderAudioQualityForVBRKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderAudioQualityKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderBitDepthHintKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderBitRateKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderBitRatePerChannelKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderBitRateStrategyKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFormatIDKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVLinearPCMBitDepthKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVLinearPCMIsBigEndianKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVLinearPCMIsFloatKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVLinearPCMIsNonInterleaved' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVNumberOfChannelsKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVSampleRateConverterAlgorithmKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVSampleRateConverterAlgorithm_Mastering' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVSampleRateConverterAlgorithm_MinimumPhase' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVSampleRateConverterAlgorithm_Normal' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVSampleRateConverterAudioQualityKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVSampleRateKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVSpeechSynthesisIPANotationAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVSpeechSynthesisVoiceIdentifierAlex' type64='@'/>
<constant const='true' declared_type64='float' name='AVSpeechUtteranceDefaultSpeechRate' type64='f'/>
<constant const='true' declared_type64='float' name='AVSpeechUtteranceMaximumSpeechRate' type64='f'/>
<constant const='true' declared_type64='float' name='AVSpeechUtteranceMinimumSpeechRate' type64='f'/>
<enum name='AVAUDIOENGINE_HAVE_MUSICPLAYER' value64='1'/>
<enum name='AVAUDIOFORMAT_HAVE_CMFORMATDESCRIPTION' value64='1'/>
<enum name='AVAUDIOIONODE_HAVE_AUDIOUNIT' value64='1'/>
<enum name='AVAUDIOUNITCOMPONENT_HAVE_AUDIOCOMPONENT' value64='1'/>
<enum name='AVAUDIOUNIT_HAVE_AUDIOUNIT' value64='1'/>
<enum name='AVAudio3DMixingRenderingAlgorithmEqualPowerPanning' value64='0'/>
<enum name='AVAudio3DMixingRenderingAlgorithmHRTF' value64='2'/>
<enum name='AVAudio3DMixingRenderingAlgorithmSoundField' value64='3'/>
<enum name='AVAudio3DMixingRenderingAlgorithmSphericalHead' value64='1'/>
<enum name='AVAudio3DMixingRenderingAlgorithmStereoPassThrough' value64='5'/>
<enum name='AVAudioConverterInputStatus_EndOfStream' value64='2'/>
<enum name='AVAudioConverterInputStatus_HaveData' value64='0'/>
<enum name='AVAudioConverterInputStatus_NoDataNow' value64='1'/>
<enum name='AVAudioConverterOutputStatus_EndOfStream' value64='2'/>
<enum name='AVAudioConverterOutputStatus_Error' value64='3'/>
<enum name='AVAudioConverterOutputStatus_HaveData' value64='0'/>
<enum name='AVAudioConverterOutputStatus_InputRanDry' value64='1'/>
<enum name='AVAudioConverterPrimeMethod_None' value64='2'/>
<enum name='AVAudioConverterPrimeMethod_Normal' value64='1'/>
<enum name='AVAudioConverterPrimeMethod_Pre' value64='0'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelExponential' value64='1'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelInverse' value64='2'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelLinear' value64='3'/>
<enum name='AVAudioOtherFormat' value64='0'/>
<enum name='AVAudioPCMFormatFloat32' value64='1'/>
<enum name='AVAudioPCMFormatFloat64' value64='2'/>
<enum name='AVAudioPCMFormatInt16' value64='3'/>
<enum name='AVAudioPCMFormatInt32' value64='4'/>
<enum name='AVAudioPlayerNodeBufferInterrupts' value64='2'/>
<enum name='AVAudioPlayerNodeBufferInterruptsAtLoop' value64='4'/>
<enum name='AVAudioPlayerNodeBufferLoops' value64='1'/>
<enum name='AVAudioQualityHigh' value64='96'/>
<enum name='AVAudioQualityLow' value64='32'/>
<enum name='AVAudioQualityMax' value64='127'/>
<enum name='AVAudioQualityMedium' value64='64'/>
<enum name='AVAudioQualityMin' value64='0'/>
<enum name='AVAudioSessionCategoryOptionAllowAirPlay' value64='64'/>
<enum name='AVAudioSessionCategoryOptionAllowBluetooth' value64='4'/>
<enum name='AVAudioSessionCategoryOptionAllowBluetoothA2DP' value64='32'/>
<enum name='AVAudioSessionCategoryOptionDefaultToSpeaker' value64='8'/>
<enum name='AVAudioSessionCategoryOptionDuckOthers' value64='2'/>
<enum name='AVAudioSessionCategoryOptionInterruptSpokenAudioAndMixWithOthers' value64='17'/>
<enum name='AVAudioSessionCategoryOptionMixWithOthers' value64='1'/>
<enum name='AVAudioSessionErrorCodeBadParam' value64='-50'/>
<enum name='AVAudioSessionErrorCodeCannotInterruptOthers' value64='560557684'/>
<enum name='AVAudioSessionErrorCodeCannotStartPlaying' value64='561015905'/>
<enum name='AVAudioSessionErrorCodeCannotStartRecording' value64='561145187'/>
<enum name='AVAudioSessionErrorCodeIncompatibleCategory' value64='560161140'/>
<enum name='AVAudioSessionErrorCodeIsBusy' value64='560030580'/>
<enum name='AVAudioSessionErrorCodeMediaServicesFailed' value64='1836282486'/>
<enum name='AVAudioSessionErrorCodeMissingEntitlement' value64='1701737535'/>
<enum name='AVAudioSessionErrorCodeNone' value64='0'/>
<enum name='AVAudioSessionErrorCodeResourceNotAvailable' value64='561145203'/>
<enum name='AVAudioSessionErrorCodeSiriIsRecording' value64='1936290409'/>
<enum name='AVAudioSessionErrorCodeUnspecified' value64='2003329396'/>
<enum name='AVAudioSessionErrorInsufficientPriority' value64='561017449'/>
<enum name='AVAudioSessionInterruptionOptionShouldResume' value64='1'/>
<enum name='AVAudioSessionInterruptionTypeBegan' value64='1'/>
<enum name='AVAudioSessionInterruptionTypeEnded' value64='0'/>
<enum name='AVAudioSessionPortOverrideNone' value64='0'/>
<enum name='AVAudioSessionPortOverrideSpeaker' value64='1936747378'/>
<enum name='AVAudioSessionRouteChangeReasonCategoryChange' value64='3'/>
<enum name='AVAudioSessionRouteChangeReasonNewDeviceAvailable' value64='1'/>
<enum name='AVAudioSessionRouteChangeReasonNoSuitableRouteForCategory' value64='7'/>
<enum name='AVAudioSessionRouteChangeReasonOldDeviceUnavailable' value64='2'/>
<enum name='AVAudioSessionRouteChangeReasonOverride' value64='4'/>
<enum name='AVAudioSessionRouteChangeReasonRouteConfigurationChange' value64='8'/>
<enum name='AVAudioSessionRouteChangeReasonUnknown' value64='0'/>
<enum name='AVAudioSessionRouteChangeReasonWakeFromSleep' value64='6'/>
<enum name='AVAudioSessionSetActiveOptionNotifyOthersOnDeactivation' value64='1'/>
<enum name='AVAudioSessionSilenceSecondaryAudioHintTypeBegin' value64='1'/>
<enum name='AVAudioSessionSilenceSecondaryAudioHintTypeEnd' value64='0'/>
<enum name='AVAudioUnitDistortionPresetDrumsBitBrush' value64='0'/>
<enum name='AVAudioUnitDistortionPresetDrumsBufferBeats' value64='1'/>
<enum name='AVAudioUnitDistortionPresetDrumsLoFi' value64='2'/>
<enum name='AVAudioUnitDistortionPresetMultiBrokenSpeaker' value64='3'/>
<enum name='AVAudioUnitDistortionPresetMultiCellphoneConcert' value64='4'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated1' value64='5'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated2' value64='6'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated3' value64='7'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated4' value64='8'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedCubed' value64='10'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedFunk' value64='9'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedSquared' value64='11'/>
<enum name='AVAudioUnitDistortionPresetMultiEcho1' value64='12'/>
<enum name='AVAudioUnitDistortionPresetMultiEcho2' value64='13'/>
<enum name='AVAudioUnitDistortionPresetMultiEchoTight1' value64='14'/>
<enum name='AVAudioUnitDistortionPresetMultiEchoTight2' value64='15'/>
<enum name='AVAudioUnitDistortionPresetMultiEverythingIsBroken' value64='16'/>
<enum name='AVAudioUnitDistortionPresetSpeechAlienChatter' value64='17'/>
<enum name='AVAudioUnitDistortionPresetSpeechCosmicInterference' value64='18'/>
<enum name='AVAudioUnitDistortionPresetSpeechGoldenPi' value64='19'/>
<enum name='AVAudioUnitDistortionPresetSpeechRadioTower' value64='20'/>
<enum name='AVAudioUnitDistortionPresetSpeechWaves' value64='21'/>
<enum name='AVAudioUnitEQFilterTypeBandPass' value64='5'/>
<enum name='AVAudioUnitEQFilterTypeBandStop' value64='6'/>
<enum name='AVAudioUnitEQFilterTypeHighPass' value64='2'/>
<enum name='AVAudioUnitEQFilterTypeHighShelf' value64='8'/>
<enum name='AVAudioUnitEQFilterTypeLowPass' value64='1'/>
<enum name='AVAudioUnitEQFilterTypeLowShelf' value64='7'/>
<enum name='AVAudioUnitEQFilterTypeParametric' value64='0'/>
<enum name='AVAudioUnitEQFilterTypeResonantHighPass' value64='4'/>
<enum name='AVAudioUnitEQFilterTypeResonantHighShelf' value64='10'/>
<enum name='AVAudioUnitEQFilterTypeResonantLowPass' value64='3'/>
<enum name='AVAudioUnitEQFilterTypeResonantLowShelf' value64='9'/>
<enum name='AVAudioUnitReverbPresetCathedral' value64='8'/>
<enum name='AVAudioUnitReverbPresetLargeChamber' value64='7'/>
<enum name='AVAudioUnitReverbPresetLargeHall' value64='4'/>
<enum name='AVAudioUnitReverbPresetLargeHall2' value64='12'/>
<enum name='AVAudioUnitReverbPresetLargeRoom' value64='2'/>
<enum name='AVAudioUnitReverbPresetLargeRoom2' value64='9'/>
<enum name='AVAudioUnitReverbPresetMediumChamber' value64='6'/>
<enum name='AVAudioUnitReverbPresetMediumHall' value64='3'/>
<enum name='AVAudioUnitReverbPresetMediumHall2' value64='10'/>
<enum name='AVAudioUnitReverbPresetMediumHall3' value64='11'/>
<enum name='AVAudioUnitReverbPresetMediumRoom' value64='1'/>
<enum name='AVAudioUnitReverbPresetPlate' value64='5'/>
<enum name='AVAudioUnitReverbPresetSmallRoom' value64='0'/>
<enum name='AVMusicSequenceLoadSMF_ChannelsToTracks' value64='1'/>
<enum name='AVMusicSequenceLoadSMF_PreserveTracks' value64='0'/>
<enum name='AVMusicTrackLoopCountForever' value64='-1'/>
<enum name='AVSpeechBoundaryImmediate' value64='0'/>
<enum name='AVSpeechBoundaryWord' value64='1'/>
<enum name='AVSpeechSynthesisVoiceQualityDefault' value64='1'/>
<enum name='AVSpeechSynthesisVoiceQualityEnhanced' value64='2'/>
<function inline='true' name='AVAudioMake3DAngularOrientation'>
<arg declared_type64='float' name='yaw' type64='f'/>
<arg declared_type64='float' name='pitch' type64='f'/>
<arg declared_type64='float' name='roll' type64='f'/>
<retval declared_type64='AVAudio3DAngularOrientation' type64='{AVAudio3DAngularOrientation=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DPoint'>
<arg declared_type64='float' name='x' type64='f'/>
<arg declared_type64='float' name='y' type64='f'/>
<arg declared_type64='float' name='z' type64='f'/>
<retval declared_type64='AVAudio3DPoint' type64='{AVAudio3DPoint=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DVector'>
<arg declared_type64='float' name='x' type64='f'/>
<arg declared_type64='float' name='y' type64='f'/>
<arg declared_type64='float' name='z' type64='f'/>
<retval declared_type64='AVAudio3DVector' type64='{AVAudio3DPoint=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DVectorOrientation'>
<arg declared_type64='AVAudio3DVector' name='forward' type64='{AVAudio3DPoint=fff}'/>
<arg declared_type64='AVAudio3DVector' name='up' type64='{AVAudio3DPoint=fff}'/>
<retval declared_type64='AVAudio3DVectorOrientation' type64='{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}'/>
</function>
<function inline='true' name='AVMakeBeatRange'>
<arg declared_type64='AVMusicTimeStamp' name='startBeat' type64='d'/>
<arg declared_type64='AVMusicTimeStamp' name='lengthInBeats' type64='d'/>
<retval declared_type64='AVBeatRange' type64='{_AVBeatRange=dd}'/>
</function>
<class name='AVAudioBuffer'>
<method selector='audioBufferList'>
<retval const='true' declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
</method>
<method selector='format'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='mutableAudioBufferList'>
<retval declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
</method>
</class>
<class name='AVAudioChannelLayout'>
<method selector='channelCount'>
<retval declared_type64='AVAudioChannelCount' type64='I'/>
</method>
<method selector='initWithLayout:'>
<arg const='true' declared_type64='AudioChannelLayout * _Nonnull' index='0' name='layout' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithLayoutTag:'>
<arg declared_type64='AudioChannelLayoutTag' index='0' name='layoutTag' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEqual:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layout'>
<retval const='true' declared_type64='AudioChannelLayout * _Nonnull' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
</method>
<method selector='layoutTag'>
<retval declared_type64='AudioChannelLayoutTag' type64='I'/>
</method>
<method class_method='true' selector='layoutWithLayout:'>
<arg const='true' declared_type64='AudioChannelLayout * _Nonnull' index='0' name='layout' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layoutWithLayoutTag:'>
<arg declared_type64='AudioChannelLayoutTag' index='0' name='layoutTag' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioCompressedBuffer'>
<method selector='data'>
<retval declared_type64='void * _Nonnull' type64='^v'/>
</method>
<method selector='initWithFormat:packetCapacity:'>
<arg declared_type64='AVAudioFormat * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='AVAudioPacketCount' index='1' name='packetCapacity' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithFormat:packetCapacity:maximumPacketSize:'>
<arg declared_type64='AVAudioFormat * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='AVAudioPacketCount' index='1' name='packetCapacity' type64='I'/>
<arg declared_type64='NSInteger' index='2' name='maximumPacketSize' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maximumPacketSize'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='packetCapacity'>
<retval declared_type64='AVAudioPacketCount' type64='I'/>
</method>
<method selector='packetCount'>
<retval declared_type64='AVAudioPacketCount' type64='I'/>
</method>
<method selector='packetDescriptions'>
<retval declared_type64='AudioStreamPacketDescription * _Nullable' type64='^{AudioStreamPacketDescription=qII}'/>
</method>
<method selector='setPacketCount:'>
<arg declared_type64='AVAudioPacketCount' index='0' name='packetCount' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioConnectionPoint'>
<method selector='bus'>
<retval declared_type64='AVAudioNodeBus' type64='Q'/>
</method>
<method selector='initWithNode:bus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='node'>
<retval declared_type64='AVAudioNode * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAudioConverter'>
<method selector='applicableEncodeBitRates'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='applicableEncodeSampleRates'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='availableEncodeBitRates'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='availableEncodeChannelLayoutTags'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='availableEncodeSampleRates'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='bitRate'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='bitRateStrategy'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='channelMap'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='convertToBuffer:error:withInputFromBlock:'>
<arg declared_type64='AVAudioBuffer * _Nonnull' index='0' name='outputBuffer' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<arg declared_type64='AVAudioConverterInputBlock _Nonnull' function_pointer='true' index='2' name='inputBlock' type64='@?'>
<arg declared_type64='AVAudioPacketCount' type64='I'/>
<arg declared_type64='AVAudioConverterInputStatus * _Nonnull' type64='^q'/>
<retval declared_type64='AVAudioBuffer * _Nullable' type64='@'/>
</arg>
<retval declared_type64='AVAudioConverterOutputStatus' type64='q'/>
</method>
<method selector='convertToBuffer:fromBuffer:error:'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='outputBuffer' type64='@'/>
<arg const='true' declared_type64='AVAudioPCMBuffer * _Nonnull' index='1' name='inputBuffer' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dither'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='downmix'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initFromFormat:toFormat:'>
<arg declared_type64='AVAudioFormat * _Nonnull' index='0' name='fromFormat' type64='@'/>
<arg declared_type64='AVAudioFormat * _Nonnull' index='1' name='toFormat' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputFormat'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='magicCookie'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='maximumOutputPacketSize'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='outputFormat'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='primeInfo'>
<retval declared_type64='AVAudioConverterPrimeInfo' type64='{AVAudioConverterPrimeInfo=II}'/>
</method>
<method selector='primeMethod'>
<retval declared_type64='AVAudioConverterPrimeMethod' type64='q'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sampleRateConverterAlgorithm'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='sampleRateConverterQuality'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setBitRate:'>
<arg declared_type64='NSInteger' index='0' name='bitRate' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBitRateStrategy:'>
<arg declared_type64='NSString * _Nullable' index='0' name='bitRateStrategy' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setChannelMap:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='channelMap' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDither:'>
<arg declared_type64='BOOL' index='0' name='dither' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDownmix:'>
<arg declared_type64='BOOL' index='0' name='downmix' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMagicCookie:'>
<arg declared_type64='NSData * _Nullable' index='0' name='magicCookie' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrimeInfo:'>
<arg declared_type64='AVAudioConverterPrimeInfo' index='0' name='primeInfo' type64='{AVAudioConverterPrimeInfo=II}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrimeMethod:'>
<arg declared_type64='AVAudioConverterPrimeMethod' index='0' name='primeMethod' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSampleRateConverterAlgorithm:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='sampleRateConverterAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSampleRateConverterQuality:'>
<arg declared_type64='NSInteger' index='0' name='sampleRateConverterQuality' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioEngine'>
<method selector='attachNode:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='connect:to:format:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node1' type64='@'/>
<arg declared_type64='AVAudioNode * _Nonnull' index='1' name='node2' type64='@'/>
<arg declared_type64='AVAudioFormat * _Nullable' index='2' name='format' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='connect:to:fromBus:toBus:format:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node1' type64='@'/>
<arg declared_type64='AVAudioNode * _Nonnull' index='1' name='node2' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='2' name='bus1' type64='Q'/>
<arg declared_type64='AVAudioNodeBus' index='3' name='bus2' type64='Q'/>
<arg declared_type64='AVAudioFormat * _Nullable' index='4' name='format' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='connect:toConnectionPoints:fromBus:format:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='sourceNode' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='destNodes' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='2' name='sourceBus' type64='Q'/>
<arg declared_type64='AVAudioFormat * _Nullable' index='3' name='format' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='detachNode:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disconnectNodeInput:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disconnectNodeInput:bus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disconnectNodeOutput:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disconnectNodeOutput:bus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputConnectionPointForNode:inputBus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='AVAudioConnectionPoint * _Nullable' type64='@'/>
</method>
<method selector='isRunning'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mainMixerNode'>
<retval declared_type64='AVAudioMixerNode * _Nonnull' type64='@'/>
</method>
<method selector='musicSequence'>
<retval declared_type64='MusicSequence _Nullable' type64='^{OpaqueMusicSequence=}'/>
</method>
<method selector='outputConnectionPointsForNode:outputBus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='outputNode'>
<retval declared_type64='AVAudioOutputNode * _Nonnull' type64='@'/>
</method>
<method selector='pause'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepare'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMusicSequence:'>
<arg declared_type64='MusicSequence _Nullable' index='0' name='musicSequence' type64='^{OpaqueMusicSequence=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startAndReturnError:'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioEnvironmentDistanceAttenuationParameters'>
<method selector='distanceAttenuationModel'>
<retval declared_type64='AVAudioEnvironmentDistanceAttenuationModel' type64='q'/>
</method>
<method selector='maximumDistance'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='referenceDistance'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='rolloffFactor'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setDistanceAttenuationModel:'>
<arg declared_type64='AVAudioEnvironmentDistanceAttenuationModel' index='0' name='distanceAttenuationModel' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumDistance:'>
<arg declared_type64='float' index='0' name='maximumDistance' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReferenceDistance:'>
<arg declared_type64='float' index='0' name='referenceDistance' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRolloffFactor:'>
<arg declared_type64='float' index='0' name='rolloffFactor' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioEnvironmentNode'>
<method selector='applicableRenderingAlgorithms'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='distanceAttenuationParameters'>
<retval declared_type64='AVAudioEnvironmentDistanceAttenuationParameters * _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='listenerAngularOrientation'>
<retval declared_type64='AVAudio3DAngularOrientation' type64='{AVAudio3DAngularOrientation=fff}'/>
</method>
<method selector='listenerPosition'>
<retval declared_type64='AVAudio3DPoint' type64='{AVAudio3DPoint=fff}'/>
</method>
<method selector='listenerVectorOrientation'>
<retval declared_type64='AVAudio3DVectorOrientation' type64='{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}'/>
</method>
<method selector='nextAvailableInputBus'>
<retval declared_type64='AVAudioNodeBus' type64='Q'/>
</method>
<method selector='outputVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='reverbParameters'>
<retval declared_type64='AVAudioEnvironmentReverbParameters * _Nonnull' type64='@'/>
</method>
<method selector='setListenerAngularOrientation:'>
<arg declared_type64='AVAudio3DAngularOrientation' index='0' name='listenerAngularOrientation' type64='{AVAudio3DAngularOrientation=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setListenerPosition:'>
<arg declared_type64='AVAudio3DPoint' index='0' name='listenerPosition' type64='{AVAudio3DPoint=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setListenerVectorOrientation:'>
<arg declared_type64='AVAudio3DVectorOrientation' index='0' name='listenerVectorOrientation' type64='{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOutputVolume:'>
<arg declared_type64='float' index='0' name='outputVolume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioEnvironmentReverbParameters'>
<method selector='enable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='filterParameters'>
<retval declared_type64='AVAudioUnitEQFilterParameters * _Nonnull' type64='@'/>
</method>
<method selector='level'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='loadFactoryReverbPreset:'>
<arg declared_type64='AVAudioUnitReverbPreset' index='0' name='preset' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnable:'>
<arg declared_type64='BOOL' index='0' name='enable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLevel:'>
<arg declared_type64='float' index='0' name='level' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioFile'>
<method selector='fileFormat'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='framePosition'>
<retval declared_type64='AVAudioFramePosition' type64='q'/>
</method>
<method selector='initForReading:commonFormat:interleaved:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='AVAudioCommonFormat' index='1' name='format' type64='Q'/>
<arg declared_type64='BOOL' index='2' name='interleaved' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initForReading:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initForWriting:settings:commonFormat:interleaved:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='settings' type64='@'/>
<arg declared_type64='AVAudioCommonFormat' index='2' name='format' type64='Q'/>
<arg declared_type64='BOOL' index='3' name='interleaved' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initForWriting:settings:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='settings' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='length'>
<retval declared_type64='AVAudioFramePosition' type64='q'/>
</method>
<method selector='processingFormat'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='readIntoBuffer:error:'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readIntoBuffer:frameCount:error:'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='AVAudioFrameCount' index='1' name='frames' type64='I'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setFramePosition:'>
<arg declared_type64='AVAudioFramePosition' index='0' name='framePosition' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='url'>
<retval declared_type64='NSURL * _Nonnull' type64='@'/>
</method>
<method selector='writeFromBuffer:error:'>
<arg const='true' declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVAudioFormat'>
<method selector='channelCount'>
<retval declared_type64='AVAudioChannelCount' type64='I'/>
</method>
<method selector='channelLayout'>
<retval const='true' declared_type64='AVAudioChannelLayout * _Nullable' type64='@'/>
</method>
<method selector='commonFormat'>
<retval declared_type64='AVAudioCommonFormat' type64='Q'/>
</method>
<method selector='formatDescription'>
<retval declared_type64='CMAudioFormatDescriptionRef _Nonnull' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='initStandardFormatWithSampleRate:channelLayout:'>
<arg declared_type64='double' index='0' name='sampleRate' type64='d'/>
<arg declared_type64='AVAudioChannelLayout * _Nonnull' index='1' name='layout' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initStandardFormatWithSampleRate:channels:'>
<arg declared_type64='double' index='0' name='sampleRate' type64='d'/>
<arg declared_type64='AVAudioChannelCount' index='1' name='channels' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCMAudioFormatDescription:'>
<arg declared_type64='CMAudioFormatDescriptionRef _Nonnull' index='0' name='formatDescription' type64='^{opaqueCMFormatDescription=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCommonFormat:sampleRate:channels:interleaved:'>
<arg declared_type64='AVAudioCommonFormat' index='0' name='format' type64='Q'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<arg declared_type64='AVAudioChannelCount' index='2' name='channels' type64='I'/>
<arg declared_type64='BOOL' index='3' name='interleaved' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCommonFormat:sampleRate:interleaved:channelLayout:'>
<arg declared_type64='AVAudioCommonFormat' index='0' name='format' type64='Q'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<arg declared_type64='BOOL' index='2' name='interleaved' type64='B'/>
<arg declared_type64='AVAudioChannelLayout * _Nonnull' index='3' name='layout' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSettings:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='settings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithStreamDescription:'>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' index='0' name='asbd' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithStreamDescription:channelLayout:'>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' index='0' name='asbd' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type64='AVAudioChannelLayout * _Nullable' index='1' name='layout' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEqual:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isInterleaved'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isStandard'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='magicCookie'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='sampleRate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='setMagicCookie:'>
<arg declared_type64='NSData * _Nullable' index='0' name='magicCookie' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='settings'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='streamDescription'>
<retval const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
</method>
</class>
<class name='AVAudioIONode'>
<method selector='audioUnit'>
<retval declared_type64='AudioUnit _Nullable' type64='^{OpaqueAudioComponentInstance=}'/>
</method>
<method selector='presentationLatency'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
</class>
<class name='AVAudioMixerNode'>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='nextAvailableInputBus'>
<retval declared_type64='AVAudioNodeBus' type64='Q'/>
</method>
<method selector='outputVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setOutputVolume:'>
<arg declared_type64='float' index='0' name='outputVolume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioMixingDestination'>
<method selector='connectionPoint'>
<retval declared_type64='AVAudioConnectionPoint * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioNode'>
<method selector='engine'>
<retval declared_type64='AVAudioEngine * _Nullable' type64='@'/>
</method>
<method selector='inputFormatForBus:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='installTapOnBus:bufferSize:format:block:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<arg declared_type64='AVAudioFrameCount' index='1' name='bufferSize' type64='I'/>
<arg declared_type64='AVAudioFormat * _Nullable' index='2' name='format' type64='@'/>
<arg declared_type64='AVAudioNodeTapBlock _Nonnull' function_pointer='true' index='3' name='tapBlock' type64='@?'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' type64='@'/>
<arg declared_type64='AVAudioTime * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lastRenderTime'>
<retval declared_type64='AVAudioTime * _Nullable' type64='@'/>
</method>
<method selector='nameForInputBus:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='nameForOutputBus:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='numberOfInputs'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='numberOfOutputs'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='outputFormatForBus:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='removeTapOnBus:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioPCMBuffer'>
<method selector='floatChannelData'>
<retval const='true' declared_type64='float * _Nonnull * _Nullable' type64='^^f'/>
</method>
<method selector='frameCapacity'>
<retval declared_type64='AVAudioFrameCount' type64='I'/>
</method>
<method selector='frameLength'>
<retval declared_type64='AVAudioFrameCount' type64='I'/>
</method>
<method selector='initWithPCMFormat:frameCapacity:'>
<arg declared_type64='AVAudioFormat * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='AVAudioFrameCount' index='1' name='frameCapacity' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='int16ChannelData'>
<retval const='true' declared_type64='int16_t * _Nonnull * _Nullable' type64='^^s'/>
</method>
<method selector='int32ChannelData'>
<retval const='true' declared_type64='int32_t * _Nonnull * _Nullable' type64='^^i'/>
</method>
<method selector='setFrameLength:'>
<arg declared_type64='AVAudioFrameCount' index='0' name='frameLength' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stride'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
</class>
<class name='AVAudioPlayer'>
<method selector='averagePowerForChannel:'>
<arg declared_type64='NSUInteger' index='0' name='channelNumber' type64='Q'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='channelAssignments'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='currentTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='data'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deviceCurrentTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='duration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='enableRate'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='format'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithContentsOfURL:fileTypeHint:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='utiString' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:fileTypeHint:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='utiString' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isMeteringEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlaying'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='numberOfChannels'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='numberOfLoops'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='pan'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='pause'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='peakPowerForChannel:'>
<arg declared_type64='NSUInteger' index='0' name='channelNumber' type64='Q'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='play'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='playAtTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='time' type64='d'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setChannelAssignments:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='channelAssignments' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCurrentTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='currentTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnableRate:'>
<arg declared_type64='BOOL' index='0' name='enableRate' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMeteringEnabled:'>
<arg declared_type64='BOOL' index='0' name='meteringEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfLoops:'>
<arg declared_type64='NSInteger' index='0' name='numberOfLoops' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPan:'>
<arg declared_type64='float' index='0' name='pan' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:fadeDuration:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<arg declared_type64='NSTimeInterval' index='1' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='settings'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateMeters'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='url'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVAudioPlayerNode'>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='nodeTimeForPlayerTime:'>
<arg declared_type64='AVAudioTime * _Nonnull' index='0' name='playerTime' type64='@'/>
<retval declared_type64='AVAudioTime * _Nullable' type64='@'/>
</method>
<method selector='pause'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='play'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playAtTime:'>
<arg declared_type64='AVAudioTime * _Nullable' index='0' name='when' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playerTimeForNodeTime:'>
<arg declared_type64='AVAudioTime * _Nonnull' index='0' name='nodeTime' type64='@'/>
<retval declared_type64='AVAudioTime * _Nullable' type64='@'/>
</method>
<method selector='prepareWithFrameCount:'>
<arg declared_type64='AVAudioFrameCount' index='0' name='frameCount' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scheduleBuffer:atTime:options:completionHandler:'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='AVAudioTime * _Nullable' index='1' name='when' type64='@'/>
<arg declared_type64='AVAudioPlayerNodeBufferOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scheduleBuffer:completionHandler:'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scheduleFile:atTime:completionHandler:'>
<arg declared_type64='AVAudioFile * _Nonnull' index='0' name='file' type64='@'/>
<arg declared_type64='AVAudioTime * _Nullable' index='1' name='when' type64='@'/>
<arg declared_type64='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scheduleSegment:startingFrame:frameCount:atTime:completionHandler:'>
<arg declared_type64='AVAudioFile * _Nonnull' index='0' name='file' type64='@'/>
<arg declared_type64='AVAudioFramePosition' index='1' name='startFrame' type64='q'/>
<arg declared_type64='AVAudioFrameCount' index='2' name='numberFrames' type64='I'/>
<arg declared_type64='AVAudioTime * _Nullable' index='3' name='when' type64='@'/>
<arg declared_type64='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='4' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioSequencer'>
<method selector='beatsForHostTime:error:'>
<arg declared_type64='UInt64' index='0' name='inHostTime' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='AVMusicTimeStamp' type64='d'/>
</method>
<method selector='beatsForSeconds:'>
<arg declared_type64='NSTimeInterval' index='0' name='seconds' type64='d'/>
<retval declared_type64='AVMusicTimeStamp' type64='d'/>
</method>
<method selector='currentPositionInBeats'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='currentPositionInSeconds'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='dataWithSMPTEResolution:error:'>
<arg declared_type64='NSInteger' index='0' name='SMPTEResolution' type64='q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='hostTimeForBeats:error:'>
<arg declared_type64='AVMusicTimeStamp' index='0' name='inBeats' type64='d'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='UInt64' type64='Q'/>
</method>
<method selector='initWithAudioEngine:'>
<arg declared_type64='AVAudioEngine * _Nonnull' index='0' name='engine' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadFromData:options:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='AVMusicSequenceLoadOptions' index='1' name='options' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadFromURL:options:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='AVMusicSequenceLoadOptions' index='1' name='options' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='secondsForBeats:'>
<arg declared_type64='AVMusicTimeStamp' index='0' name='beats' type64='d'/>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='setCurrentPositionInBeats:'>
<arg declared_type64='NSTimeInterval' index='0' name='currentPositionInBeats' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCurrentPositionInSeconds:'>
<arg declared_type64='NSTimeInterval' index='0' name='currentPositionInSeconds' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startAndReturnError:'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tempoTrack'>
<retval declared_type64='AVMusicTrack * _Nonnull' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='userInfo'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='writeToURL:SMPTEResolution:replaceExisting:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='resolution' type64='q'/>
<arg declared_type64='BOOL' index='2' name='replace' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVAudioSession'>
<method selector='IOBufferDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='availableCategories'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='availableInputs'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='availableModes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='category'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='categoryOptions'>
<retval declared_type64='AVAudioSessionCategoryOptions' type64='Q'/>
</method>
<method selector='currentRoute'>
<retval declared_type64='AVAudioSessionRouteDescription * _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputDataSource'>
<retval declared_type64='AVAudioSessionDataSourceDescription * _Nullable' type64='@'/>
</method>
<method selector='inputDataSources'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='inputGain'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='inputLatency'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='inputNumberOfChannels'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='isInputAvailable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isInputGainSettable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOtherAudioPlaying'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maximumInputNumberOfChannels'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='maximumOutputNumberOfChannels'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='mode'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='outputDataSource'>
<retval declared_type64='AVAudioSessionDataSourceDescription * _Nullable' type64='@'/>
</method>
<method selector='outputDataSources'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='outputLatency'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='outputNumberOfChannels'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='outputVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='overrideOutputAudioPort:error:'>
<arg declared_type64='AVAudioSessionPortOverride' index='0' name='portOverride' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='preferredIOBufferDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='preferredInput'>
<retval declared_type64='AVAudioSessionPortDescription * _Nullable' type64='@'/>
</method>
<method selector='preferredInputNumberOfChannels'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='preferredOutputNumberOfChannels'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='preferredSampleRate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='sampleRate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='secondaryAudioShouldBeSilencedHint'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setActive:error:'>
<arg declared_type64='BOOL' index='0' name='active' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setActive:withOptions:error:'>
<arg declared_type64='BOOL' index='0' name='active' type64='B'/>
<arg declared_type64='AVAudioSessionSetActiveOptions' index='1' name='options' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setCategory:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='category' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setCategory:mode:options:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='category' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='mode' type64='@'/>
<arg declared_type64='AVAudioSessionCategoryOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setCategory:withOptions:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='category' type64='@'/>
<arg declared_type64='AVAudioSessionCategoryOptions' index='1' name='options' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setInputDataSource:error:'>
<arg declared_type64='AVAudioSessionDataSourceDescription * _Nullable' index='0' name='dataSource' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setInputGain:error:'>
<arg declared_type64='float' index='0' name='gain' type64='f'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setMode:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mode' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setOutputDataSource:error:'>
<arg declared_type64='AVAudioSessionDataSourceDescription * _Nullable' index='0' name='dataSource' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setPreferredIOBufferDuration:error:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setPreferredInput:error:'>
<arg declared_type64='AVAudioSessionPortDescription * _Nullable' index='0' name='inPort' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setPreferredInputNumberOfChannels:error:'>
<arg declared_type64='NSInteger' index='0' name='count' type64='q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setPreferredOutputNumberOfChannels:error:'>
<arg declared_type64='NSInteger' index='0' name='count' type64='q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setPreferredSampleRate:error:'>
<arg declared_type64='double' index='0' name='sampleRate' type64='d'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type64='AVAudioSession * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioSessionChannelDescription'>
<method selector='channelLabel'>
<retval declared_type64='AudioChannelLabel' type64='I'/>
</method>
<method selector='channelName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='channelNumber'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='owningPortUID'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioSessionDataSourceDescription'>
<method selector='dataSourceID'>
<retval declared_type64='NSNumber * _Nonnull' type64='@'/>
</method>
<method selector='dataSourceName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='location'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='orientation'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='preferredPolarPattern'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='selectedPolarPattern'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setPreferredPolarPattern:error:'>
<arg declared_type64='NSString * _Nullable' index='0' name='pattern' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='supportedPolarPatterns'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAudioSessionPortDescription'>
<method selector='UID'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='channels'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='dataSources'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='hasHardwareVoiceCallProcessing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='portName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='portType'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='preferredDataSource'>
<retval declared_type64='AVAudioSessionDataSourceDescription * _Nullable' type64='@'/>
</method>
<method selector='selectedDataSource'>
<retval declared_type64='AVAudioSessionDataSourceDescription * _Nullable' type64='@'/>
</method>
<method selector='setPreferredDataSource:error:'>
<arg declared_type64='AVAudioSessionDataSourceDescription * _Nullable' index='0' name='dataSource' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVAudioSessionRouteDescription'>
<method selector='inputs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='outputs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioTime'>
<method selector='audioTimeStamp'>
<retval declared_type64='AudioTimeStamp' type64='{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
</method>
<method selector='extrapolateTimeFromAnchor:'>
<arg declared_type64='AVAudioTime * _Nonnull' index='0' name='anchorTime' type64='@'/>
<retval declared_type64='AVAudioTime * _Nonnull' type64='@'/>
</method>
<method selector='hostTime'>
<retval declared_type64='uint64_t' type64='Q'/>
</method>
<method class_method='true' selector='hostTimeForSeconds:'>
<arg declared_type64='NSTimeInterval' index='0' name='seconds' type64='d'/>
<retval declared_type64='uint64_t' type64='Q'/>
</method>
<method selector='initWithAudioTimeStamp:sampleRate:'>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' index='0' name='ts' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithHostTime:'>
<arg declared_type64='uint64_t' index='0' name='hostTime' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithHostTime:sampleTime:atRate:'>
<arg declared_type64='uint64_t' index='0' name='hostTime' type64='Q'/>
<arg declared_type64='AVAudioFramePosition' index='1' name='sampleTime' type64='q'/>
<arg declared_type64='double' index='2' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSampleTime:atRate:'>
<arg declared_type64='AVAudioFramePosition' index='0' name='sampleTime' type64='q'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isHostTimeValid'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSampleTimeValid'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sampleRate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='sampleTime'>
<retval declared_type64='AVAudioFramePosition' type64='q'/>
</method>
<method class_method='true' selector='secondsForHostTime:'>
<arg declared_type64='uint64_t' index='0' name='hostTime' type64='Q'/>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='timeWithAudioTimeStamp:sampleRate:'>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' index='0' name='ts' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='timeWithHostTime:'>
<arg declared_type64='uint64_t' index='0' name='hostTime' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='timeWithHostTime:sampleTime:atRate:'>
<arg declared_type64='uint64_t' index='0' name='hostTime' type64='Q'/>
<arg declared_type64='AVAudioFramePosition' index='1' name='sampleTime' type64='q'/>
<arg declared_type64='double' index='2' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='timeWithSampleTime:atRate:'>
<arg declared_type64='AVAudioFramePosition' index='0' name='sampleTime' type64='q'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioUnit'>
<method selector='AUAudioUnit'>
<retval declared_type64='AUAudioUnit * _Nonnull' type64='@'/>
</method>
<method selector='audioComponentDescription'>
<retval declared_type64='AudioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
</method>
<method selector='audioUnit'>
<retval declared_type64='AudioUnit _Nonnull' type64='^{OpaqueAudioComponentInstance=}'/>
</method>
<method class_method='true' selector='instantiateWithComponentDescription:options:completionHandler:'>
<arg declared_type64='AudioComponentDescription' index='0' name='audioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
<arg declared_type64='AudioComponentInstantiationOptions' index='1' name='options' type64='I'/>
<arg declared_type64='void (^ _Nonnull)(__kindof AVAudioUnit * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='__kindof AVAudioUnit * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='loadAudioUnitPresetAtURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='manufacturerName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='version'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
</class>
<class name='AVAudioUnitComponent'>
<method selector='allTagNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='audioComponent'>
<retval declared_type64='AudioComponent _Nonnull' type64='^{OpaqueAudioComponent=}'/>
</method>
<method selector='audioComponentDescription'>
<retval declared_type64='AudioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
</method>
<method selector='hasMIDIInput'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasMIDIOutput'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSandboxSafe'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='localizedTypeName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='manufacturerName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='typeName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='version'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='versionString'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioUnitComponentManager'>
<method selector='componentsMatchingDescription:'>
<arg declared_type64='AudioComponentDescription' index='0' name='desc' type64='{AudioComponentDescription=IIIII}'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='componentsMatchingPredicate:'>
<arg declared_type64='NSPredicate * _Nonnull' index='0' name='predicate' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='componentsPassingTest:'>
<arg declared_type64='BOOL (^ _Nonnull)(AVAudioUnitComponent * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='0' name='testHandler' type64='@?'>
<arg declared_type64='AVAudioUnitComponent * _Nonnull' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sharedAudioUnitComponentManager'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='standardLocalizedTagNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tagNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioUnitDelay'>
<method selector='delayTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='feedback'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='lowPassCutoff'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setDelayTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='delayTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFeedback:'>
<arg declared_type64='float' index='0' name='feedback' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLowPassCutoff:'>
<arg declared_type64='float' index='0' name='lowPassCutoff' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWetDryMix:'>
<arg declared_type64='float' index='0' name='wetDryMix' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='wetDryMix'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVAudioUnitDistortion'>
<method selector='loadFactoryPreset:'>
<arg declared_type64='AVAudioUnitDistortionPreset' index='0' name='preset' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preGain'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setPreGain:'>
<arg declared_type64='float' index='0' name='preGain' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWetDryMix:'>
<arg declared_type64='float' index='0' name='wetDryMix' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='wetDryMix'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVAudioUnitEQ'>
<method selector='bands'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='globalGain'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='initWithNumberOfBands:'>
<arg declared_type64='NSUInteger' index='0' name='numberOfBands' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setGlobalGain:'>
<arg declared_type64='float' index='0' name='globalGain' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitEQFilterParameters'>
<method selector='bandwidth'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='bypass'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='filterType'>
<retval declared_type64='AVAudioUnitEQFilterType' type64='q'/>
</method>
<method selector='frequency'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='gain'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setBandwidth:'>
<arg declared_type64='float' index='0' name='bandwidth' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBypass:'>
<arg declared_type64='BOOL' index='0' name='bypass' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFilterType:'>
<arg declared_type64='AVAudioUnitEQFilterType' index='0' name='filterType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrequency:'>
<arg declared_type64='float' index='0' name='frequency' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGain:'>
<arg declared_type64='float' index='0' name='gain' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitEffect'>
<method selector='bypass'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type64='AudioComponentDescription' index='0' name='audioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setBypass:'>
<arg declared_type64='BOOL' index='0' name='bypass' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitGenerator'>
<method selector='bypass'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type64='AudioComponentDescription' index='0' name='audioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setBypass:'>
<arg declared_type64='BOOL' index='0' name='bypass' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitMIDIInstrument'>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type64='AudioComponentDescription' index='0' name='description' type64='{AudioComponentDescription=IIIII}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='sendController:withValue:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='controller' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='value' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendMIDIEvent:data1:'>
<arg declared_type64='uint8_t' index='0' name='midiStatus' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='data1' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendMIDIEvent:data1:data2:'>
<arg declared_type64='uint8_t' index='0' name='midiStatus' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='data1' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='data2' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendMIDISysExEvent:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='midiData' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendPitchBend:onChannel:'>
<arg declared_type64='uint16_t' index='0' name='pitchbend' type64='S'/>
<arg declared_type64='uint8_t' index='1' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendPressure:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='pressure' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendPressureForKey:withValue:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='key' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='value' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendProgramChange:bankMSB:bankLSB:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='program' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='bankMSB' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='bankLSB' type64='C'/>
<arg declared_type64='uint8_t' index='3' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendProgramChange:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='program' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startNote:withVelocity:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='note' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='velocity' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopNote:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='note' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitReverb'>
<method selector='loadFactoryPreset:'>
<arg declared_type64='AVAudioUnitReverbPreset' index='0' name='preset' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWetDryMix:'>
<arg declared_type64='float' index='0' name='wetDryMix' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='wetDryMix'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVAudioUnitSampler'>
<method selector='globalTuning'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='loadAudioFilesAtURLs:error:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='audioFiles' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadInstrumentAtURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='instrumentURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadSoundBankInstrumentAtURL:program:bankMSB:bankLSB:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='bankURL' type64='@'/>
<arg declared_type64='uint8_t' index='1' name='program' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='bankMSB' type64='C'/>
<arg declared_type64='uint8_t' index='3' name='bankLSB' type64='C'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='masterGain'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setGlobalTuning:'>
<arg declared_type64='float' index='0' name='globalTuning' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMasterGain:'>
<arg declared_type64='float' index='0' name='masterGain' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStereoPan:'>
<arg declared_type64='float' index='0' name='stereoPan' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stereoPan'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVAudioUnitTimeEffect'>
<method selector='bypass'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type64='AudioComponentDescription' index='0' name='audioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setBypass:'>
<arg declared_type64='BOOL' index='0' name='bypass' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitTimePitch'>
<method selector='overlap'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='pitch'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setOverlap:'>
<arg declared_type64='float' index='0' name='overlap' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPitch:'>
<arg declared_type64='float' index='0' name='pitch' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitVarispeed'>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVMIDIPlayer'>
<method selector='currentPosition'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='duration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='initWithContentsOfURL:soundBankURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='inURL' type64='@'/>
<arg declared_type64='NSURL * _Nullable' index='1' name='bankURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:soundBankURL:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSURL * _Nullable' index='1' name='bankURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='play:'>
<arg declared_type64='AVMIDIPlayerCompletionHandler _Nullable' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setCurrentPosition:'>
<arg declared_type64='NSTimeInterval' index='0' name='currentPosition' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVMusicTrack'>
<method selector='destinationAudioUnit'>
<retval declared_type64='AVAudioUnit * _Nullable' type64='@'/>
</method>
<method selector='isLoopingEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMuted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSoloed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lengthInBeats'>
<retval declared_type64='AVMusicTimeStamp' type64='d'/>
</method>
<method selector='lengthInSeconds'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='loopRange'>
<retval declared_type64='AVBeatRange' type64='{_AVBeatRange=dd}'/>
</method>
<method selector='numberOfLoops'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='offsetTime'>
<retval declared_type64='AVMusicTimeStamp' type64='d'/>
</method>
<method selector='setDestinationAudioUnit:'>
<arg declared_type64='AVAudioUnit * _Nullable' index='0' name='destinationAudioUnit' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLengthInBeats:'>
<arg declared_type64='AVMusicTimeStamp' index='0' name='lengthInBeats' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLengthInSeconds:'>
<arg declared_type64='NSTimeInterval' index='0' name='lengthInSeconds' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLoopRange:'>
<arg declared_type64='AVBeatRange' index='0' name='loopRange' type64='{_AVBeatRange=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLoopingEnabled:'>
<arg declared_type64='BOOL' index='0' name='loopingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMuted:'>
<arg declared_type64='BOOL' index='0' name='muted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfLoops:'>
<arg declared_type64='NSInteger' index='0' name='numberOfLoops' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOffsetTime:'>
<arg declared_type64='AVMusicTimeStamp' index='0' name='offsetTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSoloed:'>
<arg declared_type64='BOOL' index='0' name='soloed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='timeResolution'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
</class>
<class name='AVSpeechSynthesisVoice'>
<method class_method='true' selector='currentLanguageCode'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='language'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='quality'>
<retval declared_type64='AVSpeechSynthesisVoiceQuality' type64='q'/>
</method>
<method class_method='true' selector='speechVoices'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='voiceWithIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='AVSpeechSynthesisVoice * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='voiceWithLanguage:'>
<arg declared_type64='NSString * _Nullable' index='0' name='languageCode' type64='@'/>
<retval declared_type64='AVSpeechSynthesisVoice * _Nullable' type64='@'/>
</method>
</class>
<class name='AVSpeechSynthesizer'>
<method selector='continueSpeaking'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='isPaused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSpeaking'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outputChannels'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='pauseSpeakingAtBoundary:'>
<arg declared_type64='AVSpeechBoundary' index='0' name='boundary' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOutputChannels:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='outputChannels' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speakUtterance:'>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='0' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopSpeakingAtBoundary:'>
<arg declared_type64='AVSpeechBoundary' index='0' name='boundary' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVSpeechUtterance'>
<method selector='attributedSpeechString'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='initWithAttributedString:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='pitchMultiplier'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='postUtteranceDelay'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='preUtteranceDelay'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setPitchMultiplier:'>
<arg declared_type64='float' index='0' name='pitchMultiplier' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPostUtteranceDelay:'>
<arg declared_type64='NSTimeInterval' index='0' name='postUtteranceDelay' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreUtteranceDelay:'>
<arg declared_type64='NSTimeInterval' index='0' name='preUtteranceDelay' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVoice:'>
<arg declared_type64='AVSpeechSynthesisVoice * _Nullable' index='0' name='voice' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechString'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='speechUtteranceWithAttributedString:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='speechUtteranceWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='voice'>
<retval declared_type64='AVSpeechSynthesisVoice * _Nullable' type64='@'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='NSObject'>
<method selector='audioPlayerBeginInterruption:'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerDecodeErrorDidOccur:error:'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='NSError * _Nullable' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerEndInterruption:'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerEndInterruption:withFlags:'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='flags' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerEndInterruption:withOptions:'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='flags' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='destinationForMixer:bus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='mixer' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='AVAudioMixingDestination * _Nullable' type64='@'/>
</method>
<method selector='obstruction'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='occlusion'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='pan'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='position'>
<retval declared_type64='AVAudio3DPoint' type64='{AVAudio3DPoint=fff}'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='renderingAlgorithm'>
<retval declared_type64='AVAudio3DMixingRenderingAlgorithm' type64='q'/>
</method>
<method selector='reverbBlend'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setObstruction:'>
<arg declared_type64='float' index='0' name='obstruction' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOcclusion:'>
<arg declared_type64='float' index='0' name='occlusion' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPan:'>
<arg declared_type64='float' index='0' name='pan' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPosition:'>
<arg declared_type64='AVAudio3DPoint' index='0' name='position' type64='{AVAudio3DPoint=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderingAlgorithm:'>
<arg declared_type64='AVAudio3DMixingRenderingAlgorithm' index='0' name='renderingAlgorithm' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReverbBlend:'>
<arg declared_type64='float' index='0' name='reverbBlend' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didCancelSpeechUtterance:'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didContinueSpeechUtterance:'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didFinishSpeechUtterance:'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didPauseSpeechUtterance:'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didStartSpeechUtterance:'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:willSpeakRangeOfSpeechString:utterance:'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='NSRange' index='1' name='characterRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='2' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<informal_protocol name='AVAudio3DMixing'>
<method selector='obstruction' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='occlusion' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='position' type64='{AVAudio3DPoint=fff}16@0:8'>
<retval declared_type64='AVAudio3DPoint' type64='{AVAudio3DPoint=fff}'/>
</method>
<method selector='rate' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='renderingAlgorithm' type64='q16@0:8'>
<retval declared_type64='AVAudio3DMixingRenderingAlgorithm' type64='q'/>
</method>
<method selector='reverbBlend' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setObstruction:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='obstruction' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOcclusion:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='occlusion' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPosition:' type64='v28@0:8{AVAudio3DPoint=fff}16'>
<arg declared_type64='AVAudio3DPoint' index='0' name='position' type64='{AVAudio3DPoint=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderingAlgorithm:' type64='v24@0:8q16'>
<arg declared_type64='AVAudio3DMixingRenderingAlgorithm' index='0' name='renderingAlgorithm' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReverbBlend:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='reverbBlend' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioMixing'>
<method selector='destinationForMixer:bus:' type64='@32@0:8@16Q24'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='mixer' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='AVAudioMixingDestination * _Nullable' type64='@'/>
</method>
<method selector='setVolume:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='volume' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioPlayerDelegate'>
<method selector='audioPlayerBeginInterruption:' type64='v24@0:8@16'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerDecodeErrorDidOccur:error:' type64='v32@0:8@16@24'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='NSError * _Nullable' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:' type64='v28@0:8@16B24'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerEndInterruption:' type64='v24@0:8@16'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerEndInterruption:withFlags:' type64='v32@0:8@16Q24'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='flags' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerEndInterruption:withOptions:' type64='v32@0:8@16Q24'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='flags' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioStereoMixing'>
<method selector='pan' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setPan:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='pan' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVSpeechSynthesizerDelegate'>
<method selector='speechSynthesizer:didCancelSpeechUtterance:' type64='v32@0:8@16@24'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didContinueSpeechUtterance:' type64='v32@0:8@16@24'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didFinishSpeechUtterance:' type64='v32@0:8@16@24'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didPauseSpeechUtterance:' type64='v32@0:8@16@24'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didStartSpeechUtterance:' type64='v32@0:8@16@24'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:willSpeakRangeOfSpeechString:utterance:' type64='v48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type64='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type64='@'/>
<arg declared_type64='NSRange' index='1' name='characterRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='AVSpeechUtterance * _Nonnull' index='2' name='utterance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
</signatures>
