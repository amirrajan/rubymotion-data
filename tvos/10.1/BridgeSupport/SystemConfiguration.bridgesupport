<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='SCDynamicStoreContext' type64='{_SCDynamicStoreContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type64='CFIndex' name='version' type64='q'/>
<field declared_type64='void * _Nullable' name='info' type64='^v'/>
<field const='true' declared_type64='void * _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='retain' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval const='true' declared_type64='void * _Nonnull' type64='^v'/>
</field>
<field declared_type64='void (* _Nullable)( void * _Nonnull)' function_pointer='true' name='release' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='CFStringRef _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='copyDescription' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</field>
</struct>
<struct name='SCNetworkConnectionContext' type64='{_SCNetworkConnectionContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type64='CFIndex' name='version' type64='q'/>
<field declared_type64='void * _Nullable' name='info' type64='^v'/>
<field const='true' declared_type64='void * _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='retain' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval const='true' declared_type64='void * _Nonnull' type64='^v'/>
</field>
<field declared_type64='void (* _Nullable)( void * _Nonnull)' function_pointer='true' name='release' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='CFStringRef _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='copyDescription' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</field>
</struct>
<struct name='SCNetworkReachabilityContext' type64='{_SCNetworkReachabilityContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type64='CFIndex' name='version' type64='q'/>
<field declared_type64='void * _Nullable' name='info' type64='^v'/>
<field const='true' declared_type64='void * _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='retain' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval const='true' declared_type64='void * _Nonnull' type64='^v'/>
</field>
<field declared_type64='void (* _Nullable)( void * _Nonnull)' function_pointer='true' name='release' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='CFStringRef _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='copyDescription' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</field>
</struct>
<struct name='SCPreferencesContext' type64='{_SCPreferencesContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type64='CFIndex' name='version' type64='q'/>
<field declared_type64='void * _Nullable' name='info' type64='^v'/>
<field const='true' declared_type64='void * _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='retain' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval const='true' declared_type64='void * _Nonnull' type64='^v'/>
</field>
<field declared_type64='void (* _Nullable)( void * _Nonnull)' function_pointer='true' name='release' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='CFStringRef _Nonnull (* _Nullable)( void * _Nonnull)' function_pointer='true' name='copyDescription' type64='^?'>
<arg const='true' declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</field>
</struct>
<cftype gettypeid_func='SCNetworkReachabilityGetTypeID' name='SCNetworkReachabilityRef' tollfree='__NSCFType' type64='^{__SCNetworkReachability=}'/>
<cftype name='AuthorizationRef' type64='^{AuthorizationOpaqueRef=}'/>
<cftype name='SCBondStatusRef' type64='^{__SCBondStatus=}'/>
<cftype name='SCDynamicStoreRef' type64='^{__SCDynamicStore=}'/>
<cftype name='SCNetworkConnectionRef' type64='^{__SCNetworkConnection=}'/>
<cftype name='SCNetworkInterfaceRef' type64='^{__SCNetworkInterface=}'/>
<cftype name='SCNetworkProtocolRef' type64='^{__SCNetworkProtocol=}'/>
<cftype name='SCNetworkServiceRef' type64='^{__SCNetworkService=}'/>
<cftype name='SCNetworkSetRef' type64='^{__SCNetworkSet=}'/>
<cftype name='SCPreferencesRef' type64='^{__SCPreferences=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFErrorDomainSystemConfiguration' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCNNetworkInfoKeyBSSID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCNNetworkInfoKeySSID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCNNetworkInfoKeySSIDData' type64='^{__CFString=}'/>
<string_constant name='kSCNetworkConnectionBytesIn' nsstring='true' value='BytesIn'/>
<string_constant name='kSCNetworkConnectionBytesOut' nsstring='true' value='BytesOut'/>
<string_constant name='kSCNetworkConnectionErrorsIn' nsstring='true' value='ErrorsIn'/>
<string_constant name='kSCNetworkConnectionErrorsOut' nsstring='true' value='ErrorsOut'/>
<string_constant name='kSCNetworkConnectionPacketsIn' nsstring='true' value='PacketsIn'/>
<string_constant name='kSCNetworkConnectionPacketsOut' nsstring='true' value='PacketsOut'/>
<string_constant name='kSCNetworkConnectionSelectionOptionOnDemandHostName' nsstring='true' value='OnDemandHostName'/>
<string_constant name='kSCNetworkConnectionSelectionOptionOnDemandRetry' nsstring='true' value='OnDemandRetry'/>
<enum name='kSCBondStatusLinkInvalid' value64='1'/>
<enum name='kSCBondStatusNoPartner' value64='2'/>
<enum name='kSCBondStatusNotInActiveGroup' value64='3'/>
<enum name='kSCBondStatusOK' value64='0'/>
<enum name='kSCBondStatusUnknown' value64='999'/>
<enum name='kSCNetworkConnectionConnected' value64='2'/>
<enum name='kSCNetworkConnectionConnecting' value64='1'/>
<enum name='kSCNetworkConnectionDisconnected' value64='0'/>
<enum name='kSCNetworkConnectionDisconnecting' value64='3'/>
<enum name='kSCNetworkConnectionInvalid' value64='-1'/>
<enum name='kSCNetworkConnectionPPPAuthenticating' value64='5'/>
<enum name='kSCNetworkConnectionPPPConnected' value64='8'/>
<enum name='kSCNetworkConnectionPPPConnectingLink' value64='2'/>
<enum name='kSCNetworkConnectionPPPDialOnTraffic' value64='3'/>
<enum name='kSCNetworkConnectionPPPDisconnected' value64='0'/>
<enum name='kSCNetworkConnectionPPPDisconnectingLink' value64='10'/>
<enum name='kSCNetworkConnectionPPPHoldingLinkOff' value64='11'/>
<enum name='kSCNetworkConnectionPPPInitializing' value64='1'/>
<enum name='kSCNetworkConnectionPPPNegotiatingLink' value64='4'/>
<enum name='kSCNetworkConnectionPPPNegotiatingNetwork' value64='7'/>
<enum name='kSCNetworkConnectionPPPSuspended' value64='12'/>
<enum name='kSCNetworkConnectionPPPTerminating' value64='9'/>
<enum name='kSCNetworkConnectionPPPWaitingForCallBack' value64='6'/>
<enum name='kSCNetworkConnectionPPPWaitingForRedial' value64='13'/>
<enum name='kSCNetworkFlagsConnectionAutomatic' value64='8'/>
<enum name='kSCNetworkFlagsConnectionRequired' value64='4'/>
<enum name='kSCNetworkFlagsInterventionRequired' value64='16'/>
<enum name='kSCNetworkFlagsIsDirect' value64='131072'/>
<enum name='kSCNetworkFlagsIsLocalAddress' value64='65536'/>
<enum name='kSCNetworkFlagsReachable' value64='2'/>
<enum name='kSCNetworkFlagsTransientConnection' value64='1'/>
<enum name='kSCNetworkReachabilityFlagsConnectionAutomatic' value64='8'/>
<enum name='kSCNetworkReachabilityFlagsConnectionOnDemand' value64='32'/>
<enum name='kSCNetworkReachabilityFlagsConnectionOnTraffic' value64='8'/>
<enum name='kSCNetworkReachabilityFlagsConnectionRequired' value64='4'/>
<enum name='kSCNetworkReachabilityFlagsInterventionRequired' value64='16'/>
<enum name='kSCNetworkReachabilityFlagsIsDirect' value64='131072'/>
<enum name='kSCNetworkReachabilityFlagsIsLocalAddress' value64='65536'/>
<enum name='kSCNetworkReachabilityFlagsIsWWAN' value64='262144'/>
<enum name='kSCNetworkReachabilityFlagsReachable' value64='2'/>
<enum name='kSCNetworkReachabilityFlagsTransientConnection' value64='1'/>
<enum name='kSCPreferencesNotificationApply' value64='2'/>
<enum name='kSCPreferencesNotificationCommit' value64='1'/>
<enum name='kSCStatusAccessError' value64='1003'/>
<enum name='kSCStatusConnectionIgnore' value64='5002'/>
<enum name='kSCStatusConnectionNoService' value64='5001'/>
<enum name='kSCStatusFailed' value64='1001'/>
<enum name='kSCStatusInvalidArgument' value64='1002'/>
<enum name='kSCStatusKeyExists' value64='1005'/>
<enum name='kSCStatusLocked' value64='1006'/>
<enum name='kSCStatusMaxLink' value64='3006'/>
<enum name='kSCStatusNeedLock' value64='1007'/>
<enum name='kSCStatusNoConfigFile' value64='3003'/>
<enum name='kSCStatusNoKey' value64='1004'/>
<enum name='kSCStatusNoLink' value64='3004'/>
<enum name='kSCStatusNoPrefsSession' value64='3001'/>
<enum name='kSCStatusNoStoreServer' value64='2002'/>
<enum name='kSCStatusNoStoreSession' value64='2001'/>
<enum name='kSCStatusNotifierActive' value64='2003'/>
<enum name='kSCStatusOK' value64='0'/>
<enum name='kSCStatusPrefsBusy' value64='3002'/>
<enum name='kSCStatusReachabilityUnknown' value64='4001'/>
<enum name='kSCStatusStale' value64='3005'/>
<function name='CNCopyCurrentNetworkInfo'>
<arg declared_type64='CFStringRef _Nonnull' name='interfaceName' type64='^{__CFString=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='CNCopySupportedInterfaces'>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CNMarkPortalOffline'>
<arg declared_type64='CFStringRef _Nonnull' name='interfaceName' type64='^{__CFString=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CNMarkPortalOnline'>
<arg declared_type64='CFStringRef _Nonnull' name='interfaceName' type64='^{__CFString=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CNSetSupportedSSIDs'>
<arg declared_type64='CFArrayRef _Nonnull' name='ssidArray' type64='^{__CFArray=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='SCCopyLastError'>
<retval declared_type64='CFErrorRef _Nonnull' type64='^{__CFError=}'/>
</function>
<function name='SCError'>
<retval declared_type64='int' type64='i'/>
</function>
<function name='SCErrorString'>
<arg declared_type64='int' name='status' type64='i'/>
<retval const='true' declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='SCNetworkReachabilityCreateWithAddress'>
<arg declared_type64='CFAllocatorRef _Nullable' name='allocator' type64='^{__CFAllocator=}'/>
<arg const='true' declared_type64='struct sockaddr * _Nonnull' name='address' type64='^{sockaddr=CC[14c]}'/>
<retval declared_type64='SCNetworkReachabilityRef _Nullable' type64='^{__SCNetworkReachability=}'/>
</function>
<function name='SCNetworkReachabilityCreateWithAddressPair'>
<arg declared_type64='CFAllocatorRef _Nullable' name='allocator' type64='^{__CFAllocator=}'/>
<arg const='true' declared_type64='struct sockaddr * _Nullable' name='localAddress' type64='^{sockaddr=CC[14c]}'/>
<arg const='true' declared_type64='struct sockaddr * _Nullable' name='remoteAddress' type64='^{sockaddr=CC[14c]}'/>
<retval declared_type64='SCNetworkReachabilityRef _Nullable' type64='^{__SCNetworkReachability=}'/>
</function>
<function name='SCNetworkReachabilityCreateWithName'>
<arg declared_type64='CFAllocatorRef _Nullable' name='allocator' type64='^{__CFAllocator=}'/>
<arg const='true' declared_type64='char * _Nonnull' name='nodename' type64='*'/>
<retval declared_type64='SCNetworkReachabilityRef _Nullable' type64='^{__SCNetworkReachability=}'/>
</function>
<function name='SCNetworkReachabilityGetFlags'>
<arg declared_type64='SCNetworkReachabilityRef _Nonnull' name='target' type64='^{__SCNetworkReachability=}'/>
<arg declared_type64='SCNetworkReachabilityFlags * _Nonnull' name='flags' type64='^I'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='SCNetworkReachabilityGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='SCNetworkReachabilityScheduleWithRunLoop'>
<arg declared_type64='SCNetworkReachabilityRef _Nonnull' name='target' type64='^{__SCNetworkReachability=}'/>
<arg declared_type64='CFRunLoopRef _Nonnull' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='SCNetworkReachabilitySetCallback'>
<arg declared_type64='SCNetworkReachabilityRef _Nonnull' name='target' type64='^{__SCNetworkReachability=}'/>
<arg declared_type64='SCNetworkReachabilityCallBack _Nullable' function_pointer='true' name='callout' type64='^?'>
<arg declared_type64='SCNetworkReachabilityRef _Nonnull' type64='^{__SCNetworkReachability=}'/>
<arg declared_type64='SCNetworkReachabilityFlags' type64='I'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='SCNetworkReachabilityContext * _Nullable' name='context' type64='^{_SCNetworkReachabilityContext=q^v^?^?^?}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='SCNetworkReachabilitySetDispatchQueue'>
<arg declared_type64='SCNetworkReachabilityRef _Nonnull' name='target' type64='^{__SCNetworkReachability=}'/>
<arg declared_type64='dispatch_queue_t _Nullable' name='queue' type64='@'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='SCNetworkReachabilityUnscheduleFromRunLoop'>
<arg declared_type64='SCNetworkReachabilityRef _Nonnull' name='target' type64='^{__SCNetworkReachability=}'/>
<arg declared_type64='CFRunLoopRef _Nonnull' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
</signatures>
