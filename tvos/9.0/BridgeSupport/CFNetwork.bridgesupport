<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<struct name='CFHostClientContext' type64='{CFHostClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type64='CFIndex' name='version' type64='q'/>
<field declared_type64='void * _Nullable' name='info' type64='^v'/>
<field declared_type64='CFAllocatorRetainCallBack _Nullable' function_pointer='true' name='retain' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval const='true' declared_type64='void*' type64='^v'/>
</field>
<field declared_type64='CFAllocatorReleaseCallBack _Nullable' function_pointer='true' name='release' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='CFAllocatorCopyDescriptionCallBack _Nonnull' function_pointer='true' name='copyDescription' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</field>
</struct>
<struct name='CFNetServiceClientContext' type64='{CFNetServiceClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type64='CFIndex' name='version' type64='q'/>
<field declared_type64='void * _Nullable' name='info' type64='^v'/>
<field declared_type64='CFAllocatorRetainCallBack _Nullable' function_pointer='true' name='retain' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval const='true' declared_type64='void*' type64='^v'/>
</field>
<field declared_type64='CFAllocatorReleaseCallBack _Nullable' function_pointer='true' name='release' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='CFAllocatorCopyDescriptionCallBack _Nullable' function_pointer='true' name='copyDescription' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</field>
</struct>
<cftype gettypeid_func='CFHTTPAuthenticationGetTypeID' name='CFHTTPAuthenticationRef' tollfree='__NSCFType' type64='^{_CFHTTPAuthentication=}'/>
<cftype gettypeid_func='CFHTTPMessageGetTypeID' name='CFHTTPMessageRef' tollfree='__NSCFType' type64='^{__CFHTTPMessage=}'/>
<cftype gettypeid_func='CFHostGetTypeID' name='CFHostRef' tollfree='__NSCFType' type64='^{__CFHost=}'/>
<cftype gettypeid_func='CFNetServiceBrowserGetTypeID' name='CFNetServiceBrowserRef' tollfree='__NSCFType' type64='^{__CFNetServiceBrowser=}'/>
<cftype gettypeid_func='CFNetServiceMonitorGetTypeID' name='CFNetServiceMonitorRef' tollfree='__NSCFType' type64='^{__CFNetServiceMonitor=}'/>
<cftype gettypeid_func='CFNetServiceGetTypeID' name='CFNetServiceRef' tollfree='__NSCFType' type64='^{__CFNetService=}'/>
<cftype name='CFNetDiagnosticRef' type64='^{__CFNetDiagnostic=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFDNSServiceFailureKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFErrorDomainCFNetwork' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFErrorDomainWinSock' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFFTPResourceGroup' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFFTPResourceLink' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFFTPResourceModDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFFTPResourceMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFFTPResourceName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFFTPResourceOwner' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFFTPResourceSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFFTPResourceType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFFTPStatusCodeKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFGetAddrInfoFailureKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPAuthenticationAccountDomain' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPAuthenticationPassword' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPAuthenticationSchemeBasic' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPAuthenticationSchemeDigest' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPAuthenticationSchemeKerberos' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPAuthenticationSchemeNTLM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPAuthenticationSchemeNegotiate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPAuthenticationSchemeNegotiate2' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPAuthenticationSchemeOAuth1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPAuthenticationSchemeXMobileMeAuthToken' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPAuthenticationUsername' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPVersion1_0' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPVersion1_1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFHTTPVersion2_0' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFNetworkProxiesHTTPEnable' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFNetworkProxiesHTTPPort' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFNetworkProxiesHTTPProxy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFNetworkProxiesProxyAutoConfigEnable' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFNetworkProxiesProxyAutoConfigJavaScript' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFNetworkProxiesProxyAutoConfigURLString' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyAutoConfigurationHTTPResponseKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyAutoConfigurationJavaScriptKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyAutoConfigurationURLKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyHostNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyPasswordKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyPortNumberKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyTypeAutoConfigurationJavaScript' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyTypeAutoConfigurationURL' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyTypeFTP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyTypeHTTP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyTypeHTTPS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyTypeKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyTypeNone' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyTypeSOCKS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFProxyUsernameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFSOCKSNegotiationMethodKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFSOCKSStatusCodeKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFSOCKSVersionKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='SInt32' name='kCFStreamErrorDomainFTP' type64='i'/>
<constant const='true' declared_type64='SInt32' name='kCFStreamErrorDomainHTTP' type64='i'/>
<constant const='true' declared_type64='SInt32' name='kCFStreamErrorDomainMach' type64='i'/>
<constant const='true' declared_type64='SInt32' name='kCFStreamErrorDomainNetDB' type64='i'/>
<constant const='true' declared_type64='SInt32' name='kCFStreamErrorDomainNetServices' type64='i'/>
<constant const='true' declared_type64='int' name='kCFStreamErrorDomainSOCKS' type64='i'/>
<constant const='true' declared_type64='int' name='kCFStreamErrorDomainSSL' type64='i'/>
<constant const='true' declared_type64='SInt32' name='kCFStreamErrorDomainSystemConfiguration' type64='i'/>
<constant const='true' declared_type64='CFIndex' name='kCFStreamErrorDomainWinSock' type64='q'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamNetworkServiceType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamNetworkServiceTypeBackground' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamNetworkServiceTypeVideo' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamNetworkServiceTypeVoIP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamNetworkServiceTypeVoice' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyConnectionIsCellular' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPAttemptPersistentConnection' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPFetchResourceInfo' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPFileTransferOffset' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPPassword' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPProxy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPProxyHost' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPProxyPassword' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPProxyPort' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPProxyUser' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPResourceSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPUsePassiveMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyFTPUserName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyHTTPAttemptPersistentConnection' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyHTTPFinalRequest' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyHTTPFinalURL' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyHTTPProxy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyHTTPProxyHost' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyHTTPProxyPort' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyHTTPRequestBytesWrittenCount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyHTTPResponseHeader' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyHTTPSProxyHost' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyHTTPSProxyPort' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyHTTPShouldAutoredirect' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyNoCellular' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyProxyLocalBypass' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySOCKSPassword' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySOCKSProxy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySOCKSProxyHost' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySOCKSProxyPort' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySOCKSUser' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySOCKSVersion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySSLContext' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySSLPeerCertificates' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySSLPeerTrust' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySSLSettings' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertyShouldCloseNativeSocket' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySocketExtendedBackgroundIdleMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySocketRemoteHost' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySocketRemoteNetService' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamPropertySocketSecurityLevel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSSLAllowsAnyRoot' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSSLAllowsExpiredCertificates' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSSLAllowsExpiredRoots' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSSLCertificates' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSSLIsServer' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSSLLevel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSSLPeerName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSSLValidatesCertificateChain' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSocketSOCKSVersion4' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSocketSOCKSVersion5' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSocketSecurityLevelNegotiatedSSL' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSocketSecurityLevelNone' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSocketSecurityLevelSSLv2' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSocketSecurityLevelSSLv3' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFStreamSocketSecurityLevelTLSv1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFURLErrorFailingURLErrorKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFURLErrorFailingURLStringErrorKey' type64='^{__CFString=}'/>
<enum name='kCFErrorHTTPAuthenticationTypeUnsupported' value64='300'/>
<enum name='kCFErrorHTTPBadCredentials' value64='301'/>
<enum name='kCFErrorHTTPBadProxyCredentials' value64='307'/>
<enum name='kCFErrorHTTPBadURL' value64='305'/>
<enum name='kCFErrorHTTPConnectionLost' value64='302'/>
<enum name='kCFErrorHTTPParseFailure' value64='303'/>
<enum name='kCFErrorHTTPProxyConnectionFailure' value64='306'/>
<enum name='kCFErrorHTTPRedirectionLoopDetected' value64='304'/>
<enum name='kCFErrorHTTPSProxyConnectionFailure' value64='310'/>
<enum name='kCFErrorPACFileAuth' value64='309'/>
<enum name='kCFErrorPACFileError' value64='308'/>
<enum name='kCFFTPErrorUnexpectedStatusCode' value64='200'/>
<enum name='kCFHTTPCookieCannotParseCookieFile' value64='-4000'/>
<enum name='kCFHostAddresses' value64='0'/>
<enum name='kCFHostErrorHostNotFound' value64='1'/>
<enum name='kCFHostErrorUnknown' value64='2'/>
<enum name='kCFHostNames' value64='1'/>
<enum name='kCFHostReachability' value64='2'/>
<enum name='kCFNetDiagnosticConnectionDown' value64='-66557'/>
<enum name='kCFNetDiagnosticConnectionIndeterminate' value64='-66558'/>
<enum name='kCFNetDiagnosticConnectionUp' value64='-66559'/>
<enum name='kCFNetDiagnosticErr' value64='-66560'/>
<enum name='kCFNetDiagnosticNoErr' value64='0'/>
<enum name='kCFNetServiceErrorBadArgument' value64='-72004'/>
<enum name='kCFNetServiceErrorCancel' value64='-72005'/>
<enum name='kCFNetServiceErrorCollision' value64='-72001'/>
<enum name='kCFNetServiceErrorDNSServiceFailure' value64='-73000'/>
<enum name='kCFNetServiceErrorInProgress' value64='-72003'/>
<enum name='kCFNetServiceErrorInvalid' value64='-72006'/>
<enum name='kCFNetServiceErrorNotFound' value64='-72002'/>
<enum name='kCFNetServiceErrorTimeout' value64='-72007'/>
<enum name='kCFNetServiceErrorUnknown' value64='-72000'/>
<enum name='kCFNetServiceFlagIsDefault' value64='4'/>
<enum name='kCFNetServiceFlagIsDomain' value64='2'/>
<enum name='kCFNetServiceFlagIsRegistrationDomain' value64='4'/>
<enum name='kCFNetServiceFlagMoreComing' value64='1'/>
<enum name='kCFNetServiceFlagNoAutoRename' value64='1'/>
<enum name='kCFNetServiceFlagRemove' value64='8'/>
<enum name='kCFNetServiceMonitorTXT' value64='1'/>
<enum name='kCFNetServicesErrorBadArgument' value64='-72004'/>
<enum name='kCFNetServicesErrorCancel' value64='-72005'/>
<enum name='kCFNetServicesErrorCollision' value64='-72001'/>
<enum name='kCFNetServicesErrorInProgress' value64='-72003'/>
<enum name='kCFNetServicesErrorInvalid' value64='-72006'/>
<enum name='kCFNetServicesErrorNotFound' value64='-72002'/>
<enum name='kCFNetServicesErrorTimeout' value64='-72007'/>
<enum name='kCFNetServicesErrorUnknown' value64='-72000'/>
<enum name='kCFSOCKS4ErrorIdConflict' value64='112'/>
<enum name='kCFSOCKS4ErrorIdentdFailed' value64='111'/>
<enum name='kCFSOCKS4ErrorRequestFailed' value64='110'/>
<enum name='kCFSOCKS4ErrorUnknownStatusCode' value64='113'/>
<enum name='kCFSOCKS5ErrorBadCredentials' value64='122'/>
<enum name='kCFSOCKS5ErrorBadResponseAddr' value64='121'/>
<enum name='kCFSOCKS5ErrorBadState' value64='120'/>
<enum name='kCFSOCKS5ErrorNoAcceptableMethod' value64='124'/>
<enum name='kCFSOCKS5ErrorUnsupportedNegotiationMethod' value64='123'/>
<enum name='kCFSOCKSErrorUnknownClientVersion' value64='100'/>
<enum name='kCFSOCKSErrorUnsupportedServerVersion' value64='101'/>
<enum name='kCFStreamErrorHTTPAuthenticationBadPassword' value64='-1002'/>
<enum name='kCFStreamErrorHTTPAuthenticationBadUserName' value64='-1001'/>
<enum name='kCFStreamErrorHTTPAuthenticationTypeUnsupported' value64='-1000'/>
<enum name='kCFStreamErrorHTTPBadURL' value64='-3'/>
<enum name='kCFStreamErrorHTTPParseFailure' value64='-1'/>
<enum name='kCFStreamErrorHTTPRedirectionLoop' value64='-2'/>
<enum name='kCFStreamErrorHTTPSProxyFailureUnexpectedResponseToCONNECTMethod' value64='311'/>
<enum name='kCFStreamErrorSOCKS4IdConflict' value64='93'/>
<enum name='kCFStreamErrorSOCKS4IdentdFailed' value64='92'/>
<enum name='kCFStreamErrorSOCKS4RequestFailed' value64='91'/>
<enum name='kCFStreamErrorSOCKS4SubDomainResponse' value64='2'/>
<enum name='kCFStreamErrorSOCKS5BadResponseAddr' value64='1'/>
<enum name='kCFStreamErrorSOCKS5BadState' value64='2'/>
<enum name='kCFStreamErrorSOCKS5SubDomainMethod' value64='4'/>
<enum name='kCFStreamErrorSOCKS5SubDomainResponse' value64='5'/>
<enum name='kCFStreamErrorSOCKS5SubDomainUserPass' value64='3'/>
<enum name='kCFStreamErrorSOCKSSubDomainNone' value64='0'/>
<enum name='kCFStreamErrorSOCKSSubDomainVersionCode' value64='1'/>
<enum name='kCFStreamErrorSOCKSUnknownClientVersion' value64='3'/>
<enum name='kCFURLErrorAppTransportSecurityRequiresSecureConnection' value64='-1022'/>
<enum name='kCFURLErrorBackgroundSessionInUseByAnotherProcess' value64='-996'/>
<enum name='kCFURLErrorBackgroundSessionWasDisconnected' value64='-997'/>
<enum name='kCFURLErrorBadServerResponse' value64='-1011'/>
<enum name='kCFURLErrorBadURL' value64='-1000'/>
<enum name='kCFURLErrorCallIsActive' value64='-1019'/>
<enum name='kCFURLErrorCancelled' value64='-999'/>
<enum name='kCFURLErrorCannotCloseFile' value64='-3002'/>
<enum name='kCFURLErrorCannotConnectToHost' value64='-1004'/>
<enum name='kCFURLErrorCannotCreateFile' value64='-3000'/>
<enum name='kCFURLErrorCannotDecodeContentData' value64='-1016'/>
<enum name='kCFURLErrorCannotDecodeRawData' value64='-1015'/>
<enum name='kCFURLErrorCannotFindHost' value64='-1003'/>
<enum name='kCFURLErrorCannotLoadFromNetwork' value64='-2000'/>
<enum name='kCFURLErrorCannotMoveFile' value64='-3005'/>
<enum name='kCFURLErrorCannotOpenFile' value64='-3001'/>
<enum name='kCFURLErrorCannotParseResponse' value64='-1017'/>
<enum name='kCFURLErrorCannotRemoveFile' value64='-3004'/>
<enum name='kCFURLErrorCannotWriteToFile' value64='-3003'/>
<enum name='kCFURLErrorClientCertificateRejected' value64='-1205'/>
<enum name='kCFURLErrorClientCertificateRequired' value64='-1206'/>
<enum name='kCFURLErrorDNSLookupFailed' value64='-1006'/>
<enum name='kCFURLErrorDataLengthExceedsMaximum' value64='-1103'/>
<enum name='kCFURLErrorDataNotAllowed' value64='-1020'/>
<enum name='kCFURLErrorDownloadDecodingFailedMidStream' value64='-3006'/>
<enum name='kCFURLErrorDownloadDecodingFailedToComplete' value64='-3007'/>
<enum name='kCFURLErrorFileDoesNotExist' value64='-1100'/>
<enum name='kCFURLErrorFileIsDirectory' value64='-1101'/>
<enum name='kCFURLErrorHTTPTooManyRedirects' value64='-1007'/>
<enum name='kCFURLErrorInternationalRoamingOff' value64='-1018'/>
<enum name='kCFURLErrorNetworkConnectionLost' value64='-1005'/>
<enum name='kCFURLErrorNoPermissionsToReadFile' value64='-1102'/>
<enum name='kCFURLErrorNotConnectedToInternet' value64='-1009'/>
<enum name='kCFURLErrorRedirectToNonExistentLocation' value64='-1010'/>
<enum name='kCFURLErrorRequestBodyStreamExhausted' value64='-1021'/>
<enum name='kCFURLErrorResourceUnavailable' value64='-1008'/>
<enum name='kCFURLErrorSecureConnectionFailed' value64='-1200'/>
<enum name='kCFURLErrorServerCertificateHasBadDate' value64='-1201'/>
<enum name='kCFURLErrorServerCertificateHasUnknownRoot' value64='-1203'/>
<enum name='kCFURLErrorServerCertificateNotYetValid' value64='-1204'/>
<enum name='kCFURLErrorServerCertificateUntrusted' value64='-1202'/>
<enum name='kCFURLErrorTimedOut' value64='-1001'/>
<enum name='kCFURLErrorUnknown' value64='-998'/>
<enum name='kCFURLErrorUnsupportedURL' value64='-1002'/>
<enum name='kCFURLErrorUserAuthenticationRequired' value64='-1013'/>
<enum name='kCFURLErrorUserCancelledAuthentication' value64='-1012'/>
<enum name='kCFURLErrorZeroByteResource' value64='-1014'/>
<enum name='kSOCKS5NoAcceptableMethod' value64='255'/>
<function name='CFFTPCreateParsedResourceListing'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg const='true' declared_type64='UInt8 * _Nonnull' name='buffer' type64='*'/>
<arg declared_type64='CFIndex' name='bufferLength' type64='q'/>
<arg declared_type64='CFDictionaryRef _Nullable * _Nullable' name='parsed' type64='^^{__CFDictionary}'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<function name='CFHTTPAuthenticationAppliesToRequest'>
<arg declared_type64='CFHTTPAuthenticationRef _Nonnull' name='auth' type64='^{_CFHTTPAuthentication=}'/>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='request' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHTTPAuthenticationCopyDomains'>
<arg declared_type64='CFHTTPAuthenticationRef _Nonnull' name='auth' type64='^{_CFHTTPAuthentication=}'/>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CFHTTPAuthenticationCopyMethod'>
<arg declared_type64='CFHTTPAuthenticationRef _Nonnull' name='auth' type64='^{_CFHTTPAuthentication=}'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</function>
<function name='CFHTTPAuthenticationCopyRealm'>
<arg declared_type64='CFHTTPAuthenticationRef _Nonnull' name='auth' type64='^{_CFHTTPAuthentication=}'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</function>
<function name='CFHTTPAuthenticationCreateFromResponse'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='response' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='CFHTTPAuthenticationRef _Nonnull' type64='^{_CFHTTPAuthentication=}'/>
</function>
<function name='CFHTTPAuthenticationGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CFHTTPAuthenticationIsValid'>
<arg declared_type64='CFHTTPAuthenticationRef _Nonnull' name='auth' type64='^{_CFHTTPAuthentication=}'/>
<arg declared_type64='CFStreamError * _Nullable' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHTTPAuthenticationRequiresAccountDomain'>
<arg declared_type64='CFHTTPAuthenticationRef _Nonnull' name='auth' type64='^{_CFHTTPAuthentication=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHTTPAuthenticationRequiresOrderedRequests'>
<arg declared_type64='CFHTTPAuthenticationRef _Nonnull' name='auth' type64='^{_CFHTTPAuthentication=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHTTPAuthenticationRequiresUserNameAndPassword'>
<arg declared_type64='CFHTTPAuthenticationRef _Nonnull' name='auth' type64='^{_CFHTTPAuthentication=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHTTPMessageAddAuthentication'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='request' type64='^{__CFHTTPMessage=}'/>
<arg declared_type64='CFHTTPMessageRef _Nullable' name='authenticationFailureResponse' type64='^{__CFHTTPMessage=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='username' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='password' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable' name='authenticationScheme' type64='^{__CFString=}'/>
<arg declared_type64='Boolean' name='forProxy' type64='B'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHTTPMessageAppendBytes'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='message' type64='^{__CFHTTPMessage=}'/>
<arg const='true' declared_type64='UInt8 * _Nonnull' name='newBytes' type64='*'/>
<arg declared_type64='CFIndex' name='numBytes' type64='q'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHTTPMessageApplyCredentialDictionary'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='request' type64='^{__CFHTTPMessage=}'/>
<arg declared_type64='CFHTTPAuthenticationRef _Nonnull' name='auth' type64='^{_CFHTTPAuthentication=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='dict' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFStreamError * _Nullable' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHTTPMessageApplyCredentials'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='request' type64='^{__CFHTTPMessage=}'/>
<arg declared_type64='CFHTTPAuthenticationRef _Nonnull' name='auth' type64='^{_CFHTTPAuthentication=}'/>
<arg declared_type64='CFStringRef _Nullable' name='username' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable' name='password' type64='^{__CFString=}'/>
<arg declared_type64='CFStreamError * _Nullable' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHTTPMessageCopyAllHeaderFields'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='message' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='CFHTTPMessageCopyBody'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='message' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='CFHTTPMessageCopyHeaderFieldValue'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='message' type64='^{__CFHTTPMessage=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='headerField' type64='^{__CFString=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CFHTTPMessageCopyRequestMethod'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='request' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CFHTTPMessageCopyRequestURL'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='request' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='CFURLRef _Nullable' type64='^{__CFURL=}'/>
</function>
<function name='CFHTTPMessageCopyResponseStatusLine'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='response' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CFHTTPMessageCopySerializedMessage'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='message' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='CFHTTPMessageCopyVersion'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='message' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</function>
<function name='CFHTTPMessageCreateCopy'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='message' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='CFHTTPMessageRef _Nonnull' type64='^{__CFHTTPMessage=}'/>
</function>
<function name='CFHTTPMessageCreateEmpty'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='Boolean' name='isRequest' type64='B'/>
<retval declared_type64='CFHTTPMessageRef _Nonnull' type64='^{__CFHTTPMessage=}'/>
</function>
<function name='CFHTTPMessageCreateRequest'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='requestMethod' type64='^{__CFString=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='url' type64='^{__CFURL=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='httpVersion' type64='^{__CFString=}'/>
<retval declared_type64='CFHTTPMessageRef _Nonnull' type64='^{__CFHTTPMessage=}'/>
</function>
<function name='CFHTTPMessageCreateResponse'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFIndex' name='statusCode' type64='q'/>
<arg declared_type64='CFStringRef _Nullable' name='statusDescription' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='httpVersion' type64='^{__CFString=}'/>
<retval declared_type64='CFHTTPMessageRef _Nonnull' type64='^{__CFHTTPMessage=}'/>
</function>
<function name='CFHTTPMessageGetResponseStatusCode'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='response' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<function name='CFHTTPMessageGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CFHTTPMessageIsHeaderComplete'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='message' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHTTPMessageIsRequest'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='message' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHTTPMessageSetBody'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='message' type64='^{__CFHTTPMessage=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='bodyData' type64='^{__CFData=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFHTTPMessageSetHeaderFieldValue'>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='message' type64='^{__CFHTTPMessage=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='headerField' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable' name='value' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFHostCancelInfoResolution'>
<arg declared_type64='CFHostRef _Nonnull' name='theHost' type64='^{__CFHost=}'/>
<arg declared_type64='CFHostInfoType' name='info' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFHostCreateCopy'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFHostRef _Nonnull' name='host' type64='^{__CFHost=}'/>
<retval declared_type64='CFHostRef _Nonnull' type64='^{__CFHost=}'/>
</function>
<function name='CFHostCreateWithAddress'>
<arg declared_type64='CFAllocatorRef _Nullable' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='addr' type64='^{__CFData=}'/>
<retval declared_type64='CFHostRef _Nonnull' type64='^{__CFHost=}'/>
</function>
<function name='CFHostCreateWithName'>
<arg declared_type64='CFAllocatorRef _Nullable' name='allocator' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='hostname' type64='^{__CFString=}'/>
<retval declared_type64='CFHostRef _Nonnull' type64='^{__CFHost=}'/>
</function>
<function name='CFHostGetAddressing'>
<arg declared_type64='CFHostRef _Nonnull' name='theHost' type64='^{__CFHost=}'/>
<arg declared_type64='Boolean * _Nullable' name='hasBeenResolved' type64='^B'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CFHostGetNames'>
<arg declared_type64='CFHostRef _Nonnull' name='theHost' type64='^{__CFHost=}'/>
<arg declared_type64='Boolean * _Nullable' name='hasBeenResolved' type64='^B'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CFHostGetReachability'>
<arg declared_type64='CFHostRef _Nonnull' name='theHost' type64='^{__CFHost=}'/>
<arg declared_type64='Boolean * _Nullable' name='hasBeenResolved' type64='^B'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='CFHostGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CFHostScheduleWithRunLoop'>
<arg declared_type64='CFHostRef _Nonnull' name='theHost' type64='^{__CFHost=}'/>
<arg declared_type64='CFRunLoopRef _Nonnull' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFHostSetClient'>
<arg declared_type64='CFHostRef _Nonnull' name='theHost' type64='^{__CFHost=}'/>
<arg declared_type64='CFHostClientCallBack _Nullable' function_pointer='true' name='clientCB' type64='^?'>
<arg declared_type64='CFHostRef _Nonnull' type64='^{__CFHost=}'/>
<arg declared_type64='CFHostInfoType' type64='i'/>
<arg const='true' declared_type64='CFStreamError * _Nullable' type64='^{_CFStreamError=qi}'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFHostClientContext * _Nullable' name='clientContext' type64='^{CFHostClientContext=q^v^?^?^?}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHostStartInfoResolution'>
<arg declared_type64='CFHostRef _Nonnull' name='theHost' type64='^{__CFHost=}'/>
<arg declared_type64='CFHostInfoType' name='info' type64='i'/>
<arg declared_type64='CFStreamError * _Nullable' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFHostUnscheduleFromRunLoop'>
<arg declared_type64='CFHostRef _Nonnull' name='theHost' type64='^{__CFHost=}'/>
<arg declared_type64='CFRunLoopRef _Nonnull' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetDiagnosticCopyNetworkStatusPassively'>
<arg declared_type64='CFNetDiagnosticRef _Nonnull' name='details' type64='^{__CFNetDiagnostic=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nullable' name='description' type64='^^{__CFString}'/>
<retval declared_type64='CFNetDiagnosticStatus' type64='q'/>
</function>
<function name='CFNetDiagnosticCreateWithStreams'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFReadStreamRef _Nullable' name='readStream' type64='^{__CFReadStream=}'/>
<arg declared_type64='CFWriteStreamRef _Nullable' name='writeStream' type64='^{__CFWriteStream=}'/>
<retval declared_type64='CFNetDiagnosticRef _Nonnull' type64='^{__CFNetDiagnostic=}'/>
</function>
<function name='CFNetDiagnosticCreateWithURL'>
<arg declared_type64='CFAllocatorRef _Nonnull' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='url' type64='^{__CFURL=}'/>
<retval declared_type64='CFNetDiagnosticRef _Nonnull' type64='^{__CFNetDiagnostic=}'/>
</function>
<function name='CFNetDiagnosticDiagnoseProblemInteractively'>
<arg declared_type64='CFNetDiagnosticRef _Nonnull' name='details' type64='^{__CFNetDiagnostic=}'/>
<retval declared_type64='CFNetDiagnosticStatus' type64='q'/>
</function>
<function name='CFNetDiagnosticSetName'>
<arg declared_type64='CFNetDiagnosticRef _Nonnull' name='details' type64='^{__CFNetDiagnostic=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='name' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetServiceBrowserCreate'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFNetServiceBrowserClientCallBack _Nonnull' function_pointer='true' name='clientCB' type64='^?'>
<arg declared_type64='CFNetServiceBrowserRef _Nonnull' type64='^{__CFNetServiceBrowser=}'/>
<arg declared_type64='CFOptionFlags' type64='Q'/>
<arg declared_type64='CFTypeRef _Nonnull' type64='@'/>
<arg declared_type64='CFStreamError * _Nullable' type64='^{_CFStreamError=qi}'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFNetServiceClientContext * _Nonnull' name='clientContext' type64='^{CFNetServiceClientContext=q^v^?^?^?}'/>
<retval declared_type64='CFNetServiceBrowserRef _Nonnull' type64='^{__CFNetServiceBrowser=}'/>
</function>
<function name='CFNetServiceBrowserGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CFNetServiceBrowserInvalidate'>
<arg declared_type64='CFNetServiceBrowserRef _Nonnull' name='browser' type64='^{__CFNetServiceBrowser=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetServiceBrowserScheduleWithRunLoop'>
<arg declared_type64='CFNetServiceBrowserRef _Nonnull' name='browser' type64='^{__CFNetServiceBrowser=}'/>
<arg declared_type64='CFRunLoopRef _Nonnull' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetServiceBrowserSearchForDomains'>
<arg declared_type64='CFNetServiceBrowserRef _Nonnull' name='browser' type64='^{__CFNetServiceBrowser=}'/>
<arg declared_type64='Boolean' name='registrationDomains' type64='B'/>
<arg declared_type64='CFStreamError * _Nullable' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFNetServiceBrowserSearchForServices'>
<arg declared_type64='CFNetServiceBrowserRef _Nonnull' name='browser' type64='^{__CFNetServiceBrowser=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='domain' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='serviceType' type64='^{__CFString=}'/>
<arg declared_type64='CFStreamError * _Nullable' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFNetServiceBrowserStopSearch'>
<arg declared_type64='CFNetServiceBrowserRef _Nonnull' name='browser' type64='^{__CFNetServiceBrowser=}'/>
<arg declared_type64='CFStreamError * _Nullable' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetServiceBrowserUnscheduleFromRunLoop'>
<arg declared_type64='CFNetServiceBrowserRef _Nonnull' name='browser' type64='^{__CFNetServiceBrowser=}'/>
<arg declared_type64='CFRunLoopRef _Nonnull' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetServiceCancel'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetServiceCreate'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='domain' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='serviceType' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='name' type64='^{__CFString=}'/>
<arg declared_type64='SInt32' name='port' type64='i'/>
<retval declared_type64='CFNetServiceRef _Nonnull' type64='^{__CFNetService=}'/>
</function>
<function name='CFNetServiceCreateCopy'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFNetServiceRef _Nonnull' name='service' type64='^{__CFNetService=}'/>
<retval declared_type64='CFNetServiceRef _Nonnull' type64='^{__CFNetService=}'/>
</function>
<function name='CFNetServiceCreateDictionaryWithTXTData'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='txtRecord' type64='^{__CFData=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='CFNetServiceCreateTXTDataWithDictionary'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='keyValuePairs' type64='^{__CFDictionary=}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='CFNetServiceGetAddressing'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CFNetServiceGetDomain'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</function>
<function name='CFNetServiceGetName'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</function>
<function name='CFNetServiceGetPortNumber'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='CFNetServiceGetTXTData'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='CFNetServiceGetTargetHost'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CFNetServiceGetType'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</function>
<function name='CFNetServiceGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CFNetServiceMonitorCreate'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<arg declared_type64='CFNetServiceMonitorClientCallBack _Nonnull' function_pointer='true' name='clientCB' type64='^?'>
<arg declared_type64='CFNetServiceMonitorRef _Nonnull' type64='^{__CFNetServiceMonitor=}'/>
<arg declared_type64='CFNetServiceRef _Nonnull' type64='^{__CFNetService=}'/>
<arg declared_type64='CFNetServiceMonitorType' type64='i'/>
<arg declared_type64='CFDataRef _Nonnull' type64='^{__CFData=}'/>
<arg declared_type64='CFStreamError * _Nullable' type64='^{_CFStreamError=qi}'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFNetServiceClientContext * _Nonnull' name='clientContext' type64='^{CFNetServiceClientContext=q^v^?^?^?}'/>
<retval declared_type64='CFNetServiceMonitorRef _Nonnull' type64='^{__CFNetServiceMonitor=}'/>
</function>
<function name='CFNetServiceMonitorGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CFNetServiceMonitorInvalidate'>
<arg declared_type64='CFNetServiceMonitorRef _Nonnull' name='monitor' type64='^{__CFNetServiceMonitor=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetServiceMonitorScheduleWithRunLoop'>
<arg declared_type64='CFNetServiceMonitorRef _Nonnull' name='monitor' type64='^{__CFNetServiceMonitor=}'/>
<arg declared_type64='CFRunLoopRef _Nonnull' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetServiceMonitorStart'>
<arg declared_type64='CFNetServiceMonitorRef _Nonnull' name='monitor' type64='^{__CFNetServiceMonitor=}'/>
<arg declared_type64='CFNetServiceMonitorType' name='recordType' type64='i'/>
<arg declared_type64='CFStreamError * _Nullable' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFNetServiceMonitorStop'>
<arg declared_type64='CFNetServiceMonitorRef _Nonnull' name='monitor' type64='^{__CFNetServiceMonitor=}'/>
<arg declared_type64='CFStreamError * _Nullable' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetServiceMonitorUnscheduleFromRunLoop'>
<arg declared_type64='CFNetServiceMonitorRef _Nonnull' name='monitor' type64='^{__CFNetServiceMonitor=}'/>
<arg declared_type64='CFRunLoopRef _Nonnull' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetServiceRegisterWithOptions'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<arg declared_type64='CFOptionFlags' name='options' type64='Q'/>
<arg declared_type64='CFStreamError * _Nullable' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFNetServiceResolveWithTimeout'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<arg declared_type64='CFTimeInterval' name='timeout' type64='d'/>
<arg declared_type64='CFStreamError * _Nullable' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFNetServiceScheduleWithRunLoop'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<arg declared_type64='CFRunLoopRef _Nonnull' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetServiceSetClient'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<arg declared_type64='CFNetServiceClientCallBack _Nullable' function_pointer='true' name='clientCB' type64='^?'>
<arg declared_type64='CFNetServiceRef _Nonnull' type64='^{__CFNetService=}'/>
<arg declared_type64='CFStreamError * _Nullable' type64='^{_CFStreamError=qi}'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFNetServiceClientContext * _Nullable' name='clientContext' type64='^{CFNetServiceClientContext=q^v^?^?^?}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFNetServiceSetTXTData'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='txtRecord' type64='^{__CFData=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CFNetServiceUnscheduleFromRunLoop'>
<arg declared_type64='CFNetServiceRef _Nonnull' name='theService' type64='^{__CFNetService=}'/>
<arg declared_type64='CFRunLoopRef _Nonnull' name='runLoop' type64='^{__CFRunLoop=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='runLoopMode' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFNetworkCopyProxiesForAutoConfigurationScript'>
<arg declared_type64='CFStringRef _Nonnull' name='proxyAutoConfigurationScript' type64='^{__CFString=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='targetURL' type64='^{__CFURL=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CFNetworkCopyProxiesForURL'>
<arg declared_type64='CFURLRef _Nonnull' name='url' type64='^{__CFURL=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='proxySettings' type64='^{__CFDictionary=}'/>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CFNetworkCopySystemProxySettings'>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='CFNetworkExecuteProxyAutoConfigurationScript'>
<arg declared_type64='CFStringRef _Nonnull' name='proxyAutoConfigurationScript' type64='^{__CFString=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='targetURL' type64='^{__CFURL=}'/>
<arg declared_type64='CFProxyAutoConfigurationResultCallback _Nonnull' function_pointer='true' name='cb' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
<arg declared_type64='CFErrorRef _Nullable' type64='^{__CFError=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFStreamClientContext * _Nonnull' name='clientContext' type64='^{_CFStreamClientContext=q^v^?^?^?}'/>
<retval declared_type64='CFRunLoopSourceRef _Nonnull' type64='^{__CFRunLoopSource=}'/>
</function>
<function name='CFNetworkExecuteProxyAutoConfigurationURL'>
<arg declared_type64='CFURLRef _Nonnull' name='proxyAutoConfigURL' type64='^{__CFURL=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='targetURL' type64='^{__CFURL=}'/>
<arg declared_type64='CFProxyAutoConfigurationResultCallback _Nonnull' function_pointer='true' name='cb' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<arg declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
<arg declared_type64='CFErrorRef _Nullable' type64='^{__CFError=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='CFStreamClientContext * _Nonnull' name='clientContext' type64='^{_CFStreamClientContext=q^v^?^?^?}'/>
<retval declared_type64='CFRunLoopSourceRef _Nonnull' type64='^{__CFRunLoopSource=}'/>
</function>
<function name='CFReadStreamCreateForHTTPRequest'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='request' type64='^{__CFHTTPMessage=}'/>
<retval declared_type64='CFReadStreamRef _Nonnull' type64='^{__CFReadStream=}'/>
</function>
<function name='CFReadStreamCreateForStreamedHTTPRequest'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFHTTPMessageRef _Nonnull' name='requestHeaders' type64='^{__CFHTTPMessage=}'/>
<arg declared_type64='CFReadStreamRef _Nonnull' name='requestBody' type64='^{__CFReadStream=}'/>
<retval declared_type64='CFReadStreamRef _Nonnull' type64='^{__CFReadStream=}'/>
</function>
<function name='CFReadStreamCreateWithFTPURL'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='ftpURL' type64='^{__CFURL=}'/>
<retval declared_type64='CFReadStreamRef _Nonnull' type64='^{__CFReadStream=}'/>
</function>
<function inline='true' name='CFSocketStreamSOCKSGetError'>
<arg const='true' declared_type64='CFStreamError * _Nonnull' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function inline='true' name='CFSocketStreamSOCKSGetErrorSubdomain'>
<arg const='true' declared_type64='CFStreamError * _Nonnull' name='error' type64='^{_CFStreamError=qi}'/>
<retval declared_type64='SInt32' type64='i'/>
</function>
<function name='CFStreamCreatePairWithSocketToCFHost'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFHostRef _Nonnull' name='host' type64='^{__CFHost=}'/>
<arg declared_type64='SInt32' name='port' type64='i'/>
<arg declared_type64='CFReadStreamRef _Nullable * _Nullable' name='readStream' type64='^^{__CFReadStream}'/>
<arg declared_type64='CFWriteStreamRef _Nullable * _Nullable' name='writeStream' type64='^^{__CFWriteStream}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFStreamCreatePairWithSocketToNetService'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFNetServiceRef _Nonnull' name='service' type64='^{__CFNetService=}'/>
<arg declared_type64='CFReadStreamRef _Nullable * _Nullable' name='readStream' type64='^^{__CFReadStream}'/>
<arg declared_type64='CFWriteStreamRef _Nullable * _Nullable' name='writeStream' type64='^^{__CFWriteStream}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CFWriteStreamCreateWithFTPURL'>
<arg declared_type64='CFAllocatorRef _Nullable' name='alloc' type64='^{__CFAllocator=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='ftpURL' type64='^{__CFURL=}'/>
<retval declared_type64='CFWriteStreamRef _Nonnull' type64='^{__CFWriteStream=}'/>
</function>
</signatures>
