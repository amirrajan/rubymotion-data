<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kNWErrorDomainDNS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kNWErrorDomainPOSIX' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kNWErrorDomainTLS' type64='^{__CFString=}'/>
<enum name='NW_FRAMER_CREATE_FLAGS_DEFAULT' value64='0'/>
<enum name='NW_FRAMER_WAKEUP_TIME_FOREVER' value64='18446744073709551615'/>
<enum name='NW_LISTENER_INFINITE_CONNECTION_LIMIT' value64='4294967295'/>
<enum name='NW_NOT_i386_MAC' value64='1'/>
<enum name='nw_browse_result_change_identical' value64='1'/>
<enum name='nw_browse_result_change_interface_added' value64='8'/>
<enum name='nw_browse_result_change_interface_removed' value64='16'/>
<enum name='nw_browse_result_change_invalid' value64='0'/>
<enum name='nw_browse_result_change_result_added' value64='2'/>
<enum name='nw_browse_result_change_result_removed' value64='4'/>
<enum name='nw_browse_result_change_txt_record_changed' value64='32'/>
<enum name='nw_browser_state_cancelled' value64='3'/>
<enum name='nw_browser_state_failed' value64='2'/>
<enum name='nw_browser_state_invalid' value64='0'/>
<enum name='nw_browser_state_ready' value64='1'/>
<enum name='nw_connection_state_cancelled' value64='5'/>
<enum name='nw_connection_state_failed' value64='4'/>
<enum name='nw_connection_state_invalid' value64='0'/>
<enum name='nw_connection_state_preparing' value64='2'/>
<enum name='nw_connection_state_ready' value64='3'/>
<enum name='nw_connection_state_waiting' value64='1'/>
<enum name='nw_data_transfer_report_state_collected' value64='2'/>
<enum name='nw_data_transfer_report_state_collecting' value64='1'/>
<enum name='nw_endpoint_type_address' value64='1'/>
<enum name='nw_endpoint_type_bonjour_service' value64='3'/>
<enum name='nw_endpoint_type_host' value64='2'/>
<enum name='nw_endpoint_type_invalid' value64='0'/>
<enum name='nw_endpoint_type_url' value64='4'/>
<enum name='nw_error_domain_dns' value64='2'/>
<enum name='nw_error_domain_invalid' value64='0'/>
<enum name='nw_error_domain_posix' value64='1'/>
<enum name='nw_error_domain_tls' value64='3'/>
<enum name='nw_ethernet_channel_state_cancelled' value64='5'/>
<enum name='nw_ethernet_channel_state_failed' value64='4'/>
<enum name='nw_ethernet_channel_state_invalid' value64='0'/>
<enum name='nw_ethernet_channel_state_preparing' value64='2'/>
<enum name='nw_ethernet_channel_state_ready' value64='3'/>
<enum name='nw_ethernet_channel_state_waiting' value64='1'/>
<enum name='nw_framer_start_result_ready' value64='1'/>
<enum name='nw_framer_start_result_will_mark_ready' value64='2'/>
<enum name='nw_interface_type_cellular' value64='2'/>
<enum name='nw_interface_type_loopback' value64='4'/>
<enum name='nw_interface_type_other' value64='0'/>
<enum name='nw_interface_type_wifi' value64='1'/>
<enum name='nw_interface_type_wired' value64='3'/>
<enum name='nw_ip_ecn_flag_ce' value64='3'/>
<enum name='nw_ip_ecn_flag_ect_0' value64='2'/>
<enum name='nw_ip_ecn_flag_ect_1' value64='1'/>
<enum name='nw_ip_ecn_flag_non_ect' value64='0'/>
<enum name='nw_ip_local_address_preference_default' value64='0'/>
<enum name='nw_ip_local_address_preference_stable' value64='2'/>
<enum name='nw_ip_local_address_preference_temporary' value64='1'/>
<enum name='nw_ip_version_4' value64='4'/>
<enum name='nw_ip_version_6' value64='6'/>
<enum name='nw_ip_version_any' value64='0'/>
<enum name='nw_listener_state_cancelled' value64='4'/>
<enum name='nw_listener_state_failed' value64='3'/>
<enum name='nw_listener_state_invalid' value64='0'/>
<enum name='nw_listener_state_ready' value64='2'/>
<enum name='nw_listener_state_waiting' value64='1'/>
<enum name='nw_multipath_service_aggregate' value64='3'/>
<enum name='nw_multipath_service_disabled' value64='0'/>
<enum name='nw_multipath_service_handover' value64='1'/>
<enum name='nw_multipath_service_interactive' value64='2'/>
<enum name='nw_parameters_expired_dns_behavior_allow' value64='1'/>
<enum name='nw_parameters_expired_dns_behavior_default' value64='0'/>
<enum name='nw_parameters_expired_dns_behavior_prohibit' value64='2'/>
<enum name='nw_path_status_invalid' value64='0'/>
<enum name='nw_path_status_satisfiable' value64='3'/>
<enum name='nw_path_status_satisfied' value64='1'/>
<enum name='nw_path_status_unsatisfied' value64='2'/>
<enum name='nw_report_resolution_source_cache' value64='2'/>
<enum name='nw_report_resolution_source_expired_cache' value64='3'/>
<enum name='nw_report_resolution_source_query' value64='1'/>
<enum name='nw_service_class_background' value64='1'/>
<enum name='nw_service_class_best_effort' value64='0'/>
<enum name='nw_service_class_interactive_video' value64='2'/>
<enum name='nw_service_class_interactive_voice' value64='3'/>
<enum name='nw_service_class_responsive_data' value64='4'/>
<enum name='nw_service_class_signaling' value64='5'/>
<enum name='nw_txt_record_find_key_empty_value' value64='3'/>
<enum name='nw_txt_record_find_key_invalid' value64='0'/>
<enum name='nw_txt_record_find_key_no_value' value64='2'/>
<enum name='nw_txt_record_find_key_non_empty_value' value64='4'/>
<enum name='nw_txt_record_find_key_not_present' value64='1'/>
<enum name='nw_ws_close_code_abnormal_closure' value64='1006'/>
<enum name='nw_ws_close_code_going_away' value64='1001'/>
<enum name='nw_ws_close_code_internal_server_error' value64='1011'/>
<enum name='nw_ws_close_code_invalid_frame_payload_data' value64='1007'/>
<enum name='nw_ws_close_code_mandatory_extension' value64='1010'/>
<enum name='nw_ws_close_code_message_too_big' value64='1009'/>
<enum name='nw_ws_close_code_no_status_received' value64='1005'/>
<enum name='nw_ws_close_code_normal_closure' value64='1000'/>
<enum name='nw_ws_close_code_policy_violation' value64='1008'/>
<enum name='nw_ws_close_code_protocol_error' value64='1002'/>
<enum name='nw_ws_close_code_tls_handshake' value64='1015'/>
<enum name='nw_ws_close_code_unsupported_data' value64='1003'/>
<enum name='nw_ws_opcode_binary' value64='2'/>
<enum name='nw_ws_opcode_close' value64='8'/>
<enum name='nw_ws_opcode_cont' value64='0'/>
<enum name='nw_ws_opcode_invalid' value64='-1'/>
<enum name='nw_ws_opcode_ping' value64='9'/>
<enum name='nw_ws_opcode_pong' value64='10'/>
<enum name='nw_ws_opcode_text' value64='1'/>
<enum name='nw_ws_response_status_accept' value64='1'/>
<enum name='nw_ws_response_status_invalid' value64='0'/>
<enum name='nw_ws_response_status_reject' value64='2'/>
<enum name='nw_ws_version_13' value64='1'/>
<enum name='nw_ws_version_invalid' value64='0'/>
<function name='nw_advertise_descriptor_copy_txt_record_object'>
<arg declared_type64='nw_advertise_descriptor_t _Nonnull' name='advertise_descriptor' type64='@'/>
<retval already_retained='true' declared_type64='nw_txt_record_t _Nullable' type64='@'/>
</function>
<function name='nw_advertise_descriptor_create_bonjour_service'>
<arg const='true' declared_type64='char * _Nullable' name='name' type64='*'/>
<arg const='true' declared_type64='char * _Nonnull' name='type' type64='*'/>
<arg const='true' declared_type64='char * _Nullable' name='domain' type64='*'/>
<retval already_retained='true' declared_type64='nw_advertise_descriptor_t _Nullable' type64='@'/>
</function>
<function name='nw_advertise_descriptor_get_no_auto_rename'>
<arg declared_type64='nw_advertise_descriptor_t _Nonnull' name='advertise_descriptor' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_advertise_descriptor_set_no_auto_rename'>
<arg declared_type64='nw_advertise_descriptor_t _Nonnull' name='advertise_descriptor' type64='@'/>
<arg declared_type64='_Bool' name='no_auto_rename' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_advertise_descriptor_set_txt_record'>
<arg declared_type64='nw_advertise_descriptor_t _Nonnull' name='advertise_descriptor' type64='@'/>
<arg const='true' declared_type64='void * _Nullable' name='txt_record' type64='^v'/>
<arg declared_type64='size_t' name='txt_length' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_advertise_descriptor_set_txt_record_object'>
<arg declared_type64='nw_advertise_descriptor_t _Nonnull' name='advertise_descriptor' type64='@'/>
<arg declared_type64='nw_txt_record_t _Nullable' name='txt_record' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_browse_descriptor_create_bonjour_service'>
<arg const='true' declared_type64='char * _Nonnull' name='type' type64='*'/>
<arg const='true' declared_type64='char * _Nullable' name='domain' type64='*'/>
<retval already_retained='true' declared_type64='nw_browse_descriptor_t _Nonnull' type64='@'/>
</function>
<function name='nw_browse_descriptor_get_bonjour_service_domain'>
<arg declared_type64='nw_browse_descriptor_t _Nonnull' name='descriptor' type64='@'/>
<retval const='true' declared_type64='char * _Nullable' type64='*'/>
</function>
<function name='nw_browse_descriptor_get_bonjour_service_type'>
<arg declared_type64='nw_browse_descriptor_t _Nonnull' name='descriptor' type64='@'/>
<retval const='true' declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='nw_browse_descriptor_get_include_txt_record'>
<arg declared_type64='nw_browse_descriptor_t _Nonnull' name='descriptor' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_browse_descriptor_set_include_txt_record'>
<arg declared_type64='nw_browse_descriptor_t _Nonnull' name='descriptor' type64='@'/>
<arg declared_type64='_Bool' name='include_txt_record' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_browse_result_copy_endpoint'>
<arg declared_type64='nw_browse_result_t _Nonnull' name='result' type64='@'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
</function>
<function name='nw_browse_result_copy_txt_record_object'>
<arg declared_type64='nw_browse_result_t _Nonnull' name='result' type64='@'/>
<retval already_retained='true' declared_type64='nw_txt_record_t _Nullable' type64='@'/>
</function>
<function name='nw_browse_result_enumerate_interfaces'>
<arg declared_type64='nw_browse_result_t _Nonnull' name='result' type64='@'/>
<arg declared_type64='nw_browse_result_enumerate_interface_t _Nonnull' function_pointer='true' name='enumerator' type64='@?'>
<arg declared_type64='nw_interface_t _Nonnull' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_browse_result_get_changes'>
<arg declared_type64='nw_browse_result_t _Nullable' name='old_result' type64='@'/>
<arg declared_type64='nw_browse_result_t _Nullable' name='new_result' type64='@'/>
<retval declared_type64='nw_browse_result_change_t' type64='Q'/>
</function>
<function name='nw_browse_result_get_interfaces_count'>
<arg declared_type64='nw_browse_result_t _Nonnull' name='result' type64='@'/>
<retval declared_type64='size_t' type64='Q'/>
</function>
<function name='nw_browser_cancel'>
<arg declared_type64='nw_browser_t _Nonnull' name='browser' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_browser_copy_browse_descriptor'>
<arg declared_type64='nw_browser_t _Nonnull' name='browser' type64='@'/>
<retval already_retained='true' declared_type64='nw_browse_descriptor_t _Nonnull' type64='@'/>
</function>
<function name='nw_browser_copy_parameters'>
<arg declared_type64='nw_browser_t _Nonnull' name='browser' type64='@'/>
<retval already_retained='true' declared_type64='nw_parameters_t _Nonnull' type64='@'/>
</function>
<function name='nw_browser_create'>
<arg declared_type64='nw_browse_descriptor_t _Nonnull' name='descriptor' type64='@'/>
<arg declared_type64='nw_parameters_t _Nullable' name='parameters' type64='@'/>
<retval already_retained='true' declared_type64='nw_browser_t _Nonnull' type64='@'/>
</function>
<function name='nw_browser_set_browse_results_changed_handler'>
<arg declared_type64='nw_browser_t _Nonnull' name='browser' type64='@'/>
<arg declared_type64='nw_browser_browse_results_changed_handler_t _Nullable' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='nw_browse_result_t _Nonnull' type64='@'/>
<arg declared_type64='nw_browse_result_t _Nonnull' type64='@'/>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_browser_set_queue'>
<arg declared_type64='nw_browser_t _Nonnull' name='browser' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nonnull' name='queue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_browser_set_state_changed_handler'>
<arg declared_type64='nw_browser_t _Nonnull' name='browser' type64='@'/>
<arg declared_type64='nw_browser_state_changed_handler_t _Nullable' function_pointer='true' name='state_changed_handler' type64='@?'>
<arg declared_type64='nw_browser_state_t' type64='i'/>
<arg declared_type64='nw_error_t _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_browser_start'>
<arg declared_type64='nw_browser_t _Nonnull' name='browser' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_access_establishment_report'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nonnull' name='queue' type64='@'/>
<arg declared_type64='nw_establishment_report_access_block_t _Nonnull' function_pointer='true' name='access_block' type64='@?'>
<arg declared_type64='nw_establishment_report_t _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_batch'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='dispatch_block_t _Nonnull' function_pointer='true' name='batch_block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_cancel'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_cancel_current_endpoint'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_copy_current_path'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<retval already_retained='true' declared_type64='nw_path_t _Nullable' type64='@'/>
</function>
<function name='nw_connection_copy_description'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<retval declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='nw_connection_copy_endpoint'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
</function>
<function name='nw_connection_copy_parameters'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<retval already_retained='true' declared_type64='nw_parameters_t _Nonnull' type64='@'/>
</function>
<function name='nw_connection_copy_protocol_metadata'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='nw_protocol_definition_t _Nonnull' name='definition' type64='@'/>
<retval already_retained='true' declared_type64='nw_protocol_metadata_t _Nullable' type64='@'/>
</function>
<function name='nw_connection_create'>
<arg declared_type64='nw_endpoint_t _Nonnull' name='endpoint' type64='@'/>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval already_retained='true' declared_type64='nw_connection_t _Nonnull' type64='@'/>
</function>
<function name='nw_connection_create_new_data_transfer_report'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<retval already_retained='true' declared_type64='nw_data_transfer_report_t _Nonnull' type64='@'/>
</function>
<function name='nw_connection_force_cancel'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_get_maximum_datagram_size'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<retval declared_type64='uint32_t' type64='I'/>
</function>
<function name='nw_connection_receive'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='uint32_t' name='minimum_incomplete_length' type64='I'/>
<arg declared_type64='uint32_t' name='maximum_length' type64='I'/>
<arg declared_type64='nw_connection_receive_completion_t _Nonnull' function_pointer='true' name='completion' type64='@?'>
<arg declared_type64='dispatch_data_t _Nullable' type64='@'/>
<arg declared_type64='nw_content_context_t _Nullable' type64='@'/>
<arg declared_type64='_Bool' type64='B'/>
<arg declared_type64='nw_error_t _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_receive_message'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='nw_connection_receive_completion_t _Nonnull' function_pointer='true' name='completion' type64='@?'>
<arg declared_type64='dispatch_data_t _Nullable' type64='@'/>
<arg declared_type64='nw_content_context_t _Nullable' type64='@'/>
<arg declared_type64='_Bool' type64='B'/>
<arg declared_type64='nw_error_t _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_restart'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_send'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='dispatch_data_t _Nullable' name='content' type64='@'/>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<arg declared_type64='_Bool' name='is_complete' type64='B'/>
<arg declared_type64='nw_connection_send_completion_t _Nonnull' function_pointer='true' name='completion' type64='@?'>
<arg declared_type64='nw_error_t _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_set_better_path_available_handler'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='nw_connection_boolean_event_handler_t _Nullable' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_set_path_changed_handler'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='nw_connection_path_event_handler_t _Nullable' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='nw_path_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_set_queue'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nonnull' name='queue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_set_state_changed_handler'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='nw_connection_state_changed_handler_t _Nullable' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='nw_connection_state_t' type64='i'/>
<arg declared_type64='nw_error_t _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_set_viability_changed_handler'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='nw_connection_boolean_event_handler_t _Nullable' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_connection_start'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_content_context_copy_antecedent'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<retval already_retained='true' declared_type64='nw_content_context_t _Nullable' type64='@'/>
</function>
<function name='nw_content_context_copy_protocol_metadata'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<arg declared_type64='nw_protocol_definition_t _Nonnull' name='protocol' type64='@'/>
<retval already_retained='true' declared_type64='nw_protocol_metadata_t _Nullable' type64='@'/>
</function>
<function name='nw_content_context_create'>
<arg const='true' declared_type64='char * _Nonnull' name='context_identifier' type64='*'/>
<retval already_retained='true' declared_type64='nw_content_context_t _Nonnull' type64='@'/>
</function>
<function name='nw_content_context_foreach_protocol_metadata'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(nw_protocol_definition_t _Nonnull, nw_protocol_metadata_t _Nonnull)' function_pointer='true' name='foreach_block' type64='@?'>
<arg declared_type64='nw_protocol_definition_t _Nonnull' type64='@'/>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_content_context_get_expiration_milliseconds'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_content_context_get_identifier'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<retval const='true' declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='nw_content_context_get_is_final'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_content_context_get_relative_priority'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='nw_content_context_set_antecedent'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<arg declared_type64='nw_content_context_t _Nullable' name='antecendent_context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_content_context_set_expiration_milliseconds'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<arg declared_type64='uint64_t' name='expiration_milliseconds' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_content_context_set_is_final'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<arg declared_type64='_Bool' name='is_final' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_content_context_set_metadata_for_protocol'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='protocol_metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_content_context_set_relative_priority'>
<arg declared_type64='nw_content_context_t _Nonnull' name='context' type64='@'/>
<arg declared_type64='double' name='relative_priority' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_data_transfer_report_collect'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nonnull' name='queue' type64='@'/>
<arg declared_type64='nw_data_transfer_report_collect_block_t _Nonnull' function_pointer='true' name='collect_block' type64='@?'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_data_transfer_report_copy_path_interface'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval already_retained='true' declared_type64='nw_interface_t _Nonnull' type64='@'/>
</function>
<function name='nw_data_transfer_report_get_duration_milliseconds'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_path_count'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<retval declared_type64='uint32_t' type64='I'/>
</function>
<function name='nw_data_transfer_report_get_received_application_byte_count'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_received_ip_packet_count'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_received_transport_byte_count'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_received_transport_duplicate_byte_count'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_received_transport_out_of_order_byte_count'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_sent_application_byte_count'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_sent_ip_packet_count'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_sent_transport_byte_count'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_sent_transport_retransmitted_byte_count'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_state'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<retval declared_type64='nw_data_transfer_report_state_t' type64='i'/>
</function>
<function name='nw_data_transfer_report_get_transport_minimum_rtt_milliseconds'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_transport_rtt_variance'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds'>
<arg declared_type64='nw_data_transfer_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='uint32_t' name='path_index' type64='I'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_endpoint_copy_address_string'>
<arg declared_type64='nw_endpoint_t _Nonnull' name='endpoint' type64='@'/>
<retval declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='nw_endpoint_copy_port_string'>
<arg declared_type64='nw_endpoint_t _Nonnull' name='endpoint' type64='@'/>
<retval declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='nw_endpoint_create_address'>
<arg const='true' declared_type64='struct sockaddr * _Nonnull' name='address' type64='^{sockaddr=CC[14c]}'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
</function>
<function name='nw_endpoint_create_bonjour_service'>
<arg const='true' declared_type64='char * _Nonnull' name='name' type64='*'/>
<arg const='true' declared_type64='char * _Nonnull' name='type' type64='*'/>
<arg const='true' declared_type64='char * _Nonnull' name='domain' type64='*'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
</function>
<function name='nw_endpoint_create_host'>
<arg const='true' declared_type64='char * _Nonnull' name='hostname' type64='*'/>
<arg const='true' declared_type64='char * _Nonnull' name='port' type64='*'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
</function>
<function name='nw_endpoint_create_url'>
<arg const='true' declared_type64='char * _Nonnull' name='url' type64='*'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
</function>
<function name='nw_endpoint_get_address'>
<arg declared_type64='nw_endpoint_t _Nonnull' name='endpoint' type64='@'/>
<retval const='true' declared_type64='struct sockaddr * _Nonnull' type64='^{sockaddr=CC[14c]}'/>
</function>
<function name='nw_endpoint_get_bonjour_service_domain'>
<arg declared_type64='nw_endpoint_t _Nonnull' name='endpoint' type64='@'/>
<retval const='true' declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='nw_endpoint_get_bonjour_service_name'>
<arg declared_type64='nw_endpoint_t _Nonnull' name='endpoint' type64='@'/>
<retval const='true' declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='nw_endpoint_get_bonjour_service_type'>
<arg declared_type64='nw_endpoint_t _Nonnull' name='endpoint' type64='@'/>
<retval const='true' declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='nw_endpoint_get_hostname'>
<arg declared_type64='nw_endpoint_t _Nonnull' name='endpoint' type64='@'/>
<retval const='true' declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='nw_endpoint_get_port'>
<arg declared_type64='nw_endpoint_t _Nonnull' name='endpoint' type64='@'/>
<retval declared_type64='uint16_t' type64='S'/>
</function>
<function name='nw_endpoint_get_type'>
<arg declared_type64='nw_endpoint_t _Nonnull' name='endpoint' type64='@'/>
<retval declared_type64='nw_endpoint_type_t' type64='i'/>
</function>
<function name='nw_endpoint_get_url'>
<arg declared_type64='nw_endpoint_t _Nonnull' name='endpoint' type64='@'/>
<retval const='true' declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='nw_error_copy_cf_error'>
<arg declared_type64='nw_error_t _Nonnull' name='error' type64='@'/>
<retval declared_type64='CFErrorRef _Nonnull' type64='^{__CFError=}'/>
</function>
<function name='nw_error_get_error_code'>
<arg declared_type64='nw_error_t _Nonnull' name='error' type64='@'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='nw_error_get_error_domain'>
<arg declared_type64='nw_error_t _Nonnull' name='error' type64='@'/>
<retval declared_type64='nw_error_domain_t' type64='i'/>
</function>
<function name='nw_establishment_report_copy_proxy_endpoint'>
<arg declared_type64='nw_establishment_report_t _Nonnull' name='report' type64='@'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nullable' type64='@'/>
</function>
<function name='nw_establishment_report_enumerate_protocols'>
<arg declared_type64='nw_establishment_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='nw_report_protocol_enumerator_t _Nonnull' function_pointer='true' name='enumerate_block' type64='@?'>
<arg declared_type64='nw_protocol_definition_t _Nonnull' type64='@'/>
<arg declared_type64='uint64_t' type64='Q'/>
<arg declared_type64='uint64_t' type64='Q'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_establishment_report_enumerate_resolutions'>
<arg declared_type64='nw_establishment_report_t _Nonnull' name='report' type64='@'/>
<arg declared_type64='nw_report_resolution_enumerator_t _Nonnull' function_pointer='true' name='enumerate_block' type64='@?'>
<arg declared_type64='nw_report_resolution_source_t' type64='i'/>
<arg declared_type64='uint64_t' type64='Q'/>
<arg declared_type64='uint32_t' type64='I'/>
<arg declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
<arg declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_establishment_report_get_attempt_started_after_milliseconds'>
<arg declared_type64='nw_establishment_report_t _Nonnull' name='report' type64='@'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_establishment_report_get_duration_milliseconds'>
<arg declared_type64='nw_establishment_report_t _Nonnull' name='report' type64='@'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_establishment_report_get_previous_attempt_count'>
<arg declared_type64='nw_establishment_report_t _Nonnull' name='report' type64='@'/>
<retval declared_type64='uint32_t' type64='I'/>
</function>
<function name='nw_establishment_report_get_proxy_configured'>
<arg declared_type64='nw_establishment_report_t _Nonnull' name='report' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_establishment_report_get_used_proxy'>
<arg declared_type64='nw_establishment_report_t _Nonnull' name='report' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_framer_async'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='nw_framer_block_t _Nonnull' function_pointer='true' name='async_block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_copy_local_endpoint'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
</function>
<function name='nw_framer_copy_parameters'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<retval already_retained='true' declared_type64='nw_parameters_t _Nonnull' type64='@'/>
</function>
<function name='nw_framer_copy_remote_endpoint'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
</function>
<function name='nw_framer_create_definition'>
<arg const='true' declared_type64='char * _Nonnull' name='identifier' type64='*'/>
<arg declared_type64='uint32_t' name='flags' type64='I'/>
<arg declared_type64='nw_framer_start_handler_t _Nonnull' function_pointer='true' name='start_handler' type64='@?'>
<arg declared_type64='nw_framer_t _Nonnull' type64='@'/>
<retval declared_type64='nw_framer_start_result_t' type64='i'/>
</arg>
<retval already_retained='true' declared_type64='nw_protocol_definition_t _Nonnull' type64='@'/>
</function>
<function name='nw_framer_create_options'>
<arg declared_type64='nw_protocol_definition_t _Nonnull' name='framer_definition' type64='@'/>
<retval already_retained='true' declared_type64='nw_protocol_options_t _Nonnull' type64='@'/>
</function>
<function name='nw_framer_deliver_input'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' name='input_buffer' type64='*'/>
<arg declared_type64='size_t' name='input_length' type64='Q'/>
<arg declared_type64='nw_framer_message_t _Nonnull' name='message' type64='@'/>
<arg declared_type64='_Bool' name='is_complete' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_deliver_input_no_copy'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='size_t' name='input_length' type64='Q'/>
<arg declared_type64='nw_framer_message_t _Nonnull' name='message' type64='@'/>
<arg declared_type64='_Bool' name='is_complete' type64='B'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_framer_mark_failed_with_error'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='int' name='error_code' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_mark_ready'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_message_access_value'>
<arg declared_type64='nw_framer_message_t _Nonnull' name='message' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='key' type64='*'/>
<arg declared_type64='_Bool (^ _Nonnull)( void * _Nullable)' function_pointer='true' name='access_value' type64='@?'>
<arg const='true' declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_framer_message_copy_object_value'>
<arg declared_type64='nw_framer_message_t _Nonnull' name='message' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='key' type64='*'/>
<retval already_retained='true' declared_type64='id _Nullable' type64='@'/>
</function>
<function name='nw_framer_message_create'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<retval already_retained='true' declared_type64='nw_framer_message_t _Nonnull' type64='@'/>
</function>
<function name='nw_framer_message_set_object_value'>
<arg declared_type64='nw_framer_message_t _Nonnull' name='message' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='key' type64='*'/>
<arg declared_type64='id _Nullable' name='value' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_message_set_value'>
<arg declared_type64='nw_framer_message_t _Nonnull' name='message' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='key' type64='*'/>
<arg declared_type64='void * _Nullable' name='value' type64='^v'/>
<arg declared_type64='nw_framer_message_dispose_value_t _Nullable' function_pointer='true' name='dispose_value' type64='@?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_parse_input'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='size_t' name='minimum_incomplete_length' type64='Q'/>
<arg declared_type64='size_t' name='maximum_length' type64='Q'/>
<arg declared_type64='uint8_t * _Nullable' name='temp_buffer' type64='*'/>
<arg declared_type64='nw_framer_parse_completion_t _Nonnull' function_pointer='true' name='parse' type64='@?'>
<arg declared_type64='uint8_t * _Nullable' type64='*'/>
<arg declared_type64='size_t' type64='Q'/>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='size_t' type64='Q'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_framer_parse_output'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='size_t' name='minimum_incomplete_length' type64='Q'/>
<arg declared_type64='size_t' name='maximum_length' type64='Q'/>
<arg declared_type64='uint8_t * _Nullable' name='temp_buffer' type64='*'/>
<arg declared_type64='nw_framer_parse_completion_t _Nonnull' function_pointer='true' name='parse' type64='@?'>
<arg declared_type64='uint8_t * _Nullable' type64='*'/>
<arg declared_type64='size_t' type64='Q'/>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='size_t' type64='Q'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_framer_pass_through_input'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_pass_through_output'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_prepend_application_protocol'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='protocol_options' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_framer_protocol_create_message'>
<arg declared_type64='nw_protocol_definition_t _Nonnull' name='definition' type64='@'/>
<retval already_retained='true' declared_type64='nw_framer_message_t _Nonnull' type64='@'/>
</function>
<function name='nw_framer_schedule_wakeup'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='uint64_t' name='milliseconds' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_set_cleanup_handler'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='nw_framer_cleanup_handler_t _Nonnull' function_pointer='true' name='cleanup_handler' type64='@?'>
<arg declared_type64='nw_framer_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_set_input_handler'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='nw_framer_input_handler_t _Nonnull' function_pointer='true' name='input_handler' type64='@?'>
<arg declared_type64='nw_framer_t _Nonnull' type64='@'/>
<retval declared_type64='size_t' type64='Q'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_set_output_handler'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='nw_framer_output_handler_t _Nonnull' function_pointer='true' name='output_handler' type64='@?'>
<arg declared_type64='nw_framer_t _Nonnull' type64='@'/>
<arg declared_type64='nw_framer_message_t _Nonnull' type64='@'/>
<arg declared_type64='size_t' type64='Q'/>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_set_stop_handler'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='nw_framer_stop_handler_t _Nonnull' function_pointer='true' name='stop_handler' type64='@?'>
<arg declared_type64='nw_framer_t _Nonnull' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_set_wakeup_handler'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='nw_framer_wakeup_handler_t _Nonnull' function_pointer='true' name='wakeup_handler' type64='@?'>
<arg declared_type64='nw_framer_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_write_output'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' name='output_buffer' type64='*'/>
<arg declared_type64='size_t' name='output_length' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_write_output_data'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='dispatch_data_t _Nonnull' name='output_data' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_framer_write_output_no_copy'>
<arg declared_type64='nw_framer_t _Nonnull' name='framer' type64='@'/>
<arg declared_type64='size_t' name='output_length' type64='Q'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_interface_get_index'>
<arg declared_type64='nw_interface_t _Nonnull' name='interface' type64='@'/>
<retval declared_type64='uint32_t' type64='I'/>
</function>
<function name='nw_interface_get_name'>
<arg declared_type64='nw_interface_t _Nonnull' name='interface' type64='@'/>
<retval const='true' declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='nw_interface_get_type'>
<arg declared_type64='nw_interface_t _Nonnull' name='interface' type64='@'/>
<retval declared_type64='nw_interface_type_t' type64='i'/>
</function>
<function name='nw_ip_create_metadata'>
<retval already_retained='true' declared_type64='nw_protocol_metadata_t _Nonnull' type64='@'/>
</function>
<function name='nw_ip_metadata_get_ecn_flag'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='nw_ip_ecn_flag_t' type64='i'/>
</function>
<function name='nw_ip_metadata_get_receive_time'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='uint64_t' type64='Q'/>
</function>
<function name='nw_ip_metadata_get_service_class'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='nw_service_class_t' type64='i'/>
</function>
<function name='nw_ip_metadata_set_ecn_flag'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<arg declared_type64='nw_ip_ecn_flag_t' name='ecn_flag' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ip_metadata_set_service_class'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<arg declared_type64='nw_service_class_t' name='service_class' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ip_options_set_calculate_receive_time'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='calculate_receive_time' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ip_options_set_disable_fragmentation'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='disable_fragmentation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ip_options_set_hop_limit'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='uint8_t' name='hop_limit' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ip_options_set_local_address_preference'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='nw_ip_local_address_preference_t' name='preference' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ip_options_set_use_minimum_mtu'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='use_minimum_mtu' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ip_options_set_version'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='nw_ip_version_t' name='version' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_listener_cancel'>
<arg declared_type64='nw_listener_t _Nonnull' name='listener' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_listener_create'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval already_retained='true' declared_type64='nw_listener_t _Nullable' type64='@'/>
</function>
<function name='nw_listener_create_with_connection'>
<arg declared_type64='nw_connection_t _Nonnull' name='connection' type64='@'/>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval already_retained='true' declared_type64='nw_listener_t _Nullable' type64='@'/>
</function>
<function name='nw_listener_create_with_port'>
<arg const='true' declared_type64='char * _Nonnull' name='port' type64='*'/>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval already_retained='true' declared_type64='nw_listener_t _Nullable' type64='@'/>
</function>
<function name='nw_listener_get_new_connection_limit'>
<arg declared_type64='nw_listener_t _Nonnull' name='listener' type64='@'/>
<retval declared_type64='uint32_t' type64='I'/>
</function>
<function name='nw_listener_get_port'>
<arg declared_type64='nw_listener_t _Nonnull' name='listener' type64='@'/>
<retval declared_type64='uint16_t' type64='S'/>
</function>
<function name='nw_listener_set_advertise_descriptor'>
<arg declared_type64='nw_listener_t _Nonnull' name='listener' type64='@'/>
<arg declared_type64='nw_advertise_descriptor_t _Nullable' name='advertise_descriptor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_listener_set_advertised_endpoint_changed_handler'>
<arg declared_type64='nw_listener_t _Nonnull' name='listener' type64='@'/>
<arg declared_type64='nw_listener_advertised_endpoint_changed_handler_t _Nullable' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_listener_set_new_connection_handler'>
<arg declared_type64='nw_listener_t _Nonnull' name='listener' type64='@'/>
<arg declared_type64='nw_listener_new_connection_handler_t _Nullable' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='nw_connection_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_listener_set_new_connection_limit'>
<arg declared_type64='nw_listener_t _Nonnull' name='listener' type64='@'/>
<arg declared_type64='uint32_t' name='new_connection_limit' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_listener_set_queue'>
<arg declared_type64='nw_listener_t _Nonnull' name='listener' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nonnull' name='queue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_listener_set_state_changed_handler'>
<arg declared_type64='nw_listener_t _Nonnull' name='listener' type64='@'/>
<arg declared_type64='nw_listener_state_changed_handler_t _Nullable' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='nw_listener_state_t' type64='i'/>
<arg declared_type64='nw_error_t _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_listener_start'>
<arg declared_type64='nw_listener_t _Nonnull' name='listener' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_clear_prohibited_interface_types'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_clear_prohibited_interfaces'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_copy'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval already_retained='true' declared_type64='nw_parameters_t _Nonnull' type64='@'/>
</function>
<function name='nw_parameters_copy_default_protocol_stack'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval already_retained='true' declared_type64='nw_protocol_stack_t _Nonnull' type64='@'/>
</function>
<function name='nw_parameters_copy_local_endpoint'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nullable' type64='@'/>
</function>
<function name='nw_parameters_copy_required_interface'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval already_retained='true' declared_type64='nw_interface_t _Nullable' type64='@'/>
</function>
<function name='nw_parameters_create'>
<retval already_retained='true' declared_type64='nw_parameters_t _Nonnull' type64='@'/>
</function>
<function name='nw_parameters_create_secure_tcp'>
<arg declared_type64='nw_parameters_configure_protocol_block_t _Nonnull' function_pointer='true' name='configure_tls' type64='@?'>
<arg declared_type64='nw_protocol_options_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='nw_parameters_configure_protocol_block_t _Nonnull' function_pointer='true' name='configure_tcp' type64='@?'>
<arg declared_type64='nw_protocol_options_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval already_retained='true' declared_type64='nw_parameters_t _Nonnull' type64='@'/>
</function>
<function name='nw_parameters_create_secure_udp'>
<arg declared_type64='nw_parameters_configure_protocol_block_t _Nonnull' function_pointer='true' name='configure_dtls' type64='@?'>
<arg declared_type64='nw_protocol_options_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='nw_parameters_configure_protocol_block_t _Nonnull' function_pointer='true' name='configure_udp' type64='@?'>
<arg declared_type64='nw_protocol_options_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval already_retained='true' declared_type64='nw_parameters_t _Nonnull' type64='@'/>
</function>
<function name='nw_parameters_get_expired_dns_behavior'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='nw_parameters_expired_dns_behavior_t' type64='i'/>
</function>
<function name='nw_parameters_get_fast_open_enabled'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_parameters_get_include_peer_to_peer'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_parameters_get_local_only'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_parameters_get_multipath_service'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='nw_multipath_service_t' type64='i'/>
</function>
<function name='nw_parameters_get_prefer_no_proxy'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_parameters_get_prohibit_constrained'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_parameters_get_prohibit_expensive'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_parameters_get_required_interface_type'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='nw_interface_type_t' type64='i'/>
</function>
<function name='nw_parameters_get_reuse_local_address'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_parameters_get_service_class'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<retval declared_type64='nw_service_class_t' type64='i'/>
</function>
<function name='nw_parameters_iterate_prohibited_interface_types'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='nw_parameters_iterate_interface_types_block_t _Nonnull' function_pointer='true' name='iterate_block' type64='@?'>
<arg declared_type64='nw_interface_type_t' type64='i'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_iterate_prohibited_interfaces'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='nw_parameters_iterate_interfaces_block_t _Nonnull' function_pointer='true' name='iterate_block' type64='@?'>
<arg declared_type64='nw_interface_t _Nonnull' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_prohibit_interface'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='nw_interface_t _Nonnull' name='interface' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_prohibit_interface_type'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='nw_interface_type_t' name='interface_type' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_require_interface'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='nw_interface_t _Nullable' name='interface' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_expired_dns_behavior'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='nw_parameters_expired_dns_behavior_t' name='expired_dns_behavior' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_fast_open_enabled'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='_Bool' name='fast_open_enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_include_peer_to_peer'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='_Bool' name='include_peer_to_peer' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_local_endpoint'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='nw_endpoint_t _Nullable' name='local_endpoint' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_local_only'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='_Bool' name='local_only' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_multipath_service'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='nw_multipath_service_t' name='multipath_service' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_prefer_no_proxy'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='_Bool' name='prefer_no_proxy' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_prohibit_constrained'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='_Bool' name='prohibit_constrained' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_prohibit_expensive'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='_Bool' name='prohibit_expensive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_required_interface_type'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='nw_interface_type_t' name='interface_type' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_reuse_local_address'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='_Bool' name='reuse_local_address' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_parameters_set_service_class'>
<arg declared_type64='nw_parameters_t _Nonnull' name='parameters' type64='@'/>
<arg declared_type64='nw_service_class_t' name='service_class' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_path_copy_effective_local_endpoint'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nullable' type64='@'/>
</function>
<function name='nw_path_copy_effective_remote_endpoint'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<retval already_retained='true' declared_type64='nw_endpoint_t _Nullable' type64='@'/>
</function>
<function name='nw_path_enumerate_gateways'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<arg declared_type64='nw_path_enumerate_gateways_block_t _Nonnull' function_pointer='true' name='enumerate_block' type64='@?'>
<arg declared_type64='nw_endpoint_t _Nonnull' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_path_enumerate_interfaces'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<arg declared_type64='nw_path_enumerate_interfaces_block_t _Nonnull' function_pointer='true' name='enumerate_block' type64='@?'>
<arg declared_type64='nw_interface_t _Nonnull' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_path_get_status'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<retval declared_type64='nw_path_status_t' type64='i'/>
</function>
<function name='nw_path_has_dns'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_path_has_ipv4'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_path_has_ipv6'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_path_is_constrained'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_path_is_equal'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<arg declared_type64='nw_path_t _Nonnull' name='other_path' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_path_is_expensive'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_path_monitor_cancel'>
<arg declared_type64='nw_path_monitor_t _Nonnull' name='monitor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_path_monitor_create'>
<retval already_retained='true' declared_type64='nw_path_monitor_t _Nonnull' type64='@'/>
</function>
<function name='nw_path_monitor_create_with_type'>
<arg declared_type64='nw_interface_type_t' name='required_interface_type' type64='i'/>
<retval already_retained='true' declared_type64='nw_path_monitor_t _Nonnull' type64='@'/>
</function>
<function name='nw_path_monitor_set_cancel_handler'>
<arg declared_type64='nw_path_monitor_t _Nonnull' name='monitor' type64='@'/>
<arg declared_type64='nw_path_monitor_cancel_handler_t _Nonnull' function_pointer='true' name='cancel_handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_path_monitor_set_queue'>
<arg declared_type64='nw_path_monitor_t _Nonnull' name='monitor' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nonnull' name='queue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_path_monitor_set_update_handler'>
<arg declared_type64='nw_path_monitor_t _Nonnull' name='monitor' type64='@'/>
<arg declared_type64='nw_path_monitor_update_handler_t _Nonnull' function_pointer='true' name='update_handler' type64='@?'>
<arg declared_type64='nw_path_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_path_monitor_start'>
<arg declared_type64='nw_path_monitor_t _Nonnull' name='monitor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_path_uses_interface_type'>
<arg declared_type64='nw_path_t _Nonnull' name='path' type64='@'/>
<arg declared_type64='nw_interface_type_t' name='interface_type' type64='i'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_protocol_copy_ip_definition'>
<retval already_retained='true' declared_type64='nw_protocol_definition_t _Nonnull' type64='@'/>
</function>
<function name='nw_protocol_copy_tcp_definition'>
<retval already_retained='true' declared_type64='nw_protocol_definition_t _Nonnull' type64='@'/>
</function>
<function name='nw_protocol_copy_tls_definition'>
<retval already_retained='true' declared_type64='nw_protocol_definition_t _Nonnull' type64='@'/>
</function>
<function name='nw_protocol_copy_udp_definition'>
<retval already_retained='true' declared_type64='nw_protocol_definition_t _Nonnull' type64='@'/>
</function>
<function name='nw_protocol_copy_ws_definition'>
<retval already_retained='true' declared_type64='nw_protocol_definition_t _Nonnull' type64='@'/>
</function>
<function name='nw_protocol_definition_is_equal'>
<arg declared_type64='nw_protocol_definition_t _Nonnull' name='definition1' type64='@'/>
<arg declared_type64='nw_protocol_definition_t _Nonnull' name='definition2' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_protocol_metadata_copy_definition'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval already_retained='true' declared_type64='nw_protocol_definition_t _Nonnull' type64='@'/>
</function>
<function name='nw_protocol_metadata_is_framer_message'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_protocol_metadata_is_ip'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_protocol_metadata_is_tcp'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_protocol_metadata_is_tls'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_protocol_metadata_is_udp'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_protocol_metadata_is_ws'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_protocol_options_copy_definition'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<retval already_retained='true' declared_type64='nw_protocol_definition_t _Nonnull' type64='@'/>
</function>
<function name='nw_protocol_stack_clear_application_protocols'>
<arg declared_type64='nw_protocol_stack_t _Nonnull' name='stack' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_protocol_stack_copy_internet_protocol'>
<arg declared_type64='nw_protocol_stack_t _Nonnull' name='stack' type64='@'/>
<retval already_retained='true' declared_type64='nw_protocol_options_t _Nullable' type64='@'/>
</function>
<function name='nw_protocol_stack_copy_transport_protocol'>
<arg declared_type64='nw_protocol_stack_t _Nonnull' name='stack' type64='@'/>
<retval already_retained='true' declared_type64='nw_protocol_options_t _Nullable' type64='@'/>
</function>
<function name='nw_protocol_stack_iterate_application_protocols'>
<arg declared_type64='nw_protocol_stack_t _Nonnull' name='stack' type64='@'/>
<arg declared_type64='nw_protocol_stack_iterate_protocols_block_t _Nonnull' function_pointer='true' name='iterate_block' type64='@?'>
<arg declared_type64='nw_protocol_options_t _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_protocol_stack_prepend_application_protocol'>
<arg declared_type64='nw_protocol_stack_t _Nonnull' name='stack' type64='@'/>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='protocol' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_protocol_stack_set_transport_protocol'>
<arg declared_type64='nw_protocol_stack_t _Nonnull' name='stack' type64='@'/>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='protocol' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_release'>
<arg declared_type64='void*' name='obj' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_retain'>
<arg declared_type64='void*' name='obj' type64='^v'/>
<retval declared_type64='void*' type64='^v'/>
</function>
<function name='nw_tcp_create_options'>
<retval already_retained='true' declared_type64='nw_protocol_options_t _Nonnull' type64='@'/>
</function>
<function name='nw_tcp_get_available_receive_buffer'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='uint32_t' type64='I'/>
</function>
<function name='nw_tcp_get_available_send_buffer'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='uint32_t' type64='I'/>
</function>
<function name='nw_tcp_options_set_connection_timeout'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='uint32_t' name='connection_timeout' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_disable_ack_stretching'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='disable_ack_stretching' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_disable_ecn'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='disable_ecn' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_enable_fast_open'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='enable_fast_open' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_enable_keepalive'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='enable_keepalive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_keepalive_count'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='uint32_t' name='keepalive_count' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_keepalive_idle_time'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='uint32_t' name='keepalive_idle_time' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_keepalive_interval'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='uint32_t' name='keepalive_interval' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_maximum_segment_size'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='uint32_t' name='maximum_segment_size' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_no_delay'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='no_delay' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_no_options'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='no_options' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_no_push'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='no_push' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_persist_timeout'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='uint32_t' name='persist_timeout' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_retransmit_connection_drop_time'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='uint32_t' name='retransmit_connection_drop_time' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tcp_options_set_retransmit_fin_drop'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='retransmit_fin_drop' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_tls_copy_sec_protocol_metadata'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval already_retained='true' declared_type64='sec_protocol_metadata_t _Nonnull' type64='@'/>
</function>
<function name='nw_tls_copy_sec_protocol_options'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<retval already_retained='true' declared_type64='sec_protocol_options_t _Nonnull' type64='@'/>
</function>
<function name='nw_tls_create_options'>
<retval already_retained='true' declared_type64='nw_protocol_options_t _Nonnull' type64='@'/>
</function>
<function name='nw_txt_record_access_bytes'>
<arg declared_type64='nw_txt_record_t _Nonnull' name='txt_record' type64='@'/>
<arg declared_type64='nw_txt_record_access_bytes_t _Nonnull' function_pointer='true' name='access_bytes' type64='@?'>
<arg const='true' declared_type64='uint8_t * _Nonnull' type64='*'/>
<arg declared_type64='size_t' type64='Q'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_txt_record_access_key'>
<arg declared_type64='nw_txt_record_t _Nonnull' name='txt_record' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='key' type64='*'/>
<arg declared_type64='nw_txt_record_access_key_t _Nonnull' function_pointer='true' name='access_value' type64='@?'>
<arg const='true' declared_type64='char * _Nonnull' type64='*'/>
<arg const='true' declared_type64='nw_txt_record_find_key_t' type64='i'/>
<arg const='true' declared_type64='uint8_t * _Nullable' type64='*'/>
<arg const='true' declared_type64='size_t' type64='Q'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_txt_record_apply'>
<arg declared_type64='nw_txt_record_t _Nonnull' name='txt_record' type64='@'/>
<arg declared_type64='nw_txt_record_applier_t _Nonnull' function_pointer='true' name='applier' type64='@?'>
<arg const='true' declared_type64='char * _Nonnull' type64='*'/>
<arg const='true' declared_type64='nw_txt_record_find_key_t' type64='i'/>
<arg const='true' declared_type64='uint8_t * _Nonnull' type64='*'/>
<arg const='true' declared_type64='size_t' type64='Q'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_txt_record_copy'>
<arg declared_type64='nw_txt_record_t _Nullable' name='txt_record' type64='@'/>
<retval already_retained='true' declared_type64='nw_txt_record_t _Nullable' type64='@'/>
</function>
<function name='nw_txt_record_create_dictionary'>
<retval already_retained='true' declared_type64='nw_txt_record_t _Nonnull' type64='@'/>
</function>
<function name='nw_txt_record_create_with_bytes'>
<arg const='true' declared_type64='uint8_t * _Nonnull' name='txt_bytes' type64='*'/>
<arg declared_type64='size_t' name='txt_len' type64='Q'/>
<retval already_retained='true' declared_type64='nw_txt_record_t _Nonnull' type64='@'/>
</function>
<function name='nw_txt_record_find_key'>
<arg declared_type64='nw_txt_record_t _Nonnull' name='txt_record' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='key' type64='*'/>
<retval declared_type64='nw_txt_record_find_key_t' type64='i'/>
</function>
<function name='nw_txt_record_get_key_count'>
<arg declared_type64='nw_txt_record_t _Nullable' name='txt_record' type64='@'/>
<retval declared_type64='size_t' type64='Q'/>
</function>
<function name='nw_txt_record_is_dictionary'>
<arg declared_type64='nw_txt_record_t _Nonnull' name='txt_record' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_txt_record_is_equal'>
<arg declared_type64='nw_txt_record_t _Nullable' name='left' type64='@'/>
<arg declared_type64='nw_txt_record_t _Nullable' name='right' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_txt_record_remove_key'>
<arg declared_type64='nw_txt_record_t _Nonnull' name='txt_record' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='key' type64='*'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_txt_record_set_key'>
<arg declared_type64='nw_txt_record_t _Nonnull' name='txt_record' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='key' type64='*'/>
<arg const='true' declared_type64='uint8_t * _Nullable' name='value' type64='*'/>
<arg declared_type64='size_t' name='value_len' type64='Q'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_udp_create_metadata'>
<retval already_retained='true' declared_type64='nw_protocol_metadata_t _Nonnull' type64='@'/>
</function>
<function name='nw_udp_create_options'>
<retval already_retained='true' declared_type64='nw_protocol_options_t _Nonnull' type64='@'/>
</function>
<function name='nw_udp_options_set_prefer_no_checksum'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='prefer_no_checksum' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ws_create_metadata'>
<arg declared_type64='nw_ws_opcode_t' name='opcode' type64='i'/>
<retval already_retained='true' declared_type64='nw_protocol_metadata_t _Nonnull' type64='@'/>
</function>
<function name='nw_ws_create_options'>
<arg declared_type64='nw_ws_version_t' name='version' type64='i'/>
<retval already_retained='true' declared_type64='nw_protocol_options_t _Nonnull' type64='@'/>
</function>
<function name='nw_ws_metadata_copy_server_response'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval already_retained='true' declared_type64='nw_ws_response_t _Nonnull' type64='@'/>
</function>
<function name='nw_ws_metadata_get_close_code'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='nw_ws_close_code_t' type64='i'/>
</function>
<function name='nw_ws_metadata_get_opcode'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<retval declared_type64='nw_ws_opcode_t' type64='i'/>
</function>
<function name='nw_ws_metadata_set_close_code'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<arg declared_type64='nw_ws_close_code_t' name='close_code' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ws_metadata_set_pong_handler'>
<arg declared_type64='nw_protocol_metadata_t _Nonnull' name='metadata' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nonnull' name='client_queue' type64='@'/>
<arg declared_type64='nw_ws_pong_handler_t _Nonnull' function_pointer='true' name='pong_handler' type64='@?'>
<arg declared_type64='nw_error_t _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ws_options_add_additional_header'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='name' type64='*'/>
<arg const='true' declared_type64='char * _Nonnull' name='value' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ws_options_add_subprotocol'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='subprotocol' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ws_options_set_auto_reply_ping'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='auto_reply_ping' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ws_options_set_client_request_handler'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nonnull' name='client_queue' type64='@'/>
<arg declared_type64='nw_ws_client_request_handler_t _Nonnull' function_pointer='true' name='handler' type64='@?'>
<arg declared_type64='nw_ws_request_t _Nonnull' type64='@'/>
<retval declared_type64='nw_ws_response_t _Nonnull' type64='@'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ws_options_set_maximum_message_size'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='size_t' name='maximum_message_size' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ws_options_set_skip_handshake'>
<arg declared_type64='nw_protocol_options_t _Nonnull' name='options' type64='@'/>
<arg declared_type64='_Bool' name='skip_handshake' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ws_request_enumerate_additional_headers'>
<arg declared_type64='nw_ws_request_t _Nonnull' name='request' type64='@'/>
<arg declared_type64='nw_ws_additional_header_enumerator_t _Nonnull' function_pointer='true' name='enumerator' type64='@?'>
<arg const='true' declared_type64='char * _Nonnull' type64='*'/>
<arg const='true' declared_type64='char * _Nonnull' type64='*'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_ws_request_enumerate_subprotocols'>
<arg declared_type64='nw_ws_request_t _Nonnull' name='request' type64='@'/>
<arg declared_type64='nw_ws_subprotocol_enumerator_t _Nonnull' function_pointer='true' name='enumerator' type64='@?'>
<arg const='true' declared_type64='char * _Nonnull' type64='*'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_ws_response_add_additional_header'>
<arg declared_type64='nw_ws_response_t _Nonnull' name='response' type64='@'/>
<arg const='true' declared_type64='char * _Nonnull' name='name' type64='*'/>
<arg const='true' declared_type64='char * _Nonnull' name='value' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='nw_ws_response_create'>
<arg declared_type64='nw_ws_response_status_t' name='status' type64='i'/>
<arg const='true' declared_type64='char * _Nullable' name='selected_subprotocol' type64='*'/>
<retval already_retained='true' declared_type64='nw_ws_response_t _Nonnull' type64='@'/>
</function>
<function name='nw_ws_response_enumerate_additional_headers'>
<arg declared_type64='nw_ws_response_t _Nonnull' name='response' type64='@'/>
<arg declared_type64='nw_ws_additional_header_enumerator_t _Nonnull' function_pointer='true' name='enumerator' type64='@?'>
<arg const='true' declared_type64='char * _Nonnull' type64='*'/>
<arg const='true' declared_type64='char * _Nonnull' type64='*'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='nw_ws_response_get_selected_subprotocol'>
<arg declared_type64='nw_ws_response_t _Nonnull' name='response' type64='@'/>
<retval const='true' declared_type64='char * _Nullable' type64='*'/>
</function>
<function name='nw_ws_response_get_status'>
<arg declared_type64='nw_ws_response_t _Nullable' name='response' type64='@'/>
<retval declared_type64='nw_ws_response_status_t' type64='i'/>
</function>
</signatures>
