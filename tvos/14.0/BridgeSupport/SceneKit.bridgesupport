<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/ModelIO.framework'/>
<depends_on path='/System/Library/Frameworks/AVFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/MetalKit.framework'/>
<depends_on path='/System/Library/Frameworks/Metal.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/IOSurface.framework'/>
<depends_on path='/System/Library/Frameworks/UIKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreImage.framework'/>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/OpenGLES.framework'/>
<depends_on path='/System/Library/Frameworks/GLKit.framework'/>
<depends_on path='/System/Library/Frameworks/MetalPerformanceShaders.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='SCNMatrix4' type64='{SCNMatrix4=&quot;m11&quot;f&quot;m12&quot;f&quot;m13&quot;f&quot;m14&quot;f&quot;m21&quot;f&quot;m22&quot;f&quot;m23&quot;f&quot;m24&quot;f&quot;m31&quot;f&quot;m32&quot;f&quot;m33&quot;f&quot;m34&quot;f&quot;m41&quot;f&quot;m42&quot;f&quot;m43&quot;f&quot;m44&quot;f}'>
<field declared_type64='float' name='m11' type64='f'/>
<field declared_type64='float' name='m12' type64='f'/>
<field declared_type64='float' name='m13' type64='f'/>
<field declared_type64='float' name='m14' type64='f'/>
<field declared_type64='float' name='m21' type64='f'/>
<field declared_type64='float' name='m22' type64='f'/>
<field declared_type64='float' name='m23' type64='f'/>
<field declared_type64='float' name='m24' type64='f'/>
<field declared_type64='float' name='m31' type64='f'/>
<field declared_type64='float' name='m32' type64='f'/>
<field declared_type64='float' name='m33' type64='f'/>
<field declared_type64='float' name='m34' type64='f'/>
<field declared_type64='float' name='m41' type64='f'/>
<field declared_type64='float' name='m42' type64='f'/>
<field declared_type64='float' name='m43' type64='f'/>
<field declared_type64='float' name='m44' type64='f'/>
</struct>
<struct name='SCNQuaternion' type64='{SCNVector4=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
<field declared_type64='float' name='z' type64='f'/>
<field declared_type64='float' name='w' type64='f'/>
</struct>
<struct name='SCNVector3' type64='{SCNVector3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
<field declared_type64='float' name='z' type64='f'/>
</struct>
<struct name='SCNVector4' type64='{SCNVector4=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
<field declared_type64='float' name='z' type64='f'/>
<field declared_type64='float' name='w' type64='f'/>
</struct>
<struct name='vector_float2' type64='{_vector_float2=&quot;x&quot;f&quot;y&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
</struct>
<struct name='vector_float3' type64='{_vector_float3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
<field declared_type64='float' name='z' type64='f'/>
</struct>
<struct name='vector_float4' type64='{_vector_float4=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
<field declared_type64='float' name='z' type64='f'/>
<field declared_type64='float' name='w' type64='f'/>
</struct>
<struct name='vector_int2' type64='{_vector_int2=&quot;x&quot;i&quot;y&quot;i}'>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
</struct>
<struct name='vector_int4' type64='{_vector_int4=&quot;x&quot;i&quot;y&quot;i&quot;z&quot;i&quot;w&quot;i}'>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='z' type64='i'/>
<field declared_type64='int' name='w' type64='i'/>
</struct>
<struct name='vector_uint2' type64='{_vector_uint2=&quot;x&quot;I&quot;y&quot;I}'>
<field declared_type64='unsigned int' name='x' type64='I'/>
<field declared_type64='unsigned int' name='y' type64='I'/>
</struct>
<struct name='vector_uint3' type64='{_vector_uint3=&quot;x&quot;I&quot;y&quot;I&quot;z&quot;I}'>
<field declared_type64='unsigned int' name='x' type64='I'/>
<field declared_type64='unsigned int' name='y' type64='I'/>
<field declared_type64='unsigned int' name='z' type64='I'/>
</struct>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNConsistencyElementIDErrorKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNConsistencyElementTypeErrorKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNConsistencyLineNumberErrorKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNDetailedErrorsKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNErrorDomain' type64='@'/>
<constant const='true' declared_type64='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticBoneIndices' type64='@'/>
<constant const='true' declared_type64='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticBoneWeights' type64='@'/>
<constant const='true' declared_type64='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticColor' type64='@'/>
<constant const='true' declared_type64='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticEdgeCrease' type64='@'/>
<constant const='true' declared_type64='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticNormal' type64='@'/>
<constant const='true' declared_type64='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticTangent' type64='@'/>
<constant const='true' declared_type64='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticTexcoord' type64='@'/>
<constant const='true' declared_type64='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticVertex' type64='@'/>
<constant const='true' declared_type64='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticVertexCrease' type64='@'/>
<constant const='true' declared_type64='SCNHitTestOption _Nonnull' name='SCNHitTestBackFaceCullingKey' type64='@'/>
<constant const='true' declared_type64='SCNHitTestOption _Nonnull' name='SCNHitTestBoundingBoxOnlyKey' type64='@'/>
<constant const='true' declared_type64='SCNHitTestOption _Nonnull' name='SCNHitTestClipToZRangeKey' type64='@'/>
<constant const='true' declared_type64='SCNHitTestOption _Nonnull' name='SCNHitTestFirstFoundOnlyKey' type64='@'/>
<constant const='true' declared_type64='SCNHitTestOption _Nonnull' name='SCNHitTestIgnoreChildNodesKey' type64='@'/>
<constant const='true' declared_type64='SCNHitTestOption _Nonnull' name='SCNHitTestIgnoreHiddenNodesKey' type64='@'/>
<constant const='true' declared_type64='SCNHitTestOption _Nonnull' name='SCNHitTestOptionCategoryBitMask' type64='@'/>
<constant const='true' declared_type64='SCNHitTestOption _Nonnull' name='SCNHitTestOptionIgnoreLightArea' type64='@'/>
<constant const='true' declared_type64='SCNHitTestOption _Nonnull' name='SCNHitTestOptionSearchMode' type64='@'/>
<constant const='true' declared_type64='SCNHitTestOption _Nonnull' name='SCNHitTestRootNodeKey' type64='@'/>
<constant const='true' declared_type64='SCNHitTestOption _Nonnull' name='SCNHitTestSortResultsKey' type64='@'/>
<constant const='true' declared_type64='SCNLightType _Nonnull' name='SCNLightTypeAmbient' type64='@'/>
<constant const='true' declared_type64='SCNLightType _Nonnull' name='SCNLightTypeArea' type64='@'/>
<constant const='true' declared_type64='SCNLightType _Nonnull' name='SCNLightTypeDirectional' type64='@'/>
<constant const='true' declared_type64='SCNLightType _Nonnull' name='SCNLightTypeIES' type64='@'/>
<constant const='true' declared_type64='SCNLightType _Nonnull' name='SCNLightTypeOmni' type64='@'/>
<constant const='true' declared_type64='SCNLightType _Nonnull' name='SCNLightTypeProbe' type64='@'/>
<constant const='true' declared_type64='SCNLightType _Nonnull' name='SCNLightTypeSpot' type64='@'/>
<constant const='true' declared_type64='SCNLightingModel _Nonnull' name='SCNLightingModelBlinn' type64='@'/>
<constant const='true' declared_type64='SCNLightingModel _Nonnull' name='SCNLightingModelConstant' type64='@'/>
<constant const='true' declared_type64='SCNLightingModel _Nonnull' name='SCNLightingModelLambert' type64='@'/>
<constant const='true' declared_type64='SCNLightingModel _Nonnull' name='SCNLightingModelPhong' type64='@'/>
<constant const='true' declared_type64='SCNLightingModel _Nonnull' name='SCNLightingModelPhysicallyBased' type64='@'/>
<constant const='true' declared_type64='SCNLightingModel _Nonnull' name='SCNLightingModelShadowOnly' type64='@'/>
<constant const='true' declared_type64='SCNMatrix4' name='SCNMatrix4Identity' type64='{SCNMatrix4=ffffffffffffffff}'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNModelTransform' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNModelViewProjectionTransform' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNModelViewTransform' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNNormalTransform' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyAngle' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyAngularVelocity' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyBounce' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyCharge' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyColor' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyContactNormal' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyContactPoint' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyFrame' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyFrameRate' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyFriction' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyLife' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyOpacity' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyPosition' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyRotationAxis' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertySize' type64='@'/>
<constant const='true' declared_type64='SCNParticleProperty _Nonnull' name='SCNParticlePropertyVelocity' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsShapeOption _Nonnull' name='SCNPhysicsShapeKeepAsCompoundKey' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsShapeOption _Nonnull' name='SCNPhysicsShapeOptionCollisionMargin' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsShapeOption _Nonnull' name='SCNPhysicsShapeScaleKey' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsShapeType _Nonnull' name='SCNPhysicsShapeTypeBoundingBox' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsShapeType _Nonnull' name='SCNPhysicsShapeTypeConcavePolyhedron' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsShapeType _Nonnull' name='SCNPhysicsShapeTypeConvexHull' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsShapeOption _Nonnull' name='SCNPhysicsShapeTypeKey' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsTestOption _Nonnull' name='SCNPhysicsTestBackfaceCullingKey' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsTestOption _Nonnull' name='SCNPhysicsTestCollisionBitMaskKey' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsTestSearchMode _Nonnull' name='SCNPhysicsTestSearchModeAll' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsTestSearchMode _Nonnull' name='SCNPhysicsTestSearchModeAny' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsTestSearchMode _Nonnull' name='SCNPhysicsTestSearchModeClosest' type64='@'/>
<constant const='true' declared_type64='SCNPhysicsTestOption _Nonnull' name='SCNPhysicsTestSearchModeKey' type64='@'/>
<constant const='true' declared_type64='SCNViewOption _Nonnull' name='SCNPreferLowPowerDeviceKey' type64='@'/>
<constant const='true' declared_type64='SCNViewOption _Nonnull' name='SCNPreferredDeviceKey' type64='@'/>
<constant const='true' declared_type64='SCNViewOption _Nonnull' name='SCNPreferredRenderingAPIKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNProgramMappingChannelKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNProjectionTransform' type64='@'/>
<constant const='true' declared_type64='SCNSceneAttribute _Nonnull' name='SCNSceneEndTimeAttributeKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNSceneExportDestinationURL' type64='@'/>
<constant const='true' declared_type64='SCNSceneAttribute _Nonnull' name='SCNSceneFrameRateAttributeKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceAnimationImportPolicy _Nonnull' name='SCNSceneSourceAnimationImportPolicyDoNotPlay' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceAnimationImportPolicyKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceAnimationImportPolicy _Nonnull' name='SCNSceneSourceAnimationImportPolicyPlay' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceAnimationImportPolicy _Nonnull' name='SCNSceneSourceAnimationImportPolicyPlayRepeatedly' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceAnimationImportPolicy _Nonnull' name='SCNSceneSourceAnimationImportPolicyPlayUsingSceneTimeBase' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNSceneSourceAssetAuthorKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNSceneSourceAssetAuthoringToolKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNSceneSourceAssetContributorsKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNSceneSourceAssetCreatedDateKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceAssetDirectoryURLsKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNSceneSourceAssetModifiedDateKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNSceneSourceAssetUnitKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNSceneSourceAssetUnitMeterKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNSceneSourceAssetUnitNameKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNSceneSourceAssetUpAxisKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceCheckConsistencyKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceConvertToYUpKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceConvertUnitsToMetersKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceCreateNormalsIfAbsentKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceFlattenSceneKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceLoadingOptionPreserveOriginalTopology' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceOverrideAssetURLsKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceStrictConformanceKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceUseSafeModeKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneAttribute _Nonnull' name='SCNSceneStartTimeAttributeKey' type64='@'/>
<constant const='true' declared_type64='SCNSceneAttribute _Nonnull' name='SCNSceneUpAxisAttributeKey' type64='@'/>
<constant const='true' declared_type64='SCNShaderModifierEntryPoint _Nonnull' name='SCNShaderModifierEntryPointFragment' type64='@'/>
<constant const='true' declared_type64='SCNShaderModifierEntryPoint _Nonnull' name='SCNShaderModifierEntryPointGeometry' type64='@'/>
<constant const='true' declared_type64='SCNShaderModifierEntryPoint _Nonnull' name='SCNShaderModifierEntryPointLightingModel' type64='@'/>
<constant const='true' declared_type64='SCNShaderModifierEntryPoint _Nonnull' name='SCNShaderModifierEntryPointSurface' type64='@'/>
<constant const='true' declared_type64='SCNVector3' name='SCNVector3Zero' type64='{SCNVector3=fff}'/>
<constant const='true' declared_type64='SCNVector4' name='SCNVector4Zero' type64='{SCNVector4=ffff}'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='SCNViewTransform' type64='@'/>
<enum name='SCNActionTimingModeEaseIn' value64='1'/>
<enum name='SCNActionTimingModeEaseInEaseOut' value64='3'/>
<enum name='SCNActionTimingModeEaseOut' value64='2'/>
<enum name='SCNActionTimingModeLinear' value64='0'/>
<enum name='SCNAntialiasingModeMultisampling2X' value64='1'/>
<enum name='SCNAntialiasingModeMultisampling4X' value64='2'/>
<enum name='SCNAntialiasingModeNone' value64='0'/>
<enum name='SCNBillboardAxisAll' value64='7'/>
<enum name='SCNBillboardAxisX' value64='1'/>
<enum name='SCNBillboardAxisY' value64='2'/>
<enum name='SCNBillboardAxisZ' value64='4'/>
<enum name='SCNBlendModeAdd' value64='1'/>
<enum name='SCNBlendModeAlpha' value64='0'/>
<enum name='SCNBlendModeMax' value64='6'/>
<enum name='SCNBlendModeMultiply' value64='3'/>
<enum name='SCNBlendModeReplace' value64='5'/>
<enum name='SCNBlendModeScreen' value64='4'/>
<enum name='SCNBlendModeSubtract' value64='2'/>
<enum name='SCNBufferFrequencyPerFrame' value64='0'/>
<enum name='SCNBufferFrequencyPerNode' value64='1'/>
<enum name='SCNBufferFrequencyPerShadable' value64='2'/>
<enum name='SCNCameraProjectionDirectionHorizontal' value64='1'/>
<enum name='SCNCameraProjectionDirectionVertical' value64='0'/>
<enum name='SCNChamferModeBack' value64='2'/>
<enum name='SCNChamferModeBoth' value64='0'/>
<enum name='SCNChamferModeFront' value64='1'/>
<enum name='SCNColorMaskAll' value64='15'/>
<enum name='SCNColorMaskAlpha' value64='1'/>
<enum name='SCNColorMaskBlue' value64='2'/>
<enum name='SCNColorMaskGreen' value64='4'/>
<enum name='SCNColorMaskNone' value64='0'/>
<enum name='SCNColorMaskRed' value64='8'/>
<enum name='SCNConsistencyInvalidArgumentError' value64='1002'/>
<enum name='SCNConsistencyInvalidCountError' value64='1001'/>
<enum name='SCNConsistencyInvalidURIError' value64='1000'/>
<enum name='SCNConsistencyMissingAttributeError' value64='1004'/>
<enum name='SCNConsistencyMissingElementError' value64='1003'/>
<enum name='SCNConsistencyXMLSchemaValidationError' value64='1005'/>
<enum name='SCNCullBack' value64='0'/>
<enum name='SCNCullFront' value64='1'/>
<enum name='SCNCullModeBack' value64='0'/>
<enum name='SCNCullModeFront' value64='1'/>
<enum name='SCNDebugOptionNone' value64='0'/>
<enum name='SCNDebugOptionRenderAsWireframe' value64='64'/>
<enum name='SCNDebugOptionShowBoundingBoxes' value64='2'/>
<enum name='SCNDebugOptionShowCameras' value64='1024'/>
<enum name='SCNDebugOptionShowConstraints' value64='512'/>
<enum name='SCNDebugOptionShowCreases' value64='256'/>
<enum name='SCNDebugOptionShowLightExtents' value64='8'/>
<enum name='SCNDebugOptionShowLightInfluences' value64='4'/>
<enum name='SCNDebugOptionShowPhysicsFields' value64='16'/>
<enum name='SCNDebugOptionShowPhysicsShapes' value64='1'/>
<enum name='SCNDebugOptionShowSkeletons' value64='128'/>
<enum name='SCNDebugOptionShowWireframe' value64='32'/>
<enum name='SCNFillModeFill' value64='0'/>
<enum name='SCNFillModeLines' value64='1'/>
<enum name='SCNFilterModeLinear' value64='2'/>
<enum name='SCNFilterModeNearest' value64='1'/>
<enum name='SCNFilterModeNone' value64='0'/>
<enum name='SCNGeometryPrimitiveTypeLine' value64='2'/>
<enum name='SCNGeometryPrimitiveTypePoint' value64='3'/>
<enum name='SCNGeometryPrimitiveTypePolygon' value64='4'/>
<enum name='SCNGeometryPrimitiveTypeTriangleStrip' value64='1'/>
<enum name='SCNGeometryPrimitiveTypeTriangles' value64='0'/>
<enum name='SCNHitTestSearchModeAll' value64='1'/>
<enum name='SCNHitTestSearchModeAny' value64='2'/>
<enum name='SCNHitTestSearchModeClosest' value64='0'/>
<enum name='SCNInteractionModeFly' value64='0'/>
<enum name='SCNInteractionModeOrbitAngleMapping' value64='2'/>
<enum name='SCNInteractionModeOrbitArcball' value64='4'/>
<enum name='SCNInteractionModeOrbitCenteredArcball' value64='3'/>
<enum name='SCNInteractionModeOrbitTurntable' value64='1'/>
<enum name='SCNInteractionModePan' value64='5'/>
<enum name='SCNInteractionModeTruck' value64='6'/>
<enum name='SCNLightAreaTypePolygon' value64='4'/>
<enum name='SCNLightAreaTypeRectangle' value64='1'/>
<enum name='SCNLightProbeTypeIrradiance' value64='0'/>
<enum name='SCNLightProbeTypeRadiance' value64='1'/>
<enum name='SCNLightProbeUpdateTypeNever' value64='0'/>
<enum name='SCNLightProbeUpdateTypeRealtime' value64='1'/>
<enum name='SCNMorpherCalculationModeAdditive' value64='1'/>
<enum name='SCNMorpherCalculationModeNormalized' value64='0'/>
<enum name='SCNMovabilityHintFixed' value64='0'/>
<enum name='SCNMovabilityHintMovable' value64='1'/>
<enum name='SCNNodeFocusBehaviorFocusable' value64='2'/>
<enum name='SCNNodeFocusBehaviorNone' value64='0'/>
<enum name='SCNNodeFocusBehaviorOccluding' value64='1'/>
<enum name='SCNParticleBirthDirectionConstant' value64='0'/>
<enum name='SCNParticleBirthDirectionRandom' value64='2'/>
<enum name='SCNParticleBirthDirectionSurfaceNormal' value64='1'/>
<enum name='SCNParticleBirthLocationSurface' value64='0'/>
<enum name='SCNParticleBirthLocationVertex' value64='2'/>
<enum name='SCNParticleBirthLocationVolume' value64='1'/>
<enum name='SCNParticleBlendModeAdditive' value64='0'/>
<enum name='SCNParticleBlendModeAlpha' value64='4'/>
<enum name='SCNParticleBlendModeMultiply' value64='2'/>
<enum name='SCNParticleBlendModeReplace' value64='5'/>
<enum name='SCNParticleBlendModeScreen' value64='3'/>
<enum name='SCNParticleBlendModeSubtract' value64='1'/>
<enum name='SCNParticleEventBirth' value64='0'/>
<enum name='SCNParticleEventCollision' value64='2'/>
<enum name='SCNParticleEventDeath' value64='1'/>
<enum name='SCNParticleImageSequenceAnimationModeAutoReverse' value64='2'/>
<enum name='SCNParticleImageSequenceAnimationModeClamp' value64='1'/>
<enum name='SCNParticleImageSequenceAnimationModeRepeat' value64='0'/>
<enum name='SCNParticleInputModeOverDistance' value64='1'/>
<enum name='SCNParticleInputModeOverLife' value64='0'/>
<enum name='SCNParticleInputModeOverOtherProperty' value64='2'/>
<enum name='SCNParticleModifierStagePostCollision' value64='3'/>
<enum name='SCNParticleModifierStagePostDynamics' value64='1'/>
<enum name='SCNParticleModifierStagePreCollision' value64='2'/>
<enum name='SCNParticleModifierStagePreDynamics' value64='0'/>
<enum name='SCNParticleOrientationModeBillboardScreenAligned' value64='0'/>
<enum name='SCNParticleOrientationModeBillboardViewAligned' value64='1'/>
<enum name='SCNParticleOrientationModeBillboardYAligned' value64='3'/>
<enum name='SCNParticleOrientationModeFree' value64='2'/>
<enum name='SCNParticleSortingModeDistance' value64='2'/>
<enum name='SCNParticleSortingModeNone' value64='0'/>
<enum name='SCNParticleSortingModeOldestFirst' value64='3'/>
<enum name='SCNParticleSortingModeProjectedDepth' value64='1'/>
<enum name='SCNParticleSortingModeYoungestFirst' value64='4'/>
<enum name='SCNPhysicsBodyTypeDynamic' value64='1'/>
<enum name='SCNPhysicsBodyTypeKinematic' value64='2'/>
<enum name='SCNPhysicsBodyTypeStatic' value64='0'/>
<enum name='SCNPhysicsCollisionCategoryAll' value64='18446744073709551615'/>
<enum name='SCNPhysicsCollisionCategoryDefault' value64='1'/>
<enum name='SCNPhysicsCollisionCategoryStatic' value64='2'/>
<enum name='SCNPhysicsFieldScopeInsideExtent' value64='0'/>
<enum name='SCNPhysicsFieldScopeOutsideExtent' value64='1'/>
<enum name='SCNProgramCompilationError' value64='1'/>
<enum name='SCNReferenceLoadingPolicyImmediate' value64='0'/>
<enum name='SCNReferenceLoadingPolicyOnDemand' value64='1'/>
<enum name='SCNRenderingAPIMetal' value64='0'/>
<enum name='SCNRenderingAPIOpenGLES2' value64='1'/>
<enum name='SCNSceneSourceStatusComplete' value64='16'/>
<enum name='SCNSceneSourceStatusError' value64='-1'/>
<enum name='SCNSceneSourceStatusParsing' value64='4'/>
<enum name='SCNSceneSourceStatusProcessing' value64='12'/>
<enum name='SCNSceneSourceStatusValidating' value64='8'/>
<enum name='SCNShadowModeDeferred' value64='1'/>
<enum name='SCNShadowModeForward' value64='0'/>
<enum name='SCNShadowModeModulated' value64='2'/>
<enum name='SCNTessellationSmoothingModeNone' value64='0'/>
<enum name='SCNTessellationSmoothingModePNTriangles' value64='1'/>
<enum name='SCNTessellationSmoothingModePhong' value64='2'/>
<enum name='SCNTransparencyModeAOne' value64='0'/>
<enum name='SCNTransparencyModeDefault' value64='0'/>
<enum name='SCNTransparencyModeDualLayer' value64='3'/>
<enum name='SCNTransparencyModeRGBZero' value64='1'/>
<enum name='SCNTransparencyModeSingleLayer' value64='2'/>
<enum name='SCNWrapModeClamp' value64='1'/>
<enum name='SCNWrapModeClampToBorder' value64='3'/>
<enum name='SCNWrapModeMirror' value64='4'/>
<enum name='SCNWrapModeRepeat' value64='2'/>
<enum name='SCN_ENABLE_METAL' value64='1'/>
<enum name='SCN_ENABLE_OPENGL' value64='1'/>
<function name='SCNExportJavaScriptModule'>
<arg declared_type64='JSContext * _Nonnull' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='SCNMatrix4EqualToMatrix4'>
<arg declared_type64='SCNMatrix4' name='a' type64='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type64='SCNMatrix4' name='b' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='SCNMatrix4FromGLKMatrix4'>
<arg declared_type64='GLKMatrix4' name='mat' type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function inline='true' name='SCNMatrix4FromMat4'>
<arg declared_type64='simd_float4x4' name='m' type64='{_simd_float4x4=[4]}'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNMatrix4Invert'>
<arg declared_type64='SCNMatrix4' name='m' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNMatrix4IsIdentity'>
<arg declared_type64='SCNMatrix4' name='m' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='SCNMatrix4MakeRotation'>
<arg declared_type64='float' name='angle' type64='f'/>
<arg declared_type64='float' name='x' type64='f'/>
<arg declared_type64='float' name='y' type64='f'/>
<arg declared_type64='float' name='z' type64='f'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function inline='true' name='SCNMatrix4MakeScale'>
<arg declared_type64='float' name='sx' type64='f'/>
<arg declared_type64='float' name='sy' type64='f'/>
<arg declared_type64='float' name='sz' type64='f'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function inline='true' name='SCNMatrix4MakeTranslation'>
<arg declared_type64='float' name='tx' type64='f'/>
<arg declared_type64='float' name='ty' type64='f'/>
<arg declared_type64='float' name='tz' type64='f'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNMatrix4Mult'>
<arg declared_type64='SCNMatrix4' name='a' type64='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type64='SCNMatrix4' name='b' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNMatrix4Rotate'>
<arg declared_type64='SCNMatrix4' name='m' type64='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type64='float' name='angle' type64='f'/>
<arg declared_type64='float' name='x' type64='f'/>
<arg declared_type64='float' name='y' type64='f'/>
<arg declared_type64='float' name='z' type64='f'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNMatrix4Scale'>
<arg declared_type64='SCNMatrix4' name='m' type64='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type64='float' name='sx' type64='f'/>
<arg declared_type64='float' name='sy' type64='f'/>
<arg declared_type64='float' name='sz' type64='f'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNMatrix4ToGLKMatrix4'>
<arg declared_type64='SCNMatrix4' name='mat' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='GLKMatrix4' type64='(_GLKMatrix4={?=ffffffffffffffff}[16f])'/>
</function>
<function inline='true' name='SCNMatrix4ToMat4'>
<arg declared_type64='SCNMatrix4' name='m' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='simd_float4x4' type64='{_simd_float4x4=[4]}'/>
</function>
<function inline='true' name='SCNMatrix4Translate'>
<arg declared_type64='SCNMatrix4' name='m' type64='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type64='float' name='tx' type64='f'/>
<arg declared_type64='float' name='ty' type64='f'/>
<arg declared_type64='float' name='tz' type64='f'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNVector3EqualToVector3'>
<arg declared_type64='SCNVector3' name='a' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' name='b' type64='{SCNVector3=fff}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function inline='true' name='SCNVector3FromFloat3'>
<arg declared_type64='simd_float3' name='v' type64=''/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</function>
<function inline='true' name='SCNVector3FromGLKVector3'>
<arg declared_type64='GLKVector3' name='vector' type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</function>
<function inline='true' name='SCNVector3Make'>
<arg declared_type64='float' name='x' type64='f'/>
<arg declared_type64='float' name='y' type64='f'/>
<arg declared_type64='float' name='z' type64='f'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</function>
<function inline='true' name='SCNVector3ToFloat3'>
<arg declared_type64='SCNVector3' name='v' type64='{SCNVector3=fff}'/>
<retval declared_type64='simd_float3' type64=''/>
</function>
<function inline='true' name='SCNVector3ToGLKVector3'>
<arg declared_type64='SCNVector3' name='vector' type64='{SCNVector3=fff}'/>
<retval declared_type64='GLKVector3' type64='(_GLKVector3={?=fff}{?=fff}{?=fff}[3f])'/>
</function>
<function name='SCNVector4EqualToVector4'>
<arg declared_type64='SCNVector4' name='a' type64='{SCNVector4=ffff}'/>
<arg declared_type64='SCNVector4' name='b' type64='{SCNVector4=ffff}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function inline='true' name='SCNVector4FromFloat4'>
<arg declared_type64='simd_float4' name='v' type64=''/>
<retval declared_type64='SCNVector4' type64='{SCNVector4=ffff}'/>
</function>
<function inline='true' name='SCNVector4FromGLKVector4'>
<arg declared_type64='GLKVector4' name='vector' type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
<retval declared_type64='SCNVector4' type64='{SCNVector4=ffff}'/>
</function>
<function inline='true' name='SCNVector4Make'>
<arg declared_type64='float' name='x' type64='f'/>
<arg declared_type64='float' name='y' type64='f'/>
<arg declared_type64='float' name='z' type64='f'/>
<arg declared_type64='float' name='w' type64='f'/>
<retval declared_type64='SCNVector4' type64='{SCNVector4=ffff}'/>
</function>
<function inline='true' name='SCNVector4ToFloat4'>
<arg declared_type64='SCNVector4' name='v' type64='{SCNVector4=ffff}'/>
<retval declared_type64='simd_float4' type64=''/>
</function>
<function inline='true' name='SCNVector4ToGLKVector4'>
<arg declared_type64='SCNVector4' name='vector' type64='{SCNVector4=ffff}'/>
<retval declared_type64='GLKVector4' type64='(_GLKVector4={?=ffff}{?=ffff}{?=ffff}[4f])'/>
</function>
<class name='CAAnimation'>
<method selector='animationEvents'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='animationWithSCNAnimation:'>
<arg declared_type64='SCNAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<retval declared_type64='CAAnimation * _Nonnull' type64='@'/>
</method>
<method selector='fadeInDuration'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='fadeOutDuration'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAnimationEvents:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='animationEvents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFadeInDuration:'>
<arg declared_type64='CGFloat' index='0' name='fadeInDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFadeOutDuration:'>
<arg declared_type64='CGFloat' index='0' name='fadeOutDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesSceneTimeBase:'>
<arg declared_type64='BOOL' index='0' name='usesSceneTimeBase' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesSceneTimeBase'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='MDLAsset'>
<method class_method='true' selector='assetWithSCNScene:'>
<arg declared_type64='SCNScene * _Nonnull' index='0' name='scnScene' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetWithSCNScene:bufferAllocator:'>
<arg declared_type64='SCNScene * _Nonnull' index='0' name='scnScene' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='bufferAllocator' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='MDLCamera'>
<method class_method='true' selector='cameraWithSCNCamera:'>
<arg declared_type64='SCNCamera * _Nonnull' index='0' name='scnCamera' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='MDLLight'>
<method class_method='true' selector='lightWithSCNLight:'>
<arg declared_type64='SCNLight * _Nonnull' index='0' name='scnLight' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='MDLMaterial'>
<method class_method='true' selector='materialWithSCNMaterial:'>
<arg declared_type64='SCNMaterial * _Nonnull' index='0' name='scnMaterial' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='MDLMesh'>
<method class_method='true' selector='meshWithSCNGeometry:'>
<arg declared_type64='SCNGeometry * _Nonnull' index='0' name='scnGeometry' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='meshWithSCNGeometry:bufferAllocator:'>
<arg declared_type64='SCNGeometry * _Nonnull' index='0' name='scnGeometry' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='bufferAllocator' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='MDLObject'>
<method class_method='true' selector='objectWithSCNNode:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='scnNode' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='objectWithSCNNode:bufferAllocator:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='scnNode' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='bufferAllocator' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='MDLSubmesh'>
<method class_method='true' selector='submeshWithSCNGeometryElement:'>
<arg declared_type64='SCNGeometryElement * _Nonnull' index='0' name='scnGeometryElement' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='submeshWithSCNGeometryElement:bufferAllocator:'>
<arg declared_type64='SCNGeometryElement * _Nonnull' index='0' name='scnGeometryElement' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='bufferAllocator' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='actionForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='SCNAction * _Nullable' type64='@'/>
</method>
<method selector='actionKeys'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='addAnimation:forKey:'>
<arg declared_type64='id _Nonnull' index='0' name='animation' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addAnimationPlayer:forKey:'>
<arg declared_type64='SCNAnimationPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowsTranslation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='animationForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CAAnimation * _Nullable' type64='@'/>
</method>
<method selector='animationKeys'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='animationPlayerForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='SCNAnimationPlayer * _Nullable' type64='@'/>
</method>
<method selector='audioEngine'>
<retval declared_type64='AVAudioEngine * _Nonnull' type64='@'/>
</method>
<method selector='audioEnvironmentNode'>
<retval declared_type64='AVAudioEnvironmentNode * _Nonnull' type64='@'/>
</method>
<method selector='audioListener'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
<method selector='autoSwitchToFreeCamera'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autoenablesDefaultLighting'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='avoidOccluderConstraint:didAvoidOccluder:forNode:'>
<arg declared_type64='SCNAvoidOccluderConstraint * _Nonnull' index='0' name='constraint' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' index='1' name='occluder' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' index='2' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='avoidOccluderConstraint:shouldAvoidOccluder:forNode:'>
<arg declared_type64='SCNAvoidOccluderConstraint * _Nonnull' index='0' name='constraint' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' index='1' name='occluder' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' index='2' name='node' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cameraInertiaDidEndForController:'>
<arg declared_type64='SCNCameraController * _Nonnull' index='0' name='cameraController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cameraInertiaWillStartForController:'>
<arg declared_type64='SCNCameraController * _Nonnull' index='0' name='cameraController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='colorPixelFormat'>
<retval declared_type64='MTLPixelFormat' type64='Q'/>
</method>
<method selector='commandQueue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='context'>
<retval declared_type64='void * _Nullable' type64='^v'/>
</method>
<method selector='currentRenderCommandEncoder'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='currentRenderPassDescriptor'>
<retval declared_type64='MTLRenderPassDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='currentViewport'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='debugOptions'>
<retval declared_type64='SCNDebugOptions' type64='Q'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='depthPixelFormat'>
<retval declared_type64='MTLPixelFormat' type64='Q'/>
</method>
<method selector='device'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='flyModeVelocity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='getBoundingBoxMin:max:'>
<arg declared_type64='SCNVector3 * _Nullable' index='0' name='min' type64='^{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3 * _Nullable' index='1' name='max' type64='^{SCNVector3=fff}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='getBoundingSphereCenter:radius:'>
<arg declared_type64='SCNVector3 * _Nullable' index='0' name='center' type64='^{SCNVector3=fff}'/>
<arg declared_type64='CGFloat * _Nullable' index='1' name='radius' type64='^d'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='handleBindingOfSymbol:usingBlock:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='symbol' type64='@'/>
<arg declared_type64='SCNBindingBlock _Nullable' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='SCNNode * _Nullable' type64='@'/>
<arg declared_type64='SCNRenderer * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='handleUnbindingOfSymbol:usingBlock:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='symbol' type64='@'/>
<arg declared_type64='SCNBindingBlock _Nullable' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='SCNNode * _Nullable' type64='@'/>
<arg declared_type64='SCNRenderer * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hasActions'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hitTest:options:'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='isAnimationForKeyPaused:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isJitteringEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isNodeInsideFrustum:withPointOfView:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' index='1' name='pointOfView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlaying'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTemporalAntialiasingEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loops'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='nodesInsideFrustumWithPointOfView:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='pointOfView' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='overlaySKScene'>
<retval declared_type64='SKScene * _Nullable' type64='@'/>
</method>
<method selector='panSensitivity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='pauseAnimationForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='physicsWorld:didBeginContact:'>
<arg declared_type64='SCNPhysicsWorld * _Nonnull' index='0' name='world' type64='@'/>
<arg declared_type64='SCNPhysicsContact * _Nonnull' index='1' name='contact' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='physicsWorld:didEndContact:'>
<arg declared_type64='SCNPhysicsWorld * _Nonnull' index='0' name='world' type64='@'/>
<arg declared_type64='SCNPhysicsContact * _Nonnull' index='1' name='contact' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='physicsWorld:didUpdateContact:'>
<arg declared_type64='SCNPhysicsWorld * _Nonnull' index='0' name='world' type64='@'/>
<arg declared_type64='SCNPhysicsContact * _Nonnull' index='1' name='contact' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pointOfView'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
<method selector='prepareObject:shouldAbortBlock:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<arg declared_type64='BOOL (^ _Nullable)(void)' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prepareObjects:withCompletionHandler:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentScene:withTransition:incomingPointOfView:completionHandler:'>
<arg declared_type64='SCNScene * _Nonnull' index='0' name='scene' type64='@'/>
<arg declared_type64='SKTransition * _Nonnull' index='1' name='transition' type64='@'/>
<arg declared_type64='SCNNode * _Nullable' index='2' name='pointOfView' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='program'>
<retval declared_type64='SCNProgram * _Nullable' type64='@'/>
</method>
<method selector='program:handleError:'>
<arg declared_type64='SCNProgram * _Nonnull' index='0' name='program' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='projectPoint:'>
<arg declared_type64='SCNVector3' index='0' name='point' type64='{SCNVector3=fff}'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='removeActionForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAllActions'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAllAnimations'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAnimationForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAnimationForKey:blendOutDuration:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAnimationForKey:fadeOutDuration:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderNode:renderer:arguments:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='SCNRenderer * _Nonnull' index='1' name='renderer' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='arguments' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderer:didApplyAnimationsAtTime:'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderer:didApplyConstraintsAtTime:'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderer:didRenderScene:atTime:'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='SCNScene * _Nonnull' index='1' name='scene' type64='@'/>
<arg declared_type64='NSTimeInterval' index='2' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderer:didSimulatePhysicsAtTime:'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderer:updateAtTime:'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderer:willRenderScene:atTime:'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='SCNScene * _Nonnull' index='1' name='scene' type64='@'/>
<arg declared_type64='NSTimeInterval' index='2' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderingAPI'>
<retval declared_type64='SCNRenderingAPI' type64='Q'/>
</method>
<method selector='resumeAnimationForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rotationSensitivity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='runAction:'>
<arg declared_type64='SCNAction * _Nonnull' index='0' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runAction:completionHandler:'>
<arg declared_type64='SCNAction * _Nonnull' index='0' name='action' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runAction:forKey:'>
<arg declared_type64='SCNAction * _Nonnull' index='0' name='action' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runAction:forKey:completionHandler:'>
<arg declared_type64='SCNAction * _Nonnull' index='0' name='action' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='key' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='2' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scene'>
<retval declared_type64='SCNScene * _Nullable' type64='@'/>
</method>
<method selector='sceneTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='setAllowsTranslation:'>
<arg declared_type64='BOOL' index='0' name='allowsTranslation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAudioListener:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='audioListener' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoSwitchToFreeCamera:'>
<arg declared_type64='BOOL' index='0' name='autoSwitchToFreeCamera' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoenablesDefaultLighting:'>
<arg declared_type64='BOOL' index='0' name='autoenablesDefaultLighting' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBoundingBoxMin:max:'>
<arg declared_type64='SCNVector3 * _Nullable' index='0' name='min' type64='^{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3 * _Nullable' index='1' name='max' type64='^{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDebugOptions:'>
<arg declared_type64='SCNDebugOptions' index='0' name='debugOptions' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFlyModeVelocity:'>
<arg declared_type64='CGFloat' index='0' name='flyModeVelocity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setJitteringEnabled:'>
<arg declared_type64='BOOL' index='0' name='jitteringEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLoops:'>
<arg declared_type64='BOOL' index='0' name='loops' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOverlaySKScene:'>
<arg declared_type64='SKScene * _Nullable' index='0' name='overlaySKScene' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPanSensitivity:'>
<arg declared_type64='CGFloat' index='0' name='panSensitivity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaying:'>
<arg declared_type64='BOOL' index='0' name='playing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPointOfView:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='pointOfView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProgram:'>
<arg declared_type64='SCNProgram * _Nullable' index='0' name='program' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRotationSensitivity:'>
<arg declared_type64='CGFloat' index='0' name='rotationSensitivity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScene:'>
<arg declared_type64='SCNScene * _Nullable' index='0' name='scene' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSceneTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='sceneTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShaderModifiers:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='shaderModifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsStatistics:'>
<arg declared_type64='BOOL' index='0' name='showsStatistics' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpeed:forAnimationKey:'>
<arg declared_type64='CGFloat' index='0' name='speed' type64='d'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTechnique:'>
<arg declared_type64='SCNTechnique * _Nullable' index='0' name='technique' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTemporalAntialiasingEnabled:'>
<arg declared_type64='BOOL' index='0' name='temporalAntialiasingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTruckSensitivity:'>
<arg declared_type64='CGFloat' index='0' name='truckSensitivity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesReverseZ:'>
<arg declared_type64='BOOL' index='0' name='usesReverseZ' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shaderModifiers'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='showsStatistics'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stencilPixelFormat'>
<retval declared_type64='MTLPixelFormat' type64='Q'/>
</method>
<method selector='technique'>
<retval declared_type64='SCNTechnique * _Nullable' type64='@'/>
</method>
<method selector='truckSensitivity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='unprojectPoint:'>
<arg declared_type64='SCNVector3' index='0' name='point' type64='{SCNVector3=fff}'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='usesReverseZ'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeBytes:length:'>
<arg const='true' declared_type64='void * _Nonnull' index='0' name='bytes' type64='^v'/>
<arg declared_type64='NSUInteger' index='1' name='length' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='writeImage:withSceneDocumentURL:originalImageURL:'>
<arg declared_type64='UIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='documentURL' type64='@'/>
<arg declared_type64='NSURL * _Nullable' index='2' name='originalImageURL' type64='@'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
</class>
<class name='NSValue'>
<method selector='SCNMatrix4Value'>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='SCNVector3Value'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='SCNVector4Value'>
<retval declared_type64='SCNVector4' type64='{SCNVector4=ffff}'/>
</method>
<method class_method='true' selector='valueWithSCNMatrix4:'>
<arg declared_type64='SCNMatrix4' index='0' name='v' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithSCNVector3:'>
<arg declared_type64='SCNVector3' index='0' name='v' type64='{SCNVector3=fff}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithSCNVector4:'>
<arg declared_type64='SCNVector4' index='0' name='v' type64='{SCNVector4=ffff}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNAccelerationConstraint'>
<method class_method='true' selector='accelerationConstraint'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='damping'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='decelerationDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumLinearAcceleration'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumLinearVelocity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setDamping:'>
<arg declared_type64='CGFloat' index='0' name='damping' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDecelerationDistance:'>
<arg declared_type64='CGFloat' index='0' name='decelerationDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumLinearAcceleration:'>
<arg declared_type64='CGFloat' index='0' name='maximumLinearAcceleration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumLinearVelocity:'>
<arg declared_type64='CGFloat' index='0' name='maximumLinearVelocity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNAction'>
<method class_method='true' selector='customActionWithDuration:actionBlock:'>
<arg declared_type64='NSTimeInterval' index='0' name='seconds' type64='d'/>
<arg declared_type64='void (^ _Nonnull)(SCNNode * _Nonnull, CGFloat)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='SCNNode * _Nonnull' type64='@'/>
<arg declared_type64='CGFloat' type64='d'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='fadeInWithDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='sec' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fadeOpacityBy:duration:'>
<arg declared_type64='CGFloat' index='0' name='factor' type64='d'/>
<arg declared_type64='NSTimeInterval' index='1' name='sec' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fadeOpacityTo:duration:'>
<arg declared_type64='CGFloat' index='0' name='opacity' type64='d'/>
<arg declared_type64='NSTimeInterval' index='1' name='sec' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fadeOutWithDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='sec' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='group:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='actions' type64='@'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='hide'>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='javaScriptActionWithScript:duration:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='script' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='seconds' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='moveBy:duration:'>
<arg declared_type64='SCNVector3' index='0' name='delta' type64='{SCNVector3=fff}'/>
<arg declared_type64='NSTimeInterval' index='1' name='duration' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='moveByX:y:z:duration:'>
<arg declared_type64='CGFloat' index='0' name='deltaX' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='deltaY' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='deltaZ' type64='d'/>
<arg declared_type64='NSTimeInterval' index='3' name='duration' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='moveTo:duration:'>
<arg declared_type64='SCNVector3' index='0' name='location' type64='{SCNVector3=fff}'/>
<arg declared_type64='NSTimeInterval' index='1' name='duration' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playAudioSource:waitForCompletion:'>
<arg declared_type64='SCNAudioSource * _Nonnull' index='0' name='source' type64='@'/>
<arg declared_type64='BOOL' index='1' name='wait' type64='B'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='removeFromParentNode'>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='repeatAction:count:'>
<arg declared_type64='SCNAction * _Nonnull' index='0' name='action' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='count' type64='Q'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='repeatActionForever:'>
<arg declared_type64='SCNAction * _Nonnull' index='0' name='action' type64='@'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method selector='reversedAction'>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='rotateByAngle:aroundAxis:duration:'>
<arg declared_type64='CGFloat' index='0' name='angle' type64='d'/>
<arg declared_type64='SCNVector3' index='1' name='axis' type64='{SCNVector3=fff}'/>
<arg declared_type64='NSTimeInterval' index='2' name='duration' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='rotateByX:y:z:duration:'>
<arg declared_type64='CGFloat' index='0' name='xAngle' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='yAngle' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='zAngle' type64='d'/>
<arg declared_type64='NSTimeInterval' index='3' name='duration' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='rotateToAxisAngle:duration:'>
<arg declared_type64='SCNVector4' index='0' name='axisAngle' type64='{SCNVector4=ffff}'/>
<arg declared_type64='NSTimeInterval' index='1' name='duration' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='rotateToX:y:z:duration:'>
<arg declared_type64='CGFloat' index='0' name='xAngle' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='yAngle' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='zAngle' type64='d'/>
<arg declared_type64='NSTimeInterval' index='3' name='duration' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='rotateToX:y:z:duration:shortestUnitArc:'>
<arg declared_type64='CGFloat' index='0' name='xAngle' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='yAngle' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='zAngle' type64='d'/>
<arg declared_type64='NSTimeInterval' index='3' name='duration' type64='d'/>
<arg declared_type64='BOOL' index='4' name='shortestUnitArc' type64='B'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='runBlock:'>
<arg declared_type64='void (^ _Nonnull)(SCNNode * _Nonnull)' function_pointer='true' index='0' name='block' type64='@?'>
<arg declared_type64='SCNNode * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='runBlock:queue:'>
<arg declared_type64='void (^ _Nonnull)(SCNNode * _Nonnull)' function_pointer='true' index='0' name='block' type64='@?'>
<arg declared_type64='SCNNode * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='dispatch_queue_t _Nonnull' index='1' name='queue' type64='@'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='scaleBy:duration:'>
<arg declared_type64='CGFloat' index='0' name='scale' type64='d'/>
<arg declared_type64='NSTimeInterval' index='1' name='sec' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='scaleTo:duration:'>
<arg declared_type64='CGFloat' index='0' name='scale' type64='d'/>
<arg declared_type64='NSTimeInterval' index='1' name='sec' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sequence:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='actions' type64='@'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method selector='setDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type64='CGFloat' index='0' name='speed' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimingFunction:'>
<arg declared_type64='SCNActionTimingFunction _Nullable' function_pointer='true' index='0' name='timingFunction' type64='@?'>
<arg declared_type64='float' type64='f'/>
<retval declared_type64='float' type64='f'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimingMode:'>
<arg declared_type64='SCNActionTimingMode' index='0' name='timingMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speed'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='timingFunction'>
<retval declared_type64='SCNActionTimingFunction _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='float' type64='f'/>
<retval declared_type64='float' type64='f'/>
</retval>
</method>
<method selector='timingMode'>
<retval declared_type64='SCNActionTimingMode' type64='q'/>
</method>
<method class_method='true' selector='unhide'>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='waitForDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='sec' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='waitForDuration:withRange:'>
<arg declared_type64='NSTimeInterval' index='0' name='sec' type64='d'/>
<arg declared_type64='NSTimeInterval' index='1' name='durationRange' type64='d'/>
<retval declared_type64='SCNAction * _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNAnimation'>
<method selector='animationDidStart'>
<retval declared_type64='SCNAnimationDidStartBlock _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='SCNAnimation * _Nonnull' type64='@'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method selector='animationDidStop'>
<retval declared_type64='SCNAnimationDidStopBlock _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='SCNAnimation * _Nonnull' type64='@'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method selector='animationEvents'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='animationNamed:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='animationName' type64='@'/>
<retval declared_type64='SCNAnimation * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='animationWithCAAnimation:'>
<arg declared_type64='CAAnimation * _Nonnull' index='0' name='caAnimation' type64='@'/>
<retval declared_type64='SCNAnimation * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='animationWithContentsOfURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='animationUrl' type64='@'/>
<retval declared_type64='SCNAnimation * _Nonnull' type64='@'/>
</method>
<method selector='autoreverses'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='blendInDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='blendOutDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='duration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='fillsBackward'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='fillsForward'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAdditive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAppliedOnCompletion'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isCumulative'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRemovedOnCompletion'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyPath'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='repeatCount'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAdditive:'>
<arg declared_type64='BOOL' index='0' name='additive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimationDidStart:'>
<arg declared_type64='SCNAnimationDidStartBlock _Nullable' function_pointer='true' index='0' name='animationDidStart' type64='@?'>
<arg declared_type64='SCNAnimation * _Nonnull' type64='@'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimationDidStop:'>
<arg declared_type64='SCNAnimationDidStopBlock _Nullable' function_pointer='true' index='0' name='animationDidStop' type64='@?'>
<arg declared_type64='SCNAnimation * _Nonnull' type64='@'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimationEvents:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='animationEvents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAppliedOnCompletion:'>
<arg declared_type64='BOOL' index='0' name='appliedOnCompletion' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoreverses:'>
<arg declared_type64='BOOL' index='0' name='autoreverses' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBlendInDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='blendInDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBlendOutDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='blendOutDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCumulative:'>
<arg declared_type64='BOOL' index='0' name='cumulative' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFillsBackward:'>
<arg declared_type64='BOOL' index='0' name='fillsBackward' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFillsForward:'>
<arg declared_type64='BOOL' index='0' name='fillsForward' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyPath:'>
<arg declared_type64='NSString * _Nullable' index='0' name='keyPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRemovedOnCompletion:'>
<arg declared_type64='BOOL' index='0' name='removedOnCompletion' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepeatCount:'>
<arg declared_type64='CGFloat' index='0' name='repeatCount' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartDelay:'>
<arg declared_type64='NSTimeInterval' index='0' name='startDelay' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeOffset:'>
<arg declared_type64='NSTimeInterval' index='0' name='timeOffset' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimingFunction:'>
<arg declared_type64='SCNTimingFunction * _Nonnull' index='0' name='timingFunction' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesSceneTimeBase:'>
<arg declared_type64='BOOL' index='0' name='usesSceneTimeBase' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startDelay'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='timeOffset'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='timingFunction'>
<retval declared_type64='SCNTimingFunction * _Nonnull' type64='@'/>
</method>
<method selector='usesSceneTimeBase'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='SCNAnimationEvent'>
<method class_method='true' selector='animationEventWithKeyTime:block:'>
<arg declared_type64='CGFloat' index='0' name='time' type64='d'/>
<arg declared_type64='SCNAnimationEventBlock _Nonnull' function_pointer='true' index='1' name='eventBlock' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNAnimationPlayer'>
<method selector='animation'>
<retval declared_type64='SCNAnimation * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='animationPlayerWithAnimation:'>
<arg declared_type64='SCNAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<retval declared_type64='SCNAnimationPlayer * _Nonnull' type64='@'/>
</method>
<method selector='blendFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='play'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBlendFactor:'>
<arg declared_type64='CGFloat' index='0' name='blendFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPaused:'>
<arg declared_type64='BOOL' index='0' name='paused' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type64='CGFloat' index='0' name='speed' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speed'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopWithBlendOutDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNAudioPlayer'>
<method selector='audioNode'>
<retval declared_type64='AVAudioNode * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='audioPlayerWithAVAudioNode:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='audioNode' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='audioPlayerWithSource:'>
<arg declared_type64='SCNAudioSource * _Nonnull' index='0' name='source' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='audioSource'>
<retval declared_type64='SCNAudioSource * _Nullable' type64='@'/>
</method>
<method selector='didFinishPlayback'>
<retval declared_type64='void (^ _Nullable)(void)' function_pointer='true' type64='@?'>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method selector='initWithAVAudioNode:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='audioNode' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSource:'>
<arg declared_type64='SCNAudioSource * _Nonnull' index='0' name='source' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setDidFinishPlayback:'>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='0' name='didFinishPlayback' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWillStartPlayback:'>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='0' name='willStartPlayback' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willStartPlayback'>
<retval declared_type64='void (^ _Nullable)(void)' function_pointer='true' type64='@?'>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
</class>
<class name='SCNAudioSource'>
<method class_method='true' selector='audioSourceNamed:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileName' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFileNamed:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isPositional'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='load'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='loops'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='reverbBlend'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setLoops:'>
<arg declared_type64='BOOL' index='0' name='loops' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPositional:'>
<arg declared_type64='BOOL' index='0' name='positional' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReverbBlend:'>
<arg declared_type64='float' index='0' name='reverbBlend' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldStream:'>
<arg declared_type64='BOOL' index='0' name='shouldStream' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldStream'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='SCNAvoidOccluderConstraint'>
<method class_method='true' selector='avoidOccluderConstraintWithTarget:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='bias'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='occluderCategoryBitMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='setBias:'>
<arg declared_type64='CGFloat' index='0' name='bias' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nonnull' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOccluderCategoryBitMask:'>
<arg declared_type64='NSUInteger' index='0' name='occluderCategoryBitMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
</class>
<class name='SCNBillboardConstraint'>
<method class_method='true' selector='billboardConstraint'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='freeAxes'>
<retval declared_type64='SCNBillboardAxis' type64='Q'/>
</method>
<method selector='setFreeAxes:'>
<arg declared_type64='SCNBillboardAxis' index='0' name='freeAxes' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNBox'>
<method class_method='true' selector='boxWithWidth:height:length:chamferRadius:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='height' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='length' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='chamferRadius' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='chamferRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='chamferSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='height'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='length'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lengthSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setChamferRadius:'>
<arg declared_type64='CGFloat' index='0' name='chamferRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setChamferSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='chamferSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type64='CGFloat' index='0' name='height' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='heightSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLength:'>
<arg declared_type64='CGFloat' index='0' name='length' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLengthSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='lengthSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidthSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='widthSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='width'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='widthSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='SCNCamera'>
<method selector='aperture'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='apertureBladeCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='automaticallyAdjustsZRange'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='averageGray'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='bloomBlurRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='bloomIntensity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='bloomIterationCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='bloomIterationSpread'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='bloomThreshold'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='camera'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='cameraWithMDLCamera:'>
<arg declared_type64='MDLCamera * _Nonnull' index='0' name='mdlCamera' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='categoryBitMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='colorFringeIntensity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='colorFringeStrength'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='colorGrading'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='contrast'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='exposureAdaptationBrighteningSpeedFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='exposureAdaptationDarkeningSpeedFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='exposureOffset'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='fStop'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='fieldOfView'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='focalBlurRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='focalBlurSampleCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='focalDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='focalLength'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='focalSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='focusDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='grainIntensity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='grainIsColored'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='grainScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumExposure'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumExposure'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='motionBlurIntensity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='orthographicScale'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='projectionDirection'>
<retval declared_type64='SCNCameraProjectionDirection' type64='q'/>
</method>
<method selector='projectionTransform'>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='projectionTransformWithViewportSize:'>
<arg declared_type64='CGSize' index='0' name='viewportSize' type64='{CGSize=dd}'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='saturation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='screenSpaceAmbientOcclusionBias'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='screenSpaceAmbientOcclusionDepthThreshold'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='screenSpaceAmbientOcclusionIntensity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='screenSpaceAmbientOcclusionNormalThreshold'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='screenSpaceAmbientOcclusionRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='sensorHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAperture:'>
<arg declared_type64='CGFloat' index='0' name='aperture' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setApertureBladeCount:'>
<arg declared_type64='NSInteger' index='0' name='apertureBladeCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticallyAdjustsZRange:'>
<arg declared_type64='BOOL' index='0' name='automaticallyAdjustsZRange' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAverageGray:'>
<arg declared_type64='CGFloat' index='0' name='averageGray' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBloomBlurRadius:'>
<arg declared_type64='CGFloat' index='0' name='bloomBlurRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBloomIntensity:'>
<arg declared_type64='CGFloat' index='0' name='bloomIntensity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBloomIterationCount:'>
<arg declared_type64='NSInteger' index='0' name='bloomIterationCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBloomIterationSpread:'>
<arg declared_type64='CGFloat' index='0' name='bloomIterationSpread' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBloomThreshold:'>
<arg declared_type64='CGFloat' index='0' name='bloomThreshold' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type64='NSUInteger' index='0' name='categoryBitMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColorFringeIntensity:'>
<arg declared_type64='CGFloat' index='0' name='colorFringeIntensity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColorFringeStrength:'>
<arg declared_type64='CGFloat' index='0' name='colorFringeStrength' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContrast:'>
<arg declared_type64='CGFloat' index='0' name='contrast' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExposureAdaptationBrighteningSpeedFactor:'>
<arg declared_type64='CGFloat' index='0' name='exposureAdaptationBrighteningSpeedFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExposureAdaptationDarkeningSpeedFactor:'>
<arg declared_type64='CGFloat' index='0' name='exposureAdaptationDarkeningSpeedFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExposureOffset:'>
<arg declared_type64='CGFloat' index='0' name='exposureOffset' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFStop:'>
<arg declared_type64='CGFloat' index='0' name='fStop' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFieldOfView:'>
<arg declared_type64='CGFloat' index='0' name='fieldOfView' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocalBlurRadius:'>
<arg declared_type64='CGFloat' index='0' name='focalBlurRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocalBlurSampleCount:'>
<arg declared_type64='NSInteger' index='0' name='focalBlurSampleCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocalDistance:'>
<arg declared_type64='CGFloat' index='0' name='focalDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocalLength:'>
<arg declared_type64='CGFloat' index='0' name='focalLength' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocalSize:'>
<arg declared_type64='CGFloat' index='0' name='focalSize' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusDistance:'>
<arg declared_type64='CGFloat' index='0' name='focusDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGrainIntensity:'>
<arg declared_type64='CGFloat' index='0' name='grainIntensity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGrainIsColored:'>
<arg declared_type64='BOOL' index='0' name='grainIsColored' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGrainScale:'>
<arg declared_type64='CGFloat' index='0' name='grainScale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumExposure:'>
<arg declared_type64='CGFloat' index='0' name='maximumExposure' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumExposure:'>
<arg declared_type64='CGFloat' index='0' name='minimumExposure' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMotionBlurIntensity:'>
<arg declared_type64='CGFloat' index='0' name='motionBlurIntensity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrthographicScale:'>
<arg declared_type64='double' index='0' name='orthographicScale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProjectionDirection:'>
<arg declared_type64='SCNCameraProjectionDirection' index='0' name='projectionDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProjectionTransform:'>
<arg declared_type64='SCNMatrix4' index='0' name='projectionTransform' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSaturation:'>
<arg declared_type64='CGFloat' index='0' name='saturation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScreenSpaceAmbientOcclusionBias:'>
<arg declared_type64='CGFloat' index='0' name='screenSpaceAmbientOcclusionBias' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScreenSpaceAmbientOcclusionDepthThreshold:'>
<arg declared_type64='CGFloat' index='0' name='screenSpaceAmbientOcclusionDepthThreshold' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScreenSpaceAmbientOcclusionIntensity:'>
<arg declared_type64='CGFloat' index='0' name='screenSpaceAmbientOcclusionIntensity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScreenSpaceAmbientOcclusionNormalThreshold:'>
<arg declared_type64='CGFloat' index='0' name='screenSpaceAmbientOcclusionNormalThreshold' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScreenSpaceAmbientOcclusionRadius:'>
<arg declared_type64='CGFloat' index='0' name='screenSpaceAmbientOcclusionRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSensorHeight:'>
<arg declared_type64='CGFloat' index='0' name='sensorHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesOrthographicProjection:'>
<arg declared_type64='BOOL' index='0' name='usesOrthographicProjection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVignettingIntensity:'>
<arg declared_type64='CGFloat' index='0' name='vignettingIntensity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVignettingPower:'>
<arg declared_type64='CGFloat' index='0' name='vignettingPower' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWantsDepthOfField:'>
<arg declared_type64='BOOL' index='0' name='wantsDepthOfField' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWantsExposureAdaptation:'>
<arg declared_type64='BOOL' index='0' name='wantsExposureAdaptation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWantsHDR:'>
<arg declared_type64='BOOL' index='0' name='wantsHDR' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWhiteBalanceTemperature:'>
<arg declared_type64='CGFloat' index='0' name='whiteBalanceTemperature' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWhiteBalanceTint:'>
<arg declared_type64='CGFloat' index='0' name='whiteBalanceTint' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWhitePoint:'>
<arg declared_type64='CGFloat' index='0' name='whitePoint' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setXFov:'>
<arg declared_type64='double' index='0' name='xFov' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setYFov:'>
<arg declared_type64='double' index='0' name='yFov' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZFar:'>
<arg declared_type64='double' index='0' name='zFar' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZNear:'>
<arg declared_type64='double' index='0' name='zNear' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesOrthographicProjection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='vignettingIntensity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='vignettingPower'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='wantsDepthOfField'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsExposureAdaptation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsHDR'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='whiteBalanceTemperature'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='whiteBalanceTint'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='whitePoint'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='xFov'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='yFov'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='zFar'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='zNear'>
<retval declared_type64='double' type64='d'/>
</method>
</class>
<class name='SCNCameraController'>
<method selector='automaticTarget'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='beginInteraction:withViewport:'>
<arg declared_type64='CGPoint' index='0' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='CGSize' index='1' name='viewport' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='clearRoll'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='continueInteraction:withViewport:sensitivity:'>
<arg declared_type64='CGPoint' index='0' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='CGSize' index='1' name='viewport' type64='{CGSize=dd}'/>
<arg declared_type64='CGFloat' index='2' name='sensitivity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='dollyBy:onScreenPoint:viewport:'>
<arg declared_type64='float' index='0' name='delta' type64='f'/>
<arg declared_type64='CGPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='CGSize' index='2' name='viewport' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dollyToTarget:'>
<arg declared_type64='float' index='0' name='delta' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endInteraction:withViewport:velocity:'>
<arg declared_type64='CGPoint' index='0' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='CGSize' index='1' name='viewport' type64='{CGSize=dd}'/>
<arg declared_type64='CGPoint' index='2' name='velocity' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='frameNodes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='nodes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='inertiaEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='inertiaFriction'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='interactionMode'>
<retval declared_type64='SCNInteractionMode' type64='q'/>
</method>
<method selector='isInertiaRunning'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maximumHorizontalAngle'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='maximumVerticalAngle'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='minimumHorizontalAngle'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='minimumVerticalAngle'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='pointOfView'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
<method selector='rollAroundTarget:'>
<arg declared_type64='float' index='0' name='delta' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rollBy:aroundScreenPoint:viewport:'>
<arg declared_type64='float' index='0' name='delta' type64='f'/>
<arg declared_type64='CGPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='CGSize' index='2' name='viewport' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rotateByX:Y:'>
<arg declared_type64='float' index='0' name='deltaX' type64='f'/>
<arg declared_type64='float' index='1' name='deltaY' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticTarget:'>
<arg declared_type64='BOOL' index='0' name='automaticTarget' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInertiaEnabled:'>
<arg declared_type64='BOOL' index='0' name='inertiaEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInertiaFriction:'>
<arg declared_type64='float' index='0' name='inertiaFriction' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInteractionMode:'>
<arg declared_type64='SCNInteractionMode' index='0' name='interactionMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumHorizontalAngle:'>
<arg declared_type64='float' index='0' name='maximumHorizontalAngle' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumVerticalAngle:'>
<arg declared_type64='float' index='0' name='maximumVerticalAngle' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumHorizontalAngle:'>
<arg declared_type64='float' index='0' name='minimumHorizontalAngle' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumVerticalAngle:'>
<arg declared_type64='float' index='0' name='minimumVerticalAngle' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPointOfView:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='pointOfView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='SCNVector3' index='0' name='target' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWorldUp:'>
<arg declared_type64='SCNVector3' index='0' name='worldUp' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopInertia'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='translateInCameraSpaceByX:Y:Z:'>
<arg declared_type64='float' index='0' name='deltaX' type64='f'/>
<arg declared_type64='float' index='1' name='deltaY' type64='f'/>
<arg declared_type64='float' index='2' name='deltaZ' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='worldUp'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNCapsule'>
<method selector='capRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='capSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='capsuleWithCapRadius:height:'>
<arg declared_type64='CGFloat' index='0' name='capRadius' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='height' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='height'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='radialSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setCapRadius:'>
<arg declared_type64='CGFloat' index='0' name='capRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCapSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='capSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type64='CGFloat' index='0' name='height' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='heightSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRadialSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='radialSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNCone'>
<method selector='bottomRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='coneWithTopRadius:bottomRadius:height:'>
<arg declared_type64='CGFloat' index='0' name='topRadius' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='bottomRadius' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='height' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='height'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='radialSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setBottomRadius:'>
<arg declared_type64='CGFloat' index='0' name='bottomRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type64='CGFloat' index='0' name='height' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='heightSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRadialSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='radialSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTopRadius:'>
<arg declared_type64='CGFloat' index='0' name='topRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='topRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='SCNConstraint'>
<method selector='influenceFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isIncremental'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIncremental:'>
<arg declared_type64='BOOL' index='0' name='incremental' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInfluenceFactor:'>
<arg declared_type64='CGFloat' index='0' name='influenceFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNCylinder'>
<method class_method='true' selector='cylinderWithRadius:height:'>
<arg declared_type64='CGFloat' index='0' name='radius' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='height' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='height'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='radialSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='radius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setHeight:'>
<arg declared_type64='CGFloat' index='0' name='height' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='heightSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRadialSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='radialSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type64='CGFloat' index='0' name='radius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNDistanceConstraint'>
<method class_method='true' selector='distanceConstraintWithTarget:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maximumDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setMaximumDistance:'>
<arg declared_type64='CGFloat' index='0' name='maximumDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumDistance:'>
<arg declared_type64='CGFloat' index='0' name='minimumDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
</class>
<class name='SCNFloor'>
<method class_method='true' selector='floor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='length'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='reflectionCategoryBitMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='reflectionFalloffEnd'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='reflectionFalloffStart'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='reflectionResolutionScaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='reflectivity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setLength:'>
<arg declared_type64='CGFloat' index='0' name='length' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReflectionCategoryBitMask:'>
<arg declared_type64='NSUInteger' index='0' name='reflectionCategoryBitMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReflectionFalloffEnd:'>
<arg declared_type64='CGFloat' index='0' name='reflectionFalloffEnd' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReflectionFalloffStart:'>
<arg declared_type64='CGFloat' index='0' name='reflectionFalloffStart' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReflectionResolutionScaleFactor:'>
<arg declared_type64='CGFloat' index='0' name='reflectionResolutionScaleFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReflectivity:'>
<arg declared_type64='CGFloat' index='0' name='reflectivity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='width'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='SCNGeometry'>
<method selector='edgeCreasesElement'>
<retval declared_type64='SCNGeometryElement * _Nullable' type64='@'/>
</method>
<method selector='edgeCreasesSource'>
<retval declared_type64='SCNGeometrySource * _Nullable' type64='@'/>
</method>
<method selector='firstMaterial'>
<retval declared_type64='SCNMaterial * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='geometry'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='geometryElementAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='elementIndex' type64='q'/>
<retval declared_type64='SCNGeometryElement * _Nonnull' type64='@'/>
</method>
<method selector='geometryElementCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='geometryElements'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='geometrySources'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='geometrySourcesForSemantic:'>
<arg declared_type64='SCNGeometrySourceSemantic _Nonnull' index='0' name='semantic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='geometryWithMDLMesh:'>
<arg declared_type64='MDLMesh * _Nonnull' index='0' name='mdlMesh' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='geometryWithSources:elements:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='sources' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='elements' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertMaterial:atIndex:'>
<arg declared_type64='SCNMaterial * _Nonnull' index='0' name='material' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='levelsOfDetail'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='materialWithName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='SCNMaterial * _Nullable' type64='@'/>
</method>
<method selector='materials'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='removeMaterialAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceMaterialAtIndex:withMaterial:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<arg declared_type64='SCNMaterial * _Nonnull' index='1' name='material' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEdgeCreasesElement:'>
<arg declared_type64='SCNGeometryElement * _Nullable' index='0' name='edgeCreasesElement' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEdgeCreasesSource:'>
<arg declared_type64='SCNGeometrySource * _Nullable' index='0' name='edgeCreasesSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFirstMaterial:'>
<arg declared_type64='SCNMaterial * _Nullable' index='0' name='firstMaterial' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLevelsOfDetail:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='levelsOfDetail' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaterials:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='materials' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSubdivisionLevel:'>
<arg declared_type64='NSUInteger' index='0' name='subdivisionLevel' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTessellator:'>
<arg declared_type64='SCNGeometryTessellator * _Nullable' index='0' name='tessellator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWantsAdaptiveSubdivision:'>
<arg declared_type64='BOOL' index='0' name='wantsAdaptiveSubdivision' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='subdivisionLevel'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='tessellator'>
<retval declared_type64='SCNGeometryTessellator * _Nullable' type64='@'/>
</method>
<method selector='wantsAdaptiveSubdivision'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='SCNGeometryElement'>
<method selector='bytesPerIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='data'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='geometryElementWithBuffer:primitiveType:primitiveCount:bytesPerIndex:'>
<arg declared_type64='id _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='SCNGeometryPrimitiveType' index='1' name='primitiveType' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='primitiveCount' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='bytesPerIndex' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='geometryElementWithData:primitiveType:primitiveCount:bytesPerIndex:'>
<arg declared_type64='NSData * _Nullable' index='0' name='data' type64='@'/>
<arg declared_type64='SCNGeometryPrimitiveType' index='1' name='primitiveType' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='primitiveCount' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='bytesPerIndex' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='geometryElementWithMDLSubmesh:'>
<arg declared_type64='MDLSubmesh * _Nonnull' index='0' name='mdlSubMesh' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maximumPointScreenSpaceRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumPointScreenSpaceRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='pointSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='primitiveCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='primitiveRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='primitiveType'>
<retval declared_type64='SCNGeometryPrimitiveType' type64='q'/>
</method>
<method selector='setMaximumPointScreenSpaceRadius:'>
<arg declared_type64='CGFloat' index='0' name='maximumPointScreenSpaceRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumPointScreenSpaceRadius:'>
<arg declared_type64='CGFloat' index='0' name='minimumPointScreenSpaceRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPointSize:'>
<arg declared_type64='CGFloat' index='0' name='pointSize' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrimitiveRange:'>
<arg declared_type64='NSRange' index='0' name='primitiveRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNGeometrySource'>
<method selector='bytesPerComponent'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='componentsPerVector'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='data'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='dataOffset'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='dataStride'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='floatComponents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='geometrySourceWithBuffer:vertexFormat:semantic:vertexCount:dataOffset:dataStride:'>
<arg declared_type64='id _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='MTLVertexFormat' index='1' name='vertexFormat' type64='Q'/>
<arg declared_type64='SCNGeometrySourceSemantic _Nonnull' index='2' name='semantic' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='vertexCount' type64='q'/>
<arg declared_type64='NSInteger' index='4' name='offset' type64='q'/>
<arg declared_type64='NSInteger' index='5' name='stride' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='geometrySourceWithData:semantic:vectorCount:floatComponents:componentsPerVector:bytesPerComponent:dataOffset:dataStride:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='SCNGeometrySourceSemantic _Nonnull' index='1' name='semantic' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='vectorCount' type64='q'/>
<arg declared_type64='BOOL' index='3' name='floatComponents' type64='B'/>
<arg declared_type64='NSInteger' index='4' name='componentsPerVector' type64='q'/>
<arg declared_type64='NSInteger' index='5' name='bytesPerComponent' type64='q'/>
<arg declared_type64='NSInteger' index='6' name='offset' type64='q'/>
<arg declared_type64='NSInteger' index='7' name='stride' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='geometrySourceWithNormals:count:'>
<arg const='true' declared_type64='SCNVector3 * _Nonnull' index='0' name='normals' type64='^{SCNVector3=fff}'/>
<arg declared_type64='NSInteger' index='1' name='count' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='geometrySourceWithTextureCoordinates:count:'>
<arg const='true' declared_type64='CGPoint * _Nonnull' index='0' name='texcoord' type64='^{CGPoint=dd}'/>
<arg declared_type64='NSInteger' index='1' name='count' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='geometrySourceWithVertices:count:'>
<arg const='true' declared_type64='SCNVector3 * _Nonnull' index='0' name='vertices' type64='^{SCNVector3=fff}'/>
<arg declared_type64='NSInteger' index='1' name='count' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='semantic'>
<retval declared_type64='SCNGeometrySourceSemantic _Nonnull' type64='@'/>
</method>
<method selector='vectorCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='SCNGeometryTessellator'>
<method selector='edgeTessellationFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='insideTessellationFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='isAdaptive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isScreenSpace'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maximumEdgeLength'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAdaptive:'>
<arg declared_type64='BOOL' index='0' name='adaptive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEdgeTessellationFactor:'>
<arg declared_type64='CGFloat' index='0' name='edgeTessellationFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInsideTessellationFactor:'>
<arg declared_type64='CGFloat' index='0' name='insideTessellationFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumEdgeLength:'>
<arg declared_type64='CGFloat' index='0' name='maximumEdgeLength' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScreenSpace:'>
<arg declared_type64='BOOL' index='0' name='screenSpace' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSmoothingMode:'>
<arg declared_type64='SCNTessellationSmoothingMode' index='0' name='smoothingMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTessellationFactorScale:'>
<arg declared_type64='CGFloat' index='0' name='tessellationFactorScale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTessellationPartitionMode:'>
<arg declared_type64='MTLTessellationPartitionMode' index='0' name='tessellationPartitionMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='smoothingMode'>
<retval declared_type64='SCNTessellationSmoothingMode' type64='q'/>
</method>
<method selector='tessellationFactorScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tessellationPartitionMode'>
<retval declared_type64='MTLTessellationPartitionMode' type64='Q'/>
</method>
</class>
<class name='SCNHitTestResult'>
<method selector='boneNode'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
<method selector='faceIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='geometryIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='localCoordinates'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='localNormal'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='modelTransform'>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='node'>
<retval declared_type64='SCNNode * _Nonnull' type64='@'/>
</method>
<method selector='simdLocalCoordinates'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdLocalNormal'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdModelTransform'>
<retval declared_type64='simd_float4x4' type64='{_simd_float4x4=[4]}'/>
</method>
<method selector='simdWorldCoordinates'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdWorldNormal'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='textureCoordinatesWithMappingChannel:'>
<arg declared_type64='NSInteger' index='0' name='channel' type64='q'/>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='worldCoordinates'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='worldNormal'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNIKConstraint'>
<method selector='chainRootNode'>
<retval declared_type64='SCNNode * _Nonnull' type64='@'/>
</method>
<method selector='initWithChainRootNode:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='chainRootNode' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='inverseKinematicsConstraintWithChainRootNode:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='chainRootNode' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maxAllowedRotationAngleForJoint:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setMaxAllowedRotationAngle:forJoint:'>
<arg declared_type64='CGFloat' index='0' name='angle' type64='d'/>
<arg declared_type64='SCNNode * _Nonnull' index='1' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTargetPosition:'>
<arg declared_type64='SCNVector3' index='0' name='targetPosition' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='targetPosition'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNLevelOfDetail'>
<method selector='geometry'>
<retval declared_type64='SCNGeometry * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='levelOfDetailWithGeometry:screenSpaceRadius:'>
<arg declared_type64='SCNGeometry * _Nullable' index='0' name='geometry' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='radius' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='levelOfDetailWithGeometry:worldSpaceDistance:'>
<arg declared_type64='SCNGeometry * _Nullable' index='0' name='geometry' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='distance' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='screenSpaceRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='worldSpaceDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='SCNLight'>
<method selector='IESProfileURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='areaExtents'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='areaPolygonVertices'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='areaType'>
<retval declared_type64='SCNLightAreaType' type64='q'/>
</method>
<method selector='attenuationEndDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='attenuationFalloffExponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='attenuationStartDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='automaticallyAdjustsShadowProjection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='castsShadow'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='categoryBitMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='color'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='doubleSided'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawsArea'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='forcesBackFaceCasters'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gobo'>
<retval declared_type64='SCNMaterialProperty * _Nullable' type64='@'/>
</method>
<method selector='intensity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='light'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='lightWithMDLLight:'>
<arg declared_type64='MDLLight * _Nonnull' index='0' name='mdlLight' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maximumShadowDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='orthographicScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='parallaxCenterOffset'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='parallaxCorrectionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='parallaxExtentsFactor'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='probeEnvironment'>
<retval declared_type64='SCNMaterialProperty * _Nullable' type64='@'/>
</method>
<method selector='probeExtents'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='probeOffset'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='probeType'>
<retval declared_type64='SCNLightProbeType' type64='q'/>
</method>
<method selector='probeUpdateType'>
<retval declared_type64='SCNLightProbeUpdateType' type64='q'/>
</method>
<method selector='sampleDistributedShadowMaps'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAreaExtents:'>
<arg declared_type64='simd_float3' index='0' name='areaExtents' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAreaPolygonVertices:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='areaPolygonVertices' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAreaType:'>
<arg declared_type64='SCNLightAreaType' index='0' name='areaType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttenuationEndDistance:'>
<arg declared_type64='CGFloat' index='0' name='attenuationEndDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttenuationFalloffExponent:'>
<arg declared_type64='CGFloat' index='0' name='attenuationFalloffExponent' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttenuationStartDistance:'>
<arg declared_type64='CGFloat' index='0' name='attenuationStartDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticallyAdjustsShadowProjection:'>
<arg declared_type64='BOOL' index='0' name='automaticallyAdjustsShadowProjection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCastsShadow:'>
<arg declared_type64='BOOL' index='0' name='castsShadow' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type64='NSUInteger' index='0' name='categoryBitMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColor:'>
<arg declared_type64='id _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleSided:'>
<arg declared_type64='BOOL' index='0' name='doubleSided' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsArea:'>
<arg declared_type64='BOOL' index='0' name='drawsArea' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setForcesBackFaceCasters:'>
<arg declared_type64='BOOL' index='0' name='forcesBackFaceCasters' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIESProfileURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='IESProfileURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntensity:'>
<arg declared_type64='CGFloat' index='0' name='intensity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumShadowDistance:'>
<arg declared_type64='CGFloat' index='0' name='maximumShadowDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrthographicScale:'>
<arg declared_type64='CGFloat' index='0' name='orthographicScale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParallaxCenterOffset:'>
<arg declared_type64='simd_float3' index='0' name='parallaxCenterOffset' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParallaxCorrectionEnabled:'>
<arg declared_type64='BOOL' index='0' name='parallaxCorrectionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParallaxExtentsFactor:'>
<arg declared_type64='simd_float3' index='0' name='parallaxExtentsFactor' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProbeExtents:'>
<arg declared_type64='simd_float3' index='0' name='probeExtents' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProbeOffset:'>
<arg declared_type64='simd_float3' index='0' name='probeOffset' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProbeType:'>
<arg declared_type64='SCNLightProbeType' index='0' name='probeType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProbeUpdateType:'>
<arg declared_type64='SCNLightProbeUpdateType' index='0' name='probeUpdateType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSampleDistributedShadowMaps:'>
<arg declared_type64='BOOL' index='0' name='sampleDistributedShadowMaps' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowBias:'>
<arg declared_type64='CGFloat' index='0' name='shadowBias' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowCascadeCount:'>
<arg declared_type64='NSUInteger' index='0' name='shadowCascadeCount' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowCascadeSplittingFactor:'>
<arg declared_type64='CGFloat' index='0' name='shadowCascadeSplittingFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type64='id _Nonnull' index='0' name='shadowColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowMapSize:'>
<arg declared_type64='CGSize' index='0' name='shadowMapSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowMode:'>
<arg declared_type64='SCNShadowMode' index='0' name='shadowMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowRadius:'>
<arg declared_type64='CGFloat' index='0' name='shadowRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowSampleCount:'>
<arg declared_type64='NSUInteger' index='0' name='shadowSampleCount' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpotInnerAngle:'>
<arg declared_type64='CGFloat' index='0' name='spotInnerAngle' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpotOuterAngle:'>
<arg declared_type64='CGFloat' index='0' name='spotOuterAngle' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTemperature:'>
<arg declared_type64='CGFloat' index='0' name='temperature' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setType:'>
<arg declared_type64='SCNLightType _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZFar:'>
<arg declared_type64='CGFloat' index='0' name='zFar' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZNear:'>
<arg declared_type64='CGFloat' index='0' name='zNear' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shadowBias'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='shadowCascadeCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='shadowCascadeSplittingFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='shadowColor'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='shadowMapSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='shadowMode'>
<retval declared_type64='SCNShadowMode' type64='q'/>
</method>
<method selector='shadowRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='shadowSampleCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='sphericalHarmonicsCoefficients'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='spotInnerAngle'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='spotOuterAngle'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='temperature'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='type'>
<retval declared_type64='SCNLightType _Nonnull' type64='@'/>
</method>
<method selector='zFar'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='zNear'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='SCNLookAtConstraint'>
<method selector='gimbalLockEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='localFront'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method class_method='true' selector='lookAtConstraintWithTarget:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setGimbalLockEnabled:'>
<arg declared_type64='BOOL' index='0' name='gimbalLockEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocalFront:'>
<arg declared_type64='SCNVector3' index='0' name='localFront' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTargetOffset:'>
<arg declared_type64='SCNVector3' index='0' name='targetOffset' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWorldUp:'>
<arg declared_type64='SCNVector3' index='0' name='worldUp' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
<method selector='targetOffset'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='worldUp'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNMaterial'>
<method selector='ambient'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='ambientOcclusion'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='blendMode'>
<retval declared_type64='SCNBlendMode' type64='q'/>
</method>
<method selector='clearCoat'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='clearCoatNormal'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='clearCoatRoughness'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='colorBufferWriteMask'>
<retval declared_type64='SCNColorMask' type64='q'/>
</method>
<method selector='cullMode'>
<retval declared_type64='SCNCullMode' type64='q'/>
</method>
<method selector='diffuse'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='displacement'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='emission'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='fillMode'>
<retval declared_type64='SCNFillMode' type64='Q'/>
</method>
<method selector='fresnelExponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='isDoubleSided'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLitPerPixel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lightingModelName'>
<retval declared_type64='SCNLightingModel _Nonnull' type64='@'/>
</method>
<method selector='locksAmbientWithDiffuse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='material'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='materialWithMDLMaterial:'>
<arg declared_type64='MDLMaterial * _Nonnull' index='0' name='mdlMaterial' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='metalness'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='multiply'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='normal'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='readsFromDepthBuffer'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='reflective'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='roughness'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='selfIllumination'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='setBlendMode:'>
<arg declared_type64='SCNBlendMode' index='0' name='blendMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColorBufferWriteMask:'>
<arg declared_type64='SCNColorMask' index='0' name='colorBufferWriteMask' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCullMode:'>
<arg declared_type64='SCNCullMode' index='0' name='cullMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleSided:'>
<arg declared_type64='BOOL' index='0' name='doubleSided' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFillMode:'>
<arg declared_type64='SCNFillMode' index='0' name='fillMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFresnelExponent:'>
<arg declared_type64='CGFloat' index='0' name='fresnelExponent' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLightingModelName:'>
<arg declared_type64='SCNLightingModel _Nonnull' index='0' name='lightingModelName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLitPerPixel:'>
<arg declared_type64='BOOL' index='0' name='litPerPixel' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocksAmbientWithDiffuse:'>
<arg declared_type64='BOOL' index='0' name='locksAmbientWithDiffuse' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReadsFromDepthBuffer:'>
<arg declared_type64='BOOL' index='0' name='readsFromDepthBuffer' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShininess:'>
<arg declared_type64='CGFloat' index='0' name='shininess' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransparency:'>
<arg declared_type64='CGFloat' index='0' name='transparency' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransparencyMode:'>
<arg declared_type64='SCNTransparencyMode' index='0' name='transparencyMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWritesToDepthBuffer:'>
<arg declared_type64='BOOL' index='0' name='writesToDepthBuffer' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shininess'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='specular'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='transparency'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='transparencyMode'>
<retval declared_type64='SCNTransparencyMode' type64='q'/>
</method>
<method selector='transparent'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='writesToDepthBuffer'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='SCNMaterialProperty'>
<method selector='contents'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='contentsTransform'>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='intensity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='magnificationFilter'>
<retval declared_type64='SCNFilterMode' type64='q'/>
</method>
<method selector='mappingChannel'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='materialPropertyWithContents:'>
<arg declared_type64='id _Nonnull' index='0' name='contents' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maxAnisotropy'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minificationFilter'>
<retval declared_type64='SCNFilterMode' type64='q'/>
</method>
<method selector='mipFilter'>
<retval declared_type64='SCNFilterMode' type64='q'/>
</method>
<method selector='setContents:'>
<arg declared_type64='id _Nullable' index='0' name='contents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentsTransform:'>
<arg declared_type64='SCNMatrix4' index='0' name='contentsTransform' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntensity:'>
<arg declared_type64='CGFloat' index='0' name='intensity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMagnificationFilter:'>
<arg declared_type64='SCNFilterMode' index='0' name='magnificationFilter' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMappingChannel:'>
<arg declared_type64='NSInteger' index='0' name='mappingChannel' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxAnisotropy:'>
<arg declared_type64='CGFloat' index='0' name='maxAnisotropy' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinificationFilter:'>
<arg declared_type64='SCNFilterMode' index='0' name='minificationFilter' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMipFilter:'>
<arg declared_type64='SCNFilterMode' index='0' name='mipFilter' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextureComponents:'>
<arg declared_type64='SCNColorMask' index='0' name='textureComponents' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWrapS:'>
<arg declared_type64='SCNWrapMode' index='0' name='wrapS' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWrapT:'>
<arg declared_type64='SCNWrapMode' index='0' name='wrapT' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textureComponents'>
<retval declared_type64='SCNColorMask' type64='q'/>
</method>
<method selector='wrapS'>
<retval declared_type64='SCNWrapMode' type64='q'/>
</method>
<method selector='wrapT'>
<retval declared_type64='SCNWrapMode' type64='q'/>
</method>
</class>
<class name='SCNMorpher'>
<method selector='calculationMode'>
<retval declared_type64='SCNMorpherCalculationMode' type64='q'/>
</method>
<method selector='setCalculationMode:'>
<arg declared_type64='SCNMorpherCalculationMode' index='0' name='calculationMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTargets:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='targets' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUnifiesNormals:'>
<arg declared_type64='BOOL' index='0' name='unifiesNormals' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWeight:forTargetAtIndex:'>
<arg declared_type64='CGFloat' index='0' name='weight' type64='d'/>
<arg declared_type64='NSUInteger' index='1' name='targetIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWeight:forTargetNamed:'>
<arg declared_type64='CGFloat' index='0' name='weight' type64='d'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='targetName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWeights:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='weights' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='targets'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='unifiesNormals'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='weightForTargetAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='targetIndex' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='weightForTargetNamed:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='targetName' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='weights'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNNode'>
<method selector='addAudioPlayer:'>
<arg declared_type64='SCNAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addChildNode:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='child' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addParticleSystem:'>
<arg declared_type64='SCNParticleSystem * _Nonnull' index='0' name='system' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='camera'>
<retval declared_type64='SCNCamera * _Nullable' type64='@'/>
</method>
<method selector='castsShadow'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='categoryBitMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='childNodeWithName:recursively:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='BOOL' index='1' name='recursively' type64='B'/>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
<method selector='childNodes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='childNodesPassingTest:'>
<arg declared_type64='BOOL (^ _Nonnull)(SCNNode * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='0' name='predicate' type64='@?'>
<arg declared_type64='SCNNode * _Nonnull' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='clone'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='constraints'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='convertPosition:fromNode:'>
<arg declared_type64='SCNVector3' index='0' name='position' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='convertPosition:toNode:'>
<arg declared_type64='SCNVector3' index='0' name='position' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='convertTransform:fromNode:'>
<arg declared_type64='SCNMatrix4' index='0' name='transform' type64='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='convertTransform:toNode:'>
<arg declared_type64='SCNMatrix4' index='0' name='transform' type64='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='convertVector:fromNode:'>
<arg declared_type64='SCNVector3' index='0' name='vector' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='convertVector:toNode:'>
<arg declared_type64='SCNVector3' index='0' name='vector' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='enumerateChildNodesUsingBlock:'>
<arg declared_type64='void (^ _Nonnull)(SCNNode * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='0' name='block' type64='@?'>
<arg declared_type64='SCNNode * _Nonnull' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enumerateHierarchyUsingBlock:'>
<arg declared_type64='void (^ _Nonnull)(SCNNode * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='0' name='block' type64='@?'>
<arg declared_type64='SCNNode * _Nonnull' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='eulerAngles'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='filters'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='flattenedClone'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='focusBehavior'>
<retval declared_type64='SCNNodeFocusBehavior' type64='q'/>
</method>
<method selector='geometry'>
<retval declared_type64='SCNGeometry * _Nullable' type64='@'/>
</method>
<method selector='hitTestWithSegmentFromPoint:toPoint:options:'>
<arg declared_type64='SCNVector3' index='0' name='pointA' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' index='1' name='pointB' type64='{SCNVector3=fff}'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='insertChildNode:atIndex:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='child' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPaused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='light'>
<retval declared_type64='SCNLight * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='localFront'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method class_method='true' selector='localRight'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='localRotateBy:'>
<arg declared_type64='SCNQuaternion' index='0' name='rotation' type64='{SCNVector4=ffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='localTranslateBy:'>
<arg declared_type64='SCNVector3' index='0' name='translation' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='localUp'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='lookAt:'>
<arg declared_type64='SCNVector3' index='0' name='worldTarget' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lookAt:up:localFront:'>
<arg declared_type64='SCNVector3' index='0' name='worldTarget' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' index='1' name='worldUp' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' index='2' name='localFront' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='morpher'>
<retval declared_type64='SCNMorpher * _Nullable' type64='@'/>
</method>
<method selector='movabilityHint'>
<retval declared_type64='SCNMovabilityHint' type64='q'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='node'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='nodeWithGeometry:'>
<arg declared_type64='SCNGeometry * _Nullable' index='0' name='geometry' type64='@'/>
<retval declared_type64='SCNNode * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='nodeWithMDLObject:'>
<arg declared_type64='MDLObject * _Nonnull' index='0' name='mdlObject' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='opacity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='orientation'>
<retval declared_type64='SCNQuaternion' type64='{SCNVector4=ffff}'/>
</method>
<method selector='parentNode'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
<method selector='particleSystems'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='physicsBody'>
<retval declared_type64='SCNPhysicsBody * _Nullable' type64='@'/>
</method>
<method selector='physicsField'>
<retval declared_type64='SCNPhysicsField * _Nullable' type64='@'/>
</method>
<method selector='pivot'>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='position'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='presentationNode'>
<retval declared_type64='SCNNode * _Nonnull' type64='@'/>
</method>
<method selector='removeAllAudioPlayers'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAllParticleSystems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAudioPlayer:'>
<arg declared_type64='SCNAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeFromParentNode'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeParticleSystem:'>
<arg declared_type64='SCNParticleSystem * _Nonnull' index='0' name='system' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rendererDelegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='renderingOrder'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='replaceChildNode:with:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='oldChild' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' index='1' name='newChild' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rotateBy:aroundTarget:'>
<arg declared_type64='SCNQuaternion' index='0' name='worldRotation' type64='{SCNVector4=ffff}'/>
<arg declared_type64='SCNVector3' index='1' name='worldTarget' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rotation'>
<retval declared_type64='SCNVector4' type64='{SCNVector4=ffff}'/>
</method>
<method selector='scale'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='setCamera:'>
<arg declared_type64='SCNCamera * _Nullable' index='0' name='camera' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCastsShadow:'>
<arg declared_type64='BOOL' index='0' name='castsShadow' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type64='NSUInteger' index='0' name='categoryBitMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setConstraints:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='constraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEulerAngles:'>
<arg declared_type64='SCNVector3' index='0' name='eulerAngles' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFilters:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='filters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusBehavior:'>
<arg declared_type64='SCNNodeFocusBehavior' index='0' name='focusBehavior' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGeometry:'>
<arg declared_type64='SCNGeometry * _Nullable' index='0' name='geometry' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLight:'>
<arg declared_type64='SCNLight * _Nullable' index='0' name='light' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMorpher:'>
<arg declared_type64='SCNMorpher * _Nullable' index='0' name='morpher' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMovabilityHint:'>
<arg declared_type64='SCNMovabilityHint' index='0' name='movabilityHint' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type64='CGFloat' index='0' name='opacity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type64='SCNQuaternion' index='0' name='orientation' type64='{SCNVector4=ffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPaused:'>
<arg declared_type64='BOOL' index='0' name='paused' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPhysicsBody:'>
<arg declared_type64='SCNPhysicsBody * _Nullable' index='0' name='physicsBody' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPhysicsField:'>
<arg declared_type64='SCNPhysicsField * _Nullable' index='0' name='physicsField' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPivot:'>
<arg declared_type64='SCNMatrix4' index='0' name='pivot' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPosition:'>
<arg declared_type64='SCNVector3' index='0' name='position' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRendererDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='rendererDelegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderingOrder:'>
<arg declared_type64='NSInteger' index='0' name='renderingOrder' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRotation:'>
<arg declared_type64='SCNVector4' index='0' name='rotation' type64='{SCNVector4=ffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScale:'>
<arg declared_type64='SCNVector3' index='0' name='scale' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSimdEulerAngles:'>
<arg declared_type64='simd_float3' index='0' name='simdEulerAngles' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSimdOrientation:'>
<arg declared_type64='simd_quatf' index='0' name='simdOrientation' type64='{_simd_quatf=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSimdPivot:'>
<arg declared_type64='simd_float4x4' index='0' name='simdPivot' type64='{_simd_float4x4=[4]}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSimdPosition:'>
<arg declared_type64='simd_float3' index='0' name='simdPosition' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSimdRotation:'>
<arg declared_type64='simd_float4' index='0' name='simdRotation' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSimdScale:'>
<arg declared_type64='simd_float3' index='0' name='simdScale' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSimdTransform:'>
<arg declared_type64='simd_float4x4' index='0' name='simdTransform' type64='{_simd_float4x4=[4]}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSimdWorldOrientation:'>
<arg declared_type64='simd_quatf' index='0' name='simdWorldOrientation' type64='{_simd_quatf=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSimdWorldPosition:'>
<arg declared_type64='simd_float3' index='0' name='simdWorldPosition' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSimdWorldTransform:'>
<arg declared_type64='simd_float4x4' index='0' name='simdWorldTransform' type64='{_simd_float4x4=[4]}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSkinner:'>
<arg declared_type64='SCNSkinner * _Nullable' index='0' name='skinner' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type64='SCNMatrix4' index='0' name='transform' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWorldOrientation:'>
<arg declared_type64='SCNQuaternion' index='0' name='worldOrientation' type64='{SCNVector4=ffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWorldPosition:'>
<arg declared_type64='SCNVector3' index='0' name='worldPosition' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWorldTransform:'>
<arg declared_type64='SCNMatrix4' index='0' name='worldTransform' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='simdConvertPosition:fromNode:'>
<arg declared_type64='simd_float3' index='0' name='position' type64=''/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdConvertPosition:toNode:'>
<arg declared_type64='simd_float3' index='0' name='position' type64=''/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdConvertTransform:fromNode:'>
<arg declared_type64='simd_float4x4' index='0' name='transform' type64='{_simd_float4x4=[4]}'/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='simd_float4x4' type64='{_simd_float4x4=[4]}'/>
</method>
<method selector='simdConvertTransform:toNode:'>
<arg declared_type64='simd_float4x4' index='0' name='transform' type64='{_simd_float4x4=[4]}'/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='simd_float4x4' type64='{_simd_float4x4=[4]}'/>
</method>
<method selector='simdConvertVector:fromNode:'>
<arg declared_type64='simd_float3' index='0' name='vector' type64=''/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdConvertVector:toNode:'>
<arg declared_type64='simd_float3' index='0' name='vector' type64=''/>
<arg declared_type64='SCNNode * _Nullable' index='1' name='node' type64='@'/>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdEulerAngles'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method class_method='true' selector='simdLocalFront'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method class_method='true' selector='simdLocalRight'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdLocalRotateBy:'>
<arg declared_type64='simd_quatf' index='0' name='rotation' type64='{_simd_quatf=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='simdLocalTranslateBy:'>
<arg declared_type64='simd_float3' index='0' name='translation' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='simdLocalUp'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdLookAt:'>
<arg declared_type64='simd_float3' index='0' name='worldTarget' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='simdLookAt:up:localFront:'>
<arg declared_type64='simd_float3' index='0' name='worldTarget' type64=''/>
<arg declared_type64='simd_float3' index='1' name='worldUp' type64=''/>
<arg declared_type64='simd_float3' index='2' name='localFront' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='simdOrientation'>
<retval declared_type64='simd_quatf' type64='{_simd_quatf=}'/>
</method>
<method selector='simdPivot'>
<retval declared_type64='simd_float4x4' type64='{_simd_float4x4=[4]}'/>
</method>
<method selector='simdPosition'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdRotateBy:aroundTarget:'>
<arg declared_type64='simd_quatf' index='0' name='worldRotation' type64='{_simd_quatf=}'/>
<arg declared_type64='simd_float3' index='1' name='worldTarget' type64=''/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='simdRotation'>
<retval declared_type64='simd_float4' type64=''/>
</method>
<method selector='simdScale'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdTransform'>
<retval declared_type64='simd_float4x4' type64='{_simd_float4x4=[4]}'/>
</method>
<method selector='simdWorldFront'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdWorldOrientation'>
<retval declared_type64='simd_quatf' type64='{_simd_quatf=}'/>
</method>
<method selector='simdWorldPosition'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdWorldRight'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='simdWorldTransform'>
<retval declared_type64='simd_float4x4' type64='{_simd_float4x4=[4]}'/>
</method>
<method selector='simdWorldUp'>
<retval declared_type64='simd_float3' type64=''/>
</method>
<method selector='skinner'>
<retval declared_type64='SCNSkinner * _Nullable' type64='@'/>
</method>
<method selector='transform'>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='worldFront'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='worldOrientation'>
<retval declared_type64='SCNQuaternion' type64='{SCNVector4=ffff}'/>
</method>
<method selector='worldPosition'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='worldRight'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='worldTransform'>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='worldUp'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNParticlePropertyController'>
<method selector='animation'>
<retval declared_type64='CAAnimation * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='controllerWithAnimation:'>
<arg declared_type64='CAAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputBias'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='inputMode'>
<retval declared_type64='SCNParticleInputMode' type64='q'/>
</method>
<method selector='inputOrigin'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
<method selector='inputProperty'>
<retval declared_type64='SCNParticleProperty _Nullable' type64='@'/>
</method>
<method selector='inputScale'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAnimation:'>
<arg declared_type64='CAAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputBias:'>
<arg declared_type64='CGFloat' index='0' name='inputBias' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputMode:'>
<arg declared_type64='SCNParticleInputMode' index='0' name='inputMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputOrigin:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='inputOrigin' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputProperty:'>
<arg declared_type64='SCNParticleProperty _Nullable' index='0' name='inputProperty' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInputScale:'>
<arg declared_type64='CGFloat' index='0' name='inputScale' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNParticleSystem'>
<method selector='acceleration'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='addModifierForProperties:atStage:withBlock:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='properties' type64='@'/>
<arg declared_type64='SCNParticleModifierStage' index='1' name='stage' type64='q'/>
<arg declared_type64='SCNParticleModifierBlock _Nonnull' function_pointer='true' index='2' name='block' type64='@?'>
<arg declared_type64='void * _Nonnull * _Nonnull' type64='^^v'/>
<arg declared_type64='size_t * _Nonnull' type64='^Q'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='float' type64='f'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='affectedByGravity'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='affectedByPhysicsFields'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='birthDirection'>
<retval declared_type64='SCNParticleBirthDirection' type64='q'/>
</method>
<method selector='birthLocation'>
<retval declared_type64='SCNParticleBirthLocation' type64='q'/>
</method>
<method selector='birthRate'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='birthRateVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='blendMode'>
<retval declared_type64='SCNParticleBlendMode' type64='q'/>
</method>
<method selector='colliderNodes'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='dampingFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='emissionDuration'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='emissionDurationVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='emitterShape'>
<retval declared_type64='SCNGeometry * _Nullable' type64='@'/>
</method>
<method selector='emittingDirection'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='fresnelExponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='handleEvent:forProperties:withBlock:'>
<arg declared_type64='SCNParticleEvent' index='0' name='event' type64='q'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='properties' type64='@'/>
<arg declared_type64='SCNParticleEventBlock _Nonnull' function_pointer='true' index='2' name='block' type64='@?'>
<arg declared_type64='void * _Nonnull * _Nonnull' type64='^^v'/>
<arg declared_type64='size_t * _Nonnull' type64='^Q'/>
<arg declared_type64='uint32_t * _Nullable' type64='^I'/>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='idleDuration'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='idleDurationVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='imageSequenceAnimationMode'>
<retval declared_type64='SCNParticleImageSequenceAnimationMode' type64='q'/>
</method>
<method selector='imageSequenceColumnCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='imageSequenceFrameRate'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='imageSequenceFrameRateVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='imageSequenceInitialFrame'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='imageSequenceInitialFrameVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='imageSequenceRowCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='isBlackPassEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLightingEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLocal'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loops'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='orientationDirection'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='orientationMode'>
<retval declared_type64='SCNParticleOrientationMode' type64='q'/>
</method>
<method selector='particleAngle'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleAngleVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleAngularVelocity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleAngularVelocityVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleBounce'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleBounceVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleCharge'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleChargeVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleColor'>
<retval declared_type64='UIColor * _Nonnull' type64='@'/>
</method>
<method selector='particleColorVariation'>
<retval declared_type64='SCNVector4' type64='{SCNVector4=ffff}'/>
</method>
<method selector='particleDiesOnCollision'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='particleFriction'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleFrictionVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleImage'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='particleIntensity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleIntensityVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleLifeSpan'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleLifeSpanVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleMass'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleMassVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleSizeVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='particleSystem'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='particleSystemNamed:inDirectory:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='directory' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='particleVelocity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='particleVelocityVariation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='propertyControllers'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='removeAllModifiers'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeModifiersOfStage:'>
<arg declared_type64='SCNParticleModifierStage' index='0' name='stage' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAcceleration:'>
<arg declared_type64='SCNVector3' index='0' name='acceleration' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAffectedByGravity:'>
<arg declared_type64='BOOL' index='0' name='affectedByGravity' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAffectedByPhysicsFields:'>
<arg declared_type64='BOOL' index='0' name='affectedByPhysicsFields' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBirthDirection:'>
<arg declared_type64='SCNParticleBirthDirection' index='0' name='birthDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBirthLocation:'>
<arg declared_type64='SCNParticleBirthLocation' index='0' name='birthLocation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBirthRate:'>
<arg declared_type64='CGFloat' index='0' name='birthRate' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBirthRateVariation:'>
<arg declared_type64='CGFloat' index='0' name='birthRateVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBlackPassEnabled:'>
<arg declared_type64='BOOL' index='0' name='blackPassEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBlendMode:'>
<arg declared_type64='SCNParticleBlendMode' index='0' name='blendMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColliderNodes:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='colliderNodes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDampingFactor:'>
<arg declared_type64='CGFloat' index='0' name='dampingFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmissionDuration:'>
<arg declared_type64='CGFloat' index='0' name='emissionDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmissionDurationVariation:'>
<arg declared_type64='CGFloat' index='0' name='emissionDurationVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmitterShape:'>
<arg declared_type64='SCNGeometry * _Nullable' index='0' name='emitterShape' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmittingDirection:'>
<arg declared_type64='SCNVector3' index='0' name='emittingDirection' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFresnelExponent:'>
<arg declared_type64='CGFloat' index='0' name='fresnelExponent' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIdleDuration:'>
<arg declared_type64='CGFloat' index='0' name='idleDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIdleDurationVariation:'>
<arg declared_type64='CGFloat' index='0' name='idleDurationVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageSequenceAnimationMode:'>
<arg declared_type64='SCNParticleImageSequenceAnimationMode' index='0' name='imageSequenceAnimationMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageSequenceColumnCount:'>
<arg declared_type64='NSUInteger' index='0' name='imageSequenceColumnCount' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageSequenceFrameRate:'>
<arg declared_type64='CGFloat' index='0' name='imageSequenceFrameRate' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageSequenceFrameRateVariation:'>
<arg declared_type64='CGFloat' index='0' name='imageSequenceFrameRateVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageSequenceInitialFrame:'>
<arg declared_type64='CGFloat' index='0' name='imageSequenceInitialFrame' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageSequenceInitialFrameVariation:'>
<arg declared_type64='CGFloat' index='0' name='imageSequenceInitialFrameVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageSequenceRowCount:'>
<arg declared_type64='NSUInteger' index='0' name='imageSequenceRowCount' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLightingEnabled:'>
<arg declared_type64='BOOL' index='0' name='lightingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocal:'>
<arg declared_type64='BOOL' index='0' name='local' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLoops:'>
<arg declared_type64='BOOL' index='0' name='loops' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrientationDirection:'>
<arg declared_type64='SCNVector3' index='0' name='orientationDirection' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrientationMode:'>
<arg declared_type64='SCNParticleOrientationMode' index='0' name='orientationMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleAngle:'>
<arg declared_type64='CGFloat' index='0' name='particleAngle' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleAngleVariation:'>
<arg declared_type64='CGFloat' index='0' name='particleAngleVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleAngularVelocity:'>
<arg declared_type64='CGFloat' index='0' name='particleAngularVelocity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleAngularVelocityVariation:'>
<arg declared_type64='CGFloat' index='0' name='particleAngularVelocityVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleBounce:'>
<arg declared_type64='CGFloat' index='0' name='particleBounce' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleBounceVariation:'>
<arg declared_type64='CGFloat' index='0' name='particleBounceVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleCharge:'>
<arg declared_type64='CGFloat' index='0' name='particleCharge' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleChargeVariation:'>
<arg declared_type64='CGFloat' index='0' name='particleChargeVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleColor:'>
<arg declared_type64='UIColor * _Nonnull' index='0' name='particleColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleColorVariation:'>
<arg declared_type64='SCNVector4' index='0' name='particleColorVariation' type64='{SCNVector4=ffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleDiesOnCollision:'>
<arg declared_type64='BOOL' index='0' name='particleDiesOnCollision' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleFriction:'>
<arg declared_type64='CGFloat' index='0' name='particleFriction' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleFrictionVariation:'>
<arg declared_type64='CGFloat' index='0' name='particleFrictionVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleImage:'>
<arg declared_type64='id _Nullable' index='0' name='particleImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleIntensity:'>
<arg declared_type64='CGFloat' index='0' name='particleIntensity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleIntensityVariation:'>
<arg declared_type64='CGFloat' index='0' name='particleIntensityVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleLifeSpan:'>
<arg declared_type64='CGFloat' index='0' name='particleLifeSpan' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleLifeSpanVariation:'>
<arg declared_type64='CGFloat' index='0' name='particleLifeSpanVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleMass:'>
<arg declared_type64='CGFloat' index='0' name='particleMass' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleMassVariation:'>
<arg declared_type64='CGFloat' index='0' name='particleMassVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleSize:'>
<arg declared_type64='CGFloat' index='0' name='particleSize' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleSizeVariation:'>
<arg declared_type64='CGFloat' index='0' name='particleSizeVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleVelocity:'>
<arg declared_type64='CGFloat' index='0' name='particleVelocity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParticleVelocityVariation:'>
<arg declared_type64='CGFloat' index='0' name='particleVelocityVariation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPropertyControllers:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='propertyControllers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSortingMode:'>
<arg declared_type64='SCNParticleSortingMode' index='0' name='sortingMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpeedFactor:'>
<arg declared_type64='CGFloat' index='0' name='speedFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpreadingAngle:'>
<arg declared_type64='CGFloat' index='0' name='spreadingAngle' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStretchFactor:'>
<arg declared_type64='CGFloat' index='0' name='stretchFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSystemSpawnedOnCollision:'>
<arg declared_type64='SCNParticleSystem * _Nullable' index='0' name='systemSpawnedOnCollision' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSystemSpawnedOnDying:'>
<arg declared_type64='SCNParticleSystem * _Nullable' index='0' name='systemSpawnedOnDying' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSystemSpawnedOnLiving:'>
<arg declared_type64='SCNParticleSystem * _Nullable' index='0' name='systemSpawnedOnLiving' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWarmupDuration:'>
<arg declared_type64='CGFloat' index='0' name='warmupDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sortingMode'>
<retval declared_type64='SCNParticleSortingMode' type64='q'/>
</method>
<method selector='speedFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='spreadingAngle'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='stretchFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='systemSpawnedOnCollision'>
<retval declared_type64='SCNParticleSystem * _Nullable' type64='@'/>
</method>
<method selector='systemSpawnedOnDying'>
<retval declared_type64='SCNParticleSystem * _Nullable' type64='@'/>
</method>
<method selector='systemSpawnedOnLiving'>
<retval declared_type64='SCNParticleSystem * _Nullable' type64='@'/>
</method>
<method selector='warmupDuration'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='SCNPhysicsBallSocketJoint'>
<method selector='anchorA'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='anchorB'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='bodyA'>
<retval declared_type64='SCNPhysicsBody * _Nonnull' type64='@'/>
</method>
<method selector='bodyB'>
<retval declared_type64='SCNPhysicsBody * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='jointWithBody:anchor:'>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='0' name='body' type64='@'/>
<arg declared_type64='SCNVector3' index='1' name='anchor' type64='{SCNVector3=fff}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='jointWithBodyA:anchorA:bodyB:anchorB:'>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='0' name='bodyA' type64='@'/>
<arg declared_type64='SCNVector3' index='1' name='anchorA' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='2' name='bodyB' type64='@'/>
<arg declared_type64='SCNVector3' index='3' name='anchorB' type64='{SCNVector3=fff}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAnchorA:'>
<arg declared_type64='SCNVector3' index='0' name='anchorA' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnchorB:'>
<arg declared_type64='SCNVector3' index='0' name='anchorB' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNPhysicsBody'>
<method selector='allowsResting'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='angularDamping'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='angularRestingThreshold'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='angularVelocity'>
<retval declared_type64='SCNVector4' type64='{SCNVector4=ffff}'/>
</method>
<method selector='angularVelocityFactor'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='applyForce:atPosition:impulse:'>
<arg declared_type64='SCNVector3' index='0' name='direction' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' index='1' name='position' type64='{SCNVector3=fff}'/>
<arg declared_type64='BOOL' index='2' name='impulse' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applyForce:impulse:'>
<arg declared_type64='SCNVector3' index='0' name='direction' type64='{SCNVector3=fff}'/>
<arg declared_type64='BOOL' index='1' name='impulse' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applyTorque:impulse:'>
<arg declared_type64='SCNVector4' index='0' name='torque' type64='{SCNVector4=ffff}'/>
<arg declared_type64='BOOL' index='1' name='impulse' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='bodyWithType:shape:'>
<arg declared_type64='SCNPhysicsBodyType' index='0' name='type' type64='q'/>
<arg declared_type64='SCNPhysicsShape * _Nullable' index='1' name='shape' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='categoryBitMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='centerOfMassOffset'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='charge'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='clearAllForces'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collisionBitMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='contactTestBitMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='continuousCollisionDetectionThreshold'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='damping'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='dynamicBody'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='friction'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='isAffectedByGravity'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isResting'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='kinematicBody'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='linearRestingThreshold'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='mass'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='momentOfInertia'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='physicsShape'>
<retval declared_type64='SCNPhysicsShape * _Nullable' type64='@'/>
</method>
<method selector='resetTransform'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='restitution'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='rollingFriction'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAffectedByGravity:'>
<arg declared_type64='BOOL' index='0' name='affectedByGravity' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsResting:'>
<arg declared_type64='BOOL' index='0' name='allowsResting' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAngularDamping:'>
<arg declared_type64='CGFloat' index='0' name='angularDamping' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAngularRestingThreshold:'>
<arg declared_type64='CGFloat' index='0' name='angularRestingThreshold' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAngularVelocity:'>
<arg declared_type64='SCNVector4' index='0' name='angularVelocity' type64='{SCNVector4=ffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAngularVelocityFactor:'>
<arg declared_type64='SCNVector3' index='0' name='angularVelocityFactor' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type64='NSUInteger' index='0' name='categoryBitMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCenterOfMassOffset:'>
<arg declared_type64='SCNVector3' index='0' name='centerOfMassOffset' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCharge:'>
<arg declared_type64='CGFloat' index='0' name='charge' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollisionBitMask:'>
<arg declared_type64='NSUInteger' index='0' name='collisionBitMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContactTestBitMask:'>
<arg declared_type64='NSUInteger' index='0' name='contactTestBitMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContinuousCollisionDetectionThreshold:'>
<arg declared_type64='CGFloat' index='0' name='continuousCollisionDetectionThreshold' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDamping:'>
<arg declared_type64='CGFloat' index='0' name='damping' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFriction:'>
<arg declared_type64='CGFloat' index='0' name='friction' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLinearRestingThreshold:'>
<arg declared_type64='CGFloat' index='0' name='linearRestingThreshold' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMass:'>
<arg declared_type64='CGFloat' index='0' name='mass' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMomentOfInertia:'>
<arg declared_type64='SCNVector3' index='0' name='momentOfInertia' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPhysicsShape:'>
<arg declared_type64='SCNPhysicsShape * _Nullable' index='0' name='physicsShape' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setResting:'>
<arg declared_type64='BOOL' index='0' name='resting' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRestitution:'>
<arg declared_type64='CGFloat' index='0' name='restitution' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRollingFriction:'>
<arg declared_type64='CGFloat' index='0' name='rollingFriction' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setType:'>
<arg declared_type64='SCNPhysicsBodyType' index='0' name='type' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesDefaultMomentOfInertia:'>
<arg declared_type64='BOOL' index='0' name='usesDefaultMomentOfInertia' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVelocity:'>
<arg declared_type64='SCNVector3' index='0' name='velocity' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVelocityFactor:'>
<arg declared_type64='SCNVector3' index='0' name='velocityFactor' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='staticBody'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='SCNPhysicsBodyType' type64='q'/>
</method>
<method selector='usesDefaultMomentOfInertia'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='velocity'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='velocityFactor'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNPhysicsConeTwistJoint'>
<method selector='bodyA'>
<retval declared_type64='SCNPhysicsBody * _Nonnull' type64='@'/>
</method>
<method selector='bodyB'>
<retval declared_type64='SCNPhysicsBody * _Nullable' type64='@'/>
</method>
<method selector='frameA'>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='frameB'>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method class_method='true' selector='jointWithBody:frame:'>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='0' name='body' type64='@'/>
<arg declared_type64='SCNMatrix4' index='1' name='frame' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='jointWithBodyA:frameA:bodyB:frameB:'>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='0' name='bodyA' type64='@'/>
<arg declared_type64='SCNMatrix4' index='1' name='frameA' type64='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='2' name='bodyB' type64='@'/>
<arg declared_type64='SCNMatrix4' index='3' name='frameB' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maximumAngularLimit1'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumAngularLimit2'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumTwistAngle'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setFrameA:'>
<arg declared_type64='SCNMatrix4' index='0' name='frameA' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameB:'>
<arg declared_type64='SCNMatrix4' index='0' name='frameB' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumAngularLimit1:'>
<arg declared_type64='CGFloat' index='0' name='maximumAngularLimit1' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumAngularLimit2:'>
<arg declared_type64='CGFloat' index='0' name='maximumAngularLimit2' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumTwistAngle:'>
<arg declared_type64='CGFloat' index='0' name='maximumTwistAngle' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNPhysicsContact'>
<method selector='collisionImpulse'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='contactNormal'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='contactPoint'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='nodeA'>
<retval declared_type64='SCNNode * _Nonnull' type64='@'/>
</method>
<method selector='nodeB'>
<retval declared_type64='SCNNode * _Nonnull' type64='@'/>
</method>
<method selector='penetrationDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='sweepTestFraction'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='SCNPhysicsField'>
<method selector='categoryBitMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method class_method='true' selector='customFieldWithEvaluationBlock:'>
<arg declared_type64='SCNFieldForceEvaluator _Nonnull' function_pointer='true' index='0' name='block' type64='@?'>
<arg declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
<arg declared_type64='float' type64='f'/>
<arg declared_type64='float' type64='f'/>
<arg declared_type64='NSTimeInterval' type64='d'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</arg>
<retval declared_type64='SCNPhysicsField * _Nonnull' type64='@'/>
</method>
<method selector='direction'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method class_method='true' selector='dragField'>
<retval declared_type64='SCNPhysicsField * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='electricField'>
<retval declared_type64='SCNPhysicsField * _Nonnull' type64='@'/>
</method>
<method selector='falloffExponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='halfExtent'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='isActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExclusive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='linearGravityField'>
<retval declared_type64='SCNPhysicsField * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='magneticField'>
<retval declared_type64='SCNPhysicsField * _Nonnull' type64='@'/>
</method>
<method selector='minimumDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='noiseFieldWithSmoothness:animationSpeed:'>
<arg declared_type64='CGFloat' index='0' name='smoothness' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='speed' type64='d'/>
<retval declared_type64='SCNPhysicsField * _Nonnull' type64='@'/>
</method>
<method selector='offset'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method class_method='true' selector='radialGravityField'>
<retval declared_type64='SCNPhysicsField * _Nonnull' type64='@'/>
</method>
<method selector='scope'>
<retval declared_type64='SCNPhysicsFieldScope' type64='q'/>
</method>
<method selector='setActive:'>
<arg declared_type64='BOOL' index='0' name='active' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type64='NSUInteger' index='0' name='categoryBitMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDirection:'>
<arg declared_type64='SCNVector3' index='0' name='direction' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExclusive:'>
<arg declared_type64='BOOL' index='0' name='exclusive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFalloffExponent:'>
<arg declared_type64='CGFloat' index='0' name='falloffExponent' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHalfExtent:'>
<arg declared_type64='SCNVector3' index='0' name='halfExtent' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumDistance:'>
<arg declared_type64='CGFloat' index='0' name='minimumDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOffset:'>
<arg declared_type64='SCNVector3' index='0' name='offset' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScope:'>
<arg declared_type64='SCNPhysicsFieldScope' index='0' name='scope' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStrength:'>
<arg declared_type64='CGFloat' index='0' name='strength' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesEllipsoidalExtent:'>
<arg declared_type64='BOOL' index='0' name='usesEllipsoidalExtent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='springField'>
<retval declared_type64='SCNPhysicsField * _Nonnull' type64='@'/>
</method>
<method selector='strength'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='turbulenceFieldWithSmoothness:animationSpeed:'>
<arg declared_type64='CGFloat' index='0' name='smoothness' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='speed' type64='d'/>
<retval declared_type64='SCNPhysicsField * _Nonnull' type64='@'/>
</method>
<method selector='usesEllipsoidalExtent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='vortexField'>
<retval declared_type64='SCNPhysicsField * _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNPhysicsHingeJoint'>
<method selector='anchorA'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='anchorB'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='axisA'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='axisB'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='bodyA'>
<retval declared_type64='SCNPhysicsBody * _Nonnull' type64='@'/>
</method>
<method selector='bodyB'>
<retval declared_type64='SCNPhysicsBody * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='jointWithBody:axis:anchor:'>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='0' name='body' type64='@'/>
<arg declared_type64='SCNVector3' index='1' name='axis' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' index='2' name='anchor' type64='{SCNVector3=fff}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='jointWithBodyA:axisA:anchorA:bodyB:axisB:anchorB:'>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='0' name='bodyA' type64='@'/>
<arg declared_type64='SCNVector3' index='1' name='axisA' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' index='2' name='anchorA' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='3' name='bodyB' type64='@'/>
<arg declared_type64='SCNVector3' index='4' name='axisB' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' index='5' name='anchorB' type64='{SCNVector3=fff}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAnchorA:'>
<arg declared_type64='SCNVector3' index='0' name='anchorA' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnchorB:'>
<arg declared_type64='SCNVector3' index='0' name='anchorB' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAxisA:'>
<arg declared_type64='SCNVector3' index='0' name='axisA' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAxisB:'>
<arg declared_type64='SCNVector3' index='0' name='axisB' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNPhysicsShape'>
<method selector='options'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='shapeWithGeometry:options:'>
<arg declared_type64='SCNGeometry * _Nonnull' index='0' name='geometry' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='shapeWithNode:options:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='shapeWithShapes:transforms:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='shapes' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='transforms' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='sourceObject'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='transforms'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='SCNPhysicsSliderJoint'>
<method selector='anchorA'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='anchorB'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='axisA'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='axisB'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='bodyA'>
<retval declared_type64='SCNPhysicsBody * _Nonnull' type64='@'/>
</method>
<method selector='bodyB'>
<retval declared_type64='SCNPhysicsBody * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='jointWithBody:axis:anchor:'>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='0' name='body' type64='@'/>
<arg declared_type64='SCNVector3' index='1' name='axis' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' index='2' name='anchor' type64='{SCNVector3=fff}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='jointWithBodyA:axisA:anchorA:bodyB:axisB:anchorB:'>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='0' name='bodyA' type64='@'/>
<arg declared_type64='SCNVector3' index='1' name='axisA' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' index='2' name='anchorA' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='3' name='bodyB' type64='@'/>
<arg declared_type64='SCNVector3' index='4' name='axisB' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' index='5' name='anchorB' type64='{SCNVector3=fff}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maximumAngularLimit'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumLinearLimit'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumAngularLimit'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumLinearLimit'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='motorMaximumForce'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='motorMaximumTorque'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='motorTargetAngularVelocity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='motorTargetLinearVelocity'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAnchorA:'>
<arg declared_type64='SCNVector3' index='0' name='anchorA' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnchorB:'>
<arg declared_type64='SCNVector3' index='0' name='anchorB' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAxisA:'>
<arg declared_type64='SCNVector3' index='0' name='axisA' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAxisB:'>
<arg declared_type64='SCNVector3' index='0' name='axisB' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumAngularLimit:'>
<arg declared_type64='CGFloat' index='0' name='maximumAngularLimit' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumLinearLimit:'>
<arg declared_type64='CGFloat' index='0' name='maximumLinearLimit' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumAngularLimit:'>
<arg declared_type64='CGFloat' index='0' name='minimumAngularLimit' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumLinearLimit:'>
<arg declared_type64='CGFloat' index='0' name='minimumLinearLimit' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMotorMaximumForce:'>
<arg declared_type64='CGFloat' index='0' name='motorMaximumForce' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMotorMaximumTorque:'>
<arg declared_type64='CGFloat' index='0' name='motorMaximumTorque' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMotorTargetAngularVelocity:'>
<arg declared_type64='CGFloat' index='0' name='motorTargetAngularVelocity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMotorTargetLinearVelocity:'>
<arg declared_type64='CGFloat' index='0' name='motorTargetLinearVelocity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNPhysicsVehicle'>
<method selector='applyBrakingForce:forWheelAtIndex:'>
<arg declared_type64='CGFloat' index='0' name='value' type64='d'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applyEngineForce:forWheelAtIndex:'>
<arg declared_type64='CGFloat' index='0' name='value' type64='d'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='chassisBody'>
<retval declared_type64='SCNPhysicsBody * _Nonnull' type64='@'/>
</method>
<method selector='setSteeringAngle:forWheelAtIndex:'>
<arg declared_type64='CGFloat' index='0' name='value' type64='d'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speedInKilometersPerHour'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='vehicleWithChassisBody:wheels:'>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='0' name='chassisBody' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='wheels' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='wheels'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNPhysicsVehicleWheel'>
<method selector='axle'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='connectionPosition'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='frictionSlip'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumSuspensionForce'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumSuspensionTravel'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='node'>
<retval declared_type64='SCNNode * _Nonnull' type64='@'/>
</method>
<method selector='radius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAxle:'>
<arg declared_type64='SCNVector3' index='0' name='axle' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setConnectionPosition:'>
<arg declared_type64='SCNVector3' index='0' name='connectionPosition' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrictionSlip:'>
<arg declared_type64='CGFloat' index='0' name='frictionSlip' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumSuspensionForce:'>
<arg declared_type64='CGFloat' index='0' name='maximumSuspensionForce' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumSuspensionTravel:'>
<arg declared_type64='CGFloat' index='0' name='maximumSuspensionTravel' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type64='CGFloat' index='0' name='radius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSteeringAxis:'>
<arg declared_type64='SCNVector3' index='0' name='steeringAxis' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSuspensionCompression:'>
<arg declared_type64='CGFloat' index='0' name='suspensionCompression' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSuspensionDamping:'>
<arg declared_type64='CGFloat' index='0' name='suspensionDamping' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSuspensionRestLength:'>
<arg declared_type64='CGFloat' index='0' name='suspensionRestLength' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSuspensionStiffness:'>
<arg declared_type64='CGFloat' index='0' name='suspensionStiffness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='steeringAxis'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='suspensionCompression'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='suspensionDamping'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='suspensionRestLength'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='suspensionStiffness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='wheelWithNode:'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNPhysicsWorld'>
<method selector='addBehavior:'>
<arg declared_type64='SCNPhysicsBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allBehaviors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='contactDelegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='contactTestBetweenBody:andBody:options:'>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='0' name='bodyA' type64='@'/>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='1' name='bodyB' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='contactTestWithBody:options:'>
<arg declared_type64='SCNPhysicsBody * _Nonnull' index='0' name='body' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='convexSweepTestWithShape:fromTransform:toTransform:options:'>
<arg declared_type64='SCNPhysicsShape * _Nonnull' index='0' name='shape' type64='@'/>
<arg declared_type64='SCNMatrix4' index='1' name='from' type64='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type64='SCNMatrix4' index='2' name='to' type64='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='gravity'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='rayTestWithSegmentFromPoint:toPoint:options:'>
<arg declared_type64='SCNVector3' index='0' name='origin' type64='{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3' index='1' name='dest' type64='{SCNVector3=fff}'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='removeAllBehaviors'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeBehavior:'>
<arg declared_type64='SCNPhysicsBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContactDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='contactDelegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGravity:'>
<arg declared_type64='SCNVector3' index='0' name='gravity' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type64='CGFloat' index='0' name='speed' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeStep:'>
<arg declared_type64='NSTimeInterval' index='0' name='timeStep' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speed'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='timeStep'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='updateCollisionPairs'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNPlane'>
<method selector='cornerRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='cornerSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='height'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='planeWithWidth:height:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='height' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setCornerRadius:'>
<arg declared_type64='CGFloat' index='0' name='cornerRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCornerSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='cornerSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type64='CGFloat' index='0' name='height' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='heightSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidthSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='widthSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='width'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='widthSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='SCNProgram'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='fragmentFunctionName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='fragmentShader'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='handleBindingOfBufferNamed:frequency:usingBlock:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='SCNBufferFrequency' index='1' name='frequency' type64='q'/>
<arg declared_type64='SCNBufferBindingBlock _Nonnull' function_pointer='true' index='2' name='block' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' type64='@'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<arg declared_type64='SCNRenderer * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isOpaque'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='library'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='program'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='semanticForSymbol:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='symbol' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFragmentFunctionName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='fragmentFunctionName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFragmentShader:'>
<arg declared_type64='NSString * _Nullable' index='0' name='fragmentShader' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLibrary:'>
<arg declared_type64='id _Nullable' index='0' name='library' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpaque:'>
<arg declared_type64='BOOL' index='0' name='opaque' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSemantic:forSymbol:options:'>
<arg declared_type64='NSString * _Nullable' index='0' name='semantic' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='symbol' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVertexFunctionName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='vertexFunctionName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVertexShader:'>
<arg declared_type64='NSString * _Nullable' index='0' name='vertexShader' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='vertexFunctionName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='vertexShader'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='SCNPyramid'>
<method selector='height'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='length'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lengthSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='pyramidWithWidth:height:length:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='height' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='length' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setHeight:'>
<arg declared_type64='CGFloat' index='0' name='height' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='heightSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLength:'>
<arg declared_type64='CGFloat' index='0' name='length' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLengthSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='lengthSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidthSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='widthSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='width'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='widthSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='SCNReferenceNode'>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='referenceURL' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='load'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='loadingPolicy'>
<retval declared_type64='SCNReferenceLoadingPolicy' type64='q'/>
</method>
<method class_method='true' selector='referenceNodeWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='referenceURL' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='referenceURL'>
<retval declared_type64='NSURL * _Nonnull' type64='@'/>
</method>
<method selector='setLoadingPolicy:'>
<arg declared_type64='SCNReferenceLoadingPolicy' index='0' name='loadingPolicy' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReferenceURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='referenceURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unload'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNRenderer'>
<method selector='nextFrameTime'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method selector='renderAtTime:'>
<arg declared_type64='CFTimeInterval' index='0' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderAtTime:viewport:commandBuffer:passDescriptor:'>
<arg declared_type64='CFTimeInterval' index='0' name='time' type64='d'/>
<arg declared_type64='CGRect' index='1' name='viewport' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='id _Nonnull' index='2' name='commandBuffer' type64='@'/>
<arg declared_type64='MTLRenderPassDescriptor * _Nonnull' index='3' name='renderPassDescriptor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderWithViewport:commandBuffer:passDescriptor:'>
<arg declared_type64='CGRect' index='0' name='viewport' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='id _Nonnull' index='1' name='commandBuffer' type64='@'/>
<arg declared_type64='MTLRenderPassDescriptor * _Nonnull' index='2' name='renderPassDescriptor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='rendererWithContext:options:'>
<arg declared_type64='EAGLContext * _Nullable' index='0' name='context' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='rendererWithDevice:options:'>
<arg declared_type64='id _Nullable' index='0' name='device' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='scene'>
<retval declared_type64='SCNScene * _Nullable' type64='@'/>
</method>
<method selector='setScene:'>
<arg declared_type64='SCNScene * _Nullable' index='0' name='scene' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='snapshotAtTime:withSize:antialiasingMode:'>
<arg declared_type64='CFTimeInterval' index='0' name='time' type64='d'/>
<arg declared_type64='CGSize' index='1' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='SCNAntialiasingMode' index='2' name='antialiasingMode' type64='Q'/>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method selector='updateAtTime:'>
<arg declared_type64='CFTimeInterval' index='0' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateProbes:atTime:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='lightProbes' type64='@'/>
<arg declared_type64='CFTimeInterval' index='1' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='SCNReplicatorConstraint'>
<method selector='orientationOffset'>
<retval declared_type64='SCNQuaternion' type64='{SCNVector4=ffff}'/>
</method>
<method selector='positionOffset'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='replicatesOrientation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='replicatesPosition'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='replicatesScale'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='replicatorConstraintWithTarget:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='scaleOffset'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='setOrientationOffset:'>
<arg declared_type64='SCNQuaternion' index='0' name='orientationOffset' type64='{SCNVector4=ffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPositionOffset:'>
<arg declared_type64='SCNVector3' index='0' name='positionOffset' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReplicatesOrientation:'>
<arg declared_type64='BOOL' index='0' name='replicatesOrientation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReplicatesPosition:'>
<arg declared_type64='BOOL' index='0' name='replicatesPosition' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReplicatesScale:'>
<arg declared_type64='BOOL' index='0' name='replicatesScale' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScaleOffset:'>
<arg declared_type64='SCNVector3' index='0' name='scaleOffset' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
</class>
<class name='SCNScene'>
<method selector='addParticleSystem:withTransform:'>
<arg declared_type64='SCNParticleSystem * _Nonnull' index='0' name='system' type64='@'/>
<arg declared_type64='SCNMatrix4' index='1' name='transform' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='attributeForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='background'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='fogColor'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='fogDensityExponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='fogEndDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='fogStartDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='isPaused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lightingEnvironment'>
<retval declared_type64='SCNMaterialProperty * _Nonnull' type64='@'/>
</method>
<method selector='particleSystems'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='physicsWorld'>
<retval declared_type64='SCNPhysicsWorld * _Nonnull' type64='@'/>
</method>
<method selector='removeAllParticleSystems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeParticleSystem:'>
<arg declared_type64='SCNParticleSystem * _Nonnull' index='0' name='system' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rootNode'>
<retval declared_type64='SCNNode * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='scene'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sceneNamed:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='sceneNamed:inDirectory:options:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='directory' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='sceneWithMDLAsset:'>
<arg declared_type64='MDLAsset * _Nonnull' index='0' name='mdlAsset' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sceneWithURL:options:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='screenSpaceReflectionMaximumDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='screenSpaceReflectionSampleCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='screenSpaceReflectionStride'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAttribute:forKey:'>
<arg declared_type64='id _Nullable' index='0' name='attribute' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFogColor:'>
<arg declared_type64='id _Nonnull' index='0' name='fogColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFogDensityExponent:'>
<arg declared_type64='CGFloat' index='0' name='fogDensityExponent' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFogEndDistance:'>
<arg declared_type64='CGFloat' index='0' name='fogEndDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFogStartDistance:'>
<arg declared_type64='CGFloat' index='0' name='fogStartDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPaused:'>
<arg declared_type64='BOOL' index='0' name='paused' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScreenSpaceReflectionMaximumDistance:'>
<arg declared_type64='CGFloat' index='0' name='screenSpaceReflectionMaximumDistance' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScreenSpaceReflectionSampleCount:'>
<arg declared_type64='NSInteger' index='0' name='screenSpaceReflectionSampleCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScreenSpaceReflectionStride:'>
<arg declared_type64='CGFloat' index='0' name='screenSpaceReflectionStride' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWantsScreenSpaceReflection:'>
<arg declared_type64='BOOL' index='0' name='wantsScreenSpaceReflection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='wantsScreenSpaceReflection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeToURL:options:delegate:progressHandler:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='delegate' type64='@'/>
<arg declared_type64='SCNSceneExportProgressHandler _Nullable' function_pointer='true' index='3' name='progressHandler' type64='@?'>
<arg declared_type64='float' type64='f'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='SCNSceneSource'>
<method selector='data'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='entriesPassingTest:'>
<arg declared_type64='BOOL (^ _Nonnull)(id _Nonnull, NSString * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='0' name='predicate' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<arg declared_type64='NSString * _Nonnull' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='entryWithIdentifier:withClass:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='uid' type64='@'/>
<arg declared_type64='Class _Nonnull' index='1' name='entryClass' type64='#'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='identifiersOfEntriesWithClass:'>
<arg declared_type64='Class _Nonnull' index='0' name='entryClass' type64='#'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='initWithData:options:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='propertyForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='sceneSourceWithData:options:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='sceneSourceWithURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='sceneWithOptions:error:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='SCNScene * _Nullable' type64='@'/>
</method>
<method selector='sceneWithOptions:statusHandler:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='options' type64='@'/>
<arg declared_type64='SCNSceneSourceStatusHandler _Nullable' function_pointer='true' index='1' name='statusHandler' type64='@?'>
<arg declared_type64='float' type64='f'/>
<arg declared_type64='SCNSceneSourceStatus' type64='q'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='SCNScene * _Nullable' type64='@'/>
</method>
<method selector='url'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
</class>
<class name='SCNShape'>
<method selector='chamferMode'>
<retval declared_type64='SCNChamferMode' type64='q'/>
</method>
<method selector='chamferProfile'>
<retval declared_type64='UIBezierPath * _Nullable' type64='@'/>
</method>
<method selector='chamferRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='extrusionDepth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='path'>
<retval declared_type64='UIBezierPath * _Nullable' type64='@'/>
</method>
<method selector='setChamferMode:'>
<arg declared_type64='SCNChamferMode' index='0' name='chamferMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setChamferProfile:'>
<arg declared_type64='UIBezierPath * _Nullable' index='0' name='chamferProfile' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setChamferRadius:'>
<arg declared_type64='CGFloat' index='0' name='chamferRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtrusionDepth:'>
<arg declared_type64='CGFloat' index='0' name='extrusionDepth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPath:'>
<arg declared_type64='UIBezierPath * _Nullable' index='0' name='path' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='shapeWithPath:extrusionDepth:'>
<arg declared_type64='UIBezierPath * _Nullable' index='0' name='path' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='extrusionDepth' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNSkinner'>
<method selector='baseGeometry'>
<retval declared_type64='SCNGeometry * _Nullable' type64='@'/>
</method>
<method selector='baseGeometryBindTransform'>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='boneIndices'>
<retval declared_type64='SCNGeometrySource * _Nonnull' type64='@'/>
</method>
<method selector='boneInverseBindTransforms'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='boneWeights'>
<retval declared_type64='SCNGeometrySource * _Nonnull' type64='@'/>
</method>
<method selector='bones'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setBaseGeometry:'>
<arg declared_type64='SCNGeometry * _Nullable' index='0' name='baseGeometry' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBaseGeometryBindTransform:'>
<arg declared_type64='SCNMatrix4' index='0' name='baseGeometryBindTransform' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSkeleton:'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='skeleton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='skeleton'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='skinnerWithBaseGeometry:bones:boneInverseBindTransforms:boneWeights:boneIndices:'>
<arg declared_type64='SCNGeometry * _Nullable' index='0' name='baseGeometry' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='bones' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='2' name='boneInverseBindTransforms' type64='@'/>
<arg declared_type64='SCNGeometrySource * _Nonnull' index='3' name='boneWeights' type64='@'/>
<arg declared_type64='SCNGeometrySource * _Nonnull' index='4' name='boneIndices' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNSliderConstraint'>
<method selector='collisionCategoryBitMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='offset'>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='radius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setCollisionCategoryBitMask:'>
<arg declared_type64='NSUInteger' index='0' name='collisionCategoryBitMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOffset:'>
<arg declared_type64='SCNVector3' index='0' name='offset' type64='{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type64='CGFloat' index='0' name='radius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sliderConstraint'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNSphere'>
<method selector='isGeodesic'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='radius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='segmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setGeodesic:'>
<arg declared_type64='BOOL' index='0' name='geodesic' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type64='CGFloat' index='0' name='radius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='segmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sphereWithRadius:'>
<arg declared_type64='CGFloat' index='0' name='radius' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNTechnique'>
<method selector='dictionaryRepresentation'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='handleBindingOfSymbol:usingBlock:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='symbol' type64='@'/>
<arg declared_type64='SCNBindingBlock _Nullable' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='SCNNode * _Nullable' type64='@'/>
<arg declared_type64='SCNRenderer * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='library'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type64='id _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setLibrary:'>
<arg declared_type64='id _Nullable' index='0' name='library' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setObject:forKeyedSubscript:'>
<arg declared_type64='id _Nullable' index='0' name='obj' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='techniqueBySequencingTechniques:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='techniques' type64='@'/>
<retval declared_type64='SCNTechnique * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='techniqueWithDictionary:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='dictionary' type64='@'/>
<retval declared_type64='SCNTechnique * _Nullable' type64='@'/>
</method>
</class>
<class name='SCNText'>
<method selector='alignmentMode'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='chamferProfile'>
<retval declared_type64='UIBezierPath * _Nullable' type64='@'/>
</method>
<method selector='chamferRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='containerFrame'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='extrusionDepth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='flatness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='font'>
<retval declared_type64='UIFont * _Nonnull' type64='@'/>
</method>
<method selector='isWrapped'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAlignmentMode:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='alignmentMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setChamferProfile:'>
<arg declared_type64='UIBezierPath * _Nullable' index='0' name='chamferProfile' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setChamferRadius:'>
<arg declared_type64='CGFloat' index='0' name='chamferRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContainerFrame:'>
<arg declared_type64='CGRect' index='0' name='containerFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtrusionDepth:'>
<arg declared_type64='CGFloat' index='0' name='extrusionDepth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFlatness:'>
<arg declared_type64='CGFloat' index='0' name='flatness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:'>
<arg declared_type64='UIFont * _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setString:'>
<arg declared_type64='id _Nullable' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTruncationMode:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='truncationMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWrapped:'>
<arg declared_type64='BOOL' index='0' name='wrapped' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='string'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='textWithString:extrusionDepth:'>
<arg declared_type64='id _Nullable' index='0' name='string' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='extrusionDepth' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='truncationMode'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNTimingFunction'>
<method class_method='true' selector='functionWithCAMediaTimingFunction:'>
<arg declared_type64='CAMediaTimingFunction * _Nonnull' index='0' name='caTimingFunction' type64='@'/>
<retval declared_type64='SCNTimingFunction * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='functionWithTimingMode:'>
<arg declared_type64='SCNActionTimingMode' index='0' name='timingMode' type64='q'/>
<retval declared_type64='SCNTimingFunction * _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNTorus'>
<method selector='pipeRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='pipeSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='ringRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='ringSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setPipeRadius:'>
<arg declared_type64='CGFloat' index='0' name='pipeRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPipeSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='pipeSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRingRadius:'>
<arg declared_type64='CGFloat' index='0' name='ringRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRingSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='ringSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='torusWithRingRadius:pipeRadius:'>
<arg declared_type64='CGFloat' index='0' name='ringRadius' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='pipeRadius' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNTransaction'>
<method class_method='true' selector='animationDuration'>
<retval declared_type64='CFTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='animationTimingFunction'>
<retval declared_type64='CAMediaTimingFunction * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='begin'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='commit'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='completionBlock'>
<retval declared_type64='void (^ _Nullable)(void)' function_pointer='true' type64='@?'>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method class_method='true' selector='disableActions'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='flush'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='lock'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationDuration:'>
<arg declared_type64='CFTimeInterval' index='0' name='animationDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAnimationTimingFunction:'>
<arg declared_type64='CAMediaTimingFunction * _Nullable' index='0' name='animationTimingFunction' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setCompletionBlock:'>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='0' name='completionBlock' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setDisableActions:'>
<arg declared_type64='BOOL' index='0' name='disableActions' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setValue:forKey:'>
<arg declared_type64='id _Nullable' index='0' name='value' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='unlock'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='valueForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='SCNTransformConstraint'>
<method class_method='true' selector='orientationConstraintInWorldSpace:withBlock:'>
<arg declared_type64='BOOL' index='0' name='world' type64='B'/>
<arg declared_type64='SCNQuaternion (^ _Nonnull)(SCNNode * _Nonnull, SCNQuaternion)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='SCNNode * _Nonnull' type64='@'/>
<arg declared_type64='SCNQuaternion' type64='{SCNVector4=ffff}'/>
<retval declared_type64='SCNQuaternion' type64='{SCNVector4=ffff}'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='positionConstraintInWorldSpace:withBlock:'>
<arg declared_type64='BOOL' index='0' name='world' type64='B'/>
<arg declared_type64='SCNVector3 (^ _Nonnull)(SCNNode * _Nonnull, SCNVector3)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='SCNNode * _Nonnull' type64='@'/>
<arg declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='transformConstraintInWorldSpace:withBlock:'>
<arg declared_type64='BOOL' index='0' name='world' type64='B'/>
<arg declared_type64='SCNMatrix4 (^ _Nonnull)(SCNNode * _Nonnull, SCNMatrix4)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='SCNNode * _Nonnull' type64='@'/>
<arg declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type64='SCNMatrix4' type64='{SCNMatrix4=ffffffffffffffff}'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNTube'>
<method selector='height'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='innerRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='outerRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='radialSegmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setHeight:'>
<arg declared_type64='CGFloat' index='0' name='height' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='heightSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInnerRadius:'>
<arg declared_type64='CGFloat' index='0' name='innerRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOuterRadius:'>
<arg declared_type64='CGFloat' index='0' name='outerRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRadialSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='radialSegmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='tubeWithInnerRadius:outerRadius:height:'>
<arg declared_type64='CGFloat' index='0' name='innerRadius' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='outerRadius' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='height' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='SCNView'>
<method selector='allowsCameraControl'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='antialiasingMode'>
<retval declared_type64='SCNAntialiasingMode' type64='Q'/>
</method>
<method selector='cameraControlConfiguration'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='defaultCameraController'>
<retval declared_type64='SCNCameraController * _Nonnull' type64='@'/>
</method>
<method selector='eaglContext'>
<retval declared_type64='EAGLContext * _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:options:'>
<arg declared_type64='CGRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='pause:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='play:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preferredFramesPerSecond'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='rendersContinuously'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='scene'>
<retval declared_type64='SCNScene * _Nullable' type64='@'/>
</method>
<method selector='setAllowsCameraControl:'>
<arg declared_type64='BOOL' index='0' name='allowsCameraControl' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAntialiasingMode:'>
<arg declared_type64='SCNAntialiasingMode' index='0' name='antialiasingMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEaglContext:'>
<arg declared_type64='EAGLContext * _Nullable' index='0' name='eaglContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredFramesPerSecond:'>
<arg declared_type64='NSInteger' index='0' name='preferredFramesPerSecond' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRendersContinuously:'>
<arg declared_type64='BOOL' index='0' name='rendersContinuously' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScene:'>
<arg declared_type64='SCNScene * _Nullable' index='0' name='scene' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='snapshot'>
<retval declared_type64='UIImage * _Nonnull' type64='@'/>
</method>
<method selector='stop:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<informal_protocol name='SCNActionable'>
<method selector='actionForKey:' type64='@24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='SCNAction * _Nullable' type64='@'/>
</method>
<method selector='actionKeys' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='hasActions' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeActionForKey:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAllActions' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runAction:' type64='v24@0:8@16'>
<arg declared_type64='SCNAction * _Nonnull' index='0' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runAction:completionHandler:' type64='v32@0:8@16@?24'>
<arg declared_type64='SCNAction * _Nonnull' index='0' name='action' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runAction:forKey:' type64='v32@0:8@16@24'>
<arg declared_type64='SCNAction * _Nonnull' index='0' name='action' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runAction:forKey:completionHandler:' type64='v40@0:8@16@24@?32'>
<arg declared_type64='SCNAction * _Nonnull' index='0' name='action' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='key' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='2' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNAnimatable'>
<method selector='addAnimation:forKey:' type64='v32@0:8@16@24'>
<arg declared_type64='id _Nonnull' index='0' name='animation' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addAnimationPlayer:forKey:' type64='v32@0:8@16@24'>
<arg declared_type64='SCNAnimationPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationForKey:' type64='@24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CAAnimation * _Nullable' type64='@'/>
</method>
<method selector='animationKeys' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='animationPlayerForKey:' type64='@24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='SCNAnimationPlayer * _Nullable' type64='@'/>
</method>
<method selector='isAnimationForKeyPaused:' type64='B24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pauseAnimationForKey:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAllAnimations' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAnimationForKey:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAnimationForKey:blendOutDuration:' type64='v32@0:8@16d24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAnimationForKey:fadeOutDuration:' type64='v32@0:8@16d24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resumeAnimationForKey:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpeed:forAnimationKey:' type64='v32@0:8d16@24'>
<arg declared_type64='CGFloat' index='0' name='speed' type64='d'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNAvoidOccluderConstraintDelegate'>
<method selector='avoidOccluderConstraint:didAvoidOccluder:forNode:' type64='v40@0:8@16@24@32'>
<arg declared_type64='SCNAvoidOccluderConstraint * _Nonnull' index='0' name='constraint' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' index='1' name='occluder' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' index='2' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='avoidOccluderConstraint:shouldAvoidOccluder:forNode:' type64='B40@0:8@16@24@32'>
<arg declared_type64='SCNAvoidOccluderConstraint * _Nonnull' index='0' name='constraint' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' index='1' name='occluder' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' index='2' name='node' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='SCNBoundingVolume'>
<method selector='getBoundingBoxMin:max:' type64='B32@0:8^{SCNVector3=fff}16^{SCNVector3=fff}24'>
<arg declared_type64='SCNVector3 * _Nullable' index='0' name='min' type64='^{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3 * _Nullable' index='1' name='max' type64='^{SCNVector3=fff}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='getBoundingSphereCenter:radius:' type64='B32@0:8^{SCNVector3=fff}16^d24'>
<arg declared_type64='SCNVector3 * _Nullable' index='0' name='center' type64='^{SCNVector3=fff}'/>
<arg declared_type64='CGFloat * _Nullable' index='1' name='radius' type64='^d'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setBoundingBoxMin:max:' type64='v32@0:8^{SCNVector3=fff}16^{SCNVector3=fff}24'>
<arg declared_type64='SCNVector3 * _Nullable' index='0' name='min' type64='^{SCNVector3=fff}'/>
<arg declared_type64='SCNVector3 * _Nullable' index='1' name='max' type64='^{SCNVector3=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNBufferStream'>
<method selector='writeBytes:length:' type64='v32@0:8r^v16Q24'>
<arg const='true' declared_type64='void * _Nonnull' index='0' name='bytes' type64='^v'/>
<arg declared_type64='NSUInteger' index='1' name='length' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNCameraControlConfiguration'>
<method selector='allowsTranslation' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autoSwitchToFreeCamera' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='flyModeVelocity' type64='d16@0:8'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='panSensitivity' type64='d16@0:8'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='rotationSensitivity' type64='d16@0:8'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAllowsTranslation:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='allowsTranslation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoSwitchToFreeCamera:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='autoSwitchToFreeCamera' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFlyModeVelocity:' type64='v24@0:8d16'>
<arg declared_type64='CGFloat' index='0' name='flyModeVelocity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPanSensitivity:' type64='v24@0:8d16'>
<arg declared_type64='CGFloat' index='0' name='panSensitivity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRotationSensitivity:' type64='v24@0:8d16'>
<arg declared_type64='CGFloat' index='0' name='rotationSensitivity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTruckSensitivity:' type64='v24@0:8d16'>
<arg declared_type64='CGFloat' index='0' name='truckSensitivity' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='truckSensitivity' type64='d16@0:8'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</informal_protocol>
<informal_protocol name='SCNCameraControllerDelegate'>
<method selector='cameraInertiaDidEndForController:' type64='v24@0:8@16'>
<arg declared_type64='SCNCameraController * _Nonnull' index='0' name='cameraController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cameraInertiaWillStartForController:' type64='v24@0:8@16'>
<arg declared_type64='SCNCameraController * _Nonnull' index='0' name='cameraController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNNodeRendererDelegate'>
<method selector='renderNode:renderer:arguments:' type64='v40@0:8@16@24@32'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='SCNRenderer * _Nonnull' index='1' name='renderer' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='arguments' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNPhysicsContactDelegate'>
<method selector='physicsWorld:didBeginContact:' type64='v32@0:8@16@24'>
<arg declared_type64='SCNPhysicsWorld * _Nonnull' index='0' name='world' type64='@'/>
<arg declared_type64='SCNPhysicsContact * _Nonnull' index='1' name='contact' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='physicsWorld:didEndContact:' type64='v32@0:8@16@24'>
<arg declared_type64='SCNPhysicsWorld * _Nonnull' index='0' name='world' type64='@'/>
<arg declared_type64='SCNPhysicsContact * _Nonnull' index='1' name='contact' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='physicsWorld:didUpdateContact:' type64='v32@0:8@16@24'>
<arg declared_type64='SCNPhysicsWorld * _Nonnull' index='0' name='world' type64='@'/>
<arg declared_type64='SCNPhysicsContact * _Nonnull' index='1' name='contact' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNProgramDelegate'>
<method selector='program:handleError:' type64='v32@0:8@16@24'>
<arg declared_type64='SCNProgram * _Nonnull' index='0' name='program' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNSceneExportDelegate'>
<method selector='writeImage:withSceneDocumentURL:originalImageURL:' type64='@40@0:8@16@24@32'>
<arg declared_type64='UIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='documentURL' type64='@'/>
<arg declared_type64='NSURL * _Nullable' index='2' name='originalImageURL' type64='@'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='SCNSceneRenderer'>
<method selector='audioEngine' type64='@16@0:8'>
<retval declared_type64='AVAudioEngine * _Nonnull' type64='@'/>
</method>
<method selector='audioEnvironmentNode' type64='@16@0:8'>
<retval declared_type64='AVAudioEnvironmentNode * _Nonnull' type64='@'/>
</method>
<method selector='audioListener' type64='@16@0:8'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
<method selector='autoenablesDefaultLighting' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='colorPixelFormat' type64='Q16@0:8'>
<retval declared_type64='MTLPixelFormat' type64='Q'/>
</method>
<method selector='commandQueue' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='context' type64='^v16@0:8'>
<retval declared_type64='void * _Nullable' type64='^v'/>
</method>
<method selector='currentRenderCommandEncoder' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='currentRenderPassDescriptor' type64='@16@0:8'>
<retval declared_type64='MTLRenderPassDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='currentViewport' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='debugOptions' type64='Q16@0:8'>
<retval declared_type64='SCNDebugOptions' type64='Q'/>
</method>
<method selector='delegate' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='depthPixelFormat' type64='Q16@0:8'>
<retval declared_type64='MTLPixelFormat' type64='Q'/>
</method>
<method selector='device' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='hitTest:options:' type64='@40@0:8{CGPoint=dd}16@32'>
<arg declared_type64='CGPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='isJitteringEnabled' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isNodeInsideFrustum:withPointOfView:' type64='B32@0:8@16@24'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='SCNNode * _Nonnull' index='1' name='pointOfView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlaying' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTemporalAntialiasingEnabled' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loops' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='nodesInsideFrustumWithPointOfView:' type64='@24@0:8@16'>
<arg declared_type64='SCNNode * _Nonnull' index='0' name='pointOfView' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='overlaySKScene' type64='@16@0:8'>
<retval declared_type64='SKScene * _Nullable' type64='@'/>
</method>
<method selector='pointOfView' type64='@16@0:8'>
<retval declared_type64='SCNNode * _Nullable' type64='@'/>
</method>
<method selector='prepareObject:shouldAbortBlock:' type64='B32@0:8@16@?24'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<arg declared_type64='BOOL (^ _Nullable)(void)' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prepareObjects:withCompletionHandler:' type64='v32@0:8@16@?24'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentScene:withTransition:incomingPointOfView:completionHandler:' type64='v48@0:8@16@24@32@?40'>
<arg declared_type64='SCNScene * _Nonnull' index='0' name='scene' type64='@'/>
<arg declared_type64='SKTransition * _Nonnull' index='1' name='transition' type64='@'/>
<arg declared_type64='SCNNode * _Nullable' index='2' name='pointOfView' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='projectPoint:' type64='{SCNVector3=fff}28@0:8{SCNVector3=fff}16'>
<arg declared_type64='SCNVector3' index='0' name='point' type64='{SCNVector3=fff}'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='renderingAPI' type64='Q16@0:8'>
<retval declared_type64='SCNRenderingAPI' type64='Q'/>
</method>
<method selector='scene' type64='@16@0:8'>
<retval declared_type64='SCNScene * _Nullable' type64='@'/>
</method>
<method selector='sceneTime' type64='d16@0:8'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='setAudioListener:' type64='v24@0:8@16'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='audioListener' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoenablesDefaultLighting:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='autoenablesDefaultLighting' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDebugOptions:' type64='v24@0:8Q16'>
<arg declared_type64='SCNDebugOptions' index='0' name='debugOptions' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setJitteringEnabled:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='jitteringEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLoops:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='loops' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOverlaySKScene:' type64='v24@0:8@16'>
<arg declared_type64='SKScene * _Nullable' index='0' name='overlaySKScene' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaying:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='playing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPointOfView:' type64='v24@0:8@16'>
<arg declared_type64='SCNNode * _Nullable' index='0' name='pointOfView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScene:' type64='v24@0:8@16'>
<arg declared_type64='SCNScene * _Nullable' index='0' name='scene' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSceneTime:' type64='v24@0:8d16'>
<arg declared_type64='NSTimeInterval' index='0' name='sceneTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsStatistics:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='showsStatistics' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTemporalAntialiasingEnabled:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='temporalAntialiasingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesReverseZ:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='usesReverseZ' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsStatistics' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stencilPixelFormat' type64='Q16@0:8'>
<retval declared_type64='MTLPixelFormat' type64='Q'/>
</method>
<method selector='unprojectPoint:' type64='{SCNVector3=fff}28@0:8{SCNVector3=fff}16'>
<arg declared_type64='SCNVector3' index='0' name='point' type64='{SCNVector3=fff}'/>
<retval declared_type64='SCNVector3' type64='{SCNVector3=fff}'/>
</method>
<method selector='usesReverseZ' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='SCNSceneRendererDelegate'>
<method selector='renderer:didApplyAnimationsAtTime:' type64='v32@0:8@16d24'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderer:didApplyConstraintsAtTime:' type64='v32@0:8@16d24'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderer:didRenderScene:atTime:' type64='v40@0:8@16@24d32'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='SCNScene * _Nonnull' index='1' name='scene' type64='@'/>
<arg declared_type64='NSTimeInterval' index='2' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderer:didSimulatePhysicsAtTime:' type64='v32@0:8@16d24'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderer:updateAtTime:' type64='v32@0:8@16d24'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderer:willRenderScene:atTime:' type64='v40@0:8@16@24d32'>
<arg declared_type64='id _Nonnull' index='0' name='renderer' type64='@'/>
<arg declared_type64='SCNScene * _Nonnull' index='1' name='scene' type64='@'/>
<arg declared_type64='NSTimeInterval' index='2' name='time' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNShadable'>
<method selector='handleBindingOfSymbol:usingBlock:' type64='v32@0:8@16@?24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='symbol' type64='@'/>
<arg declared_type64='SCNBindingBlock _Nullable' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='SCNNode * _Nullable' type64='@'/>
<arg declared_type64='SCNRenderer * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='handleUnbindingOfSymbol:usingBlock:' type64='v32@0:8@16@?24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='symbol' type64='@'/>
<arg declared_type64='SCNBindingBlock _Nullable' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='SCNNode * _Nullable' type64='@'/>
<arg declared_type64='SCNRenderer * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='program' type64='@16@0:8'>
<retval declared_type64='SCNProgram * _Nullable' type64='@'/>
</method>
<method selector='setProgram:' type64='v24@0:8@16'>
<arg declared_type64='SCNProgram * _Nullable' index='0' name='program' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShaderModifiers:' type64='v24@0:8@16'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='shaderModifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shaderModifiers' type64='@16@0:8'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='SCNTechniqueSupport'>
<method selector='setTechnique:' type64='v24@0:8@16'>
<arg declared_type64='SCNTechnique * _Nullable' index='0' name='technique' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='technique' type64='@16@0:8'>
<retval declared_type64='SCNTechnique * _Nullable' type64='@'/>
</method>
</informal_protocol>
</signatures>
